{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell",
"pid": 25649,
"tg": 1978578,
"te": 2683315,
"pps": [
{
"tb": 72,
"tbk": 1,
"tl": 694984,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10
]
},
{
"tb": 512,
"tbk": 1,
"tl": 3138,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
12,
13,
14,
15,
16,
17,
18,
19
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 400228,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
20,
21,
22,
23,
24,
25,
26
]
},
{
"tb": 512,
"tbk": 1,
"tl": 17,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
20,
21,
22,
27,
28,
29,
30
]
},
{
"tb": 32,
"tbk": 1,
"tl": 70,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
31,
32,
33,
34,
35,
36,
37,
38,
39
]
},
{
"tb": 160,
"tbk": 1,
"tl": 4597,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
42,
43,
44,
45,
46
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2676893,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
47,
48,
49,
50,
51,
52,
53,
54
]
},
{
"tb": 80,
"tbk": 1,
"tl": 2676768,
"mb": 80,
"mbk": 1,
"gb": 80,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
55,
56,
57,
58,
59,
60,
61,
62,
63
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1869,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
64,
65,
66,
67,
68,
69,
70,
71
]
},
{
"tb": 10240,
"tbk": 1,
"tl": 4605,
"mb": 10240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
72,
73,
74,
75,
76,
77,
78,
79,
46
]
},
{
"tb": 96,
"tbk": 1,
"tl": 2654042,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
80,
81,
82,
83,
84,
85,
86,
87,
88
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 18161,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
20,
21,
22,
23,
89,
90,
91
]
},
{
"tb": 24,
"tbk": 1,
"tl": 132,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
92,
93,
94,
95,
96,
97,
29
]
},
{
"tb": 144,
"tbk": 1,
"tl": 5636,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
98,
99,
100,
101,
102,
103,
104,
105,
106,
107
]
},
{
"tb": 480,
"tbk": 4,
"tl": 4935,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
108,
109,
110,
111,
112,
113,
114
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1926,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
115,
116,
117,
118,
119,
120,
121,
122,
123
]
},
{
"tb": 32,
"tbk": 1,
"tl": 6223,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
124,
125,
126,
127,
128,
129,
130,
46
]
},
{
"tb": 1920,
"tbk": 8,
"tl": 1161,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
131,
132,
133,
134,
135
]
},
{
"tb": 512,
"tbk": 1,
"tl": 114,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
136,
137,
138,
139,
140,
141,
142
]
},
{
"tb": 960,
"tbk": 4,
"tl": 167,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
131,
132,
133,
143,
144
]
},
{
"tb": 512,
"tbk": 1,
"tl": 5637,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
145,
146,
147,
148,
107
]
},
{
"tb": 2097152,
"tbk": 32,
"tl": 385918,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
149,
150,
151,
152,
153,
154,
155,
156
]
},
{
"tb": 7808,
"tbk": 2,
"tl": 300,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
20,
21,
22,
23,
157,
158,
159
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 34049,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
72,
73,
74,
160,
161,
162,
163,
164,
107
]
},
{
"tb": 2304,
"tbk": 8,
"tl": 2567,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
166,
167,
168,
169,
170,
171
]
},
{
"tb": 7680,
"tbk": 1,
"tl": 2676743,
"mb": 7680,
"mbk": 1,
"gb": 7680,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
115,
172,
173,
174,
175,
176,
177,
178,
179
]
},
{
"tb": 160,
"tbk": 1,
"tl": 4543,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
180,
181,
182,
183,
184,
185,
186,
187,
188
]
},
{
"tb": 96,
"tbk": 1,
"tl": 10,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
189,
190,
191,
192,
193
]
},
{
"tb": 6072,
"tbk": 11,
"tl": 1796,
"mb": 2208,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
194,
195,
196,
197,
198,
199
]
},
{
"tb": 492755,
"tbk": 7,
"tl": 6391,
"mb": 328070,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
200,
201,
202,
203,
204
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
108,
205,
206,
207,
208,
209,
210,
211,
212,
213,
214
]
},
{
"tb": 7808,
"tbk": 2,
"tl": 260,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
136,
137,
138,
139,
140,
141,
215
]
},
{
"tb": 384,
"tbk": 1,
"tl": 455603,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
216,
217,
218,
219,
220,
221,
222,
223,
224
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1016,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
225,
226,
227,
228,
229,
230,
231,
232,
233,
234
]
},
{
"tb": 62464,
"tbk": 2,
"tl": 793,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
136,
137,
138,
139,
140,
141,
235
]
},
{
"tb": 240,
"tbk": 2,
"tl": 461173,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
92,
236,
237,
107,
238
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
92,
239,
240,
30
]
},
{
"tb": 16,
"tbk": 1,
"tl": 100,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
92,
241,
242,
243,
244,
245,
246
]
},
{
"tb": 16,
"tbk": 1,
"tl": 86,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
92,
241,
247,
243,
248,
97,
29
]
},
{
"tb": 256,
"tbk": 1,
"tl": 463,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
225,
249,
250,
251,
252,
253,
254,
255
]
},
{
"tb": 7808,
"tbk": 2,
"tl": 784,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
136,
137,
138,
139,
140,
141,
256
]
},
{
"tb": 7680,
"tbk": 1,
"tl": 670580,
"mb": 7680,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
115,
257,
258,
259,
260,
261,
262,
263,
264,
265
]
},
{
"tb": 480,
"tbk": 4,
"tl": 154,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
108,
109,
110,
111,
112,
266,
267
]
},
{
"tb": 17382,
"tbk": 10,
"tl": 3230,
"mb": 8704,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
108,
109,
268,
269,
270,
271,
272
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 157903,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
124,
125,
126,
127,
273,
274,
275,
276
]
},
{
"tb": 32704,
"tbk": 9,
"tl": 33,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
131,
132,
133,
277,
278
]
},
{
"tb": 7808,
"tbk": 61,
"tl": 59,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
20,
21,
22,
279,
280,
281,
282
]
},
{
"tb": 16320,
"tbk": 8,
"tl": 4276,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
131,
132,
133,
283,
284
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1010,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
72,
73,
74,
160,
161,
162,
285,
233,
234
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 3477,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
20,
21,
22,
279,
286,
287,
288
]
},
{
"tb": 163872,
"tbk": 33,
"tl": 55038,
"mb": 163840,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
72,
73,
74,
75,
76,
77,
289,
260,
261,
262,
290
]
},
{
"tb": 96,
"tbk": 1,
"tl": 70332,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
189,
190,
191,
291,
292
]
},
{
"tb": 2344,
"tbk": 13,
"tl": 44,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
225,
226,
227,
228,
293,
294,
295,
296,
297,
298
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
108,
205,
206,
207,
208,
209,
210,
211,
212,
299,
300
]
},
{
"tb": 2097152,
"tbk": 32,
"tl": 175433,
"mb": 2097152,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
72,
73,
74,
75,
76,
77,
289,
260,
261,
262,
301
]
},
{
"tb": 83886080,
"tbk": 16384,
"tl": 56516,
"mb": 5120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
72,
73,
74,
160,
161,
162,
302,
303,
304
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1956702,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
305,
306,
307,
308,
309,
310,
311,
312,
313
]
},
{
"tb": 83886080,
"tbk": 40,
"tl": 33512348,
"mb": 83886080,
"mbk": 40,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
314,
315,
316,
317,
318,
319,
320,
321
]
},
{
"tb": 16,
"tbk": 1,
"tl": 102,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
92,
241,
247,
243,
244,
245,
246
]
},
{
"tb": 73728,
"tbk": 2,
"tl": 9016,
"mb": 73728,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
124,
125,
126,
127,
273,
322,
323,
324
]
},
{
"tb": 72,
"tbk": 1,
"tl": 4683,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
92,
325,
326,
107,
238
]
},
{
"tb": 48,
"tbk": 1,
"tl": 55105,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
327,
328,
329,
330,
331,
332,
333
]
},
{
"tb": 96,
"tbk": 1,
"tl": 11,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
92,
334,
335,
336,
107,
238
]
},
{
"tb": 51584,
"tbk": 236,
"tl": 115465,
"mb": 11520,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
124,
337,
338,
339,
340,
341,
342,
343,
344
]
},
{
"tb": 512,
"tbk": 1,
"tl": 55101,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
327,
328,
329,
330,
345,
332,
333
]
},
{
"tb": 96,
"tbk": 1,
"tl": 4259,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
189,
190,
191,
291,
284
]
},
{
"tb": 5120,
"tbk": 1,
"tl": 2589,
"mb": 5120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
327,
328,
329,
330,
346,
347,
348
]
},
{
"tb": 7584,
"tbk": 59,
"tl": 223471,
"mb": 7584,
"mbk": 59,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
124,
125,
126,
127,
128,
349,
350,
281
]
},
{
"tb": 256,
"tbk": 1,
"tl": 412,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
225,
249,
250,
251,
252,
253,
351,
352
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 25,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
72,
73,
74,
75,
76,
77,
78,
353,
107
]
},
{
"tb": 512,
"tbk": 1,
"tl": 20,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
72,
73,
74,
75,
76,
77,
354,
355,
29
]
},
{
"tb": 16320,
"tbk": 8,
"tl": 70351,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
131,
132,
133,
283,
292
]
},
{
"tb": 288,
"tbk": 1,
"tl": 5661,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
356,
357,
358,
359,
324
]
},
{
"tb": 472,
"tbk": 2,
"tl": 450,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
225,
249,
250,
251,
252,
253,
360,
361
]
},
{
"tb": 16,
"tbk": 1,
"tl": 5,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
92,
241,
247,
335,
336,
107,
238
]
},
{
"tb": 1416,
"tbk": 2,
"tl": 7752,
"mb": 1416,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
64,
65,
66,
67,
68,
350,
281,
282
]
},
{
"tb": 163840,
"tbk": 32,
"tl": 59297,
"mb": 163840,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
72,
73,
74,
160,
161,
162,
362,
363,
364
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
108,
205,
206,
207,
208,
209,
210,
211,
212,
299,
214
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2680,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
72,
73,
74,
160,
161,
162,
365,
46,
30
]
},
{
"tb": 24,
"tbk": 1,
"tl": 689953,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
366,
367,
368,
369,
370,
107,
238
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
92,
241,
242,
335,
336,
107,
238
]
},
{
"tb": 24,
"tbk": 1,
"tl": 127572,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
371,
372,
373,
374,
375,
376,
377,
378,
379
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2652097,
"mb": 1024,
"mbk": 1,
"gb": 1024,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
380,
381,
382,
383,
384,
385,
386,
387
]
},
{
"tb": 48,
"tbk": 2,
"tl": 922351,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
388,
389,
390,
391,
392,
393,
394,
395,
396,
397
]
},
{
"tb": 16,
"tbk": 1,
"tl": 88613,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
398,
399,
400,
401,
402,
403,
404,
405,
406
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 63836,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
136,
137,
138,
139,
140,
141,
407
]
},
{
"tb": 192,
"tbk": 1,
"tl": 4556,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
408,
409,
410,
411,
29
]
},
{
"tb": 7808,
"tbk": 2,
"tl": 1143,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
314,
412,
413,
414,
415,
416,
417,
418,
419
]
},
{
"tb": 216,
"tbk": 1,
"tl": 2652108,
"mb": 216,
"mbk": 1,
"gb": 216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
420,
421,
422,
423,
424,
425,
426,
427,
428
]
},
{
"tb": 32,
"tbk": 1,
"tl": 49,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
31,
429,
430,
431,
432,
433,
434,
435,
436
]
},
{
"tb": 36864,
"tbk": 2,
"tl": 4725,
"mb": 36864,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
20,
21,
22,
23,
437,
438,
324
]
},
{
"tb": 96,
"tbk": 1,
"tl": 1790,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
439,
440,
441,
442,
298
]
},
{
"tb": 73728,
"tbk": 2,
"tl": 8470,
"mb": 73728,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
124,
125,
126,
127,
273,
443,
444,
445
]
},
{
"tb": 2344,
"tbk": 13,
"tl": 315,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
225,
226,
227,
228,
293,
294,
295,
446,
253,
351
]
},
{
"tb": 1152,
"tbk": 4,
"tl": 136,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
447,
448,
449,
450,
451
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
92,
452,
453,
214,
454,
107,
238
]
},
{
"tb": 128,
"tbk": 1,
"tl": 3680,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
455,
456,
457,
458,
70
]
},
{
"tb": 8,
"tbk": 1,
"tl": 813,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
225,
459,
460,
461,
462,
463,
464,
465,
466
]
},
{
"tb": 512,
"tbk": 1,
"tl": 45,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
467,
468,
469,
470,
471,
472,
473,
474
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2568,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
475,
476,
477,
478,
479,
480,
481,
482,
483
]
},
{
"tb": 24,
"tbk": 1,
"tl": 7,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
115,
257,
258,
259,
260,
261,
262,
290,
484,
454
]
},
{
"tb": 512,
"tbk": 1,
"tl": 9,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
72,
73,
74,
75,
76,
77,
485,
486,
107
]
},
{
"tb": 24,
"tbk": 1,
"tl": 689938,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
487,
488,
489,
490,
491,
107,
238
]
},
{
"tb": 1088,
"tbk": 2,
"tl": 31,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
492,
493,
494,
495,
496,
497
]
},
{
"tb": 34807,
"tbk": 12,
"tl": 90655,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
200,
201,
202,
203,
498
]
},
{
"tb": 96,
"tbk": 1,
"tl": 6216,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
124,
125,
126,
127,
128,
499,
130,
46
]
},
{
"tb": 10240,
"tbk": 1,
"tl": 4548,
"mb": 10240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
72,
73,
74,
75,
76,
77,
500,
501,
502
]
},
{
"tb": 196608,
"tbk": 3,
"tl": 16948,
"mb": 196608,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
72,
73,
74,
75,
76,
77,
289,
260,
261,
262,
503
]
},
{
"tb": 64,
"tbk": 1,
"tl": 144,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
131,
132,
133,
504,
144
]
},
{
"tb": 163840,
"tbk": 1,
"tl": 3914,
"mb": 163840,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
108,
205,
505,
506,
507,
508,
509,
298,
326
]
},
{
"tb": 512,
"tbk": 1,
"tl": 123,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
72,
73,
74,
160,
161,
162,
510,
95,
96
]
},
{
"tb": 32,
"tbk": 1,
"tl": 192127,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
108,
109,
110,
111,
112,
511,
107
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1747303,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
305,
512,
513,
514,
515,
516,
517,
518,
519
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1902,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
20,
21,
22,
520,
521,
29,
30
]
},
{
"tb": 32,
"tbk": 1,
"tl": 119,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
92,
239,
522,
523,
524,
525,
526
]
},
{
"tb": 96,
"tbk": 1,
"tl": 29,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
92,
334,
243,
248,
97,
29,
30
]
},
{
"tb": 512,
"tbk": 1,
"tl": 150,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
72,
73,
74,
75,
76,
77,
527,
528,
529
]
},
{
"tb": 32,
"tbk": 1,
"tl": 18,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
20,
21,
22,
279,
530,
531,
46
]
},
{
"tb": 512,
"tbk": 1,
"tl": 9,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
532,
533,
534,
535,
536,
537,
538,
539
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1373,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
124,
540,
541,
542,
543,
544,
267,
164
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 815105,
"mb": 524288,
"mbk": 1,
"gb": 524288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
124,
125,
126,
127,
273,
545,
304,
546
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1377,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
64,
65,
66,
67,
547,
267,
164,
107
]
},
{
"tb": 1968,
"tbk": 8,
"tl": 809,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
225,
548,
549,
550,
551,
552,
553,
554,
555
]
},
{
"tb": 1952,
"tbk": 2,
"tl": 8028,
"mb": 1952,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
124,
540,
541,
542,
543,
556,
281,
282
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1160,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
20,
21,
22,
557,
355,
29,
30
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1155,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
20,
21,
22,
558,
355,
29,
30
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2654029,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
40,
559,
560,
561,
562,
563,
564,
565,
566,
567,
568
]
},
{
"tb": 576,
"tbk": 2,
"tl": 44,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
569,
570,
571,
572,
573,
574,
575,
576,
577
]
},
{
"tb": 1968,
"tbk": 2,
"tl": 53,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
578,
579,
580,
581,
582,
583
]
},
{
"tb": 96,
"tbk": 1,
"tl": 9,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
189,
190,
191,
584,
46
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1323,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
108,
109,
110,
111,
112,
585,
509
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 63858,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
136,
137,
138,
139,
140,
141,
586
]
},
{
"tb": 48,
"tbk": 2,
"tl": 911181,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
388,
389,
390,
391,
392,
393,
394,
395,
587,
588
]
},
{
"tb": 10485760,
"tbk": 320,
"tl": 856146033,
"mb": 10485760,
"mbk": 320,
"gb": 10485760,
"gbk": 320,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
20,
21,
22,
23,
589,
590,
591
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 2651915,
"mb": 65536,
"mbk": 1,
"gb": 65536,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
20,
21,
22,
23,
592,
593,
594
]
},
{
"tb": 128,
"tbk": 1,
"tl": 1895,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
595,
596,
597,
598,
599,
600,
601,
602
]
},
{
"tb": 256,
"tbk": 1,
"tl": 386189,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
225,
249,
250,
251,
603,
604,
237,
107
]
},
{
"tb": 48,
"tbk": 1,
"tl": 168269,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
115,
605,
606,
607,
608,
609,
610,
611,
612
]
},
{
"tb": 960,
"tbk": 8,
"tl": 1492,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
613,
614,
615,
616,
617
]
},
{
"tb": 32,
"tbk": 1,
"tl": 199,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
92,
618,
193,
107,
238
]
},
{
"tb": 256,
"tbk": 2,
"tl": 679,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
619,
620,
621,
622,
623
]
},
{
"tb": 984,
"tbk": 2,
"tl": 1645588,
"mb": 960,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
624,
625,
626,
627,
628,
629,
630,
631,
632
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 6296,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
380,
381,
382,
383,
384,
385,
633,
634
]
},
{
"tb": 56,
"tbk": 1,
"tl": 1732,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
92,
635,
71,
46,
30
]
},
{
"tb": 10241,
"tbk": 1,
"tl": 78,
"mb": 10241,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
108,
205,
206,
207,
208,
636,
637,
638,
639,
640,
641
]
},
{
"tb": 42304,
"tbk": 793,
"tl": 113629,
"mb": 9024,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
200,
642,
643,
644,
645,
646,
647
]
},
{
"tb": 26060,
"tbk": 19,
"tl": 11237,
"mb": 13056,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
108,
109,
268,
269,
270,
271,
648
]
},
{
"tb": 10240,
"tbk": 2,
"tl": 91469,
"mb": 5120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
136,
137,
138,
139,
140,
141,
649
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2653966,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
650,
651,
652,
653,
654,
655,
454,
107
]
},
{
"tb": 48,
"tbk": 2,
"tl": 102,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
92,
656,
657,
658,
659,
660,
661
]
},
{
"tb": 512,
"tbk": 1,
"tl": 36343,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
327,
328,
329,
330,
662,
336,
107
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
559,
560,
561,
562,
563,
564,
565,
566,
663,
46
]
},
{
"tb": 1416,
"tbk": 2,
"tl": 1338,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
64,
65,
66,
67,
547,
623,
664,
486
]
},
{
"tb": 32,
"tbk": 2,
"tl": 455858,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
665,
666,
667,
668,
669,
670,
671,
672
]
},
{
"tb": 96,
"tbk": 1,
"tl": 3750,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
108,
109,
673,
674,
675,
676,
509
]
},
{
"tb": 8,
"tbk": 1,
"tl": 15,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
225,
677,
678,
679,
680,
681,
682,
683,
684
]
},
{
"tb": 16,
"tbk": 1,
"tl": 461187,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
72,
73,
74,
75,
76,
77,
685,
686,
237
]
},
{
"tb": 163840,
"tbk": 1,
"tl": 4067,
"mb": 163840,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
108,
205,
505,
506,
507,
687,
509,
298,
326
]
},
{
"tb": 896,
"tbk": 6,
"tl": 6342,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
131,
132,
133,
688,
689
]
},
{
"tb": 65536,
"tbk": 2,
"tl": 336414,
"mb": 65536,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
72,
73,
74,
160,
161,
162,
690,
691,
692
]
},
{
"tb": 10240,
"tbk": 1,
"tl": 35,
"mb": 10240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
20,
21,
22,
279,
693,
531,
46
]
},
{
"tb": 1824,
"tbk": 4,
"tl": 1321,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
694,
695,
696,
697,
698,
699
]
},
{
"tb": 24,
"tbk": 1,
"tl": 126,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
115,
700,
701,
702,
703,
704,
705,
706,
707
]
},
{
"tb": 72,
"tbk": 3,
"tl": 16872,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
388,
389,
390,
391,
392,
393,
394,
395,
708,
102,
103,
104
]
},
{
"tb": 96,
"tbk": 1,
"tl": 25,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
189,
190,
191,
709,
355
]
},
{
"tb": 48,
"tbk": 2,
"tl": 67,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
92,
710,
657,
658,
659,
660,
661
]
},
{
"tb": 480,
"tbk": 4,
"tl": 461174,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
108,
109,
110,
111,
112,
711,
712
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1644,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
225,
713,
714,
715,
716,
717,
718,
719,
720
]
},
{
"tb": 8416,
"tbk": 32,
"tl": 68694,
"mb": 8416,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
124,
125,
126,
127,
128,
349,
721,
288
]
},
{
"tb": 960,
"tbk": 8,
"tl": 2674,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
613,
614,
615,
616,
722
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 1203,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
108,
109,
110,
111,
112,
723,
253
]
},
{
"tb": 51072,
"tbk": 112,
"tl": 21397,
"mb": 16872,
"mbk": 37,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
694,
695,
696,
724,
725,
726
]
},
{
"tb": 2097152,
"tbk": 4096,
"tl": 8780,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
72,
73,
74,
75,
76,
77,
727,
728,
729
]
},
{
"tb": 24,
"tbk": 1,
"tl": 461190,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
388,
389,
390,
391,
392,
393,
394,
395,
686,
237
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
92,
452,
453,
300,
30
]
},
{
"tb": 4416,
"tbk": 8,
"tl": 2056,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
194,
195,
196,
730,
731,
732
]
},
{
"tb": 216,
"tbk": 1,
"tl": 6304,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
420,
733,
734,
735,
736,
737,
738,
739,
740
]
},
{
"tb": 10485760,
"tbk": 320,
"tl": 595290242,
"mb": 10485760,
"mbk": 320,
"gb": 10485760,
"gbk": 320,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
72,
73,
74,
75,
76,
77,
741,
742,
743
]
},
{
"tb": 7808,
"tbk": 61,
"tl": 51,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
744,
745,
746,
747,
748,
749,
750,
751
]
},
{
"tb": 7680,
"tbk": 1,
"tl": 1961559,
"mb": 7680,
"mbk": 1,
"gb": 7680,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
115,
752,
753,
754,
755,
756,
757,
758,
759
]
},
{
"tb": 72,
"tbk": 1,
"tl": 5662,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
115,
257,
258,
259,
260,
261,
262,
503,
106,
107
]
},
{
"tb": 256,
"tbk": 1,
"tl": 10,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
225,
226,
227,
228,
229,
230,
231,
760,
486,
107
]
},
{
"tb": 2352,
"tbk": 17,
"tl": 34,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
225,
226,
227,
228,
293,
294,
295,
296,
623,
664
]
},
{
"tb": 512,
"tbk": 1,
"tl": 15,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
20,
21,
22,
23,
157,
761,
28
]
},
{
"tb": 24,
"tbk": 1,
"tl": 689943,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
115,
762,
763,
764,
765,
107,
238
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 191346,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
136,
137,
138,
139,
140,
141,
766
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1682,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
225,
767,
768,
769,
770,
771,
772,
773,
774
]
},
{
"tb": 96,
"tbk": 1,
"tl": 192137,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
189,
190,
191,
775,
107
]
},
{
"tb": 384,
"tbk": 2,
"tl": 69,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
776,
777,
778,
779,
780,
781,
782,
783,
784
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 2651978,
"mb": 16384,
"mbk": 1,
"gb": 16384,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
20,
21,
22,
23,
592,
785,
786
]
},
{
"tb": 83886080,
"tbk": 1,
"tl": 858709,
"mb": 83886080,
"mbk": 1,
"gb": 83886080,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
314,
315,
316,
317,
318,
787,
788,
789
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 386180,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
20,
21,
22,
23,
592,
790,
791
]
},
{
"tb": 32,
"tbk": 1,
"tl": 192132,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
108,
109,
110,
111,
112,
792,
107
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 34159,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
20,
21,
22,
23,
793,
794,
795
]
},
{
"tb": 1600,
"tbk": 8,
"tl": 141,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
796,
797,
798,
799,
800,
801
]
},
{
"tb": 131104,
"tbk": 3,
"tl": 2341,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
20,
21,
22,
23,
802,
803,
804
]
},
{
"tb": 10272,
"tbk": 3,
"tl": 287677,
"mb": 10272,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
805,
806,
807,
808,
809,
810,
811,
812
]
},
{
"tb": 163840,
"tbk": 1,
"tl": 2545,
"mb": 163840,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
20,
21,
22,
279,
286,
813,
70
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2595,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
814,
815,
816,
817,
818,
819,
820,
821,
822
]
},
{
"tb": 96,
"tbk": 1,
"tl": 29,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
189,
190,
191,
823,
355
]
},
{
"tb": 2344,
"tbk": 13,
"tl": 44,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
225,
226,
227,
228,
293,
294,
295,
296,
267,
164
]
},
{
"tb": 7808,
"tbk": 2,
"tl": 972,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
314,
315,
316,
317,
824,
664,
486,
107
]
},
{
"tb": 256,
"tbk": 1,
"tl": 5344,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
225,
226,
227,
228,
293,
294,
295,
825,
106,
107
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 1900,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
124,
826,
827,
828,
829,
830,
831,
832,
833
]
},
{
"tb": 16,
"tbk": 1,
"tl": 57,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
398,
834,
835,
836,
837,
838,
839,
840,
107,
238
]
},
{
"tb": 2293760,
"tbk": 35,
"tl": 16128973,
"mb": 2293760,
"mbk": 35,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
20,
21,
22,
23,
841,
842,
843
]
},
{
"tb": 48,
"tbk": 1,
"tl": 260,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
92,
844,
193,
107,
238
]
},
{
"tb": 960,
"tbk": 8,
"tl": 194,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
108,
109,
110,
111,
112,
266,
623
]
},
{
"tb": 96,
"tbk": 1,
"tl": 4941,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
189,
190,
191,
845,
282
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2652365,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
846,
847,
848,
849,
850,
851,
852,
853
]
},
{
"tb": 2288,
"tbk": 22,
"tl": 303,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
854,
855,
856,
857,
858,
859
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 455703,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
380,
860,
861,
862,
863,
864,
865,
866,
95,
867
]
},
{
"tb": 7808,
"tbk": 2,
"tl": 9214,
"mb": 7808,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
20,
21,
22,
868,
281,
282,
46
]
},
{
"tb": 17382,
"tbk": 10,
"tl": 1936,
"mb": 8704,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
108,
109,
268,
269,
270,
271,
869
]
},
{
"tb": 4608,
"tbk": 24,
"tl": 7583,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
870,
871,
872,
873,
874,
875
]
},
{
"tb": 5120,
"tbk": 1,
"tl": 22326,
"mb": 5120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
327,
328,
329,
330,
876,
877,
878
]
},
{
"tb": 24,
"tbk": 1,
"tl": 455708,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
92,
93,
94,
95,
867,
246,
107
]
},
{
"tb": 96,
"tbk": 1,
"tl": 4580,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
879,
880,
881,
882,
29
]
},
{
"tb": 288,
"tbk": 2,
"tl": 775,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
327,
328,
329,
330,
883,
159,
233
]
},
{
"tb": 840,
"tbk": 2,
"tl": 920628,
"mb": 840,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
115,
884,
885,
886,
887,
888,
889,
890,
891
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 209357,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
20,
21,
22,
23,
592,
790,
892
]
},
{
"tb": 80,
"tbk": 1,
"tl": 455366,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
893,
894,
895,
896,
897,
898,
899,
900,
901
]
},
{
"tb": 512,
"tbk": 1,
"tl": 5228,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
20,
21,
22,
279,
902,
903,
46
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2658742,
"mb": 1024,
"mbk": 1,
"gb": 1024,
"gbk": 1,
"eb": 1024,
"ebk": 1,
"fs": [
904,
905,
906,
907,
908,
909,
910,
911,
912,
913,
914,
915,
916,
917,
918,
919,
920,
921,
922,
923,
924
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1794,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
115,
257,
258,
259,
260,
261,
262,
290,
925,
298
]
},
{
"tb": 1024,
"tbk": 5,
"tl": 910761,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
926,
927,
928,
929,
930
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1638,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
225,
931,
932,
933,
934,
935,
936,
937,
938
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4953,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
72,
73,
74,
160,
161,
162,
939,
940,
941
]
},
{
"tb": 1536,
"tbk": 8,
"tl": 2632,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
870,
871,
872,
942,
943,
944
]
},
{
"tb": 83886080,
"tbk": 1,
"tl": 134016,
"mb": 83886080,
"mbk": 1,
"gb": 83886080,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
72,
73,
74,
75,
76,
77,
945,
946,
947
]
},
{
"tb": 768,
"tbk": 1,
"tl": 5626,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
115,
257,
258,
259,
260,
261,
262,
301,
106,
107
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1594,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
64,
65,
66,
67,
547,
297,
298,
326
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1660,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
225,
948,
949,
950,
951,
952,
953,
954,
955
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 698172,
"mb": 524288,
"mbk": 1,
"gb": 524288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
124,
125,
126,
127,
273,
443,
444,
956
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 7579,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
20,
21,
22,
23,
592,
790,
957
]
},
{
"tb": 163840,
"tbk": 1,
"tl": 3984,
"mb": 163840,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
20,
21,
22,
279,
286,
958,
70
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 86,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
20,
21,
22,
23,
592,
790,
959
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 1612995,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
20,
21,
22,
23,
793,
794,
960
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 197416,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
136,
137,
138,
139,
140,
141,
961
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1654,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
225,
962,
963,
964,
965,
966,
967,
968,
969
]
},
{
"tb": 32,
"tbk": 1,
"tl": 147,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
72,
73,
74,
75,
76,
77,
970,
528,
529
]
},
{
"tb": 2352,
"tbk": 17,
"tl": 293,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
225,
226,
227,
228,
293,
294,
295,
446,
253,
360
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 7601,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
72,
73,
74,
160,
161,
162,
971,
972,
107
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 1670,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
20,
21,
22,
23,
592,
790,
973
]
},
{
"tb": 96,
"tbk": 1,
"tl": 32,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
92,
334,
243,
244,
245,
246,
107
]
},
{
"tb": 832,
"tbk": 8,
"tl": 202,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
854,
855,
856,
974,
975,
976
]
},
{
"tb": 96,
"tbk": 1,
"tl": 10,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
98,
977,
978,
979,
980,
981,
982,
983,
984
]
},
{
"tb": 36864,
"tbk": 2,
"tl": 4141,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
20,
21,
22,
23,
24,
985,
986
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1590,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
124,
540,
541,
542,
543,
544,
297,
298
]
},
{
"tb": 48,
"tbk": 1,
"tl": 670588,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
987,
988,
989,
990,
991,
992,
993,
994,
995
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1961632,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
487,
996,
997,
998,
999,
1000,
1001,
1002,
1003
]
},
{
"tb": 24,
"tbk": 2,
"tl": 4,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
108,
205,
206,
207,
208,
209,
210,
211,
212,
213,
300
]
},
{
"tb": 1952,
"tbk": 2,
"tl": 1331,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
124,
540,
541,
542,
543,
544,
623,
664
]
},
{
"tb": 10485760,
"tbk": 320,
"tl": 213829364,
"mb": 10485760,
"mbk": 320,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
72,
73,
74,
75,
76,
77,
289,
260,
261,
262,
263
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 154815,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
124,
125,
126,
127,
273,
443,
444,
1004
]
},
{
"tb": 16,
"tbk": 1,
"tl": 82,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
92,
241,
242,
243,
248,
97,
29
]
},
{
"tb": 320,
"tbk": 2,
"tl": 911173,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
1005,
1006,
1007,
1008,
588
]
},
{
"tb": 5120,
"tbk": 1,
"tl": 2584,
"mb": 5120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
327,
328,
329,
330,
1009,
347,
348
]
},
{
"tb": 488,
"tbk": 2,
"tl": 1792,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
225,
226,
227,
228,
229,
230,
231,
1010,
1011,
233
]
},
{
"tb": 64,
"tbk": 1,
"tl": 4561,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
131,
132,
133,
504,
1012
]
},
{
"tb": 512,
"tbk": 1,
"tl": 455696,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
72,
73,
74,
160,
161,
162,
510,
95,
867
]
},
{
"tb": 960,
"tbk": 4,
"tl": 4568,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
131,
132,
133,
143,
1012
]
},
{
"tb": 32,
"tbk": 1,
"tl": 74,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
108,
205,
206,
207,
208,
636,
637,
638,
1013,
640,
641
]
},
{
"tb": 2344,
"tbk": 13,
"tl": 354,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
225,
226,
227,
228,
293,
294,
295,
446,
253,
254
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 6457,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
72,
73,
74,
75,
76,
77,
78,
1014,
193
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 128,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
380,
860,
861,
862,
863,
864,
865,
866,
95,
96
]
},
{
"tb": 48,
"tbk": 1,
"tl": 127563,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
92,
1015,
1016,
1017,
1018,
1019,
1020
]
},
{
"tb": 96,
"tbk": 1,
"tl": 6912,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1021,
1022,
1023,
1024,
1025,
1026,
486,
107,
238
]
},
{
"tb": 48,
"tbk": 1,
"tl": 4248,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
20,
21,
22,
1027,
1028,
29,
30
]
},
{
"tb": 10240,
"tbk": 2,
"tl": 91461,
"mb": 5120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
136,
137,
138,
139,
140,
141,
1029
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2651993,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038
]
},
{
"tb": 128,
"tbk": 2,
"tl": 4018,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
20,
21,
22,
23,
592,
790,
1039
]
},
{
"tb": 294912,
"tbk": 2,
"tl": 9132,
"mb": 294912,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
20,
21,
22,
23,
1040,
1041,
324
]
},
{
"tb": 480,
"tbk": 4,
"tl": 158,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
108,
109,
110,
111,
112,
266,
297
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2458,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
108,
205,
505,
506,
507,
1042,
1043,
164,
107
]
},
{
"tb": 480,
"tbk": 4,
"tl": 4234,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
108,
109,
110,
111,
112,
113,
1044
]
},
{
"tb": 512,
"tbk": 1,
"tl": 28,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
20,
21,
22,
1045,
28,
29,
30
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 2215,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
124,
1046,
1047,
1048,
1049,
1050,
1051,
1052,
1053
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1956,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1054,
1055,
1056,
1057,
1058,
1059,
1060,
1061,
1062
]
},
{
"tb": 40,
"tbk": 1,
"tl": 1747326,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
1063,
1064,
1065,
1066,
1067,
1068,
1069,
1070,
1071
]
},
{
"tb": 64,
"tbk": 1,
"tl": 70327,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
131,
132,
133,
1072,
292
]
},
{
"tb": 131104,
"tbk": 3,
"tl": 2307,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
20,
21,
22,
23,
157,
1073,
803
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1065,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
189,
190,
191,
1074,
164
]
},
{
"tb": 24,
"tbk": 1,
"tl": 689948,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1075,
1076,
1077,
1078,
1079,
107,
238
]
},
{
"tb": 72,
"tbk": 3,
"tl": 64,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1080,
1081,
1082,
1083,
1084,
1085,
1086,
1087,
1088
]
},
{
"tb": 976,
"tbk": 2,
"tl": 896,
"mb": 976,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
1089,
1090,
1091,
1092,
1093,
1094,
1095,
1096
]
},
{
"tb": 512,
"tbk": 1,
"tl": 15,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
20,
21,
22,
23,
157,
1097,
355
]
},
{
"tb": 16,
"tbk": 1,
"tl": 5626,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
72,
73,
74,
75,
76,
77,
685,
708,
102,
103,
104
]
},
{
"tb": 224,
"tbk": 1,
"tl": 4945,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
1098,
1099,
1100,
1101,
282
]
},
{
"tb": 64,
"tbk": 1,
"tl": 4254,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
131,
132,
133,
1072,
284
]
},
{
"tb": 8416,
"tbk": 32,
"tl": 57528,
"mb": 8416,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
124,
125,
126,
127,
128,
349,
69,
70
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2217,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
64,
65,
66,
67,
68,
721,
288,
1102
]
}
],
"ftbl": [
"[root]",
"0x5f9a63c8e3b9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5f9a63b5ffac: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f9a63c158df: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c158df: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c158df: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c158df: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c60b4e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5f9a63c73415: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63ca12ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63ad24f7: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x5f9a63b604ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f9a63c1da3f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c1da3f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c1da3f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c1da3f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c76b1d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c71bb7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63c9f9bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63adddf7: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x5f9a63c2d7d5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c2d7d5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c2d7d5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63b97ae7: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5f9a63b32ec7: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x5f9a63abfeae: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x5f9a63ac3a1c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x5f9a63adccb7: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x5f9a63acbabc: winter_verifier::perform_verification (verifier/src/lib.rs:317:25)",
"0x5f9a63acf5da: winter_verifier::verify (verifier/src/lib.rs:111:21)",
"0x5f9a63b29822: winterfell::main (winterfell/src/main.rs:71:11)",
"0x5f9a63b5849c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f9a63c14b4f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c14b4f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c14b4f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c14b4f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c6003e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5f9a63c74035: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63ca10ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63b2974e: winterfell::main (winterfell/src/main.rs:65:26)",
"0x5f9a63ec6f79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5f9a63ec5709: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5f9a63b94a21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f9a63b94e08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f9a63c5742e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f9a63c00f07: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x5f9a63acf50b: winter_verifier::verify (verifier/src/lib.rs:109:19)",
"0x5f9a63c13ac3: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c13ac3: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c13ac3: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c13ac3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c75bd4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c7229a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63ca0654: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63b28d51: winterfell::main (winterfell/src/main.rs:22:32)",
"0x5f9a63b545cc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f9a63c17aff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c17aff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c17aff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c17aff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c754ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c72337: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63ca0e8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63b28edf: winterfell::main (winterfell/src/main.rs:28:26)",
"0x5f9a63b5fa6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f9a63c2d875: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c2d875: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c2d875: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63b07a4c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x5f9a63b02f66: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x5f9a63bf9d0d: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x5f9a63bffad4: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x5f9a63bdde08: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63bdde08: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63bdde08: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5f9a63c63b85: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5f9a63c63b85: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5f9a63c63b85: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5f9a63c2b0a6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5f9a63c00d01: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x5f9a63b5ae6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f9a63c15b29: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c15b29: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c15b29: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c15b29: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c75caa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c74084: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63ca019a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63b4324b: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x5f9a63c8ec5a: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x5f9a63d026a7: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x5f9a63be5889: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x5f9a63c8d847: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x5f9a63aa9d37: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x5f9a63ab2b7f: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x5f9a63bb3010: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:354:9)",
"0x5f9a63c92e16: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:26:25)",
"0x5f9a63acbfcc: winter_verifier::perform_verification (verifier/src/lib.rs:225:43)",
"0x5f9a63b59c1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f9a63aaa3e2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63aaa3e2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63aaa3e2: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5f9a63c63df5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5f9a63c63df5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5f9a63c63df5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5f9a63abd24b: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x5f9a63bb6e23: winter_prover::Prover::generate_proof (prover/src/lib.rs:423:33)",
"0x5f9a63bc92ee: winter_prover::Prover::prove (prover/src/lib.rs:175:37)",
"0x5f9a63e52819: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5f9a63e512e9: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5f9a63d60840: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f9a63d60aa9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f9a63d70111: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f9a63b357dc: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x5f9a63b418d8: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x5f9a63b567bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f9a63c142ef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c142ef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c142ef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c142ef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c764cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c72d15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63c9f7dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63ad08d5: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x5f9a63b53dec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f9a63c2db95: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c2db95: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c2db95: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63afe785: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5f9a63c0c997: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x5f9a63bff970: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x5f9a63b8bfe1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f9a63b950d8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f9a63c5367d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f9a63d04d94: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x5f9a63d1095d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x5f9a63ec4adc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x5f9a63ec3d6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x5f9a63ec3ae8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x5f9a63ec3ae8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x5f9a63ec3124: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5f9a63ec0d43: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x5f9a63c92f8c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:40:30)",
"0x5f9a63bb5a42: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:512:13)",
"0x5f9a63b426b2: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x5f9a63b6dc01: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f9a63b95408: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f9a63c57c54: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f9a63bba285: winter_prover::Prover::generate_proof (prover/src/lib.rs:418:17)",
"0x5f9a63c26d1f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c26d1f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c26d1f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c26d1f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c7561d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c714f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63ca034d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63ac07f7: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x5f9a63b319fe: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x5f9a63bf2b6c: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x5f9a63d10b73: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x5f9a63bde45b: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5f9a63bde45b: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5f9a63bde45b: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5f9a63bd1db3: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x5f9a63bb930a: winter_prover::Prover::generate_proof (prover/src/lib.rs:608:34)",
"0x5f9a63e89a99: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5f9a63e8c48b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5f9a63e8be51: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5f9a63e8554b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5f9a63e7fc41: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5f9a63e802c7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5f9a63e8f95b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5f9a63c2836f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c2836f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c2836f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c2836f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c7589d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c73895: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63ca0bdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63c07fe2: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:140:32)",
"0x5f9a63b581fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f9a63c1a622: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c1a622: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c1a622: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c1a622: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5f9a63c75daa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c71484: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63c8e8ea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63bfdd67: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x5f9a63b75281: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f9a63b95a38: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f9a63c5633e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f9a63be35c3: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x5f9a63bb802d: winter_prover::Prover::generate_proof (prover/src/lib.rs:524:9)",
"0x5f9a63bd080b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5f9a63bcea1d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5f9a63d42c2a: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5f9a63d3b55d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x5f9a63d41a25: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x5f9a63d3486e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x5f9a63ec5ea0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f9a63ec60d9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f9a63ec63d2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f9a63ec7159: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x5f9a63e7d01a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x5f9a63e5162a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f9a63e5432c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63e5432c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63e5432c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5f9a63e2369c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5f9a63e2369c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5f9a63e2369c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5f9a63ac8084: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x5f9a63ac7d9a: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x5f9a63b432db: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x5f9a63bf2bbd: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x5f9a63b54d9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f9a63c1de5f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c1de5f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c1de5f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c1de5f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c753cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c72e87: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63c9fe8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63ba4bcd: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:51:26)",
"0x5f9a63e89c0a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f9a63e7d61c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63e7d61c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63e7d61c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5f9a63e7d5cc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5f9a63e7d5cc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5f9a63e7d5cc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5f9a63d0fd9d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x5f9a63d195e9: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x5f9a63acbc03: winter_verifier::perform_verification (verifier/src/lib.rs:323:5)",
"0x5f9a63bf282f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x5f9a63af08b2: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:28)",
"0x5f9a63bba266: winter_prover::Prover::generate_proof (prover/src/lib.rs:417:21)",
"0x5f9a63b2927c: winterfell::main (winterfell/src/main.rs:54:17)",
"0x5f9a63b29e36: <winterfell::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (winterfell/src/main.rs:133:9)",
"0x5f9a63acf330: winter_verifier::verify (verifier/src/lib.rs:98:38)",
"0x5f9a63b2f245: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x5f9a63b2a330: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:177:13)",
"0x5f9a63bb2b72: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:371:13)",
"0x5f9a63ba4adf: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:41:22)",
"0x5f9a63aefb39: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:36)",
"0x5f9a63bba1b5: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:21)",
"0x5f9a63b2a247: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:176:13)",
"0x5f9a63c932cb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:64:9)",
"0x5f9a63c2d646: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c2d646: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c2d646: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63b08882: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x5f9a63b3746d: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x5f9a63bfe4ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x5f9a63acb636: winter_verifier::perform_verification (verifier/src/lib.rs:305:9)",
"0x5f9a63bf28a2: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x5f9a63c2ca22: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c2ca22: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c2ca22: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5f9a63c63d25: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5f9a63c63d25: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5f9a63c63d25: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5f9a63aa28cd: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x5f9a63aa1036: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5f9a63c91c48: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:300:57)",
"0x5f9a63b372b7: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x5f9a63bd1b91: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x5f9a63e4f700: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f9a63e4f939: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f9a63e4f132: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f9a63b0817c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x5f9a63b0031d: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x5f9a63b97a57: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5f9a63af24bd: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x5f9a63bc8eb8: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:716:26)",
"0x5f9a63bb7931: winter_prover::Prover::generate_proof (prover/src/lib.rs:482:37)",
"0x5f9a63aab461: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x5f9a63b4203f: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x5f9a63bdc485: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5f9a63b4ad26: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x5f9a63b4e040: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x5f9a63c00104: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x5f9a63bb43d4: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:541:17)",
"0x5f9a63acafc9: winter_verifier::perform_verification (verifier/src/lib.rs:266:61)",
"0x5f9a63d0fe04: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x5f9a63bcbefa: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x5f9a63b06356: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x5f9a63c063a7: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x5f9a63c2cd83: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5f9a63c2b0e6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5f9a63bb4350: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:543:13)",
"0x5f9a63b421b6: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x5f9a63c642d9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5f9a63c642d9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5f9a63c642d9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5f9a63b36dbc: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x5f9a63ad077b: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x5f9a63ad34b0: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x5f9a63ac7dce: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x5f9a63acf1dd: winter_verifier::verify (verifier/src/lib.rs:96:32)",
"0x5f9a63abd2c5: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x5f9a63af39d6: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x5f9a63af2e23: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x5f9a63bc76ee: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:669:26)",
"0x5f9a63b5944a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f9a63c0e539: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c0e539: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c0e539: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c0e539: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c75b7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c73b14: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63ca144a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63bb64ea: winter_prover::Prover::generate_proof (prover/src/lib.rs:272:43)",
"0x5f9a63b5a69c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f9a63c2daf5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c2daf5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c2daf5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63b97c07: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5f9a63aba237: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x5f9a63af1a29: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x5f9a63caf1d6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5f9a63cfe472: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x5f9a63b3a99f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x5f9a63b3fbc6: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x5f9a63ad341d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x5f9a63bb9217: winter_prover::Prover::generate_proof (prover/src/lib.rs:603:29)",
"0x5f9a63bde511: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63bde511: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63bde511: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5f9a63c62c80: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5f9a63aed58a: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:155:31)",
"0x5f9a63af0e25: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:128:17)",
"0x5f9a63cebc6e: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5f9a63b2a21b: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:175:9)",
"0x5f9a63c08518: winter_prover::trace::Trace::validate (src/trace/mod.rs:123:26)",
"0x5f9a63bba578: winter_prover::Prover::generate_proof (prover/src/lib.rs:379:17)",
"0x5f9a63c1269a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c1269a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c1269a: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c1269a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5f9a63c754cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c73a1a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63cfdf4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63b37243: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x5f9a63aed5e4: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:156:33)",
"0x5f9a63bf81b0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x5f9a63acf038: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:216:32)",
"0x5f9a63caee5f: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5f9a63b07cc7: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x5f9a63b4ae35: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x5f9a63bfecf0: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x5f9a63acb7a8: winter_verifier::perform_verification (verifier/src/lib.rs:306:42)",
"0x5f9a63bb74d0: winter_prover::Prover::generate_proof (prover/src/lib.rs:452:35)",
"0x5f9a63ad821f: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x5f9a63acba15: winter_verifier::perform_verification (verifier/src/lib.rs:311:25)",
"0x5f9a63b77511: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f9a63b95a08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f9a63c5340e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f9a63b3ac69: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x5f9a63bf72d4: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x5f9a63d1078d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x5f9a63ad0f56: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x5f9a63cadeb6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5f9a63cd2fbd: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5f9a63c0076e: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x5f9a63b619ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f9a63c2da55: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c2da55: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c2da55: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63bb6877: winter_prover::Prover::generate_proof (prover/src/lib.rs:306:39)",
"0x5f9a63b596dc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f9a63c1b44f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c1b44f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c1b44f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c1b44f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c7604d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c70f75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63ca141d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63bb7dcf: winter_prover::Prover::generate_proof (prover/src/lib.rs:501:51)",
"0x5f9a63b53b4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f9a63bb24c4: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63bb24c4: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63bb24c4: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5f9a63c62bf6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5f9a63b2a0ad: <winterfell::WorkAir as winter_air::air::Air>::new (winterfell/src/main.rs:151:23)",
"0x5f9a63c91f36: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:226:17)",
"0x5f9a63cac19e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5f9a63b5d06c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f9a63bddf38: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63bddf38: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63bddf38: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5f9a63c647c5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5f9a63c647c5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5f9a63c647c5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5f9a63aaa8e2: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x5f9a63ba4028: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:83:31)",
"0x5f9a63caa7af: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5f9a63b5d30c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f9a63c10b59: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c10b59: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c10b59: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c10b59: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c756ba: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c739a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63c9feea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63bb7e8c: winter_prover::Prover::generate_proof (prover/src/lib.rs:505:52)",
"0x5f9a63be30f5: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x5f9a63b797a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f9a63b95108: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f9a63c55dae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f9a63acc1eb: winter_verifier::perform_verification (verifier/src/lib.rs:184:9)",
"0x5f9a63c1070f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c1070f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c1070f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c1070f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c7527d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c73a55: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63c9f8ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63d10ac4: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x5f9a63b55d4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f9a63c1b86f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c1b86f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c1b86f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c1b86f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c7661d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c71285: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63c9fc1d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63bb5eb3: winter_prover::Prover::generate_proof (prover/src/lib.rs:222:20)",
"0x5f9a63c174cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c174cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c174cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c174cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c760dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c733d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63c9fa6d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63bb5cd2: winter_prover::Prover::generate_proof (prover/src/lib.rs:210:38)",
"0x5f9a63b452d3: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x5f9a63b3aafb: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x5f9a63b8ac21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f9a63b94dd8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f9a63c566ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f9a63ad08ec: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x5f9a63b36259: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x5f9a63b37739: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x5f9a63b3a9b6: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x5f9a63b08abb: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x5f9a63b8fb21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f9a63b95498: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f9a63c577ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f9a63b48db7: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x5f9a63bd5bae: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x5f9a63cfe14c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x5f9a63ac7e0c: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x5f9a63bb5f02: winter_prover::Prover::generate_proof (prover/src/lib.rs:233:27)",
"0x5f9a63b72611: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f9a63b95288: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f9a63c53c0b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f9a63b033c9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x5f9a63c2440d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c2440d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c2440d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c2440d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c75e4a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c736e4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63c9fd1a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63bf9ba1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x5f9a63c193bf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c193bf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c193bf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c193bf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c766cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c73e45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63ca052d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63ad84ab: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x5f9a63b6120c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f9a63c1ae49: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c1ae49: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c1ae49: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c1ae49: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c7593a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c727f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63ca001a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63acac5f: winter_verifier::perform_verification (verifier/src/lib.rs:218:40)",
"0x5f9a63b432f2: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x5f9a63b3dc29: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x5f9a63bb919c: winter_prover::Prover::generate_proof (prover/src/lib.rs:600:25)",
"0x5f9a63b57a1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f9a63c2d9b5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c2d9b5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c2d9b5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63bb6909: winter_prover::Prover::generate_proof (prover/src/lib.rs:309:32)",
"0x5f9a63bd107b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5f9a63bce28d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5f9a63d422ea: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5f9a63d1d009: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5f9a63c86a75: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5f9a63afd598: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5f9a63aab32d: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x5f9a63c0cb50: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x5f9a63c07131: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x5f9a63bdb853: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x5f9a63c8e832: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x5f9a63abd238: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x5f9a63bb5978: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:517:13)",
"0x5f9a63da8f36: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63da8f36: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63da8f36: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63b00517: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x5f9a63ad0845: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x5f9a63ab2cba: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x5f9a63bb9e8b: winter_prover::Prover::generate_proof (prover/src/lib.rs:450:13)",
"0x5f9a63c274f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c274f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c274f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c274f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c759da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c72bc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63c9feba: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63bc6fcf: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:644:36)",
"0x5f9a63ad57be: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x5f9a63acbb34: winter_verifier::perform_verification (verifier/src/lib.rs:319:28)",
"0x5f9a63c907a8: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:216:31)",
"0x5f9a63caed36: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5f9a63cccbd0: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5f9a63c9af66: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5f9a63ca28f6: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5f9a63cb2d72: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x5f9a63cb2e16: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5f9a63acbedf: winter_verifier::perform_verification (verifier/src/lib.rs:228:13)",
"0x5f9a63aac126: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x5f9a63c00c15: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5f9a63c144ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c144ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c144ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c144ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c76d3d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c715f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63ca121d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63adcff2: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x5f9a63afec84: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63afec84: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63afec84: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5f9a63c62c56: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5f9a63b36a4c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x5f9a63af2d9a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x5f9a63bb6511: winter_prover::Prover::generate_proof (prover/src/lib.rs:274:13)",
"0x5f9a63b36aaf: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x5f9a63e8c9e9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63e8c9e9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63e8c9e9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63e8c9e9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5f9a63e8ce2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63e8cdf7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63e8cfce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63e8f4c9: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x5f9a63b4ab3e: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x5f9a63ad86df: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x5f9a63ad86fe: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x5f9a63ec59ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f9a63ec704c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63ec704c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63ec704c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5f9a63ec4c7c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5f9a63ec4c7c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5f9a63ec4c7c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5f9a63ec0ece: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x5f9a63ac829f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x5f9a63b43df3: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x5f9a63b5777c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f9a63c1bbf2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c1bbf2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c1bbf2: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c1bbf2: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5f9a63c76b7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c71c35: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63c9f8cd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63bd5a6a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x5f9a63bcfa8b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5f9a63bcee3d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5f9a63d4278a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5f9a63d1d2a9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5f9a63c85bc8: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5f9a63c84195: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x5f9a63c00e5f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x5f9a63b00999: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x5f9a63be30d2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x5f9a63ba6d5a: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:170:36)",
"0x5f9a63ba534f: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:55:17)",
"0x5f9a63c081b0: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:140:51)",
"0x5f9a63ca9476: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5f9a63aa7fc1: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5f9a63b31e2f: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x5f9a63afe428: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x5f9a63bb6132: winter_prover::Prover::generate_proof (prover/src/lib.rs:262:22)",
"0x5f9a63c27d2f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c27d2f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c27d2f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c27d2f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c7556d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c72125: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63ca098d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63d0fd29: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x5f9a63ac3a78: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x5f9a63af0be1: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:135:9)",
"0x5f9a63c1118f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c1118f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c1118f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c1118f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c75ccd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c72cd7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63ca050d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63c95aa0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x5f9a63e8a0f0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f9a63e7e669: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f9a63e7de51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f9a63e7d950: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x5f9a63b3de24: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x5f9a63be34ab: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x5f9a63b922a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f9a63b95a98: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f9a63c5591b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f9a63b370fa: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x5f9a63b393c0: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x5f9a63b5bb7c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f9a63c1519f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c1519f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c1519f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c1519f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c7654d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c73355: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63ca0ddd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63af11b1: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x5f9a63ad003b: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:102:85)",
"0x5f9a63caca6e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5f9a63bf9e73: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x5f9a63dad9e9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5f9a63dad9e9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5f9a63dad9e9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5f9a63bce09a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x5f9a63aaca26: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5f9a63c00714: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5f9a63ec6108: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x5f9a63ec64ca: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x5f9a63ec64ca: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x5f9a63ec626e: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x5f9a63ec626e: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x5f9a63ec635d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x5f9a63b4a3b5: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x5f9a63a9d88c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x5f9a63b5432c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f9a63aacaea: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63aacaea: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63aacaea: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5f9a63c62ca6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5f9a63b43508: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x5f9a63aa9388: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x5f9a63bd655c: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x5f9a63c84129: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x5f9a63bd5b36: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x5f9a63bd9296: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x5f9a63bb2bcf: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:369:9)",
"0x5f9a63c089a5: winter_prover::trace::Trace::validate (src/trace/mod.rs:179:13)",
"0x5f9a63bff370: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x5f9a63b3e0bd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x5f9a63c210ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c210ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c210ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c210ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c7544d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c71625: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63ca013d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63aa9d28: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x5f9a63da20b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f9a63da4d69: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f9a63dac322: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f9a63b0065f: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x5f9a63c10033: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c10033: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c10033: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c10033: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c769ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c73545: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63ca0fdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63bb66db: winter_prover::Prover::generate_proof (prover/src/lib.rs:293:23)",
"0x5f9a63aaa8f5: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x5f9a63af0973: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:33)",
"0x5f9a63b0007a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x5f9a63c8e4e2: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x5f9a63ac7c98: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x5f9a63c95b0a: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x5f9a63cac7a8: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5f9a63b31114: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x5f9a63aabf63: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x5f9a63bcf72b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5f9a63bcef9d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5f9a63d4269a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5f9a63d1d1e9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5f9a63c8715b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5f9a63afd6eb: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5f9a63c113a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c113a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c113a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c113a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c7648a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c71fc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63ca0a3a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63bb5d8f: winter_prover::Prover::generate_proof (prover/src/lib.rs:214:39)",
"0x5f9a63aaa750: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5f9a63ad9325: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x5f9a63aa94f5: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x5f9a63ac741f: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x5f9a63ac5a15: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x5f9a63c1658d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c1658d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c1658d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c1658d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c75d7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c71d34: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63ca030a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63bff733: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x5f9a63b06547: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x5f9a63d105ed: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x5f9a63b09c4b: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x5f9a63d2ff7b: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5f9a63d3a1a9: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5f9a63d34416: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5f9a63ab2106: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x5f9a63aeeac9: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:290:18)",
"0x5f9a63aed88e: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:173:30)",
"0x5f9a63d21c7d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5f9a63d24613: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5f9a63b35237: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5f9a63c1159f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c1159f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c1159f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c1159f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c610d6: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5f9a63c73bc5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63ca130d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63acf3a8: winter_verifier::verify (verifier/src/lib.rs:102:24)",
"0x5f9a63a9fa3f: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:230:34)",
"0x5f9a63ca8026: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5f9a63cce3a7: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5f9a63c1895f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c1895f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c1895f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c1895f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c76a4d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c72e15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63ca0f5d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63d167af: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x5f9a63c23abf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c23abf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c23abf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c23abf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c76e7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c73925: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63ca05dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63a9f788: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:228:23)",
"0x5f9a63b3dc0e: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x5f9a63adceb1: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x5f9a63c2d3c5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c2d3c5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c2d3c5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63bb68cd: winter_prover::Prover::generate_proof (prover/src/lib.rs:308:37)",
"0x5f9a63aba24c: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x5f9a63c1cecd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c1cecd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c1cecd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c1cecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c7609a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c71544: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63ca073a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63bff50b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x5f9a63bb9e30: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:13)",
"0x5f9a63b60f6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f9a63c2622b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c2622b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c2622b: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c2622b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5f9a63c76aad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c73955: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63b9716d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63bd7618: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x5f9a63d004f9: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x5f9a63afe37b: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x5f9a63af59bd: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x5f9a63af1c90: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x5f9a63af4614: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x5f9a63d01338: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x5f9a63ac3adb: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x5f9a63bb9e70: winter_prover::Prover::generate_proof (prover/src/lib.rs:449:13)",
"0x5f9a63af530f: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x5f9a63af4506: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x5f9a63bc8acc: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:701:36)",
"0x5f9a63e8c12b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5f9a63e8c061: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5f9a63e8546b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5f9a63e7fb71: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5f9a63e80307: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5f9a63e8f90b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5f9a63ac01bf: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x5f9a63abdac4: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x5f9a63ac1f9d: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x5f9a63c20acf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c20acf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c20acf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c20acf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c75a5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c72c45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63ca0e4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63a9f1cf: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:283:9)",
"0x5f9a63b02b8e: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x5f9a63b5503c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f9a63c17909: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c17909: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c17909: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c17909: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c76e3a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c72934: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63c9fa2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63acaba2: winter_verifier::perform_verification (verifier/src/lib.rs:214:41)",
"0x5f9a63ad92d7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x5f9a63b39499: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x5f9a63abd314: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x5f9a63c19b04: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c19b04: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c19b04: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c19b04: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5f9a63c76eaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c72d64: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63ca10da: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63b02e8d: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x5f9a63c2c328: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c2c328: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c2c328: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5f9a63c64205: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5f9a63c64205: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5f9a63c64205: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5f9a63bb7ea3: winter_prover::Prover::generate_proof (prover/src/lib.rs:510:39)",
"0x5f9a63abf440: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x5f9a63ca7db6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5f9a63aa7b11: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5f9a63be3347: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x5f9a63b4e2b9: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x5f9a63c13ecf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c13ecf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c13ecf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c13ecf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c76d5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c73da7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63ca0edd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63b290e6: winterfell::main (winterfell/src/main.rs:38:27)",
"0x5f9a63e8c2db: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5f9a63e8bfb1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5f9a63e852ab: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5f9a63e81f3e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5f9a63e83400: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5f9a63e82bf8: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5f9a63bb2012: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63bb2012: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63bb2012: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5f9a63c64b05: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5f9a63c64b05: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5f9a63c64b05: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5f9a63ab2b95: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x5f9a63aefa9c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:51:13)",
"0x5f9a63b4ab7f: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x5f9a63b04eb4: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x5f9a63e8c63b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5f9a63e8bf01: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5f9a63e8538b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5f9a63e8204e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5f9a63e839ec: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5f9a63e8255a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5f9a63c0755d: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:243:25)",
"0x5f9a63b29d94: winterfell::build_do_work_trace (winterfell/src/main.rs:91:5)",
"0x5f9a63bc960b: winterfell::main::{{closure}} (winterfell/src/main.rs:30:23)",
"0x5f9a63b7ba31: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f9a63b95048: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f9a63c5855e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f9a63acc3b2: winter_verifier::perform_verification (verifier/src/lib.rs:179:9)",
"0x5f9a63bf2921: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x5f9a63c0ef8f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c0ef8f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c0ef8f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c0ef8f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c7606d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c71f75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63c9f79d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63abf3a8: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x5f9a63a9f6e8: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:227:28)",
"0x5f9a63b5c0bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f9a63c0d6af: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c0d6af: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c0d6af: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c0d6af: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c62705: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5f9a63c7350a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63c9fb3d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63ac6891: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x5f9a63b4ee4c: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x5f9a63bfff37: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x5f9a63a77d82: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5f9a63a77d82: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f9a63a77d82: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63a77d82: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63a77d82: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63a77d82: std::io::buffered::bufwriter::BufWriter<W>::with_capacity (io/buffered/bufwriter.rs:115:33)",
"0x5f9a63a77d82: std::io::buffered::linewriter::LineWriter<W>::with_capacity (io/buffered/linewriter.rs:109:29)",
"0x5f9a63a77d82: std::io::buffered::linewriter::LineWriter<W>::new (io/buffered/linewriter.rs:89:9)",
"0x5f9a63a77d82: std::io::stdio::stdout::{{closure}} (src/io/stdio.rs:618:62)",
"0x5f9a63a77d82: std::sync::once_lock::OnceLock<T>::get_or_init::{{closure}} (src/sync/once_lock.rs:250:50)",
"0x5f9a63a77d82: std::sync::once_lock::OnceLock<T>::initialize::{{closure}} (src/sync/once_lock.rs:376:19)",
"0x5f9a63a77d82: std::sync::once::Once::call_once_force::{{closure}} (src/sync/once.rs:208:40)",
"0x5f9a63a77d82: std::sys_common::once::futex::Once::call (sys_common/once/futex.rs:124:21)",
"0x5f9a63a76eca: std::sync::once::Once::call_once_force (src/sync/once.rs:208:9)",
"0x5f9a63a76eca: std::sync::once_lock::OnceLock<T>::initialize (src/sync/once_lock.rs:375:9)",
"0x5f9a63ee11c5: std::sync::once_lock::OnceLock<T>::get_or_try_init (src/sync/once_lock.rs:298:9)",
"0x5f9a63ee11c5: std::sync::once_lock::OnceLock<T>::get_or_init (src/sync/once_lock.rs:250:15)",
"0x5f9a63ee11c5: std::io::stdio::stdout (src/io/stdio.rs:618:14)",
"0x5f9a63ee11c5: std::io::stdio::print_to (src/io/stdio.rs:1020:21)",
"0x5f9a63ee11c5: std::io::stdio::_print (src/io/stdio.rs:1097:5)",
"0x5f9a63b2903a: winterfell::main (winterfell/src/main.rs:36:5)",
"0x5f9a63ad06db: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x5f9a63b788d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f9a63b95318: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f9a63c5612d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f9a63abfaf2: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x5f9a63cebac5: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5f9a63c1f05d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c1f05d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c1f05d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c1f05d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c75dda: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c72de4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63ca01ca: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63bff7eb: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x5f9a63b3fe92: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x5f9a63b3fb2c: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x5f9a63bb8b02: winter_prover::Prover::generate_proof (prover/src/lib.rs:571:9)",
"0x5f9a63e7ee3d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5f9a63e8a748: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5f9a63e8e0a7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5f9a63af7081: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x5f9a63af5e86: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5f9a63bc712f: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:655:31)",
"0x5f9a63c1eb9d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c1eb9d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c1eb9d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c1eb9d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c752aa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c72394: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63ca0b5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63bff5c3: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x5f9a63af2e5c: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x5f9a63d00b9b: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x5f9a63b0331c: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x5f9a63b3fd52: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x5f9a63c922f8: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:651:17)",
"0x5f9a63ac1a93: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x5f9a63c289dd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c289dd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c289dd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c289dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c75c7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c72ff4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63ca086a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63bff67b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x5f9a63cb2d85: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x5f9a63d00b89: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x5f9a63bb86b8: winter_prover::Prover::generate_proof (prover/src/lib.rs:558:13)",
"0x5f9a63ac1d08: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x5f9a63e7ee9d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5f9a63e8a42b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5f9a63e8e1e3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5f9a63c0d4b9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c0d4b9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c0d4b9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c0d4b9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c758ea: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c724f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63ca039a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63ba3fe8: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:83:9)",
"0x5f9a63b44003: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x5f9a63b45210: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x5f9a63b62edc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f9a63c2525f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c2525f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c2525f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c2525f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c6218b: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5f9a63c728d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63ca056d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63bb67f7: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:36)",
"0x5f9a63c0f7f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c0f7f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c0f7f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c0f7f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c7534a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c713a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63ca113a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63bc6f12: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:640:42)",
"0x5f9a63af2572: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x5f9a63b94041: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f9a63b95018: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f9a63c538be: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f9a63ba6e9d: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:175:17)",
"0x5f9a63bf81ce: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x5f9a63e7d2c6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x5f9a63d106ca: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x5f9a63aca8e5: winter_verifier::perform_verification (verifier/src/lib.rs:185:13)",
"0x5f9a63bce0af: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x5f9a63be2cbe: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x5f9a63bad75a: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x5f9a63c91852: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:503:32)",
"0x5f9a63caedc6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5f9a63ccc93a: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5f9a63c96e27: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5f9a63ca1a22: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5f9a63e7cc69: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5f9a63e79c1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f9a63e76db6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63e76db6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63e76db6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63b3db68: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x5f9a63d18de9: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x5f9a63acb1ac: winter_verifier::perform_verification (verifier/src/lib.rs:275:24)",
"0x5f9a63a9d89d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x5f9a63b6317c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f9a63c25eef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c25eef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c25eef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c25eef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c7627d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c71c65: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63c829bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63bb6033: winter_prover::Prover::generate_proof (prover/src/lib.rs:248:41)",
"0x5f9a63b45222: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x5f9a63b9a18f: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x5f9a63b3a93d: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x5f9a63b04dac: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x5f9a63bd1d4a: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x5f9a63acb4f7: winter_verifier::perform_verification (verifier/src/lib.rs:298:27)",
"0x5f9a63adcca0: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x5f9a63c1ee94: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c1ee94: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c1ee94: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c1ee94: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5f9a63c755da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c73ec4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63ca0c5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63b0646e: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x5f9a63b5652a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f9a63c0e949: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c0e949: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c0e949: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c0e949: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c7696a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c72874: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63ca0b8a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63ad340e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x5f9a63b5a3fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f9a63c19edf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c19edf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c19edf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c19edf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c7688d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c720c5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63c9f9dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63bc708b: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:648:34)",
"0x5f9a63bb41b5: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:547:13)",
"0x5f9a63ac02ce: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x5f9a63bd1dca: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x5f9a63b60ccc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f9a63c2dc35: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c2dc35: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c2dc35: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63bb688e: winter_prover::Prover::generate_proof (prover/src/lib.rs:307:44)",
"0x5f9a63b5723c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f9a63c11bd9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c11bd9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c11bd9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c11bd9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c7600a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c73c44: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63ca0c2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63abf4b2: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x5f9a63c29e6f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f9a63c29e6f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f9a63c29e6f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f9a63c29e6f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f9a63c75ecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f9a63c71825: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f9a63ca0afd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f9a63d10c5a: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x5f9a63ad83b7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x5f9a63b826d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f9a63b957c8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f9a63c5467e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f9a63b4e216: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x5f9a63bffd54: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)"
]
}