{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell",
"pid": 26035,
"tg": 1641867,
"te": 2275355,
"pps": [
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11
]
},
{
"tb": 40960,
"tbk": 1,
"tl": 7755,
"mb": 40960,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
14,
15,
16,
17,
18,
19,
20,
21,
22
]
},
{
"tb": 73728,
"tbk": 2,
"tl": 3732,
"mb": 73728,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
23,
24,
25,
26,
27,
28,
29
]
},
{
"tb": 30720,
"tbk": 1,
"tl": 611170,
"mb": 30720,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
30,
31,
32,
33,
34,
35,
36,
37,
38,
39
]
},
{
"tb": 32,
"tbk": 1,
"tl": 147073,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
40,
41,
42,
43,
44,
45
]
},
{
"tb": 48,
"tbk": 1,
"tl": 611178,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
46,
47,
48,
49,
50,
51,
52,
53,
54
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2597,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
57,
58,
59,
60,
61,
62,
63,
64
]
},
{
"tb": 17382,
"tbk": 10,
"tl": 4883,
"mb": 8704,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
40,
65,
66,
67,
68,
69
]
},
{
"tb": 24,
"tbk": 1,
"tl": 611872,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
30,
70,
71,
72,
73,
45,
74
]
},
{
"tb": 96,
"tbk": 1,
"tl": 29,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
76,
77,
78,
79,
80,
45
]
},
{
"tb": 32,
"tbk": 1,
"tl": 147068,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
40,
41,
42,
43,
81,
45
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4923,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
14,
15,
16,
82,
83,
84,
85,
86,
87
]
},
{
"tb": 40961,
"tbk": 1,
"tl": 132,
"mb": 40961,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
88,
89,
90,
91,
92,
93
]
},
{
"tb": 83886080,
"tbk": 1,
"tl": 719514,
"mb": 83886080,
"mbk": 1,
"gb": 83886080,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
12,
94,
95,
96,
97,
98,
99,
100,
101
]
},
{
"tb": 16,
"tbk": 1,
"tl": 6,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
102,
103,
104,
105,
45,
74
]
},
{
"tb": 1800,
"tbk": 11,
"tl": 249,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
106,
107,
108,
109,
110,
111,
112,
113,
114
]
},
{
"tb": 655360,
"tbk": 1,
"tl": 6586,
"mb": 655360,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
115,
116,
117,
118,
119,
120,
121
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 388007,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
23,
24,
25,
26,
122,
123,
124
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 2217,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
125,
126,
127,
128,
129,
130,
131,
132,
133
]
},
{
"tb": 7040,
"tbk": 55,
"tl": 52,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
23,
24,
25,
134,
135,
136,
137
]
},
{
"tb": 1536,
"tbk": 8,
"tl": 2269,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
138,
139,
140,
141,
142,
143
]
},
{
"tb": 2097152,
"tbk": 1024,
"tl": 6925,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
14,
15,
16,
17,
18,
19,
144,
145,
146
]
},
{
"tb": 10485760,
"tbk": 1280,
"tl": 1964906563,
"mb": 10485760,
"mbk": 1280,
"gb": 10485760,
"gbk": 1280,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
14,
15,
16,
17,
18,
19,
147,
148,
149
]
},
{
"tb": 96,
"tbk": 1,
"tl": 11,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
76,
104,
105,
45,
74
]
},
{
"tb": 24,
"tbk": 1,
"tl": 168,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
150,
151,
152,
153,
154,
155
]
},
{
"tb": 65472,
"tbk": 10,
"tl": 68525,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
158,
159,
160,
161,
162
]
},
{
"tb": 6240,
"tbk": 32,
"tl": 74658,
"mb": 6240,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
125,
163,
164,
165,
166,
167,
168,
169
]
},
{
"tb": 40,
"tbk": 1,
"tl": 1437477,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
12,
170,
171,
172,
173,
174,
175,
176,
177,
178
]
},
{
"tb": 512,
"tbk": 1,
"tl": 2145,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
179,
180,
181,
182,
45
]
},
{
"tb": 144,
"tbk": 1,
"tl": 2137,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
183,
184,
185,
186,
187,
188,
189,
190,
191,
45
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 139925,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
125,
163,
164,
165,
192,
193,
194,
195
]
},
{
"tb": 880,
"tbk": 2,
"tl": 660,
"mb": 880,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
196,
197,
198,
199,
200,
201,
202,
203
]
},
{
"tb": 96,
"tbk": 1,
"tl": 8176,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
204,
205,
206,
207,
137
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 4376,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
115,
116,
117,
208,
209,
210,
45
]
},
{
"tb": 7040,
"tbk": 2,
"tl": 268,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
23,
24,
25,
26,
211,
212,
213
]
},
{
"tb": 1968,
"tbk": 2,
"tl": 52,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
214,
215,
216,
217,
218,
219
]
},
{
"tb": 128,
"tbk": 2,
"tl": 997,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
23,
24,
25,
26,
220,
221,
222
]
},
{
"tb": 10485760,
"tbk": 1280,
"tl": 2891955121,
"mb": 10485760,
"mbk": 1280,
"gb": 10485760,
"gbk": 1280,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
23,
24,
25,
26,
223,
224,
225
]
},
{
"tb": 48,
"tbk": 2,
"tl": 102,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
226,
227,
228,
229,
230,
231
]
},
{
"tb": 96,
"tbk": 1,
"tl": 147079,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
204,
205,
206,
232,
45
]
},
{
"tb": 96,
"tbk": 1,
"tl": 9,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
204,
205,
206,
233,
234
]
},
{
"tb": 512,
"tbk": 1,
"tl": 14,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
23,
24,
25,
26,
211,
235,
236
]
},
{
"tb": 83886080,
"tbk": 1,
"tl": 60992,
"mb": 83886080,
"mbk": 1,
"gb": 83886080,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
14,
15,
16,
17,
18,
19,
237,
238,
239
]
},
{
"tb": 16,
"tbk": 1,
"tl": 76963,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
240,
241,
242,
243,
244,
245,
246,
247,
248
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 7049,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
23,
24,
25,
26,
249,
250,
251
]
},
{
"tb": 8192,
"tbk": 1,
"tl": 1881,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
14,
15,
16,
17,
18,
19,
252,
253,
254
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2656,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
255,
256,
257,
258,
259,
260,
261,
262,
263
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 1670,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
23,
24,
25,
26,
220,
221,
264
]
},
{
"tb": 1967315,
"tbk": 7,
"tl": 11406,
"mb": 1311110,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
265,
266,
267,
268,
269
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 155,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
14,
15,
16,
82,
83,
84,
270,
152,
153
]
},
{
"tb": 2097152,
"tbk": 128,
"tl": 231505,
"mb": 2097152,
"mbk": 128,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
14,
15,
16,
17,
18,
19,
271,
34,
35,
36,
272
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2127,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
14,
15,
16,
17,
18,
19,
273,
274,
187,
188,
189
]
},
{
"tb": 288,
"tbk": 1,
"tl": 5131,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
275,
276,
277,
278,
29
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 148471,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
279,
280,
281,
282,
283,
284,
285
]
},
{
"tb": 96,
"tbk": 1,
"tl": 68465,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
204,
205,
206,
286,
162
]
},
{
"tb": 128,
"tbk": 1,
"tl": 7370,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
287,
288,
289,
290,
291
]
},
{
"tb": 216,
"tbk": 1,
"tl": 11309,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
292,
293,
294,
295,
296,
297,
298,
299,
300
]
},
{
"tb": 48,
"tbk": 1,
"tl": 137813,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
30,
301,
302,
303,
304,
305,
306,
307,
308
]
},
{
"tb": 48,
"tbk": 1,
"tl": 6122,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
309,
310,
311,
312,
313,
314,
315,
316,
317
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1927,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
40,
41,
42,
43,
318,
119
]
},
{
"tb": 512,
"tbk": 1,
"tl": 17,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
23,
24,
25,
319,
236,
155,
320
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2205,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
125,
321,
322,
323,
324,
325,
326,
120
]
},
{
"tb": 18432,
"tbk": 2,
"tl": 3555,
"mb": 18432,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
125,
163,
164,
165,
192,
327,
328,
329
]
},
{
"tb": 24,
"tbk": 1,
"tl": 611877,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
330,
331,
332,
333,
334,
45,
74
]
},
{
"tb": 96,
"tbk": 1,
"tl": 26,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
204,
205,
206,
335,
336
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 34750,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
337,
338,
339,
340,
341,
105,
45
]
},
{
"tb": 4032,
"tbk": 6,
"tl": 7785,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
158,
159,
160,
342,
343
]
},
{
"tb": 16,
"tbk": 1,
"tl": 98,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
102,
344,
77,
78,
79,
80
]
},
{
"tb": 32800,
"tbk": 3,
"tl": 614,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
23,
24,
25,
26,
345,
346,
347
]
},
{
"tb": 96,
"tbk": 1,
"tl": 8,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
204,
205,
206,
348,
254
]
},
{
"tb": 10828,
"tbk": 16,
"tl": 16238,
"mb": 5440,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
40,
65,
66,
67,
68,
349
]
},
{
"tb": 288,
"tbk": 2,
"tl": 697,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
337,
338,
339,
340,
350,
213,
351
]
},
{
"tb": 24,
"tbk": 1,
"tl": 429731,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
352,
353,
354,
355,
356,
357,
358,
359,
360,
361
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 24,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
14,
15,
16,
17,
18,
19,
252,
362,
45
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 139146,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
125,
163,
164,
165,
192,
327,
328,
363
]
},
{
"tb": 96,
"tbk": 1,
"tl": 7154,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
204,
205,
206,
286,
364
]
},
{
"tb": 56320,
"tbk": 2,
"tl": 718,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
279,
280,
281,
282,
283,
284,
365
]
},
{
"tb": 655360,
"tbk": 1,
"tl": 8486,
"mb": 655360,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
23,
24,
25,
134,
366,
367,
291
]
},
{
"tb": 96,
"tbk": 1,
"tl": 31,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
204,
205,
206,
368,
336
]
},
{
"tb": 72,
"tbk": 3,
"tl": 6374,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
352,
353,
354,
355,
356,
357,
358,
359,
274,
187,
188,
189
]
},
{
"tb": 8,
"tbk": 1,
"tl": 3433,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
369,
370,
371,
372,
373,
374,
375,
376
]
},
{
"tb": 48,
"tbk": 1,
"tl": 7142,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
23,
24,
25,
377,
378,
155,
320
]
},
{
"tb": 384,
"tbk": 1,
"tl": 427666,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
379,
380,
381,
382,
383,
384,
385,
386,
387
]
},
{
"tb": 128,
"tbk": 1,
"tl": 8,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
14,
15,
16,
17,
18,
19,
388,
389,
45
]
},
{
"tb": 1800,
"tbk": 11,
"tl": 30,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
106,
107,
108,
109,
110,
111,
390,
326,
120
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 39036,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
337,
338,
339,
340,
391,
392,
393
]
},
{
"tb": 8192,
"tbk": 1,
"tl": 384570,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
23,
24,
25,
26,
220,
221,
394
]
},
{
"tb": 128,
"tbk": 1,
"tl": 8462,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
23,
24,
25,
134,
395,
396,
234
]
},
{
"tb": 9216,
"tbk": 2,
"tl": 1203,
"mb": 9216,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
23,
24,
25,
26,
397,
398,
29
]
},
{
"tb": 1760,
"tbk": 2,
"tl": 869,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
125,
321,
322,
323,
324,
325,
399,
400
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1437454,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
12,
401,
402,
403,
404,
405,
406,
407,
408,
409
]
},
{
"tb": 32,
"tbk": 1,
"tl": 11242,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
125,
163,
164,
165,
166,
410,
411,
234
]
},
{
"tb": 655360,
"tbk": 1,
"tl": 4587,
"mb": 655360,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
23,
24,
25,
134,
366,
412,
291
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 146,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
279,
280,
281,
282,
283,
284,
413
]
},
{
"tb": 896,
"tbk": 6,
"tl": 11330,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
158,
159,
160,
414,
415
]
},
{
"tb": 2016,
"tbk": 6,
"tl": 429745,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
40,
41,
42,
43,
416,
417
]
},
{
"tb": 16384,
"tbk": 2,
"tl": 275584,
"mb": 16384,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
14,
15,
16,
82,
83,
84,
418,
419,
420
]
},
{
"tb": 512,
"tbk": 1,
"tl": 28,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
23,
24,
25,
421,
236,
155,
320
]
},
{
"tb": 96,
"tbk": 1,
"tl": 7809,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
422,
423,
424,
425,
155
]
},
{
"tb": 72,
"tbk": 1,
"tl": 620664,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
426,
427,
428,
429,
430,
431,
432,
433,
434
]
},
{
"tb": 65472,
"tbk": 10,
"tl": 7217,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
158,
159,
160,
161,
364
]
},
{
"tb": 32,
"tbk": 1,
"tl": 115,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
435,
436,
437,
438,
439,
440
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2210,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
441,
442,
443,
444,
445,
326,
120,
121
]
},
{
"tb": 128,
"tbk": 1,
"tl": 1574,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
446,
447,
448,
449,
450,
451,
452,
453
]
},
{
"tb": 96,
"tbk": 1,
"tl": 2452,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
454,
455,
456,
457,
120
]
},
{
"tb": 83886080,
"tbk": 4096,
"tl": 32080,
"mb": 20480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
14,
15,
16,
82,
83,
84,
458,
459,
460
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 2233265,
"mb": 16384,
"mbk": 1,
"gb": 16384,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
23,
24,
25,
26,
220,
461,
462
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2233301,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
12,
463,
464,
465,
466,
467,
468,
469,
470,
471
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 1376195,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
23,
24,
25,
26,
249,
250,
472
]
},
{
"tb": 30720,
"tbk": 1,
"tl": 2263679,
"mb": 30720,
"mbk": 1,
"gb": 30720,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
12,
30,
473,
474,
475,
476,
477,
478,
479,
480
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 621528,
"mb": 131072,
"mbk": 1,
"gb": 131072,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
12,
125,
163,
164,
165,
192,
327,
328,
481
]
},
{
"tb": 3144,
"tbk": 2,
"tl": 859035,
"mb": 3144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
30,
482,
483,
484,
485,
486,
487,
488,
489
]
},
{
"tb": 96,
"tbk": 1,
"tl": 10,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
183,
490,
491,
492,
493,
494,
495,
496,
497
]
},
{
"tb": 36936,
"tbk": 81,
"tl": 12564,
"mb": 13224,
"mbk": 29,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
498,
499,
500,
501,
502,
503
]
},
{
"tb": 512,
"tbk": 1,
"tl": 9,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
504,
505,
506,
507,
508,
509,
510,
511
]
},
{
"tb": 48,
"tbk": 2,
"tl": 855308,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
352,
353,
354,
355,
356,
357,
358,
359,
512,
513
]
},
{
"tb": 8192,
"tbk": 1,
"tl": 66546,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
279,
280,
281,
282,
283,
284,
514
]
},
{
"tb": 1088,
"tbk": 2,
"tl": 30,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
515,
516,
517,
518,
519,
520
]
},
{
"tb": 1920,
"tbk": 8,
"tl": 1050,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
158,
159,
160,
521,
522
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2245443,
"mb": 1024,
"mbk": 1,
"gb": 1024,
"gbk": 1,
"eb": 1024,
"ebk": 1,
"fs": [
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
533,
534,
535,
536,
537,
538,
539,
540,
541,
542,
543
]
},
{
"tb": 20480,
"tbk": 1,
"tl": 6116,
"mb": 20480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
337,
338,
339,
340,
544,
545,
546
]
},
{
"tb": 512,
"tbk": 1,
"tl": 45,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
547,
548,
549,
550,
551,
552,
553,
554
]
},
{
"tb": 256,
"tbk": 1,
"tl": 929,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
106,
107,
108,
555,
556,
557,
558,
351,
559
]
},
{
"tb": 83886080,
"tbk": 160,
"tl": 113270446,
"mb": 83886080,
"mbk": 160,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
94,
95,
96,
97,
98,
560,
561,
562
]
},
{
"tb": 960,
"tbk": 8,
"tl": 1019,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
563,
564,
565,
566,
567
]
},
{
"tb": 216,
"tbk": 1,
"tl": 2233413,
"mb": 216,
"mbk": 1,
"gb": 216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
12,
292,
568,
569,
570,
571,
572,
573,
574,
575
]
},
{
"tb": 48,
"tbk": 1,
"tl": 67,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
576,
254,
45,
74
]
},
{
"tb": 2496,
"tbk": 24,
"tl": 360,
"mb": 416,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
577,
578,
579,
580,
581,
582
]
},
{
"tb": 29312,
"tbk": 172,
"tl": 114847,
"mb": 7680,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
125,
583,
584,
585,
586,
587,
588,
589,
590
]
},
{
"tb": 1760,
"tbk": 2,
"tl": 14882,
"mb": 1760,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
125,
321,
322,
323,
324,
591,
136,
137
]
},
{
"tb": 32,
"tbk": 1,
"tl": 125,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
88,
89,
90,
592,
92,
93
]
},
{
"tb": 512,
"tbk": 1,
"tl": 16,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
23,
24,
25,
26,
211,
593,
336
]
},
{
"tb": 49152,
"tbk": 3,
"tl": 6437,
"mb": 49152,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
14,
15,
16,
17,
18,
19,
271,
34,
35,
36,
594
]
},
{
"tb": 64,
"tbk": 1,
"tl": 7767,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
158,
159,
160,
595,
343
]
},
{
"tb": 3864,
"tbk": 7,
"tl": 1436,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
596,
597,
598,
599,
600,
601
]
},
{
"tb": 32800,
"tbk": 3,
"tl": 612,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
23,
24,
25,
26,
211,
602,
346
]
},
{
"tb": 1600,
"tbk": 8,
"tl": 148,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
603,
604,
605,
606,
607,
608
]
},
{
"tb": 160,
"tbk": 1,
"tl": 7750,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
609,
610,
611,
612,
613,
614,
615,
616,
617
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1581,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
23,
24,
25,
618,
619,
155,
320
]
},
{
"tb": 96,
"tbk": 1,
"tl": 5413,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
40,
620,
621,
622,
623,
119
]
},
{
"tb": 96,
"tbk": 1,
"tl": 2237508,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
12,
624,
625,
626,
627,
628,
629,
630,
631,
632
]
},
{
"tb": 64,
"tbk": 1,
"tl": 7147,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
158,
159,
160,
633,
364
]
},
{
"tb": 17382,
"tbk": 10,
"tl": 3856,
"mb": 8704,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
40,
65,
66,
67,
68,
634
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2128,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
441,
442,
443,
444,
635,
636,
291,
637
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2234056,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
638,
639,
640,
641,
642,
643,
644,
645
]
},
{
"tb": 1152,
"tbk": 4,
"tl": 136,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
646,
647,
648,
649,
650
]
},
{
"tb": 2097152,
"tbk": 128,
"tl": 383961,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
651,
652,
653,
654,
655,
656,
657,
658
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1094,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
125,
321,
322,
323,
324,
325,
659,
210
]
},
{
"tb": 48,
"tbk": 1,
"tl": 128548,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
660,
661,
662,
663,
664,
665
]
},
{
"tb": 576,
"tbk": 2,
"tl": 44,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
666,
667,
668,
669,
670,
671,
672,
673,
674
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2403,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
441,
442,
443,
444,
635,
168,
169,
675
]
},
{
"tb": 64,
"tbk": 1,
"tl": 68458,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
158,
159,
160,
633,
162
]
},
{
"tb": 16,
"tbk": 1,
"tl": 87,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
102,
344,
77,
676,
154,
155
]
},
{
"tb": 72,
"tbk": 1,
"tl": 7289,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
677,
121,
45,
74
]
},
{
"tb": 256,
"tbk": 1,
"tl": 10,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
106,
107,
108,
555,
556,
557,
678,
389,
45
]
},
{
"tb": 32,
"tbk": 1,
"tl": 53,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
679,
254,
45,
74
]
},
{
"tb": 10485760,
"tbk": 1280,
"tl": 776731634,
"mb": 10485760,
"mbk": 1280,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
14,
15,
16,
17,
18,
19,
271,
34,
35,
36,
37
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 1680,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
14,
15,
16,
82,
83,
84,
680,
681,
45
]
},
{
"tb": 256,
"tbk": 2,
"tl": 323,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
682,
683,
684,
685,
399
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2625,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
30,
686,
687,
688,
689,
690,
691,
692,
693
]
},
{
"tb": 8192,
"tbk": 1,
"tl": 66564,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
279,
280,
281,
282,
283,
284,
694
]
},
{
"tb": 4096,
"tbk": 7,
"tl": 854198,
"mb": 2112,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
695,
696,
697,
698,
699
]
},
{
"tb": 440,
"tbk": 2,
"tl": 1511,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
106,
107,
108,
555,
556,
557,
700,
701,
351
]
},
{
"tb": 64,
"tbk": 1,
"tl": 140,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
158,
159,
160,
595,
702
]
},
{
"tb": 24,
"tbk": 1,
"tl": 128557,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
703,
704,
705,
706,
707,
708,
709,
710,
711
]
},
{
"tb": 960,
"tbk": 8,
"tl": 146,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
40,
41,
42,
43,
712,
399
]
},
{
"tb": 256,
"tbk": 1,
"tl": 337,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
713,
714,
715,
716,
113,
717,
718
]
},
{
"tb": 7040,
"tbk": 2,
"tl": 708,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
279,
280,
281,
282,
283,
284,
719
]
},
{
"tb": 33888,
"tbk": 552,
"tl": 111569,
"mb": 8640,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
265,
720,
721,
722,
723,
724,
725
]
},
{
"tb": 24,
"tbk": 1,
"tl": 611882,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
726,
727,
728,
729,
730,
45,
74
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1612518,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
12,
401,
731,
732,
733,
734,
735,
736,
737,
738
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4534,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
23,
24,
25,
739,
336,
155,
320
]
},
{
"tb": 960,
"tbk": 8,
"tl": 2159,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
563,
564,
565,
566,
740
]
},
{
"tb": 7040,
"tbk": 55,
"tl": 45,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
741,
742,
743,
744,
745,
746,
747,
748
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1491,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
106,
107,
108,
109,
110,
111,
749,
191,
45
]
},
{
"tb": 48,
"tbk": 2,
"tl": 67,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
750,
227,
228,
229,
230,
231
]
},
{
"tb": 655360,
"tbk": 32,
"tl": 81110,
"mb": 655360,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
14,
15,
16,
82,
83,
84,
751,
752,
753
]
},
{
"tb": 16,
"tbk": 1,
"tl": 429728,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
14,
15,
16,
17,
18,
19,
273,
360,
361
]
},
{
"tb": 7040,
"tbk": 2,
"tl": 232,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
279,
280,
281,
282,
283,
284,
754
]
},
{
"tb": 4288,
"tbk": 53,
"tl": 381702,
"mb": 4288,
"mbk": 53,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
125,
163,
164,
165,
166,
167,
755,
136
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2237498,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
156,
756,
757,
758,
759,
760,
761,
762,
763,
764,
765
]
},
{
"tb": 56,
"tbk": 1,
"tl": 1991,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
766,
637,
234,
320
]
},
{
"tb": 2146304,
"tbk": 131,
"tl": 56259390,
"mb": 2146304,
"mbk": 131,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
23,
24,
25,
26,
767,
768,
769
]
},
{
"tb": 9216,
"tbk": 2,
"tl": 1033,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
23,
24,
25,
26,
122,
770,
771
]
},
{
"tb": 48,
"tbk": 1,
"tl": 6064,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
772,
773,
774,
775,
776,
777,
778,
779,
780
]
},
{
"tb": 24,
"tbk": 1,
"tl": 121,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
30,
781,
782,
783,
784,
785,
786,
787,
788
]
},
{
"tb": 8,
"tbk": 1,
"tl": 15,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
789,
790,
791,
792,
793,
794,
795,
796
]
},
{
"tb": 240,
"tbk": 2,
"tl": 429714,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
797,
361,
45,
74
]
},
{
"tb": 32,
"tbk": 1,
"tl": 6230,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
14,
15,
16,
82,
83,
84,
798,
234,
320
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1098,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
441,
442,
443,
444,
445,
659,
210,
45
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
102,
344,
104,
105,
45,
74
]
},
{
"tb": 7040,
"tbk": 2,
"tl": 567,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
94,
95,
96,
97,
799,
400,
389,
45
]
},
{
"tb": 48,
"tbk": 2,
"tl": 859434,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
352,
353,
354,
355,
356,
357,
358,
359,
800,
801
]
},
{
"tb": 384,
"tbk": 2,
"tl": 68,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
802,
803,
804,
805,
806,
807,
808,
809,
810
]
},
{
"tb": 72,
"tbk": 1,
"tl": 2169,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
30,
31,
32,
33,
34,
35,
36,
594,
191,
45
]
},
{
"tb": 16,
"tbk": 1,
"tl": 90,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
102,
103,
77,
676,
154,
155
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
811,
812,
11,
813,
45,
74
]
},
{
"tb": 80,
"tbk": 1,
"tl": 2263704,
"mb": 80,
"mbk": 1,
"gb": 80,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
12,
814,
815,
816,
817,
818,
819,
820,
821,
822
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 7030,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
23,
24,
25,
134,
366,
823,
169
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2457,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
30,
31,
32,
33,
34,
35,
36,
824,
825,
120
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 807,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
204,
205,
206,
826,
210
]
},
{
"tb": 8,
"tbk": 1,
"tl": 3439,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
827,
828,
829,
830,
831,
832,
833,
834
]
},
{
"tb": 8,
"tbk": 1,
"tl": 3446,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
835,
836,
837,
838,
839,
840,
841,
842
]
},
{
"tb": 32,
"tbk": 2,
"tl": 427968,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
843,
844,
845,
846,
847,
848,
849,
850
]
},
{
"tb": 1480,
"tbk": 13,
"tl": 163,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
106,
107,
108,
109,
110,
111,
112,
113,
851
]
},
{
"tb": 30720,
"tbk": 1,
"tl": 1621148,
"mb": 30720,
"mbk": 1,
"gb": 30720,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
12,
30,
852,
853,
854,
855,
856,
857,
858,
859
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 146766,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
279,
280,
281,
282,
283,
284,
860
]
},
{
"tb": 480,
"tbk": 4,
"tl": 4891,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
40,
41,
42,
43,
861,
862
]
},
{
"tb": 96,
"tbk": 1,
"tl": 8993,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
863,
864,
865,
866,
867,
868,
389,
45,
74
]
},
{
"tb": 655360,
"tbk": 1,
"tl": 5999,
"mb": 655360,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
115,
116,
117,
869,
119,
120,
121
]
},
{
"tb": 1800,
"tbk": 11,
"tl": 30,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
106,
107,
108,
109,
110,
111,
390,
659,
210
]
},
{
"tb": 24,
"tbk": 1,
"tl": 7,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
30,
31,
32,
33,
34,
35,
36,
824,
870,
813
]
},
{
"tb": 32,
"tbk": 1,
"tl": 73,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
871,
872,
873,
874,
875,
876,
877,
878,
879
]
},
{
"tb": 1824,
"tbk": 4,
"tl": 1006,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
498,
499,
500,
880,
881,
882
]
},
{
"tb": 512,
"tbk": 1,
"tl": 6188,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
883,
884,
885,
886,
887,
888,
889,
890
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 4090,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
23,
24,
25,
26,
891,
892,
893
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 669550,
"mb": 131072,
"mbk": 1,
"gb": 131072,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
12,
125,
163,
164,
165,
192,
894,
460,
895
]
},
{
"tb": 480,
"tbk": 4,
"tl": 7127,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
40,
41,
42,
43,
861,
896
]
},
{
"tb": 80,
"tbk": 1,
"tl": 427081,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
897,
898,
899,
900,
901,
902,
903,
904,
905
]
},
{
"tb": 4032,
"tbk": 6,
"tl": 172,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
158,
159,
160,
342,
702
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
435,
906,
320
]
},
{
"tb": 224,
"tbk": 1,
"tl": 8180,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
907,
908,
909,
910,
137
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 199,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
14,
15,
16,
17,
18,
19,
911,
912,
913
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 427765,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
914,
915,
916,
917,
918,
919,
920,
921,
152,
922
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 163,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
914,
915,
916,
917,
918,
919,
920,
921,
152,
153
]
},
{
"tb": 655392,
"tbk": 33,
"tl": 75795,
"mb": 655360,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
14,
15,
16,
17,
18,
19,
271,
34,
35,
36,
824
]
},
{
"tb": 96,
"tbk": 1,
"tl": 11234,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
125,
163,
164,
165,
166,
923,
411,
234
]
},
{
"tb": 40960,
"tbk": 1,
"tl": 7835,
"mb": 40960,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
14,
15,
16,
17,
18,
19,
252,
924,
234
]
},
{
"tb": 16,
"tbk": 1,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
756,
757,
758,
759,
760,
761,
762,
763,
925,
234
]
},
{
"tb": 24,
"tbk": 1,
"tl": 427771,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
150,
151,
152,
922,
80,
45
]
},
{
"tb": 40960,
"tbk": 2,
"tl": 73803,
"mb": 20480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
279,
280,
281,
282,
283,
284,
926
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4530,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
23,
24,
25,
927,
336,
155,
320
]
},
{
"tb": 7040,
"tbk": 2,
"tl": 1034,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
94,
928,
929,
930,
931,
932,
933,
934,
935
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 11301,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
914,
936,
937,
938,
939,
940,
941,
942
]
},
{
"tb": 160,
"tbk": 1,
"tl": 7827,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
943,
944,
945,
946,
234
]
},
{
"tb": 1872,
"tbk": 8,
"tl": 828,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
947,
948,
949,
950,
951,
952,
953,
954
]
},
{
"tb": 480,
"tbk": 4,
"tl": 132,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
40,
41,
42,
43,
712,
659
]
},
{
"tb": 256,
"tbk": 1,
"tl": 374,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
713,
714,
715,
716,
113,
114,
955
]
},
{
"tb": 40960,
"tbk": 2,
"tl": 73812,
"mb": 20480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
279,
280,
281,
282,
283,
284,
956
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2263925,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
957,
958,
959,
960,
961,
962,
963,
964
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 882,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
40,
41,
42,
43,
965,
113
]
},
{
"tb": 3864,
"tbk": 2,
"tl": 1382842,
"mb": 3840,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
966,
967,
968,
969,
970,
971,
972,
973,
974
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 427756,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
14,
15,
16,
82,
83,
84,
270,
152,
922
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 2233402,
"mb": 4096,
"mbk": 1,
"gb": 4096,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
12,
914,
936,
937,
938,
939,
940,
975,
976
]
},
{
"tb": 192,
"tbk": 1,
"tl": 7763,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
977,
978,
979,
980,
155
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
981,
982
]
},
{
"tb": 1800,
"tbk": 11,
"tl": 245,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
106,
107,
108,
109,
110,
111,
112,
113,
717
]
},
{
"tb": 3864,
"tbk": 7,
"tl": 914,
"mb": 1656,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
596,
597,
598,
983,
984,
985
]
},
{
"tb": 512,
"tbk": 1,
"tl": 923,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
14,
15,
16,
82,
83,
84,
986,
351,
559
]
},
{
"tb": 40960,
"tbk": 1,
"tl": 85,
"mb": 40960,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
23,
24,
25,
134,
987,
988,
234
]
},
{
"tb": 20480,
"tbk": 1,
"tl": 22361,
"mb": 20480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
337,
338,
339,
340,
989,
990,
991
]
},
{
"tb": 8,
"tbk": 1,
"tl": 3428,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
992,
993,
994,
995,
996,
997,
998,
999
]
},
{
"tb": 40992,
"tbk": 3,
"tl": 293788,
"mb": 40992,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
1000,
1001,
1002,
1003,
1004,
1005,
1006,
1007
]
},
{
"tb": 480,
"tbk": 4,
"tl": 136,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
40,
41,
42,
43,
712,
326
]
},
{
"tb": 6240,
"tbk": 32,
"tl": 65777,
"mb": 6240,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
125,
163,
164,
165,
166,
167,
636,
291
]
},
{
"tb": 7040,
"tbk": 2,
"tl": 15956,
"mb": 7040,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
23,
24,
25,
1008,
136,
137,
234
]
},
{
"tb": 8192,
"tbk": 1,
"tl": 373,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
23,
24,
25,
26,
220,
221,
1009
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 2233287,
"mb": 4096,
"mbk": 1,
"gb": 4096,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
23,
24,
25,
26,
220,
1010,
1011
]
},
{
"tb": 3072,
"tbk": 1,
"tl": 2159,
"mb": 3072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
30,
31,
32,
33,
34,
35,
36,
272,
191,
45
]
},
{
"tb": 16,
"tbk": 1,
"tl": 145,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
240,
1012,
1013,
1014,
1015,
1016,
1017,
1018,
45,
74
]
},
{
"tb": 16,
"tbk": 1,
"tl": 100,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
102,
103,
77,
78,
79,
80
]
},
{
"tb": 832,
"tbk": 8,
"tl": 214,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
577,
578,
579,
1019,
1020,
1021
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 25788,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
14,
15,
16,
82,
83,
84,
1022,
210,
45
]
},
{
"tb": 96,
"tbk": 1,
"tl": 34,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
76,
77,
676,
154,
155,
320
]
},
{
"tb": 18432,
"tbk": 2,
"tl": 3696,
"mb": 18432,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
125,
163,
164,
165,
192,
1023,
1024,
29
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 2400,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
125,
1025,
1026,
1027,
1028,
1029,
1030,
1031,
1032
]
},
{
"tb": 424,
"tbk": 2,
"tl": 298,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
713,
714,
715,
716,
113,
851,
1033
]
},
{
"tb": 24,
"tbk": 1,
"tl": 611867,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
1034,
1035,
1036,
1037,
1038,
45,
74
]
},
{
"tb": 72,
"tbk": 3,
"tl": 74,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
1047
]
},
{
"tb": 32,
"tbk": 1,
"tl": 195,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
14,
15,
16,
17,
18,
19,
1048,
912,
913
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
982
]
},
{
"tb": 48,
"tbk": 1,
"tl": 39041,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
337,
338,
339,
340,
1049,
392,
393
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
981,
11
]
},
{
"tb": 2304,
"tbk": 8,
"tl": 2202,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
1050,
1051,
1052,
1053,
1054,
1055
]
},
{
"tb": 131008,
"tbk": 11,
"tl": 85,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
158,
159,
160,
1056,
1057
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 384579,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
713,
714,
715,
1058,
1059,
361,
45
]
},
{
"tb": 512,
"tbk": 1,
"tl": 26,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
23,
24,
25,
26,
220,
221,
1060
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 175034,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
23,
24,
25,
26,
220,
221,
1061
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
811,
812,
982,
320
]
},
{
"tb": 20480,
"tbk": 1,
"tl": 6106,
"mb": 20480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
337,
338,
339,
340,
1062,
545,
546
]
},
{
"tb": 8,
"tbk": 1,
"tl": 3456,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
1063,
1064,
1065,
1066,
1067,
1068,
1069,
1070
]
},
{
"tb": 4992,
"tbk": 26,
"tl": 7586,
"mb": 768,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
138,
139,
140,
1071,
1072,
1073
]
},
{
"tb": 512,
"tbk": 1,
"tl": 21,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
14,
15,
16,
17,
18,
19,
1074,
336,
155
]
},
{
"tb": 32,
"tbk": 1,
"tl": 19,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
23,
24,
25,
134,
1075,
988,
234
]
},
{
"tb": 1272,
"tbk": 2,
"tl": 14633,
"mb": 1272,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
441,
442,
443,
444,
635,
755,
136,
137
]
},
{
"tb": 1480,
"tbk": 13,
"tl": 18,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
106,
107,
108,
109,
110,
111,
390,
399,
400
]
},
{
"tb": 320,
"tbk": 2,
"tl": 855300,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
1076,
1077,
1078,
1079,
513
]
},
{
"tb": 32,
"tbk": 1,
"tl": 52,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
871,
1080,
1081,
1082,
1083,
1084,
1085,
1086,
1087
]
},
{
"tb": 139255,
"tbk": 14,
"tl": 81105,
"mb": 69632,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
156,
157,
265,
266,
267,
268,
1088
]
},
{
"tb": 1272,
"tbk": 2,
"tl": 874,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
441,
442,
443,
444,
445,
399,
400,
389
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1621182,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
12,
1034,
1089,
1090,
1091,
1092,
1093,
1094,
1095,
1096
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2237437,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
12,
1097,
1098,
1099,
1100,
1101,
1102,
813,
45
]
}
],
"ftbl": [
"[root]",
"0x645d308a0819: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x645d3089f62a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x645d308a232c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d308a232c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d308a232c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x645d3087169c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x645d3087169c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x645d3087169c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x645d30516084: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x645d30515d9a: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x645d305912db: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x645d306dc3b9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x645d305ae4ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x645d3062be08: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3062be08: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3062be08: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x645d306b1b85: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x645d306b1b85: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x645d306b1b85: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x645d30655131: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x645d30629853: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x645d306dc832: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x645d3067b7d5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3067b7d5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3067b7d5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d305e5ae7: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x645d305e818f: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x645d3058893d: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x645d3058dbc6: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x645d305a47bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x645d3067aa22: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3067aa22: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3067aa22: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x645d306b1d25: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x645d306b1d25: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x645d306b1d25: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x645d304f08cd: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x645d304ef036: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x645d306dfc48: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:300:57)",
"0x645d3089f2e9: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x645d307ae840: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x645d307aeaa9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x645d307be111: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x645d30607e70: winter_prover::Prover::generate_proof (prover/src/lib.rs:449:13)",
"0x645d306172ee: winter_prover::Prover::prove (prover/src/lib.rs:175:37)",
"0x645d305b0edc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x645d3067325f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3067325f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3067325f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d3067325f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306b018b: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x645d306c08d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306ee56d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d306047f7: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:36)",
"0x645d308d7a99: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x645d308d7c0a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x645d3067240d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3067240d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3067240d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d3067240d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c3e4a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306c16e4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306edd1a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d30647ba1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x645d3089d700: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x645d3089d939: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x645d3089d132: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x645d3055617c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x645d3054e31d: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x645d3067b3c5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3067b3c5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3067b3c5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d306048cd: winter_prover::Prover::generate_proof (prover/src/lib.rs:308:37)",
"0x645d3057727c: winterfell::main (winterfell/src/main.rs:54:17)",
"0x645d306db847: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x645d3057821b: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:175:9)",
"0x645d30600b72: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:371:13)",
"0x645d305f2adf: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:41:22)",
"0x645d3053db39: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:36)",
"0x645d306081b5: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:21)",
"0x645d30607e8b: winter_prover::Prover::generate_proof (prover/src/lib.rs:450:13)",
"0x645d3062c45b: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x645d3062c45b: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x645d3062c45b: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x645d3058de92: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x645d3058db2c: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x645d30606b02: winter_prover::Prover::generate_proof (prover/src/lib.rs:571:9)",
"0x645d307fb9e9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x645d307fb9e9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x645d307fb9e9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x645d3061c09a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x645d304faa26: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x645d3064e714: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x645d305a869c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x645d3067baf5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3067baf5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3067baf5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d305e5c07: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x645d305439bd: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x645d3053fc90: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x645d30542614: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x645d3057d245: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x645d30578247: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:176:13)",
"0x645d30656518: winter_prover::trace::Trace::validate (src/trace/mod.rs:123:26)",
"0x645d30608578: winter_prover::Prover::generate_proof (prover/src/lib.rs:379:17)",
"0x645d308cb61c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d308cb61c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d308cb61c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x645d306b22d9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x645d306b22d9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x645d306b22d9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x645d30556abb: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x645d3058546d: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x645d3064c4ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x645d307f6f36: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d307f6f36: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d307f6f36: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d3054e07a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x645d3051e845: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x645d305214b0: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x645d30607217: winter_prover::Prover::generate_proof (prover/src/lib.rs:603:29)",
"0x645d30580ec7: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x645d3050deae: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x645d30511a1c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x645d305a1dec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x645d30667b04: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d30667b04: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d30667b04: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d30667b04: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x645d306c4eaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306c0d64: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306ef0da: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d30550e8d: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x645d3062a485: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x645d30598d26: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x645d3059c040: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x645d3064e104: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x645d308da63b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x645d308d9f01: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x645d308d338b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x645d308cce3d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x645d308d8748: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x645d308dc0a7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x645d30500106: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x645d3053cac9: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:290:18)",
"0x645d3053b88e: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:173:30)",
"0x645d304eda3f: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:230:34)",
"0x645d306f6026: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x645d3071c3a7: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x645d304f7d37: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x645d30500b7f: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x645d30601010: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:354:9)",
"0x645d306e0e16: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:26:25)",
"0x645d30519fcc: winter_verifier::perform_verification (verifier/src/lib.rs:225:43)",
"0x645d3051d5da: winter_verifier::verify (verifier/src/lib.rs:111:21)",
"0x645d30914f79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x645d30913709: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x645d305d9fe1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x645d305e30d8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x645d306a167d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x645d306023d4: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:541:17)",
"0x645d305901b6: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x645d3067bb95: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3067bb95: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3067bb95: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d3054c785: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x645d30555cc7: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x645d30554547: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x645d306543a7: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x645d305a83fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x645d30667edf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d30667edf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d30667edf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d30667edf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c488d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306c00c5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306ed9dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d3061508b: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:648:34)",
"0x645d305bbc01: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x645d305e3408: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x645d306a5c54: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x645d30608285: winter_prover::Prover::generate_proof (prover/src/lib.rs:418:17)",
"0x645d305a7c1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x645d304f83e2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d304f83e2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d304f83e2: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x645d306b1df5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x645d306b1df5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x645d306b1df5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x645d3050b24b: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x645d30604e23: winter_prover::Prover::generate_proof (prover/src/lib.rs:423:33)",
"0x645d305e5a57: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x645d305404bd: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x645d30616eb8: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:716:26)",
"0x645d30605931: winter_prover::Prover::generate_proof (prover/src/lib.rs:482:37)",
"0x645d30677e6f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d30677e6f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d30677e6f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d30677e6f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c3ecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306bf825: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306eeafd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d3075ec5a: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x645d305c3281: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x645d305e3a38: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x645d306a433e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x645d3059c2b9: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x645d30552dac: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x645d3061fd4a: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x645d3060730a: winter_prover::Prover::generate_proof (prover/src/lib.rs:608:34)",
"0x645d3057f9fe: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x645d30640b6c: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x645d3075eb73: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x645d3061da8b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x645d3061ce3d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x645d3079078a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x645d3076b2a9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x645d306d3bc8: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x645d306d2195: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x645d3057fe2f: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x645d3074f338: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x645d30593222: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x645d306561b0: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:140:51)",
"0x645d306f7476: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x645d304f5fc1: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x645d304f7388: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x645d3062455c: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x645d306d2129: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x645d30623b36: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x645d30627296: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x645d30600bcf: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:369:9)",
"0x645d30607e30: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:13)",
"0x645d3064ee5f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x645d3051d50b: winter_verifier::verify (verifier/src/lib.rs:109:19)",
"0x645d3052aeb1: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x645d30519abc: winter_verifier::perform_verification (verifier/src/lib.rs:317:25)",
"0x645d30545081: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x645d30543e86: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x645d3061512f: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:655:31)",
"0x645d305ab30c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x645d3065eb59: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3065eb59: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3065eb59: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d3065eb59: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c36ba: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306c19a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306edeea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d30605e8c: winter_prover::Prover::generate_proof (prover/src/lib.rs:505:52)",
"0x645d3054330f: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x645d30542506: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x645d30616acc: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:701:36)",
"0x645d306790a6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x645d30630cbe: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x645d3060602d: winter_prover::Prover::generate_proof (prover/src/lib.rs:524:9)",
"0x645d305a452a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x645d3065c949: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3065c949: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3065c949: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d3065c949: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c496a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306c0874: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306eeb8a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d3052140e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x645d3074eb9b: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x645d30913ea0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x645d309140d9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x645d309143d2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x645d30915159: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x645d308cb01a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x645d30500cba: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x645d3067ad83: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x645d3050b2c5: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x645d304f88f5: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x645d304f8750: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x645d305c5511: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x645d305e3a08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x645d306a140e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x645d30588c69: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x645d30912adc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x645d30911d6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x645d30911ae8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x645d30911ae8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x645d30911124: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x645d3090ed43: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x645d3050fa93: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x645d30602350: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:543:13)",
"0x645d305c0611: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x645d305e3288: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x645d306a1c0b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x645d305513c9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x645d30647d0d: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x645d305a3d4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x645d3065f59f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3065f59f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3065f59f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d3065f59f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306af0d6: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x645d306c1bc5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306ef30d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d3051d3a8: winter_verifier::verify (verifier/src/lib.rs:102:24)",
"0x645d3065f18f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3065f18f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3065f18f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d3065f18f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c3ccd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306c0cd7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306ee50d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d306e3aa0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x645d305a303c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x645d30665909: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d30665909: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d30665909: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d30665909: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c4e3a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306c0934: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306eda2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d30518ba2: winter_verifier::perform_verification (verifier/src/lib.rs:214:41)",
"0x645d3054e999: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x645d3052acb7: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x645d30577822: winterfell::main (winterfell/src/main.rs:71:11)",
"0x645d3054cc84: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3054cc84: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3054cc84: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x645d306b0c56: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x645d30584a4c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x645d3051e77b: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x645d30584259: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x645d30585739: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x645d305889b6: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x645d305aeccc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x645d3067bc35: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3067bc35: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3067bc35: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d3060488e: winter_prover::Prover::generate_proof (prover/src/lib.rs:307:44)",
"0x645d30527325: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x645d30519a15: winter_verifier::perform_verification (verifier/src/lib.rs:311:25)",
"0x645d3062c511: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3062c511: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3062c511: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x645d306b0c80: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x645d306569a5: winter_prover::trace::Trace::validate (src/trace/mod.rs:179:13)",
"0x645d30603a42: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:512:13)",
"0x645d305188e5: winter_verifier::perform_verification (verifier/src/lib.rs:185:13)",
"0x645d30578330: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:177:13)",
"0x645d3050e1bf: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x645d3050bac4: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x645d3050ff9d: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x645d306315c3: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x645d305983b5: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x645d30640921: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x645d307675e9: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x645d305ab06c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x645d3062bf38: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3062bf38: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3062bf38: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x645d306b27c5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x645d306b27c5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x645d306b27c5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x645d304f88e2: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x645d3053e973: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:33)",
"0x645d30608266: winter_prover::Prover::generate_proof (prover/src/lib.rs:417:21)",
"0x645d306054d0: winter_prover::Prover::generate_proof (prover/src/lib.rs:452:35)",
"0x645d30540572: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x645d30518fc9: winter_verifier::perform_verification (verifier/src/lib.rs:266:61)",
"0x645d3064082f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x645d30619efa: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x645d3055131c: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x645d305272d7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x645d3066458d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3066458d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3066458d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d3066458d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c3d7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306bfd34: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306ee30a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d3064d733: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x645d30766de9: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x645d305191ac: winter_verifier::perform_verification (verifier/src/lib.rs:275:24)",
"0x645d305a2d9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x645d3066be5f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3066be5f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3066be5f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d3066be5f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c33cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306c0e87: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306ede8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d305f2bcd: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:51:26)",
"0x645d3058bc29: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x645d3060719c: winter_prover::Prover::generate_proof (prover/src/lib.rs:600:25)",
"0x645d30584dbc: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x645d3053b5e4: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:156:33)",
"0x645d3053ee25: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:128:17)",
"0x645d30739c6e: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x645d30511adb: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x645d3059ce4c: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x645d3064df37: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x645d305932d3: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x645d30588afb: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x645d305873c0: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x645d3058c0bd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x645d305a744a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x645d306754f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d306754f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d306754f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d306754f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c39da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306c0bc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306edeba: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d30614fcf: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:644:36)",
"0x645d3065a997: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x645d3064d970: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x645d30550b8e: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x645d306e0f8c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:40:30)",
"0x645d306dc4e2: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x645d30515c98: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x645d3051541f: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x645d30513a15: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x645d306e3b0a: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x645d306fa7a8: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x645d3057f114: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x645d3052aca0: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x645d305c9a31: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x645d305e3048: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x645d306a655e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x645d3051a3b2: winter_verifier::perform_verification (verifier/src/lib.rs:179:9)",
"0x645d305adfac: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x645d306638df: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d306638df: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d306638df: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d306638df: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306aeb4e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x645d306c1415: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306ef2ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d305204f7: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x645d30577e36: <winterfell::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (winterfell/src/main.rs:133:9)",
"0x645d306de7a8: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:216:31)",
"0x645d306fcd36: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x645d3071abd0: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x645d306e8f66: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x645d306f08f6: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x645d305ada6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x645d3067b875: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3067b875: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3067b875: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d30584aaf: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x645d30675d2f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d30675d2f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d30675d2f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d30675d2f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c356d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306c0125: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306ee98d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d3075dd29: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x645d305d8c21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x645d305e2dd8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x645d306a46ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x645d3051e8ec: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x645d305419d6: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x645d30540e23: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x645d306156ee: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:669:26)",
"0x645d3054c428: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x645d30604132: winter_prover::Prover::generate_proof (prover/src/lib.rs:262:22)",
"0x645d305b117c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x645d30673eef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d30673eef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d30673eef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d30673eef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c427d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306bfc65: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306d09bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d30604033: winter_prover::Prover::generate_proof (prover/src/lib.rs:248:41)",
"0x645d306e02f8: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:651:17)",
"0x645d3067636f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3067636f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3067636f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d3067636f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c389d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306c1895: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306eebdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d30655fe2: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:140:32)",
"0x645d30540e5c: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x645d3065cf8f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3065cf8f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3065cf8f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d3065cf8f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c406d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306bff75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306ed79d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d3050d3a8: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x645d3065b4b9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3065b4b9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3065b4b9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d3065b4b9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c38ea: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306c04f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306ee39a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d305f1fe8: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:83:9)",
"0x645d3061d72b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x645d3061cf9d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x645d3079069a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x645d3077df7b: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x645d307881a9: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x645d30782416: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x645d306624ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d306624ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d306624ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d306624ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c4d3d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306bf5f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306ef21d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d3052aff2: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x645d305f4d5a: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:170:36)",
"0x645d305f334f: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:55:17)",
"0x645d306310f5: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x645d3061f07b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x645d3061c28d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x645d307902ea: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x645d3076b009: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x645d306d4a75: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x645d3054b598: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x645d30752d94: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x645d3075e95d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x645d304c5d82: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x645d304c5d82: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x645d304c5d82: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d304c5d82: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d304c5d82: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d304c5d82: std::io::buffered::bufwriter::BufWriter<W>::with_capacity (io/buffered/bufwriter.rs:115:33)",
"0x645d304c5d82: std::io::buffered::linewriter::LineWriter<W>::with_capacity (io/buffered/linewriter.rs:109:29)",
"0x645d304c5d82: std::io::buffered::linewriter::LineWriter<W>::new (io/buffered/linewriter.rs:89:9)",
"0x645d304c5d82: std::io::stdio::stdout::{{closure}} (src/io/stdio.rs:618:62)",
"0x645d304c5d82: std::sync::once_lock::OnceLock<T>::get_or_init::{{closure}} (src/sync/once_lock.rs:250:50)",
"0x645d304c5d82: std::sync::once_lock::OnceLock<T>::initialize::{{closure}} (src/sync/once_lock.rs:376:19)",
"0x645d304c5d82: std::sync::once::Once::call_once_force::{{closure}} (src/sync/once.rs:208:40)",
"0x645d304c5d82: std::sys_common::once::futex::Once::call (sys_common/once/futex.rs:124:21)",
"0x645d304c4eca: std::sync::once::Once::call_once_force (src/sync/once.rs:208:9)",
"0x645d304c4eca: std::sync::once_lock::OnceLock<T>::initialize (src/sync/once_lock.rs:375:9)",
"0x645d3092f1c5: std::sync::once_lock::OnceLock<T>::get_or_try_init (src/sync/once_lock.rs:298:9)",
"0x645d3092f1c5: std::sync::once_lock::OnceLock<T>::get_or_init (src/sync/once_lock.rs:250:15)",
"0x645d3092f1c5: std::io::stdio::stdout (src/io/stdio.rs:618:14)",
"0x645d3092f1c5: std::io::stdio::print_to (src/io/stdio.rs:1020:21)",
"0x645d3092f1c5: std::io::stdio::_print (src/io/stdio.rs:1097:5)",
"0x645d3057703a: winterfell::main (winterfell/src/main.rs:36:5)",
"0x645d306461b0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x645d3051d038: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:216:32)",
"0x645d306fce5f: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x645d306673bf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d306673bf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d306673bf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d306673bf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c46cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306c1e45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306ee52d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d305264ab: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x645d308cb5cc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x645d308cb5cc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x645d308cb5cc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x645d3075dd9d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x645d30519c03: winter_verifier::perform_verification (verifier/src/lib.rs:323:5)",
"0x645d30508237: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x645d3053fa29: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x645d306fd1d6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x645d308d80f0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x645d308cc669: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x645d308cbe51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x645d308cb950: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x645d3058be24: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x645d3066986f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3066986f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3066986f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d3066986f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c461d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306bf285: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306edc1d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d30603eb3: winter_prover::Prover::generate_proof (prover/src/lib.rs:222:20)",
"0x645d30631347: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x645d308da2db: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x645d308d9fb1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x645d308d32ab: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x645d308cff3e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x645d308d1400: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x645d308d0bf8: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x645d3066069a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3066069a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3066069a: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d3066069a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x645d306c34cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306c1a1a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d3074bf4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d30585243: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x645d30598b3e: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x645d3061c0af: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x645d305263b7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x645d3050b238: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x645d30603978: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:517:13)",
"0x645d3061e80b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x645d3061ca1d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x645d30790c2a: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x645d3076fc7d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x645d30772613: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x645d30583237: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x645d3050e2ce: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x645d308da12b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x645d308da061: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x645d308d346b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x645d308cdb71: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x645d308ce307: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x645d308dd90b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x645d305a61fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x645d30668622: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d30668622: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d30668622: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d30668622: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x645d306c3daa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306bf484: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306dc8ea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d3064bd67: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x645d305237be: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x645d30519b34: winter_verifier::perform_verification (verifier/src/lib.rs:319:28)",
"0x645d307f00b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x645d307f2d69: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x645d307fa322: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x645d3054e65f: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x645d305a8e6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x645d30663b29: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d30663b29: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d30663b29: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d30663b29: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c3caa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306c2084: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306ee19a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d3059124b: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x645d306021b5: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:547:13)",
"0x645d30552eb4: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x645d30555a4c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x645d30550f66: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x645d3064dad4: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x645d30661ecf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d30661ecf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d30661ecf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d30661ecf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c4d5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306c1da7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306eeedd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d305770e6: winterfell::main (winterfell/src/main.rs:38:27)",
"0x645d305ddb21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x645d305e3498: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x645d306a57ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x645d30596db7: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x645d30623bae: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x645d30674d1f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d30674d1f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d30674d1f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d30674d1f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c361d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306bf4f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306ee34d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d3050e7f7: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x645d3061fb91: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x645d305fb75a: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x645d306df852: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:503:32)",
"0x645d306fcdc6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x645d3071a93a: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x645d306e4e27: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x645d306efa22: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x645d305a577c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x645d30669bf2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d30669bf2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d30669bf2: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d30669bf2: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x645d306c4b7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306bfc35: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306ed8cd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d30623a6a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x645d3064dd54: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x645d306e12cb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:64:9)",
"0x645d3052141d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x645d3058bc0e: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x645d306314ab: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x645d3074eb89: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x645d306066b8: winter_prover::Prover::generate_proof (prover/src/lib.rs:558:13)",
"0x645d305e02a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x645d305e3a98: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x645d306a391b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x645d305850fa: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x645d306622ef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d306622ef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d306622ef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d306622ef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c44cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306c0d15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306ed7dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d3051e8d5: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x645d306310d2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x645d305c68d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x645d305e3318: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x645d306a412d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x645d3050daf2: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x645d30739ac5: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x645d308cb2c6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x645d3075e6ca: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x645d305906b2: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x645d305a76dc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x645d3066944f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3066944f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3066944f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d3066944f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c404d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306bef75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306ef41d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d30605dcf: winter_prover::Prover::generate_proof (prover/src/lib.rs:501:51)",
"0x645d305852b7: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x645d3067b646: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3067b646: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3067b646: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d30556882: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x645d3064ccf0: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x645d305197a8: winter_verifier::perform_verification (verifier/src/lib.rs:306:42)",
"0x645d306408a2: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x645d30914108: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x645d309144ca: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x645d309144ca: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x645d3091426e: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x645d3091426e: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x645d3091435d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x645d305af9ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x645d3067ba55: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3067ba55: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3067ba55: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d30604877: winter_prover::Prover::generate_proof (prover/src/lib.rs:306:39)",
"0x645d3065c539: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3065c539: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3065c539: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d3065c539: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c3b7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306c1b14: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306ef44a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d306044ea: winter_prover::Prover::generate_proof (prover/src/lib.rs:272:43)",
"0x645d305266df: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x645d3075e5ed: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x645d3066695f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3066695f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3066695f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d3066695f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c4a4d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306c0e15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306eef5d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d307647af: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x645d3050b314: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x645d304f74f5: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x645d3051ef56: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x645d306fbeb6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x645d30720fbd: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x645d30640bbd: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x645d30598e35: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x645d309139ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x645d3091504c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3091504c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3091504c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x645d30912c7c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x645d30912c7c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x645d30912c7c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x645d3090eece: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x645d3051629f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x645d30591df3: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x645d30647e73: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x645d3050d440: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x645d306f5db6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x645d304f5b11: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x645d30592003: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x645d30593210: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x645d305af20c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x645d30668e49: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d30668e49: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d30668e49: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d30668e49: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c393a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306c07f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306ee01a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d30518c5f: winter_verifier::perform_verification (verifier/src/lib.rs:218:40)",
"0x645d3065f3a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3065f3a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3065f3a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d3065f3a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c448a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306bffc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306eea3a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d30603d8f: winter_prover::Prover::generate_proof (prover/src/lib.rs:214:39)",
"0x645d3065e033: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3065e033: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3065e033: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d3065e033: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c49ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306c1545: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306eefdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d306046db: winter_prover::Prover::generate_proof (prover/src/lib.rs:293:23)",
"0x645d3053e8b2: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:28)",
"0x645d3064e76e: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x645d30587499: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x645d305f2028: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:83:31)",
"0x645d306f87af: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x645d305aef6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x645d3067422b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3067422b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3067422b: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d3067422b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x645d306c4aad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306c1955: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d305e516d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d30625618: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x645d3074c14c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x645d30515e0c: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x645d30603f02: winter_prover::Prover::generate_proof (prover/src/lib.rs:233:27)",
"0x645d305a25cc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x645d30665aff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d30665aff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d30665aff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d30665aff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c34ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306c0337: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306eee8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d30576edf: winterfell::main (winterfell/src/main.rs:28:26)",
"0x645d30554356: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x645d306790e6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x645d3051e6db: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x645d3061fdca: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x645d306769dd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d306769dd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d306769dd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d306769dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c3c7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306c0ff4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306ee86a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d3064d67b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x645d3066cb9d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3066cb9d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3066cb9d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d3066cb9d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c32aa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306c0394: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306eeb5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d3064d5c3: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x645d3066f0ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3066f0ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3066f0ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d3066f0ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c344d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306bf625: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306ee13d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d304f7d28: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x645d306452d4: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x645d30671abf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d30671abf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d30671abf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d30671abf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c4e7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306c1925: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306ee5dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d304ed788: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:228:23)",
"0x645d3050824c: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x645d305837dc: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x645d3058f8d8: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x645d308cac69: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x645d308c7c1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x645d308c4db6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d308c4db6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d308c4db6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d3058bb68: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x645d3054e517: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x645d305912f2: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x645d305a649c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x645d30662b4f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d30662b4f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d30662b4f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d30662b4f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306ae03e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x645d306c2035: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306ef0ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d3057774e: winterfell::main (winterfell/src/main.rs:65:26)",
"0x645d3076b1e9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x645d306d515b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x645d3054b6eb: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x645d3066ba3f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3066ba3f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3066ba3f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d3066ba3f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c4b1d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306bfbb7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306ed9bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d3052bdf7: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x645d306dcc5a: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x645d307506a7: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x645d30633889: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x645d30540d9a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x645d30604511: winter_prover::Prover::generate_proof (prover/src/lib.rs:274:13)",
"0x645d305194f7: winter_verifier::perform_verification (verifier/src/lib.rs:298:27)",
"0x645d305aa0bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x645d3065b6af: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3065b6af: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3065b6af: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d3065b6af: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306b0705: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x645d306c150a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306edb3d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d30514891: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x645d3051d330: winter_verifier::verify (verifier/src/lib.rs:98:38)",
"0x645d305d06d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x645d305e37c8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x645d306a267e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x645d3059c216: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x645d30700d72: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x645d30700e16: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x645d30519edf: winter_verifier::perform_verification (verifier/src/lib.rs:228:13)",
"0x645d305a1b4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x645d30600012: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d30600012: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d30600012: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x645d306b2b05: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x645d306b2b05: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x645d306b2b05: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x645d30500b95: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x645d3053da9c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:51:13)",
"0x645d3065ab50: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x645d3064ed01: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x645d3064d370: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x645d304eb89d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x645d305266fe: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x645d3065e70f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3065e70f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3065e70f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d3065e70f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c327d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306c1a55: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306ed8ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d3075eac4: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x645d306004c4: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d306004c4: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d306004c4: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x645d306b0bf6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x645d305780ad: <winterfell::WorkAir as winter_air::air::Air>::new (winterfell/src/main.rs:151:23)",
"0x645d3051e03b: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:102:85)",
"0x645d306faa6e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x645d305e2a21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x645d305e2e08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x645d306a542e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x645d3064ef07: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x645d308da9e9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d308da9e9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d308da9e9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d308da9e9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x645d308dae2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d308dadf7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d308dafce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d308dd4c9: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x645d30519636: winter_verifier::perform_verification (verifier/src/lib.rs:305:9)",
"0x645d304eb88c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x645d30661ac3: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d30661ac3: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d30661ac3: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d30661ac3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c3bd4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306c029a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306ee654: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d30576d51: winterfell::main (winterfell/src/main.rs:22:32)",
"0x645d30557c4b: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x645d305a9b7c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x645d3066319f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3066319f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3066319f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d3066319f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c454d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306c1355: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306eeddd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d3053f1b1: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x645d306dff36: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:226:17)",
"0x645d306fa19e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x645d305c77a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x645d305e3108: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x645d306a3dae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x645d3051a1eb: winter_verifier::perform_verification (verifier/src/lib.rs:184:9)",
"0x645d30515dce: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x645d3051d1dd: winter_verifier::verify (verifier/src/lib.rs:96:32)",
"0x645d3078955d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x645d3078fa25: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x645d3078286e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x645d3075de04: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x645d304f9f63: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x645d3064ec15: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x645d3065555d: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:243:25)",
"0x645d30577d94: winterfell::build_do_work_trace (winterfell/src/main.rs:91:5)",
"0x645d3061760b: winterfell::main::{{closure}} (winterfell/src/main.rs:30:23)",
"0x645d3066d05d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3066d05d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3066d05d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d3066d05d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c3dda: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306c0de4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306ee1ca: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d3064d7eb: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x645d3066eacf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3066eacf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3066eacf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d3066eacf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c3a5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306c0c45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306eee4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d304ed1cf: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:283:9)",
"0x645d30598b7f: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x645d3050fd08: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x645d3074e4f9: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x645d3054c37b: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x645d3067a328: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3067a328: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3067a328: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x645d306b2205: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x645d306b2205: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x645d306b2205: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x645d30605ea3: winter_prover::Prover::generate_proof (prover/src/lib.rs:510:39)",
"0x645d308cce9d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x645d308d842b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x645d308dc1e3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x645d3061fdb3: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x645d3074c472: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x645d3058899f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x645d3066ce94: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3066ce94: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3066ce94: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d3066ce94: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x645d306c35da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306c1ec4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306eec5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d3055446e: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x645d3075e78d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x645d305a5a1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x645d3067b9b5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3067b9b5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3067b9b5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d30604909: winter_prover::Prover::generate_proof (prover/src/lib.rs:309:32)",
"0x645d305a523c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x645d3065fbd9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3065fbd9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3065fbd9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d3065fbd9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c400a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306c1c44: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306eec2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d3050d4b2: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x645d30700d85: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x645d3053b58a: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:155:31)",
"0x645d308da48b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x645d308d9e51: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x645d308d354b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x645d308cdc41: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x645d308ce2c7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x645d308dd95b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x645d304f9461: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x645d3059003f: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x645d30511a78: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x645d3053ebe1: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:135:9)",
"0x645d3058dd52: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x645d304ed6e8: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:227:28)",
"0x645d306461ce: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x645d3066aecd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3066aecd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3066aecd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d3066aecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c409a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306bf544: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306ee73a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d3064d50b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x645d308d004e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x645d308d19ec: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x645d308d055a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x645d3052621f: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x645d304fa126: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x645d305e2041: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x645d305e3018: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x645d306a18be: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x645d305f4e9d: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:175:17)",
"0x645d306654cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d306654cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d306654cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d306654cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c40dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306c13d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306eda6d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d30603cd2: winter_prover::Prover::generate_proof (prover/src/lib.rs:210:38)",
"0x645d304f932d: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x645d3065d7f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d3065d7f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d3065d7f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x645d3065d7f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x645d306c334a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x645d306bf3a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x645d306ef13a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x645d30614f12: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:640:42)",
"0x645d305a232c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x645d304faaea: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x645d304faaea: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x645d304faaea: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x645d306b0ca6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x645d30591508: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)"
]
}