{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell",
"pid": 25250,
"tg": 2548672,
"te": 3625490,
"pps": [
{
"tb": 11648,
"tbk": 91,
"tl": 124,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9
]
},
{
"tb": 2561,
"tbk": 1,
"tl": 68,
"mb": 2561,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
15,
16,
17,
18,
19,
20
]
},
{
"tb": 96,
"tbk": 1,
"tl": 28,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
23,
24,
25,
26,
27
]
},
{
"tb": 16,
"tbk": 1,
"tl": 166044,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
28,
29,
30,
31,
32,
33,
34,
35,
36
]
},
{
"tb": 320,
"tbk": 2,
"tl": 1127548,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
37,
38,
39,
40,
41
]
},
{
"tb": 2560,
"tbk": 1,
"tl": 24,
"mb": 2560,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
42,
43,
44
]
},
{
"tb": 96,
"tbk": 1,
"tl": 1916,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
45,
46,
47,
48,
49
]
},
{
"tb": 40992,
"tbk": 33,
"tl": 59159,
"mb": 40960,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
60
]
},
{
"tb": 256,
"tbk": 1,
"tl": 11,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
61,
62,
63,
64,
65,
66,
67,
68,
69,
70,
71
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
72,
73,
74,
75,
76,
77
]
},
{
"tb": 1280,
"tbk": 1,
"tl": 1946,
"mb": 1280,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
78,
79,
80,
81,
82,
83,
84
]
},
{
"tb": 2912,
"tbk": 3,
"tl": 2324,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
85,
86,
87,
88,
89,
90,
91,
92
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 227122,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
93,
94,
95,
96
]
},
{
"tb": 512,
"tbk": 1,
"tl": 18,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
97,
98,
99,
100
]
},
{
"tb": 11648,
"tbk": 3,
"tl": 1783,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
101,
102,
103,
104,
105,
106,
107,
108,
109
]
},
{
"tb": 2880,
"tbk": 15,
"tl": 65,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
61,
62,
63,
64,
65,
110,
111,
112,
113,
114,
115
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
117,
118,
119,
120,
71,
121
]
},
{
"tb": 2088,
"tbk": 3,
"tl": 2335,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
122,
123,
124,
125,
126,
91,
92,
70
]
},
{
"tb": 384,
"tbk": 3,
"tl": 703,
"mb": 384,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
127,
128,
129,
130,
91
]
},
{
"tb": 160,
"tbk": 1,
"tl": 5075,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
131,
132,
133,
134,
44
]
},
{
"tb": 896,
"tbk": 6,
"tl": 7283,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
135,
136,
137,
138,
139
]
},
{
"tb": 256,
"tbk": 1,
"tl": 6583,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
50,
51,
52,
140,
141,
142,
143,
144,
145
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
146,
147,
148,
149,
150,
151,
152,
153,
154,
44
]
},
{
"tb": 2088,
"tbk": 3,
"tl": 12464,
"mb": 2088,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
122,
123,
124,
125,
155,
156,
8,
9
]
},
{
"tb": 96,
"tbk": 1,
"tl": 20,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
157,
158,
159,
160,
99,
100
]
},
{
"tb": 512,
"tbk": 1,
"tl": 16,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
93,
161,
162,
98
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2307713,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
163,
164,
165,
166,
167,
168,
169,
170,
171
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 36029,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
93,
94,
95,
172
]
},
{
"tb": 149504,
"tbk": 3,
"tl": 19697,
"mb": 147456,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
93,
173,
174,
175
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3090,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
122,
123,
124,
125,
155,
176,
177,
178
]
},
{
"tb": 96,
"tbk": 1,
"tl": 5058,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
179,
180,
181,
182,
99
]
},
{
"tb": 128,
"tbk": 1,
"tl": 100,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
183,
184,
185,
186,
187,
188,
189
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1782,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
85,
86,
87,
88,
89,
90,
114,
115
]
},
{
"tb": 16,
"tbk": 1,
"tl": 47,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
28,
190,
191,
192,
193,
194,
195,
196,
71,
121
]
},
{
"tb": 256,
"tbk": 1,
"tl": 11,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
50,
51,
52,
53,
54,
55,
197,
70,
71
]
},
{
"tb": 48,
"tbk": 1,
"tl": 114755,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
78,
79,
80,
81,
198,
199,
200
]
},
{
"tb": 1280,
"tbk": 1,
"tl": 23296,
"mb": 1280,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
78,
79,
80,
81,
201,
202,
203
]
},
{
"tb": 64,
"tbk": 1,
"tl": 4816,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
135,
136,
137,
204,
205
]
},
{
"tb": 288,
"tbk": 1,
"tl": 9369,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
206,
207,
208,
209,
175
]
},
{
"tb": 2000,
"tbk": 10,
"tl": 188,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
61,
210,
211,
212,
213,
214,
215
]
},
{
"tb": 1196032,
"tbk": 3,
"tl": 32956,
"mb": 1196032,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
93,
216,
217,
175
]
},
{
"tb": 8128,
"tbk": 7,
"tl": 26,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
135,
136,
137,
218,
219
]
},
{
"tb": 128,
"tbk": 1,
"tl": 563911,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
50,
51,
52,
140,
141,
142,
220,
221,
222
]
},
{
"tb": 524320,
"tbk": 3,
"tl": 9500,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
93,
223,
224,
225
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 175059,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
93,
226,
227,
228
]
},
{
"tb": 40960,
"tbk": 1,
"tl": 4925,
"mb": 40960,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
229,
230,
231,
232,
233,
49,
234
]
},
{
"tb": 16,
"tbk": 1,
"tl": 75,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
117,
118,
158,
159,
160,
99
]
},
{
"tb": 96,
"tbk": 1,
"tl": 32,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
23,
24,
25,
235,
27
]
},
{
"tb": 40960,
"tbk": 1,
"tl": 4883,
"mb": 40960,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
229,
230,
231,
236,
233,
49,
234
]
},
{
"tb": 786432,
"tbk": 3,
"tl": 69594,
"mb": 786432,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
237
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
72,
73,
74,
75,
238,
77
]
},
{
"tb": 192,
"tbk": 2,
"tl": 5049,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
135,
136,
137,
239,
240
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3595794,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
21,
146,
147,
148,
149,
150,
151,
152,
153,
241,
242
]
},
{
"tb": 144,
"tbk": 1,
"tl": 9605,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
243,
244,
245,
246,
247,
248,
70,
71,
121
]
},
{
"tb": 256,
"tbk": 1,
"tl": 563,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
61,
62,
249,
250,
251,
252,
253,
254,
255
]
},
{
"tb": 1152,
"tbk": 4,
"tl": 183,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
256,
257,
258,
259,
260
]
},
{
"tb": 40,
"tbk": 1,
"tl": 2307742,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
261,
262,
263,
264,
265,
266,
267,
268,
269
]
},
{
"tb": 72,
"tbk": 1,
"tl": 23227,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
270,
271,
272,
273,
57,
58,
59,
237,
274,
71
]
},
{
"tb": 16,
"tbk": 1,
"tl": 23078,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
50,
51,
52,
53,
54,
55,
275,
276,
277,
278,
279
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 436954,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
183,
184,
185,
186,
187,
188,
280
]
},
{
"tb": 480,
"tbk": 4,
"tl": 4795,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
281,
282,
283,
284,
285,
286
]
},
{
"tb": 2560,
"tbk": 2,
"tl": 139955,
"mb": 1280,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
183,
184,
185,
186,
187,
188,
287
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1957,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
288,
289,
290,
291,
292,
293,
294,
295,
296
]
},
{
"tb": 696,
"tbk": 3,
"tl": 806,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
61,
62,
249,
250,
251,
252,
253,
297,
298
]
},
{
"tb": 24,
"tbk": 1,
"tl": 11,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
270,
271,
272,
273,
57,
58,
59,
60,
299,
300
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3618098,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
301,
302,
303,
304,
305,
306,
307,
308
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 84084,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
93,
309,
310,
311
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3595728,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
312,
313,
314,
315,
316,
317,
300,
71
]
},
{
"tb": 299008,
"tbk": 3,
"tl": 30235,
"mb": 299008,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
85,
318,
319,
320,
321,
322,
323,
324
]
},
{
"tb": 8832,
"tbk": 16,
"tl": 3493,
"mb": 2760,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
325,
326,
327,
328,
329,
330
]
},
{
"tb": 2097152,
"tbk": 16384,
"tl": 14743,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
50,
51,
52,
53,
54,
55,
331,
332,
333
]
},
{
"tb": 8,
"tbk": 1,
"tl": 18,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
61,
62,
334,
335,
336,
337,
338,
339,
340,
341
]
},
{
"tb": 40960,
"tbk": 32,
"tl": 63310,
"mb": 40960,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
50,
51,
52,
140,
141,
142,
342,
343,
344
]
},
{
"tb": 256,
"tbk": 1,
"tl": 563917,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
345,
346,
347,
348,
349,
350,
351,
352,
221,
222
]
},
{
"tb": 1088,
"tbk": 2,
"tl": 31,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
353,
354,
355,
356,
357,
358
]
},
{
"tb": 32,
"tbk": 1,
"tl": 134,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
50,
51,
52,
53,
54,
55,
359,
360,
361
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2534867,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
163,
362,
363,
364,
365,
366,
367,
368,
369
]
},
{
"tb": 64,
"tbk": 1,
"tl": 391290,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
61,
62,
249,
250,
251,
370,
371,
372,
71
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1428,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
23,
24,
25,
373,
115
]
},
{
"tb": 32,
"tbk": 1,
"tl": 439901,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
281,
282,
283,
284,
374,
71
]
},
{
"tb": 24,
"tbk": 2,
"tl": 2,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
72,
73,
74,
75,
76,
375
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 264747,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
85,
318,
319,
320,
321,
376,
377,
378
]
},
{
"tb": 264,
"tbk": 2,
"tl": 2063779,
"mb": 240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
379,
380,
381,
382,
383,
384,
385,
386,
387
]
},
{
"tb": 16,
"tbk": 1,
"tl": 132,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
117,
388,
158,
389,
390,
391
]
},
{
"tb": 2097152,
"tbk": 8,
"tl": 390753,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
392,
393,
394,
395,
396,
397,
398,
399
]
},
{
"tb": 144,
"tbk": 1,
"tl": 23088,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
400,
401,
402,
403,
277,
278,
279,
404,
274,
71
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1420,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
281,
282,
283,
284,
405,
233
]
},
{
"tb": 10485760,
"tbk": 80,
"tl": 76766022,
"mb": 10485760,
"mbk": 80,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
406
]
},
{
"tb": 48,
"tbk": 2,
"tl": 1127556,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
407,
408,
409,
410,
411,
412,
413,
414,
415,
41
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 462214,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
183,
184,
185,
186,
187,
188,
416
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1919,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
270,
271,
272,
273,
57,
58,
59,
60,
417,
49
]
},
{
"tb": 192,
"tbk": 2,
"tl": 189,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
135,
136,
137,
239,
418
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 45671,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
50,
51,
52,
140,
141,
142,
419,
115,
71
]
},
{
"tb": 32,
"tbk": 1,
"tl": 7162,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
85,
318,
319,
320,
420,
421,
422,
44
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 3742,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
281,
423,
424,
425,
426,
427
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 36123,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
50,
51,
52,
140,
141,
142,
428,
429,
71
]
},
{
"tb": 72,
"tbk": 3,
"tl": 69226,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
407,
408,
409,
410,
411,
412,
413,
414,
276,
277,
278,
279
]
},
{
"tb": 64,
"tbk": 1,
"tl": 22379,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
61,
62,
63,
64,
65,
110,
111,
112,
430,
274,
71
]
},
{
"tb": 2912,
"tbk": 28,
"tl": 405,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
61,
431,
432,
433,
434,
435,
436
]
},
{
"tb": 32,
"tbk": 1,
"tl": 439906,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
281,
282,
283,
284,
437,
71
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 38,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
50,
51,
52,
53,
54,
55,
438,
439,
71
]
},
{
"tb": 64,
"tbk": 1,
"tl": 100410,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
135,
136,
137,
204,
440
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1728,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
122,
123,
124,
125,
126,
441,
49,
234
]
},
{
"tb": 10560,
"tbk": 32,
"tl": 95260,
"mb": 10560,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
85,
318,
319,
320,
420,
442,
176,
177
]
},
{
"tb": 83886080,
"tbk": 65536,
"tl": 152226,
"mb": 1280,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
50,
51,
52,
140,
141,
142,
443,
444,
445
]
},
{
"tb": 512,
"tbk": 1,
"tl": 23,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
50,
51,
52,
53,
54,
55,
446,
27,
99
]
},
{
"tb": 32,
"tbk": 1,
"tl": 83,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
447,
448,
449,
450,
451,
452,
453,
454,
455
]
},
{
"tb": 128,
"tbk": 1,
"tl": 3009,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
456,
457,
458,
459,
460,
461,
462,
463
]
},
{
"tb": 11648,
"tbk": 3,
"tl": 1212,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
183,
184,
185,
186,
187,
188,
464
]
},
{
"tb": 2416,
"tbk": 10,
"tl": 1041,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
61,
62,
465,
466,
467,
468,
469,
470,
471,
472
]
},
{
"tb": 32,
"tbk": 1,
"tl": 20,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
473,
43,
44
]
},
{
"tb": 16,
"tbk": 1,
"tl": 77,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
117,
388,
158,
159,
160,
99
]
},
{
"tb": 262144,
"tbk": 2,
"tl": 692354,
"mb": 262144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
50,
51,
52,
140,
141,
142,
474,
475,
476
]
},
{
"tb": 256,
"tbk": 1,
"tl": 6323,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
477,
478,
44
]
},
{
"tb": 2560,
"tbk": 1,
"tl": 5084,
"mb": 2560,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
50,
51,
52,
53,
54,
55,
438,
479,
44
]
},
{
"tb": 524320,
"tbk": 3,
"tl": 9521,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
93,
161,
480,
224
]
},
{
"tb": 96,
"tbk": 2,
"tl": 586909,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
281,
282,
283,
284,
481,
482
]
},
{
"tb": 299008,
"tbk": 3,
"tl": 32487,
"mb": 299008,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
85,
318,
319,
320,
321,
483,
484,
175
]
},
{
"tb": 1440,
"tbk": 12,
"tl": 4737,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
485,
486,
487,
488,
489
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3592717,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
490,
491,
492,
493,
494,
495,
496,
497,
498
]
},
{
"tb": 16,
"tbk": 1,
"tl": 130,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
117,
118,
158,
389,
390,
391
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 69892,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
183,
184,
185,
186,
187,
188,
499
]
},
{
"tb": 93184,
"tbk": 3,
"tl": 1225,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
183,
184,
185,
186,
187,
188,
500
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
72,
73,
74,
75,
238,
375
]
},
{
"tb": 1456,
"tbk": 3,
"tl": 1846,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
501,
502,
503,
504,
505,
506,
507,
508
]
},
{
"tb": 1040,
"tbk": 10,
"tl": 267,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
61,
431,
432,
433,
509,
510,
511
]
},
{
"tb": 13408,
"tbk": 86,
"tl": 343909,
"mb": 13408,
"mbk": 86,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
85,
318,
319,
320,
420,
442,
156,
8
]
},
{
"tb": 384,
"tbk": 1,
"tl": 563791,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
512,
513,
514,
515,
516,
517,
518,
519,
520
]
},
{
"tb": 2400,
"tbk": 20,
"tl": 1749,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
281,
282,
283,
284,
521,
253
]
},
{
"tb": 11648,
"tbk": 3,
"tl": 397,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
183,
184,
185,
186,
187,
188,
522
]
},
{
"tb": 240,
"tbk": 2,
"tl": 586915,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
523,
372,
71,
121
]
},
{
"tb": 80,
"tbk": 1,
"tl": 563574,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
524,
525,
526,
527,
528,
529,
530,
531,
532
]
},
{
"tb": 728,
"tbk": 3,
"tl": 2912,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
61,
62,
63,
64,
65,
66,
67,
68,
533,
534,
535
]
},
{
"tb": 4032,
"tbk": 27,
"tl": 71,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
61,
62,
63,
64,
65,
110,
111,
112,
113,
91,
92
]
},
{
"tb": 480,
"tbk": 4,
"tl": 189,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
281,
282,
283,
284,
536,
114
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2084,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
537,
538,
539,
540,
541,
542,
543,
544,
545
]
},
{
"tb": 384,
"tbk": 2,
"tl": 83,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
546,
547,
548,
549,
550,
551,
552,
553,
554
]
},
{
"tb": 512,
"tbk": 1,
"tl": 336,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
555,
27,
99,
100
]
},
{
"tb": 432,
"tbk": 3,
"tl": 1198,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
78,
79,
80,
81,
556,
557,
535
]
},
{
"tb": 4032,
"tbk": 6,
"tl": 100424,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
135,
136,
137,
558,
440
]
},
{
"tb": 96,
"tbk": 1,
"tl": 32,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
157,
158,
389,
390,
391,
71
]
},
{
"tb": 5760,
"tbk": 30,
"tl": 10581,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
61,
559,
560,
561,
562,
563,
564
]
},
{
"tb": 4032,
"tbk": 27,
"tl": 554,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
61,
62,
63,
64,
65,
110,
111,
112,
565,
253,
297
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1187,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
50,
51,
52,
140,
141,
142,
566,
535,
567
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2038,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
50,
51,
52,
140,
141,
142,
568,
44,
100
]
},
{
"tb": 256,
"tbk": 1,
"tl": 3592824,
"mb": 256,
"mbk": 1,
"gb": 256,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
345,
569,
570,
571,
572,
573,
574,
575
]
},
{
"tb": 96,
"tbk": 1,
"tl": 4840,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
281,
576,
577,
578,
579,
233
]
},
{
"tb": 128,
"tbk": 1,
"tl": 109,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
50,
51,
52,
140,
141,
142,
220,
221,
580
]
},
{
"tb": 576,
"tbk": 2,
"tl": 61,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
581,
582,
583,
584,
585,
586,
587,
588,
589
]
},
{
"tb": 2280,
"tbk": 5,
"tl": 1907,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
590,
591,
592,
593,
594,
595
]
},
{
"tb": 11648,
"tbk": 3,
"tl": 14907,
"mb": 11648,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
596,
8,
9,
44
]
},
{
"tb": 32,
"tbk": 2,
"tl": 564059,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
597,
598,
599,
600,
601,
602,
603,
604
]
},
{
"tb": 10485760,
"tbk": 80,
"tl": 289367327,
"mb": 10485760,
"mbk": 80,
"gb": 10485760,
"gbk": 80,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
93,
605,
606,
607
]
},
{
"tb": 48,
"tbk": 2,
"tl": 133,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
608,
609,
610,
611,
612,
613
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2053,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
270,
614,
615,
616,
617,
618,
619,
620,
621
]
},
{
"tb": 512,
"tbk": 1,
"tl": 10,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
622,
623,
624,
625,
626,
627,
628,
629
]
},
{
"tb": 256,
"tbk": 3,
"tl": 1127207,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
630,
631,
632,
633,
634
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 30508,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
50,
51,
52,
53,
54,
55,
438,
635,
636
]
},
{
"tb": 4032,
"tbk": 6,
"tl": 4828,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
135,
136,
137,
558,
205
]
},
{
"tb": 48,
"tbk": 1,
"tl": 346399,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
270,
637,
638,
639,
640,
641,
642,
643,
644
]
},
{
"tb": 1920,
"tbk": 10,
"tl": 3663,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
61,
559,
560,
561,
645,
646,
647
]
},
{
"tb": 480,
"tbk": 4,
"tl": 6563,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
281,
282,
283,
284,
285,
648
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
649,
650,
100
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1052318,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
270,
651,
652,
653,
654,
71,
121
]
},
{
"tb": 71136,
"tbk": 156,
"tl": 37594,
"mb": 20976,
"mbk": 46,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
590,
591,
592,
655,
656,
657
]
},
{
"tb": 2880,
"tbk": 15,
"tl": 439,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
61,
62,
63,
64,
65,
110,
111,
112,
565,
253,
254
]
},
{
"tb": 1920,
"tbk": 1,
"tl": 2538817,
"mb": 1920,
"mbk": 1,
"gb": 1920,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
270,
658,
659,
660,
661,
662,
663,
664,
665
]
},
{
"tb": 32,
"tbk": 1,
"tl": 834,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
666,
636,
71,
121
]
},
{
"tb": 256,
"tbk": 1,
"tl": 7247,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
345,
569,
570,
571,
572,
573,
667,
668
]
},
{
"tb": 128,
"tbk": 1,
"tl": 138,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
50,
51,
52,
53,
54,
55,
669,
360,
361
]
},
{
"tb": 39090,
"tbk": 28,
"tl": 22264,
"mb": 19584,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
281,
423,
424,
425,
426,
670
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1193,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
61,
62,
63,
64,
65,
66,
67,
68,
671,
535,
567
]
},
{
"tb": 96,
"tbk": 1,
"tl": 14,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
400,
672,
673,
674,
675,
676,
677,
678,
679
]
},
{
"tb": 96,
"tbk": 1,
"tl": 12,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
23,
24,
25,
680,
636
]
},
{
"tb": 2880,
"tbk": 10,
"tl": 3580,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
61,
681,
682,
683,
684,
685,
686
]
},
{
"tb": 96,
"tbk": 1,
"tl": 4820,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
23,
24,
25,
687,
205
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 46,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
93,
94,
95,
688
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 1068721,
"mb": 2097152,
"mbk": 1,
"gb": 2097152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
85,
318,
319,
320,
321,
322,
323,
689
]
},
{
"tb": 2560,
"tbk": 2,
"tl": 139962,
"mb": 1280,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
183,
184,
185,
186,
187,
188,
690
]
},
{
"tb": 24,
"tbk": 1,
"tl": 148,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
270,
691,
692,
693,
694,
695,
696,
697,
698
]
},
{
"tb": 192,
"tbk": 1,
"tl": 23070,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
270,
271,
272,
273,
57,
58,
59,
699,
274,
71
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 3592440,
"mb": 262144,
"mbk": 1,
"gb": 262144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
93,
94,
700,
701
]
},
{
"tb": 96,
"tbk": 1,
"tl": 10,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
23,
24,
25,
702,
44
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 3257,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
229,
230,
231,
703,
704,
115,
71
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 7692,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
93,
94,
95,
705
]
},
{
"tb": 256,
"tbk": 1,
"tl": 543,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
61,
62,
249,
250,
251,
252,
253,
706,
707
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1787,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
122,
123,
124,
125,
126,
114,
115,
71
]
},
{
"tb": 24,
"tbk": 1,
"tl": 563922,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
708,
709,
221,
222,
391,
71
]
},
{
"tb": 2912,
"tbk": 3,
"tl": 13066,
"mb": 2912,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
85,
86,
87,
88,
89,
710,
8,
9
]
},
{
"tb": 2097152,
"tbk": 8,
"tl": 182033,
"mb": 2097152,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59,
699
]
},
{
"tb": 24,
"tbk": 1,
"tl": 138352,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
711,
712,
713,
714,
715,
716,
717,
718,
719
]
},
{
"tb": 48,
"tbk": 1,
"tl": 138340,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
720,
721,
722,
723,
724,
725
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1052328,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
726,
727,
728,
729,
730,
71,
121
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 448783,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
93,
731,
732,
733
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 1894849,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
93,
226,
227,
734
]
},
{
"tb": 2592,
"tbk": 3,
"tl": 314899,
"mb": 2592,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
735,
736,
737,
738,
739,
740,
741,
742
]
},
{
"tb": 192,
"tbk": 1,
"tl": 5040,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
743,
744,
745,
746,
99
]
},
{
"tb": 2880,
"tbk": 12,
"tl": 1809,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
135,
136,
137,
747,
748
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2706,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
122,
123,
124,
125,
155,
749,
750,
751
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1724,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
85,
86,
87,
88,
89,
90,
441,
49
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2132,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
61,
62,
752,
753,
754,
755,
756,
757,
758,
759
]
},
{
"tb": 192,
"tbk": 3,
"tl": 16915,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
93,
94,
95,
760
]
},
{
"tb": 11648,
"tbk": 91,
"tl": 80,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
761,
762,
763,
764,
765,
766,
767,
768
]
},
{
"tb": 72,
"tbk": 1,
"tl": 1056619,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
769,
770,
771,
772,
773,
774,
775,
776,
777
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 251021,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
85,
318,
319,
320,
321,
322,
323,
778
]
},
{
"tb": 11648,
"tbk": 3,
"tl": 1746,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
101,
779,
780,
781,
782,
92,
70,
71
]
},
{
"tb": 56,
"tbk": 1,
"tl": 2475,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
783,
751,
44,
100
]
},
{
"tb": 1968,
"tbk": 2,
"tl": 80,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
784,
785,
786,
787,
788,
789
]
},
{
"tb": 16,
"tbk": 1,
"tl": 5,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
117,
388,
119,
120,
71,
121
]
},
{
"tb": 83886080,
"tbk": 1,
"tl": 1502982,
"mb": 83886080,
"mbk": 1,
"gb": 83886080,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
101,
779,
780,
781,
790,
791,
792,
793
]
},
{
"tb": 48,
"tbk": 1,
"tl": 961333,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
794,
795,
796,
797,
798,
799,
800,
801,
802
]
},
{
"tb": 1440,
"tbk": 12,
"tl": 2577,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
485,
486,
487,
488,
803
]
},
{
"tb": 216,
"tbk": 1,
"tl": 3592838,
"mb": 216,
"mbk": 1,
"gb": 216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
804,
805,
806,
807,
808,
809,
810,
811,
812
]
},
{
"tb": 1920,
"tbk": 1,
"tl": 3617971,
"mb": 1920,
"mbk": 1,
"gb": 1920,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
270,
813,
814,
815,
816,
817,
818,
819,
820
]
},
{
"tb": 4968,
"tbk": 9,
"tl": 3101,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
325,
326,
327,
821,
822,
823
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3593663,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
824,
825,
826,
827,
828,
829,
830,
831
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 3592687,
"mb": 65536,
"mbk": 1,
"gb": 65536,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
93,
94,
832,
833
]
},
{
"tb": 128,
"tbk": 1,
"tl": 3825,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
834,
835,
836,
837,
750
]
},
{
"tb": 1440,
"tbk": 12,
"tl": 333,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
281,
282,
283,
284,
536,
91
]
},
{
"tb": 8695,
"tbk": 10,
"tl": 169148,
"mb": 4352,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
838,
839,
840,
841,
842
]
},
{
"tb": 24,
"tbk": 1,
"tl": 119,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
708,
709,
221,
580,
160,
99
]
},
{
"tb": 32,
"tbk": 1,
"tl": 141,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
649,
843,
844,
845,
846,
847
]
},
{
"tb": 128,
"tbk": 1,
"tl": 25188,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
78,
79,
80,
81,
848,
120,
71
]
},
{
"tb": 96,
"tbk": 1,
"tl": 439913,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
23,
24,
25,
849,
71
]
},
{
"tb": 48,
"tbk": 1,
"tl": 961,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
850,
636,
71,
121
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 2135,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
281,
423,
424,
425,
426,
851
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2113,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
61,
62,
852,
853,
854,
855,
856,
857,
858,
859
]
},
{
"tb": 128,
"tbk": 1,
"tl": 7150,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
85,
318,
319,
320,
420,
860,
422,
44
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 3545,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
861,
862,
177
]
},
{
"tb": 96,
"tbk": 1,
"tl": 3595804,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
863,
864,
865,
866,
867,
868,
869,
870,
871
]
},
{
"tb": 83886080,
"tbk": 10,
"tl": 10595068,
"mb": 83886080,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
101,
779,
780,
781,
790,
872,
873,
874
]
},
{
"tb": 224,
"tbk": 1,
"tl": 5859,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
875,
876,
877,
878,
9
]
},
{
"tb": 64,
"tbk": 1,
"tl": 4810,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
879,
880,
99,
100
]
},
{
"tb": 16,
"tbk": 1,
"tl": 586933,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
50,
51,
52,
53,
54,
55,
275,
881,
372
]
},
{
"tb": 512,
"tbk": 1,
"tl": 23189,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
882,
883,
884,
885,
71
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2103,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
61,
62,
886,
887,
888,
889,
890,
891,
892,
893
]
},
{
"tb": 40960,
"tbk": 1,
"tl": 3942,
"mb": 40960,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
861,
894,
750
]
},
{
"tb": 96,
"tbk": 1,
"tl": 5852,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
23,
24,
25,
895,
9
]
},
{
"tb": 10560,
"tbk": 32,
"tl": 82804,
"mb": 10560,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
85,
318,
319,
320,
420,
442,
749,
750
]
},
{
"tb": 80,
"tbk": 1,
"tl": 3617998,
"mb": 80,
"mbk": 1,
"gb": 80,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
896,
897,
898,
899,
900,
901,
902,
903,
904
]
},
{
"tb": 32,
"tbk": 1,
"tl": 72,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
447,
905,
906,
907,
908,
909,
910,
911,
912
]
},
{
"tb": 160,
"tbk": 1,
"tl": 5027,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
913,
914,
915,
916,
917,
918,
919,
920,
921
]
},
{
"tb": 80000,
"tbk": 321,
"tl": 156331,
"mb": 16128,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
85,
922,
923,
924,
925,
926,
927,
928,
929
]
},
{
"tb": 512,
"tbk": 1,
"tl": 49,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
930,
931,
932,
933,
934,
935,
936,
937
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 1454768,
"mb": 2097152,
"mbk": 1,
"gb": 2097152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
85,
318,
319,
320,
321,
938,
445,
939
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1052309,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
940,
941,
942,
943,
944,
71,
121
]
},
{
"tb": 2883584,
"tbk": 11,
"tl": 6415151,
"mb": 2883584,
"mbk": 11,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
93,
945,
946,
947
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2144,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
61,
62,
948,
949,
950,
951,
952,
953,
954,
955
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 2727,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
85,
956,
957,
958,
959,
960,
961,
962,
963
]
},
{
"tb": 40960,
"tbk": 1,
"tl": 3020,
"mb": 40960,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
861,
964,
750
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2123,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
61,
62,
965,
966,
967,
968,
969,
970,
971,
972
]
},
{
"tb": 11648,
"tbk": 3,
"tl": 460,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
93,
161,
973,
557
]
},
{
"tb": 128,
"tbk": 1,
"tl": 114750,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
78,
79,
80,
81,
974,
199,
200
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
975,
976,
77,
100
]
},
{
"tb": 48,
"tbk": 2,
"tl": 1173842,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
407,
408,
409,
410,
411,
412,
413,
414,
977,
978
]
},
{
"tb": 24,
"tbk": 1,
"tl": 586936,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
407,
408,
409,
410,
411,
412,
413,
414,
881,
372
]
},
{
"tb": 96,
"tbk": 1,
"tl": 100416,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
23,
24,
25,
687,
440
]
},
{
"tb": 72,
"tbk": 1,
"tl": 5569,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
979,
234,
71,
121
]
},
{
"tb": 2560,
"tbk": 1,
"tl": 5032,
"mb": 2560,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
50,
51,
52,
53,
54,
55,
980,
981,
982
]
},
{
"tb": 64,
"tbk": 1,
"tl": 170,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
135,
136,
137,
983,
418
]
},
{
"tb": 264,
"tbk": 2,
"tl": 1166068,
"mb": 264,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
270,
984,
985,
986,
987,
988,
989,
990,
991
]
},
{
"tb": 32,
"tbk": 1,
"tl": 64,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
15,
16,
17,
992,
19,
20
]
},
{
"tb": 256,
"tbk": 1,
"tl": 114,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
345,
346,
347,
348,
349,
350,
351,
352,
221,
580
]
},
{
"tb": 1920,
"tbk": 1,
"tl": 961325,
"mb": 1920,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
270,
271,
272,
273,
57,
58,
59,
406,
993,
994
]
},
{
"tb": 64,
"tbk": 1,
"tl": 5045,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
135,
136,
137,
983,
240
]
},
{
"tb": 512,
"tbk": 1,
"tl": 341,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
995,
27,
99,
100
]
},
{
"tb": 24,
"tbk": 1,
"tl": 2539052,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
940,
996,
997,
998,
999,
1000,
1001,
1002,
1003
]
},
{
"tb": 60080,
"tbk": 1117,
"tl": 207285,
"mb": 12864,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
838,
1004,
1005,
1006,
1007,
1008,
1009
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 3601000,
"mb": 1024,
"mbk": 1,
"gb": 1024,
"gbk": 1,
"eb": 1024,
"ebk": 1,
"fs": [
1010,
1011,
1012,
1013,
1014,
1015,
1016,
1017,
1018,
1019,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
1030
]
},
{
"tb": 8,
"tbk": 1,
"tl": 546,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
61,
62,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1937,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
1047
]
},
{
"tb": 1280,
"tbk": 1,
"tl": 1951,
"mb": 1280,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
78,
79,
80,
81,
1048,
83,
84
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 391278,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
93,
94,
95,
1049
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
975,
976,
375,
300,
71,
121
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 69857,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
183,
184,
185,
186,
187,
188,
1050
]
},
{
"tb": 96,
"tbk": 1,
"tl": 11,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
157,
119,
120,
71,
121
]
},
{
"tb": 512,
"tbk": 1,
"tl": 3448,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1051,
1052,
1053,
1054,
1055,
1056,
1057,
1058
]
},
{
"tb": 512,
"tbk": 1,
"tl": 30,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
1059,
98,
99,
100
]
},
{
"tb": 512,
"tbk": 1,
"tl": 3021,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
1060,
1061,
99,
100
]
},
{
"tb": 216,
"tbk": 1,
"tl": 7259,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
804,
1062,
1063,
1064,
1065,
1066,
1067,
1068,
1069
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 3091,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
85,
1070,
1071,
1072,
1073,
1074,
1075,
1076,
1077
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1052323,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1078,
1079,
1080,
1081,
1082,
71,
121
]
},
{
"tb": 149504,
"tbk": 3,
"tl": 17349,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
93,
731,
1083,
1084
]
},
{
"tb": 48,
"tbk": 2,
"tl": 97,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
1085,
609,
610,
611,
612,
613
]
},
{
"tb": 2880,
"tbk": 15,
"tl": 67,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
61,
62,
63,
64,
65,
110,
111,
112,
113,
441,
49
]
},
{
"tb": 10485760,
"tbk": 80,
"tl": 194106719,
"mb": 10485760,
"mbk": 80,
"gb": 10485760,
"gbk": 80,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
50,
51,
52,
53,
54,
55,
1086,
1087,
1088
]
},
{
"tb": 2880,
"tbk": 15,
"tl": 430,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
61,
62,
63,
64,
65,
110,
111,
112,
565,
253,
706
]
},
{
"tb": 72,
"tbk": 3,
"tl": 111,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1089,
1090,
1091,
1092,
1093,
1094,
1095,
1096,
1097
]
},
{
"tb": 83886080,
"tbk": 1,
"tl": 412454,
"mb": 83886080,
"mbk": 1,
"gb": 83886080,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
50,
51,
52,
53,
54,
55,
1098,
1099,
1100
]
},
{
"tb": 512,
"tbk": 1,
"tl": 17,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
93,
161,
1101,
27
]
},
{
"tb": 480,
"tbk": 4,
"tl": 191,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
281,
282,
283,
284,
536,
441
]
},
{
"tb": 289055,
"tbk": 8,
"tl": 7343,
"mb": 164748,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
838,
839,
840,
841,
1102
]
}
],
"ftbl": [
"[root]",
"0x579c7c5c63b9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x579c7c4984ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x579c7c5657d5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c5657d5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c5657d5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c514485: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x579c7c482d26: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x579c7c486040: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x579c7c538104: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x579c7c78a819: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x579c7c78962a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x579c7c78c32c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c78c32c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c78c32c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x579c7c6e59e9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x579c7c6e59e9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x579c7c6e59e9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x579c7c50609a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x579c7c3e4a26: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x579c7c538714: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x579c7c7fef79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x579c7c7fd709: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x579c7c4ad281: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x579c7c4cda38: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x579c7c58e33e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x579c7c411325: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x579c7c403a15: winter_verifier::perform_verification (verifier/src/lib.rs:311:25)",
"0x579c7c49530c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x579c7c548b59: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c548b59: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c548b59: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c548b59: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5ad6ba: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5ab9a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d7eea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c4efe8c: winter_prover::Prover::generate_proof (prover/src/lib.rs:505:52)",
"0x579c7c4cc041: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x579c7c4cd018: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x579c7c58b8be: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x579c7c4dee9d: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:175:17)",
"0x579c7c4dd34f: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:55:17)",
"0x579c7c3e3f63: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x579c7c538c15: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x579c7c40750b: winter_verifier::verify (verifier/src/lib.rs:109:19)",
"0x579c7c4c2c21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x579c7c4ccdd8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x579c7c58e6ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x579c7c4088ec: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x579c7c40b4b0: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x579c7c515e08: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c515e08: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c515e08: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x579c7c59bb85: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x579c7c59bb85: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x579c7c59bb85: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x579c7c564d83: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x579c7c59bd25: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x579c7c59bd25: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x579c7c59bd25: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x579c7c5630e6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x579c7c7c1a99: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x579c7c7c1c0a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x579c7c7b561c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c7b561c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c7b561c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x579c7c7b55cc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x579c7c7b55cc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x579c7c7b55cc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x579c7c475c0e: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x579c7c4f119c: winter_prover::Prover::generate_proof (prover/src/lib.rs:600:25)",
"0x579c7c5012ee: winter_prover::Prover::prove (prover/src/lib.rs:175:37)",
"0x579c7c75b69c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x579c7c75b69c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x579c7c75b69c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x579c7c400084: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x579c7c3ffd9a: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x579c7c4071dd: winter_verifier::verify (verifier/src/lib.rs:96:32)",
"0x579c7c516511: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c516511: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c516511: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x579c7c59ac80: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x579c7c5301ce: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x579c7c407038: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:216:32)",
"0x579c7c5e6e5f: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x579c7c48bdec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x579c7c436c84: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c436c84: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c436c84: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x579c7c59ac56: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x579c7c46ea4c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x579c7c4713c0: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x579c7c4760bd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x579c7c4cfae7: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x579c7c469e2f: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x579c7c639338: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x579c7c3d76e8: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:227:28)",
"0x579c7c414cb7: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x579c7c403abc: winter_verifier::perform_verification (verifier/src/lib.rs:317:25)",
"0x579c7c4075da: winter_verifier::verify (verifier/src/lib.rs:111:21)",
"0x579c7c461822: winterfell::main (winterfell/src/main.rs:71:11)",
"0x579c7c49269c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x579c7c54870f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c54870f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c54870f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c54870f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5ad27d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5aba55: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d78ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c648ac4: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x579c7c59c2d9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x579c7c59c2d9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x579c7c59c2d9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x579c7c46edbc: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x579c7c509b91: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x579c7c4f130a: winter_prover::Prover::generate_proof (prover/src/lib.rs:608:34)",
"0x579c7c5c5847: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x579c7c467245: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x579c7c462330: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:177:13)",
"0x579c7c540518: winter_prover::trace::Trace::validate (src/trace/mod.rs:123:26)",
"0x579c7c4f2578: winter_prover::Prover::generate_proof (prover/src/lib.rs:379:17)",
"0x579c7c46127c: winterfell::main (winterfell/src/main.rs:54:17)",
"0x579c7c497a6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x579c7c565875: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c565875: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c565875: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c46eaaf: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x579c7c4ca2a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x579c7c4cda98: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x579c7c58d91b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x579c7c46f0fa: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x579c7c4cca21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x579c7c4cce08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x579c7c58f42e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x579c7c538f07: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x579c7c4c3fe1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x579c7c4cd0d8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x579c7c58b67d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x579c7c5c64e2: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x579c7c3ffc98: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x579c7c51645b: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x579c7c51645b: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x579c7c51645b: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x579c7c477e92: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x579c7c477b2c: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x579c7c4f0b02: winter_prover::Prover::generate_proof (prover/src/lib.rs:571:9)",
"0x579c7c7fd9ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x579c7c7ff04c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c7ff04c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c7ff04c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x579c7c7fcc7c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x579c7c7fcc7c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x579c7c7fcc7c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x579c7c7f8ece: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x579c7c537370: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x579c7c43fa4c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x579c7c482e35: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x579c7c46221b: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:175:9)",
"0x579c7c4eab72: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:371:13)",
"0x579c7c5cb2cb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:64:9)",
"0x579c7c403fcc: winter_verifier::perform_verification (verifier/src/lib.rs:225:43)",
"0x579c7c4699fe: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x579c7c414eb1: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x579c7c49144a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x579c7c55f4f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c55f4f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c55f4f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c55f4f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5ad9da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5aabc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d7eba: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c4fefcf: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:644:36)",
"0x579c7c638b9b: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x579c7c47d2d3: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x579c7c472afb: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x579c7c477bc6: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x579c7c43e547: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x579c7c53e3a7: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x579c7c537d54: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x579c7c4b3a31: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x579c7c4cd048: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x579c7c59055e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x579c7c4043b2: winter_verifier::perform_verification (verifier/src/lib.rs:179:9)",
"0x579c7c7fcadc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x579c7c7fbd6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x579c7c7fbae8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x579c7c7fbae8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x579c7c7fb124: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x579c7c7f8d43: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x579c7c5caf8c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:40:30)",
"0x579c7c564328: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c564328: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c564328: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x579c7c59c205: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x579c7c59c205: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x579c7c59c205: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x579c7c4efea3: winter_prover::Prover::generate_proof (prover/src/lib.rs:510:39)",
"0x579c7c475c29: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x579c7c42558a: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:155:31)",
"0x579c7c428e25: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:128:17)",
"0x579c7c623c6e: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x579c7c53f55d: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:243:25)",
"0x579c7c461d94: winterfell::build_do_work_trace (winterfell/src/main.rs:91:5)",
"0x579c7c50160b: winterfell::main::{{closure}} (winterfell/src/main.rs:30:23)",
"0x579c7c4ec1b5: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:547:13)",
"0x579c7c402fc9: winter_verifier::perform_verification (verifier/src/lib.rs:266:61)",
"0x579c7c4af511: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x579c7c4cda08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x579c7c58b40e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x579c7c472c69: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x579c7c7c412b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x579c7c7c4061: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x579c7c7bd46b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x579c7c7b7b71: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x579c7c7b8307: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x579c7c7c790b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x579c7c4d218f: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x579c7c47293d: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x579c7c3e3461: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x579c7c47a03f: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x579c7c3eacba: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x579c7c4eb010: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:354:9)",
"0x579c7c427a9c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:51:13)",
"0x579c7c3f81bf: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x579c7c3f5ac4: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x579c7c3f9f9d: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x579c7c42d30f: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x579c7c42c506: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x579c7c500acc: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:701:36)",
"0x579c7c6e0f36: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c6e0f36: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c6e0f36: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c43807a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x579c7c408845: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x579c7c4f1217: winter_prover::Prover::generate_proof (prover/src/lib.rs:603:29)",
"0x579c7c4112d7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x579c7c438517: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x579c7c3f5238: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x579c7c3ffdce: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x579c7c4eda42: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:512:13)",
"0x579c7c4028e5: winter_verifier::perform_verification (verifier/src/lib.rs:185:13)",
"0x579c7c40029f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x579c7c47bdf3: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x579c7c7b4c69: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x579c7c7b1c1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x579c7c7aedb6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c7aedb6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c7aedb6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c475b68: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x579c7c565646: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c565646: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c565646: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c440882: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x579c7c46f46d: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x579c7c5364ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x579c7c403636: winter_verifier::perform_verification (verifier/src/lib.rs:305:9)",
"0x579c7c4c7b21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x579c7c4cd498: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x579c7c58f7ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x579c7c480db7: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x579c7c50dbae: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x579c7c4923fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x579c7c551edf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c551edf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c551edf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c551edf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5ae88d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5aa0c5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d79dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c4ff08b: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:648:34)",
"0x579c7c48e7bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x579c7c564a22: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c564a22: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c564a22: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x579c7c4eee23: winter_prover::Prover::generate_proof (prover/src/lib.rs:423:33)",
"0x579c7c3e28f5: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x579c7c3e2750: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x579c7c59bdf5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x579c7c59bdf5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x579c7c59bdf5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x579c7c3f224c: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x579c7c7892e9: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x579c7c698840: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x579c7c698aa9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x579c7c6a8111: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x579c7c46d7dc: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x579c7c4034f7: winter_verifier::perform_verification (verifier/src/lib.rs:298:27)",
"0x579c7c3d589d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x579c7c48d03c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x579c7c54f909: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c54f909: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c54f909: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c54f909: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5aee3a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5aa934: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d7a2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c402ba2: winter_verifier::perform_verification (verifier/src/lib.rs:214:41)",
"0x579c7c52f2d4: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x579c7c64878d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x579c7c47b2f2: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x579c7c4edf02: winter_prover::Prover::generate_proof (prover/src/lib.rs:233:27)",
"0x579c7c54bac3: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c54bac3: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c54bac3: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c54bac3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5adbd4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5aa29a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d8654: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c460d51: winterfell::main (winterfell/src/main.rs:22:32)",
"0x579c7c5c6c5a: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x579c7c63a6a7: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x579c7c51d889: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x579c7c48c32c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x579c7c3e4aea: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c3e4aea: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c3e4aea: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x579c7c59aca6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x579c7c47b508: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x579c7c565b95: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c565b95: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c565b95: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c4cfa57: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x579c7c46e259: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x579c7c46f739: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x579c7c4729b6: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x579c7c50880b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x579c7c506a1d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x579c7c67ac2a: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x579c7c67355d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x579c7c679a25: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x579c7c66c86e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x579c7c3ea106: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x579c7c426ac9: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:290:18)",
"0x579c7c42588e: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:173:30)",
"0x579c7c548033: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c548033: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c548033: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c548033: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5ae9ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5ab545: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d8fdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c4ee6db: winter_prover::Prover::generate_proof (prover/src/lib.rs:293:23)",
"0x579c7c408f56: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x579c7c5e5eb6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x579c7c60afbd: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x579c7c48bb4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x579c7c4ea012: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c4ea012: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c4ea012: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x579c7c59cb05: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x579c7c59cb05: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x579c7c59cb05: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x579c7c3eab95: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x579c7c50907b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x579c7c50628d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x579c7c67a2ea: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x579c7c655009: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x579c7c5bea75: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x579c7c435598: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x579c7c5ead85: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x579c7c5eae16: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x579c7c403edf: winter_verifier::perform_verification (verifier/src/lib.rs:228:13)",
"0x579c7c546539: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c546539: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c546539: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c546539: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5adb7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5abb14: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d944a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c4ee4ea: winter_prover::Prover::generate_proof (prover/src/lib.rs:272:43)",
"0x579c7c3fba78: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x579c7c428be1: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:135:9)",
"0x579c7c4f2266: winter_prover::Prover::generate_proof (prover/src/lib.rs:417:21)",
"0x579c7c509dca: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x579c7c4f1e8b: winter_prover::Prover::generate_proof (prover/src/lib.rs:450:13)",
"0x579c7c47b2db: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x579c7c42a4bd: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x579c7c500eb8: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:716:26)",
"0x579c7c4ef931: winter_prover::Prover::generate_proof (prover/src/lib.rs:482:37)",
"0x579c7c493b7c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x579c7c54d19f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c54d19f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c54d19f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c54d19f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5ae54d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5ab355: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d8ddd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c4291b1: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x579c7c462247: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:176:13)",
"0x579c7c4dcadf: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:41:22)",
"0x579c7c427b39: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:36)",
"0x579c7c4f21b5: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:21)",
"0x579c7c55ed1f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c55ed1f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c55ed1f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c55ed1f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5ad61d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5a94f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d834d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c3f87f7: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x579c7c491c1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x579c7c3e23e2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c3e23e2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c3e23e2: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x579c7c3f524b: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x579c7c438999: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x579c7c3da8cd: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x579c7c49506c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x579c7c515f38: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c515f38: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c515f38: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x579c7c59c7c5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x579c7c59c7c5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x579c7c59c7c5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x579c7c3e28e2: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x579c7c4ded5a: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:170:36)",
"0x579c7c3f9a93: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x579c7c4086db: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x579c7c47a6b2: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x579c7c509db3: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x579c7c436785: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x579c7c544997: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x579c7c537970: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x579c7c787700: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x579c7c787939: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x579c7c787132: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x579c7c44017c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x579c7c43831d: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x579c7c638b89: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x579c7c4f06b8: winter_prover::Prover::generate_proof (prover/src/lib.rs:558:13)",
"0x579c7c3f5314: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x579c7c7c42db: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x579c7c7c3fb1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x579c7c7bd2ab: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x579c7c7b9f3e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x579c7c7bb400: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x579c7c7babf8: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x579c7c4f1e70: winter_prover::Prover::generate_proof (prover/src/lib.rs:449:13)",
"0x579c7c5630a6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x579c7c4ef4d0: winter_prover::Prover::generate_proof (prover/src/lib.rs:452:35)",
"0x579c7c47a1b6: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x579c7c40877b: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x579c7c43fcc7: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x579c7c42b9d6: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x579c7c42ae23: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x579c7c4ff6ee: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:669:26)",
"0x579c7c41021f: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x579c7c49049c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x579c7c54cb4f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c54cb4f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c54cb4f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c54cb4f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c59803e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x579c7c5ac035: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d90ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c46174e: winterfell::main (winterfell/src/main.rs:65:26)",
"0x579c7c55fd2f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c55fd2f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c55fd2f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c55fd2f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5ad56d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5aa125: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d898d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c647d29: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x579c7c52a8a2: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x579c7c7c49e9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c7c49e9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c7c49e9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c7c49e9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x579c7c7c4e2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c7c4df7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c7c4fce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c7c74c9: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x579c7c3e4126: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x579c7c5cdb0a: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x579c7c5e47a8: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x579c7c469114: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x579c7c486e4c: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x579c7c537f37: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x579c7c538d01: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x579c7c3f82ce: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x579c7c3ff41f: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x579c7c3fda15: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x579c7c636472: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x579c7c47299f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x579c7c7c20f0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x579c7c7b6669: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x579c7c7b5e51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x579c7c7b5950: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x579c7c6485ed: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x579c7c49b17c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x579c7c55deef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c55deef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c55deef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c55deef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5ae27d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5a9c65: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5ba9bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c4ee033: winter_prover::Prover::generate_proof (prover/src/lib.rs:248:41)",
"0x579c7c51b0d2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x579c7c52a82f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x579c7c561e6f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c561e6f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c561e6f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c561e6f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5adecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5a9825: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d8afd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c648c5a: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x579c7c7b6e9d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x579c7c7c242b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x579c7c7c61e3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x579c7c48cd9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x579c7c555e5f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c555e5f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c555e5f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c555e5f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5ad3cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5aae87: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d7e8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c4dcbcd: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:51:26)",
"0x579c7c441c4b: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x579c7c52abbd: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x579c7c4288b2: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:28)",
"0x579c7c4940bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x579c7c5456af: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c5456af: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c5456af: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c5456af: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c59a705: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x579c7c5ab50a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d7b3d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c3fe891: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x579c7c7b52c6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x579c7c6486ca: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x579c7c6515e9: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x579c7c46f2b7: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x579c7c48e52a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x579c7c546949: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c546949: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c546949: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c546949: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5ae96a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5aa874: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d8b8a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c40b40e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x579c7c498f6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x579c7c55e22b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c55e22b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c55e22b: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c55e22b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x579c7c5aeaad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5ab955: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c4cf16d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c50f618: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x579c7c4106fe: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x579c7c52a921: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x579c7c648b73: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x579c7c4ec3d4: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:541:17)",
"0x579c7c7c463b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x579c7c7c3f01: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x579c7c7bd38b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x579c7c7ba04e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x579c7c7bb9ec: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x579c7c7ba55a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x579c7c440abb: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x579c7c647e04: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x579c7c403c03: winter_verifier::perform_verification (verifier/src/lib.rs:323:5)",
"0x579c7c53876e: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x579c7c4ea4c4: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c4ea4c4: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c4ea4c4: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x579c7c59abf6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x579c7c4620ad: <winterfell::WorkAir as winter_air::air::Air>::new (winterfell/src/main.rs:151:23)",
"0x579c7c5c9f36: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:226:17)",
"0x579c7c5e419e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x579c7c6da0b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x579c7c6dcd69: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x579c7c6e4322: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x579c7c43865f: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x579c7c5cae16: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:26:25)",
"0x579c7c48f77c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x579c7c553bf2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c553bf2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c553bf2: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c553bf2: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x579c7c5aeb7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5a9c35: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d78cd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c50da6a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x579c7c50772b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x579c7c506f9d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x579c7c67a69a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x579c7c6551e9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x579c7c5bf15b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x579c7c4356eb: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x579c7c482b7f: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x579c7c5590ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c5590ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c5590ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c5590ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5ad44d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5a9625: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d813d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c3e1d28: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x579c7c5401b0: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:140:51)",
"0x579c7c5e1476: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x579c7c3dffc1: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x579c7c3e1388: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x579c7c50e55c: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x579c7c5bc129: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x579c7c50db36: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x579c7c511296: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x579c7c4eabcf: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:369:9)",
"0x579c7c54c2ef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c54c2ef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c54c2ef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c54c2ef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5ae4cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5aad15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d77dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c4088d5: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x579c7c54c4ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c54c4ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c54c4ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c54c4ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5aed3d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5a95f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d921d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c414ff2: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x579c7c4b08d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x579c7c4cd318: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x579c7c58e12d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x579c7c3f7af2: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x579c7c623ac5: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x579c7c51acbe: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x579c7c4f002d: winter_prover::Prover::generate_proof (prover/src/lib.rs:524:9)",
"0x579c7c54918f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c54918f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c54918f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c54918f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5adccd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5aacd7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d850d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c5cdaa0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x579c7c7b6e3d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x579c7c7c2748: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x579c7c7c60a7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x579c7c4798d8: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x579c7c461e36: <winterfell::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (winterfell/src/main.rs:133:9)",
"0x579c7c407330: winter_verifier::verify (verifier/src/lib.rs:98:38)",
"0x579c7c5653c5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c5653c5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c5653c5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c4ee8cd: winter_prover::Prover::generate_proof (prover/src/lib.rs:308:37)",
"0x579c7c667f7b: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x579c7c6721a9: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x579c7c66c416: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x579c7c55babf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c55babf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c55babf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c55babf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5aee7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5ab925: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d85dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c3d7788: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:228:23)",
"0x579c7c51b4ab: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x579c7c40803b: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:102:85)",
"0x579c7c5e4a6e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x579c7c5ead72: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x579c7c4823b5: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x579c7c647d9d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x579c7c5454b9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c5454b9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c5454b9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c5454b9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5ad8ea: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5aa4f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d839a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c4dbfe8: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:83:9)",
"0x579c7c51b5c3: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x579c7c7c448b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x579c7c7c3e51: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x579c7c7bd54b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x579c7c7b7c41: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x579c7c7b82c7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x579c7c7c795b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x579c7c4ec350: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:543:13)",
"0x579c7c477d52: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x579c7c42ae5c: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x579c7c3d588c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x579c7c5493a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c5493a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c5493a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c5493a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5ae48a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5a9fc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d8a3a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c4edd8f: winter_prover::Prover::generate_proof (prover/src/lib.rs:214:39)",
"0x579c7c3f52c5: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x579c7c436428: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x579c7c4ee132: winter_prover::Prover::generate_proof (prover/src/lib.rs:262:22)",
"0x579c7c538e5f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x579c7c43cdac: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x579c7c509d4a: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x579c7c3f9d08: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x579c7c536cf0: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x579c7c4037a8: winter_verifier::perform_verification (verifier/src/lib.rs:306:42)",
"0x579c7c3e1d37: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x579c7c3eab7f: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x579c7c482b3e: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x579c7c4916dc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x579c7c55344f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c55344f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c55344f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c55344f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5ae04d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5a8f75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d941d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c4efdcf: winter_prover::Prover::generate_proof (prover/src/lib.rs:501:51)",
"0x579c7c4e575a: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x579c7c5c9852: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:503:32)",
"0x579c7c5e6dc6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x579c7c60493a: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x579c7c5cee27: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x579c7c5d9a22: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x579c7c4999ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x579c7c565a55: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c565a55: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c565a55: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c4ee877: winter_prover::Prover::generate_proof (prover/src/lib.rs:306:39)",
"0x579c7c46aec7: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x579c7c3f7eae: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x579c7c3fba1c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x579c7c5ca2f8: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:651:17)",
"0x579c7c558acf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c558acf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c558acf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c558acf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5ada5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5aac45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d8e4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c3d71cf: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:283:9)",
"0x579c7c4b17a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x579c7c4cd108: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x579c7c58ddae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x579c7c4041eb: winter_verifier::perform_verification (verifier/src/lib.rs:184:9)",
"0x579c7c63cd94: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x579c7c64895d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x579c7c43af66: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x579c7c531d0d: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x579c7c537ad4: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x579c7c556b9d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c556b9d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c556b9d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c556b9d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5ad2aa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5aa394: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d8b5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c5375c3: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x579c7c47d222: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x579c7c55095f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c55095f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c55095f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c55095f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5aea4d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5aae15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d8f5d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c64e7af: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x579c7c497fac: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x579c7c54d8df: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c54d8df: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c54d8df: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c54d8df: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c598b4e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x579c7c5ab415: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d92ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c40a4f7: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x579c7c42a572: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x579c7c565af5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c565af5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c565af5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c471499: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x579c7c531e73: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x579c7c507a8b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x579c7c506e3d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x579c7c67a78a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x579c7c6552a9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x579c7c5bdbc8: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x579c7c5bc195: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x579c7c4cfc07: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x579c7c42d9bd: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x579c7c429c90: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x579c7c42c614: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x579c7c49aedc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x579c7c55d25f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c55d25f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c55d25f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c55d25f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c59a18b: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x579c7c5aa8d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d856d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c4ee7f7: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:36)",
"0x579c7c475e24: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x579c7c48dd4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x579c7c55386f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c55386f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c55386f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c55386f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5ae61d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5a9285: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d7c1d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c4edeb3: winter_prover::Prover::generate_proof (prover/src/lib.rs:222:20)",
"0x579c7c56036f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c56036f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c56036f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c56036f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5ad89d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5ab895: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d8bdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c53ffe2: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:140:32)",
"0x579c7c659c7d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x579c7c65c613: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x579c7c46d237: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x579c7c54becf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c54becf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c54becf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c54becf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5aed5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5abda7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d8edd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c4610e6: winterfell::main (winterfell/src/main.rs:38:27)",
"0x579c7c6384f9: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x579c7c43637b: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x579c7c4aa611: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x579c7c4cd288: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x579c7c58bc0b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x579c7c43b3c9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x579c7c7fdea0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x579c7c7fe0d9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x579c7c7fe3d2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x579c7c7ff159: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x579c7c3e332d: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x579c7c5c87a8: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:216:31)",
"0x579c7c5e6d36: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x579c7c604bd0: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x579c7c5d2f66: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x579c7c5da8f6: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x579c7c5409a5: winter_prover::trace::Trace::validate (src/trace/mod.rs:179:13)",
"0x579c7c4f1e30: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:13)",
"0x579c7c51b347: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x579c7c43ceb4: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x579c7c54e58d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c54e58d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c54e58d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c54e58d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5add7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5a9d34: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d830a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c537733: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x579c7c544b50: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x579c7c503efa: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x579c7c43e356: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x579c7c492e6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x579c7c54db29: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c54db29: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c54db29: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c54db29: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5adcaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5ac084: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d819a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c47b24b: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x579c7c3f2237: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x579c7c429a29: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x579c7c5e71d6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x579c7c4ba6d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x579c7c4cd7c8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x579c7c58c67e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x579c7c486216: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x579c7c650de9: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x579c7c4031ac: winter_verifier::perform_verification (verifier/src/lib.rs:275:24)",
"0x579c7c428973: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:33)",
"0x579c7c4a5c01: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x579c7c4cd408: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x579c7c58fc54: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x579c7c4f2285: winter_prover::Prover::generate_proof (prover/src/lib.rs:418:17)",
"0x579c7c55705d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c55705d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c55705d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c55705d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5addda: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5aade4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d81ca: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c5377eb: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x579c7c43b31c: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x579c7c4862b9: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x579c7c48c5cc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x579c7c54faff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c54faff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c54faff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c54faff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5ad4ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5aa337: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d8e8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c460edf: winterfell::main (winterfell/src/main.rs:28:26)",
"0x579c7c54f4cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c54f4cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c54f4cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c54f4cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5ae0dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5ab3d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d7a6d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c4edcd2: winter_prover::Prover::generate_proof (prover/src/lib.rs:210:38)",
"0x579c7c4901fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x579c7c552622: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c552622: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c552622: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c552622: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x579c7c5addaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5a9484: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5c68ea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c535d67: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x579c7c54a69a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c54a69a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c54a69a: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c54a69a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x579c7c5ad4cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5aba1a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c635f4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c46f243: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x579c7c5513bf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c5513bf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c5513bf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c5513bf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5ae6cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5abe45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d852d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c4104ab: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x579c7c42ad9a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x579c7c4ee511: winter_prover::Prover::generate_proof (prover/src/lib.rs:274:13)",
"0x579c7c48fa1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x579c7c5659b5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c5659b5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c5659b5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c4ee909: winter_prover::Prover::generate_proof (prover/src/lib.rs:309:32)",
"0x579c7c3f7440: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x579c7c5dfdb6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x579c7c3dfb11: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x579c7c554ecd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c554ecd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c554ecd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c554ecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5ae09a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5a9544: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d873a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c53750b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x579c7c551b04: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c551b04: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c551b04: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c551b04: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x579c7c5aeeaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5aad64: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d90da: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c43ae8d: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x579c7c43ab8e: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x579c7c5609dd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c5609dd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c5609dd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c5609dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5adc7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5aaff4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d886a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c53767b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x579c7c52ab6c: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x579c7c4255e4: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:156:33)",
"0x579c7c63614c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x579c7c3ffe0c: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x579c7c4dc028: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:83:31)",
"0x579c7c5e27af: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x579c7c40b41d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x579c7c53f131: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x579c7c513853: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x579c7c5c6832: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x579c7c4ed978: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:517:13)",
"0x579c7c546f8f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c546f8f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c546f8f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c546f8f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5ae06d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5a9f75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d779d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c3f73a8: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x579c7c5060af: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x579c7c3d9036: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x579c7c5c9c48: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:300:57)",
"0x579c7c4106df: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x579c7c5477f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c5477f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c5477f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c5477f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5ad34a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5a93a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d913a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c4fef12: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:640:42)",
"0x579c7c7fe108: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x579c7c7fe4ca: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x579c7c7fe4ca: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x579c7c7fe26e: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x579c7c7fe26e: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x579c7c7fe35d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x579c7c3afd82: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x579c7c3afd82: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x579c7c3afd82: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c3afd82: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c3afd82: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c3afd82: std::io::buffered::bufwriter::BufWriter<W>::with_capacity (io/buffered/bufwriter.rs:115:33)",
"0x579c7c3afd82: std::io::buffered::linewriter::LineWriter<W>::with_capacity (io/buffered/linewriter.rs:109:29)",
"0x579c7c3afd82: std::io::buffered::linewriter::LineWriter<W>::new (io/buffered/linewriter.rs:89:9)",
"0x579c7c3afd82: std::io::stdio::stdout::{{closure}} (src/io/stdio.rs:618:62)",
"0x579c7c3afd82: std::sync::once_lock::OnceLock<T>::get_or_init::{{closure}} (src/sync/once_lock.rs:250:50)",
"0x579c7c3afd82: std::sync::once_lock::OnceLock<T>::initialize::{{closure}} (src/sync/once_lock.rs:376:19)",
"0x579c7c3afd82: std::sync::once::Once::call_once_force::{{closure}} (src/sync/once.rs:208:40)",
"0x579c7c3afd82: std::sys_common::once::futex::Once::call (sys_common/once/futex.rs:124:21)",
"0x579c7c3aeeca: std::sync::once::Once::call_once_force (src/sync/once.rs:208:9)",
"0x579c7c3aeeca: std::sync::once_lock::OnceLock<T>::initialize (src/sync/once_lock.rs:375:9)",
"0x579c7c8191c5: std::sync::once_lock::OnceLock<T>::get_or_try_init (src/sync/once_lock.rs:298:9)",
"0x579c7c8191c5: std::sync::once_lock::OnceLock<T>::get_or_init (src/sync/once_lock.rs:250:15)",
"0x579c7c8191c5: std::io::stdio::stdout (src/io/stdio.rs:618:14)",
"0x579c7c8191c5: std::io::stdio::print_to (src/io/stdio.rs:1020:21)",
"0x579c7c8191c5: std::io::stdio::_print (src/io/stdio.rs:1097:5)",
"0x579c7c46103a: winterfell::main (winterfell/src/main.rs:36:5)",
"0x579c7c55c40d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c55c40d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c55c40d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c55c40d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5ade4a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5ab6e4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d7d1a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c531ba1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x579c7c49920c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x579c7c552e49: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c552e49: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c552e49: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c552e49: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5ad93a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5aa7f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d801a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c402c5f: winter_verifier::perform_verification (verifier/src/lib.rs:218:40)",
"0x579c7c5301b0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x579c7c3fbadb: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x579c7c51b0f5: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x579c7c555a3f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c555a3f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c555a3f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c555a3f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5aeb1d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5a9bb7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d79bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c415df7: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x579c7c414ca0: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x579c7c40d7be: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x579c7c403b34: winter_verifier::perform_verification (verifier/src/lib.rs:319:28)",
"0x579c7c54959f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c54959f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c54959f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c54959f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5990d6: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x579c7c5abbc5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d930d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c4073a8: winter_verifier::verify (verifier/src/lib.rs:102:24)",
"0x579c7c556e94: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c556e94: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c556e94: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c556e94: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x579c7c5ad5da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5abec4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d8c5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c43e46e: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x579c7c498ccc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x579c7c565c35: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c565c35: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c565c35: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c4ee88e: winter_prover::Prover::generate_proof (prover/src/lib.rs:307:44)",
"0x579c7c47c003: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x579c7c47d210: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x579c7c3e14f5: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x579c7c3d7a3f: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:230:34)",
"0x579c7c5e0026: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x579c7c6063a7: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x579c7c48f23c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x579c7c549bd9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x579c7c549bd9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x579c7c549bd9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x579c7c549bd9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x579c7c5ae00a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x579c7c5abc44: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x579c7c5d8c2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x579c7c3f74b2: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x579c7c42f081: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x579c7c42de86: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x579c7c4ff12f: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:655:31)",
"0x579c7c4103b7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x579c7c7b501a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)"
]
}