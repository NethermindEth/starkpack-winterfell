{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell",
"pid": 24866,
"tg": 4016137,
"te": 6566815,
"pps": [
{
"tb": 512,
"tbk": 1,
"tl": 24,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11
]
},
{
"tb": 480,
"tbk": 1,
"tl": 4040334,
"mb": 480,
"mbk": 1,
"gb": 480,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
12,
13,
14,
15,
16,
17,
18,
19,
20
]
},
{
"tb": 80,
"tbk": 1,
"tl": 5495,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
21,
22,
23,
24,
25,
11,
26
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 66425,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
29,
30,
31,
32,
33
]
},
{
"tb": 32,
"tbk": 1,
"tl": 7341,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
34,
35,
36,
37,
38,
39,
40,
41
]
},
{
"tb": 96,
"tbk": 1,
"tl": 5741,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
42,
43,
44,
45,
46,
47,
11
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 260161,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
21,
22,
23,
48,
49,
50,
51
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1200,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
52,
53,
54,
55,
56,
57
]
},
{
"tb": 96,
"tbk": 1,
"tl": 33,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
42,
43,
58,
59,
60,
61,
10
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 602080,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
34,
35,
36,
37,
62,
63,
64,
65
]
},
{
"tb": 96,
"tbk": 1,
"tl": 196536,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
42,
43,
58,
59,
60,
66,
67
]
},
{
"tb": 512,
"tbk": 1,
"tl": 93728,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
42,
43,
68,
69,
70,
71,
72
]
},
{
"tb": 32,
"tbk": 1,
"tl": 355885,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
76,
77,
78,
79
]
},
{
"tb": 48,
"tbk": 2,
"tl": 2134279,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
80,
81,
82,
83,
84,
85,
86,
87,
88,
89
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1025833,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
12,
90,
91,
92,
93,
94,
95,
96,
97
]
},
{
"tb": 256,
"tbk": 1,
"tl": 11,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
98,
99,
100,
101,
102,
103,
104,
105,
106,
107,
72
]
},
{
"tb": 16,
"tbk": 1,
"tl": 93335,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
108,
109,
110,
111,
112
]
},
{
"tb": 122880,
"tbk": 4,
"tl": 1550,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
29,
30,
31,
32,
113
]
},
{
"tb": 72,
"tbk": 3,
"tl": 279998,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
80,
81,
82,
83,
84,
85,
86,
87,
109,
110,
111,
112
]
},
{
"tb": 576,
"tbk": 2,
"tl": 50,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
114,
115,
116,
117,
118,
119,
120,
121,
122
]
},
{
"tb": 2167,
"tbk": 8,
"tl": 446122,
"mb": 1088,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
42,
43,
123,
124,
125,
126,
127
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 617398,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
21,
22,
23,
48,
128,
129,
130
]
},
{
"tb": 67108864,
"tbk": 2,
"tl": 2190107,
"mb": 33554432,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
29,
30,
31,
32,
131
]
},
{
"tb": 512,
"tbk": 1,
"tl": 126,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
21,
22,
23,
132,
10,
11,
26
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1067151,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
108,
133,
134
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1598,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
98,
99,
135,
136,
137,
138,
139,
140,
141,
142
]
},
{
"tb": 67108864,
"tbk": 2,
"tl": 4166261,
"mb": 67108864,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
143,
144,
145,
146,
147,
148,
149,
150
]
},
{
"tb": 48,
"tbk": 1,
"tl": 6537394,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
151,
152,
153,
154,
155,
156,
157,
72
]
},
{
"tb": 16,
"tbk": 1,
"tl": 111,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
158,
159,
160,
161,
162,
163,
164
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1393411,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
166,
167,
168,
169,
170,
72
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 130052,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
171,
172,
173
]
},
{
"tb": 640,
"tbk": 1,
"tl": 5765,
"mb": 640,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
171,
174,
41
]
},
{
"tb": 63000,
"tbk": 37,
"tl": 28633,
"mb": 31552,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
166,
175,
176,
177,
178,
179
]
},
{
"tb": 10485760,
"tbk": 20,
"tl": 131179031,
"mb": 10485760,
"mbk": 20,
"gb": 10485760,
"gbk": 20,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
21,
22,
23,
48,
180,
181,
182
]
},
{
"tb": 16,
"tbk": 1,
"tl": 105,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
158,
159,
183,
161,
162,
163,
164
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 552625,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
34,
35,
36,
37,
62,
184,
185,
186
]
},
{
"tb": 64,
"tbk": 1,
"tl": 196530,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
42,
43,
187,
188,
189,
190,
67
]
},
{
"tb": 2097152,
"tbk": 2,
"tl": 388846,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
191,
192,
193,
194,
195,
196,
197,
198
]
},
{
"tb": 144,
"tbk": 1,
"tl": 93345,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
199,
200,
201,
202,
110,
111,
112,
203,
204,
72
]
},
{
"tb": 8,
"tbk": 1,
"tl": 4037327,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 128,
"tbk": 1,
"tl": 10,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
214,
107,
72
]
},
{
"tb": 480,
"tbk": 4,
"tl": 193,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
166,
167,
168,
169,
215,
216
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1592,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
42,
43,
58,
59,
60,
217,
218
]
},
{
"tb": 256,
"tbk": 1,
"tl": 591,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
98,
99,
219,
220,
221,
222,
223,
224,
225
]
},
{
"tb": 5728,
"tbk": 38,
"tl": 750,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
98,
99,
100,
101,
102,
226,
227,
228,
229,
223,
230
]
},
{
"tb": 15360,
"tbk": 4,
"tl": 1534,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
29,
30,
31,
32,
231
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 2652,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
232,
233,
234,
235,
236,
237,
238,
239
]
},
{
"tb": 48,
"tbk": 2,
"tl": 1946909,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
80,
81,
82,
83,
84,
85,
86,
87,
240,
241
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 50909,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
52,
53,
54,
242,
218,
72
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1067127,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
166,
167,
168,
169,
243,
244
]
},
{
"tb": 5242880,
"tbk": 5,
"tl": 5164726,
"mb": 5242880,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
21,
22,
23,
48,
245,
246,
247
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1945,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
248,
249,
250,
251,
252,
216,
218,
72
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1603,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
98,
99,
253,
254,
255,
256,
257,
258,
259,
260
]
},
{
"tb": 32,
"tbk": 1,
"tl": 19,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
21,
22,
23,
261,
262,
263,
41
]
},
{
"tb": 480,
"tbk": 4,
"tl": 5479,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
166,
167,
168,
169,
264,
265
]
},
{
"tb": 78336,
"tbk": 1448,
"tl": 490466,
"mb": 16832,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
42,
43,
123,
266,
267,
268,
269,
270,
271
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2795,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
272,
273,
274,
275,
276,
277,
218,
72
]
},
{
"tb": 32,
"tbk": 1,
"tl": 144,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
158,
278,
279,
280,
281,
282,
283
]
},
{
"tb": 3432,
"tbk": 17,
"tl": 479,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
98,
99,
100,
101,
102,
226,
227,
228,
229,
223,
284
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2498,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
248,
249,
250,
251,
285,
286,
287,
288
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 2516372,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
21,
22,
23,
48,
289,
290,
291
]
},
{
"tb": 3840,
"tbk": 16,
"tl": 2272,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
42,
43,
187,
188,
189,
292,
293
]
},
{
"tb": 158327,
"tbk": 9,
"tl": 7468,
"mb": 83992,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
42,
43,
123,
124,
125,
126,
294
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3026,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
248,
249,
250,
251,
285,
295,
296,
297
]
},
{
"tb": 24,
"tbk": 1,
"tl": 4041237,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
298,
299,
300,
301,
302,
303,
304,
305,
306
]
},
{
"tb": 1152,
"tbk": 4,
"tl": 151,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
42,
43,
307,
308,
309,
310,
311
]
},
{
"tb": 32,
"tbk": 1,
"tl": 113,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
29,
30,
31,
32,
312
]
},
{
"tb": 16,
"tbk": 1,
"tl": 90,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
158,
159,
183,
161,
313,
314,
11
]
},
{
"tb": 1088,
"tbk": 2,
"tl": 30,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
315,
316,
317,
318,
319,
320
]
},
{
"tb": 672,
"tbk": 3,
"tl": 303034,
"mb": 672,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
321,
322,
323,
324,
325,
326,
327,
328
]
},
{
"tb": 192,
"tbk": 1,
"tl": 10166,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
329,
330,
331,
332,
333,
334,
107,
72,
335
]
},
{
"tb": 96,
"tbk": 1,
"tl": 35,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
158,
336,
161,
162,
163,
164,
72
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 3564,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
42,
43,
337,
338,
339,
340,
341
]
},
{
"tb": 48,
"tbk": 1,
"tl": 93325,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
12,
342,
343,
344,
345,
346,
347,
348,
204,
72
]
},
{
"tb": 480,
"tbk": 1,
"tl": 6559219,
"mb": 480,
"mbk": 1,
"gb": 480,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
12,
349,
350,
351,
352,
353,
354,
355,
356
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1877,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
248,
249,
250,
251,
252,
357,
358,
359
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 6352,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
42,
43,
337,
338,
339,
340,
360
]
},
{
"tb": 128,
"tbk": 1,
"tl": 7921,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
52,
53,
54,
361,
362,
363
]
},
{
"tb": 320,
"tbk": 1,
"tl": 23204,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
76,
364,
365,
366
]
},
{
"tb": 912,
"tbk": 4,
"tl": 1080,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
98,
99,
219,
220,
221,
222,
223,
230,
367
]
},
{
"tb": 16,
"tbk": 1,
"tl": 92662,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
98,
99,
100,
101,
102,
226,
227,
228,
368,
204,
72
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
158,
369,
370,
371,
157,
72,
335
]
},
{
"tb": 3432,
"tbk": 17,
"tl": 70,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
98,
99,
100,
101,
102,
226,
227,
228,
372,
216,
218
]
},
{
"tb": 216,
"tbk": 1,
"tl": 7406,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
373,
374,
375,
376,
377,
378,
379,
380,
381
]
},
{
"tb": 72,
"tbk": 1,
"tl": 2494039,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
382,
383,
384,
385,
386,
387,
388,
389,
390
]
},
{
"tb": 8,
"tbk": 1,
"tl": 3777134,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
205,
391,
392,
393,
394,
395,
396,
397,
398
]
},
{
"tb": 128,
"tbk": 1,
"tl": 3821,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
399,
400,
401,
402,
403,
404,
405,
406
]
},
{
"tb": 15360,
"tbk": 4,
"tl": 21034,
"mb": 15360,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
21,
22,
23,
407,
408,
409,
41
]
},
{
"tb": 48,
"tbk": 2,
"tl": 73,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
158,
410,
411,
412,
413,
414,
415
]
},
{
"tb": 3840,
"tbk": 4,
"tl": 3223,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
34,
416,
417,
418,
419,
420,
421,
422
]
},
{
"tb": 24,
"tbk": 1,
"tl": 130235,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
423,
424,
425,
426,
427,
428,
429,
430,
431
]
},
{
"tb": 96,
"tbk": 2,
"tl": 3283644,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
432,
433,
434,
435,
436,
437,
438,
439,
440
]
},
{
"tb": 72,
"tbk": 3,
"tl": 61,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
441,
442,
443,
444,
445,
446,
447,
448,
449
]
},
{
"tb": 8,
"tbk": 1,
"tl": 23,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
98,
99,
450,
451,
452,
453,
454,
455,
456,
457
]
},
{
"tb": 24,
"tbk": 1,
"tl": 2490016,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
298,
458,
459,
460,
461,
72,
335
]
},
{
"tb": 1968,
"tbk": 2,
"tl": 56,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
462,
463,
464,
465,
466,
467
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1393405,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
166,
167,
168,
169,
468,
72
]
},
{
"tb": 480,
"tbk": 4,
"tl": 7902,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
166,
167,
168,
169,
264,
469
]
},
{
"tb": 32,
"tbk": 1,
"tl": 122,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
52,
53,
54,
470,
471,
472
]
},
{
"tb": 96,
"tbk": 1,
"tl": 1393419,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
42,
43,
58,
59,
60,
473,
72
]
},
{
"tb": 896,
"tbk": 6,
"tl": 7429,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
42,
43,
187,
188,
189,
474,
475
]
},
{
"tb": 10485760,
"tbk": 20,
"tl": 42362768,
"mb": 10485760,
"mbk": 20,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
476,
345,
346,
347,
477
]
},
{
"tb": 91656,
"tbk": 201,
"tl": 50783,
"mb": 24624,
"mbk": 54,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
478,
479,
480,
481,
482,
483
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 1750,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
166,
175,
176,
177,
178,
484
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 98449,
"mb": 1198080,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
34,
35,
36,
37,
62,
184,
185,
485
]
},
{
"tb": 15360,
"tbk": 4,
"tl": 2464,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
143,
144,
145,
146,
486,
422,
107,
72
]
},
{
"tb": 24,
"tbk": 1,
"tl": 973579,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
158,
487,
488,
471,
489,
164,
72
]
},
{
"tb": 48,
"tbk": 1,
"tl": 130225,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
158,
490,
491,
492,
493,
494,
495
]
},
{
"tb": 480,
"tbk": 4,
"tl": 195,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
166,
167,
168,
169,
215,
357
]
},
{
"tb": 48,
"tbk": 2,
"tl": 111,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
158,
496,
411,
412,
413,
414,
415
]
},
{
"tb": 72,
"tbk": 1,
"tl": 93833,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
12,
342,
343,
344,
345,
346,
347,
497,
204,
72
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 106766,
"mb": 1198080,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
34,
35,
36,
37,
62,
498,
499,
500
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
272,
501,
502,
503,
504,
505,
506,
507,
508,
509
]
},
{
"tb": 512,
"tbk": 1,
"tl": 3829,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
21,
22,
23,
510,
511,
11,
26
]
},
{
"tb": 32,
"tbk": 2,
"tl": 973728,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
512,
513,
514,
515,
516,
517,
518,
519
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
158,
369,
370,
509,
26
]
},
{
"tb": 96,
"tbk": 1,
"tl": 21,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
158,
336,
161,
313,
314,
11,
26
]
},
{
"tb": 10240,
"tbk": 1,
"tl": 2574,
"mb": 10240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
21,
22,
23,
261,
520,
521,
287
]
},
{
"tb": 599040,
"tbk": 4,
"tl": 65474,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
21,
22,
23,
48,
128,
522,
523
]
},
{
"tb": 15360,
"tbk": 4,
"tl": 2240,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
143,
524,
525,
526,
527,
528,
529,
530,
531
]
},
{
"tb": 256,
"tbk": 1,
"tl": 602,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
98,
99,
219,
220,
221,
222,
223,
284,
532
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 790925,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
21,
22,
23,
48,
289,
290,
533
]
},
{
"tb": 32,
"tbk": 1,
"tl": 73,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
534,
535,
536,
537,
538,
539,
540,
541,
542
]
},
{
"tb": 128,
"tbk": 1,
"tl": 3402,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
42,
43,
543,
544,
545,
546,
287
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 3739648,
"mb": 8388608,
"mbk": 1,
"gb": 8388608,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
34,
35,
36,
37,
62,
547,
548,
549
]
},
{
"tb": 2097152,
"tbk": 65536,
"tl": 54094,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
550,
551,
552
]
},
{
"tb": 160,
"tbk": 1,
"tl": 7334,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
34,
35,
36,
37,
38,
553,
40,
41
]
},
{
"tb": 32,
"tbk": 1,
"tl": 146,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
554,
555,
556
]
},
{
"tb": 16,
"tbk": 1,
"tl": 6559311,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
557,
558,
559,
560,
561,
562,
563,
564
]
},
{
"tb": 216,
"tbk": 1,
"tl": 6535374,
"mb": 216,
"mbk": 1,
"gb": 216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
373,
565,
566,
567,
568,
569,
570,
571,
572
]
},
{
"tb": 512,
"tbk": 1,
"tl": 17,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
21,
22,
23,
573,
574,
11,
26
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1872,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
34,
416,
417,
418,
419,
420,
357,
358
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 2500,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
34,
575,
576,
577,
578,
579,
580,
581,
582
]
},
{
"tb": 320,
"tbk": 1,
"tl": 1826,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
76,
583,
584,
585
]
},
{
"tb": 96,
"tbk": 1,
"tl": 9,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
42,
43,
58,
59,
60,
586,
41
]
},
{
"tb": 2736,
"tbk": 6,
"tl": 2267,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
478,
479,
480,
587,
588,
589
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
272,
501,
502,
503,
504,
505,
506,
507,
508,
371
]
},
{
"tb": 384,
"tbk": 2,
"tl": 84,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
590,
591,
592,
593,
594,
595,
596,
597,
598
]
},
{
"tb": 480,
"tbk": 1,
"tl": 2119908,
"mb": 480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
12,
342,
343,
344,
345,
346,
347,
477,
599,
600
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 453,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
166,
167,
168,
169,
215,
421
]
},
{
"tb": 96,
"tbk": 1,
"tl": 2049,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
42,
43,
601,
602,
603,
604,
358
]
},
{
"tb": 64,
"tbk": 1,
"tl": 6535344,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
605,
606,
607,
608,
609,
610,
611,
612
]
},
{
"tb": 16,
"tbk": 1,
"tl": 6535893,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
613,
614,
615,
616,
617,
618,
619,
620
]
},
{
"tb": 80,
"tbk": 1,
"tl": 6559238,
"mb": 80,
"mbk": 1,
"gb": 80,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
621,
622,
623,
624,
625,
626,
627,
628,
629
]
},
{
"tb": 640,
"tbk": 1,
"tl": 19,
"mb": 640,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
21,
22,
23,
261,
630,
263,
41
]
},
{
"tb": 2400,
"tbk": 12,
"tl": 219,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
98,
631,
632,
633,
634,
635,
636
]
},
{
"tb": 64,
"tbk": 1,
"tl": 5734,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
42,
43,
187,
188,
189,
637,
638
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1818,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
639,
640,
641,
642,
643,
644,
645,
646,
647
]
},
{
"tb": 512,
"tbk": 1,
"tl": 49,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
648,
649,
650,
651,
652,
653,
654,
655
]
},
{
"tb": 64,
"tbk": 1,
"tl": 973574,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
605,
656,
657,
658,
659,
660,
661,
662,
471,
489
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 6543360,
"mb": 1024,
"mbk": 1,
"gb": 1024,
"gbk": 1,
"eb": 1024,
"ebk": 1,
"fs": [
663,
664,
665,
666,
667,
668,
669,
670,
671,
672,
673,
674,
675,
676,
677,
678,
679,
680,
681,
682,
683
]
},
{
"tb": 3536,
"tbk": 34,
"tl": 474,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
98,
684,
685,
686,
687,
688,
689
]
},
{
"tb": 24,
"tbk": 1,
"tl": 2490026,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
690,
691,
692,
693,
694,
72,
335
]
},
{
"tb": 2880,
"tbk": 24,
"tl": 2089,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
166,
167,
168,
169,
695,
223
]
},
{
"tb": 640,
"tbk": 1,
"tl": 5718,
"mb": 640,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
696,
697,
698
]
},
{
"tb": 10240,
"tbk": 1,
"tl": 4676,
"mb": 10240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
272,
273,
274,
275,
699,
700,
358,
359
]
},
{
"tb": 320,
"tbk": 2,
"tl": 1946900,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
42,
43,
701,
702,
703,
704,
241
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 106,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
171,
705,
72
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1836,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
706,
707,
708,
709,
710,
711,
712,
713,
714
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1940,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
34,
416,
417,
418,
419,
420,
216,
218
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
42,
715,
716,
717,
718,
719,
720,
721,
722,
723,
41
]
},
{
"tb": 512,
"tbk": 1,
"tl": 24,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
21,
22,
23,
48,
49,
50,
724
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2175,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
12,
725,
726,
727,
728,
729,
730,
731,
732
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 3258,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
21,
22,
23,
261,
520,
733,
296
]
},
{
"tb": 10272,
"tbk": 33,
"tl": 63651,
"mb": 10240,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
476,
345,
346,
347,
734
]
},
{
"tb": 128,
"tbk": 1,
"tl": 6931,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
21,
22,
23,
261,
735,
736,
41
]
},
{
"tb": 10485760,
"tbk": 20,
"tl": 78339620,
"mb": 10485760,
"mbk": 20,
"gb": 10485760,
"gbk": 20,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
737,
738,
739
]
},
{
"tb": 4792320,
"tbk": 4,
"tl": 108546,
"mb": 4792320,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
21,
22,
23,
48,
740,
741,
500
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1569,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
166,
167,
168,
169,
742,
700
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 153768,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
52,
53,
54,
743,
744,
72
]
},
{
"tb": 8,
"tbk": 1,
"tl": 223,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
98,
99,
745,
746,
747,
748,
749,
750,
751,
752
]
},
{
"tb": 96,
"tbk": 1,
"tl": 11,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
158,
336,
753,
754,
72,
335
]
},
{
"tb": 15360,
"tbk": 4,
"tl": 501,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
29,
30,
31,
32,
755
]
},
{
"tb": 576,
"tbk": 4,
"tl": 1517,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
76,
756,
757,
56
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1615,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
98,
99,
758,
759,
760,
761,
762,
763,
764,
765
]
},
{
"tb": 12768,
"tbk": 32,
"tl": 77472,
"mb": 12768,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
34,
35,
36,
37,
38,
766,
286,
287
]
},
{
"tb": 2848,
"tbk": 12,
"tl": 1178,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
98,
99,
767,
768,
769,
770,
771,
772,
773,
774
]
},
{
"tb": 16,
"tbk": 1,
"tl": 32,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
775,
776,
777,
778,
779,
780,
781,
782,
72,
335
]
},
{
"tb": 32,
"tbk": 1,
"tl": 56,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
534,
783,
784,
785,
786,
787,
788,
789,
790
]
},
{
"tb": 224,
"tbk": 1,
"tl": 6634,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
42,
43,
791,
792,
793,
794,
409
]
},
{
"tb": 512,
"tbk": 1,
"tl": 16,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
21,
22,
23,
48,
795,
796,
574
]
},
{
"tb": 96,
"tbk": 1,
"tl": 19,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
42,
43,
58,
59,
60,
797,
173
]
},
{
"tb": 3456,
"tbk": 12,
"tl": 4219,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
98,
798,
799,
800,
801,
802,
803
]
},
{
"tb": 1248,
"tbk": 12,
"tl": 334,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
98,
684,
685,
686,
804,
805,
806
]
},
{
"tb": 16,
"tbk": 1,
"tl": 443798,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
775,
807,
808,
809,
810,
811,
812,
813,
814
]
},
{
"tb": 3432,
"tbk": 17,
"tl": 480,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
98,
99,
100,
101,
102,
226,
227,
228,
229,
223,
224
]
},
{
"tb": 641,
"tbk": 1,
"tl": 59,
"mb": 641,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
272,
501,
502,
503,
815,
816,
817,
818,
819,
820
]
},
{
"tb": 96,
"tbk": 1,
"tl": 29,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
42,
43,
58,
59,
60,
821,
10
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1206,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
98,
99,
100,
101,
102,
103,
104,
105,
822,
56,
57
]
},
{
"tb": 960,
"tbk": 4,
"tl": 5520,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
42,
43,
187,
188,
189,
823,
824
]
},
{
"tb": 96,
"tbk": 1,
"tl": 6537470,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
825,
826,
827,
828,
829,
830,
831,
832,
833
]
},
{
"tb": 2736,
"tbk": 4,
"tl": 3237,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
248,
249,
250,
251,
252,
421,
422,
107
]
},
{
"tb": 96,
"tbk": 1,
"tl": 4663,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
166,
834,
835,
836,
837,
700
]
},
{
"tb": 32,
"tbk": 1,
"tl": 150,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
838,
555,
556
]
},
{
"tb": 3432,
"tbk": 17,
"tl": 72,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
98,
99,
100,
101,
102,
226,
227,
228,
372,
357,
358
]
},
{
"tb": 56,
"tbk": 1,
"tl": 2352,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
158,
839,
288,
41,
26
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 3025,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
34,
840,
841,
842,
843,
844,
845,
846,
847
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1609,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
98,
99,
848,
849,
850,
851,
852,
853,
854,
855
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2119916,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
856,
857,
858,
859,
860,
861,
862,
863,
864
]
},
{
"tb": 3145728,
"tbk": 3,
"tl": 281220,
"mb": 3145728,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
476,
345,
346,
347,
497
]
},
{
"tb": 768,
"tbk": 5,
"tl": 1538,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
42,
43,
865,
866,
867,
868,
421
]
},
{
"tb": 12768,
"tbk": 32,
"tl": 94497,
"mb": 12768,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
34,
35,
36,
37,
38,
766,
295,
296
]
},
{
"tb": 96,
"tbk": 1,
"tl": 14,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
199,
869,
870,
871,
872,
873,
874,
875,
876
]
},
{
"tb": 32,
"tbk": 1,
"tl": 3057,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
158,
877,
173,
72,
335
]
},
{
"tb": 2736,
"tbk": 4,
"tl": 18154,
"mb": 2736,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
248,
249,
250,
251,
285,
878,
408,
409
]
},
{
"tb": 24,
"tbk": 1,
"tl": 132,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
158,
487,
488,
471,
472,
314,
11
]
},
{
"tb": 3840,
"tbk": 4,
"tl": 18716,
"mb": 3840,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
34,
416,
417,
418,
419,
879,
408,
409
]
},
{
"tb": 24,
"tbk": 1,
"tl": 152,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
12,
880,
881,
882,
883,
884,
885,
886,
887
]
},
{
"tb": 2097184,
"tbk": 3,
"tl": 37617,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
21,
22,
23,
48,
795,
888,
889
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 349238,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
21,
22,
23,
48,
890,
891,
892
]
},
{
"tb": 16,
"tbk": 1,
"tl": 390698,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
98,
99,
219,
220,
221,
893,
894,
134,
72
]
},
{
"tb": 6072,
"tbk": 11,
"tl": 3752,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
895,
896,
897,
898,
899,
900
]
},
{
"tb": 640,
"tbk": 2,
"tl": 385101,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
29,
30,
31,
32,
901
]
},
{
"tb": 2304,
"tbk": 12,
"tl": 4316,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
98,
902,
903,
904,
905,
906,
907
]
},
{
"tb": 512,
"tbk": 1,
"tl": 30,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
21,
22,
23,
908,
574,
11,
26
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 3609,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
166,
175,
176,
177,
178,
909
]
},
{
"tb": 512,
"tbk": 1,
"tl": 10,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
910,
911,
912,
913,
914,
915,
916,
917
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 33823,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
21,
22,
23,
48,
49,
50,
918
]
},
{
"tb": 32,
"tbk": 1,
"tl": 29193,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
76,
919,
754,
72
]
},
{
"tb": 160,
"tbk": 1,
"tl": 5714,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
920,
921,
922,
923,
924,
925,
926,
927,
928
]
},
{
"tb": 15360,
"tbk": 120,
"tl": 128,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
21,
22,
23,
261,
929,
408,
409
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3479,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
158,
930,
173,
72,
335
]
},
{
"tb": 128,
"tbk": 2,
"tl": 1946674,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
42,
43,
931,
932,
933,
934,
935
]
},
{
"tb": 24,
"tbk": 1,
"tl": 2490031,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
936,
937,
938,
939,
940,
72,
335
]
},
{
"tb": 16,
"tbk": 1,
"tl": 6,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
158,
159,
160,
753,
754,
72,
335
]
},
{
"tb": 83886080,
"tbk": 262144,
"tl": 293622,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
52,
53,
54,
941,
942,
548
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 66481,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
29,
30,
31,
32,
943
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2053,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
12,
342,
343,
344,
345,
346,
347,
734,
944,
358
]
},
{
"tb": 640,
"tbk": 2,
"tl": 385094,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
29,
30,
31,
32,
945
]
},
{
"tb": 16,
"tbk": 1,
"tl": 6537460,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
42,
715,
716,
717,
718,
719,
720,
721,
722,
946,
947
]
},
{
"tb": 160,
"tbk": 1,
"tl": 5757,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
42,
43,
948,
949,
950,
951,
41
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1912,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
52,
53,
54,
952,
41,
26
]
},
{
"tb": 1048576,
"tbk": 2,
"tl": 2049954,
"mb": 1048576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
52,
53,
54,
953,
954,
955
]
},
{
"tb": 512,
"tbk": 1,
"tl": 18,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
21,
22,
23,
48,
795,
956,
10
]
},
{
"tb": 240,
"tbk": 2,
"tl": 1067133,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
158,
957,
134,
72,
335
]
},
{
"tb": 6528,
"tbk": 34,
"tl": 12204,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
98,
902,
903,
904,
958,
959,
960
]
},
{
"tb": 12696,
"tbk": 23,
"tl": 5025,
"mb": 3864,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
895,
896,
897,
961,
962,
963
]
},
{
"tb": 32,
"tbk": 1,
"tl": 973568,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
52,
53,
54,
470,
471,
489
]
},
{
"tb": 960,
"tbk": 4,
"tl": 3726,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
98,
99,
100,
101,
102,
103,
104,
105,
964,
965,
56
]
},
{
"tb": 10240,
"tbk": 1,
"tl": 3423,
"mb": 10240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
21,
22,
23,
261,
520,
966,
287
]
},
{
"tb": 10240,
"tbk": 32,
"tl": 67419,
"mb": 10240,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
52,
53,
54,
967,
968,
969
]
},
{
"tb": 16,
"tbk": 1,
"tl": 6535237,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
970,
971,
972,
973,
974,
975,
976,
977,
978
]
},
{
"tb": 320,
"tbk": 1,
"tl": 1830,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
76,
979,
584,
585
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 390684,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
21,
22,
23,
48,
49,
50,
980
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
158,
159,
183,
753,
754,
72,
335
]
},
{
"tb": 384,
"tbk": 1,
"tl": 973468,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
981,
982,
983,
984,
985,
986,
987,
988,
989
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1624,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
98,
99,
990,
991,
992,
993,
994,
995,
996,
997
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 1485938,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
29,
30,
31,
32,
998
]
},
{
"tb": 96,
"tbk": 1,
"tl": 6630,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
42,
43,
58,
59,
60,
999,
409
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 6534360,
"mb": 1048576,
"mbk": 1,
"gb": 1048576,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
21,
22,
23,
48,
49,
1000,
1001
]
},
{
"tb": 960,
"tbk": 4,
"tl": 196540,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
42,
43,
187,
188,
189,
823,
67
]
},
{
"tb": 1984,
"tbk": 5,
"tl": 14,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
42,
43,
187,
188,
189,
1002,
1003
]
},
{
"tb": 512,
"tbk": 1,
"tl": 122,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
21,
22,
23,
1004,
10,
11,
26
]
},
{
"tb": 19328,
"tbk": 112,
"tl": 489569,
"mb": 19328,
"mbk": 112,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
34,
35,
36,
37,
38,
766,
878,
408
]
},
{
"tb": 64,
"tbk": 1,
"tl": 7398,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
605,
606,
607,
608,
609,
610,
1005,
1006
]
},
{
"tb": 192,
"tbk": 1,
"tl": 5726,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
42,
43,
1007,
1008,
1009,
1010,
11
]
},
{
"tb": 24,
"tbk": 1,
"tl": 2490021,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
12,
1011,
1012,
1013,
1014,
72,
335
]
},
{
"tb": 64,
"tbk": 1,
"tl": 5500,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
42,
43,
187,
188,
189,
190,
824
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 2542711,
"mb": 8388608,
"mbk": 1,
"gb": 8388608,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
34,
35,
36,
37,
62,
184,
185,
1015
]
},
{
"tb": 64,
"tbk": 1,
"tl": 156,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
42,
43,
187,
188,
189,
637,
1016
]
},
{
"tb": 288,
"tbk": 1,
"tl": 18256,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
42,
43,
1017,
1018,
1019,
1020,
500
]
},
{
"tb": 10240,
"tbk": 1,
"tl": 4690,
"mb": 10240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
272,
273,
274,
275,
1021,
700,
358,
359
]
},
{
"tb": 100352,
"tbk": 389,
"tl": 188128,
"mb": 16384,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
34,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 6535196,
"mb": 262144,
"mbk": 1,
"gb": 262144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
21,
22,
23,
48,
49,
1030,
1031
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
158,
278,
1032,
26
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2205,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041
]
},
{
"tb": 2097184,
"tbk": 3,
"tl": 38536,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
21,
22,
23,
48,
1042,
889,
1043
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1067155,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
80,
81,
82,
83,
84,
85,
86,
87,
133,
134
]
},
{
"tb": 32,
"tbk": 1,
"tl": 56,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
272,
501,
502,
503,
815,
816,
817,
1044,
819,
820
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
272,
501,
502,
503,
504,
505,
506,
507,
1045,
371
]
},
{
"tb": 15360,
"tbk": 120,
"tl": 99,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1046,
1047,
1048,
1049,
1050,
1051,
1052,
1053
]
},
{
"tb": 16,
"tbk": 1,
"tl": 92,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
158,
159,
160,
161,
313,
314,
11
]
},
{
"tb": 96,
"tbk": 1,
"tl": 5516,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
42,
43,
58,
59,
60,
66,
824
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 153566,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
21,
22,
23,
48,
49,
50,
1054
]
},
{
"tb": 24,
"tbk": 1,
"tl": 7,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
12,
342,
343,
344,
345,
346,
347,
734,
1055,
157
]
},
{
"tb": 15360,
"tbk": 4,
"tl": 582,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
21,
22,
23,
48,
795,
1056,
757
]
},
{
"tb": 80,
"tbk": 1,
"tl": 973323,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1057,
1058,
1059,
1060,
1061,
1062,
1063,
1064,
1065
]
},
{
"tb": 5728,
"tbk": 38,
"tl": 105,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
98,
99,
100,
101,
102,
226,
227,
228,
372,
421,
422
]
},
{
"tb": 40,
"tbk": 1,
"tl": 3777176,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
1066,
1067,
1068,
1069,
1070,
1071,
1072,
1073,
1074
]
},
{
"tb": 100663296,
"tbk": 1,
"tl": 1260320,
"mb": 100663296,
"mbk": 1,
"gb": 100663296,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
1075,
1076,
1077
]
},
{
"tb": 64,
"tbk": 1,
"tl": 127,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
605,
656,
657,
658,
659,
660,
661,
662,
471,
472
]
},
{
"tb": 2097152,
"tbk": 2,
"tl": 186328,
"mb": 2097152,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
476,
345,
346,
347,
348
]
},
{
"tb": 72,
"tbk": 1,
"tl": 5304,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
158,
1078,
359,
72,
335
]
},
{
"tb": 64,
"tbk": 1,
"tl": 5730,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
42,
43,
187,
188,
189,
1079,
638
]
},
{
"tb": 120,
"tbk": 2,
"tl": 2100381,
"mb": 120,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
12,
1080,
1081,
1082,
1083,
1084,
1085,
1086,
1087
]
},
{
"tb": 256,
"tbk": 4,
"tl": 63925,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
21,
22,
23,
48,
49,
50,
1088
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4042,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1089,
1090,
1091,
1092,
1093,
1094,
1095,
1096
]
},
{
"tb": 100663296,
"tbk": 1,
"tl": 3780448,
"mb": 100663296,
"mbk": 1,
"gb": 100663296,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
143,
144,
145,
146,
147,
1097,
1098,
1099
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
165,
272,
501,
502,
503,
504,
505,
506,
507,
1045,
509
]
},
{
"tb": 64,
"tbk": 1,
"tl": 150,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
42,
43,
187,
188,
189,
1079,
1016
]
},
{
"tb": 48,
"tbk": 1,
"tl": 355889,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
76,
1100,
78,
79
]
},
{
"tb": 599040,
"tbk": 4,
"tl": 74251,
"mb": 589824,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
21,
22,
23,
48,
1101,
1102,
500
]
}
],
"ftbl": [
"[root]",
"0x63f59a4633b9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x63f59a3354ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63f59a3b2e08: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3b2e08: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3b2e08: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x63f59a438b85: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63f59a438b85: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63f59a438b85: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x63f59a2ad21f: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x63f59a2a0a15: winter_verifier::perform_verification (verifier/src/lib.rs:311:25)",
"0x63f59a2a45da: winter_verifier::verify (verifier/src/lib.rs:111:21)",
"0x63f59a32b7bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63f59a3f8abf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3f8abf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3f8abf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3f8abf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44be7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a448925: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a4755dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a274788: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:228:23)",
"0x63f59a4027d5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a4027d5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a4027d5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a4edde9: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x63f59a2a01ac: winter_verifier::perform_verification (verifier/src/lib.rs:275:24)",
"0x63f59a2fe822: winterfell::main (winterfell/src/main.rs:71:11)",
"0x63f59a699adc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x63f59a698d6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x63f59a698ae8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x63f59a698ae8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x63f59a698124: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x63f59a695d43: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x63f59a3b80f5: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x63f59a328dec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63f59a402b95: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a402b95: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a402b95: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a2d3785: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x63f59a3e1997: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x63f59a3d4970: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x63f59a2a450b: winter_verifier::verify (verifier/src/lib.rs:109:19)",
"0x63f59a69bf79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x63f59a69a709: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x63f59a350a31: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63f59a36a048: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63f59a42d55e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63f59a2a13b2: winter_verifier::perform_verification (verifier/src/lib.rs:179:9)",
"0x63f59a36cae7: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x63f59a306e2f: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x63f59a4d6338: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x63f59a2746e8: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:227:28)",
"0x63f59a3b345b: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63f59a3b345b: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63f59a3b345b: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x63f59a4e4e04: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x63f59a4ee5e9: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x63f59a2a0c03: winter_verifier::perform_verification (verifier/src/lib.rs:323:5)",
"0x63f59a34a281: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63f59a36aa38: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63f59a42b33e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63f59a2ae2d7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x63f59a36ca57: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x63f59a2c74bd: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x63f59a39deb8: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:716:26)",
"0x63f59a38c931: winter_prover::Prover::generate_proof (prover/src/lib.rs:482:37)",
"0x63f59a389350: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:543:13)",
"0x63f59a3171b6: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x63f59a342c01: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63f59a36a408: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63f59a42cc54: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63f59a38f285: winter_prover::Prover::generate_proof (prover/src/lib.rs:418:17)",
"0x63f59a39e2ee: winter_prover::Prover::prove (prover/src/lib.rs:175:37)",
"0x63f59a3b3511: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3b3511: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3b3511: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x63f59a437c80: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x63f59a2c25e4: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:156:33)",
"0x63f59a2c5e25: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:128:17)",
"0x63f59a4c0c6e: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x63f59a33206c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63f59a3b2f38: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3b2f38: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3b2f38: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x63f59a4397c5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63f59a4397c5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63f59a4397c5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x63f59a27f8e2: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x63f59a379028: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:83:31)",
"0x63f59a47f7af: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63f59a3e618f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3e618f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3e618f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3e618f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44accd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a447cd7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a47550d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a46aaa0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x63f59a65ea99: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x63f59a65ec0a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63f59a65261c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a65261c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a65261c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x63f59a6525cc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63f59a6525cc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63f59a6525cc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x63f59a312c0e: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x63f59a38e19c: winter_prover::Prover::generate_proof (prover/src/lib.rs:600:25)",
"0x63f59a27f8f5: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x63f59a27f750: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x63f59a438df5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63f59a438df5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63f59a438df5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x63f59a3c782f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x63f59a32c77c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63f59a3f0bf2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3f0bf2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3f0bf2: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3f0bf2: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x63f59a44bb7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a446c35: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a4748cd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a3aaa6a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x63f59a69aea0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63f59a69b0d9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63f59a69b3d2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63f59a69c159: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x63f59a28032d: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x63f59a307ec7: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x63f59a294eae: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x63f59a298a1c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x63f59a28f24c: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x63f59a2ad6df: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x63f59a2c5973: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:33)",
"0x63f59a38f266: winter_prover::Prover::generate_proof (prover/src/lib.rs:417:21)",
"0x63f59a3f405d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3f405d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3f405d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3f405d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44adda: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a447de4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a4751ca: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a3d47eb: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x63f59a32f69c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63f59a402af5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a402af5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a402af5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a36cc07: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x63f59a28f237: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x63f59a2c6a29: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x63f59a4841d6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63f59a32932c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63f59a281aea: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a281aea: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a281aea: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x63f59a437ca6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x63f59a318508: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x63f59a38af02: winter_prover::Prover::generate_proof (prover/src/lib.rs:233:27)",
"0x63f59a462847: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x63f59a304245: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x63f59a2ff247: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:176:13)",
"0x63f59a387b72: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:371:13)",
"0x63f59a379adf: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:41:22)",
"0x63f59a2c4b39: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:36)",
"0x63f59a38f1b5: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:21)",
"0x63f59a627819: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x63f59a6262e9: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x63f59a535840: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63f59a535aa9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63f59a545111: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63f59a38ee70: winter_prover::Prover::generate_proof (prover/src/lib.rs:449:13)",
"0x63f59a4000a6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x63f59a3b7cbe: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x63f59a38d02d: winter_prover::Prover::generate_proof (prover/src/lib.rs:524:9)",
"0x63f59a3d5d01: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x63f59a624700: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63f59a624939: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63f59a624132: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63f59a2dd17c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x63f59a31f3b5: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x63f59a3dd1b0: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:140:51)",
"0x63f59a47e476: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63f59a27cfc1: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x63f59a2ff330: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:177:13)",
"0x63f59a30b259: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x63f59a30c739: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x63f59a2c7572: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x63f59a360fe1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63f59a36a0d8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63f59a42867d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63f59a3891b5: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:547:13)",
"0x63f59a3fbd1f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3fbd1f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3fbd1f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3fbd1f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44a61d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a4464f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a47534d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a2957f7: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x63f59a32ec1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63f59a27f3e2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a27f3e2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a27f3e2: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x63f59a29224b: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x63f59a38be23: winter_prover::Prover::generate_proof (prover/src/lib.rs:423:33)",
"0x63f59a32e44a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63f59a3e3539: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3e3539: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3e3539: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3e3539: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44ab7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a448b14: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a47644a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a38b4ea: winter_prover::Prover::generate_proof (prover/src/lib.rs:272:43)",
"0x63f59a312c29: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x63f59a30c2b7: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x63f59a3a6b91: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x63f59a3a6dca: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x63f59a38e30a: winter_prover::Prover::generate_proof (prover/src/lib.rs:608:34)",
"0x63f59a402646: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a402646: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a402646: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a2dd882: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x63f59a30c46d: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x63f59a3d3cf0: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x63f59a2a07a8: winter_verifier::perform_verification (verifier/src/lib.rs:306:42)",
"0x63f59a4392d9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63f59a4392d9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63f59a4392d9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x63f59a2ddabb: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x63f59a3cc2d4: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x63f59a3c78a2: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x63f59a3fee6f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3fee6f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3fee6f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3fee6f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44aecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a446825: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a475afd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a4e5c5a: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x63f59a37bd5a: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:170:36)",
"0x63f59a37a34f: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:55:17)",
"0x63f59a3a6db3: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x63f59a29c41f: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x63f59a29aa15: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x63f59a294440: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x63f59a47cdb6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63f59a27cb11: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x63f59a334a6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63f59a402875: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a402875: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a402875: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a30baaf: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x63f59a3eb58d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3eb58d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3eb58d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3eb58d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44ad7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a446d34: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a47530a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a3d4733: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x63f59a3b1485: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x63f59a281126: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x63f59a3d5c15: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x63f59a30a7dc: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x63f59a2a04f7: winter_verifier::perform_verification (verifier/src/lib.rs:298:27)",
"0x63f59a69b108: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x63f59a69b4ca: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x63f59a69b4ca: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x63f59a69b26e: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x63f59a69b26e: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x63f59a69b35d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x63f59a62662a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63f59a57df36: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a57df36: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a57df36: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a2d9dac: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x63f59a3a6d4a: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x63f59a2fee36: <winterfell::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (winterfell/src/main.rs:133:9)",
"0x63f59a4657a8: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:216:31)",
"0x63f59a483d36: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63f59a4a1bd0: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x63f59a46ff66: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x63f59a4778f6: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x63f59a3d34ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x63f59a2dca4c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x63f59a2d7f66: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x63f59a3ced0d: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x63f59a3d4ad4: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x63f59a2ca30f: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x63f59a2c9506: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x63f59a4672f8: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:651:17)",
"0x63f59a4d9d94: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x63f59a4e595d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x63f59a65201a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x63f59a2db547: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x63f59a3db3a7: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x63f59a3d4d54: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x63f59a32ca1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63f59a3e47f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3e47f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3e47f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3e47f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44a34a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a4463a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a47613a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a39bf12: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:640:42)",
"0x63f59a364b21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63f59a36a498: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63f59a42c7ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63f59a31ddb7: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x63f59a3aabae: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x63f59a467f8c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:40:30)",
"0x63f59a4682cb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:64:9)",
"0x63f59a2a0fcc: winter_verifier::perform_verification (verifier/src/lib.rs:225:43)",
"0x63f59a3a607b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x63f59a3a328d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x63f59a5172ea: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x63f59a4f2009: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x63f59a45ba75: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x63f59a2d2598: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x63f59a3f5acf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3f5acf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3f5acf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3f5acf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44aa5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a447c45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a475e4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a2741cf: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:283:9)",
"0x63f59a651c69: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x63f59a64ec1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63f59a64bdb6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a64bdb6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a64bdb6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a312b68: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x63f59a2fe27c: winterfell::main (winterfell/src/main.rs:54:17)",
"0x63f59a2ff21b: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:175:9)",
"0x63f59a65f0f0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63f59a653669: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63f59a652e51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63f59a652950: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x63f59a312e24: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x63f59a401a22: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a401a22: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a401a22: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x63f59a438d25: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63f59a438d25: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63f59a438d25: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x63f59a2922c5: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x63f59a3fd36f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3fd36f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3fd36f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3fd36f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44a89d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a448895: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a475bdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a3dcfe2: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:140:32)",
"0x63f59a2a577b: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x63f59a2a84b0: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x63f59a38e217: winter_prover::Prover::generate_proof (prover/src/lib.rs:603:29)",
"0x63f59a4e55ed: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x63f59a314e92: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x63f59a314b2c: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x63f59a38db02: winter_prover::Prover::generate_proof (prover/src/lib.rs:571:9)",
"0x63f59a3dc55d: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:243:25)",
"0x63f59a2fed94: winterfell::build_do_work_trace (winterfell/src/main.rs:91:5)",
"0x63f59a39e60b: winterfell::main::{{closure}} (winterfell/src/main.rs:30:23)",
"0x63f59a4e578d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x63f59a292314: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x63f59a4d314c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x63f59a29ce0c: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x63f59a3182db: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x63f59a30bdbc: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x63f59a32ad4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63f59a3e659f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3e659f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3e659f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3e659f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a4360d6: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x63f59a448bc5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a47630d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a2a43a8: winter_verifier::verify (verifier/src/lib.rs:102:24)",
"0x63f59a334fac: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63f59a3ea8df: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3ea8df: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3ea8df: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3ea8df: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a435b4e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x63f59a448415: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a4762ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a2a74f7: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x63f59a3fc4f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3fc4f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3fc4f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3fc4f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44a9da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a447bc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a474eba: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a39bfcf: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:644:36)",
"0x63f59a3fcd2f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3fcd2f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3fcd2f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3fcd2f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44a56d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a447125: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a47598d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a4e4d29: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x63f59a31fb7f: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x63f59a323040: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x63f59a3d5104: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x63f59a27e4f5: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x63f59a3ab55c: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x63f59a459129: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x63f59a3aab36: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x63f59a3ae296: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x63f59a387bcf: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:369:9)",
"0x63f59a2d3c84: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a2d3c84: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a2d3c84: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x63f59a437c56: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x63f59a30ba4c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x63f59a30e3c0: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x63f59a3130bd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x63f59a32e6dc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63f59a3f044f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3f044f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3f044f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3f044f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44b04d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a445f75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a47641d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a38cdcf: winter_prover::Prover::generate_proof (prover/src/lib.rs:501:51)",
"0x63f59a330b7c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63f59a3ea19f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3ea19f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3ea19f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3ea19f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44b54d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a448355: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a475ddd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a2c61b1: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x63f59a32c23c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63f59a3e6bd9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3e6bd9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3e6bd9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3e6bd9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44b00a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a448c44: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a475c2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a2944b2: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x63f59a3e5033: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3e5033: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3e5033: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3e5033: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44b9ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a448545: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a475fdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a38b6db: winter_prover::Prover::generate_proof (prover/src/lib.rs:293:23)",
"0x63f59a4029b5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a4029b5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a4029b5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a38b909: winter_prover::Prover::generate_proof (prover/src/lib.rs:309:32)",
"0x63f59a3a4a8b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x63f59a3a3e3d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x63f59a51778a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x63f59a4f22a9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x63f59a45abc8: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x63f59a459195: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x63f59a38ee8b: winter_prover::Prover::generate_proof (prover/src/lib.rs:450:13)",
"0x63f59a3168d8: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x63f59a287cba: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x63f59a388010: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:354:9)",
"0x63f59a467e16: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:26:25)",
"0x63f59a38ee30: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:13)",
"0x63f59a4634e2: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x63f59a29cc98: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x63f59a401d83: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x63f59a2778cd: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x63f59a3a472b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x63f59a3a3f9d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x63f59a51769a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x63f59a504f7b: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x63f59a50f1a9: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x63f59a509416: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x63f59a2d9eb4: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x63f59a30f9b6: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x63f59a30e499: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x63f59a27ed37: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x63f59a287b7f: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x63f59a2c4a9c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:51:13)",
"0x63f59a38275a: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x63f59a466852: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:503:32)",
"0x63f59a483dc6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63f59a4a193a: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x63f59a46be27: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x63f59a476a22: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x63f59a27e388: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x63f59a292238: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x63f59a4d3472: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x63f59a30f99f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x63f59a314bc6: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x63f59a62932c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a62932c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a62932c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x63f59a5f869c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63f59a5f869c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63f59a5f869c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x63f59a29d084: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x63f59a29cdce: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x63f59a2a41dd: winter_verifier::verify (verifier/src/lib.rs:96:32)",
"0x63f59a2aa7be: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x63f59a2a0b34: winter_verifier::perform_verification (verifier/src/lib.rs:319:28)",
"0x63f59a3f60ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3f60ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3f60ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3f60ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44a44d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a446625: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a47513d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a27ed28: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x63f59a3a0efa: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x63f59a2d7b8e: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x63f59a319003: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x63f59a31a210: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x63f59a3e570f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3e570f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3e570f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3e570f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44a27d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a448a55: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a4748ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a4e5ac4: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x63f59a2a0636: winter_verifier::perform_verification (verifier/src/lib.rs:305:9)",
"0x63f59a39dacc: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:701:36)",
"0x63f59a32d49c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63f59a3ec4cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3ec4cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3ec4cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3ec4cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44b0dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a4483d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a474a6d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a38acd2: winter_prover::Prover::generate_proof (prover/src/lib.rs:210:38)",
"0x63f59a347611: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63f59a36a288: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63f59a428c0b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63f59a2d83c9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x63f59a2c7d9a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x63f59a39c6ee: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:669:26)",
"0x63f59a38b511: winter_prover::Prover::generate_proof (prover/src/lib.rs:274:13)",
"0x63f59a287106: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x63f59a2c3ac9: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:290:18)",
"0x63f59a2c288e: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:173:30)",
"0x63f59a3e1b50: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x63f59a487d85: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x63f59a487e16: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x63f59a2a0edf: winter_verifier::perform_verification (verifier/src/lib.rs:228:13)",
"0x63f59a3e8ac3: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3e8ac3: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3e8ac3: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3e8ac3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44abd4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a44729a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a475654: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a2fdd51: winterfell::main (winterfell/src/main.rs:22:32)",
"0x63f59a3f086f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3f086f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3f086f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3f086f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44b61d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a446285: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a474c1d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a38aeb3: winter_prover::Prover::generate_proof (prover/src/lib.rs:222:20)",
"0x63f59a2b1cb7: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x63f59a2a0abc: winter_verifier::perform_verification (verifier/src/lib.rs:317:25)",
"0x63f59a3eeb04: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3eeb04: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3eeb04: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3eeb04: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x63f59a44beaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a447d64: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a4760da: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a2d7e8d: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x63f59a3cd1ce: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x63f59a2a4038: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:216:32)",
"0x63f59a483e5f: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63f59a3d5e5f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x63f59a4f21e9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x63f59a45c15b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x63f59a2d26eb: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x63f59a335f6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63f59a3fb22b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3fb22b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3fb22b: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3fb22b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x63f59a44baad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a448955: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a36c16d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a3ac618: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x63f59a276036: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x63f59a466c48: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:300:57)",
"0x63f59a35fc21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63f59a369dd8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63f59a42b6ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63f59a2a58ec: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x63f59a328b4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63f59a3874c4: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3874c4: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3874c4: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x63f59a437bf6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x63f59a2ff0ad: <winterfell::WorkAir as winter_air::air::Air>::new (winterfell/src/main.rs:151:23)",
"0x63f59a466f36: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:226:17)",
"0x63f59a48119e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63f59a3e8ecf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3e8ecf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3e8ecf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3e8ecf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44bd5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a448da7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a475edd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a2fe0e6: winterfell::main (winterfell/src/main.rs:38:27)",
"0x63f59a3295cc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63f59a3ecaff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3ecaff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3ecaff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3ecaff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44a4ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a447337: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a475e8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a2fdedf: winterfell::main (winterfell/src/main.rs:28:26)",
"0x63f59a280f63: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x63f59a66112b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x63f59a661061: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x63f59a65a46b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x63f59a654b71: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x63f59a655307: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x63f59a66490b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x63f59a38aa42: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:512:13)",
"0x63f59a29f8e5: winter_verifier::perform_verification (verifier/src/lib.rs:185:13)",
"0x63f59a33620c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63f59a3efe49: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3efe49: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3efe49: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3efe49: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44a93a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a4477f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a47501a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a29fc5f: winter_verifier::perform_verification (verifier/src/lib.rs:218:40)",
"0x63f59a3ee3bf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3ee3bf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3ee3bf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3ee3bf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44b6cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a448e45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a47552d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a2ad4ab: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x63f59a387012: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a387012: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a387012: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x63f59a439b05: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63f59a439b05: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63f59a439b05: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x63f59a287b95: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x63f59a24cd82: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x63f59a24cd82: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63f59a24cd82: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a24cd82: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a24cd82: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a24cd82: std::io::buffered::bufwriter::BufWriter<W>::with_capacity (io/buffered/bufwriter.rs:115:33)",
"0x63f59a24cd82: std::io::buffered::linewriter::LineWriter<W>::with_capacity (io/buffered/linewriter.rs:109:29)",
"0x63f59a24cd82: std::io::buffered::linewriter::LineWriter<W>::new (io/buffered/linewriter.rs:89:9)",
"0x63f59a24cd82: std::io::stdio::stdout::{{closure}} (src/io/stdio.rs:618:62)",
"0x63f59a24cd82: std::sync::once_lock::OnceLock<T>::get_or_init::{{closure}} (src/sync/once_lock.rs:250:50)",
"0x63f59a24cd82: std::sync::once_lock::OnceLock<T>::initialize::{{closure}} (src/sync/once_lock.rs:376:19)",
"0x63f59a24cd82: std::sync::once::Once::call_once_force::{{closure}} (src/sync/once.rs:208:40)",
"0x63f59a24cd82: std::sys_common::once::futex::Once::call (sys_common/once/futex.rs:124:21)",
"0x63f59a24beca: std::sync::once::Once::call_once_force (src/sync/once.rs:208:9)",
"0x63f59a24beca: std::sync::once_lock::OnceLock<T>::initialize (src/sync/once_lock.rs:375:9)",
"0x63f59a6b61c5: std::sync::once_lock::OnceLock<T>::get_or_try_init (src/sync/once_lock.rs:298:9)",
"0x63f59a6b61c5: std::sync::once_lock::OnceLock<T>::get_or_init (src/sync/once_lock.rs:250:15)",
"0x63f59a6b61c5: std::io::stdio::stdout (src/io/stdio.rs:618:14)",
"0x63f59a6b61c5: std::io::stdio::print_to (src/io/stdio.rs:1020:21)",
"0x63f59a6b61c5: std::io::stdio::_print (src/io/stdio.rs:1097:5)",
"0x63f59a2fe03a: winterfell::main (winterfell/src/main.rs:36:5)",
"0x63f59a6612db: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x63f59a660fb1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x63f59a65a2ab: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x63f59a656f3e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x63f59a658400: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x63f59a657bf8: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x63f59a335ccc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63f59a402c35: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a402c35: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a402c35: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a38b88e: winter_prover::Prover::generate_proof (prover/src/lib.rs:307:44)",
"0x63f59a2dec4b: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x63f59a3dc131: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x63f59a3b0853: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x63f59a463832: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x63f59a2d5517: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x63f59a2a5845: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x63f59a369041: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63f59a36a018: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63f59a4288be: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63f59a37be9d: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:175:17)",
"0x63f59a38c4d0: winter_prover::Prover::generate_proof (prover/src/lib.rs:452:35)",
"0x63f59a32a03c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63f59a3ec909: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3ec909: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3ec909: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3ec909: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44be3a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a447934: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a474a2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a29fba2: winter_verifier::perform_verification (verifier/src/lib.rs:214:41)",
"0x63f59a69a9ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63f59a69c04c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a69c04c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a69c04c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x63f59a699c7c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63f59a699c7c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63f59a699c7c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x63f59a695ece: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x63f59a3d4370: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x63f59a314d52: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x63f59a3e92ef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3e92ef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3e92ef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3e92ef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44b4cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a447d15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a4747dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a2a58d5: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x63f59a2db356: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x63f59a4000e6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x63f59a323e4c: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x63f59a3d4f37: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x63f59a274a3f: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:230:34)",
"0x63f59a47d026: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63f59a4a33a7: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x63f59a36f18f: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x63f59a30f93d: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x63f59a2d5999: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x63f59a4d5b89: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x63f59a38d6b8: winter_prover::Prover::generate_proof (prover/src/lib.rs:558:13)",
"0x63f59a3f940d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3f940d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3f940d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3f940d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44ae4a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a4486e4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a474d1a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a3ceba1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x63f59a3dd518: winter_prover::trace::Trace::validate (src/trace/mod.rs:123:26)",
"0x63f59a38f578: winter_prover::Prover::generate_proof (prover/src/lib.rs:379:17)",
"0x63f59a3c7bbd: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x63f59a3c7921: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x63f59a4e5b73: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x63f59a3f3b9d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3f3b9d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3f3b9d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3f3b9d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44a2aa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a447394: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a475b5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a3d45c3: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x63f59a2dccc7: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x63f59a6619e9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a6619e9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a6619e9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a6619e9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x63f59a661e2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a661df7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a661fce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a6644c9: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x63f59a33230c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63f59a401328: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a401328: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a401328: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x63f59a439205: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63f59a439205: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63f59a439205: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x63f59a38cea3: winter_prover::Prover::generate_proof (prover/src/lib.rs:510:39)",
"0x63f59a3e9b4f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3e9b4f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3e9b4f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3e9b4f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a43503e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x63f59a449035: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a4760ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a2fe74e: winterfell::main (winterfell/src/main.rs:65:26)",
"0x63f59a3576d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63f59a36a7c8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63f59a42967e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63f59a323216: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x63f59a3069fe: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x63f59a2b1eb1: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x63f59a3b85c3: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x63f59a66148b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x63f59a660e51: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x63f59a65a54b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x63f59a654c41: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x63f59a6552c7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x63f59a66495b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x63f59a653e9d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x63f59a65f42b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x63f59a6631e3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x63f59a3e5b59: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3e5b59: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3e5b59: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3e5b59: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44a6ba: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a4489a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a474eea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a38ce8c: winter_prover::Prover::generate_proof (prover/src/lib.rs:505:52)",
"0x63f59a5829e9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63f59a5829e9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63f59a5829e9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x63f59a3a309a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x63f59a281a26: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x63f59a3d5714: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x63f59a2ae325: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x63f59a4e4d9d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x63f59a3893d4: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:541:17)",
"0x63f59a29ffc9: winter_verifier::perform_verification (verifier/src/lib.rs:266:61)",
"0x63f59a32fe6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63f59a3eab29: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3eab29: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3eab29: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3eab29: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44acaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a449084: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a47519a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a31824b: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x63f59a5770b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63f59a579d69: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63f59a581322: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63f59a2d565f: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x63f59a487d72: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x63f59a3cee73: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x63f59a3f3e94: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3f3e94: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3f3e94: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3f3e94: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x63f59a44a5da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a448ec4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a475c5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a2db46e: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x63f59a3fd9dd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3fd9dd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3fd9dd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3fd9dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44ac7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a447ff4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a47586a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a3d467b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x63f59a337edc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63f59a3fa25f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3fa25f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3fa25f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3fa25f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a43718b: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x63f59a4478d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a47556d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a38b7f7: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:36)",
"0x63f59a3672a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63f59a36aa98: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63f59a42a91b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63f59a30c0fa: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x63f59a3e24b9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3e24b9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3e24b9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3e24b9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44a8ea: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a4474f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a47539a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a378fe8: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:83:9)",
"0x63f59a3b84ab: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x63f59a31fe35: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x63f59a31fb3e: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x63f59a3e63a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3e63a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3e63a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3e63a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44b48a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a446fc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a475a3a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a38ad8f: winter_prover::Prover::generate_proof (prover/src/lib.rs:214:39)",
"0x63f59a2952ce: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x63f59a292ac4: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x63f59a463c5a: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x63f59a4d76a7: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x63f59a3ba889: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x63f59a298a78: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x63f59a2c5be1: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:135:9)",
"0x63f59a3a580b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x63f59a3a3a1d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x63f59a517c2a: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x63f59a4f6c7d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x63f59a4f9613: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x63f59a30a237: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x63f59a27288c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x63f59a66163b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x63f59a660f01: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x63f59a65a38b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x63f59a653e3d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x63f59a65f748: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x63f59a6630a7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x63f59a2b1ca0: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x63f59a2d531d: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x63f59a3e94ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3e94ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3e94ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3e94ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44bd3d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a4465f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a47621d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a2b1ff2: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x63f59a296d08: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x63f59a3dd9a5: winter_prover::trace::Trace::validate (src/trace/mod.rs:179:13)",
"0x63f59a32d1fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63f59a3ef622: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3ef622: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3ef622: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3ef622: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x63f59a44adaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a446484: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a4638ea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a3d2d67: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x63f59a31fd26: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x63f59a3b8347: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x63f59a34d8d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63f59a36a318: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63f59a42b12d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63f59a294af2: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x63f59a4c0ac5: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x63f59a3369ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63f59a402a55: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a402a55: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a402a55: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a38b877: winter_prover::Prover::generate_proof (prover/src/lib.rs:306:39)",
"0x63f59a2c89d6: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x63f59a2c7e23: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x63f59a3b80d2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x63f59a2a56db: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x63f59a27289d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x63f59a29d29f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x63f59a318df3: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x63f59a369a21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63f59a369e08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63f59a42c42e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63f59a3d5f07: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x63f59a3d576e: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x63f59a46ab0a: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x63f59a4817a8: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63f59a306114: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x63f59a2ad3b7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x63f59a2c58b2: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:28)",
"0x63f59a65704e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x63f59a6589ec: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x63f59a65755a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x63f59a51055d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x63f59a516a25: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x63f59a50986e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x63f59a6522c6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x63f59a4e56ca: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x63f59a2d831c: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x63f59a2a5f56: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x63f59a482eb6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63f59a4a7fbd: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x63f59a33817c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63f59a3faeef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3faeef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3faeef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3faeef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44b27d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a446c65: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a4579bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a38b033: winter_prover::Prover::generate_proof (prover/src/lib.rs:248:41)",
"0x63f59a3cd1b0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x63f59a298adb: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x63f59a329d9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63f59a3f2e5f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3f2e5f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3f2e5f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3f2e5f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44a3cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a447e87: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a474e8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a379bcd: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:51:26)",
"0x63f59a3f1ecd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3f1ecd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3f1ecd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3f1ecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44b09a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a446544: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a47573a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a3d450b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x63f59a296a93: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x63f59a3232b9: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x63f59a2d3428: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x63f59a38b132: winter_prover::Prover::generate_proof (prover/src/lib.rs:262:22)",
"0x63f59a280461: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x63f59a31703f: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x63f59a2ad6fe: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x63f59a2a503b: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:102:85)",
"0x63f59a481a6e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63f59a34e7a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63f59a36a108: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63f59a42adae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63f59a2a11eb: winter_verifier::perform_verification (verifier/src/lib.rs:184:9)",
"0x63f59a4023c5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a4023c5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a4023c5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a38b8cd: winter_prover::Prover::generate_proof (prover/src/lib.rs:308:37)",
"0x63f59a2c7e5c: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x63f59a3176b2: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x63f59a34c511: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63f59a36aa08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63f59a42840e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63f59a30fc69: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x63f59a2d507a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x63f59a3e769a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3e769a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3e769a: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3e769a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x63f59a44a4cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a448a1a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a4d2f4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a30c243: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x63f59a4d54f9: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x63f59a2d337b: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x63f59a2a4330: winter_verifier::verify (verifier/src/lib.rs:98:38)",
"0x63f59a32b52a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63f59a3e3949: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3e3949: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3e3949: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3e3949: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44b96a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a447874: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a475b8a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a2a840e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x63f59a2951bf: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x63f59a296f9d: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x63f59a3a30af: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x63f59a29cd9a: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x63f59a3ed95f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3ed95f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3ed95f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3ed95f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44ba4d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a447e15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a475f5d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a4eb7af: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x63f59a4d5b9b: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x63f59a3182f2: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x63f59a3c7b6c: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x63f59a3310bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63f59a3e26af: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3e26af: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3e26af: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3e26af: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a437705: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x63f59a44850a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a474b3d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a29b891: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x63f59a32f3fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63f59a3eeedf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3eeedf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3eeedf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3eeedf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44b88d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a4470c5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a4749dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a39c08b: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:648:34)",
"0x63f59a2cc081: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x63f59a2cae86: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x63f59a39c12f: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:655:31)",
"0x63f59a2a841d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x63f59a38a978: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:517:13)",
"0x63f59a3e3f8f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3e3f8f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3e3f8f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3e3f8f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44b06d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a446f75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a47479d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a2943a8: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x63f59a31a222: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x63f59a3f2a3f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63f59a3f2a3f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63f59a3f2a3f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63f59a3f2a3f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63f59a44bb1d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63f59a446bb7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63f59a4749bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63f59a2b2df7: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x63f59a2ca9bd: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x63f59a2c6c90: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x63f59a2c9614: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x63f59a2c258a: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:155:31)",
"0x63f59a31a2d3: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x63f59a30fafb: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)"
]
}