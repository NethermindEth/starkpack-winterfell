{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell",
"pid": 25842,
"tg": 1856266,
"te": 2514820,
"pps": [
{
"tb": 96,
"tbk": 1,
"tl": 25,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7
]
},
{
"tb": 2024,
"tbk": 12,
"tl": 275,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
16,
17,
18
]
},
{
"tb": 32704,
"tbk": 9,
"tl": 65490,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
19,
20,
21,
22,
23
]
},
{
"tb": 72,
"tbk": 3,
"tl": 65,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
26,
27,
28,
29,
30,
31,
32,
33
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1901,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43
]
},
{
"tb": 512,
"tbk": 1,
"tl": 14,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
45,
46,
47,
48,
49,
50,
51
]
},
{
"tb": 1832,
"tbk": 15,
"tl": 30,
"mb": 248,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
52,
53,
54
]
},
{
"tb": 83886080,
"tbk": 1,
"tl": 83943,
"mb": 83886080,
"mbk": 1,
"gb": 83886080,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
55,
56,
57,
58,
59,
60,
61,
62,
63
]
},
{
"tb": 96,
"tbk": 1,
"tl": 5471,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
64,
65,
66,
67,
68
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1711,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
69,
70,
71,
72,
73,
74,
43,
75
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2069,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
76,
77,
78,
79,
80,
81,
82,
83,
84
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 141580,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
85,
86,
87,
88,
89,
90,
91,
92
]
},
{
"tb": 240,
"tbk": 2,
"tl": 449405,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
93,
94,
95,
96,
97
]
},
{
"tb": 32,
"tbk": 1,
"tl": 144,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
55,
56,
57,
58,
59,
60,
98,
99,
100
]
},
{
"tb": 32,
"tbk": 2,
"tl": 446464,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
101,
102,
103,
104,
105,
106,
107,
108
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
109,
110,
111,
112,
113,
114,
115,
116,
117,
118,
119
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 29292,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
55,
56,
57,
120,
121,
122,
123,
124,
96
]
},
{
"tb": 10485760,
"tbk": 640,
"tl": 1603184135,
"mb": 10485760,
"mbk": 640,
"gb": 10485760,
"gbk": 640,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
45,
46,
47,
48,
125,
126,
127
]
},
{
"tb": 512,
"tbk": 1,
"tl": 3266,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
128,
129,
130,
131,
96
]
},
{
"tb": 24,
"tbk": 1,
"tl": 124653,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
132,
133,
134,
135,
136,
137,
138,
139,
140
]
},
{
"tb": 36864,
"tbk": 2,
"tl": 5155,
"mb": 36864,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
85,
86,
87,
88,
89,
141,
142,
143
]
},
{
"tb": 7136,
"tbk": 32,
"tl": 61889,
"mb": 7136,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
85,
86,
87,
88,
144,
145,
146,
147
]
},
{
"tb": 8,
"tbk": 1,
"tl": 20,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
148,
149,
150,
151,
152,
153,
154,
155
]
},
{
"tb": 48,
"tbk": 2,
"tl": 68,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
93,
156,
157,
158,
159,
160,
161
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 159938,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
162,
163,
164,
165,
166,
167,
168
]
},
{
"tb": 96,
"tbk": 1,
"tl": 7334,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
169,
170,
171,
172,
173,
174,
175,
96,
97
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
93,
176,
177,
178,
179
]
},
{
"tb": 7136,
"tbk": 32,
"tl": 71392,
"mb": 7136,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
85,
86,
87,
88,
144,
145,
180,
181
]
},
{
"tb": 1944,
"tbk": 2,
"tl": 1549198,
"mb": 1920,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
182,
183,
184,
185,
186,
187,
188,
189,
190
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 2052,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
85,
191,
192,
193,
194,
195,
196,
197,
198
]
},
{
"tb": 72,
"tbk": 3,
"tl": 9776,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
199,
200,
201,
202,
203,
204,
205,
206,
207,
208,
209,
210
]
},
{
"tb": 384,
"tbk": 1,
"tl": 446215,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
211,
212,
213,
214,
215,
216,
217,
218,
219
]
},
{
"tb": 32,
"tbk": 1,
"tl": 88,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
109,
110,
111,
112,
113,
220,
221,
222,
223,
224,
225
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3589,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
226,
227,
228,
229,
230,
231,
232,
233,
234
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 140083,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
85,
86,
87,
88,
89,
141,
142,
235
]
},
{
"tb": 1536,
"tbk": 8,
"tl": 2367,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
236,
237,
238,
239,
240,
241
]
},
{
"tb": 24,
"tbk": 1,
"tl": 14,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
34,
35,
36,
37,
38,
39,
40,
41,
242,
243
]
},
{
"tb": 7552,
"tbk": 2,
"tl": 1134,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
244,
245,
246,
247,
248,
249,
250,
251,
252
]
},
{
"tb": 48,
"tbk": 1,
"tl": 5054,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
45,
46,
47,
253,
254,
68,
179
]
},
{
"tb": 320,
"tbk": 2,
"tl": 892397,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
255,
256,
257,
258,
259
]
},
{
"tb": 216,
"tbk": 1,
"tl": 2477659,
"mb": 216,
"mbk": 1,
"gb": 216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
24,
260,
261,
262,
263,
264,
265,
266,
267,
268
]
},
{
"tb": 256,
"tbk": 1,
"tl": 385,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
269,
270,
271,
272,
17,
273,
274
]
},
{
"tb": 83886080,
"tbk": 1,
"tl": 771689,
"mb": 83886080,
"mbk": 1,
"gb": 83886080,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
24,
244,
275,
276,
277,
278,
279,
280,
281
]
},
{
"tb": 1088,
"tbk": 2,
"tl": 27,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
282,
283,
284,
285,
286,
287
]
},
{
"tb": 512,
"tbk": 1,
"tl": 2204,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
45,
46,
47,
288,
7,
68,
179
]
},
{
"tb": 3864,
"tbk": 7,
"tl": 1683,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
289,
290,
291,
292,
293,
294
]
},
{
"tb": 24,
"tbk": 1,
"tl": 129,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
93,
295,
296,
297,
298,
299,
68
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
109,
110,
111,
112,
113,
114,
115,
116,
117,
118,
178
]
},
{
"tb": 512,
"tbk": 1,
"tl": 27,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
45,
46,
47,
300,
51,
68,
179
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 446312,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
301,
302,
303,
304,
305,
306,
307,
308,
297,
309
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 3547,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
45,
46,
47,
48,
310,
311,
312
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1793,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
45,
46,
47,
313,
314,
68,
179
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 62296,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
162,
163,
164,
165,
166,
167,
315
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2006,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
69,
70,
71,
72,
316,
146,
147,
317
]
},
{
"tb": 944,
"tbk": 2,
"tl": 807,
"mb": 944,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
318,
319,
320,
321,
322,
323,
324,
325
]
},
{
"tb": 20480,
"tbk": 2,
"tl": 81245,
"mb": 10240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
162,
163,
164,
165,
166,
167,
326
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2480346,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
327,
328,
329,
330,
331,
332,
333,
334,
335,
336
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2506846,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
337,
338,
339,
340,
341,
342,
343,
344
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 62278,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
162,
163,
164,
165,
166,
167,
345
]
},
{
"tb": 512,
"tbk": 1,
"tl": 2846,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
346,
347,
96
]
},
{
"tb": 512,
"tbk": 1,
"tl": 16,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
45,
46,
47,
348,
51,
68,
179
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 147,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
55,
56,
57,
58,
59,
60,
349,
99,
100
]
},
{
"tb": 64,
"tbk": 1,
"tl": 139,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
19,
20,
21,
350,
351
]
},
{
"tb": 48,
"tbk": 2,
"tl": 892405,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
199,
200,
201,
202,
203,
204,
205,
206,
352,
259
]
},
{
"tb": 65472,
"tbk": 10,
"tl": 54,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
19,
20,
21,
353,
354
]
},
{
"tb": 480,
"tbk": 4,
"tl": 4594,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
109,
355,
356,
357,
358,
359,
360
]
},
{
"tb": 96,
"tbk": 1,
"tl": 10,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
361,
362,
363,
364,
365,
366,
367,
368,
369
]
},
{
"tb": 128,
"tbk": 2,
"tl": 1965,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
45,
46,
47,
48,
310,
311,
370
]
},
{
"tb": 1600,
"tbk": 8,
"tl": 140,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
371,
372,
373,
374,
375,
376
]
},
{
"tb": 5520,
"tbk": 10,
"tl": 1307,
"mb": 2208,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
289,
290,
291,
377,
378,
379
]
},
{
"tb": 20480,
"tbk": 2,
"tl": 81253,
"mb": 10240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
162,
163,
164,
165,
166,
167,
380
]
},
{
"tb": 1984,
"tbk": 5,
"tl": 164,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
19,
20,
21,
381,
351
]
},
{
"tb": 20480,
"tbk": 1,
"tl": 51,
"mb": 20480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
45,
46,
47,
382,
383,
384,
385
]
},
{
"tb": 18432,
"tbk": 2,
"tl": 2022,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
45,
46,
47,
48,
386,
387,
388
]
},
{
"tb": 24,
"tbk": 1,
"tl": 192,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
34,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 15506,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
45,
46,
47,
48,
397,
398,
399
]
},
{
"tb": 216,
"tbk": 1,
"tl": 7866,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
260,
400,
401,
402,
403,
404,
405,
406,
407
]
},
{
"tb": 256,
"tbk": 1,
"tl": 4614,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
55,
56,
57,
120,
121,
122,
408,
409,
410
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 7856,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
301,
411,
412,
413,
414,
415,
416,
417
]
},
{
"tb": 16,
"tbk": 1,
"tl": 98,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
93,
418,
419,
420,
421,
422,
423
]
},
{
"tb": 96,
"tbk": 1,
"tl": 5064,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
424,
425
]
},
{
"tb": 96,
"tbk": 1,
"tl": 65458,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
424,
23
]
},
{
"tb": 327680,
"tbk": 1,
"tl": 4407,
"mb": 327680,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
109,
110,
426,
427,
428,
429,
430,
43,
75
]
},
{
"tb": 2097152,
"tbk": 64,
"tl": 195379,
"mb": 2097152,
"mbk": 64,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
55,
56,
57,
58,
59,
60,
431,
38,
39,
40,
432
]
},
{
"tb": 15360,
"tbk": 1,
"tl": 1834595,
"mb": 15360,
"mbk": 1,
"gb": 15360,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
24,
34,
433,
434,
435,
436,
437,
438,
439,
440
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 45654,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
441,
442,
443,
444,
445,
446,
447
]
},
{
"tb": 640,
"tbk": 4,
"tl": 986,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
448,
449,
450,
451,
53
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 118,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
55,
56,
57,
120,
121,
122,
452,
297,
298
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 393143,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
45,
46,
47,
48,
310,
311,
453
]
},
{
"tb": 7552,
"tbk": 59,
"tl": 49,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
454,
455,
456,
457,
458,
459,
460,
461
]
},
{
"tb": 472,
"tbk": 2,
"tl": 1706,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
462,
463,
464,
465,
466,
467
]
},
{
"tb": 2024,
"tbk": 12,
"tl": 35,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
52,
74,
43
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3261,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
55,
56,
57,
58,
59,
60,
468,
207,
208,
209,
210
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2305,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
69,
70,
71,
72,
316,
180,
181,
469
]
},
{
"tb": 256,
"tbk": 1,
"tl": 8,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
55,
56,
57,
58,
59,
60,
470,
175,
96
]
},
{
"tb": 480,
"tbk": 4,
"tl": 5039,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
109,
355,
356,
357,
358,
359,
471
]
},
{
"tb": 16,
"tbk": 1,
"tl": 449419,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
55,
56,
57,
58,
59,
60,
468,
472,
95
]
},
{
"tb": 8192,
"tbk": 1,
"tl": 2477455,
"mb": 8192,
"mbk": 1,
"gb": 8192,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
45,
46,
47,
48,
310,
473,
474
]
},
{
"tb": 7552,
"tbk": 2,
"tl": 11354,
"mb": 7552,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
45,
46,
47,
475,
476,
477,
385
]
},
{
"tb": 7552,
"tbk": 2,
"tl": 720,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
244,
275,
276,
277,
478,
54,
175,
96
]
},
{
"tb": 24,
"tbk": 1,
"tl": 642443,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
34,
479,
480,
481,
482,
96,
97
]
},
{
"tb": 1608,
"tbk": 2,
"tl": 897931,
"mb": 1608,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
34,
483,
484,
485,
486,
487,
488,
489,
490
]
},
{
"tb": 32,
"tbk": 1,
"tl": 3680,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
55,
56,
57,
120,
121,
122,
491,
385,
179
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 719320,
"mb": 262144,
"mbk": 1,
"gb": 262144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
24,
85,
86,
87,
88,
89,
492,
493,
494
]
},
{
"tb": 40,
"tbk": 1,
"tl": 1618714,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
24,
495,
496,
497,
498,
499,
500,
501,
502,
503
]
},
{
"tb": 24,
"tbk": 1,
"tl": 642447,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
504,
505,
506,
507,
508,
96,
97
]
},
{
"tb": 96,
"tbk": 1,
"tl": 7798,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
85,
86,
87,
88,
144,
509,
510,
385
]
},
{
"tb": 992,
"tbk": 5,
"tl": 449417,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
109,
355,
356,
357,
358,
511,
512
]
},
{
"tb": 48,
"tbk": 1,
"tl": 141,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
93,
513,
514,
96,
97
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 3560,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
55,
56,
57,
120,
121,
122,
515,
516,
96
]
},
{
"tb": 65568,
"tbk": 3,
"tl": 1226,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
45,
46,
47,
48,
517,
518,
519
]
},
{
"tb": 24,
"tbk": 1,
"tl": 449422,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
199,
200,
201,
202,
203,
204,
205,
206,
472,
95
]
},
{
"tb": 96,
"tbk": 1,
"tl": 1896,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
520,
521,
522,
523,
43
]
},
{
"tb": 48,
"tbk": 1,
"tl": 143641,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
34,
524,
525,
526,
527,
528,
529,
530,
531
]
},
{
"tb": 72,
"tbk": 1,
"tl": 648628,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
532,
533,
534,
535,
536,
537,
538,
539,
540
]
},
{
"tb": 10240,
"tbk": 1,
"tl": 3584,
"mb": 10240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
441,
442,
443,
444,
541,
542,
543
]
},
{
"tb": 7552,
"tbk": 2,
"tl": 297,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
45,
46,
47,
48,
49,
544,
545
]
},
{
"tb": 83886080,
"tbk": 80,
"tl": 62827695,
"mb": 83886080,
"mbk": 80,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
244,
275,
276,
277,
278,
546,
547,
548
]
},
{
"tb": 96,
"tbk": 1,
"tl": 157172,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
549,
96
]
},
{
"tb": 512,
"tbk": 1,
"tl": 989,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
55,
56,
57,
120,
121,
122,
550,
467,
551
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
93,
418,
419,
552,
553,
96,
97
]
},
{
"tb": 72,
"tbk": 1,
"tl": 5282,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
93,
554,
75,
96,
97
]
},
{
"tb": 576,
"tbk": 2,
"tl": 45,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
555,
556,
557,
558,
559,
560,
561,
562,
563
]
},
{
"tb": 98304,
"tbk": 3,
"tl": 9844,
"mb": 98304,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
55,
56,
57,
58,
59,
60,
431,
38,
39,
40,
564
]
},
{
"tb": 2288,
"tbk": 22,
"tl": 297,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
565,
566,
567,
568,
569,
570
]
},
{
"tb": 96,
"tbk": 1,
"tl": 4124,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
109,
355,
571,
572,
573,
574,
430
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 2303,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
85,
575,
576,
577,
578,
579,
580,
581,
582
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 1534479,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
45,
46,
47,
48,
397,
398,
583
]
},
{
"tb": 96,
"tbk": 1,
"tl": 29,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
584,
7
]
},
{
"tb": 48,
"tbk": 2,
"tl": 898815,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
199,
200,
201,
202,
203,
204,
205,
206,
585,
586
]
},
{
"tb": 43320,
"tbk": 95,
"tl": 16393,
"mb": 15048,
"mbk": 33,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
587,
588,
589,
590,
591,
592
]
},
{
"tb": 83886080,
"tbk": 8192,
"tl": 39210,
"mb": 10240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
55,
56,
57,
120,
121,
122,
593,
594,
493
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 446305,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
55,
56,
57,
120,
121,
122,
452,
297,
309
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1211,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
85,
595,
596,
597,
598,
599,
600,
124
]
},
{
"tb": 327712,
"tbk": 33,
"tl": 58574,
"mb": 327680,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
55,
56,
57,
58,
59,
60,
431,
38,
39,
40,
41
]
},
{
"tb": 7552,
"tbk": 2,
"tl": 775,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
162,
163,
164,
165,
166,
167,
601
]
},
{
"tb": 1344,
"tbk": 2,
"tl": 1055,
"mb": 744,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
69,
70,
71,
72,
73,
53,
54,
175
]
},
{
"tb": 80,
"tbk": 1,
"tl": 2506701,
"mb": 80,
"mbk": 1,
"gb": 80,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
24,
602,
603,
604,
605,
606,
607,
608,
609,
610
]
},
{
"tb": 20480,
"tbk": 1,
"tl": 5496,
"mb": 20480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
55,
56,
57,
58,
59,
60,
611,
612,
385
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 3149,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
55,
56,
57,
58,
59,
60,
611,
613,
514
]
},
{
"tb": 960,
"tbk": 8,
"tl": 2500,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
614,
615,
616,
617,
618
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1828585,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
24,
619,
620,
621,
622,
623,
624,
625,
626,
627
]
},
{
"tb": 10485760,
"tbk": 640,
"tl": 1107385872,
"mb": 10485760,
"mbk": 640,
"gb": 10485760,
"gbk": 640,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
55,
56,
57,
58,
59,
60,
628,
629,
630
]
},
{
"tb": 288,
"tbk": 2,
"tl": 766,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
441,
442,
443,
444,
631,
545,
467
]
},
{
"tb": 256,
"tbk": 1,
"tl": 6243,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
45,
46,
47,
382,
632,
633,
385
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2480234,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
24,
634,
635,
636,
637,
638,
639,
243,
96
]
},
{
"tb": 64,
"tbk": 1,
"tl": 3,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
93,
176,
177,
119,
243,
96,
97
]
},
{
"tb": 20512,
"tbk": 3,
"tl": 281182,
"mb": 20512,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
640,
641,
642,
643,
644,
645,
646,
647
]
},
{
"tb": 288,
"tbk": 1,
"tl": 4979,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
648,
649,
650,
651,
652
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2039,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
34,
653,
654,
655,
656,
657,
658,
659,
660
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1455,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
109,
355,
356,
357,
358,
661,
430
]
},
{
"tb": 2024,
"tbk": 12,
"tl": 283,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
16,
17,
273
]
},
{
"tb": 512,
"tbk": 1,
"tl": 393152,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
269,
270,
271,
662,
663,
95,
96
]
},
{
"tb": 8192,
"tbk": 1,
"tl": 209864,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
45,
46,
47,
48,
310,
311,
664
]
},
{
"tb": 60416,
"tbk": 2,
"tl": 783,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
162,
163,
164,
165,
166,
167,
665
]
},
{
"tb": 32,
"tbk": 1,
"tl": 157161,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
109,
355,
356,
357,
358,
666,
96
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 1005,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
109,
355,
356,
357,
358,
667,
17
]
},
{
"tb": 256,
"tbk": 1,
"tl": 994,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
462,
463,
464,
668,
467,
551
]
},
{
"tb": 984275,
"tbk": 7,
"tl": 7942,
"mb": 655750,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
669,
670,
671,
672,
673
]
},
{
"tb": 15360,
"tbk": 1,
"tl": 634788,
"mb": 15360,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
34,
35,
36,
37,
38,
39,
40,
674,
675,
676
]
},
{
"tb": 64,
"tbk": 1,
"tl": 5059,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
19,
20,
21,
677,
425
]
},
{
"tb": 224,
"tbk": 1,
"tl": 5959,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
678,
679,
680,
681,
477
]
},
{
"tb": 1832,
"tbk": 15,
"tl": 227,
"mb": 248,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
16,
17,
682
]
},
{
"tb": 1920,
"tbk": 8,
"tl": 1151,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
19,
20,
21,
683,
684
]
},
{
"tb": 832,
"tbk": 8,
"tl": 201,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
565,
566,
567,
685,
686,
687
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2477475,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
24,
688,
689,
690,
691,
692,
693,
694,
695,
696
]
},
{
"tb": 1888,
"tbk": 2,
"tl": 1048,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
85,
595,
596,
597,
598,
599,
53,
54
]
},
{
"tb": 17382,
"tbk": 10,
"tl": 3571,
"mb": 8704,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
109,
355,
697,
698,
699,
700,
701
]
},
{
"tb": 32,
"tbk": 1,
"tl": 157165,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
109,
355,
356,
357,
358,
702,
96
]
},
{
"tb": 480,
"tbk": 4,
"tl": 138,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
109,
355,
356,
357,
358,
703,
600
]
},
{
"tb": 2024,
"tbk": 12,
"tl": 32,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
52,
600,
124
]
},
{
"tb": 1888,
"tbk": 2,
"tl": 10175,
"mb": 1888,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
85,
595,
596,
597,
598,
704,
476,
477
]
},
{
"tb": 48,
"tbk": 1,
"tl": 124644,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
93,
705,
706,
707,
708,
709,
710
]
},
{
"tb": 32,
"tbk": 1,
"tl": 119,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
93,
711,
514,
96,
97
]
},
{
"tb": 144,
"tbk": 1,
"tl": 3270,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
361,
712,
713,
714,
208,
209,
210,
715,
347,
96
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1216,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
69,
70,
71,
72,
73,
600,
124,
96
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 916,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
716,
124
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2354,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
717,
718,
719,
720,
721,
722,
723,
724
]
},
{
"tb": 1920,
"tbk": 8,
"tl": 789,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
725,
726,
727,
728,
729,
730,
731,
732
]
},
{
"tb": 36992,
"tbk": 193,
"tl": 106769,
"mb": 8960,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
85,
733,
734,
735,
736,
737,
738,
739,
740
]
},
{
"tb": 48,
"tbk": 1,
"tl": 634797,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
741,
742,
743,
744,
745,
746,
747,
748,
749
]
},
{
"tb": 327680,
"tbk": 32,
"tl": 62800,
"mb": 327680,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
55,
56,
57,
120,
121,
122,
750,
751,
752
]
},
{
"tb": 1824,
"tbk": 4,
"tl": 1124,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
587,
588,
589,
753,
754,
755
]
},
{
"tb": 160,
"tbk": 1,
"tl": 5428,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
756,
757,
758,
759,
760,
761,
762,
763,
764
]
},
{
"tb": 72,
"tbk": 1,
"tl": 3293,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
34,
35,
36,
37,
38,
39,
40,
564,
347,
96
]
},
{
"tb": 32768,
"tbk": 2,
"tl": 287211,
"mb": 32768,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
55,
56,
57,
120,
121,
122,
765,
766,
767
]
},
{
"tb": 16,
"tbk": 1,
"tl": 75,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
93,
418,
768,
420,
769,
299,
68
]
},
{
"tb": 96,
"tbk": 1,
"tl": 8,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
770,
514
]
},
{
"tb": 56,
"tbk": 1,
"tl": 1868,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
93,
771,
317,
385,
179
]
},
{
"tb": 1536,
"tbk": 1,
"tl": 3270,
"mb": 1536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
34,
35,
36,
37,
38,
39,
40,
432,
347,
96
]
},
{
"tb": 256,
"tbk": 1,
"tl": 368,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
269,
270,
271,
272,
17,
18,
772
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1834664,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
24,
773,
774,
775,
776,
777,
778,
779,
780,
781
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1618683,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
24,
619,
782,
783,
784,
785,
786,
787,
788,
789
]
},
{
"tb": 2097152,
"tbk": 2048,
"tl": 7759,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
55,
56,
57,
58,
59,
60,
790,
791,
792
]
},
{
"tb": 13004,
"tbk": 17,
"tl": 12577,
"mb": 6528,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
109,
355,
697,
698,
699,
700,
793
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2329,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
794,
795,
796,
797,
798,
799,
800,
801
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4846,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
802,
803,
804,
805,
147
]
},
{
"tb": 24,
"tbk": 1,
"tl": 642453,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
806,
807,
808,
809,
810,
96,
97
]
},
{
"tb": 20481,
"tbk": 1,
"tl": 93,
"mb": 20481,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
109,
110,
111,
112,
113,
220,
221,
222,
811,
224,
225
]
},
{
"tb": 512,
"tbk": 1,
"tl": 9,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
812,
813,
814,
815,
816,
817,
818,
819
]
},
{
"tb": 2304,
"tbk": 8,
"tl": 2301,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
820,
821,
822,
823,
824,
825
]
},
{
"tb": 960,
"tbk": 8,
"tl": 1202,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
614,
615,
616,
617,
826
]
},
{
"tb": 32,
"tbk": 1,
"tl": 18,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
45,
46,
47,
382,
827,
384,
385
]
},
{
"tb": 37216,
"tbk": 649,
"tl": 103840,
"mb": 8768,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
669,
828,
829,
830,
831,
832,
833
]
},
{
"tb": 1152,
"tbk": 4,
"tl": 137,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
834,
835,
836,
837,
838
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2340,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
839,
840,
841,
842,
843,
844,
845,
846
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3553,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
847,
848,
849,
850,
851,
852,
853,
854,
855
]
},
{
"tb": 512,
"tbk": 1,
"tl": 15,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
45,
46,
47,
48,
49,
856,
7
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2346,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
857,
858,
859,
860,
861,
862,
863,
864
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 8506,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
45,
46,
47,
48,
865,
866,
867
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 4608,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
45,
46,
47,
382,
868,
869,
181
]
},
{
"tb": 48,
"tbk": 2,
"tl": 102,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
93,
870,
157,
158,
159,
160,
161
]
},
{
"tb": 327680,
"tbk": 1,
"tl": 5410,
"mb": 327680,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
45,
46,
47,
382,
868,
871,
147
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 110,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
162,
163,
164,
165,
166,
167,
872
]
},
{
"tb": 32,
"tbk": 1,
"tl": 67,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
873,
874,
875,
876,
877,
878,
879,
880,
881
]
},
{
"tb": 2097152,
"tbk": 64,
"tl": 392681,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
882,
883,
884,
885,
886,
887,
888,
889
]
},
{
"tb": 1344,
"tbk": 2,
"tl": 9902,
"mb": 1344,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
69,
70,
71,
72,
316,
890,
476,
477
]
},
{
"tb": 147456,
"tbk": 2,
"tl": 5483,
"mb": 147456,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
45,
46,
47,
48,
891,
892,
652
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2335,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
893,
894,
895,
896,
897,
898,
899,
900
]
},
{
"tb": 16,
"tbk": 1,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
327,
328,
329,
330,
331,
332,
333,
334,
901,
385
]
},
{
"tb": 160,
"tbk": 1,
"tl": 5488,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
902,
903,
904,
905,
385
]
},
{
"tb": 36864,
"tbk": 2,
"tl": 5420,
"mb": 36864,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
85,
86,
87,
88,
89,
906,
907,
652
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
93,
908,
909,
179
]
},
{
"tb": 512,
"tbk": 1,
"tl": 2209,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
45,
46,
47,
910,
7,
68,
179
]
},
{
"tb": 65568,
"tbk": 3,
"tl": 1213,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
45,
46,
47,
48,
49,
911,
518
]
},
{
"tb": 32,
"tbk": 1,
"tl": 7805,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
85,
86,
87,
88,
144,
912,
510,
385
]
},
{
"tb": 18432,
"tbk": 2,
"tl": 2327,
"mb": 18432,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
45,
46,
47,
48,
913,
914,
652
]
},
{
"tb": 32,
"tbk": 1,
"tl": 184,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
93,
908,
915,
916,
917,
918,
919
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 2477392,
"mb": 32768,
"mbk": 1,
"gb": 32768,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
45,
46,
47,
48,
310,
920,
921
]
},
{
"tb": 896,
"tbk": 6,
"tl": 7900,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
19,
20,
21,
922,
923
]
},
{
"tb": 96,
"tbk": 1,
"tl": 2480361,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
24,
924,
925,
926,
927,
928,
929,
930,
931,
932
]
},
{
"tb": 2195456,
"tbk": 67,
"tl": 30096440,
"mb": 2195456,
"mbk": 67,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
45,
46,
47,
48,
933,
934,
935
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2963,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
109,
110,
426,
427,
428,
936,
937,
124,
96
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
109,
110,
111,
112,
113,
114,
115,
116,
117,
938,
178
]
},
{
"tb": 32,
"tbk": 1,
"tl": 60,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
873,
939,
940,
941,
942,
943,
944,
945,
946
]
},
{
"tb": 7552,
"tbk": 59,
"tl": 58,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
45,
46,
47,
382,
947,
476,
477
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 27,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
55,
56,
57,
58,
59,
60,
611,
948,
96
]
},
{
"tb": 16,
"tbk": 1,
"tl": 5,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
93,
418,
768,
552,
553,
96,
97
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 124,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
301,
302,
303,
304,
305,
306,
307,
308,
297,
298
]
},
{
"tb": 512,
"tbk": 1,
"tl": 20,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
55,
56,
57,
58,
59,
60,
949,
7,
68
]
},
{
"tb": 960,
"tbk": 8,
"tl": 176,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
109,
355,
356,
357,
358,
703,
53
]
},
{
"tb": 96,
"tbk": 1,
"tl": 11,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
93,
950,
552,
553,
96,
97
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 156700,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
162,
163,
164,
165,
166,
167,
951
]
},
{
"tb": 48,
"tbk": 1,
"tl": 45658,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
441,
442,
443,
444,
952,
446,
447
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2478025,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
953,
954,
955,
956,
957,
958,
959,
960
]
},
{
"tb": 16,
"tbk": 1,
"tl": 90,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
961,
962,
963,
964,
965,
966,
967,
968,
96,
97
]
},
{
"tb": 24,
"tbk": 1,
"tl": 642439,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
773,
969,
970,
971,
972,
96,
97
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 2477645,
"mb": 2048,
"mbk": 1,
"gb": 2048,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
24,
301,
411,
412,
413,
414,
415,
973,
974
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 650316,
"mb": 262144,
"mbk": 1,
"gb": 262144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
24,
85,
86,
87,
88,
89,
141,
142,
975
]
},
{
"tb": 480,
"tbk": 4,
"tl": 143,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
109,
355,
356,
357,
358,
703,
74
]
},
{
"tb": 1968,
"tbk": 2,
"tl": 52,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
976,
977,
978,
979,
980,
981
]
},
{
"tb": 17382,
"tbk": 10,
"tl": 2437,
"mb": 8704,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
109,
355,
697,
698,
699,
700,
982
]
},
{
"tb": 5568,
"tbk": 56,
"tl": 269757,
"mb": 5568,
"mbk": 56,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
85,
86,
87,
88,
144,
145,
890,
476
]
},
{
"tb": 10240,
"tbk": 1,
"tl": 3577,
"mb": 10240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
441,
442,
443,
444,
983,
542,
543
]
},
{
"tb": 10240,
"tbk": 1,
"tl": 25500,
"mb": 10240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
441,
442,
443,
444,
984,
985,
986
]
},
{
"tb": 24,
"tbk": 2,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
109,
110,
111,
112,
113,
114,
115,
116,
117,
938,
119
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1361,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
987,
988,
989,
990,
991,
992,
993,
994
]
},
{
"tb": 256,
"tbk": 1,
"tl": 10,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
462,
463,
464,
995,
175,
96
]
},
{
"tb": 327680,
"tbk": 1,
"tl": 3230,
"mb": 327680,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
45,
46,
47,
382,
868,
996,
147
]
},
{
"tb": 1984,
"tbk": 5,
"tl": 5456,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
19,
20,
21,
381,
997
]
},
{
"tb": 96,
"tbk": 1,
"tl": 29,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
93,
950,
420,
421,
422,
423,
96
]
},
{
"tb": 512,
"tbk": 1,
"tl": 45,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
998,
999,
1000,
1001,
1002,
1003,
1004,
1005
]
},
{
"tb": 20480,
"tbk": 1,
"tl": 5433,
"mb": 20480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
55,
56,
57,
58,
59,
60,
1006,
1007,
1008
]
},
{
"tb": 16,
"tbk": 1,
"tl": 73,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
93,
418,
419,
420,
769,
299,
68
]
},
{
"tb": 69623,
"tbk": 13,
"tl": 79416,
"mb": 34816,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
669,
670,
671,
672,
1009
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 400170,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
45,
46,
47,
48,
386,
1010,
1011
]
},
{
"tb": 10485760,
"tbk": 640,
"tl": 404298172,
"mb": 10485760,
"mbk": 640,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
55,
56,
57,
58,
59,
60,
431,
38,
39,
40,
674
]
},
{
"tb": 64,
"tbk": 1,
"tl": 5445,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
19,
20,
21,
350,
997
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 842,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
45,
46,
47,
48,
310,
311,
1012
]
},
{
"tb": 327680,
"tbk": 1,
"tl": 4690,
"mb": 327680,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
109,
110,
426,
427,
428,
1013,
430,
43,
75
]
},
{
"tb": 448,
"tbk": 2,
"tl": 377,
"mb": 248,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
269,
270,
271,
272,
17,
682,
1014
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1706,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
85,
595,
596,
597,
598,
599,
74,
43
]
},
{
"tb": 16,
"tbk": 1,
"tl": 76629,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
961,
1015,
1016,
1017,
1018,
1019,
1020,
1021,
1022
]
},
{
"tb": 16,
"tbk": 1,
"tl": 100,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
93,
418,
768,
420,
421,
422,
423
]
},
{
"tb": 384,
"tbk": 2,
"tl": 67,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
1030,
1031
]
},
{
"tb": 2048,
"tbk": 6,
"tl": 891751,
"mb": 1088,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1032,
1033,
1034,
1035,
1036
]
},
{
"tb": 80,
"tbk": 1,
"tl": 445860,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045
]
},
{
"tb": 64,
"tbk": 1,
"tl": 65452,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
19,
20,
21,
677,
23
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 35573,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
441,
442,
443,
444,
1046,
553,
96
]
},
{
"tb": 24,
"tbk": 1,
"tl": 446317,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
93,
295,
296,
297,
309,
423,
96
]
},
{
"tb": 96,
"tbk": 1,
"tl": 21,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
93,
950,
420,
769,
299,
68,
179
]
},
{
"tb": 192,
"tbk": 1,
"tl": 5440,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1047,
1048,
1049,
1050,
68
]
},
{
"tb": 32704,
"tbk": 9,
"tl": 5096,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
19,
20,
21,
22,
425
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4076,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
1051,
1052,
1053,
1054,
1055,
1056,
1057,
1058
]
},
{
"tb": 4224,
"tbk": 22,
"tl": 6457,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
236,
237,
238,
1059,
1060,
1061
]
},
{
"tb": 128,
"tbk": 1,
"tl": 1785,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
1062,
1063,
1064,
1065,
1066,
1067,
1068,
1069
]
},
{
"tb": 7552,
"tbk": 2,
"tl": 255,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
162,
163,
164,
165,
166,
167,
1070
]
},
{
"tb": 15360,
"tbk": 1,
"tl": 2506679,
"mb": 15360,
"mbk": 1,
"gb": 15360,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
24,
34,
1071,
1072,
1073,
1074,
1075,
1076,
1077,
1078
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 42,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
44,
45,
46,
47,
48,
310,
311,
1079
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2485967,
"mb": 1024,
"mbk": 1,
"gb": 1024,
"gbk": 1,
"eb": 1024,
"ebk": 1,
"fs": [
1080,
1081,
1082,
1083,
1084,
1085,
1086,
1087,
1088,
1089,
1090,
1091,
1092,
1093,
1094,
1095,
1096,
1097,
1098,
1099,
1100
]
},
{
"tb": 96,
"tbk": 1,
"tl": 5955,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
1101,
477
]
},
{
"tb": 96,
"tbk": 1,
"tl": 9,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
1102,
385
]
}
],
"ftbl": [
"[root]",
"0x5f20d655af79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5f20d6559709: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5f20d6209281: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f20d6229a38: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f20d62ea33e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f20d616d325: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x5f20d615fa15: winter_verifier::perform_verification (verifier/src/lib.rs:311:25)",
"0x5f20d651da99: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5f20d651dc0a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f20d651161c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d651161c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d651161c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5f20d62f82d9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5f20d62f82d9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5f20d62f82d9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5f20d619cabb: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x5f20d61cb46d: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x5f20d6292cf0: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x5f20d621ffe1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f20d62290d8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f20d62e767d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f20d62483d4: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:541:17)",
"0x5f20d61d61b6: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x5f20d63223b9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5f20d61eb23c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f20d62a5bd9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62a5bd9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62a5bd9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62a5bd9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d630a00a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d6307c44: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d6334c2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d61534b2: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x5f20d61ea7bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f20d62c0a22: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62c0a22: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62c0a22: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5f20d62f7d25: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5f20d62f7d25: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5f20d62f7d25: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5f20d62bf0e6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5f20d61646db: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x5f20d61674b0: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x5f20d61f44ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f20d62c17d5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62c17d5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62c17d5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d622bae7: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5f20d61c59fe: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x5f20d6170eb1: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x5f20d615fabc: winter_verifier::perform_verification (verifier/src/lib.rs:317:25)",
"0x5f20d61cadbc: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x5f20d61cd3c0: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x5f20d61d20bd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x5f20d6271e08: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d6271e08: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d6271e08: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5f20d62f7b85: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5f20d62f7b85: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5f20d62f7b85: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5f20d618b081: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x5f20d6189e86: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5f20d625b12f: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:655:31)",
"0x5f20d620fa31: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f20d6229048: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f20d62ec55e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f20d61603b2: winter_verifier::perform_verification (verifier/src/lib.rs:179:9)",
"0x5f20d61635da: winter_verifier::verify (verifier/src/lib.rs:111:21)",
"0x5f20d61f3a6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f20d62c1875: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62c1875: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62c1875: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d61caaaf: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x5f20d616477b: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x5f20d624d217: winter_prover::Prover::generate_proof (prover/src/lib.rs:603:29)",
"0x5f20d61ea52a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f20d62a2949: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62a2949: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62a2949: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62a2949: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d630a96a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d6306874: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d6334b8a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d616740e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x5f20d61e7dec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f20d62c1b95: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62c1b95: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62c1b95: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d622ba57: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5f20d61864bd: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x5f20d625ceb8: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:716:26)",
"0x5f20d624b931: winter_prover::Prover::generate_proof (prover/src/lib.rs:482:37)",
"0x5f20d6321847: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x5f20d61848b2: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:28)",
"0x5f20d624e266: winter_prover::Prover::generate_proof (prover/src/lib.rs:417:21)",
"0x5f20d625d2ee: winter_prover::Prover::prove (prover/src/lib.rs:175:37)",
"0x5f20d61bd27c: winterfell::main (winterfell/src/main.rs:54:17)",
"0x5f20d6346d85: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x5f20d6346e16: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5f20d615fedf: winter_verifier::perform_verification (verifier/src/lib.rs:228:13)",
"0x5f20d62b50ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62b50ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62b50ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62b50ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d630944d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d6305625: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d633413d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d613dd28: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x5f20d64e6819: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5f20d64e562a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f20d64e832c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d64e832c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d64e832c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5f20d64b769c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5f20d64b769c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5f20d64b769c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5f20d615c084: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x5f20d615bdce: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x5f20d61d72db: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x5f20d627245b: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5f20d627245b: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5f20d627245b: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5f20d6265db3: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x5f20d624d30a: winter_prover::Prover::generate_proof (prover/src/lib.rs:608:34)",
"0x5f20d629c1b0: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:140:51)",
"0x5f20d633d476: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5f20d613bfc1: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5f20d6201c01: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f20d6229408: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f20d62ebc54: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f20d624e285: winter_prover::Prover::generate_proof (prover/src/lib.rs:418:17)",
"0x5f20d61ed6dc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f20d62af44f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62af44f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62af44f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62af44f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d630a04d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d6304f75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d633541d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d624bdcf: winter_prover::Prover::generate_proof (prover/src/lib.rs:501:51)",
"0x5f20d61ca259: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x5f20d61cb739: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x5f20d61ce9b6: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x5f20d6192785: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5f20d619bcc7: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x5f20d6196f66: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x5f20d628dd0d: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x5f20d62a4033: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62a4033: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62a4033: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62a4033: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d630a9ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d6307545: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d6334fdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d624a6db: winter_prover::Prover::generate_proof (prover/src/lib.rs:293:23)",
"0x5f20d613d4f5: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x5f20d626a55c: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x5f20d6318129: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x5f20d6269b36: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x5f20d626d296: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x5f20d6246bcf: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:369:9)",
"0x5f20d6558adc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x5f20d6557d6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x5f20d6557ae8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x5f20d6557ae8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x5f20d6557124: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5f20d6554d43: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x5f20d6155a93: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x5f20d6510c69: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5f20d650dc1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f20d650adb6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d650adb6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d650adb6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d61d1b68: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x5f20d624d19c: winter_prover::Prover::generate_proof (prover/src/lib.rs:600:25)",
"0x5f20d639214c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x5f20d615be0c: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x5f20d61631dd: winter_verifier::verify (verifier/src/lib.rs:96:32)",
"0x5f20d61bd822: winterfell::main (winterfell/src/main.rs:71:11)",
"0x5f20d619a547: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x5f20d629a3a7: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x5f20d61efb7c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f20d62a919f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62a919f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62a919f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62a919f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d630a54d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d6307355: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d6334ddd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d61851b1: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x5f20d62adb04: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62adb04: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62adb04: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62adb04: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5f20d630aeaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d6306d64: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d63350da: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d6196e8d: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x5f20d61f106c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f20d6271f38: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d6271f38: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d6271f38: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5f20d62f87c5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5f20d62f87c5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5f20d62f87c5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5f20d613e8e2: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x5f20d613e750: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5f20d62f7df5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5f20d62f7df5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5f20d62f7df5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5f20d61e8d9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f20d62b1e5f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62b1e5f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62b1e5f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62b1e5f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d63093cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d6306e87: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d6333e8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d6238bcd: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:51:26)",
"0x5f20d64419e9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5f20d64419e9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5f20d64419e9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5f20d62620af: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x5f20d6140a26: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5f20d6294714: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5f20d61e903c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f20d62ab909: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62ab909: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62ab909: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62ab909: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d630ae3a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d6306934: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d6333a2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d615eba2: winter_verifier::perform_verification (verifier/src/lib.rs:214:41)",
"0x5f20d6186572: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x5f20d652063b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5f20d651ff01: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5f20d651938b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5f20d6512e3d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5f20d651e748: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5f20d65220a7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5f20d61d72f2: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x5f20d6249f02: winter_prover::Prover::generate_proof (prover/src/lib.rs:233:27)",
"0x5f20d61ee69c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f20d62a470f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62a470f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62a470f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62a470f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d630927d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d6307a55: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d63338ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d63a4ac4: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x5f20d63acde9: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x5f20d615f1ac: winter_verifier::perform_verification (verifier/src/lib.rs:275:24)",
"0x5f20d6228041: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f20d6229018: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f20d62e78be: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f20d623ae9d: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:175:17)",
"0x5f20d623934f: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:55:17)",
"0x5f20d61e9d4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f20d62af86f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62af86f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62af86f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62af86f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d630a61d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d6305285: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d6333c1d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d6249eb3: winter_prover::Prover::generate_proof (prover/src/lib.rs:222:20)",
"0x5f20d62c1646: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62c1646: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62c1646: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d619c882: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x5f20d62924ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x5f20d615f636: winter_verifier::perform_verification (verifier/src/lib.rs:305:9)",
"0x5f20d62c1af5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62c1af5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62c1af5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d622bc07: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5f20d61899bd: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x5f20d6185c90: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x5f20d6188614: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x5f20d626507b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5f20d626228d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5f20d63d62ea: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5f20d63b1009: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5f20d631aa75: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5f20d6191598: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5f20d616c6fe: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x5f20d626480b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5f20d6262a1d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5f20d63d6c2a: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5f20d63b5c7d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5f20d63b8613: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5f20d61c9237: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5f20d613dd37: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x5f20d6146b7f: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x5f20d6247010: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:354:9)",
"0x5f20d6326e16: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:26:25)",
"0x5f20d615ffcc: winter_verifier::perform_verification (verifier/src/lib.rs:225:43)",
"0x5f20d6170ca0: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x5f20d61e7b4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f20d6246012: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d6246012: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d6246012: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5f20d62f8b05: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5f20d62f8b05: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5f20d62f8b05: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5f20d6146b95: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x5f20d6183a9c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:51:13)",
"0x5f20d61c5e2f: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x5f20d6395338: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x5f20d6394b9b: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x5f20d61697be: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x5f20d615fb34: winter_verifier::perform_verification (verifier/src/lib.rs:319:28)",
"0x5f20d62770d2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x5f20d619ba4c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x5f20d6293ad4: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x5f20d62bde6f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62bde6f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62bde6f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62bde6f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d6309ecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d6305825: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d6334afd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d63a4c5a: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x5f20d613189d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x5f20d65599ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f20d655b04c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d655b04c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d655b04c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5f20d6558c7c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5f20d6558c7c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5f20d6558c7c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5f20d6554ece: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x5f20d615c29f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x5f20d61d7df3: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x5f20d62a7ac3: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62a7ac3: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62a7ac3: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62a7ac3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d6309bd4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d630629a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d6334654: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d61bcd51: winterfell::main (winterfell/src/main.rs:22:32)",
"0x5f20d62770f5: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x5f20d6151314: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x5f20d624ae23: winter_prover::Prover::generate_proof (prover/src/lib.rs:423:33)",
"0x5f20d6170cb7: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x5f20d6346d72: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x5f20d6249978: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:517:13)",
"0x5f20d61d66b2: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x5f20d623ad5a: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:170:36)",
"0x5f20d613f461: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x5f20d61d603f: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x5f20d64e52e9: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5f20d63f4840: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f20d63f4aa9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f20d6404111: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f20d61c97dc: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x5f20d61d58d8: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x5f20d61edc1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f20d62a14b9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62a14b9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62a14b9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62a14b9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d63098ea: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d63064f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d633439a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d6237fe8: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:83:9)",
"0x5f20d61d9222: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x5f20d652012b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5f20d6520061: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5f20d651946b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5f20d6513b71: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5f20d6514307: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5f20d652390b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5f20d63cf55d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x5f20d63d5a25: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x5f20d63c886e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x5f20d613188c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x5f20d6249a42: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:512:13)",
"0x5f20d6270485: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5f20d613ff63: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x5f20d6294c15: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5f20d616350b: winter_verifier::verify (verifier/src/lib.rs:109:19)",
"0x5f20d61c6ec7: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x5f20d61d8003: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x5f20d61d9210: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x5f20d62a53a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62a53a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62a53a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62a53a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d630a48a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d6305fc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d6334a3a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d6249d8f: winter_prover::Prover::generate_proof (prover/src/lib.rs:214:39)",
"0x5f20d618930f: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x5f20d6188506: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x5f20d625cacc: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:701:36)",
"0x5f20d62a559f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62a559f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62a559f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62a559f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d62f50d6: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5f20d6307bc5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d633530d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d61633a8: winter_verifier::verify (verifier/src/lib.rs:102:24)",
"0x5f20d61d3e92: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x5f20d61d3b2c: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x5f20d624cb02: winter_prover::Prover::generate_proof (prover/src/lib.rs:571:9)",
"0x5f20d62464c4: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62464c4: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62464c4: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5f20d62f6bf6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5f20d61be0ad: <winterfell::WorkAir as winter_air::air::Air>::new (winterfell/src/main.rs:151:23)",
"0x5f20d616403b: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:102:85)",
"0x5f20d6340a6e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5f20d61c3245: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x5f20d61be330: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:177:13)",
"0x5f20d6246b72: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:371:13)",
"0x5f20d6238adf: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:41:22)",
"0x5f20d6183b39: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:36)",
"0x5f20d624e1b5: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:21)",
"0x5f20d6248350: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:543:13)",
"0x5f20d615efc9: winter_verifier::perform_verification (verifier/src/lib.rs:266:61)",
"0x5f20d643cf36: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d643cf36: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d643cf36: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d6194517: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x5f20d6164845: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x5f20d62c0d83: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5f20d61512c5: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x5f20d62b7abf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62b7abf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62b7abf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62b7abf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d630ae7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d6307925: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d63345dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d6133788: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:228:23)",
"0x5f20d6272511: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d6272511: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d6272511: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5f20d62f6c80: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5f20d61815e4: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:156:33)",
"0x5f20d6184e25: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:128:17)",
"0x5f20d637fc6e: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5f20d62262a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f20d6229a98: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f20d62e991b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f20d61cb0fa: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x5f20d6146cba: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x5f20d6157adb: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x5f20d62ac95f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62ac95f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62ac95f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62ac95f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d630aa4d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d6306e15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d6334f5d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d63aa7af: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x5f20d65115cc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5f20d65115cc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5f20d65115cc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5f20d65112c6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x5f20d63a46ca: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x5f20d63ad5e9: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x5f20d613e8f5: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x5f20d6293d54: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x5f20d61d1c29: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x5f20d615f4f7: winter_verifier::perform_verification (verifier/src/lib.rs:298:27)",
"0x5f20d6184973: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:33)",
"0x5f20d63944f9: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x5f20d619237b: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x5f20d61deb7f: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x5f20d61e2040: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x5f20d6294104: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x5f20d61cd499: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x5f20d62c13c5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62c13c5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62c13c5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d624a8cd: winter_prover::Prover::generate_proof (prover/src/lib.rs:308:37)",
"0x5f20d62a2f8f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62a2f8f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62a2f8f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62a2f8f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d630a06d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d6305f75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d633379d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d61533a8: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x5f20d629476e: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x5f20d6186d9a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x5f20d625b6ee: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:669:26)",
"0x5f20d624a511: winter_prover::Prover::generate_proof (prover/src/lib.rs:274:13)",
"0x5f20d61ee3fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f20d62adedf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62adedf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62adedf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62adedf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d630a88d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d63060c5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d63339dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d625b08b: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:648:34)",
"0x5f20d61f4ccc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f20d62c1c35: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62c1c35: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62c1c35: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d624a88e: winter_prover::Prover::generate_proof (prover/src/lib.rs:307:44)",
"0x5f20d62a0b50: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x5f20d6293970: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x5f20d615b41f: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x5f20d6159a15: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x5f20d6277347: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x5f20d624c02d: winter_prover::Prover::generate_proof (prover/src/lib.rs:524:9)",
"0x5f20d6394b89: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x5f20d624c6b8: winter_prover::Prover::generate_proof (prover/src/lib.rs:558:13)",
"0x5f20d61541bf: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x5f20d6151ac4: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x5f20d6155f9d: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x5f20d621ec21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f20d6228dd8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f20d62ea6ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f20d61648ec: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x5f20d62a518f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62a518f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62a518f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62a518f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d6309ccd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d6306cd7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d633450d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d6329aa0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x5f20d61f3fac: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f20d62a98df: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62a98df: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62a98df: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62a98df: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d62f4b4e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5f20d6307415: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d63352ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d61664f7: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x5f20d628c1b0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x5f20d6163038: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:216:32)",
"0x5f20d6342e5f: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5f20d6286b6c: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x5f20d63a4b73: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x5f20d614e237: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x5f20d6185a29: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x5f20d63431d6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5f20d624de30: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:13)",
"0x5f20d63a3e04: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x5f20d615fc03: winter_verifier::perform_verification (verifier/src/lib.rs:323:5)",
"0x5f20d629c518: winter_prover::trace::Trace::validate (src/trace/mod.rs:123:26)",
"0x5f20d624e578: winter_prover::Prover::generate_proof (prover/src/lib.rs:379:17)",
"0x5f20d616741d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x5f20d61eb77c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f20d62afbf2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62afbf2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62afbf2: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62afbf2: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5f20d630ab7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d6305c35: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d63338cd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d6269a6a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x5f20d6151238: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x5f20d65202db: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5f20d651ffb1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5f20d65192ab: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5f20d6515f3e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5f20d6517400: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5f20d6516bf8: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5f20d64360b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f20d6438d69: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f20d6440322: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f20d619465f: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x5f20d62b2e94: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62b2e94: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62b2e94: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62b2e94: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5f20d63095da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d6307ec4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d6334c5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d619a46e: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x5f20d63262f8: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:651:17)",
"0x5f20d616d2d7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x5f20d6238028: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:83:31)",
"0x5f20d633e7af: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5f20d626372b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5f20d6262f9d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5f20d63d669a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5f20d63c3f7b: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5f20d63ce1a9: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5f20d63c8416: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5f20d61879d6: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x5f20d6186e23: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x5f20d6192c84: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d6192c84: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d6192c84: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5f20d62f6c56: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5f20d61caa4c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x5f20d6265b91: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x5f20d62868a2: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x5f20d61e85cc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f20d62abaff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62abaff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62abaff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62abaff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d63094ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d6306337: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d6334e8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d61bcedf: winterfell::main (winterfell/src/main.rs:28:26)",
"0x5f20d62bf0a6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5f20d6294d01: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x5f20d6276cbe: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x5f20d651e0f0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f20d6512669: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f20d6511e51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f20d6511950: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x5f20d63a45ed: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x5f20d61ed44a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f20d62a2539: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62a2539: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62a2539: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62a2539: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d6309b7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d6307b14: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d633544a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d624a4ea: winter_prover::Prover::generate_proof (prover/src/lib.rs:272:43)",
"0x5f20d6133a3f: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:230:34)",
"0x5f20d633c026: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5f20d63623a7: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5f20d6286921: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x5f20d61e2e4c: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x5f20d6293f37: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x5f20d61e832c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f20d6140aea: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d6140aea: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d6140aea: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5f20d62f6ca6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5f20d61d7508: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x5f20d62b4acf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62b4acf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62b4acf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62b4acf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d6309a5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d6306c45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d6334e4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d61331cf: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:283:9)",
"0x5f20d620b511: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f20d6229a08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f20d62e740e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f20d61cec69: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x5f20d61d3bc6: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x5f20d62a82ef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62a82ef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62a82ef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62a82ef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d630a4cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d6306d15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d63337dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d61648d5: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x5f20d6194999: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x5f20d6157a78: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x5f20d6184be1: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:135:9)",
"0x5f20d61336e8: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:227:28)",
"0x5f20d628682f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x5f20d624de8b: winter_prover::Prover::generate_proof (prover/src/lib.rs:450:13)",
"0x5f20d619dc4b: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x5f20d63a3d9d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x5f20d6559ea0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f20d655a0d9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f20d655a3d2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f20d655b159: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x5f20d651101a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x5f20d61368cd: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x5f20d6135036: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5f20d6325c48: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:300:57)",
"0x5f20d62481b5: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:547:13)",
"0x5f20d62166d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f20d62297c8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f20d62e867e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f20d61e2216: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x5f20d628b2d4: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x5f20d6398d94: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x5f20d63a495d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x5f20d6512e9d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5f20d651e42b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5f20d65221e3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5f20d61f717c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f20d62b9eef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62b9eef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62b9eef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62b9eef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d630a27d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d6305c65: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d63169bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d624a033: winter_prover::Prover::generate_proof (prover/src/lib.rs:248:41)",
"0x5f20d64e3700: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f20d64e3939: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f20d64e3132: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f20d619c17c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x5f20d619431d: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x5f20d624de70: winter_prover::Prover::generate_proof (prover/src/lib.rs:449:13)",
"0x5f20d61cb2b7: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x5f20d61deb3e: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x5f20d624175a: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x5f20d6325852: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:503:32)",
"0x5f20d6342dc6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5f20d636093a: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5f20d632ae27: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5f20d6335a22: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5f20d62774ab: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x5f20d613e3e2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d613e3e2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d613e3e2: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5f20d615124b: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x5f20d6265dca: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x5f20d62b0ecd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62b0ecd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62b0ecd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62b0ecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d630a09a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d6305544: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d633473a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d629350b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x5f20d65209e9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d65209e9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d65209e9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d65209e9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5f20d6520e2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d6520df7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d6520fce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d65234c9: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x5f20d62a669a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62a669a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62a669a: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62a669a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5f20d63094cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d6307a1a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d6391f4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d61cb243: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x5f20d61f6edc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f20d62b925f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62b925f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62b925f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62b925f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d62f618b: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5f20d63068d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d633456d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d624a7f7: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:36)",
"0x5f20d6164f56: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x5f20d6341eb6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5f20d6366fbd: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5f20d63b11e9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5f20d631b15b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5f20d61916eb: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5f20d61ec1fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f20d62ae622: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62ae622: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62ae622: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62ae622: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5f20d6309daa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d6305484: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d63228ea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d6291d67: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x5f20d6329b0a: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x5f20d63407a8: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5f20d61c5114: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x5f20d61be247: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:176:13)",
"0x5f20d63272cb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:64:9)",
"0x5f20d62775c3: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x5f20d628de73: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x5f20d615f7a8: winter_verifier::perform_verification (verifier/src/lib.rs:306:42)",
"0x5f20d61eba1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f20d62a37f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62a37f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62a37f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62a37f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d630934a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d63053a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d633513a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d625af12: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:640:42)",
"0x5f20d62bb4f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62bb4f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62bb4f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62bb4f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d63099da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d6306bc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d6333eba: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d625afcf: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:644:36)",
"0x5f20d6146106: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x5f20d6182ac9: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:290:18)",
"0x5f20d618188e: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:173:30)",
"0x5f20d61de3b5: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x5f20d62b305d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62b305d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62b305d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62b305d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d6309dda: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d6306de4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d63341ca: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d62937eb: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x5f20d6206611: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f20d6229288: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f20d62e7c0b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f20d61973c9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x5f20d61f59ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f20d62c1a55: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62c1a55: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62c1a55: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d624a877: winter_prover::Prover::generate_proof (prover/src/lib.rs:306:39)",
"0x5f20d626209a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x5f20d62a84ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62a84ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62a84ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62a84ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d630ad3d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d63055f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d633521d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d6170ff2: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x5f20d652048b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5f20d651fe51: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5f20d651954b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5f20d6513c41: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5f20d65142c7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5f20d652395b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5f20d61d1e24: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x5f20d6140126: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x5f20d655a108: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x5f20d655a4ca: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x5f20d655a4ca: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x5f20d655a26e: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x5f20d655a26e: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x5f20d655a35d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x5f20d6223b21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f20d6229498: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f20d62eb7ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f20d61dcdb7: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x5f20d6269bae: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x5f20d62bc9dd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62bc9dd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62bc9dd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62bc9dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d6309c7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d6306ff4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d633486a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d629367b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x5f20d61f520c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f20d62aee49: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62aee49: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62aee49: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62aee49: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d630993a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d63067f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d633401a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d615ec5f: winter_verifier::perform_verification (verifier/src/lib.rs:218:40)",
"0x5f20d616c3b7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x5f20d62b2b9d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62b2b9d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62b2b9d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62b2b9d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d63092aa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d6306394: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d6334b5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d62935c3: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x5f20d6322c5a: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x5f20d63966a7: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x5f20d6279889: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x5f20d625fefa: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x5f20d619a356: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x5f20d613d388: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x5f20d619731c: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x5f20d6326f8c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:40:30)",
"0x5f20d61ec49c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f20d62a8b4f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62a8b4f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62a8b4f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62a8b4f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d62f403e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5f20d6308035: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d63350ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d61bd74e: winterfell::main (winterfell/src/main.rs:65:26)",
"0x5f20d62bad1f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62bad1f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62bad1f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62bad1f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d630961d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d63054f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d633434d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d61547f7: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x5f20d61dee35: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x5f20d622e18f: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x5f20d61ce93d: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x5f20d62aa58d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62aa58d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62aa58d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62aa58d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d6309d7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d6305d34: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d633430a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d6293733: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x5f20d6293370: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x5f20d6228a21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f20d6228e08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f20d62eb42e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f20d6294f07: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x5f20d6392472: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x5f20d61ce99f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x5f20d61bde36: <winterfell::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (winterfell/src/main.rs:133:9)",
"0x5f20d6163330: winter_verifier::verify (verifier/src/lib.rs:98:38)",
"0x5f20d616c6df: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x5f20d61542ce: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x5f20d62a0997: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x5f20d61d92d3: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x5f20d61ceafb: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x5f20d63247a8: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:216:31)",
"0x5f20d6342d36: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5f20d6360bd0: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5f20d632ef66: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5f20d63368f6: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5f20d6192428: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x5f20d624a132: winter_prover::Prover::generate_proof (prover/src/lib.rs:262:22)",
"0x5f20d63224e2: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x5f20d615bc98: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x5f20d61eee6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f20d62a9b29: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62a9b29: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62a9b29: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62a9b29: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d6309caa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d6308084: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d633419a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d61d724b: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x5f20d6153440: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x5f20d633bdb6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5f20d613bb11: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5f20d6198dac: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x5f20d6265d4a: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x5f20d615bd9a: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x5f20d62ab4cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62ab4cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62ab4cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62ab4cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d630a0dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d63073d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d6333a6d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d6249cd2: winter_prover::Prover::generate_proof (prover/src/lib.rs:210:38)",
"0x5f20d61ded26: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x5f20d624b4d0: winter_prover::Prover::generate_proof (prover/src/lib.rs:452:35)",
"0x5f20d616c21f: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x5f20d61be21b: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:175:9)",
"0x5f20d614e24c: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x5f20d618158a: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:155:31)",
"0x5f20d62a7ecf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62a7ecf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62a7ecf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62a7ecf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d630ad5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d6307da7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d6334edd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d61bd0e6: winterfell::main (winterfell/src/main.rs:38:27)",
"0x5f20d61f130c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f20d62c0328: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62c0328: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62c0328: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5f20d62f8205: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5f20d62f8205: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5f20d62f8205: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5f20d624bea3: winter_prover::Prover::generate_proof (prover/src/lib.rs:510:39)",
"0x5f20d62c19b5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62c19b5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62c19b5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d624a909: winter_prover::Prover::generate_proof (prover/src/lib.rs:309:32)",
"0x5f20d6325f36: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:226:17)",
"0x5f20d634019e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5f20d6186e5c: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x5f20d6263a8b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5f20d6262e3d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5f20d63d678a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5f20d63b12a9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5f20d6319bc8: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5f20d6318195: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x5f20d6198eb4: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x5f20d628c1ce: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x5f20d629b55d: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:243:25)",
"0x5f20d61bdd94: winterfell::build_do_work_trace (winterfell/src/main.rs:91:5)",
"0x5f20d625d60b: winterfell::main::{{closure}} (winterfell/src/main.rs:30:23)",
"0x5f20d62b840d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62b840d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62b840d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62b840d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d6309e4a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d63076e4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d6333d1a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d628dba1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x5f20d61d1c0e: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x5f20d6196b8e: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x5f20d615e8e5: winter_verifier::perform_verification (verifier/src/lib.rs:185:13)",
"0x5f20d62ad3bf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62ad3bf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62ad3bf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62ad3bf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d630a6cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d6307e45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d633452d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d616c4ab: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x5f20d629b131: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x5f20d626f853: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x5f20d6322832: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x5f20d613f32d: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x5f20d6153eae: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x5f20d6157a1c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x5f20d6155d08: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x5f20d619407a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x5f20d63a478d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x5f20d62a4b59: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62a4b59: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62a4b59: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62a4b59: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d63096ba: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d63079a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d6333eea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d624be8c: winter_prover::Prover::generate_proof (prover/src/lib.rs:505:52)",
"0x5f20d61f4f6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f20d62ba22b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62ba22b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62ba22b: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62ba22b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5f20d630aaad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d6307955: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d622b16d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d626b618: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x5f20d620c8d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f20d6229318: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f20d62ea12d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f20d6153af2: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x5f20d637fac5: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5f20d61f00bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f20d62a16af: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62a16af: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62a16af: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62a16af: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d62f6705: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5f20d630750a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d6333b3d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d615a891: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x5f20d629c9a5: winter_prover::trace::Trace::validate (src/trace/mod.rs:179:13)",
"0x5f20d620d7a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f20d6229108: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f20d62e9dae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f20d61601eb: winter_verifier::perform_verification (verifier/src/lib.rs:184:9)",
"0x5f20d62b1a3f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62b1a3f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62b1a3f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62b1a3f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d630ab1d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d6305bb7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d63339bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d6171df7: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x5f20d651604e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5f20d65179ec: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5f20d651655a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5f20d62bbd2f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62bbd2f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62bbd2f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62bbd2f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d630956d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d6306125: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d633498d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d63a3d29: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x5f20d6286bbd: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x5f20d62bc36f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d62bc36f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d62bc36f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d62bc36f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f20d630989d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f20d6307895: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f20d6334bdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f20d629bfe2: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:140:32)",
"0x5f20d61d3d52: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x5f20d610bd82: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5f20d610bd82: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f20d610bd82: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f20d610bd82: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f20d610bd82: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f20d610bd82: std::io::buffered::bufwriter::BufWriter<W>::with_capacity (io/buffered/bufwriter.rs:115:33)",
"0x5f20d610bd82: std::io::buffered::linewriter::LineWriter<W>::with_capacity (io/buffered/linewriter.rs:109:29)",
"0x5f20d610bd82: std::io::buffered::linewriter::LineWriter<W>::new (io/buffered/linewriter.rs:89:9)",
"0x5f20d610bd82: std::io::stdio::stdout::{{closure}} (src/io/stdio.rs:618:62)",
"0x5f20d610bd82: std::sync::once_lock::OnceLock<T>::get_or_init::{{closure}} (src/sync/once_lock.rs:250:50)",
"0x5f20d610bd82: std::sync::once_lock::OnceLock<T>::initialize::{{closure}} (src/sync/once_lock.rs:376:19)",
"0x5f20d610bd82: std::sync::once::Once::call_once_force::{{closure}} (src/sync/once.rs:208:40)",
"0x5f20d610bd82: std::sys_common::once::futex::Once::call (sys_common/once/futex.rs:124:21)",
"0x5f20d610aeca: std::sync::once::Once::call_once_force (src/sync/once.rs:208:9)",
"0x5f20d610aeca: std::sync::once_lock::OnceLock<T>::initialize (src/sync/once_lock.rs:375:9)",
"0x5f20d65751c5: std::sync::once_lock::OnceLock<T>::get_or_try_init (src/sync/once_lock.rs:298:9)",
"0x5f20d65751c5: std::sync::once_lock::OnceLock<T>::get_or_init (src/sync/once_lock.rs:250:15)",
"0x5f20d65751c5: std::io::stdio::stdout (src/io/stdio.rs:618:14)",
"0x5f20d65751c5: std::io::stdio::print_to (src/io/stdio.rs:1020:21)",
"0x5f20d65751c5: std::io::stdio::_print (src/io/stdio.rs:1097:5)",
"0x5f20d61bd03a: winterfell::main (winterfell/src/main.rs:36:5)",
"0x5f20d61e22b9: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x5f20d6294e5f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)"
]
}