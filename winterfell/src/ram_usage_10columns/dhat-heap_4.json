{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell",
"pid": 25460,
"tg": 2185237,
"te": 3013505,
"pps": [
{
"tb": 48,
"tbk": 2,
"tl": 67,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
16,
17,
18
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 3754,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
25,
26,
27
]
},
{
"tb": 448,
"tbk": 3,
"tl": 157,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
30,
31,
32,
33,
34
]
},
{
"tb": 512,
"tbk": 1,
"tl": 22,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
35,
36,
37,
38,
39,
40,
41,
42,
43
]
},
{
"tb": 32,
"tbk": 1,
"tl": 49,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
44,
45,
46,
47,
48,
49,
50,
51,
52
]
},
{
"tb": 24,
"tbk": 1,
"tl": 126726,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
53,
54,
55,
56,
57,
58,
59,
60,
61
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2648,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
62,
63,
64,
65,
66,
67,
68
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
69,
70,
71,
72,
73,
74,
75,
76,
77,
78
]
},
{
"tb": 72,
"tbk": 1,
"tl": 5059,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
79,
80,
68,
81
]
},
{
"tb": 128,
"tbk": 1,
"tl": 6131,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
82,
83,
84,
78
]
},
{
"tb": 32,
"tbk": 1,
"tl": 30,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
82,
85,
86,
78
]
},
{
"tb": 512,
"tbk": 1,
"tl": 29,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
87,
88,
43,
89
]
},
{
"tb": 512,
"tbk": 1,
"tl": 9,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
90,
91,
92,
93,
94,
95,
96,
97
]
},
{
"tb": 2880,
"tbk": 12,
"tl": 1736,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
30,
31,
32,
98,
99
]
},
{
"tb": 48,
"tbk": 1,
"tl": 74104,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
100,
101,
102,
103,
104,
105,
106
]
},
{
"tb": 83886080,
"tbk": 1,
"tl": 237950,
"mb": 83886080,
"mbk": 1,
"gb": 83886080,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
35,
36,
37,
38,
39,
40,
107,
108,
109
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 1038978,
"mb": 1048576,
"mbk": 1,
"gb": 1048576,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
110,
111,
112,
113,
114,
115,
116,
117
]
},
{
"tb": 24,
"tbk": 1,
"tl": 810023,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
118,
119,
120,
121,
122,
68,
81
]
},
{
"tb": 384,
"tbk": 1,
"tl": 507500,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
123,
124,
125,
126,
127,
128,
129,
130,
131
]
},
{
"tb": 240,
"tbk": 2,
"tl": 519271,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
132,
133,
68,
81
]
},
{
"tb": 16,
"tbk": 1,
"tl": 45,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
134,
135,
136,
137,
138,
139,
140,
141,
68,
81
]
},
{
"tb": 2097152,
"tbk": 8192,
"tl": 10735,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
35,
36,
37,
38,
39,
40,
142,
143,
144
]
},
{
"tb": 4992,
"tbk": 26,
"tl": 9040,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
146,
147,
148,
149,
150,
151
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1917,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
152,
153,
154,
155,
156,
157,
158,
159,
160
]
},
{
"tb": 216,
"tbk": 1,
"tl": 7285,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
161,
162,
163,
164,
165,
166,
167,
168,
169
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1081,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
35,
36,
37,
170,
171,
172,
173,
174,
175
]
},
{
"tb": 160,
"tbk": 1,
"tl": 4887,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
176,
177,
178,
179,
180,
181,
182,
183,
184
]
},
{
"tb": 81920,
"tbk": 1,
"tl": 3170,
"mb": 81920,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
82,
185,
186,
187
]
},
{
"tb": 712,
"tbk": 3,
"tl": 2616,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
188,
189,
190,
191,
192,
193,
194,
195,
196,
174
]
},
{
"tb": 3160,
"tbk": 24,
"tl": 399,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
188,
189,
190,
191,
197,
198,
199,
200,
201,
202
]
},
{
"tb": 5152,
"tbk": 3,
"tl": 286222,
"mb": 5152,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
203,
204,
205,
206,
207,
208,
209,
210
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 2622,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
110,
211,
212,
213,
214,
215,
216,
217,
218
]
},
{
"tb": 3840,
"tbk": 1,
"tl": 2172093,
"mb": 3840,
"mbk": 1,
"gb": 3840,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
118,
219,
220,
221,
222,
223,
224,
225,
226
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2321,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
188,
227,
228,
229,
230,
231,
232,
233,
234
]
},
{
"tb": 216,
"tbk": 1,
"tl": 2983037,
"mb": 216,
"mbk": 1,
"gb": 216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
161,
235,
236,
237,
238,
239,
240,
241,
242
]
},
{
"tb": 480,
"tbk": 4,
"tl": 4635,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
243,
244,
245,
246,
247,
248
]
},
{
"tb": 11392,
"tbk": 3,
"tl": 380,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
249,
250,
251,
252,
253,
254,
255
]
},
{
"tb": 72,
"tbk": 3,
"tl": 58,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
256,
257,
258,
259,
260,
261,
262,
263,
264
]
},
{
"tb": 10485760,
"tbk": 160,
"tl": 480888264,
"mb": 10485760,
"mbk": 160,
"gb": 10485760,
"gbk": 160,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
265,
266,
267
]
},
{
"tb": 512,
"tbk": 1,
"tl": 11827,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
268,
269,
270,
271,
68
]
},
{
"tb": 8,
"tbk": 1,
"tl": 800,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
188,
272,
273,
274,
275,
276,
277,
278,
279
]
},
{
"tb": 56,
"tbk": 1,
"tl": 2371,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
280,
281,
78,
89
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 2948,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
110,
282,
283,
284,
285,
286,
287,
288,
289
]
},
{
"tb": 288,
"tbk": 1,
"tl": 7226,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
290,
291,
292,
293,
294
]
},
{
"tb": 96,
"tbk": 1,
"tl": 29,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
295,
296,
297,
298,
299,
68
]
},
{
"tb": 256,
"tbk": 1,
"tl": 74100,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
100,
101,
102,
103,
300,
105,
106
]
},
{
"tb": 1920,
"tbk": 10,
"tl": 3376,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
146,
147,
148,
301,
302,
303
]
},
{
"tb": 128,
"tbk": 1,
"tl": 9,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
35,
36,
37,
38,
39,
40,
304,
305,
68
]
},
{
"tb": 480,
"tbk": 4,
"tl": 167,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
243,
244,
245,
246,
306,
307
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1757,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
118,
308,
309,
310,
311,
312,
313,
314,
315,
316
]
},
{
"tb": 2320,
"tbk": 10,
"tl": 1054,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
188,
317,
318,
319,
320,
321,
322,
323,
324
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1575,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
325,
326,
327,
328,
329,
307,
316,
80
]
},
{
"tb": 24,
"tbk": 1,
"tl": 810032,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
330,
331,
332,
333,
334,
68,
81
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1805,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
110,
335,
336,
337,
338,
339,
340,
67
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 820774,
"mb": 1048576,
"mbk": 1,
"gb": 1048576,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
110,
111,
112,
113,
114,
341,
342,
343
]
},
{
"tb": 10485760,
"tbk": 160,
"tl": 122641032,
"mb": 10485760,
"mbk": 160,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
35,
36,
37,
38,
39,
40,
344,
311,
312,
313,
345
]
},
{
"tb": 8128,
"tbk": 7,
"tl": 4671,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
30,
31,
32,
346,
347
]
},
{
"tb": 48,
"tbk": 2,
"tl": 1038548,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
348,
349,
350,
351,
352,
353,
354,
355,
356,
357
]
},
{
"tb": 131072,
"tbk": 2,
"tl": 439986,
"mb": 131072,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
35,
36,
37,
170,
171,
172,
358,
359,
360
]
},
{
"tb": 224,
"tbk": 1,
"tl": 5685,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
361,
362,
363,
364,
365
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1086,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
188,
189,
190,
191,
192,
193,
194,
366,
174,
175
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 405099,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
25,
26,
367
]
},
{
"tb": 256,
"tbk": 1,
"tl": 510,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
188,
368,
369,
370,
371,
201,
372,
373
]
},
{
"tb": 81920,
"tbk": 1,
"tl": 4446,
"mb": 81920,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
62,
63,
64,
374,
375,
316,
80
]
},
{
"tb": 1088,
"tbk": 2,
"tl": 28,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
376,
377,
378,
379,
380,
381
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2303,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
188,
382,
383,
384,
385,
386,
387,
388,
389
]
},
{
"tb": 5120,
"tbk": 1,
"tl": 4945,
"mb": 5120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
35,
36,
37,
38,
39,
40,
390,
391,
78
]
},
{
"tb": 11392,
"tbk": 3,
"tl": 442,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
392,
393,
394
]
},
{
"tb": 11392,
"tbk": 3,
"tl": 14703,
"mb": 11392,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
395,
396,
365,
78
]
},
{
"tb": 504,
"tbk": 2,
"tl": 1794083,
"mb": 480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
397,
398,
399,
400,
401,
402,
403,
404,
405
]
},
{
"tb": 2000,
"tbk": 10,
"tl": 170,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
406,
407,
408,
409,
410,
411
]
},
{
"tb": 384,
"tbk": 2,
"tl": 68,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
412,
413,
414,
415,
416,
417,
418,
419,
420
]
},
{
"tb": 262176,
"tbk": 3,
"tl": 5049,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
421,
422,
423
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 178629,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
110,
111,
112,
113,
114,
341,
342,
424
]
},
{
"tb": 598016,
"tbk": 3,
"tl": 18155,
"mb": 598016,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
425,
426,
294
]
},
{
"tb": 96,
"tbk": 1,
"tl": 10,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
427,
428,
429,
430,
431
]
},
{
"tb": 96,
"tbk": 1,
"tl": 10,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
432,
433,
434,
435,
436,
437,
438,
439,
440
]
},
{
"tb": 247187,
"tbk": 7,
"tl": 7370,
"mb": 164294,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
441,
442,
443,
444,
445
]
},
{
"tb": 32,
"tbk": 1,
"tl": 7209,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
110,
111,
112,
113,
446,
447,
448,
78
]
},
{
"tb": 456,
"tbk": 2,
"tl": 1034739,
"mb": 456,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
118,
449,
450,
451,
452,
453,
454,
455,
456
]
},
{
"tb": 2848,
"tbk": 3,
"tl": 1755,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
110,
335,
336,
337,
338,
339,
457,
458
]
},
{
"tb": 48,
"tbk": 1,
"tl": 220103,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
118,
459,
460,
461,
462,
463,
464,
465,
466
]
},
{
"tb": 24,
"tbk": 1,
"tl": 810028,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
467,
468,
469,
470,
471,
68,
81
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2983232,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
472,
473,
474,
475,
476,
477,
478,
479
]
},
{
"tb": 80,
"tbk": 1,
"tl": 3006010,
"mb": 80,
"mbk": 1,
"gb": 80,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
480,
481,
482,
483,
484,
485,
486,
487,
488
]
},
{
"tb": 74752,
"tbk": 3,
"tl": 8353,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
489,
490,
491
]
},
{
"tb": 8,
"tbk": 1,
"tl": 16,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
188,
492,
493,
494,
495,
496,
497,
498,
499
]
},
{
"tb": 48,
"tbk": 1,
"tl": 768603,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
500,
501,
502,
503,
504,
505,
506,
507,
508
]
},
{
"tb": 32,
"tbk": 1,
"tl": 396,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
509,
431,
68,
81
]
},
{
"tb": 896,
"tbk": 6,
"tl": 7309,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
30,
31,
32,
510,
511
]
},
{
"tb": 648,
"tbk": 3,
"tl": 624,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
188,
368,
369,
370,
371,
201,
202,
512
]
},
{
"tb": 192,
"tbk": 3,
"tl": 8142,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
25,
26,
513
]
},
{
"tb": 81920,
"tbk": 1,
"tl": 4195,
"mb": 81920,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
82,
185,
514,
187
]
},
{
"tb": 10485760,
"tbk": 160,
"tl": 330697950,
"mb": 10485760,
"mbk": 160,
"gb": 10485760,
"gbk": 160,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
35,
36,
37,
38,
39,
40,
515,
516,
517
]
},
{
"tb": 32,
"tbk": 2,
"tl": 507738,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
518,
519,
520,
521,
522,
523,
524,
525
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 433189,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
489,
526,
527
]
},
{
"tb": 11392,
"tbk": 3,
"tl": 1711,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
528,
529,
530,
531,
532,
533,
534,
535,
536
]
},
{
"tb": 256,
"tbk": 1,
"tl": 508,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
188,
368,
369,
370,
371,
201,
537,
538
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
539,
540,
18,
89
]
},
{
"tb": 80,
"tbk": 1,
"tl": 507323,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
541,
542,
543,
544,
545,
546,
547,
548,
549
]
},
{
"tb": 32,
"tbk": 1,
"tl": 264995,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
243,
244,
245,
246,
550,
68
]
},
{
"tb": 96,
"tbk": 1,
"tl": 76814,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
427,
428,
429,
551,
552
]
},
{
"tb": 24,
"tbk": 1,
"tl": 2172218,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
553,
554,
555,
556,
557,
558,
559,
560,
561
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 2982890,
"mb": 32768,
"mbk": 1,
"gb": 32768,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
25,
562,
563
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 15856,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
25,
26,
564
]
},
{
"tb": 72,
"tbk": 1,
"tl": 814413,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
565,
566,
567,
568,
569,
570,
571,
572,
573
]
},
{
"tb": 512,
"tbk": 4,
"tl": 1014673,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
574,
575,
576,
577,
578
]
},
{
"tb": 81920,
"tbk": 1,
"tl": 4371,
"mb": 81920,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
62,
63,
64,
579,
375,
316,
80
]
},
{
"tb": 96,
"tbk": 1,
"tl": 5679,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
427,
428,
429,
580,
365
]
},
{
"tb": 256,
"tbk": 1,
"tl": 109,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
35,
36,
37,
170,
171,
172,
581,
582,
583
]
},
{
"tb": 2560,
"tbk": 1,
"tl": 2124,
"mb": 2560,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
100,
101,
102,
103,
584,
585,
586
]
},
{
"tb": 24,
"tbk": 1,
"tl": 119,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
587,
588,
582,
583,
589,
43
]
},
{
"tb": 256,
"tbk": 1,
"tl": 100,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
249,
250,
251,
252,
253,
254,
590
]
},
{
"tb": 64,
"tbk": 1,
"tl": 4651,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
591,
592,
43,
89
]
},
{
"tb": 2560,
"tbk": 1,
"tl": 21968,
"mb": 2560,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
100,
101,
102,
103,
593,
594,
595
]
},
{
"tb": 53840,
"tbk": 929,
"tl": 145941,
"mb": 12736,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
441,
596,
597,
598,
599,
600,
601
]
},
{
"tb": 576,
"tbk": 2,
"tl": 44,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
602,
603,
604,
605,
606,
607,
608,
609,
610
]
},
{
"tb": 2560,
"tbk": 14,
"tl": 391,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
188,
189,
190,
191,
197,
198,
199,
200,
201,
372
]
},
{
"tb": 4968,
"tbk": 9,
"tl": 2570,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
611,
612,
613,
614,
615,
616
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2216,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
35,
36,
37,
170,
171,
172,
617,
78,
89
]
},
{
"tb": 192,
"tbk": 1,
"tl": 4900,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
618,
619,
620,
621,
43
]
},
{
"tb": 512,
"tbk": 1,
"tl": 15,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
392,
622,
88
]
},
{
"tb": 5120,
"tbk": 1,
"tl": 4892,
"mb": 5120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
35,
36,
37,
38,
39,
40,
623,
624,
625
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2167942,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
626,
627,
628,
629,
630,
631,
632,
633,
634
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2287,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
188,
635,
636,
637,
638,
639,
640,
641,
642
]
},
{
"tb": 7728,
"tbk": 14,
"tl": 2539,
"mb": 2760,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
611,
612,
613,
643,
644,
645
]
},
{
"tb": 32,
"tbk": 1,
"tl": 67,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
646,
647,
648,
649,
650,
651
]
},
{
"tb": 24,
"tbk": 1,
"tl": 507601,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
587,
588,
582,
652,
299,
68
]
},
{
"tb": 96,
"tbk": 1,
"tl": 1751,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
653,
654,
655,
656,
316
]
},
{
"tb": 2280,
"tbk": 5,
"tl": 1635,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
657,
658,
659,
660,
661,
662
]
},
{
"tb": 60648,
"tbk": 133,
"tl": 28542,
"mb": 18696,
"mbk": 41,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
657,
658,
659,
663,
664,
665
]
},
{
"tb": 48,
"tbk": 1,
"tl": 458,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
666,
431,
68,
81
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 3253,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
243,
667,
668,
669,
670,
671
]
},
{
"tb": 96,
"tbk": 1,
"tl": 10,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
427,
428,
429,
672,
78
]
},
{
"tb": 2490368,
"tbk": 19,
"tl": 9844717,
"mb": 2490368,
"mbk": 19,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
673,
674,
675
]
},
{
"tb": 1440,
"tbk": 12,
"tl": 1972,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
676,
677,
678,
679,
680
]
},
{
"tb": 262176,
"tbk": 3,
"tl": 5029,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
392,
681,
422
]
},
{
"tb": 2560,
"tbk": 1,
"tl": 2128,
"mb": 2560,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
100,
101,
102,
103,
682,
585,
586
]
},
{
"tb": 3840,
"tbk": 1,
"tl": 3005992,
"mb": 3840,
"mbk": 1,
"gb": 3840,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
118,
683,
684,
685,
686,
687,
688,
689,
690
]
},
{
"tb": 448,
"tbk": 3,
"tl": 4910,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
30,
31,
32,
33,
691
]
},
{
"tb": 48,
"tbk": 2,
"tl": 1014976,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
348,
349,
350,
351,
352,
353,
354,
355,
692,
693
]
},
{
"tb": 83886080,
"tbk": 20,
"tl": 18342727,
"mb": 83886080,
"mbk": 20,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
528,
694,
695,
696,
697,
698,
699,
700
]
},
{
"tb": 149504,
"tbk": 3,
"tl": 16869,
"mb": 149504,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
110,
111,
112,
113,
114,
341,
342,
701
]
},
{
"tb": 2848,
"tbk": 3,
"tl": 12939,
"mb": 2848,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
110,
335,
336,
337,
338,
702,
396,
365
]
},
{
"tb": 1424,
"tbk": 3,
"tl": 1639,
"mb": 1008,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
703,
704,
705,
706,
707,
708,
709,
710
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2985465,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
711,
712,
713,
714,
715,
716,
717,
68
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2295,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
188,
718,
719,
720,
721,
722,
723,
724,
725
]
},
{
"tb": 11392,
"tbk": 3,
"tl": 1170,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
249,
250,
251,
252,
253,
254,
726
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
727,
728,
729,
730,
68,
81
]
},
{
"tb": 224,
"tbk": 3,
"tl": 519270,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
243,
244,
245,
246,
731,
732
]
},
{
"tb": 256,
"tbk": 1,
"tl": 507589,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
35,
36,
37,
170,
171,
172,
581,
582,
652
]
},
{
"tb": 96,
"tbk": 1,
"tl": 31,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
427,
428,
429,
733,
42
]
},
{
"tb": 24,
"tbk": 1,
"tl": 810018,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
553,
734,
735,
736,
737,
68,
81
]
},
{
"tb": 24,
"tbk": 1,
"tl": 7,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
118,
308,
309,
310,
311,
312,
313,
314,
738,
717
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1955422,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
626,
739,
740,
741,
742,
743,
744,
745,
746
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2982918,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
747,
748,
749,
750,
751,
752,
753,
754,
755
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2593,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
325,
326,
327,
328,
756,
757,
187,
281
]
},
{
"tb": 11392,
"tbk": 89,
"tl": 77,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
758,
759,
760,
761,
762,
763,
764,
765
]
},
{
"tb": 512,
"tbk": 1,
"tl": 7278,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
766,
767,
768,
769,
770,
771,
772,
773
]
},
{
"tb": 11392,
"tbk": 89,
"tl": 119,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
82,
774,
396,
365
]
},
{
"tb": 1440,
"tbk": 12,
"tl": 4235,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
676,
677,
678,
679,
775
]
},
{
"tb": 65920,
"tbk": 280,
"tl": 131971,
"mb": 14080,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
110,
776,
777,
778,
779,
780,
781,
782,
783
]
},
{
"tb": 64,
"tbk": 1,
"tl": 4905,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
30,
31,
32,
784,
691
]
},
{
"tb": 2400,
"tbk": 20,
"tl": 1485,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
243,
244,
245,
246,
785,
201
]
},
{
"tb": 512,
"tbk": 1,
"tl": 17,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
786,
88,
43,
89
]
},
{
"tb": 32,
"tbk": 1,
"tl": 134,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
35,
36,
37,
38,
39,
40,
787,
788,
789
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 37627,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
790,
791,
792
]
},
{
"tb": 96,
"tbk": 1,
"tl": 11,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
295,
729,
730,
68,
81
]
},
{
"tb": 1440,
"tbk": 12,
"tl": 257,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
243,
244,
245,
246,
306,
457
]
},
{
"tb": 72,
"tbk": 3,
"tl": 35394,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
348,
349,
350,
351,
352,
353,
354,
355,
793,
794,
795,
796
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 184964,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
110,
111,
112,
113,
114,
797,
798,
799
]
},
{
"tb": 1944,
"tbk": 3,
"tl": 1762,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
325,
326,
327,
328,
329,
457,
458,
305
]
},
{
"tb": 128,
"tbk": 1,
"tl": 7197,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
110,
111,
112,
113,
446,
800,
448,
78
]
},
{
"tb": 480,
"tbk": 4,
"tl": 269,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
243,
244,
245,
246,
306,
340
]
},
{
"tb": 144,
"tbk": 1,
"tl": 8410,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
801,
802,
803,
804,
805,
806,
305,
68,
81
]
},
{
"tb": 9984,
"tbk": 77,
"tl": 302672,
"mb": 9984,
"mbk": 77,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
110,
111,
112,
113,
446,
807,
808,
396
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
16,
809,
810
]
},
{
"tb": 83886080,
"tbk": 1,
"tl": 1078727,
"mb": 83886080,
"mbk": 1,
"gb": 83886080,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
528,
694,
695,
696,
697,
811,
812,
813
]
},
{
"tb": 24,
"tbk": 1,
"tl": 519288,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
348,
349,
350,
351,
352,
353,
354,
355,
814,
133
]
},
{
"tb": 512,
"tbk": 1,
"tl": 47,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
815,
816,
817,
818,
819,
820,
821,
822
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 3660,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
82,
185,
823,
824
]
},
{
"tb": 2880,
"tbk": 10,
"tl": 3285,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
825,
826,
827,
828,
829,
830
]
},
{
"tb": 48,
"tbk": 2,
"tl": 102,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
831,
3,
4,
5,
6,
7
]
},
{
"tb": 24,
"tbk": 1,
"tl": 131,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
118,
832,
833,
834,
835,
836,
837,
838,
839
]
},
{
"tb": 32,
"tbk": 1,
"tl": 265000,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
243,
244,
245,
246,
840,
68
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 15893,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
35,
36,
37,
170,
171,
172,
841,
842,
68
]
},
{
"tb": 2560,
"tbk": 14,
"tl": 53,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
188,
189,
190,
191,
197,
198,
199,
843,
307,
316
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2947,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
325,
326,
327,
328,
756,
844,
824,
845
]
},
{
"tb": 2560,
"tbk": 14,
"tl": 399,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
188,
189,
190,
191,
197,
198,
199,
200,
201,
537
]
},
{
"tb": 64,
"tbk": 1,
"tl": 136,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
30,
31,
32,
784,
34
]
},
{
"tb": 128,
"tbk": 1,
"tl": 2697,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
846,
847,
848,
849,
850,
851,
852,
853
]
},
{
"tb": 512,
"tbk": 1,
"tl": 3390,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
854,
855,
856,
857,
858,
859,
860,
861
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2134,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
862,
863,
864,
865,
866,
867,
868,
869,
870
]
},
{
"tb": 480,
"tbk": 4,
"tl": 5843,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
243,
244,
245,
246,
247,
871
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 40638,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
35,
36,
37,
170,
171,
172,
872,
67,
68
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 1561,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
243,
667,
668,
669,
670,
873
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2990602,
"mb": 1024,
"mbk": 1,
"gb": 1024,
"gbk": 1,
"eb": 1024,
"ebk": 1,
"fs": [
874,
875,
876,
877,
878,
879,
880,
881,
882,
883,
884,
885,
886,
887,
888,
889,
890,
891,
892,
893,
894
]
},
{
"tb": 512,
"tbk": 1,
"tl": 114,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
766,
895,
896,
897,
898,
899,
900,
901,
582,
583
]
},
{
"tb": 256,
"tbk": 1,
"tl": 10,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
188,
189,
190,
191,
192,
193,
194,
902,
305,
68
]
},
{
"tb": 16320,
"tbk": 8,
"tl": 25,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
30,
31,
32,
903,
904
]
},
{
"tb": 512,
"tbk": 1,
"tl": 604,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
905,
42,
43,
89
]
},
{
"tb": 432,
"tbk": 3,
"tl": 1156,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
100,
101,
102,
103,
906,
394,
174
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
539,
540,
810,
717,
68,
81
]
},
{
"tb": 11392,
"tbk": 3,
"tl": 1278,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
528,
694,
695,
696,
907,
458,
305,
68
]
},
{
"tb": 96,
"tbk": 1,
"tl": 20,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
295,
296,
908,
589,
43,
89
]
},
{
"tb": 16,
"tbk": 1,
"tl": 11800,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
35,
36,
37,
38,
39,
40,
909,
793,
794,
795,
796
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
16,
809,
18
]
},
{
"tb": 72,
"tbk": 1,
"tl": 11857,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
118,
308,
309,
310,
311,
312,
313,
910,
911,
68
]
},
{
"tb": 16,
"tbk": 1,
"tl": 519285,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
35,
36,
37,
38,
39,
40,
909,
814,
133
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1269,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
427,
428,
429,
912,
67
]
},
{
"tb": 16,
"tbk": 1,
"tl": 5,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
727,
913,
729,
730,
68,
81
]
},
{
"tb": 81920,
"tbk": 32,
"tl": 57907,
"mb": 81920,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
35,
36,
37,
170,
171,
172,
914,
915,
916
]
},
{
"tb": 16,
"tbk": 1,
"tl": 99,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
727,
913,
296,
297,
298,
299
]
},
{
"tb": 96,
"tbk": 1,
"tl": 4661,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
427,
428,
429,
551,
347
]
},
{
"tb": 1152,
"tbk": 4,
"tl": 136,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
917,
918,
919,
920,
921
]
},
{
"tb": 64,
"tbk": 1,
"tl": 4656,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
30,
31,
32,
922,
347
]
},
{
"tb": 96,
"tbk": 1,
"tl": 2985544,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
923,
924,
925,
926,
927,
928,
929,
930,
931
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 263423,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
249,
250,
251,
252,
253,
254,
932
]
},
{
"tb": 320,
"tbk": 2,
"tl": 1014968,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
933,
934,
935,
936,
693
]
},
{
"tb": 128,
"tbk": 1,
"tl": 3951,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
937,
938,
939,
940,
187
]
},
{
"tb": 74752,
"tbk": 3,
"tl": 9500,
"mb": 73728,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
941,
942,
294
]
},
{
"tb": 144,
"tbk": 1,
"tl": 11810,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
432,
943,
944,
945,
794,
795,
796,
946,
911,
68
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 63384,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
249,
250,
251,
252,
253,
254,
947
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2985530,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
28,
69,
70,
71,
72,
73,
74,
75,
76,
948,
949
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 30,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
35,
36,
37,
38,
39,
40,
390,
950,
68
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 1717259,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
951,
952,
953
]
},
{
"tb": 384,
"tbk": 1,
"tl": 11795,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
118,
308,
309,
310,
311,
312,
313,
954,
911,
68
]
},
{
"tb": 96,
"tbk": 1,
"tl": 4920,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
955,
956,
957,
958,
43
]
},
{
"tb": 16,
"tbk": 1,
"tl": 97,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
727,
728,
296,
297,
298,
299
]
},
{
"tb": 512,
"tbk": 1,
"tl": 507596,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
766,
895,
896,
897,
898,
899,
900,
901,
582,
652
]
},
{
"tb": 1968,
"tbk": 2,
"tl": 53,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
959,
960,
961,
962,
963,
964
]
},
{
"tb": 2560,
"tbk": 14,
"tl": 77,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
188,
189,
190,
191,
197,
198,
199,
843,
340,
67
]
},
{
"tb": 64,
"tbk": 1,
"tl": 76809,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
30,
31,
32,
922,
552
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 13412,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
35,
36,
37,
38,
39,
40,
390,
965,
431
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1882,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
118,
966,
967,
968,
969,
970,
971,
972,
973
]
},
{
"tb": 32,
"tbk": 1,
"tl": 78,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
44,
974,
975,
976,
977,
978,
979,
980,
981
]
},
{
"tb": 32,
"tbk": 1,
"tl": 123,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
982,
983,
984,
985,
986,
987
]
},
{
"tb": 96,
"tbk": 1,
"tl": 265007,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
427,
428,
429,
988,
68
]
},
{
"tb": 8128,
"tbk": 7,
"tl": 76825,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
30,
31,
32,
346,
552
]
},
{
"tb": 28210,
"tbk": 26,
"tl": 19930,
"mb": 14144,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
243,
667,
668,
669,
670,
989
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 276476,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
249,
250,
251,
252,
253,
254,
990
]
},
{
"tb": 2097152,
"tbk": 16,
"tl": 404723,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
991,
992,
993,
994,
995,
996,
997,
998
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 212491,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
25,
26,
999
]
},
{
"tb": 512,
"tbk": 1,
"tl": 23,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
25,
26,
1000
]
},
{
"tb": 128,
"tbk": 1,
"tl": 405111,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
188,
368,
369,
370,
1001,
1002,
133,
68
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3006104,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
1003,
1004,
1005,
1006,
1007,
1008,
1009,
1010
]
},
{
"tb": 83886080,
"tbk": 32768,
"tl": 92471,
"mb": 2560,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
35,
36,
37,
170,
171,
172,
1011,
1012,
116
]
},
{
"tb": 5120,
"tbk": 2,
"tl": 99604,
"mb": 2560,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
249,
250,
251,
252,
253,
254,
1013
]
},
{
"tb": 3840,
"tbk": 1,
"tl": 768595,
"mb": 3840,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
118,
308,
309,
310,
311,
312,
313,
345,
1014,
1015
]
},
{
"tb": 2097152,
"tbk": 16,
"tl": 186737,
"mb": 2097152,
"mbk": 16,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
35,
36,
37,
38,
39,
40,
344,
311,
312,
313,
954
]
},
{
"tb": 512,
"tbk": 1,
"tl": 16,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
392,
1016,
42
]
},
{
"tb": 40,
"tbk": 1,
"tl": 1955451,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
1017,
1018,
1019,
1020,
1021,
1022,
1023,
1024,
1025
]
},
{
"tb": 96,
"tbk": 1,
"tl": 4297,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
243,
1026,
1027,
1028,
1029,
375
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2312,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
188,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037
]
},
{
"tb": 81952,
"tbk": 33,
"tl": 54095,
"mb": 81920,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
35,
36,
37,
38,
39,
40,
344,
311,
312,
313,
314
]
},
{
"tb": 2496,
"tbk": 24,
"tl": 356,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
1038,
1039,
1040,
1041,
1042,
1043
]
},
{
"tb": 9280,
"tbk": 32,
"tl": 90804,
"mb": 9280,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
110,
111,
112,
113,
446,
807,
844,
824
]
},
{
"tb": 160,
"tbk": 1,
"tl": 4937,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
1044,
1045,
1046,
1047,
78
]
},
{
"tb": 256,
"tbk": 1,
"tl": 137,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
35,
36,
37,
38,
39,
40,
1048,
788,
789
]
},
{
"tb": 512,
"tbk": 4,
"tl": 1102,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
1049,
1050,
1051,
1052,
457
]
},
{
"tb": 128,
"tbk": 1,
"tl": 11539,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
188,
189,
190,
191,
197,
198,
199,
1053,
911,
68
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 2982785,
"mb": 131072,
"mbk": 1,
"gb": 131072,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
25,
1054,
1055
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 63362,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
249,
250,
251,
252,
253,
254,
1056
]
},
{
"tb": 9280,
"tbk": 32,
"tl": 79482,
"mb": 9280,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
110,
111,
112,
113,
446,
807,
757,
187
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 79960,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
951,
952,
1057
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1567,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
110,
335,
336,
337,
338,
339,
307,
316
]
},
{
"tb": 5120,
"tbk": 2,
"tl": 99596,
"mb": 2560,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
249,
250,
251,
252,
253,
254,
1058
]
},
{
"tb": 3160,
"tbk": 24,
"tl": 53,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
188,
189,
190,
191,
197,
198,
199,
843,
457,
458
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1281,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
243,
244,
245,
246,
1059,
375
]
},
{
"tb": 128,
"tbk": 1,
"tl": 5861,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
35,
36,
37,
170,
171,
172,
1060,
1061,
1062
]
},
{
"tb": 91136,
"tbk": 3,
"tl": 1183,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
249,
250,
251,
252,
253,
254,
1063
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
16,
17,
810
]
},
{
"tb": 256,
"tbk": 1,
"tl": 25481,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
100,
101,
102,
103,
1064,
730,
68
]
},
{
"tb": 48,
"tbk": 1,
"tl": 126716,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1065,
1066,
1067,
1068,
1069,
1070
]
},
{
"tb": 1040,
"tbk": 10,
"tl": 254,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
1038,
1039,
1040,
1071,
1072,
1073
]
},
{
"tb": 512,
"tbk": 1,
"tl": 600,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
1074,
42,
43,
89
]
},
{
"tb": 512,
"tbk": 1,
"tl": 2983025,
"mb": 512,
"mbk": 1,
"gb": 512,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
766,
767,
768,
769,
770,
771,
1075,
1076
]
},
{
"tb": 17399,
"tbk": 11,
"tl": 112299,
"mb": 8704,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
441,
442,
443,
444,
1077
]
},
{
"tb": 16,
"tbk": 1,
"tl": 109655,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
134,
1078,
1079,
1080,
1081,
1082,
1083,
1084,
1085
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
982,
1086,
89
]
},
{
"tb": 5120,
"tbk": 1,
"tl": 40,
"mb": 5120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
82,
1087,
86,
78
]
},
{
"tb": 393216,
"tbk": 3,
"tl": 35512,
"mb": 393216,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
35,
36,
37,
38,
39,
40,
344,
311,
312,
313,
910
]
},
{
"tb": 16,
"tbk": 1,
"tl": 75,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
727,
913,
296,
908,
589,
43
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1807,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
325,
326,
327,
328,
329,
340,
67,
68
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2113,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
1088,
1089,
1090,
1091,
1092,
1093,
1094,
1095,
1096
]
},
{
"tb": 16,
"tbk": 1,
"tl": 73,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
727,
728,
296,
908,
589,
43
]
},
{
"tb": 512,
"tbk": 1,
"tl": 2704,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
1097,
1098,
43,
89
]
},
{
"tb": 96,
"tbk": 1,
"tl": 26,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
427,
428,
429,
1099,
42
]
},
{
"tb": 149504,
"tbk": 3,
"tl": 17923,
"mb": 149504,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
110,
111,
112,
113,
114,
1100,
1101,
294
]
},
{
"tb": 1944,
"tbk": 3,
"tl": 12340,
"mb": 1944,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
325,
326,
327,
328,
756,
808,
396,
365
]
},
{
"tb": 5121,
"tbk": 1,
"tl": 71,
"mb": 5121,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
646,
647,
648,
1102,
650,
651
]
}
],
"ftbl": [
"[root]",
"0x57eb95b8d847: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x57eb959a94f5: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x57eb95ad655c: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x57eb95b84129: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x57eb95ad5b36: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x57eb95ad9296: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x57eb95ab2bcf: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:369:9)",
"0x57eb95d52819: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x57eb95d5162a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x57eb95d5432c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95d5432c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95d5432c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x57eb95d2369c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x57eb95d2369c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x57eb95d2369c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x57eb959c8084: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x57eb959c7d9a: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x57eb959cf1dd: winter_verifier::verify (verifier/src/lib.rs:96:32)",
"0x57eb95b8e3b9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x57eb95a604ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x57eb95b2d7d5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b2d7d5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b2d7d5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95a97ae7: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x57eb95a31e2f: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x57eb95c01338: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x57eb959c1d08: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x57eb95dc6f79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x57eb95dc5709: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x57eb95a8bfe1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x57eb95a950d8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x57eb95b5367d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x57eb95ab5a42: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:512:13)",
"0x57eb95a426b2: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x57eb95adde08: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95adde08: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95adde08: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x57eb95b63b85: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x57eb95b63b85: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x57eb95b63b85: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x57eb959d821f: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x57eb959cba15: winter_verifier::perform_verification (verifier/src/lib.rs:311:25)",
"0x57eb959cf5da: winter_verifier::verify (verifier/src/lib.rs:111:21)",
"0x57eb95a5849c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x57eb95b174cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b174cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b174cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b174cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b760dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b733d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95b9fa6d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb95ab5cd2: winter_prover::Prover::generate_proof (prover/src/lib.rs:210:38)",
"0x57eb95a596dc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x57eb95b1b44f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b1b44f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b1b44f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b1b44f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b7604d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b70f75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95ba141d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb95ab7dcf: winter_prover::Prover::generate_proof (prover/src/lib.rs:501:51)",
"0x57eb95ca8f36: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95ca8f36: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95ca8f36: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95a04dac: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x57eb95ad1d4a: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x57eb95ab930a: winter_prover::Prover::generate_proof (prover/src/lib.rs:608:34)",
"0x57eb95ac92ee: winter_prover::Prover::prove (prover/src/lib.rs:175:37)",
"0x57eb95dc59ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x57eb95dc704c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95dc704c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95dc704c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x57eb95dc4c7c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x57eb95dc4c7c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x57eb95dc4c7c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x57eb95dc0ece: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x57eb95aff370: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x57eb959cf50b: winter_verifier::verify (verifier/src/lib.rs:109:19)",
"0x57eb959d341d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x57eb95ab9217: winter_prover::Prover::generate_proof (prover/src/lib.rs:603:29)",
"0x57eb95a2927c: winterfell::main (winterfell/src/main.rs:54:17)",
"0x57eb95adc485: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x57eb95a4ee4c: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x57eb95afff37: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x57eb959ac126: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x57eb95b00c15: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x57eb959dcca0: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x57eb959cbabc: winter_verifier::perform_verification (verifier/src/lib.rs:317:25)",
"0x57eb95a29822: winterfell::main (winterfell/src/main.rs:71:11)",
"0x57eb95b144ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b144ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b144ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b144ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b76d3d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b715f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95ba121d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb959dcff2: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x57eb95c04d94: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x57eb95c1095d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x57eb95ade511: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95ade511: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95ade511: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x57eb95b62c80: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x57eb959ed58a: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:155:31)",
"0x57eb959f0e25: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:128:17)",
"0x57eb95bebc6e: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x57eb959f7081: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x57eb959f5e86: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x57eb95ac712f: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:655:31)",
"0x57eb95a53dec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x57eb95b2db95: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b2db95: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b2db95: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95a97a57: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x57eb959f2d9a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x57eb95ac76ee: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:669:26)",
"0x57eb95ab6511: winter_prover::Prover::generate_proof (prover/src/lib.rs:274:13)",
"0x57eb95a567bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x57eb95b2d3c5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b2d3c5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b2d3c5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95ab68cd: winter_prover::Prover::generate_proof (prover/src/lib.rs:308:37)",
"0x57eb95a54d9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x57eb95b1de5f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b1de5f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b1de5f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b1de5f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b753cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b72e87: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95b9fe8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb95aa4bcd: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:51:26)",
"0x57eb959f08b2: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:28)",
"0x57eb95aba266: winter_prover::Prover::generate_proof (prover/src/lib.rs:417:21)",
"0x57eb95a5d30c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x57eb95b2c328: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b2c328: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b2c328: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x57eb95b64205: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x57eb95b64205: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x57eb95b64205: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x57eb95ab7ea3: winter_prover::Prover::generate_proof (prover/src/lib.rs:510:39)",
"0x57eb959b2106: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x57eb959eeac9: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:290:18)",
"0x57eb959ed88e: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:173:30)",
"0x57eb95d89a99: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x57eb95d8c63b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x57eb95d8bf01: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x57eb95d8538b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x57eb95d8204e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x57eb95d839ec: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x57eb95d8255a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x57eb95a5652a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x57eb95b0e949: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b0e949: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b0e949: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b0e949: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b7696a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b72874: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95ba0b8a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb959d340e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x57eb95a55d4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x57eb95b1159f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b1159f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b1159f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b1159f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b610d6: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x57eb95b73bc5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95ba130d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb959cf3a8: winter_verifier::verify (verifier/src/lib.rs:102:24)",
"0x57eb95ade45b: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x57eb95ade45b: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x57eb95ade45b: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x57eb95c0fe04: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x57eb95c195e9: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x57eb959cbc03: winter_verifier::perform_verification (verifier/src/lib.rs:323:5)",
"0x57eb95a581fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x57eb95b1a622: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b1a622: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b1a622: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b1a622: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x57eb95b75daa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b71484: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95b8e8ea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb95afdd67: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x57eb95acbefa: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x57eb95a02b8e: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x57eb95af9d0d: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x57eb95d89c0a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x57eb95d7d61c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95d7d61c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95d7d61c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x57eb95d7d5cc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x57eb95d7d5cc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x57eb95d7d5cc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x57eb95d7d2c6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x57eb95c106ca: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x57eb95b642d9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x57eb95b642d9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x57eb95b642d9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x57eb95a08abb: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x57eb95a3746d: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x57eb95af72d4: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x57eb95b20acf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b20acf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b20acf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b20acf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b75a5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b72c45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95ba0e4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb9599f1cf: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:283:9)",
"0x57eb95b19b04: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b19b04: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b19b04: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b19b04: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x57eb95b76eaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b72d64: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95ba10da: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb95a02e8d: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x57eb95b23abf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b23abf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b23abf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b23abf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b76e7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b73925: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95ba05dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb9599f788: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:228:23)",
"0x57eb95b1cecd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b1cecd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b1cecd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b1cecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b7609a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b71544: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95ba073a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb95aff50b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x57eb95b1b86f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b1b86f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b1b86f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b1b86f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b7661d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b71285: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95b9fc1d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb95ab5eb3: winter_prover::Prover::generate_proof (prover/src/lib.rs:222:20)",
"0x57eb95d512e9: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x57eb95c60840: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x57eb95c60aa9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x57eb95c70111: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x57eb95a357dc: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x57eb959cb4f7: winter_verifier::perform_verification (verifier/src/lib.rs:298:27)",
"0x57eb95dc4adc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x57eb95dc3d6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x57eb95dc3ae8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x57eb95dc3ae8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x57eb95dc3124: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x57eb95dc0d43: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x57eb95af2bbd: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x57eb95a5723c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x57eb95b11bd9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b11bd9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b11bd9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b11bd9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b7600a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b73c44: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95ba0c2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb959bf4b2: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x57eb95b081b0: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:140:51)",
"0x57eb95ba9476: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x57eb959a7fc1: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x57eb95a6dc01: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x57eb95a95408: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x57eb95b57c54: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x57eb95aba285: winter_prover::Prover::generate_proof (prover/src/lib.rs:418:17)",
"0x57eb95b2440d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b2440d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b2440d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b2440d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b75e4a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b736e4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95b9fd1a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb95af9ba1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x57eb95af9e73: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x57eb95affad4: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x57eb95b1ee94: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b1ee94: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b1ee94: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b1ee94: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x57eb95b755da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b73ec4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95ba0c5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb95a0646e: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x57eb95a77511: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x57eb95a95a08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x57eb95b5340e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x57eb95a3ac69: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x57eb95a3fbc6: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x57eb95a2a21b: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:175:9)",
"0x57eb95ab2b72: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:371:13)",
"0x57eb95aa4adf: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:41:22)",
"0x57eb959efb39: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:36)",
"0x57eb95aba1b5: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:21)",
"0x57eb959ed5e4: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:156:33)",
"0x57eb95d7ee3d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x57eb95d8a748: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x57eb95d8e0a7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x57eb95a3dc29: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x57eb95ab919c: winter_prover::Prover::generate_proof (prover/src/lib.rs:600:25)",
"0x57eb95a372b7: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x57eb959d077b: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x57eb95b2ca22: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b2ca22: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b2ca22: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x57eb95b63d25: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x57eb95b63d25: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x57eb95b63d25: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x57eb95b2b0e6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x57eb959d06db: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x57eb959d34b0: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x57eb95d8c9e9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95d8c9e9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95d8c9e9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95d8c9e9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x57eb95d8ce2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95d8cdf7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95d8cfce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb95d8f4c9: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x57eb95a5fa6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x57eb95b2d875: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b2d875: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b2d875: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95a36aaf: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x57eb95a619ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x57eb95b2da55: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b2da55: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b2da55: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95ab6877: winter_prover::Prover::generate_proof (prover/src/lib.rs:306:39)",
"0x57eb959fec84: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb959fec84: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb959fec84: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x57eb95b62c56: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x57eb95a36a4c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x57eb95ad1b91: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x57eb95a36259: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x57eb95a37739: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x57eb959f2e5c: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x57eb95b2cd83: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x57eb959a28cd: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x57eb95ab43d4: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:541:17)",
"0x57eb959cafc9: winter_verifier::perform_verification (verifier/src/lib.rs:266:61)",
"0x57eb95a5d06c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x57eb95addf38: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95addf38: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95addf38: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x57eb95b647c5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x57eb95b647c5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x57eb95b647c5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x57eb959aa8e2: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x57eb95aa4028: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:83:31)",
"0x57eb95baa7af: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x57eb95b95b0a: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x57eb95bac7a8: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x57eb95a31114: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x57eb95a826d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x57eb95a957c8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x57eb95b5467e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x57eb95a4e216: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x57eb95b00104: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x57eb95c0fd9d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x57eb959c3adb: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x57eb95b2d646: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b2d646: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b2d646: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95a08882: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x57eb95afe4ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x57eb959cb636: winter_verifier::perform_verification (verifier/src/lib.rs:305:9)",
"0x57eb95a0007a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x57eb959d0845: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x57eb95ad107b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x57eb95ace28d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x57eb95c422ea: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x57eb95c1d009: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x57eb95b86a75: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x57eb959fd598: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x57eb95b289dd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b289dd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b289dd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b289dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b75c7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b72ff4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95ba086a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb95aff67b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x57eb95b2b0a6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x57eb95b00d01: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x57eb95a319fe: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x57eb95af2b6c: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x57eb95c10b73: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x57eb95a4ab7f: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x57eb95a4e040: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x57eb95a5bb7c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x57eb95b1519f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b1519f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b1519f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b1519f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b7654d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b73355: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95ba0ddd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb959f11b1: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x57eb95d8c12b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x57eb95d8c061: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x57eb95d8546b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x57eb95d7fb71: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x57eb95d80307: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x57eb95d8f90b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x57eb95a60f6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x57eb95b2622b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b2622b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b2622b: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b2622b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x57eb95b76aad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b73955: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95a9716d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb95ad7618: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x57eb959c01bf: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x57eb959bdac4: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x57eb959c1f9d: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x57eb959f2572: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x57eb95a9a18f: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x57eb95a3a93d: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x57eb95a75281: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x57eb95a95a38: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x57eb95b5633e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x57eb95ae35c3: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x57eb95ab802d: winter_prover::Prover::generate_proof (prover/src/lib.rs:524:9)",
"0x57eb95a59c1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x57eb95b0d4b9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b0d4b9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b0d4b9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b0d4b9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b758ea: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b724f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95ba039a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb95aa3fe8: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:83:9)",
"0x57eb95dc5ea0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x57eb95dc60d9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x57eb95dc63d2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x57eb95dc7159: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x57eb95d7d01a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x57eb959fe785: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x57eb95b0c997: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x57eb95aff970: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x57eb95b0ef8f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b0ef8f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b0ef8f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b0ef8f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b7606d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b71f75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95b9f79d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb959bf3a8: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x57eb95a393c0: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x57eb95a3e0bd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x57eb95b1118f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b1118f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b1118f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b1118f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b75ccd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b72cd7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95ba050d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb95b95aa0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x57eb95a60ccc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x57eb95b2dc35: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b2dc35: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b2dc35: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95ab688e: winter_prover::Prover::generate_proof (prover/src/lib.rs:307:44)",
"0x57eb95b13ecf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b13ecf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b13ecf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b13ecf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b76d5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b73da7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95ba0edd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb95a290e6: winterfell::main (winterfell/src/main.rs:38:27)",
"0x57eb95a545cc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x57eb95b17aff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b17aff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b17aff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b17aff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b754ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b72337: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95ba0e8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb95a28edf: winterfell::main (winterfell/src/main.rs:28:26)",
"0x57eb95a32ec7: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x57eb95a44003: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x57eb95a45210: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x57eb95b10033: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b10033: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b10033: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b10033: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b769ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b73545: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95ba0fdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb95ab66db: winter_prover::Prover::generate_proof (prover/src/lib.rs:293:23)",
"0x57eb95a62edc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x57eb95b2525f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b2525f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b2525f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b2525f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b6218b: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x57eb95b728d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95ba056d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb95ab67f7: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:36)",
"0x57eb95ae34ab: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x57eb95b8e4e2: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x57eb959c7c98: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x57eb95c1078d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x57eb95a45222: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x57eb95a0331c: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x57eb9599fa3f: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:230:34)",
"0x57eb95ba8026: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x57eb95bce3a7: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x57eb95b210ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b210ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b210ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b210ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b7544d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b71625: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95ba013d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb959a9d28: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x57eb959bfeae: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x57eb959c3a1c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x57eb95a5a69c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x57eb95b1070f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b1070f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b1070f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b1070f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b7527d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b73a55: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95b9f8ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb95c10ac4: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x57eb95afecf0: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x57eb959cb7a8: winter_verifier::perform_verification (verifier/src/lib.rs:306:42)",
"0x57eb95bfe14c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x57eb959c7e0c: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x57eb95a5c0bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x57eb95b0d6af: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b0d6af: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b0d6af: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b0d6af: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b62705: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x57eb95b7350a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95b9fb3d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb959c6891: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x57eb95ab9e8b: winter_prover::Prover::generate_proof (prover/src/lib.rs:450:13)",
"0x57eb95ab4350: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:543:13)",
"0x57eb95a421b6: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x57eb95a57a1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x57eb95b0f7f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b0f7f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b0f7f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b0f7f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b7534a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b713a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95ba113a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb95ac6f12: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:640:42)",
"0x57eb95c004f9: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x57eb959fe37b: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x57eb95c00b9b: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x57eb95a5ffac: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x57eb95b158df: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b158df: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b158df: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b158df: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b60b4e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x57eb95b73415: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95ba12ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb959d24f7: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x57eb95a788d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x57eb95a95318: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x57eb95b5612d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x57eb959bfaf2: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x57eb95bebac5: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x57eb95a00517: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x57eb95a4e2b9: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x57eb959b2cba: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x57eb95ab3010: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:354:9)",
"0x57eb95b92e16: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:26:25)",
"0x57eb95af81ce: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x57eb959cf038: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:216:32)",
"0x57eb95baee5f: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x57eb959a9d37: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x57eb959b2b7f: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x57eb959cbfcc: winter_verifier::perform_verification (verifier/src/lib.rs:225:43)",
"0x57eb95b92f8c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:40:30)",
"0x57eb95c18de9: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x57eb959cb1ac: winter_verifier::perform_verification (verifier/src/lib.rs:275:24)",
"0x57eb95b0755d: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:243:25)",
"0x57eb95a29d94: winterfell::build_do_work_trace (winterfell/src/main.rs:91:5)",
"0x57eb95ac960b: winterfell::main::{{closure}} (winterfell/src/main.rs:30:23)",
"0x57eb95dc6108: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x57eb95dc64ca: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x57eb95dc64ca: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x57eb95dc626e: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x57eb95dc626e: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x57eb95dc635d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x57eb95a5777c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x57eb95b1bbf2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b1bbf2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b1bbf2: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b1bbf2: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x57eb95b76b7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b71c35: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95b9f8cd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb95ad5a6a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x57eb95ad080b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x57eb95acea1d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x57eb95c42c2a: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x57eb95c21c7d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x57eb95c24613: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x57eb95a35237: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x57eb95b0076e: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x57eb95a797a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x57eb95a95108: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x57eb95b55dae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x57eb959cc1eb: winter_verifier::perform_verification (verifier/src/lib.rs:184:9)",
"0x57eb959dceb1: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x57eb95b07131: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x57eb95adb853: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x57eb95b8e832: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x57eb95a5944a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x57eb95b0e539: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b0e539: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b0e539: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b0e539: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b75b7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b73b14: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95ba144a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb95ab64ea: winter_prover::Prover::generate_proof (prover/src/lib.rs:272:43)",
"0x57eb95b1f05d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b1f05d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b1f05d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b1f05d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b75dda: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b72de4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95ba01ca: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb95aff7eb: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x57eb95c3b55d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x57eb95c41a25: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x57eb95c3486e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x57eb95cad9e9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x57eb95cad9e9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x57eb95cad9e9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x57eb95ace0af: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x57eb959aca26: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x57eb95b00714: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x57eb959efa9c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:51:13)",
"0x57eb95a8ac21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x57eb95a94dd8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x57eb95b566ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x57eb959d08ec: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x57eb95acf72b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x57eb95acef9d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x57eb95c4269a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x57eb95c1d1e9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x57eb95b8715b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x57eb959fd6eb: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x57eb95c2ff7b: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x57eb95c3a1a9: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x57eb95c34416: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x57eb95ae3347: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x57eb95d4f700: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x57eb95d4f939: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x57eb95d4f132: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x57eb95a0817c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x57eb95a0031d: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x57eb95b00e5f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x57eb959bf440: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x57eb95ba7db6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x57eb959a7b11: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x57eb95d8a0f0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x57eb95d7e669: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x57eb95d7de51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x57eb95d7d950: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x57eb95a3de24: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x57eb959c02ce: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x57eb95af81b0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x57eb95b2836f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b2836f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b2836f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b2836f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b7589d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b73895: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95ba0bdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb95b07fe2: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:140:32)",
"0x57eb959ca8e5: winter_verifier::perform_verification (verifier/src/lib.rs:185:13)",
"0x57eb95aa6d5a: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:170:36)",
"0x57eb95aa534f: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:55:17)",
"0x57eb95b2daf5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b2daf5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b2daf5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95a97c07: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x57eb959ba237: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x57eb959f1a29: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x57eb95baf1d6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x57eb95a3a9b6: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x57eb95a4ab3e: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x57eb95b29e6f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b29e6f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b29e6f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b29e6f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b75ecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b71825: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95ba0afd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb95c10c5a: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x57eb95a5432c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x57eb959acaea: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb959acaea: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb959acaea: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x57eb95b62ca6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x57eb95a43508: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x57eb95ab5f02: winter_prover::Prover::generate_proof (prover/src/lib.rs:233:27)",
"0x57eb95b1658d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b1658d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b1658d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b1658d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b75d7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b71d34: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95ba030a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb95aff733: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x57eb95af28a2: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x57eb95a2f245: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x57eb95a2a330: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:177:13)",
"0x57eb95b08518: winter_prover::trace::Trace::validate (src/trace/mod.rs:123:26)",
"0x57eb95aba578: winter_prover::Prover::generate_proof (prover/src/lib.rs:379:17)",
"0x57eb959c741f: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x57eb959c5a15: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x57eb959d92d7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x57eb95b2d9b5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b2d9b5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b2d9b5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95ab6909: winter_prover::Prover::generate_proof (prover/src/lib.rs:309:32)",
"0x57eb95a432f2: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x57eb95b274f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b274f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b274f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b274f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b759da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b72bc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95b9feba: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb95ac6fcf: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:644:36)",
"0x57eb95a6317c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x57eb95b25eef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b25eef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b25eef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b25eef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b7627d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b71c65: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95b829bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb95ab6033: winter_prover::Prover::generate_proof (prover/src/lib.rs:248:41)",
"0x57eb95a07a4c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x57eb95a02f66: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x57eb95b1895f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b1895f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b1895f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b1895f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b76a4d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b72e15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95ba0f5d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb95c167af: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x57eb95a53b4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x57eb95ab24c4: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95ab24c4: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95ab24c4: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x57eb95b62bf6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x57eb95a2a0ad: <winterfell::WorkAir as winter_air::air::Air>::new (winterfell/src/main.rs:151:23)",
"0x57eb959d003b: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:102:85)",
"0x57eb95baca6e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x57eb95a4ad26: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x57eb95c105ed: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x57eb95b1269a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b1269a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b1269a: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b1269a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x57eb95b754cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b73a1a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95bfdf4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb95a37243: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x57eb95ab5978: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:517:13)",
"0x57eb95a09c4b: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x57eb959dccb7: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x57eb95bb2d85: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x57eb95bb2e16: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x57eb959cbedf: winter_verifier::perform_verification (verifier/src/lib.rs:228:13)",
"0x57eb95b8ec5a: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x57eb95c026a7: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x57eb95ae5889: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x57eb959aa750: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x57eb95b63df5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x57eb95b63df5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x57eb95b63df5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x57eb959f24bd: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x57eb95ac8eb8: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:716:26)",
"0x57eb95ab7931: winter_prover::Prover::generate_proof (prover/src/lib.rs:482:37)",
"0x57eb95b0cb50: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x57eb95d7cc69: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x57eb95d79c1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x57eb95d76db6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95d76db6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95d76db6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95a3db68: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x57eb95a07cc7: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x57eb95a4ae35: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x57eb959c7dce: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x57eb95a432db: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x57eb959f59bd: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x57eb959f1c90: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x57eb959f4614: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x57eb959f0973: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:33)",
"0x57eb95b193bf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b193bf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b193bf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b193bf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b766cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b73e45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95ba052d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb959d84ab: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x57eb95a06356: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x57eb95b063a7: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x57eb95d8c48b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x57eb95d8be51: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x57eb95d8554b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x57eb95d7fc41: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x57eb95d802c7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x57eb95d8f95b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x57eb959a9388: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x57eb95b113a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b113a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b113a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b113a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b7648a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b71fc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95ba0a3a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb95ab5d8f: winter_prover::Prover::generate_proof (prover/src/lib.rs:214:39)",
"0x57eb95ab9e70: winter_prover::Prover::generate_proof (prover/src/lib.rs:449:13)",
"0x57eb95c00b89: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x57eb95ab86b8: winter_prover::Prover::generate_proof (prover/src/lib.rs:558:13)",
"0x57eb95a36dbc: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x57eb95a06547: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x57eb95affd54: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x57eb95b27d2f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b27d2f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b27d2f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b27d2f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b7556d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b72125: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95ba098d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb95c0fd29: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x57eb95b1da3f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b1da3f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b1da3f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b1da3f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b76b1d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b71bb7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95b9f9bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb959dddf7: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x57eb95a5503c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x57eb95b17909: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b17909: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b17909: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b17909: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b76e3a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b72934: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95b9fa2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb959caba2: winter_verifier::perform_verification (verifier/src/lib.rs:214:41)",
"0x57eb95a418d8: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x57eb95ad1db3: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x57eb95a04eb4: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x57eb95977d82: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x57eb95977d82: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x57eb95977d82: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95977d82: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95977d82: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95977d82: std::io::buffered::bufwriter::BufWriter<W>::with_capacity (io/buffered/bufwriter.rs:115:33)",
"0x57eb95977d82: std::io::buffered::linewriter::LineWriter<W>::with_capacity (io/buffered/linewriter.rs:109:29)",
"0x57eb95977d82: std::io::buffered::linewriter::LineWriter<W>::new (io/buffered/linewriter.rs:89:9)",
"0x57eb95977d82: std::io::stdio::stdout::{{closure}} (src/io/stdio.rs:618:62)",
"0x57eb95977d82: std::sync::once_lock::OnceLock<T>::get_or_init::{{closure}} (src/sync/once_lock.rs:250:50)",
"0x57eb95977d82: std::sync::once_lock::OnceLock<T>::initialize::{{closure}} (src/sync/once_lock.rs:376:19)",
"0x57eb95977d82: std::sync::once::Once::call_once_force::{{closure}} (src/sync/once.rs:208:40)",
"0x57eb95977d82: std::sys_common::once::futex::Once::call (sys_common/once/futex.rs:124:21)",
"0x57eb95976eca: std::sync::once::Once::call_once_force (src/sync/once.rs:208:9)",
"0x57eb95976eca: std::sync::once_lock::OnceLock<T>::initialize (src/sync/once_lock.rs:375:9)",
"0x57eb95de11c5: std::sync::once_lock::OnceLock<T>::get_or_try_init (src/sync/once_lock.rs:298:9)",
"0x57eb95de11c5: std::sync::once_lock::OnceLock<T>::get_or_init (src/sync/once_lock.rs:250:15)",
"0x57eb95de11c5: std::io::stdio::stdout (src/io/stdio.rs:618:14)",
"0x57eb95de11c5: std::io::stdio::print_to (src/io/stdio.rs:1020:21)",
"0x57eb95de11c5: std::io::stdio::_print (src/io/stdio.rs:1097:5)",
"0x57eb95a2903a: winterfell::main (winterfell/src/main.rs:36:5)",
"0x57eb95ab2012: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95ab2012: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95ab2012: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x57eb95b64b05: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x57eb95b64b05: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x57eb95b64b05: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x57eb959b2b95: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x57eb95a3dc0e: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x57eb959ab461: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x57eb95a4203f: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x57eb959d86df: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x57eb95af2921: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x57eb95a39499: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x57eb95b932cb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:64:9)",
"0x57eb959aa8f5: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x57eb959bd238: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x57eb95ab6e23: winter_prover::Prover::generate_proof (prover/src/lib.rs:423:33)",
"0x57eb95ad1dca: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x57eb95a2a247: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:176:13)",
"0x57eb959d0f56: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x57eb95badeb6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x57eb95bd2fbd: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x57eb95a8fb21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x57eb95a95498: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x57eb95b577ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x57eb95a48db7: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x57eb95ad5bae: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x57eb95ab41b5: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:547:13)",
"0x57eb95a5ae6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x57eb95b15b29: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b15b29: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b15b29: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b15b29: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b75caa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b74084: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95ba019a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb95a4324b: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x57eb959ba24c: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x57eb95a94041: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x57eb95a95018: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x57eb95b538be: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x57eb95aa6e9d: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:175:17)",
"0x57eb95a72611: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x57eb95a95288: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x57eb95b53c0b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x57eb95a033c9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x57eb95a452d3: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x57eb95a3aafb: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x57eb959aa3e2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb959aa3e2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb959aa3e2: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x57eb959bd24b: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x57eb95ae30d2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x57eb959c829f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x57eb95a43df3: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x57eb95ab74d0: winter_prover::Prover::generate_proof (prover/src/lib.rs:452:35)",
"0x57eb959f530f: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x57eb959f4506: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x57eb95b922f8: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:651:17)",
"0x57eb959bd2c5: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x57eb95a7ba31: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x57eb95a95048: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x57eb95b5855e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x57eb959cc3b2: winter_verifier::perform_verification (verifier/src/lib.rs:179:9)",
"0x57eb95acfa8b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x57eb95acee3d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x57eb95c4278a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x57eb95c1d2a9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x57eb95b85bc8: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x57eb95b84195: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x57eb95ae2cbe: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x57eb95b142ef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b142ef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b142ef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b142ef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b764cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b72d15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95b9f7dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb959d08d5: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x57eb95b14b4f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b14b4f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b14b4f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b14b4f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b6003e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x57eb95b74035: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95ba10ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb95a2974e: winterfell::main (winterfell/src/main.rs:65:26)",
"0x57eb95a29e36: <winterfell::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (winterfell/src/main.rs:133:9)",
"0x57eb95b907a8: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:216:31)",
"0x57eb95baed36: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x57eb95bccbd0: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x57eb95b9af66: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x57eb95ba28f6: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x57eb95ab9e30: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:13)",
"0x57eb95a4a3b5: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x57eb959c1a93: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x57eb95b26d1f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b26d1f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b26d1f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b26d1f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b7561d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b714f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95ba034d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb959c07f7: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x57eb9599f6e8: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:227:28)",
"0x57eb95a3fd52: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x57eb959c3a78: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x57eb959f0be1: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:135:9)",
"0x57eb95b13ac3: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b13ac3: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b13ac3: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b13ac3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b75bd4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b7229a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95ba0654: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb95a28d51: winterfell::main (winterfell/src/main.rs:22:32)",
"0x57eb959f39d6: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x57eb959f2e23: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x57eb9599d88c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x57eb959a1036: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x57eb95b91c48: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:300:57)",
"0x57eb959d83b7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x57eb95a5a3fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x57eb95b19edf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b19edf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b19edf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b19edf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b7688d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b720c5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95b9f9dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb95ac708b: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:648:34)",
"0x57eb95ca20b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x57eb95ca4d69: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x57eb95cac322: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x57eb95a0065f: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x57eb95b1eb9d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b1eb9d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b1eb9d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b1eb9d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b752aa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b72394: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95ba0b5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb95aff5c3: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x57eb95d8c2db: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x57eb95d8bfb1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x57eb95d852ab: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x57eb95d81f3e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x57eb95d83400: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x57eb95d82bf8: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x57eb95a94a21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x57eb95a94e08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x57eb95b5742e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x57eb95b00f07: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x57eb95bb2d72: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x57eb95a922a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x57eb95a95a98: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x57eb95b5591b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x57eb95a370fa: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x57eb959bd314: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x57eb959fe428: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x57eb95ab6132: winter_prover::Prover::generate_proof (prover/src/lib.rs:262:22)",
"0x57eb95ae30f5: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x57eb95ac8acc: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:701:36)",
"0x57eb9599d89d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x57eb95a00999: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x57eb95a3fe92: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x57eb95a3fb2c: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x57eb95ab8b02: winter_prover::Prover::generate_proof (prover/src/lib.rs:571:9)",
"0x57eb95af282f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x57eb95b089a5: winter_prover::trace::Trace::validate (src/trace/mod.rs:179:13)",
"0x57eb95aad75a: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x57eb95b91852: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:503:32)",
"0x57eb95baedc6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x57eb95bcc93a: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x57eb95b96e27: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x57eb95ba1a22: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x57eb95d7ee9d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x57eb95d8a42b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x57eb95d8e1e3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x57eb959d86fe: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x57eb95b91f36: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:226:17)",
"0x57eb95bac19e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x57eb959ab32d: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x57eb95b10b59: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b10b59: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b10b59: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b10b59: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b756ba: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b739a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95b9feea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb95ab7e8c: winter_prover::Prover::generate_proof (prover/src/lib.rs:505:52)",
"0x57eb959cf330: winter_verifier::verify (verifier/src/lib.rs:98:38)",
"0x57eb959abf63: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x57eb95a6120c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x57eb95b1ae49: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x57eb95b1ae49: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x57eb95b1ae49: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x57eb95b1ae49: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x57eb95b7593a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x57eb95b727f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x57eb95ba001a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x57eb959cac5f: winter_verifier::perform_verification (verifier/src/lib.rs:218:40)",
"0x57eb959d57be: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x57eb959cbb34: winter_verifier::perform_verification (verifier/src/lib.rs:319:28)",
"0x57eb959d9325: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x57eb95bfe472: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x57eb95a3a99f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x57eb95ace09a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)"
]
}