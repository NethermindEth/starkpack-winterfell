{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell",
"pid": 27944,
"tg": 376547,
"te": 1053711,
"pps": [
{
"tb": 11136,
"tbk": 3,
"tl": 454,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9
]
},
{
"tb": 16,
"tbk": 1,
"tl": 5,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
15,
16
]
},
{
"tb": 149504,
"tbk": 3,
"tl": 20393,
"mb": 149504,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
18,
19,
20,
21,
22,
23,
24
]
},
{
"tb": 2784,
"tbk": 3,
"tl": 11641,
"mb": 2784,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
25,
26,
27,
28,
29,
30,
31
]
},
{
"tb": 2880,
"tbk": 12,
"tl": 1801,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
34,
35,
36,
37,
38
]
},
{
"tb": 11136,
"tbk": 3,
"tl": 13480,
"mb": 11136,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
39,
30,
31,
40
]
},
{
"tb": 512,
"tbk": 1,
"tl": 16,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
41,
42
]
},
{
"tb": 512,
"tbk": 1,
"tl": 25,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
43,
44,
45,
46,
47,
48,
49,
50,
51
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1377,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
53,
54,
55,
56,
57,
58,
59,
60,
61
]
},
{
"tb": 240,
"tbk": 2,
"tl": 499724,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
62,
63,
15,
16
]
},
{
"tb": 512,
"tbk": 1,
"tl": 50,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
64,
65,
66,
67,
68,
69,
70,
71
]
},
{
"tb": 56,
"tbk": 1,
"tl": 2102,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
72,
73,
40,
74
]
},
{
"tb": 149504,
"tbk": 3,
"tl": 19288,
"mb": 149504,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
18,
19,
20,
21,
75,
76,
77
]
},
{
"tb": 3312,
"tbk": 24,
"tl": 63,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
53,
78,
79,
80,
81,
82,
83,
84,
85,
86
]
},
{
"tb": 11136,
"tbk": 87,
"tl": 79,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
87,
88,
89,
90,
91,
92,
93,
94
]
},
{
"tb": 48,
"tbk": 2,
"tl": 75,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
95,
96,
97,
98,
99,
100
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
101,
102,
103,
104,
105,
106,
107,
108,
109,
40
]
},
{
"tb": 288,
"tbk": 1,
"tl": 7675,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
110,
111,
112,
113,
24
]
},
{
"tb": 11136,
"tbk": 3,
"tl": 1500,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
114,
115,
116,
117,
118,
86,
119,
15
]
},
{
"tb": 32,
"tbk": 1,
"tl": 6043,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
18,
19,
20,
120,
121,
122,
40
]
},
{
"tb": 32,
"tbk": 1,
"tl": 62,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
123,
124,
125,
126,
127,
128,
129,
130,
131
]
},
{
"tb": 48,
"tbk": 1,
"tl": 102879,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
132,
133,
134,
135,
136,
137,
138,
139,
140
]
},
{
"tb": 512,
"tbk": 1,
"tl": 114,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
141,
50,
51,
74
]
},
{
"tb": 32,
"tbk": 2,
"tl": 488320,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
142,
143,
144,
145,
146,
147,
148,
149
]
},
{
"tb": 2352,
"tbk": 10,
"tl": 1089,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
53,
150,
151,
152,
153,
154,
155,
156,
157
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 147927,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
158,
159,
160,
161,
162,
163,
164
]
},
{
"tb": 2784,
"tbk": 3,
"tl": 2082,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
25,
26,
27,
28,
165,
85,
86
]
},
{
"tb": 480,
"tbk": 4,
"tl": 6107,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
166,
167,
168,
169,
170,
171,
172
]
},
{
"tb": 10656,
"tbk": 81,
"tl": 288536,
"mb": 10656,
"mbk": 81,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
18,
19,
20,
120,
173,
174,
30
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
175,
176,
177,
178,
15,
16
]
},
{
"tb": 127031,
"tbk": 9,
"tl": 6185,
"mb": 67352,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
179,
180,
181,
182,
183
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 38793,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
184,
185,
186
]
},
{
"tb": 512,
"tbk": 1,
"tl": 125,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
187,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 64,
"tbk": 1,
"tl": 4433,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
197,
198,
51,
74
]
},
{
"tb": 512,
"tbk": 1,
"tl": 109,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
199,
50,
51,
74
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
200,
13,
14,
15,
16
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1192,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
53,
78,
79,
80,
201,
202,
203,
204,
205,
206
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 415594,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
207,
208,
209
]
},
{
"tb": 48,
"tbk": 2,
"tl": 111,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
210,
96,
97,
98,
99,
100
]
},
{
"tb": 512,
"tbk": 4,
"tl": 975766,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
211,
212,
213,
214,
215
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 41721,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
43,
44,
45,
216,
217,
218,
219,
220,
15
]
},
{
"tb": 2600,
"tbk": 14,
"tl": 455,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
53,
78,
79,
80,
81,
82,
83,
221,
222,
223
]
},
{
"tb": 1152,
"tbk": 4,
"tl": 151,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
224,
225,
226,
227,
228
]
},
{
"tb": 48,
"tbk": 2,
"tl": 999459,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
229,
230,
231,
232,
233,
234,
235,
236,
237,
238
]
},
{
"tb": 192,
"tbk": 1,
"tl": 4658,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
239,
240,
241,
242,
51
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 670915,
"mb": 1048576,
"mbk": 1,
"gb": 1048576,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
18,
19,
20,
21,
75,
76,
243
]
},
{
"tb": 48,
"tbk": 1,
"tl": 72244,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
244,
245,
246,
247,
248,
249,
250
]
},
{
"tb": 2000,
"tbk": 10,
"tl": 189,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
251,
252,
253,
254,
255,
256
]
},
{
"tb": 96,
"tbk": 1,
"tl": 28,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
257,
258,
259,
260,
261,
15
]
},
{
"tb": 256,
"tbk": 1,
"tl": 119,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
43,
44,
45,
216,
217,
218,
262,
195,
196
]
},
{
"tb": 256,
"tbk": 1,
"tl": 488160,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
43,
44,
45,
216,
217,
218,
262,
195,
263
]
},
{
"tb": 192,
"tbk": 3,
"tl": 9200,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
264,
265,
266
]
},
{
"tb": 80,
"tbk": 1,
"tl": 487869,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
267,
268,
269,
270,
271,
272,
273,
274,
275
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1047481,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
276,
277,
278,
279,
280,
281,
282,
283
]
},
{
"tb": 128,
"tbk": 1,
"tl": 5612,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
284,
285,
286,
40
]
},
{
"tb": 24,
"tbk": 1,
"tl": 366041,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
287,
288,
289,
290,
291,
292,
293,
294,
295
]
},
{
"tb": 72,
"tbk": 1,
"tl": 11748,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
132,
296,
297,
298,
299,
300,
301,
302,
303,
15
]
},
{
"tb": 96,
"tbk": 1,
"tl": 22,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
257,
258,
304,
305,
51,
74
]
},
{
"tb": 96,
"tbk": 1,
"tl": 3503,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
166,
167,
306,
307,
308,
309,
310
]
},
{
"tb": 11136,
"tbk": 3,
"tl": 1200,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
158,
159,
160,
161,
162,
163,
311
]
},
{
"tb": 2280,
"tbk": 5,
"tl": 1769,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
312,
313,
314,
315,
316,
317
]
},
{
"tb": 2097152,
"tbk": 16,
"tl": 388254,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
318,
319,
320,
321,
322,
323,
324,
325
]
},
{
"tb": 8,
"tbk": 1,
"tl": 365629,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
326,
327,
328,
329,
330,
331,
332,
333,
334
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1802,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
132,
296,
297,
298,
299,
300,
301,
335,
336,
337
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1031106,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
338,
339,
340,
341,
342,
343,
344,
345,
346
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1717,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
244,
245,
246,
247,
347,
348,
349
]
},
{
"tb": 448,
"tbk": 3,
"tl": 161,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
34,
35,
36,
350,
351
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4650,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
43,
44,
45,
46,
47,
48,
352,
353,
354
]
},
{
"tb": 11136,
"tbk": 3,
"tl": 393,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
158,
159,
160,
161,
162,
163,
355
]
},
{
"tb": 2097152,
"tbk": 16,
"tl": 181384,
"mb": 2097152,
"mbk": 16,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
43,
44,
45,
46,
47,
48,
356,
299,
300,
301,
357
]
},
{
"tb": 448,
"tbk": 3,
"tl": 4450,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
34,
35,
36,
358,
359
]
},
{
"tb": 1048576,
"tbk": 16,
"tl": 5671856,
"mb": 1048576,
"mbk": 16,
"gb": 1048576,
"gbk": 16,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
43,
44,
45,
46,
47,
48,
360,
361,
362
]
},
{
"tb": 24,
"tbk": 1,
"tl": 664457,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
287,
363,
364,
365,
366,
15,
16
]
},
{
"tb": 96,
"tbk": 1,
"tl": 4445,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
367,
368,
369,
370,
359
]
},
{
"tb": 2600,
"tbk": 14,
"tl": 389,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
53,
78,
79,
80,
81,
82,
83,
221,
222,
371
]
},
{
"tb": 16,
"tbk": 1,
"tl": 22,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
372,
373,
374,
375,
376,
377,
378,
379,
15,
16
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 2691,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
380,
381,
382,
383,
384,
385,
386,
387
]
},
{
"tb": 512,
"tbk": 1,
"tl": 488167,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
187,
188,
189,
190,
191,
192,
193,
194,
195,
263
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1602,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
25,
26,
27,
28,
165,
388,
337
]
},
{
"tb": 512,
"tbk": 1,
"tl": 27,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
264,
265,
389
]
},
{
"tb": 256,
"tbk": 1,
"tl": 499,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
53,
390,
391,
392,
393,
222,
371,
394
]
},
{
"tb": 72,
"tbk": 3,
"tl": 34976,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
229,
230,
231,
232,
233,
234,
235,
236,
395,
396,
397,
398
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1292,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
166,
167,
168,
169,
170,
399,
310
]
},
{
"tb": 1088,
"tbk": 2,
"tl": 30,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
400,
401,
402,
403,
404,
405
]
},
{
"tb": 224,
"tbk": 3,
"tl": 499721,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
166,
167,
168,
169,
170,
406,
407
]
},
{
"tb": 24,
"tbk": 1,
"tl": 13923,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
408,
409,
410,
411,
412,
413,
414,
415,
416
]
},
{
"tb": 1992,
"tbk": 3,
"tl": 2091,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
417,
418,
419,
420,
421,
85,
86,
119
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 154785,
"mb": 8388608,
"mbk": 1,
"gb": 8388608,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
43,
44,
45,
46,
47,
48,
422,
423,
424
]
},
{
"tb": 28210,
"tbk": 26,
"tl": 16881,
"mb": 14144,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
166,
167,
425,
426,
427,
428,
429
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1670,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
25,
26,
27,
28,
165,
430,
220
]
},
{
"tb": 2400,
"tbk": 20,
"tl": 1607,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
166,
167,
168,
169,
170,
431,
222
]
},
{
"tb": 128,
"tbk": 1,
"tl": 2859,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
432,
433,
434,
435,
436,
437,
438,
439
]
},
{
"tb": 128,
"tbk": 1,
"tl": 11,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
43,
44,
45,
46,
47,
48,
440,
119,
15
]
},
{
"tb": 48,
"tbk": 2,
"tl": 976112,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
229,
230,
231,
232,
233,
234,
235,
236,
441,
442
]
},
{
"tb": 24,
"tbk": 1,
"tl": 130,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
132,
443,
444,
445,
446,
447,
448,
449,
450
]
},
{
"tb": 32,
"tbk": 1,
"tl": 149411,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
166,
167,
168,
169,
170,
451,
15
]
},
{
"tb": 48,
"tbk": 1,
"tl": 13913,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
452,
453,
454,
455,
456,
457
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1031362,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
458,
459,
460,
461,
462,
463,
464,
465
]
},
{
"tb": 32,
"tbk": 1,
"tl": 379,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
466,
467,
15,
16
]
},
{
"tb": 96,
"tbk": 1,
"tl": 5290,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
367,
368,
369,
468,
31
]
},
{
"tb": 8,
"tbk": 1,
"tl": 223,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
53,
469,
470,
471,
472,
473,
474,
475,
476
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2257,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
417,
418,
419,
420,
477,
478,
479,
73
]
},
{
"tb": 96,
"tbk": 1,
"tl": 10,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
367,
368,
369,
480,
40
]
},
{
"tb": 432,
"tbk": 3,
"tl": 1185,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
244,
245,
246,
247,
481,
9,
205
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2693,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
417,
418,
419,
420,
477,
482,
483,
484
]
},
{
"tb": 16,
"tbk": 1,
"tl": 499742,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
43,
44,
45,
46,
47,
48,
485,
486,
63
]
},
{
"tb": 384,
"tbk": 1,
"tl": 11655,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
132,
296,
297,
298,
299,
300,
301,
357,
303,
15
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 73550,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
18,
19,
20,
21,
487,
488,
489
]
},
{
"tb": 32,
"tbk": 1,
"tl": 52,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
123,
490,
491,
492,
493,
494,
495,
496,
497
]
},
{
"tb": 8388608,
"tbk": 32768,
"tl": 33803,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
43,
44,
45,
216,
217,
218,
498,
499,
500
]
},
{
"tb": 48,
"tbk": 1,
"tl": 617551,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
501,
502,
503,
504,
505,
506,
507,
508,
509
]
},
{
"tb": 384,
"tbk": 1,
"tl": 488069,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
510,
511,
512,
513,
514,
515,
516,
517,
518
]
},
{
"tb": 16,
"tbk": 1,
"tl": 54830,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
372,
519,
520,
521,
522,
523,
524,
525,
526
]
},
{
"tb": 144,
"tbk": 1,
"tl": 11671,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
527,
528,
529,
530,
396,
397,
398,
531,
303,
15
]
},
{
"tb": 1079,
"tbk": 7,
"tl": 56384,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
179,
180,
181,
182,
532
]
},
{
"tb": 8192,
"tbk": 32,
"tl": 59622,
"mb": 8192,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
43,
44,
45,
216,
217,
218,
533,
534,
535
]
},
{
"tb": 8192,
"tbk": 1,
"tl": 3516,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
166,
536,
537,
538,
539,
540,
310,
337,
541
]
},
{
"tb": 11136,
"tbk": 87,
"tl": 90,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
284,
542,
30,
31
]
},
{
"tb": 96,
"tbk": 1,
"tl": 4681,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
543,
544,
545,
546,
51
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
166,
536,
547,
548,
549,
550,
551,
552,
553,
554,
177
]
},
{
"tb": 24,
"tbk": 1,
"tl": 664466,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
555,
556,
557,
558,
559,
15,
16
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1037541,
"mb": 1024,
"mbk": 1,
"gb": 1024,
"gbk": 1,
"eb": 1024,
"ebk": 1,
"fs": [
560,
561,
562,
563,
564,
565,
566,
567,
568,
569,
570,
571,
572,
573,
574,
575,
576,
577,
578,
579,
580
]
},
{
"tb": 160,
"tbk": 1,
"tl": 4645,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
581,
582,
583,
584,
585,
586,
587,
588,
589
]
},
{
"tb": 262176,
"tbk": 3,
"tl": 4880,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
590,
591
]
},
{
"tb": 16,
"tbk": 1,
"tl": 80,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
200,
258,
304,
305,
51
]
},
{
"tb": 128,
"tbk": 1,
"tl": 388550,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
53,
390,
391,
392,
592,
593,
63,
15
]
},
{
"tb": 74752,
"tbk": 3,
"tl": 10764,
"mb": 73728,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
594,
595,
24
]
},
{
"tb": 2912,
"tbk": 28,
"tl": 409,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
596,
597,
598,
599,
600,
601
]
},
{
"tb": 8192,
"tbk": 1,
"tl": 3086,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
284,
602,
603,
479
]
},
{
"tb": 512,
"tbk": 1,
"tl": 31,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
604,
42,
51,
74
]
},
{
"tb": 128,
"tbk": 1,
"tl": 3066,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
605,
606,
607,
608,
479
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 2257,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
609,
610,
611,
612,
613,
614,
615,
616
]
},
{
"tb": 1440,
"tbk": 12,
"tl": 4450,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
617,
618,
619,
620,
621
]
},
{
"tb": 664,
"tbk": 3,
"tl": 689,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
53,
390,
391,
392,
393,
222,
622,
623
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1900,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
166,
536,
537,
538,
539,
624,
625,
220,
15
]
},
{
"tb": 3312,
"tbk": 24,
"tl": 448,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
53,
78,
79,
80,
81,
82,
83,
221,
222,
622
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 187036,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
626,
627,
628
]
},
{
"tb": 480,
"tbk": 4,
"tl": 192,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
166,
167,
168,
169,
170,
629,
430
]
},
{
"tb": 32,
"tbk": 1,
"tl": 146,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
43,
44,
45,
46,
47,
48,
630,
631,
632
]
},
{
"tb": 24,
"tbk": 1,
"tl": 499745,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
229,
230,
231,
232,
233,
234,
235,
236,
486,
63
]
},
{
"tb": 262176,
"tbk": 3,
"tl": 4828,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
633,
591,
634
]
},
{
"tb": 512,
"tbk": 2,
"tl": 87297,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
158,
159,
160,
161,
162,
163,
635
]
},
{
"tb": 54832,
"tbk": 960,
"tl": 86041,
"mb": 12736,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
179,
636,
637,
638,
639,
640,
641
]
},
{
"tb": 393216,
"tbk": 3,
"tl": 35190,
"mb": 393216,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
43,
44,
45,
46,
47,
48,
356,
299,
300,
301,
302
]
},
{
"tb": 24,
"tbk": 1,
"tl": 9,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
132,
296,
297,
298,
299,
300,
301,
335,
642,
178
]
},
{
"tb": 72,
"tbk": 2,
"tl": 259862,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
643,
644,
645,
646,
647,
648,
649,
650,
651
]
},
{
"tb": 256,
"tbk": 1,
"tl": 15792,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
244,
245,
246,
247,
652,
653,
654
]
},
{
"tb": 256,
"tbk": 1,
"tl": 15042,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
244,
245,
246,
247,
655,
14,
15
]
},
{
"tb": 2880,
"tbk": 10,
"tl": 3461,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
656,
657,
658,
659,
660,
661
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1675,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
417,
418,
419,
420,
421,
430,
220,
15
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
166,
536,
547,
548,
549,
550,
551,
552,
553,
554,
662
]
},
{
"tb": 72,
"tbk": 1,
"tl": 664902,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
663,
664,
665,
666,
667,
668,
669,
670,
671
]
},
{
"tb": 1992,
"tbk": 3,
"tl": 11199,
"mb": 1992,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
417,
418,
419,
420,
477,
174,
30,
31
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1386,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
53,
672,
673,
674,
675,
676,
677,
678,
679
]
},
{
"tb": 16,
"tbk": 1,
"tl": 104,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
258,
259,
260,
261
]
},
{
"tb": 5376,
"tbk": 28,
"tl": 9949,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
680,
681,
682,
683,
684,
685
]
},
{
"tb": 512,
"tbk": 2,
"tl": 87305,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
158,
159,
160,
161,
162,
163,
686
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
166,
536,
547,
548,
549,
550,
551,
552,
553,
687,
177
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2915,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
284,
602,
688,
483
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 764,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
166,
167,
425,
426,
427,
428,
689
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1723,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
690,
691,
692,
693,
694,
695,
696,
697,
698
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 15899,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
264,
265,
699
]
},
{
"tb": 696,
"tbk": 3,
"tl": 2775,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
53,
78,
79,
80,
201,
202,
203,
700,
701,
205
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 2340,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
166,
167,
425,
426,
427,
428,
702
]
},
{
"tb": 512,
"tbk": 1,
"tl": 2872,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
703,
704,
51,
74
]
},
{
"tb": 1048576,
"tbk": 16,
"tl": 16755951,
"mb": 1048576,
"mbk": 16,
"gb": 1048576,
"gbk": 16,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
705,
706,
707
]
},
{
"tb": 64,
"tbk": 1,
"tl": 20592,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
34,
35,
36,
708,
709
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1305,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
367,
368,
369,
710,
220
]
},
{
"tb": 32,
"tbk": 1,
"tl": 20,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
284,
711,
712,
40
]
},
{
"tb": 1392,
"tbk": 3,
"tl": 1695,
"mb": 1008,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
713,
714,
715,
716,
717,
718,
719,
720
]
},
{
"tb": 64,
"tbk": 1,
"tl": 4664,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
34,
35,
36,
721,
722
]
},
{
"tb": 96,
"tbk": 1,
"tl": 8,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
367,
368,
369,
723,
467
]
},
{
"tb": 72,
"tbk": 3,
"tl": 58,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
724,
725,
726,
727,
728,
729,
730,
731,
732
]
},
{
"tb": 512,
"tbk": 1,
"tl": 6103,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
187,
733,
734,
735,
736,
737,
738,
739
]
},
{
"tb": 1048576,
"tbk": 16,
"tl": 9877766,
"mb": 1048576,
"mbk": 16,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
43,
44,
45,
46,
47,
48,
356,
299,
300,
301,
740
]
},
{
"tb": 216,
"tbk": 1,
"tl": 1031224,
"mb": 216,
"mbk": 1,
"gb": 216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
741,
742,
743,
744,
745,
746,
747,
748,
749
]
},
{
"tb": 2097152,
"tbk": 8192,
"tl": 10687,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
43,
44,
45,
46,
47,
48,
750,
751,
752
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1365,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
53,
753,
754,
755,
756,
757,
758,
759,
760
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 75796,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
626,
627,
761
]
},
{
"tb": 24,
"tbk": 1,
"tl": 488172,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
762,
763,
195,
263,
261,
15
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 67276,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
18,
19,
20,
21,
75,
76,
764
]
},
{
"tb": 256,
"tbk": 1,
"tl": 587,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
53,
390,
391,
392,
393,
222,
223,
765
]
},
{
"tb": 24,
"tbk": 1,
"tl": 664471,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
766,
767,
768,
769,
770,
15,
16
]
},
{
"tb": 896,
"tbk": 6,
"tl": 6137,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
34,
35,
36,
771,
772
]
},
{
"tb": 513,
"tbk": 1,
"tl": 69,
"mb": 513,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
166,
536,
547,
548,
549,
773,
774,
775,
776,
777,
778
]
},
{
"tb": 480,
"tbk": 4,
"tl": 4416,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
166,
167,
168,
169,
170,
171,
779
]
},
{
"tb": 48,
"tbk": 1,
"tl": 439,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
780,
467,
15,
16
]
},
{
"tb": 448,
"tbk": 3,
"tl": 4670,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
34,
35,
36,
350,
722
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 388540,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
264,
265,
781
]
},
{
"tb": 512,
"tbk": 1,
"tl": 20,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
284,
782,
712,
40
]
},
{
"tb": 256,
"tbk": 2,
"tl": 338,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
783,
784,
785,
786,
85
]
},
{
"tb": 74752,
"tbk": 3,
"tl": 9424,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
207,
787,
788
]
},
{
"tb": 131072,
"tbk": 2,
"tl": 205539,
"mb": 131072,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
43,
44,
45,
216,
217,
218,
789,
790,
791
]
},
{
"tb": 40,
"tbk": 1,
"tl": 341966,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
792,
793,
794,
795,
796,
797,
798,
799,
800
]
},
{
"tb": 96,
"tbk": 1,
"tl": 24,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
257,
13,
14,
15,
16
]
},
{
"tb": 80,
"tbk": 1,
"tl": 1047385,
"mb": 80,
"mbk": 1,
"gb": 80,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
801,
802,
803,
804,
805,
806,
807,
808,
809
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 1030971,
"mb": 131072,
"mbk": 1,
"gb": 131072,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
264,
810,
811
]
},
{
"tb": 384,
"tbk": 2,
"tl": 71,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
812,
813,
814,
815,
816,
817,
818,
819,
820
]
},
{
"tb": 960,
"tbk": 4,
"tl": 10,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
34,
35,
36,
821,
822
]
},
{
"tb": 32,
"tbk": 1,
"tl": 123,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
823,
824,
825,
826,
827,
828
]
},
{
"tb": 16,
"tbk": 1,
"tl": 11661,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
43,
44,
45,
46,
47,
48,
485,
395,
396,
397,
398
]
},
{
"tb": 72,
"tbk": 1,
"tl": 4188,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
829,
541,
15,
16
]
},
{
"tb": 8192,
"tbk": 1,
"tl": 3531,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
166,
536,
537,
538,
539,
830,
310,
337,
541
]
},
{
"tb": 96,
"tbk": 1,
"tl": 13,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
527,
831,
832,
833,
834,
835,
836,
837,
838
]
},
{
"tb": 480,
"tbk": 4,
"tl": 189,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
166,
167,
168,
169,
170,
629,
388
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
166,
536,
547,
548,
549,
550,
551,
552,
553,
687,
662
]
},
{
"tb": 24,
"tbk": 1,
"tl": 130,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
762,
763,
195,
196,
305,
51
]
},
{
"tb": 96,
"tbk": 1,
"tl": 30,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
367,
368,
369,
839,
50
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
175,
176,
662,
74
]
},
{
"tb": 512,
"tbk": 1,
"tl": 3073,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
840,
841,
842,
843,
844,
845,
846,
847
]
},
{
"tb": 96,
"tbk": 1,
"tl": 149417,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
367,
368,
369,
848,
15
]
},
{
"tb": 96,
"tbk": 1,
"tl": 20597,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
367,
368,
369,
370,
709
]
},
{
"tb": 128,
"tbk": 1,
"tl": 6127,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
43,
44,
45,
216,
217,
218,
849,
850,
851
]
},
{
"tb": 448,
"tbk": 3,
"tl": 20603,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
34,
35,
36,
358,
709
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 819015,
"mb": 1048576,
"mbk": 1,
"gb": 1048576,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
18,
19,
20,
21,
852,
500,
853
]
},
{
"tb": 67712,
"tbk": 290,
"tl": 140801,
"mb": 14080,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
854,
855,
856,
857,
858,
859,
860,
861
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1031214,
"mb": 512,
"mbk": 1,
"gb": 512,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
187,
733,
734,
735,
736,
737,
862,
863
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1973,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
864,
865,
866,
867,
868,
869,
870,
871,
872
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 7039,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
158,
159,
160,
161,
162,
163,
873
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 13527,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
43,
44,
45,
46,
47,
48,
874,
875,
467
]
},
{
"tb": 256,
"tbk": 1,
"tl": 11,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
53,
78,
79,
80,
201,
202,
203,
876,
119,
15
]
},
{
"tb": 8388608,
"tbk": 2,
"tl": 278621,
"mb": 8388608,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
114,
115,
116,
117,
877,
878,
879,
880
]
},
{
"tb": 544,
"tbk": 3,
"tl": 32455,
"mb": 544,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
881,
882,
883,
884,
885,
886,
887,
888
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1185,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
43,
44,
45,
216,
217,
218,
889,
205,
206
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1607,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
417,
418,
419,
420,
421,
388,
337,
541
]
},
{
"tb": 8224,
"tbk": 33,
"tl": 55387,
"mb": 8192,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
43,
44,
45,
46,
47,
48,
356,
299,
300,
301,
335
]
},
{
"tb": 8192,
"tbk": 1,
"tl": 2325,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
284,
602,
890,
479
]
},
{
"tb": 216,
"tbk": 1,
"tl": 6113,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
741,
891,
892,
893,
894,
895,
896,
897,
898
]
},
{
"tb": 96,
"tbk": 1,
"tl": 1032720,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
899,
900,
901,
902,
903,
904,
905,
906,
907
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1371,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
53,
908,
909,
910,
911,
912,
913,
914,
915
]
},
{
"tb": 1920,
"tbk": 10,
"tl": 3552,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
680,
681,
682,
916,
917,
918
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 26,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
43,
44,
45,
46,
47,
48,
874,
919,
15
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1713,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
244,
245,
246,
247,
920,
348,
349
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 160341,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
158,
159,
160,
161,
162,
163,
921
]
},
{
"tb": 144,
"tbk": 1,
"tl": 7580,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
922,
923,
924,
925,
926,
927,
119,
15,
16
]
},
{
"tb": 384,
"tbk": 1,
"tl": 617544,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
132,
296,
297,
298,
299,
300,
301,
740,
928,
929
]
},
{
"tb": 24,
"tbk": 1,
"tl": 664462,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
132,
930,
931,
932,
933,
15,
16
]
},
{
"tb": 9440,
"tbk": 32,
"tl": 69603,
"mb": 9440,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
18,
19,
20,
120,
173,
478,
479
]
},
{
"tb": 61560,
"tbk": 135,
"tl": 32044,
"mb": 18696,
"mbk": 41,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
312,
313,
314,
934,
935,
936
]
},
{
"tb": 256,
"tbk": 1,
"tl": 72240,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
244,
245,
246,
247,
937,
249,
250
]
},
{
"tb": 128,
"tbk": 1,
"tl": 10988,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
53,
78,
79,
80,
81,
82,
83,
938,
303,
15
]
},
{
"tb": 32,
"tbk": 1,
"tl": 64,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
166,
536,
547,
548,
549,
773,
774,
775,
939,
777,
778
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
823,
940,
74
]
},
{
"tb": 384,
"tbk": 1,
"tl": 365911,
"mb": 384,
"mbk": 1,
"gb": 384,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
132,
941,
942,
943,
944,
945,
946,
947,
948
]
},
{
"tb": 160,
"tbk": 1,
"tl": 4700,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
949,
950,
951,
952,
40
]
},
{
"tb": 512,
"tbk": 1,
"tl": 19,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
953,
50
]
},
{
"tb": 2490368,
"tbk": 19,
"tl": 9474416,
"mb": 2490368,
"mbk": 19,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
954,
955,
956
]
},
{
"tb": 16,
"tbk": 1,
"tl": 102,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
200,
258,
259,
260,
261
]
},
{
"tb": 16,
"tbk": 1,
"tl": 82,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
258,
304,
305,
51
]
},
{
"tb": 2600,
"tbk": 14,
"tl": 64,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
53,
78,
79,
80,
81,
82,
83,
84,
430,
220
]
},
{
"tb": 224,
"tbk": 1,
"tl": 5295,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
957,
958,
959,
960,
31
]
},
{
"tb": 9440,
"tbk": 32,
"tl": 83545,
"mb": 9440,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
18,
19,
20,
120,
173,
482,
483
]
},
{
"tb": 2600,
"tbk": 14,
"tl": 62,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
53,
78,
79,
80,
81,
82,
83,
84,
388,
337
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1705,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
961,
962,
963,
964,
965,
966,
967,
968,
969
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 821833,
"mb": 8388608,
"mbk": 1,
"gb": 8388608,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
114,
115,
116,
117,
877,
970,
971,
972
]
},
{
"tb": 8,
"tbk": 1,
"tl": 341941,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
326,
973,
974,
975,
976,
977,
978,
979,
980
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 3507,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
264,
265,
981
]
},
{
"tb": 96,
"tbk": 1,
"tl": 35,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
367,
368,
369,
982,
50
]
},
{
"tb": 89088,
"tbk": 3,
"tl": 1217,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
158,
159,
160,
161,
162,
163,
983
]
},
{
"tb": 512,
"tbk": 1,
"tl": 10,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
984,
985,
986,
987,
988,
989,
990,
991
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 7058,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
158,
159,
160,
161,
162,
163,
992
]
},
{
"tb": 576,
"tbk": 2,
"tl": 51,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
993,
994,
995,
996,
997,
998,
999,
1000,
1001
]
},
{
"tb": 32,
"tbk": 1,
"tl": 149406,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
166,
167,
168,
169,
170,
1002,
15
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1358,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
53,
1003,
1004,
1005,
1006,
1007,
1008,
1009,
1010
]
},
{
"tb": 1968,
"tbk": 2,
"tl": 55,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1011,
1012,
1013,
1014,
1015,
1016
]
},
{
"tb": 128,
"tbk": 1,
"tl": 6035,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
18,
19,
20,
120,
1017,
122,
40
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 1031081,
"mb": 32768,
"mbk": 1,
"gb": 32768,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
264,
1018,
1019
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1032710,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
32,
101,
102,
103,
104,
105,
106,
107,
108,
1020,
1021
]
},
{
"tb": 64,
"tbk": 1,
"tl": 141,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
34,
35,
36,
721,
351
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1810,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
43,
44,
45,
216,
217,
218,
1022,
40,
74
]
},
{
"tb": 320,
"tbk": 2,
"tl": 976104,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
1023,
1024,
1025,
1026,
442
]
},
{
"tb": 512,
"tbk": 1,
"tl": 11721,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
1027,
1028,
1029,
1030,
15
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 23660,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
264,
265,
1031
]
},
{
"tb": 64,
"tbk": 1,
"tl": 4440,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
34,
35,
36,
708,
359
]
},
{
"tb": 256,
"tbk": 1,
"tl": 109,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
158,
159,
160,
161,
162,
163,
1032
]
},
{
"tb": 1440,
"tbk": 12,
"tl": 2338,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
617,
618,
619,
620,
1033
]
},
{
"tb": 4968,
"tbk": 9,
"tl": 2824,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1034,
1035,
1036,
1037,
1038,
1039
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4708,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
43,
44,
45,
46,
47,
48,
874,
1040,
40
]
},
{
"tb": 7728,
"tbk": 14,
"tl": 2909,
"mb": 2760,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1034,
1035,
1036,
1041,
1042,
1043
]
},
{
"tb": 384,
"tbk": 1,
"tl": 1047361,
"mb": 384,
"mbk": 1,
"gb": 384,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
132,
1044,
1045,
1046,
1047,
1048,
1049,
1050,
1051
]
},
{
"tb": 1440,
"tbk": 12,
"tl": 317,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
166,
167,
168,
169,
170,
629,
85
]
},
{
"tb": 456,
"tbk": 2,
"tl": 995884,
"mb": 456,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
132,
1052,
1053,
1054,
1055,
1056,
1057,
1058,
1059
]
},
{
"tb": 11136,
"tbk": 3,
"tl": 1772,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
114,
1060,
1061,
1062,
1063,
1064,
1065,
1066,
1067
]
},
{
"tb": 256,
"tbk": 1,
"tl": 149,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
43,
44,
45,
46,
47,
48,
1068,
631,
632
]
},
{
"tb": 598016,
"tbk": 3,
"tl": 20634,
"mb": 598016,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
1069,
1070,
24
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1940,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
132,
1071,
1072,
1073,
1074,
1075,
1076,
1077,
1078
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 15931,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
43,
44,
45,
216,
217,
218,
1079,
1080,
15
]
},
{
"tb": 1040,
"tbk": 10,
"tl": 272,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
596,
597,
598,
1081,
1082,
1083
]
},
{
"tb": 512,
"tbk": 1,
"tl": 18,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
1084,
42,
51,
74
]
},
{
"tb": 8,
"tbk": 1,
"tl": 14,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
53,
1085,
1086,
1087,
1088,
1089,
1090,
1091,
1092
]
},
{
"tb": 96,
"tbk": 1,
"tl": 1798,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
1093,
1094,
1095,
1096,
337
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1032643,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
1097,
1098,
1099,
1100,
1101,
1102,
178,
15
]
}
],
"ftbl": [
"[root]",
"0x598f7e3063b9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x598f7e1d84ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x598f7e2a57d5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e2a57d5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e2a57d5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e20fae7: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x598f7e1a99fe: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x598f7e26ab6c: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x598f7e388b73: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x598f7e305847: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x598f7e1a7245: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x598f7e1a2247: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:176:13)",
"0x598f7e280518: winter_prover::trace::Trace::validate (src/trace/mod.rs:123:26)",
"0x598f7e232578: winter_prover::Prover::generate_proof (prover/src/lib.rs:379:17)",
"0x598f7e2412ee: winter_prover::Prover::prove (prover/src/lib.rs:175:37)",
"0x598f7e1a127c: winterfell::main (winterfell/src/main.rs:54:17)",
"0x598f7e1cbdec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x598f7e2a5b95: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e2a5b95: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e2a5b95: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e20fa57: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x598f7e376472: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x598f7e1b299f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x598f7e1b7bc6: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x598f7e176c84: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e176c84: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e176c84: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x598f7e2dac56: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x598f7e1c2b3e: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x598f7e1c6040: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x598f7e278104: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x598f7e53ef79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x598f7e53d709: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x598f7e203fe1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x598f7e20d0d8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x598f7e2cb67d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x598f7e37cd94: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x598f7e38895d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x598f7e1c2b7f: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x598f7e14750b: winter_verifier::verify (verifier/src/lib.rs:109:19)",
"0x598f7e154eb1: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x598f7e143abc: winter_verifier::perform_verification (verifier/src/lib.rs:317:25)",
"0x598f7e255e08: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e255e08: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e255e08: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x598f7e2dbb85: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x598f7e2dbb85: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x598f7e2dbb85: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x598f7e15021f: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x598f7e143a15: winter_verifier::perform_verification (verifier/src/lib.rs:311:25)",
"0x598f7e1475da: winter_verifier::verify (verifier/src/lib.rs:111:21)",
"0x598f7e501a99: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x598f7e501c0a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x598f7e296b9d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e296b9d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e296b9d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e296b9d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2ed2aa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2ea394: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e318b5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e2775c3: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x598f7e1688b2: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:28)",
"0x598f7e232266: winter_prover::Prover::generate_proof (prover/src/lib.rs:417:21)",
"0x598f7e2913bf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e2913bf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e2913bf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e2913bf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2ee6cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2ebe45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e31852d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e1504ab: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x598f7e271e73: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x598f7e277ad4: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x598f7e1a1822: winterfell::main (winterfell/src/main.rs:71:11)",
"0x598f7e1ae259: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x598f7e1af739: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x598f7e1b29b6: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x598f7e4f561c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e4f561c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e4f561c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x598f7e2dc2d9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x598f7e2dc2d9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x598f7e2dc2d9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x598f7e1aedbc: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x598f7e1b13c0: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x598f7e1b60bd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x598f7e29095f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e29095f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e29095f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e29095f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2eea4d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2eae15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e318f5d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e38e7af: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x598f7e1214f5: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x598f7e24e55c: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x598f7e2fc129: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x598f7e24db36: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x598f7e251296: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x598f7e22abcf: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:369:9)",
"0x598f7e53d9ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x598f7e53f04c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e53f04c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e53f04c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x598f7e53cc7c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x598f7e53cc7c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x598f7e53cc7c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x598f7e538ece: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x598f7e277370: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x598f7e1ef511: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x598f7e20da08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x598f7e2cb40e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x598f7e1b2c69: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x598f7e1d269c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x598f7e2a5af5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e2a5af5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e2a5af5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e1b1499: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x598f7e23119c: winter_prover::Prover::generate_proof (prover/src/lib.rs:600:25)",
"0x598f7e176785: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x598f7e284997: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x598f7e277970: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x598f7e1d049c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x598f7e28cb4f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e28cb4f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e28cb4f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e28cb4f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2d803e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x598f7e2ec035: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e3190ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e1a174e: winterfell::main (winterfell/src/main.rs:65:26)",
"0x598f7e1ce7bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x598f7e28918f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e28918f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e28918f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e28918f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2edccd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2eacd7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e31850d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e30daa0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x598f7e1506df: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x598f7e2990ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e2990ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e2990ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e2990ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2ed44d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2e9625: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e31813d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e121d28: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x598f7e5049e9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e5049e9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e5049e9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e5049e9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x598f7e504e2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e504df7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e504fce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e5074c9: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x598f7e53cadc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x598f7e53bd6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x598f7e53bae8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x598f7e53bae8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x598f7e53b124: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x598f7e538d43: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x598f7e13224c: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x598f7e1aea4c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x598f7e4ca819: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x598f7e4c92e9: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x598f7e3d8840: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x598f7e3d8aa9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x598f7e3e8111: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x598f7e1ad7dc: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x598f7e1b98d8: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x598f7e17fcc7: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x598f7e1c2e35: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x598f7e37614c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x598f7e13fe0c: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x598f7e1bb2db: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x598f7e22df02: winter_prover::Prover::generate_proof (prover/src/lib.rs:233:27)",
"0x598f7e53dea0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x598f7e53e0d9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x598f7e53e3d2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x598f7e53f159: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x598f7e4f501a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x598f7e306c5a: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x598f7e37a6a7: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x598f7e25d889: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x598f7e1cbb4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x598f7e22a012: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e22a012: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e22a012: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x598f7e2dcb05: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x598f7e2dcb05: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x598f7e2dcb05: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x598f7e12ab95: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x598f7e22b010: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:354:9)",
"0x598f7e30ae16: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:26:25)",
"0x598f7e390de9: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x598f7e1431ac: winter_verifier::perform_verification (verifier/src/lib.rs:275:24)",
"0x598f7e1506fe: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x598f7e1a2330: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:177:13)",
"0x598f7e4f55cc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x598f7e4f55cc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x598f7e4f55cc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x598f7e387d9d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x598f7e3915e9: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x598f7e143c03: winter_verifier::perform_verification (verifier/src/lib.rs:323:5)",
"0x598f7e1aaec7: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x598f7e137eae: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x598f7e13ba1c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x598f7e121388: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x598f7e1f08d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x598f7e20d318: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x598f7e2ce12d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x598f7e137af2: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x598f7e363ac5: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x598f7e25645b: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x598f7e25645b: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x598f7e25645b: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x598f7e249db3: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x598f7e23130a: winter_prover::Prover::generate_proof (prover/src/lib.rs:608:34)",
"0x598f7e180abb: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x598f7e1af46d: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x598f7e2764ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x598f7e207b21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x598f7e20d498: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x598f7e2cf7ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x598f7e1c0db7: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x598f7e24dbae: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x598f7e1d506c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x598f7e255f38: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e255f38: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e255f38: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x598f7e2dc7c5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x598f7e2dc7c5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x598f7e2dc7c5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x598f7e1228e2: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x598f7e21c028: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:83:31)",
"0x598f7e3227af: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x598f7e1f17a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x598f7e20d108: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x598f7e2cddae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x598f7e1441eb: winter_verifier::perform_verification (verifier/src/lib.rs:184:9)",
"0x598f7e16ae5c: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x598f7e256511: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e256511: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e256511: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x598f7e2dac80: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x598f7e16558a: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:155:31)",
"0x598f7e168e25: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:128:17)",
"0x598f7e363c6e: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x598f7e50412b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x598f7e504061: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x598f7e4fd46b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x598f7e4f7b71: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x598f7e4f8307: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x598f7e50790b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x598f7e1a221b: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:175:9)",
"0x598f7e22ab72: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:371:13)",
"0x598f7e21cadf: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:41:22)",
"0x598f7e167b39: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:36)",
"0x598f7e2321b5: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:21)",
"0x598f7e12acba: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x598f7e167a9c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:51:13)",
"0x598f7e1a9e2f: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x598f7e379338: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x598f7e1bd222: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x598f7e1d40bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x598f7e2856af: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e2856af: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e2856af: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e2856af: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2da705: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x598f7e2eb50a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e317b3d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e13e891: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x598f7e28bac3: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e28bac3: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e28bac3: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e28bac3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2edbd4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2ea29a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e318654: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e1a0d51: winterfell::main (winterfell/src/main.rs:22:32)",
"0x598f7e254485: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x598f7e1c6e4c: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x598f7e277f37: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x598f7e1cfa1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x598f7e2877f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e2877f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e2877f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e2877f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2ed34a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2e93a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e31913a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e23ef12: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:640:42)",
"0x598f7e2a4a22: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e2a4a22: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e2a4a22: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x598f7e2dbd25: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x598f7e2dbd25: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x598f7e2dbd25: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x598f7e135238: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x598f7e22ee23: winter_prover::Prover::generate_proof (prover/src/lib.rs:423:33)",
"0x598f7e30b2cb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:64:9)",
"0x598f7e143fcc: winter_verifier::perform_verification (verifier/src/lib.rs:225:43)",
"0x598f7e41a0b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x598f7e41cd69: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x598f7e424322: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x598f7e17865f: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x598f7e148845: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x598f7e26a8a2: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x598f7e24772b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x598f7e246f9d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x598f7e3ba69a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x598f7e3951e9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x598f7e2ff15b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x598f7e1756eb: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x598f7e29ed1f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e29ed1f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e29ed1f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e29ed1f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2ed61d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2e94f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e31834d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e1387f7: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x598f7e1d144a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x598f7e286539: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e286539: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e286539: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e286539: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2edb7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2ebb14: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e31944a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e22e4ea: winter_prover::Prover::generate_proof (prover/src/lib.rs:272:43)",
"0x598f7e2a30e6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x598f7e1486db: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x598f7e14b4b0: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x598f7e1db17c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x598f7e29deef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e29deef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e29deef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e29deef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2ee27d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2e9c65: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e2fa9bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e22e033: winter_prover::Prover::generate_proof (prover/src/lib.rs:248:41)",
"0x598f7e2701b0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x598f7e147038: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:216:32)",
"0x598f7e326e5f: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x598f7e22da42: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:512:13)",
"0x598f7e1ba6b2: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x598f7e27f131: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x598f7e253853: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x598f7e306832: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x598f7e26abbd: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x598f7e2a4d83: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x598f7e1352c5: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x598f7e22c3d4: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:541:17)",
"0x598f7e142fc9: winter_verifier::perform_verification (verifier/src/lib.rs:266:61)",
"0x598f7e117a3f: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:230:34)",
"0x598f7e320026: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x598f7e3463a7: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x598f7e2a59b5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e2a59b5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e2a59b5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e22e909: winter_prover::Prover::generate_proof (prover/src/lib.rs:309:32)",
"0x598f7e1ed281: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x598f7e20da38: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x598f7e2ce33e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x598f7e22c350: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:543:13)",
"0x598f7e276cf0: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x598f7e1d530c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x598f7e2a4328: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e2a4328: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e2a4328: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x598f7e2dc205: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x598f7e2dc205: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x598f7e2dc205: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x598f7e22fea3: winter_prover::Prover::generate_proof (prover/src/lib.rs:510:39)",
"0x598f7e296e94: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e296e94: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e296e94: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e296e94: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x598f7e2ed5da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2ebec4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e318c5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e17e46e: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x598f7e14877b: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x598f7e1b7d52: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x598f7e2a5646: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e2a5646: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e2a5646: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e180882: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x598f7e1437a8: winter_verifier::perform_verification (verifier/src/lib.rs:306:42)",
"0x598f7e122750: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x598f7e2dbdf5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x598f7e2dbdf5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x598f7e2dbdf5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x598f7e178999: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x598f7e24907b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x598f7e24628d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x598f7e3ba2ea: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x598f7e395009: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x598f7e2fea75: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x598f7e175598: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x598f7e13f41f: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x598f7e13da15: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x598f7e1d16dc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x598f7e29344f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e29344f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e29344f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e29344f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2ee04d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2e8f75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e31941d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e22fdcf: winter_prover::Prover::generate_proof (prover/src/lib.rs:501:51)",
"0x598f7e1d7a6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x598f7e2a5875: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e2a5875: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e2a5875: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e1aeaaf: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x598f7e16f081: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x598f7e16de86: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x598f7e23f12f: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:655:31)",
"0x598f7e4c7700: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x598f7e4c7939: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x598f7e4c7132: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x598f7e18017c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x598f7e1c23b5: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x598f7e249b91: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x598f7e181c4b: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x598f7e29fd2f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e29fd2f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e29fd2f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e29fd2f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2ed56d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2ea125: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e31898d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e387d29: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x598f7e1b5c29: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x598f7e21ed5a: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:170:36)",
"0x598f7e21d34f: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:55:17)",
"0x598f7e2893a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e2893a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e2893a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e2893a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2ee48a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2e9fc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e318a3a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e22dd8f: winter_prover::Prover::generate_proof (prover/src/lib.rs:214:39)",
"0x598f7e231e70: winter_prover::Prover::generate_proof (prover/src/lib.rs:449:13)",
"0x598f7e22575a: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x598f7e309852: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:503:32)",
"0x598f7e326dc6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x598f7e34493a: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x598f7e30ee27: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x598f7e319a22: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x598f7e28becf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e28becf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e28becf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e28becf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2eed5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2ebda7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e318edd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e1a10e6: winterfell::main (winterfell/src/main.rs:38:27)",
"0x598f7e25b4ab: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x598f7e23002d: winter_prover::Prover::generate_proof (prover/src/lib.rs:524:9)",
"0x598f7e1c62b9: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x598f7e29c40d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e29c40d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e29c40d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e29c40d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2ede4a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2eb6e4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e317d1a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e271ba1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x598f7e17fa4c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x598f7e17af66: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x598f7e271d0d: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x598f7e278e5f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x598f7e26a921: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x598f7e17e547: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x598f7e27e3a7: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x598f7e277d54: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x598f7e1228f5: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x598f7e168973: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:33)",
"0x598f7e16a4bd: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x598f7e240eb8: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:716:26)",
"0x598f7e22f931: winter_prover::Prover::generate_proof (prover/src/lib.rs:482:37)",
"0x598f7e28f4cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e28f4cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e28f4cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e28f4cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2ee0dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2eb3d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e317a6d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e22dcd2: winter_prover::Prover::generate_proof (prover/src/lib.rs:210:38)",
"0x598f7e16b9d6: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x598f7e16ae23: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x598f7e23f6ee: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:669:26)",
"0x598f7e1daedc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x598f7e29d25f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e29d25f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e29d25f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e29d25f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2da18b: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x598f7e2ea8d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e31856d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e22e7f7: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:36)",
"0x598f7e1ccd9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x598f7e295e5f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e295e5f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e295e5f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e295e5f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2ed3cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2eae87: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e317e8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e21cbcd: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:51:26)",
"0x598f7e288b59: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e288b59: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e288b59: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e288b59: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2ed6ba: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2eb9a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e317eea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e22fe8c: winter_prover::Prover::generate_proof (prover/src/lib.rs:505:52)",
"0x598f7e1d1c1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x598f7e1223e2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e1223e2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e1223e2: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x598f7e13524b: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x598f7e12332d: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x598f7e148f56: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x598f7e325eb6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x598f7e34afbd: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x598f7e4c962a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x598f7e420f36: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e420f36: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e420f36: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e178517: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x598f7e231217: winter_prover::Prover::generate_proof (prover/src/lib.rs:603:29)",
"0x598f7e1c2d26: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x598f7e1f3a31: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x598f7e20d048: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x598f7e2d055e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x598f7e1443b2: winter_verifier::perform_verification (verifier/src/lib.rs:179:9)",
"0x598f7e4cc32c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e4cc32c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e4cc32c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x598f7e49b69c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x598f7e49b69c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x598f7e49b69c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x598f7e140084: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x598f7e13fdce: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x598f7e1d8ccc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x598f7e2a5c35: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e2a5c35: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e2a5c35: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e22e88e: winter_prover::Prover::generate_proof (prover/src/lib.rs:307:44)",
"0x598f7e0efd82: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x598f7e0efd82: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x598f7e0efd82: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e0efd82: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e0efd82: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e0efd82: std::io::buffered::bufwriter::BufWriter<W>::with_capacity (io/buffered/bufwriter.rs:115:33)",
"0x598f7e0efd82: std::io::buffered::linewriter::LineWriter<W>::with_capacity (io/buffered/linewriter.rs:109:29)",
"0x598f7e0efd82: std::io::buffered::linewriter::LineWriter<W>::new (io/buffered/linewriter.rs:89:9)",
"0x598f7e0efd82: std::io::stdio::stdout::{{closure}} (src/io/stdio.rs:618:62)",
"0x598f7e0efd82: std::sync::once_lock::OnceLock<T>::get_or_init::{{closure}} (src/sync/once_lock.rs:250:50)",
"0x598f7e0efd82: std::sync::once_lock::OnceLock<T>::initialize::{{closure}} (src/sync/once_lock.rs:376:19)",
"0x598f7e0efd82: std::sync::once::Once::call_once_force::{{closure}} (src/sync/once.rs:208:40)",
"0x598f7e0efd82: std::sys_common::once::futex::Once::call (sys_common/once/futex.rs:124:21)",
"0x598f7e0eeeca: std::sync::once::Once::call_once_force (src/sync/once.rs:208:9)",
"0x598f7e0eeeca: std::sync::once_lock::OnceLock<T>::initialize (src/sync/once_lock.rs:375:9)",
"0x598f7e5591c5: std::sync::once_lock::OnceLock<T>::get_or_try_init (src/sync/once_lock.rs:298:9)",
"0x598f7e5591c5: std::sync::once_lock::OnceLock<T>::get_or_init (src/sync/once_lock.rs:250:15)",
"0x598f7e5591c5: std::io::stdio::stdout (src/io/stdio.rs:618:14)",
"0x598f7e5591c5: std::io::stdio::print_to (src/io/stdio.rs:1020:21)",
"0x598f7e5591c5: std::io::stdio::_print (src/io/stdio.rs:1097:5)",
"0x598f7e1a103a: winterfell::main (winterfell/src/main.rs:36:5)",
"0x598f7e1d01fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x598f7e292622: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e292622: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e292622: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e292622: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x598f7e2eddaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2e9484: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e3068ea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e275d67: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x598f7e1382ce: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x598f7e135ac4: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x598f7e13ba78: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x598f7e168be1: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:135:9)",
"0x598f7e1bd2d3: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x598f7e1b2afb: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x598f7e5042db: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x598f7e503fb1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x598f7e4fd2ab: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x598f7e4f9f3e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x598f7e4fb400: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x598f7e4fabf8: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x598f7e243efa: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x598f7e17b31c: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x598f7e154ca0: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x598f7e1ea611: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x598f7e20d288: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x598f7e2cbc0b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x598f7e17b3c9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x598f7e291b04: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e291b04: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e291b04: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e291b04: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x598f7e2eeeaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2ead64: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e3190da: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e17ae8d: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x598f7e5020f0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x598f7e4f6669: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x598f7e4f5e51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x598f7e4f5950: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x598f7e3885ed: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x598f7e26f2d4: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x598f7e38878d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x598f7e17cdac: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x598f7e249d4a: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x598f7e16d30f: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x598f7e16c506: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x598f7e30a2f8: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:651:17)",
"0x598f7e1af2b7: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x598f7e32ad85: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x598f7e32ae16: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x598f7e143edf: winter_verifier::perform_verification (verifier/src/lib.rs:228:13)",
"0x598f7e1381bf: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x598f7e139f9d: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x598f7e11589d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x598f7e53e108: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x598f7e53e4ca: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x598f7e53e4ca: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x598f7e53e26e: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x598f7e53e26e: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x598f7e53e35d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x598f7e1bb2f2: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x598f7e1d3b7c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x598f7e28d19f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e28d19f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e28d19f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e28d19f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2ee54d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2eb355: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e318ddd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e1691b1: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x598f7e27f55d: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:243:25)",
"0x598f7e1a1d94: winterfell::build_do_work_trace (winterfell/src/main.rs:91:5)",
"0x598f7e24160b: winterfell::main::{{closure}} (winterfell/src/main.rs:30:23)",
"0x598f7e2809a5: winter_prover::trace::Trace::validate (src/trace/mod.rs:179:13)",
"0x598f7e50448b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x598f7e503e51: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x598f7e4fd54b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x598f7e4f7c41: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x598f7e4f82c7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x598f7e50795b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x598f7e1471dd: winter_verifier::verify (verifier/src/lib.rs:96:32)",
"0x598f7e1d7fac: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x598f7e28d8df: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e28d8df: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e28d8df: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e28d8df: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2d8b4e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x598f7e2eb415: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e3192ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e14a4f7: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x598f7e294ecd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e294ecd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e294ecd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e294ecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2ee09a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2e9544: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e31873a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e27750b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x598f7e50463b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x598f7e503f01: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x598f7e4fd38b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x598f7e4fa04e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x598f7e4fb9ec: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x598f7e4fa55a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x598f7e11588c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x598f7e13fd9a: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x598f7e17e356: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x598f7e17ceb4: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x598f7e1cd03c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x598f7e28f909: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e28f909: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e28f909: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e28f909: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2eee3a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2ea934: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e317a2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e142ba2: winter_verifier::perform_verification (verifier/src/lib.rs:214:41)",
"0x598f7e378b9b: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x598f7e4f52c6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x598f7e3886ca: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x598f7e17831d: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x598f7e14d7be: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x598f7e143b34: winter_verifier::perform_verification (verifier/src/lib.rs:319:28)",
"0x598f7e2801b0: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:140:51)",
"0x598f7e321476: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x598f7e11ffc1: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x598f7e22c1b5: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:547:13)",
"0x598f7e1ba1b6: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x598f7e249dca: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x598f7e124126: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x598f7e278c15: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x598f7e2a1e6f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e2a1e6f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e2a1e6f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e2a1e6f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2edecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2e9825: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e318afd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e388c5a: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x598f7e22d978: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:517:13)",
"0x598f7e1428e5: winter_verifier::perform_verification (verifier/src/lib.rs:185:13)",
"0x598f7e25b5c3: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x598f7e1cf23c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x598f7e289bd9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e289bd9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e289bd9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e289bd9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2ee00a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2ebc44: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e318c2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e1374b2: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x598f7e22a4c4: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e22a4c4: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e22a4c4: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x598f7e2dabf6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x598f7e1a20ad: <winterfell::WorkAir as winter_air::air::Air>::new (winterfell/src/main.rs:151:23)",
"0x598f7e14803b: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:102:85)",
"0x598f7e324a6e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x598f7e11a8cd: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x598f7e1cdd4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x598f7e29386f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e29386f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e29386f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e29386f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2ee61d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2e9285: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e317c1d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e22deb3: winter_prover::Prover::generate_proof (prover/src/lib.rs:222:20)",
"0x598f7e12a106: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x598f7e166ac9: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:290:18)",
"0x598f7e16588e: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:173:30)",
"0x598f7e28e58d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e28e58d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e28e58d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e28e58d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2edd7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2e9d34: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e31830a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e277733: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x598f7e240acc: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:701:36)",
"0x598f7e121d37: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x598f7e12ab7f: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x598f7e16a572: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x598f7e143636: winter_verifier::perform_verification (verifier/src/lib.rs:305:9)",
"0x598f7e1d99ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x598f7e2a5a55: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e2a5a55: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e2a5a55: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e22e877: winter_prover::Prover::generate_proof (prover/src/lib.rs:306:39)",
"0x598f7e3064e2: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x598f7e13fc98: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x598f7e4259e9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x598f7e4259e9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x598f7e4259e9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x598f7e24609a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x598f7e124a26: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x598f7e278714: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x598f7e1434f7: winter_verifier::perform_verification (verifier/src/lib.rs:298:27)",
"0x598f7e25b347: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x598f7e13badb: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x598f7e123f63: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x598f7e20a2a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x598f7e20da98: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x598f7e2cd91b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x598f7e1af0fa: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x598f7e1bc003: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x598f7e1bd210: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x598f7e30db0a: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x598f7e3247a8: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x598f7e1a9114: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x598f7e1d23fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x598f7e291edf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e291edf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e291edf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e291edf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2ee88d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2ea0c5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e3179dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e23f08b: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:648:34)",
"0x598f7e1cc5cc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x598f7e28faff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e28faff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e28faff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e28faff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2ed4ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2ea337: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e318e8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e1a0edf: winterfell::main (winterfell/src/main.rs:28:26)",
"0x598f7e176428: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x598f7e22e132: winter_prover::Prover::generate_proof (prover/src/lib.rs:262:22)",
"0x598f7e1d8f6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x598f7e29e22b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e29e22b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e29e22b: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e29e22b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x598f7e2eeaad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2eb955: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e20f16d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e24f618: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x598f7e123461: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x598f7e1ba03f: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x598f7e1a1e36: <winterfell::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (winterfell/src/main.rs:133:9)",
"0x598f7e3087a8: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:216:31)",
"0x598f7e326d36: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x598f7e344bd0: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x598f7e312f66: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x598f7e31a8f6: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x598f7e14b41d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x598f7e17807a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x598f7e2854b9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e2854b9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e2854b9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e2854b9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2ed8ea: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2ea4f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e31839a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e21bfe8: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:83:9)",
"0x598f7e151325: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x598f7e295a3f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e295a3f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e295a3f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e295a3f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2eeb1d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2e9bb7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e3179bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e155df7: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x598f7e231e30: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:13)",
"0x598f7e1b7e92: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x598f7e1b7b2c: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x598f7e230b02: winter_prover::Prover::generate_proof (prover/src/lib.rs:571:9)",
"0x598f7e16ad9a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x598f7e22e511: winter_prover::Prover::generate_proof (prover/src/lib.rs:274:13)",
"0x598f7e28a69a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e28a69a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e28a69a: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e28a69a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x598f7e2ed4cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2eba1a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e375f4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e1af243: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x598f7e309f36: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:226:17)",
"0x598f7e32419e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x598f7e1ce52a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x598f7e286949: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e286949: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e286949: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e286949: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2ee96a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2ea874: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e318b8a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e14b40e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x598f7e25b0f5: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x598f7e2a30a6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x598f7e25acbe: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x598f7e1b5c0e: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x598f7e20fc07: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x598f7e132237: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x598f7e169a29: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x598f7e3271d6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x598f7e298acf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e298acf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e298acf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e298acf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2eda5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2eac45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e318e4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e1171cf: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:283:9)",
"0x598f7e387e04: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x598f7e17ab8e: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x598f7e28959f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e28959f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e28959f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e28959f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2d90d6: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x598f7e2ebbc5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e31930d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e1473a8: winter_verifier::verify (verifier/src/lib.rs:102:24)",
"0x598f7e1d2e6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x598f7e28db29: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e28db29: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e28db29: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e28db29: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2edcaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2ec084: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e31819a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e1bb24b: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x598f7e2a09dd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e2a09dd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e2a09dd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e2a09dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2edc7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2eaff4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e31886a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e27767b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x598f7e4f6e3d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x598f7e502748: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x598f7e5060a7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x598f7e22f4d0: winter_prover::Prover::generate_proof (prover/src/lib.rs:452:35)",
"0x598f7e2701ce: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x598f7e139a93: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x598f7e4f4c69: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x598f7e4f1c1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x598f7e4eedb6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e4eedb6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e4eedb6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e1b5b68: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x598f7e119036: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x598f7e309c48: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:300:57)",
"0x598f7e2a53c5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e2a53c5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e2a53c5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e22e8cd: winter_prover::Prover::generate_proof (prover/src/lib.rs:308:37)",
"0x598f7e3a7f7b: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x598f7e3b21a9: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x598f7e3ac416: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x598f7e1655e4: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:156:33)",
"0x598f7e135314: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x598f7e2460af: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x598f7e147330: winter_verifier::verify (verifier/src/lib.rs:98:38)",
"0x598f7e29babf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e29babf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e29babf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e29babf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2eee7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2eb925: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e3185dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e117788: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:228:23)",
"0x598f7e20ca21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x598f7e20ce08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x598f7e2cf42e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x598f7e278f07: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x598f7e1503b7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x598f7e137440: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x598f7e31fdb6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x598f7e11fb11: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x598f7e1fa6d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x598f7e20d7c8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x598f7e2cc67e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x598f7e1c6216: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x598f7e1d920c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x598f7e292e49: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e292e49: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e292e49: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e292e49: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2ed93a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2ea7f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e31801a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e142c5f: winter_verifier::perform_verification (verifier/src/lib.rs:218:40)",
"0x598f7e16d9bd: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x598f7e169c90: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x598f7e16c614: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x598f7e29f4f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e29f4f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e29f4f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e29f4f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2ed9da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2eabc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e317eba: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e23efcf: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:644:36)",
"0x598f7e139d08: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x598f7e1512d7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x598f7e26a82f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x598f7e28c4ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e28c4ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e28c4ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e28c4ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2eed3d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2e95f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e31921d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e154ff2: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x598f7e25b0d2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x598f7e1cf77c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x598f7e293bf2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e293bf2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e293bf2: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e293bf2: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x598f7e2eeb7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2e9c35: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e3178cd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e24da6a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x598f7e231e8b: winter_prover::Prover::generate_proof (prover/src/lib.rs:450:13)",
"0x598f7e29705d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e29705d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e29705d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e29705d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2eddda: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2eade4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e3181ca: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e2777eb: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x598f7e247a8b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x598f7e246e3d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x598f7e3ba78a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x598f7e3952a9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x598f7e2fdbc8: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x598f7e2fc195: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x598f7e284b50: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x598f7e3784f9: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x598f7e17637b: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x598f7e14029f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x598f7e1bbdf3: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x598f7e27876e: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x598f7e20c041: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x598f7e20d018: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x598f7e2cb8be: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x598f7e21ee9d: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:175:17)",
"0x598f7e1e5c01: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x598f7e20d408: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x598f7e2cfc54: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x598f7e232285: winter_prover::Prover::generate_proof (prover/src/lib.rs:418:17)",
"0x598f7e1176e8: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:227:28)",
"0x598f7e30af8c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:40:30)",
"0x598f7e1b5e24: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x598f7e24880b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x598f7e246a1d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x598f7e3bac2a: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x598f7e399c7d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x598f7e39c613: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x598f7e1ad237: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x598f7e278d01: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x598f7e3b355d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x598f7e3b9a25: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x598f7e3ac86e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x598f7e2a036f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e2a036f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e2a036f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e2a036f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2ed89d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2eb895: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e318bdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e27ffe2: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:140:32)",
"0x598f7e286f8f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e286f8f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e286f8f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e286f8f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2ee06d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2e9f75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e31779d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e1373a8: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x598f7e28870f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e28870f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e28870f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e28870f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2ed27d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2eba55: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e3178ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e388ac4: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x598f7e32ad72: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x598f7e21218f: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x598f7e1b293d: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x598f7e28c2ef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e28c2ef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e28c2ef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e28c2ef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2ee4cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2ead15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e3177dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e1488d5: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x598f7e378b89: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x598f7e2306b8: winter_prover::Prover::generate_proof (prover/src/lib.rs:558:13)",
"0x598f7e4f6e9d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x598f7e50242b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x598f7e5061e3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x598f7e154cb7: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x598f7e288033: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e288033: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e288033: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x598f7e288033: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x598f7e2ee9ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x598f7e2eb545: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x598f7e318fdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x598f7e22e6db: winter_prover::Prover::generate_proof (prover/src/lib.rs:293:23)",
"0x598f7e202c21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x598f7e20cdd8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x598f7e2ce6ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x598f7e1488ec: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x598f7e1cc32c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x598f7e124aea: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x598f7e124aea: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x598f7e124aea: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x598f7e2daca6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x598f7e1bb508: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)"
]
}