{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell",
"pid": 28155,
"tg": 285830,
"te": 839143,
"pps": [
{
"tb": 72,
"tbk": 3,
"tl": 18902,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 34358,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
15,
16,
17,
18,
19,
20,
21,
22,
23
]
},
{
"tb": 96,
"tbk": 1,
"tl": 12789,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
26,
27,
28,
29,
30
]
},
{
"tb": 16,
"tbk": 1,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
31,
32,
33,
34,
35,
36,
37,
38,
39,
40
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2347,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
41,
42,
43,
44,
45,
46,
47
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 7497,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
41,
42,
43,
48,
49,
50,
51
]
},
{
"tb": 96,
"tbk": 1,
"tl": 4568,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
52,
53,
54,
55,
56,
57,
58,
40
]
},
{
"tb": 73728,
"tbk": 2,
"tl": 8436,
"mb": 73728,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
52,
53,
54,
55,
59,
60,
61,
62
]
},
{
"tb": 8,
"tbk": 1,
"tl": 17,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71,
72
]
},
{
"tb": 1536,
"tbk": 8,
"tl": 2652,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
73,
74,
75,
76,
77,
78
]
},
{
"tb": 224,
"tbk": 1,
"tl": 3877,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
79,
80,
81,
82,
83
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1044,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
84,
85,
86,
87,
88,
89,
90,
91
]
},
{
"tb": 32,
"tbk": 1,
"tl": 49,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
96,
97,
98,
99,
100
]
},
{
"tb": 7936,
"tbk": 2,
"tl": 1162,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
101,
102,
103,
104,
105,
106,
107,
108,
109
]
},
{
"tb": 256,
"tbk": 1,
"tl": 5564,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
110,
111,
112,
113,
114,
115,
116,
117,
23
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1466,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
118,
119,
120,
121,
122,
123,
124,
125,
126
]
},
{
"tb": 1824,
"tbk": 4,
"tl": 1337,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
127,
128,
129,
130,
131,
132
]
},
{
"tb": 288,
"tbk": 2,
"tl": 785,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
133,
134,
135,
136,
137,
138,
139
]
},
{
"tb": 512,
"tbk": 1,
"tl": 6333,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
140,
141,
142,
143,
23
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 39628,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
52,
53,
54,
55,
59,
60,
61,
144
]
},
{
"tb": 56,
"tbk": 1,
"tl": 1599,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
146,
147,
40,
148
]
},
{
"tb": 6624,
"tbk": 12,
"tl": 1933,
"mb": 2208,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
149,
150,
151,
152,
153,
154
]
},
{
"tb": 512,
"tbk": 1,
"tl": 14,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
41,
42,
43,
48,
155,
156,
157
]
},
{
"tb": 96,
"tbk": 1,
"tl": 29,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
26,
27,
28,
158,
159
]
},
{
"tb": 320,
"tbk": 2,
"tl": 893459,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
160,
161,
162,
163,
164
]
},
{
"tb": 512,
"tbk": 1,
"tl": 446833,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
15,
16,
17,
18,
19,
20,
165,
166,
167
]
},
{
"tb": 960,
"tbk": 4,
"tl": 3317,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
168,
169,
170,
171,
172
]
},
{
"tb": 24,
"tbk": 1,
"tl": 544920,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
173,
174,
175,
176,
177,
23,
178
]
},
{
"tb": 36864,
"tbk": 2,
"tl": 4602,
"mb": 36864,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
41,
42,
43,
48,
179,
180,
181
]
},
{
"tb": 2368,
"tbk": 13,
"tl": 35,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
110,
111,
112,
113,
114,
115,
182,
183,
22
]
},
{
"tb": 512,
"tbk": 1,
"tl": 17,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
41,
42,
43,
184,
157,
185,
148
]
},
{
"tb": 512,
"tbk": 1,
"tl": 156,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
41,
42,
43,
186,
159,
185,
148
]
},
{
"tb": 192,
"tbk": 1,
"tl": 3505,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
187,
188,
189,
190,
185
]
},
{
"tb": 32,
"tbk": 1,
"tl": 71,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
191,
192,
193,
194,
195,
196,
197,
198
]
},
{
"tb": 8,
"tbk": 1,
"tl": 232,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
199,
200,
201,
202,
203,
204,
205,
206
]
},
{
"tb": 16,
"tbk": 1,
"tl": 30461,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
207,
208,
209,
210,
211,
212,
213,
214,
215
]
},
{
"tb": 4416,
"tbk": 8,
"tl": 2113,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
149,
150,
151,
216,
217,
218
]
},
{
"tb": 40,
"tbk": 1,
"tl": 252941,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
219,
220,
221,
222,
223,
224,
225,
226,
227
]
},
{
"tb": 65536,
"tbk": 2,
"tl": 107888,
"mb": 65536,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
15,
16,
17,
18,
19,
20,
228,
229,
230
]
},
{
"tb": 64,
"tbk": 1,
"tl": 12785,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
168,
169,
170,
231,
30
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 380443,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
41,
42,
43,
48,
49,
50,
232
]
},
{
"tb": 96,
"tbk": 1,
"tl": 18,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
233,
234,
235,
236,
185,
148
]
},
{
"tb": 16,
"tbk": 1,
"tl": 70,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
237,
238,
234,
235,
236,
185
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1035,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
110,
111,
112,
239,
240,
241,
242,
139,
243
]
},
{
"tb": 63488,
"tbk": 2,
"tl": 804,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
244,
245,
246,
247,
248,
249,
250
]
},
{
"tb": 256,
"tbk": 1,
"tl": 380451,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
251,
252,
253,
254,
255,
256,
23
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1372,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
257,
258,
259,
260,
261,
183,
22,
23
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 34503,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
41,
42,
43,
48,
262,
263,
264
]
},
{
"tb": 96,
"tbk": 1,
"tl": 7,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
26,
27,
28,
265,
266
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 548527,
"mb": 524288,
"mbk": 1,
"gb": 524288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
52,
53,
54,
55,
59,
60,
61,
267
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 76368,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
244,
245,
246,
247,
248,
249,
268
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
269,
270,
271,
272,
273,
274,
275,
276,
277,
278,
279
]
},
{
"tb": 768,
"tbk": 1,
"tl": 275207,
"mb": 768,
"mbk": 1,
"gb": 768,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
280,
281,
282,
283,
284,
285,
286,
287,
288
]
},
{
"tb": 384,
"tbk": 2,
"tl": 68,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
290,
291,
292,
293,
294,
295,
296,
297
]
},
{
"tb": 256,
"tbk": 1,
"tl": 421,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
251,
252,
253,
298,
299,
300,
301
]
},
{
"tb": 2368,
"tbk": 13,
"tl": 45,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
110,
111,
112,
113,
114,
115,
182,
302,
303
]
},
{
"tb": 8512,
"tbk": 32,
"tl": 64797,
"mb": 8512,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
52,
53,
54,
55,
56,
304,
305,
47
]
},
{
"tb": 32,
"tbk": 1,
"tl": 51,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
269,
270,
271,
272,
273,
306,
307,
308,
309,
310,
311
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1056,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
312,
313,
314,
315,
316,
317,
318,
319
]
},
{
"tb": 992,
"tbk": 2,
"tl": 940,
"mb": 992,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
320,
321,
322,
323,
324,
325,
326,
327
]
},
{
"tb": 17382,
"tbk": 10,
"tl": 1152,
"mb": 8704,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
269,
328,
329,
330,
331,
332,
333
]
},
{
"tb": 16,
"tbk": 1,
"tl": 453030,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
15,
16,
17,
334,
335,
336,
337,
338,
256
]
},
{
"tb": 480,
"tbk": 4,
"tl": 4708,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
269,
328,
339,
340,
341,
342,
343
]
},
{
"tb": 16,
"tbk": 1,
"tl": 95,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
237,
238,
234,
344,
345,
346
]
},
{
"tb": 896,
"tbk": 6,
"tl": 4689,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
168,
169,
170,
347,
348
]
},
{
"tb": 48,
"tbk": 2,
"tl": 893467,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
349,
164
]
},
{
"tb": 1048576,
"tbk": 32,
"tl": 16692222,
"mb": 1048576,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
15,
16,
17,
334,
335,
336,
350,
351,
352,
353,
354
]
},
{
"tb": 24,
"tbk": 1,
"tl": 13118,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
355,
356,
357,
358,
359,
360,
361,
362,
363
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 1739,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
52,
364,
365,
366,
367,
368,
369,
370,
371
]
},
{
"tb": 2368,
"tbk": 13,
"tl": 327,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
110,
111,
112,
113,
114,
115,
372,
299,
373
]
},
{
"tb": 48,
"tbk": 1,
"tl": 13109,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
374,
375,
376,
377,
378,
379
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
269,
270,
271,
272,
273,
274,
275,
276,
277,
278,
380
]
},
{
"tb": 48,
"tbk": 1,
"tl": 261,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
381,
266,
23,
178
]
},
{
"tb": 832,
"tbk": 8,
"tl": 219,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
382,
383,
384,
385,
386,
387
]
},
{
"tb": 2496,
"tbk": 24,
"tl": 343,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
382,
383,
384,
388,
389,
390
]
},
{
"tb": 1600,
"tbk": 8,
"tl": 155,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 96,
"tbk": 1,
"tl": 1506,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
397,
398,
399,
400,
303
]
},
{
"tb": 96,
"tbk": 1,
"tl": 2977,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
269,
328,
401,
402,
403,
404,
405
]
},
{
"tb": 96,
"tbk": 1,
"tl": 5893,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
406,
407,
408,
409,
410,
411,
412,
23,
178
]
},
{
"tb": 216,
"tbk": 1,
"tl": 820641,
"mb": 216,
"mbk": 1,
"gb": 216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 24,
"tbk": 1,
"tl": 275281,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
422,
423,
424,
425,
426,
427,
428,
429,
430
]
},
{
"tb": 1024,
"tbk": 2,
"tl": 67096,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
244,
245,
246,
247,
248,
249,
431
]
},
{
"tb": 256,
"tbk": 1,
"tl": 10,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
110,
111,
112,
239,
240,
241,
432,
412,
23
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1476,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
133,
134,
135,
136,
433,
434,
435
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4162,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
41,
42,
43,
44,
436,
437,
40
]
},
{
"tb": 480,
"tbk": 4,
"tl": 453014,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
269,
328,
339,
340,
341,
438,
439
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4725,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
15,
16,
17,
18,
19,
20,
440,
441,
442
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1069,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
443,
444,
445,
446,
447,
448,
449,
450
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
451,
452,
380,
453,
23,
178
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1482,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
454,
455,
456,
457,
458,
459,
460,
461,
462
]
},
{
"tb": 128,
"tbk": 2,
"tl": 3916,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
41,
42,
43,
48,
49,
50,
463
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 1832,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
41,
42,
43,
44,
45,
464,
465
]
},
{
"tb": 24,
"tbk": 1,
"tl": 117,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
466,
467,
166,
468,
236,
185
]
},
{
"tb": 131104,
"tbk": 3,
"tl": 2416,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
41,
42,
43,
48,
155,
469,
470
]
},
{
"tb": 480,
"tbk": 4,
"tl": 153,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
269,
328,
339,
340,
341,
471,
302
]
},
{
"tb": 160,
"tbk": 1,
"tl": 3543,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
472,
473,
474,
475,
40
]
},
{
"tb": 32,
"tbk": 1,
"tl": 19,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
41,
42,
43,
44,
476,
477,
40
]
},
{
"tb": 512,
"tbk": 1,
"tl": 45,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
478,
479,
480,
481,
482,
483,
484,
485
]
},
{
"tb": 8,
"tbk": 1,
"tl": 252916,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
486,
487,
488,
489,
490,
491,
492,
493,
494
]
},
{
"tb": 16,
"tbk": 1,
"tl": 820748,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
495,
496,
497,
498,
499,
500,
501,
502
]
},
{
"tb": 72,
"tbk": 1,
"tl": 545451,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
503,
504,
505,
506,
507,
508,
509,
510,
511
]
},
{
"tb": 960,
"tbk": 4,
"tl": 12797,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
168,
169,
170,
171,
30
]
},
{
"tb": 960,
"tbk": 4,
"tl": 155,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
168,
169,
170,
512,
513
]
},
{
"tb": 8224,
"tbk": 60,
"tl": 161461,
"mb": 8224,
"mbk": 60,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
52,
53,
54,
55,
56,
304,
514,
515
]
},
{
"tb": 1024,
"tbk": 5,
"tl": 893002,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
516,
517,
518,
519,
520
]
},
{
"tb": 64,
"tbk": 1,
"tl": 3509,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
168,
169,
170,
521,
522
]
},
{
"tb": 512,
"tbk": 1,
"tl": 2198,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
523,
524,
525,
526,
527,
528,
529,
530
]
},
{
"tb": 512,
"tbk": 1,
"tl": 15,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
41,
42,
43,
48,
155,
531,
159
]
},
{
"tb": 8,
"tbk": 1,
"tl": 274769,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
486,
532,
533,
534,
535,
536,
537,
538,
539
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1661,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
540,
541,
542,
543,
544,
545,
546,
547,
548
]
},
{
"tb": 24,
"tbk": 1,
"tl": 453034,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
338,
256
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 1725,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
41,
42,
43,
48,
49,
50,
549
]
},
{
"tb": 16,
"tbk": 1,
"tl": 834376,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
550,
551,
552,
553,
554,
555,
556,
557
]
},
{
"tb": 384,
"tbk": 1,
"tl": 446746,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
558,
559,
560,
561,
562,
563,
564,
565,
566
]
},
{
"tb": 960,
"tbk": 8,
"tl": 206,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
269,
328,
339,
340,
341,
471,
567
]
},
{
"tb": 1984,
"tbk": 2,
"tl": 1399,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
52,
568,
569,
570,
571,
572,
567,
573
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1366,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
52,
568,
569,
570,
571,
572,
183,
22
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
269,
270,
271,
272,
273,
274,
275,
276,
277,
574,
380
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 83,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
41,
42,
43,
48,
49,
50,
575
]
},
{
"tb": 32,
"tbk": 1,
"tl": 4576,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
52,
53,
54,
55,
56,
576,
58,
40
]
},
{
"tb": 24,
"tbk": 1,
"tl": 544924,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
577,
578,
579,
580,
581,
23,
178
]
},
{
"tb": 24,
"tbk": 1,
"tl": 446844,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
466,
467,
166,
167,
346,
23
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 393841,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
41,
42,
43,
48,
582,
583,
584
]
},
{
"tb": 16,
"tbk": 1,
"tl": 6303,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
15,
16,
17,
334,
335,
336,
337,
10,
11,
12,
13
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1050,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
585,
586,
587,
588,
589,
590,
591,
592
]
},
{
"tb": 43136,
"tbk": 819,
"tl": 51097,
"mb": 9024,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
593,
594,
595,
596,
597,
598,
599
]
},
{
"tb": 24,
"tbk": 1,
"tl": 544911,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
422,
600,
601,
602,
603,
23,
178
]
},
{
"tb": 120,
"tbk": 2,
"tl": 204939,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
604,
605,
606,
607,
608,
609,
610,
611,
612
]
},
{
"tb": 1968,
"tbk": 2,
"tl": 52,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
613,
614,
615,
616,
617,
618
]
},
{
"tb": 96,
"tbk": 1,
"tl": 11,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
233,
619,
620,
23,
178
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 825479,
"mb": 1024,
"mbk": 1,
"gb": 1024,
"gbk": 1,
"eb": 1024,
"ebk": 1,
"fs": [
621,
622,
623,
624,
625,
626,
627,
628,
629,
630,
631,
632,
633,
634,
635,
636,
637,
638,
639,
640,
641
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1473,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
133,
134,
135,
136,
642,
434,
435
]
},
{
"tb": 96,
"tbk": 1,
"tl": 25,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
26,
27,
28,
643,
159
]
},
{
"tb": 48,
"tbk": 2,
"tl": 906039,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
644,
645
]
},
{
"tb": 96,
"tbk": 1,
"tl": 821850,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
646,
647,
648,
649,
650,
651,
652,
653,
654
]
},
{
"tb": 128,
"tbk": 1,
"tl": 2486,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
655,
656,
657,
658,
465
]
},
{
"tb": 96,
"tbk": 1,
"tl": 3873,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
26,
27,
28,
659,
83
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 21830,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
41,
42,
43,
48,
49,
50,
660
]
},
{
"tb": 256,
"tbk": 2,
"tl": 732,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
661,
662,
663,
664,
567
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1329,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
52,
568,
569,
570,
571,
572,
302,
303
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
451,
452,
279,
148
]
},
{
"tb": 51456,
"tbk": 238,
"tl": 109907,
"mb": 11264,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
52,
665,
666,
667,
668,
669,
670,
671,
672
]
},
{
"tb": 32,
"tbk": 1,
"tl": 113,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
673,
674,
675,
676,
677,
678
]
},
{
"tb": 7936,
"tbk": 2,
"tl": 259,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
244,
245,
246,
247,
248,
249,
679
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2095,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
257,
258,
259,
260,
680,
305,
47,
681
]
},
{
"tb": 131104,
"tbk": 3,
"tl": 2446,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
41,
42,
43,
48,
682,
470,
683
]
},
{
"tb": 1152,
"tbk": 4,
"tl": 133,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
684,
685,
686,
687,
688
]
},
{
"tb": 4608,
"tbk": 24,
"tl": 7623,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
73,
74,
75,
689,
690,
691
]
},
{
"tb": 16,
"tbk": 1,
"tl": 821842,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
24,
31,
32,
33,
34,
35,
36,
37,
38,
692,
693
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
269,
270,
271,
272,
273,
274,
275,
276,
277,
574,
279
]
},
{
"tb": 32,
"tbk": 1,
"tl": 77166,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
269,
328,
339,
340,
341,
694,
23
]
},
{
"tb": 216,
"tbk": 1,
"tl": 4669,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
413,
695,
696,
697,
698,
699,
700,
701,
702
]
},
{
"tb": 144,
"tbk": 1,
"tl": 6312,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
703,
704,
705,
706,
11,
12,
13,
707,
117,
23
]
},
{
"tb": 72,
"tbk": 1,
"tl": 3585,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
708,
709,
23,
178
]
},
{
"tb": 1440,
"tbk": 2,
"tl": 5553,
"mb": 1440,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
257,
258,
259,
260,
680,
514,
515,
83
]
},
{
"tb": 768,
"tbk": 1,
"tl": 834283,
"mb": 768,
"mbk": 1,
"gb": 768,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
280,
710,
711,
712,
713,
714,
715,
716,
717
]
},
{
"tb": 48,
"tbk": 2,
"tl": 100,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
718,
719,
720,
721,
722,
723
]
},
{
"tb": 1440,
"tbk": 2,
"tl": 1406,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
257,
258,
259,
260,
261,
567,
573,
412
]
},
{
"tb": 96,
"tbk": 1,
"tl": 9,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
26,
27,
28,
724,
40
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3300,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
41,
42,
43,
725,
726,
185,
148
]
},
{
"tb": 480,
"tbk": 4,
"tl": 3285,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
269,
328,
339,
340,
341,
342,
727
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1965,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
41,
42,
43,
728,
729,
185,
148
]
},
{
"tb": 7936,
"tbk": 2,
"tl": 7034,
"mb": 7936,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
41,
42,
43,
730,
515,
83,
40
]
},
{
"tb": 7936,
"tbk": 62,
"tl": 55,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
731,
732,
733,
734,
735,
736,
737,
738
]
},
{
"tb": 96,
"tbk": 1,
"tl": 27,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
233,
234,
344,
345,
346,
23
]
},
{
"tb": 512,
"tbk": 1,
"tl": 9,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
739,
740,
741,
742,
743,
744,
745,
746
]
},
{
"tb": 512,
"tbk": 1,
"tl": 20,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
15,
16,
17,
334,
335,
336,
747,
159,
185
]
},
{
"tb": 768,
"tbk": 1,
"tl": 6301,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
280,
748,
749,
750,
351,
352,
353,
751,
117,
23
]
},
{
"tb": 116703,
"tbk": 8,
"tl": 4746,
"mb": 66316,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
593,
752,
753,
754,
755
]
},
{
"tb": 80,
"tbk": 1,
"tl": 834300,
"mb": 80,
"mbk": 1,
"gb": 80,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
756,
757,
758,
759,
760,
761,
762,
763,
764
]
},
{
"tb": 1048576,
"tbk": 32,
"tl": 8458358,
"mb": 1048576,
"mbk": 32,
"gb": 1048576,
"gbk": 32,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
15,
16,
17,
334,
335,
336,
765,
766,
767
]
},
{
"tb": 32,
"tbk": 2,
"tl": 446978,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
768,
769,
770,
771,
772,
773,
774,
775
]
},
{
"tb": 2293760,
"tbk": 35,
"tl": 15842821,
"mb": 2293760,
"mbk": 35,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
41,
42,
43,
48,
776,
777,
778
]
},
{
"tb": 73728,
"tbk": 2,
"tl": 8954,
"mb": 73728,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
52,
53,
54,
55,
59,
779,
780,
181
]
},
{
"tb": 72,
"tbk": 1,
"tl": 6357,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
280,
748,
749,
750,
351,
352,
353,
781,
117,
23
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 820630,
"mb": 1024,
"mbk": 1,
"gb": 1024,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
782,
783,
784,
785,
786,
787,
788,
789
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1510,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
280,
748,
749,
750,
351,
352,
353,
790,
791,
303
]
},
{
"tb": 1984,
"tbk": 8,
"tl": 800,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
792,
793,
794,
795,
796,
797,
798,
799
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1070,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
269,
328,
339,
340,
341,
800,
405
]
},
{
"tb": 512,
"tbk": 1,
"tl": 14462,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
133,
134,
135,
136,
801,
620,
23
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 3497,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
15,
16,
17,
334,
335,
336,
802,
803,
804
]
},
{
"tb": 2167,
"tbk": 8,
"tl": 31711,
"mb": 1088,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
593,
752,
753,
754,
805
]
},
{
"tb": 96,
"tbk": 1,
"tl": 77176,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
26,
27,
28,
806,
23
]
},
{
"tb": 80,
"tbk": 1,
"tl": 446486,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
807,
808,
809,
810,
811,
812,
813,
814,
815
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 42602,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
52,
53,
54,
55,
59,
816,
817,
818
]
},
{
"tb": 160,
"tbk": 1,
"tl": 3493,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
819,
820,
821,
822,
823,
824,
825,
826,
827
]
},
{
"tb": 128,
"tbk": 1,
"tl": 1958,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
828,
829,
830,
831,
832,
833,
834,
835
]
},
{
"tb": 48,
"tbk": 1,
"tl": 52615,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
133,
134,
135,
136,
836,
837,
838
]
},
{
"tb": 960,
"tbk": 8,
"tl": 2776,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
839,
840,
841,
842,
843
]
},
{
"tb": 16,
"tbk": 1,
"tl": 23,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
207,
844,
845,
846,
847,
848,
849,
850,
23,
178
]
},
{
"tb": 48,
"tbk": 1,
"tl": 54003,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
280,
851,
852,
853,
854,
855,
856,
857,
858
]
},
{
"tb": 1984,
"tbk": 5,
"tl": 11,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
168,
169,
170,
859,
860
]
},
{
"tb": 294912,
"tbk": 2,
"tl": 9069,
"mb": 294912,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
41,
42,
43,
48,
861,
862,
181
]
},
{
"tb": 2304,
"tbk": 8,
"tl": 2582,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
863,
864,
865,
866,
867,
868
]
},
{
"tb": 1056,
"tbk": 3,
"tl": 30145,
"mb": 1056,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
869,
870,
871,
872,
873,
874,
875,
876
]
},
{
"tb": 32,
"tbk": 1,
"tl": 131,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
15,
16,
17,
334,
335,
336,
877,
878,
879
]
},
{
"tb": 512,
"tbk": 1,
"tl": 152,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
41,
42,
43,
880,
159,
185,
148
]
},
{
"tb": 8512,
"tbk": 32,
"tl": 53252,
"mb": 8512,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
52,
53,
54,
55,
56,
304,
881,
465
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 6643,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
244,
245,
246,
247,
248,
249,
882
]
},
{
"tb": 1024,
"tbk": 2,
"tl": 67088,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
244,
245,
246,
247,
248,
249,
883
]
},
{
"tb": 480,
"tbk": 4,
"tl": 142,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
269,
328,
339,
340,
341,
471,
183
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 21,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
41,
42,
43,
44,
884,
477,
40
]
},
{
"tb": 768,
"tbk": 1,
"tl": 521858,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
280,
748,
749,
750,
351,
352,
353,
354,
885,
886
]
},
{
"tb": 7936,
"tbk": 2,
"tl": 794,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
244,
245,
246,
247,
248,
249,
887
]
},
{
"tb": 52896,
"tbk": 116,
"tl": 22545,
"mb": 17328,
"mbk": 38,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
127,
128,
129,
888,
889,
890
]
},
{
"tb": 1048576,
"tbk": 32,
"tl": 26693724,
"mb": 1048576,
"mbk": 32,
"gb": 1048576,
"gbk": 32,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
41,
42,
43,
48,
891,
892,
893
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1563,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
15,
16,
17,
18,
19,
20,
894,
40,
148
]
},
{
"tb": 32,
"tbk": 1,
"tl": 77170,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
269,
328,
339,
340,
341,
895,
23
]
},
{
"tb": 2368,
"tbk": 13,
"tl": 325,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
110,
111,
112,
113,
114,
115,
372,
299,
300
]
},
{
"tb": 8388608,
"tbk": 4,
"tl": 429325,
"mb": 8388608,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
101,
896,
897,
898,
899,
900,
901,
902
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 17715,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
41,
42,
43,
48,
903,
904,
905
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 80864,
"mb": 8388608,
"mbk": 1,
"gb": 8388608,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
15,
16,
17,
334,
335,
336,
906,
907,
908
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 82675,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
244,
245,
246,
247,
248,
249,
909
]
},
{
"tb": 17382,
"tbk": 10,
"tl": 2446,
"mb": 8704,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
269,
328,
329,
330,
331,
332,
910
]
},
{
"tb": 480,
"tbk": 2,
"tl": 480,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
251,
252,
253,
298,
299,
911,
912
]
},
{
"tb": 24,
"tbk": 1,
"tl": 9,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
280,
748,
749,
750,
351,
352,
353,
790,
913,
453
]
},
{
"tb": 72,
"tbk": 3,
"tl": 60,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
914,
915,
916,
917,
918,
919,
920,
921,
922
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
237,
238,
619,
620,
23,
178
]
},
{
"tb": 1920,
"tbk": 8,
"tl": 1179,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
168,
169,
170,
923,
924
]
},
{
"tb": 48,
"tbk": 1,
"tl": 821780,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
925,
926,
927,
928,
929,
930,
453,
23
]
},
{
"tb": 96,
"tbk": 1,
"tl": 3528,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
931,
932,
933,
934,
185
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 820459,
"mb": 65536,
"mbk": 1,
"gb": 65536,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
41,
42,
43,
48,
49,
935,
936
]
},
{
"tb": 2097152,
"tbk": 4096,
"tl": 8583,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
15,
16,
17,
334,
335,
336,
937,
938,
939
]
},
{
"tb": 48,
"tbk": 1,
"tl": 521865,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
940,
941,
942,
943,
944,
945,
946,
947,
948
]
},
{
"tb": 512,
"tbk": 1,
"tl": 52611,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
133,
134,
135,
136,
949,
837,
838
]
},
{
"tb": 2520,
"tbk": 17,
"tl": 35,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
110,
111,
112,
113,
114,
115,
182,
567,
573
]
},
{
"tb": 240,
"tbk": 2,
"tl": 453014,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
950,
256,
23,
178
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1075,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
26,
27,
28,
951,
22
]
},
{
"tb": 1984,
"tbk": 2,
"tl": 5829,
"mb": 1984,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
52,
568,
569,
570,
571,
952,
515,
83
]
},
{
"tb": 288,
"tbk": 1,
"tl": 5415,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
953,
954,
955,
956,
181
]
},
{
"tb": 512,
"tbk": 1,
"tl": 99,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
244,
245,
246,
247,
248,
249,
957
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1029,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
15,
16,
17,
18,
19,
20,
958,
139,
243
]
},
{
"tb": 7936,
"tbk": 2,
"tl": 300,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
41,
42,
43,
48,
155,
959,
138
]
},
{
"tb": 8388608,
"tbk": 16384,
"tl": 20425,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
15,
16,
17,
18,
19,
20,
960,
961,
962
]
},
{
"tb": 96,
"tbk": 1,
"tl": 12,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
703,
963,
964,
965,
966,
967,
968,
969,
970
]
},
{
"tb": 16,
"tbk": 1,
"tl": 820533,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
971,
972,
973,
974,
975,
976,
977,
978,
979
]
},
{
"tb": 7936,
"tbk": 62,
"tl": 61,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
41,
42,
43,
44,
980,
515,
83
]
},
{
"tb": 496,
"tbk": 2,
"tl": 1851,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
110,
111,
112,
239,
240,
241,
981,
982,
139
]
},
{
"tb": 32,
"tbk": 1,
"tl": 5,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
673,
983,
148
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 3015,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
269,
270,
984,
985,
986,
987,
405,
303,
709
]
},
{
"tb": 16,
"tbk": 1,
"tl": 97,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
237,
988,
234,
344,
345,
346
]
},
{
"tb": 64,
"tbk": 1,
"tl": 3305,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
168,
169,
170,
231,
172
]
},
{
"tb": 512,
"tbk": 1,
"tl": 9,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
15,
16,
17,
334,
335,
336,
989,
412,
23
]
},
{
"tb": 2520,
"tbk": 17,
"tl": 323,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
110,
111,
112,
113,
114,
115,
372,
299,
911
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 25,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
15,
16,
17,
334,
335,
336,
990,
991,
23
]
},
{
"tb": 16,
"tbk": 1,
"tl": 5,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
237,
988,
619,
620,
23,
178
]
},
{
"tb": 1088,
"tbk": 2,
"tl": 28,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
992,
993,
994,
995,
996,
997
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 7512,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
15,
16,
17,
18,
19,
20,
998,
999,
23
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1736,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
257,
258,
259,
260,
680,
881,
465,
147
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1672,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
269,
270,
984,
985,
986,
1000,
1001,
22,
23
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1333,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
257,
258,
259,
260,
261,
302,
303,
709
]
},
{
"tb": 960,
"tbk": 8,
"tl": 1565,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
839,
840,
841,
842,
1002
]
},
{
"tb": 36864,
"tbk": 2,
"tl": 4018,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
41,
42,
43,
48,
582,
1003,
1004
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 2518,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
41,
42,
43,
44,
45,
1005,
465
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 2094,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
52,
1006,
1007,
1008,
1009,
1010,
1011,
1012,
1013
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 820522,
"mb": 16384,
"mbk": 1,
"gb": 16384,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
41,
42,
43,
48,
49,
1014,
1015
]
},
{
"tb": 840,
"tbk": 2,
"tl": 904257,
"mb": 840,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
280,
1016,
1017,
1018,
1019,
1020,
1021,
1022,
1023
]
},
{
"tb": 196608,
"tbk": 3,
"tl": 19032,
"mb": 196608,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
15,
16,
17,
334,
335,
336,
350,
351,
352,
353,
781
]
},
{
"tb": 512,
"tbk": 1,
"tl": 13359,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
133,
134,
135,
136,
1024,
1025,
1026
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 2996,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
269,
270,
984,
985,
986,
1027,
405,
303,
709
]
},
{
"tb": 256,
"tbk": 1,
"tl": 438,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
251,
252,
253,
298,
299,
373,
1028
]
},
{
"tb": 2097152,
"tbk": 32,
"tl": 189969,
"mb": 2097152,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
15,
16,
17,
334,
335,
336,
350,
351,
352,
353,
751
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 4662,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
782,
783,
784,
785,
786,
787,
1029,
1030
]
},
{
"tb": 2097152,
"tbk": 32,
"tl": 380191,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038
]
},
{
"tb": 16416,
"tbk": 33,
"tl": 46285,
"mb": 16384,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
15,
16,
17,
334,
335,
336,
350,
351,
352,
353,
790
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 6627,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
244,
245,
246,
247,
248,
249,
1039
]
},
{
"tb": 512,
"tbk": 1,
"tl": 107,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
15,
16,
17,
18,
19,
20,
165,
166,
468
]
},
{
"tb": 576,
"tbk": 2,
"tl": 43,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
1047,
1048
]
},
{
"tb": 32,
"tbk": 1,
"tl": 226,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
1049,
266,
23,
178
]
},
{
"tb": 48,
"tbk": 2,
"tl": 65,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
1050,
719,
720,
721,
722,
723
]
},
{
"tb": 16,
"tbk": 1,
"tl": 73,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
145,
237,
988,
234,
235,
236,
185
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 628350,
"mb": 8388608,
"mbk": 1,
"gb": 8388608,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
101,
896,
897,
898,
899,
1051,
1052,
1053
]
},
{
"tb": 64,
"tbk": 1,
"tl": 135,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
168,
169,
170,
521,
513
]
},
{
"tb": 7936,
"tbk": 2,
"tl": 1040,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
101,
896,
897,
898,
1054,
573,
412,
23
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1633,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
280,
1055,
1056,
1057,
1058,
1059,
1060,
1061,
1062
]
},
{
"tb": 24,
"tbk": 1,
"tl": 120,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
280,
1063,
1064,
1065,
1066,
1067,
1068,
1069,
1070
]
},
{
"tb": 16384,
"tbk": 32,
"tl": 50070,
"mb": 16384,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
15,
16,
17,
18,
19,
20,
1071,
1072,
1073
]
},
{
"tb": 1025,
"tbk": 1,
"tl": 55,
"mb": 1025,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
269,
270,
271,
272,
273,
306,
307,
308,
1074,
310,
311
]
},
{
"tb": 960,
"tbk": 4,
"tl": 3517,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
168,
169,
170,
512,
522
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 6135,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
15,
16,
17,
334,
335,
336,
990,
1075,
266
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 446839,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
782,
1076,
1077,
1078,
1079,
1080,
1081,
1082,
166,
167
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1062,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
1083,
1084,
1085,
1086,
1087,
1088,
1089,
1090
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 171926,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
41,
42,
43,
48,
262,
263,
1091
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 625748,
"mb": 524288,
"mbk": 1,
"gb": 524288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
52,
53,
54,
55,
59,
1092,
962,
1093
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 3551,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
15,
16,
17,
334,
335,
336,
990,
1094,
40
]
},
{
"tb": 512,
"tbk": 1,
"tl": 134,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
15,
16,
17,
334,
335,
336,
1095,
878,
879
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 112,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
782,
1076,
1077,
1078,
1079,
1080,
1081,
1082,
166,
468
]
},
{
"tb": 96,
"tbk": 1,
"tl": 3310,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
26,
27,
28,
29,
172
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 1214,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
269,
328,
339,
340,
341,
1096,
299
]
},
{
"tb": 512,
"tbk": 1,
"tl": 28,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
41,
42,
43,
1097,
157,
185,
148
]
},
{
"tb": 24,
"tbk": 1,
"tl": 544916,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
280,
1098,
1099,
1100,
1101,
23,
178
]
},
{
"tb": 26060,
"tbk": 19,
"tl": 9159,
"mb": 13056,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
269,
328,
329,
330,
331,
332,
1102
]
}
],
"ftbl": [
"[root]",
"0x5d0c8cf943b9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5d0c8ce6306c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d0c8cee3f38: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cee3f38: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cee3f38: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5d0c8cf6a7c5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5d0c8cf6a7c5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5d0c8cf6a7c5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5d0c8cdb08e2: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x5d0c8cdb0750: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5d0c8cf69df5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5d0c8cf69df5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5d0c8cf69df5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5d0c8ce664ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d0c8cee3e08: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cee3e08: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cee3e08: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5d0c8cee445b: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5d0c8cee445b: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5d0c8cee445b: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5d0c8ced7db3: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x5d0c8cebf30a: winter_prover::Prover::generate_proof (prover/src/lib.rs:608:34)",
"0x5d0c8cecf2ee: winter_prover::Prover::prove (prover/src/lib.rs:175:37)",
"0x5d0c8d1ccf79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5d0c8d1cb709: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5d0c8ce7b281: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5d0c8ce9ba38: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5d0c8cf5c33e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5d0c8ceba350: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:543:13)",
"0x5d0c8ce481b6: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x5d0c8d1cb9ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d0c8d1cd04c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8d1cd04c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8d1cd04c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5d0c8d1cac7c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5d0c8d1cac7c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5d0c8d1cac7c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5d0c8d1c6ece: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x5d0c8cf05370: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x5d0c8cdd550b: winter_verifier::verify (verifier/src/lib.rs:109:19)",
"0x5d0c8cf337d5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf337d5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf337d5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cee2485: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5d0c8ced1efa: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x5d0c8ce0c356: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x5d0c8cf0c3a7: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x5d0c8ce9dae7: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5d0c8ce37e2f: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x5d0c8d007338: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x5d0c8d006b9b: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x5d0c8ce59dec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d0c8cf33b95: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf33b95: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf33b95: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8ce04785: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5d0c8cf12b50: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x5d0c8cf05970: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x5d0c8ce9da57: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5d0c8ce3c259: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x5d0c8ce3d739: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x5d0c8ce409b6: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x5d0c8d18fa99: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5d0c8d18fc0a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d0c8cf16033: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf16033: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf16033: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf16033: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7c9ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf79545: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa6fdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8cebc6db: winter_prover::Prover::generate_proof (prover/src/lib.rs:293:23)",
"0x5d0c8d19263b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5d0c8d191f01: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5d0c8d18b38b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5d0c8d184e3d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5d0c8d190748: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5d0c8d1940a7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5d0c8ce886d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5d0c8ce9b7c8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5d0c8cf5a67e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5d0c8ce54216: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x5d0c8cf06104: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x5d0c8cf2505d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf2505d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf2505d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf2505d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7bdda: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf78de4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa61ca: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8cf057eb: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x5d0c8ce5e49c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d0c8cf1d4cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf1d4cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf1d4cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf1d4cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7c0dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf793d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa5a6d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8cebbcd2: winter_prover::Prover::generate_proof (prover/src/lib.rs:210:38)",
"0x5d0c8ce6069c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d0c8cf1670f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf1670f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf1670f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf1670f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7b27d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf79a55: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa58ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8d016ac4: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x5d0c8d18361c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8d18361c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8d18361c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5d0c8cf6a2d9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5d0c8cf6a2d9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5d0c8cf6a2d9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5d0c8cdc3314: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x5d0c8cebce23: winter_prover::Prover::generate_proof (prover/src/lib.rs:423:33)",
"0x5d0c8ce6720c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d0c8cf20e49: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf20e49: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf20e49: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf20e49: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7b93a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf787f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa601a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8cdd0c5f: winter_verifier::perform_verification (verifier/src/lib.rs:218:40)",
"0x5d0c8ced572b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5d0c8ced4f9d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5d0c8d04869a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5d0c8d0231e9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5d0c8cf8d15b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5d0c8ce036eb: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5d0c8cee4511: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cee4511: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cee4511: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5d0c8cf68c80: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5d0c8cef8921: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x5d0c8d016b73: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x5d0c8d01f5e9: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x5d0c8ce73c01: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5d0c8ce9b408: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5d0c8cf5dc54: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5d0c8cec0285: winter_prover::Prover::generate_proof (prover/src/lib.rs:418:17)",
"0x5d0c8cdf8572: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x5d0c8cf93847: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x5d0c8ceffe73: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x5d0c8cf05ad4: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x5d0c8ce2f822: winterfell::main (winterfell/src/main.rs:71:11)",
"0x5d0c8ced680b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5d0c8ced4a1d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5d0c8d048c2a: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5d0c8d04155d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x5d0c8d047a25: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x5d0c8d03a86e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x5d0c8ce379fe: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x5d0c8cde2eb1: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x5d0c8cdd1abc: winter_verifier::perform_verification (verifier/src/lib.rs:317:25)",
"0x5d0c8cddf2d7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x5d0c8cdd1a15: winter_verifier::perform_verification (verifier/src/lib.rs:311:25)",
"0x5d0c8ce9a041: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5d0c8ce9b018: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5d0c8cf598be: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5d0c8ceace9d: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:175:17)",
"0x5d0c8ceab34f: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:55:17)",
"0x5d0c8cdb8cba: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x5d0c8ceb9010: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:354:9)",
"0x5d0c8cdf5a9c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:51:13)",
"0x5d0c8ce91fe1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5d0c8ce9b0d8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5d0c8cf5967d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5d0c8ceba3d4: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:541:17)",
"0x5d0c8cdd0fc9: winter_verifier::perform_verification (verifier/src/lib.rs:266:61)",
"0x5d0c8ce66ccc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d0c8cf33c35: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf33c35: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf33c35: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cebc88e: winter_prover::Prover::generate_proof (prover/src/lib.rs:307:44)",
"0x5d0c8ce2f27c: winterfell::main (winterfell/src/main.rs:54:17)",
"0x5d0c8ce4b2d3: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x5d0c8ce40afb: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x5d0c8ce45bc6: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x5d0c8ce3cdbc: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x5d0c8ced7b91: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x5d0c8cde2cb7: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x5d0c8cdd55da: winter_verifier::verify (verifier/src/lib.rs:111:21)",
"0x5d0c8cdde6df: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x5d0c8ce7f7a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5d0c8ce9b108: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5d0c8cf5bdae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5d0c8cdd21eb: winter_verifier::perform_verification (verifier/src/lib.rs:184:9)",
"0x5d0c8cf1ab4f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf1ab4f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf1ab4f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf1ab4f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf6603e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5d0c8cf7a035: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa70ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8ce2f74e: winterfell::main (winterfell/src/main.rs:65:26)",
"0x5d0c8cf2a40d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf2a40d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf2a40d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf2a40d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7be4a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf796e4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa5d1a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8ceffba1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x5d0c8ce6330c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d0c8cf16b59: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf16b59: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf16b59: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf16b59: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7b6ba: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf799a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa5eea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8cebde8c: winter_prover::Prover::generate_proof (prover/src/lib.rs:505:52)",
"0x5d0c8d027c7d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5d0c8d02a613: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5d0c8ce3b237: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5d0c8ce603fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d0c8cf1fedf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf1fedf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf1fedf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf1fedf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7c88d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf780c5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa59dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8cecd08b: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:648:34)",
"0x5d0c8cf9bb0a: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x5d0c8cfb27a8: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5d0c8ce37114: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x5d0c8ceba1b5: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:547:13)",
"0x5d0c8cdc9adb: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x5d0c8ce3021b: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:175:9)",
"0x5d0c8ceb8b72: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:371:13)",
"0x5d0c8cf992cb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:64:9)",
"0x5d0c8cdd1fcc: winter_verifier::perform_verification (verifier/src/lib.rs:225:43)",
"0x5d0c8ce35245: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x5d0c8ce30330: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:177:13)",
"0x5d0c8d1835cc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5d0c8d1835cc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5d0c8d1835cc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5d0c8d015d9d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x5d0c8cdd1c03: winter_verifier::perform_verification (verifier/src/lib.rs:323:5)",
"0x5d0c8d1caadc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x5d0c8d1c9d6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x5d0c8d1c9ae8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x5d0c8d1c9ae8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x5d0c8d1c9124: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5d0c8d1c6d43: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x5d0c8cef882f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x5d0c8cf33646: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf33646: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf33646: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cdc9a78: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x5d0c8cdf6be1: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:135:9)",
"0x5d0c8cec0266: winter_prover::Prover::generate_proof (prover/src/lib.rs:417:21)",
"0x5d0c8ce65a6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d0c8cf33875: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf33875: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf33875: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8ce3caaf: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x5d0c8cdfb30f: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x5d0c8cdfa506: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x5d0c8ceceacc: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:701:36)",
"0x5d0c8cee95c3: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x5d0c8cebe02d: winter_prover::Prover::generate_proof (prover/src/lib.rs:524:9)",
"0x5d0c8cdf8e5c: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x5d0c8cdc024c: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x5d0c8d158819: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5d0c8d15762a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d0c8d15a32c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8d15a32c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8d15a32c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5d0c8d12969c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5d0c8d12969c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5d0c8d12969c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5d0c8cdce084: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x5d0c8cdcdd9a: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x5d0c8cdd51dd: winter_verifier::verify (verifier/src/lib.rs:96:32)",
"0x5d0c8ce5c7bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d0c8cf29abf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf29abf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf29abf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf29abf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7ce7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf79925: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa65dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8cda5788: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:228:23)",
"0x5d0c8ce66f6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d0c8cf2c22b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf2c22b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf2c22b: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf2c22b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5d0c8cf7caad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf79955: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8ce9d16d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8cedd618: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x5d0c8ce0e882: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x5d0c8ce3d46d: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x5d0c8cf04cf0: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x5d0c8cdd17a8: winter_verifier::perform_verification (verifier/src/lib.rs:306:42)",
"0x5d0c8cdd677b: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x5d0c8cdd94b0: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x5d0c8ce0dcc7: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x5d0c8ce0c547: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x5d0c8d0b39e9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5d0c8d0b39e9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5d0c8d0b39e9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5d0c8ced40af: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x5d0c8cdb2a26: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5d0c8cf06714: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5d0c8cf2e9dd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf2e9dd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf2e9dd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf2e9dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7bc7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf78ff4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa686a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8cf0567b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x5d0c8cf2fe6f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf2fe6f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf2fe6f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf2fe6f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7becd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf77825: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa6afd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8d016c5a: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x5d0c8d1572e9: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5d0c8d155700: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5d0c8d155939: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5d0c8d155132: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5d0c8ce0e17c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x5d0c8ce0aeb4: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x5d0c8cf69b85: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5d0c8cf69b85: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5d0c8cf69b85: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5d0c8cdb08f5: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x5d0c8cdf6973: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:33)",
"0x5d0c8d066840: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5d0c8d066aa9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5d0c8d076111: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5d0c8ce3b7dc: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x5d0c8ce478d8: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x5d0c8ceaaadf: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:41:22)",
"0x5d0c8cdf5b39: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:36)",
"0x5d0c8cec01b5: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:21)",
"0x5d0c8cf944e2: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x5d0c8cdcdc98: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x5d0c8ceacd5a: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:170:36)",
"0x5d0c8cf32d83: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5d0c8cf69d25: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5d0c8cf69d25: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5d0c8cf69d25: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5d0c8cda88cd: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x5d0c8ce5f6dc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d0c8cf2144f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf2144f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf2144f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf2144f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7c04d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf76f75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa741d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8cebddcf: winter_prover::Prover::generate_proof (prover/src/lib.rs:501:51)",
"0x5d0c8cf1fb04: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf1fb04: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf1fb04: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf1fb04: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5d0c8cf7ceaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf78d64: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa70da: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8ce08e8d: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x5d0c8ce0eabb: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x5d0c8cf044ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x5d0c8ceb375a: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x5d0c8cf97852: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:503:32)",
"0x5d0c8cfb4dc6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5d0c8cfd293a: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5d0c8cf9ce27: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5d0c8cfa7a22: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5d0c8ce492db: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x5d0c8cee9347: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x5d0c8d1922db: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5d0c8d191fb1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5d0c8d18b2ab: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5d0c8d184e9d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5d0c8d19042b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5d0c8d1941e3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5d0c8d187f3e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5d0c8d189400: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5d0c8d188bf8: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5d0c8d19212b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5d0c8d192061: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5d0c8d18b46b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5d0c8d185b71: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5d0c8d186307: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5d0c8d19590b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5d0c8ce90c21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5d0c8ce9add8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5d0c8cf5c6ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5d0c8cdd68ec: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x5d0c8d0a80b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5d0c8d0aad69: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5d0c8d0b2322: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5d0c8ce0665f: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x5d0c8cdd6845: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x5d0c8d182c69: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5d0c8d17fc1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d0c8d17cdb6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8d17cdb6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8d17cdb6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8ce43b68: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x5d0c8cebf19c: winter_prover::Prover::generate_proof (prover/src/lib.rs:600:25)",
"0x5d0c8ce5bd4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d0c8cf2186f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf2186f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf2186f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf2186f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7c61d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf77285: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa5c1d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8cebbeb3: winter_prover::Prover::generate_proof (prover/src/lib.rs:222:20)",
"0x5d0c8ce5da1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d0c8cf157f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf157f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf157f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf157f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7b34a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf773a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa713a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8ceccf12: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:640:42)",
"0x5d0c8cda388c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x5d0c8ce43c0e: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x5d0c8cefe1b0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x5d0c8cdd5038: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:216:32)",
"0x5d0c8cfb4e5f: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5d0c8ce54e4c: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x5d0c8cf05f37: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x5d0c8cdcd41f: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x5d0c8cdcba15: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x5d0c8ce45e92: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x5d0c8ce45b2c: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x5d0c8cebeb02: winter_prover::Prover::generate_proof (prover/src/lib.rs:571:9)",
"0x5d0c8cf22ecd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf22ecd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf22ecd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf22ecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7c09a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf77544: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa673a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8cf0550b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x5d0c8d00414c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x5d0c8cdcde0c: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x5d0c8cebbf02: winter_prover::Prover::generate_proof (prover/src/lib.rs:233:27)",
"0x5d0c8ce5b03c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d0c8cf1d909: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf1d909: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf1d909: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf1d909: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7ce3a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf78934: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa5a2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8cdd0ba2: winter_verifier::perform_verification (verifier/src/lib.rs:214:41)",
"0x5d0c8ce4b222: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x5d0c8ce08b8e: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x5d0c8ceffd0d: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x5d0c8cdafd37: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x5d0c8cdb8b7f: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x5d0c8cf98e16: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:26:25)",
"0x5d0c8cdc62ce: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x5d0c8cdc3ac4: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x5d0c8ce3d2b7: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x5d0c8ce9aa21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5d0c8ce9ae08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5d0c8cf5d42e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5d0c8cf06f07: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x5d0c8cdb2126: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x5d0c8cf06c15: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5d0c8cf1f3bf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf1f3bf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf1f3bf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf1f3bf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7c6cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf79e45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa652d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8cdde4ab: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x5d0c8ce5f44a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d0c8cf2d4f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf2d4f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf2d4f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf2d4f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7b9da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf78bc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa5eba: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8ceccfcf: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:644:36)",
"0x5d0c8cf19ecf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf19ecf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf19ecf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf19ecf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7cd5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf79da7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa6edd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8ce2f0e6: winterfell::main (winterfell/src/main.rs:38:27)",
"0x5d0c8ce65fac: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d0c8cf1b8df: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf1b8df: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf1b8df: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf1b8df: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf66b4e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5d0c8cf79415: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa72ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8cdd84f7: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x5d0c8cebba42: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:512:13)",
"0x5d0c8ce486b2: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x5d0c8ce50e35: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x5d0c8ce54040: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x5d0c8ce7e8d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5d0c8ce9b318: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5d0c8cf5c12d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5d0c8cdc5af2: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x5d0c8cff1ac5: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5d0c8cebb978: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:517:13)",
"0x5d0c8cdd08e5: winter_verifier::perform_verification (verifier/src/lib.rs:185:13)",
"0x5d0c8cf23a3f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf23a3f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf23a3f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf23a3f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7cb1d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf77bb7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa59bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8cde3df7: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x5d0c8cdde3b7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x5d0c8cf14539: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf14539: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf14539: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf14539: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7bb7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf79b14: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa744a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8cebc4ea: winter_prover::Prover::generate_proof (prover/src/lib.rs:272:43)",
"0x5d0c8ce5c52a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d0c8cf14949: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf14949: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf14949: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf14949: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7c96a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf78874: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa6b8a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8cdd940e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x5d0c8cdc7d08: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x5d0c8cf19ac3: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf19ac3: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf19ac3: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf19ac3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7bbd4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf7829a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa6654: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8ce2ed51: winterfell::main (winterfell/src/main.rs:22:32)",
"0x5d0c8ce5ad9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d0c8cf23e5f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf23e5f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf23e5f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf23e5f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7b3cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf78e87: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa5e8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8ceaabcd: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:51:26)",
"0x5d0c8ce3f3c0: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x5d0c8ce04c84: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8ce04c84: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8ce04c84: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5d0c8cf68c56: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5d0c8ce3ca4c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x5d0c8ce440bd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x5d0c8cdcddce: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x5d0c8ce45d52: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x5d0c8cf12997: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x5d0c8ce679ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d0c8cf33a55: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf33a55: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf33a55: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cebc877: winter_prover::Prover::generate_proof (prover/src/lib.rs:306:39)",
"0x5d0c8ce38ec7: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x5d0c8cdc5eae: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x5d0c8cdc9a1c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x5d0c8cf1c58d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf1c58d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf1c58d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf1c58d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7bd7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf77d34: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa630a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8cf05733: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x5d0c8d1cbea0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5d0c8d1cc108: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x5d0c8d1cc4ca: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x5d0c8d1cc4ca: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x5d0c8d1cc26e: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x5d0c8d1cc26e: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x5d0c8d1cc35d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x5d0c8cf339b5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf339b5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf339b5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cebc909: winter_prover::Prover::generate_proof (prover/src/lib.rs:309:32)",
"0x5d0c8ce61b7c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d0c8cf1b19f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf1b19f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf1b19f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf1b19f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7c54d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf79355: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa6ddd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8cdf71b1: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x5d0c8ced5a8b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5d0c8ced4e3d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5d0c8d04878a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5d0c8d0232a9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5d0c8cf8bbc8: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5d0c8cf8a195: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x5d0c8cf0e518: winter_prover::trace::Trace::validate (src/trace/mod.rs:123:26)",
"0x5d0c8cec0578: winter_prover::Prover::generate_proof (prover/src/lib.rs:379:17)",
"0x5d0c8cd7dd82: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5d0c8cd7dd82: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d0c8cd7dd82: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cd7dd82: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cd7dd82: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cd7dd82: std::io::buffered::bufwriter::BufWriter<W>::with_capacity (io/buffered/bufwriter.rs:115:33)",
"0x5d0c8cd7dd82: std::io::buffered::linewriter::LineWriter<W>::with_capacity (io/buffered/linewriter.rs:109:29)",
"0x5d0c8cd7dd82: std::io::buffered::linewriter::LineWriter<W>::new (io/buffered/linewriter.rs:89:9)",
"0x5d0c8cd7dd82: std::io::stdio::stdout::{{closure}} (src/io/stdio.rs:618:62)",
"0x5d0c8cd7dd82: std::sync::once_lock::OnceLock<T>::get_or_init::{{closure}} (src/sync/once_lock.rs:250:50)",
"0x5d0c8cd7dd82: std::sync::once_lock::OnceLock<T>::initialize::{{closure}} (src/sync/once_lock.rs:376:19)",
"0x5d0c8cd7dd82: std::sync::once::Once::call_once_force::{{closure}} (src/sync/once.rs:208:40)",
"0x5d0c8cd7dd82: std::sys_common::once::futex::Once::call (sys_common/once/futex.rs:124:21)",
"0x5d0c8cd7ceca: std::sync::once::Once::call_once_force (src/sync/once.rs:208:9)",
"0x5d0c8cd7ceca: std::sync::once_lock::OnceLock<T>::initialize (src/sync/once_lock.rs:375:9)",
"0x5d0c8d1e71c5: std::sync::once_lock::OnceLock<T>::get_or_try_init (src/sync/once_lock.rs:298:9)",
"0x5d0c8d1e71c5: std::sync::once_lock::OnceLock<T>::get_or_init (src/sync/once_lock.rs:250:15)",
"0x5d0c8d1e71c5: std::io::stdio::stdout (src/io/stdio.rs:618:14)",
"0x5d0c8d1e71c5: std::io::stdio::print_to (src/io/stdio.rs:1020:21)",
"0x5d0c8d1e71c5: std::io::stdio::_print (src/io/stdio.rs:1097:5)",
"0x5d0c8ce2f03a: winterfell::main (winterfell/src/main.rs:36:5)",
"0x5d0c8cefe1ce: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x5d0c8cddf325: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x5d0c8ceaa028: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:83:31)",
"0x5d0c8cfb07af: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5d0c8ce60e6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d0c8cf1bb29: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf1bb29: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf1bb29: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf1bb29: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7bcaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf7a084: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa619a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8ce4924b: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x5d0c8ce78611: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5d0c8ce9b288: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5d0c8cf59c0b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5d0c8ce093c9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x5d0c8ce542b9: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x5d0c8cda56e8: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:227:28)",
"0x5d0c8ce982a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5d0c8ce9ba98: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5d0c8cf5b91b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5d0c8ce3d0fa: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x5d0c8cf1869a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf1869a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf1869a: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf1869a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5d0c8cf7b4cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf79a1a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8d003f4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8ce3d243: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x5d0c8ce2fe36: <winterfell::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (winterfell/src/main.rs:133:9)",
"0x5d0c8cf967a8: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:216:31)",
"0x5d0c8cfb4d36: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5d0c8cfd2bd0: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5d0c8cfa0f66: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5d0c8cfa88f6: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5d0c8cef8bbd: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x5d0c8ce0da4c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x5d0c8cf05d54: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x5d0c8cdc61bf: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x5d0c8cdc7f9d: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x5d0c8ce95b21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5d0c8ce9b498: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5d0c8cf5d7ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5d0c8ce4edb7: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x5d0c8cedbbae: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x5d0c8d18804e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5d0c8d1899ec: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5d0c8d18855a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5d0c8cdce29f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x5d0c8ce49df3: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x5d0c8cebfe8b: winter_prover::Prover::generate_proof (prover/src/lib.rs:450:13)",
"0x5d0c8cf1759f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf1759f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf1759f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf1759f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf670d6: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5d0c8cf79bc5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa730d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8cdd53a8: winter_verifier::verify (verifier/src/lib.rs:102:24)",
"0x5d0c8ce5fc1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d0c8cdb03e2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cdb03e2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cdb03e2: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5d0c8cdc324b: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x5d0c8cdd941d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x5d0c8cebf217: winter_prover::Prover::generate_proof (prover/src/lib.rs:603:29)",
"0x5d0c8cf2e36f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf2e36f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf2e36f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf2e36f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7b89d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf79895: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa6bdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8cf0dfe2: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:140:32)",
"0x5d0c8cdaf388: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x5d0c8cedc55c: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x5d0c8cf8a129: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x5d0c8cedbb36: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x5d0c8cedf296: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x5d0c8ceb8bcf: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:369:9)",
"0x5d0c8cf06e5f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x5d0c8d01ede9: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x5d0c8cdd11ac: winter_verifier::perform_verification (verifier/src/lib.rs:275:24)",
"0x5d0c8cdd14f7: winter_verifier::perform_verification (verifier/src/lib.rs:298:27)",
"0x5d0c8cddb7be: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x5d0c8cdd1b34: winter_verifier::perform_verification (verifier/src/lib.rs:319:28)",
"0x5d0c8ce50b7f: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x5d0c8cf1e95f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf1e95f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf1e95f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf1e95f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7ca4d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf78e15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa6f5d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8d01c7af: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x5d0c8cf1a4ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf1a4ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf1a4ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf1a4ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7cd3d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf775f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa721d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8cde2ff2: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x5d0c8cdde21f: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x5d0c8cf32a22: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf32a22: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf32a22: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5d0c8cdc32c5: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x5d0c8d1cc0d9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5d0c8d1cc3d2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5d0c8d1cd159: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x5d0c8d18301a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x5d0c8ce5a5cc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d0c8cf1daff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf1daff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf1daff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf1daff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7b4ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf78337: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa6e8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8ce2eedf: winterfell::main (winterfell/src/main.rs:28:26)",
"0x5d0c8cda5a3f: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:230:34)",
"0x5d0c8cfae026: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5d0c8cfd43a7: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5d0c8cf270ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf270ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf270ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf270ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7b44d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf77625: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa613d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8cdafd28: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x5d0c8cdc5440: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x5d0c8cfaddb6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5d0c8cdadb11: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5d0c8d004472: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x5d0c8ce4099f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x5d0c8cdc3238: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x5d0c8ce59b4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d0c8ceb84c4: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8ceb84c4: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8ceb84c4: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5d0c8cf68bf6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5d0c8ce300ad: <winterfell::WorkAir as winter_air::air::Air>::new (winterfell/src/main.rs:151:23)",
"0x5d0c8cf97f36: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:226:17)",
"0x5d0c8cfb219e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5d0c8cf310e6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5d0c8cdd66db: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x5d0c8d1929e9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8d1929e9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8d1929e9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8d1929e9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5d0c8d192e2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8d192df7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8d192fce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8d1954c9: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x5d0c8ce06999: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x5d0c8cf0e9a5: winter_prover::trace::Trace::validate (src/trace/mod.rs:179:13)",
"0x5d0c8cf0d131: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x5d0c8cee1853: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x5d0c8cf94832: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x5d0c8cdb132d: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x5d0c8cebfe30: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:13)",
"0x5d0c8ce620bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d0c8cf136af: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf136af: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf136af: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf136af: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf68705: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5d0c8cf7950a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa5b3d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8cdcc891: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x5d0c8cdf84bd: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x5d0c8ceceeb8: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:716:26)",
"0x5d0c8cebd931: winter_prover::Prover::generate_proof (prover/src/lib.rs:482:37)",
"0x5d0c8ce5e1fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d0c8cf20622: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf20622: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf20622: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf20622: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5d0c8cf7bdaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf77484: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cf948ea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8cf03d67: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x5d0c8cf2dd2f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf2dd2f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf2dd2f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf2dd2f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7b56d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf78125: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa698d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8d015d29: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x5d0c8cdf358a: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:155:31)",
"0x5d0c8cdf6e25: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:128:17)",
"0x5d0c8cff1c6e: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5d0c8d1900f0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5d0c8d184669: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5d0c8d183e51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5d0c8d183950: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x5d0c8d0165ed: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x5d0c8cf32328: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf32328: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf32328: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5d0c8cf6a205: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5d0c8cf6a205: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5d0c8cf6a205: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5d0c8cebdea3: winter_prover::Prover::generate_proof (prover/src/lib.rs:510:39)",
"0x5d0c8cf1718f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf1718f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf1718f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf1718f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7bccd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf78cd7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa650d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8cf9baa0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x5d0c8cdb1461: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x5d0c8ce4803f: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x5d0c8cea018f: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x5d0c8ce4093d: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x5d0c8d19248b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5d0c8d191e51: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5d0c8d18b54b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5d0c8d185c41: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5d0c8d1862c7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5d0c8d19595b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5d0c8cf26acf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf26acf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf26acf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf26acf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7ba5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf78c45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa6e4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8cda51cf: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:283:9)",
"0x5d0c8cfb8d85: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x5d0c8cfb8e16: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5d0c8cdd1edf: winter_verifier::perform_verification (verifier/src/lib.rs:228:13)",
"0x5d0c8cdde6fe: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x5d0c8ce08f66: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x5d0c8cee90d2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x5d0c8cda389d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x5d0c8cdb1f63: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x5d0c8cda7036: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5d0c8cf97c48: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:300:57)",
"0x5d0c8cef88a2: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x5d0c8d035f7b: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5d0c8d0401a9: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5d0c8d03a416: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5d0c8cf0e1b0: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:140:51)",
"0x5d0c8cfaf476: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5d0c8cdadfc1: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5d0c8cf0676e: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x5d0c8cebfe70: winter_prover::Prover::generate_proof (prover/src/lib.rs:449:13)",
"0x5d0c8cf33af5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf33af5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf33af5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8ce9dc07: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5d0c8cdc0237: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x5d0c8cdf7a29: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x5d0c8cfb51d6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5d0c8cf94c5a: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x5d0c8d0086a7: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x5d0c8ceeb889: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x5d0c8cdfd081: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x5d0c8cdfbe86: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5d0c8cecd12f: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:655:31)",
"0x5d0c8cdc7a93: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x5d0c8ce0631d: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x5d0c8cefd2d4: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x5d0c8d01678d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x5d0c8ce492f2: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x5d0c8ce5d23c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d0c8cf17bd9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf17bd9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf17bd9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf17bd9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7c00a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf79c44: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa6c2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8cdc54b2: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x5d0c8d00ad94: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x5d0c8d01695d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x5d0c8ce5a32c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d0c8cdb2aea: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cdb2aea: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cdb2aea: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5d0c8cf68ca6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5d0c8ce49508: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x5d0c8ce81a31: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5d0c8ce9b048: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5d0c8cf5e55e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5d0c8cdd23b2: winter_verifier::perform_verification (verifier/src/lib.rs:179:9)",
"0x5d0c8ce04428: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x5d0c8cebc132: winter_prover::Prover::generate_proof (prover/src/lib.rs:262:22)",
"0x5d0c8cdb8106: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x5d0c8cdf4ac9: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:290:18)",
"0x5d0c8cdf388e: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:173:30)",
"0x5d0c8ce68edc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d0c8cf2b25f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf2b25f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf2b25f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf2b25f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf6818b: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5d0c8cf788d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa656d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8cebc7f7: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:36)",
"0x5d0c8cdf35e4: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:156:33)",
"0x5d0c8cdf68b2: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:28)",
"0x5d0c8ced7dca: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x5d0c8ce50b3e: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x5d0c8ce7d511: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5d0c8ce9ba08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5d0c8cf5940e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5d0c8ce40c69: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x5d0c8cf98f8c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:40:30)",
"0x5d0c8d015e04: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x5d0c8cef8b6c: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x5d0c8cdf99d6: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x5d0c8cdf8e23: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x5d0c8cecd6ee: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:669:26)",
"0x5d0c8cf134b9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf134b9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf134b9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf134b9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7b8ea: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf784f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa639a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8cea9fe8: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:83:9)",
"0x5d0c8ce6917c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d0c8cf2beef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf2beef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf2beef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf2beef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7c27d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf77c65: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cf889bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8cebc033: winter_prover::Prover::generate_proof (prover/src/lib.rs:248:41)",
"0x5d0c8ce50d26: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x5d0c8d1832c6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x5d0c8d0166ca: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x5d0c8cdd5330: winter_verifier::verify (verifier/src/lib.rs:98:38)",
"0x5d0c8d0aef36: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8d0aef36: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8d0aef36: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8ce0607a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x5d0c8ce30247: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:176:13)",
"0x5d0c8ce43c29: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x5d0c8cf310a6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5d0c8cebd4d0: winter_prover::Prover::generate_proof (prover/src/lib.rs:452:35)",
"0x5d0c8ced707b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5d0c8ced428d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5d0c8d0482ea: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5d0c8d023009: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5d0c8cf8ca75: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5d0c8ce03598: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5d0c8d006b89: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x5d0c8cebe6b8: winter_prover::Prover::generate_proof (prover/src/lib.rs:558:13)",
"0x5d0c8ce0adac: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x5d0c8ced7d4a: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x5d0c8ce43e24: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x5d0c8ce4a003: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x5d0c8ce4b210: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x5d0c8ce0931c: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x5d0c8cf24e94: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf24e94: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf24e94: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf24e94: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5d0c8cf7b5da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf79ec4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa6c5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8ce0c46e: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x5d0c8d0064f9: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x5d0c8ce0437b: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x5d0c8cf14f8f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf14f8f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf14f8f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf14f8f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7c06d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf77f75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa579d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8cdc53a8: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x5d0c8cf0d55d: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:243:25)",
"0x5d0c8ce2fd94: winterfell::build_do_work_trace (winterfell/src/main.rs:91:5)",
"0x5d0c8cecf60b: winterfell::main::{{closure}} (winterfell/src/main.rs:30:23)",
"0x5d0c8ce06517: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x5d0c8cdd1636: winter_verifier::perform_verification (verifier/src/lib.rs:305:9)",
"0x5d0c8cdd603b: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:102:85)",
"0x5d0c8cfb2a6e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5d0c8cf2cd1f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf2cd1f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf2cd1f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf2cd1f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7b61d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf774f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa634d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8cdc67f7: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x5d0c8cee90f5: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x5d0c8ce5d77c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d0c8cf21bf2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf21bf2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf21bf2: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf21bf2: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5d0c8cf7cb7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf77c35: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa58cd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8cedba6a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x5d0c8cee94ab: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x5d0c8cdaf4f5: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x5d0c8cdfb9bd: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x5d0c8cdf7c90: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x5d0c8cdfa614: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x5d0c8ce3f499: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x5d0c8cf1a2ef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf1a2ef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf1a2ef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf1a2ef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7c4cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf78d15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa57dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8cdd68d5: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x5d0c8cf173a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf173a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf173a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf173a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7c48a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf77fc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa6a3a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8cebbd8f: winter_prover::Prover::generate_proof (prover/src/lib.rs:214:39)",
"0x5d0c8cdd6f56: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x5d0c8cfb3eb6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5d0c8cfd8fbd: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5d0c8ced409a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x5d0c8cee8cbe: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x5d0c8ceb8012: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8ceb8012: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8ceb8012: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5d0c8cf6ab05: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5d0c8cf6ab05: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5d0c8cf6ab05: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5d0c8cdb8b95: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x5d0c8cf24b9d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf24b9d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf24b9d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cf24b9d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d0c8cf7b2aa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d0c8cf78394: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d0c8cfa6b5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d0c8cf055c3: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x5d0c8cf982f8: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:651:17)",
"0x5d0c8cdf8d9a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x5d0c8cebc511: winter_prover::Prover::generate_proof (prover/src/lib.rs:274:13)",
"0x5d0c8cf06d01: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x5d0c8cfb8d72: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x5d0c8ce0fc4b: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x5d0c8cde2ca0: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x5d0c8cf333c5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d0c8cf333c5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d0c8cf333c5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d0c8cebc8cd: winter_prover::Prover::generate_proof (prover/src/lib.rs:308:37)",
"0x5d0c8ce503b5: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)"
]
}