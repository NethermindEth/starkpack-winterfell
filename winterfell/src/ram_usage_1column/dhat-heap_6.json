{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell",
"pid": 28344,
"tg": 238228,
"te": 738900,
"pps": [
{
"tb": 24,
"tbk": 1,
"tl": 493902,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8
]
},
{
"tb": 7680,
"tbk": 2,
"tl": 778,
"mb": 3968,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
9,
10,
11,
12,
13,
14,
15
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 3534,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
17,
18,
19,
20,
21,
22,
23,
24,
7
]
},
{
"tb": 32,
"tbk": 1,
"tl": 45079,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
27,
28,
29,
30,
7
]
},
{
"tb": 8,
"tbk": 1,
"tl": 205605,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
31,
32,
33,
34,
35,
36,
37,
38,
39
]
},
{
"tb": 39424,
"tbk": 202,
"tl": 91556,
"mb": 9216,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 24,
"tbk": 1,
"tl": 226103,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
49,
50,
51,
52,
53,
54,
55,
56
]
},
{
"tb": 80,
"tbk": 1,
"tl": 734030,
"mb": 80,
"mbk": 1,
"gb": 80,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
57,
58,
59,
60,
61,
62,
63,
64,
65
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2368,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
66,
67,
68,
69,
70,
71,
72
]
},
{
"tb": 512,
"tbk": 1,
"tl": 270,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
66,
67,
68,
73,
74,
75,
76
]
},
{
"tb": 512,
"tbk": 1,
"tl": 28,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
66,
67,
68,
77,
78,
75,
76
]
},
{
"tb": 7680,
"tbk": 2,
"tl": 259,
"mb": 3968,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
9,
10,
11,
12,
13,
14,
79
]
},
{
"tb": 32,
"tbk": 1,
"tl": 4467,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
40,
80,
81,
82,
83,
84,
85,
86
]
},
{
"tb": 48,
"tbk": 2,
"tl": 64,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
89,
90,
91,
92,
93
]
},
{
"tb": 8192,
"tbk": 1,
"tl": 720184,
"mb": 8192,
"mbk": 1,
"gb": 8192,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
66,
67,
68,
94,
95,
96,
97
]
},
{
"tb": 65568,
"tbk": 3,
"tl": 1226,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
66,
67,
68,
94,
98,
99,
100
]
},
{
"tb": 64,
"tbk": 1,
"tl": 3141,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
102,
103,
104,
105,
106,
107
]
},
{
"tb": 512,
"tbk": 1,
"tl": 20,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
17,
18,
19,
108,
109,
110,
111,
74,
75
]
},
{
"tb": 48,
"tbk": 1,
"tl": 43139,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
112,
113,
114,
115,
116,
117,
118
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 23,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
17,
18,
19,
108,
109,
110,
119,
120,
7
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 27824,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
40,
80,
81,
82,
121,
122,
123,
124
]
},
{
"tb": 256,
"tbk": 1,
"tl": 3992,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
66,
67,
68,
69,
125,
126,
86
]
},
{
"tb": 72,
"tbk": 1,
"tl": 494525,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
127,
128,
129,
130,
131,
132,
133,
134,
135
]
},
{
"tb": 16,
"tbk": 1,
"tl": 20054,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 96,
"tbk": 1,
"tl": 29,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
102,
145,
146,
147,
148,
74
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1076,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
150,
151,
152,
153,
154,
155,
156,
157,
158
]
},
{
"tb": 1048576,
"tbk": 64,
"tl": 46963443,
"mb": 1048576,
"mbk": 64,
"gb": 1048576,
"gbk": 64,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
66,
67,
68,
94,
159,
160,
161
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 13214,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
112,
113,
114,
115,
162,
163,
164
]
},
{
"tb": 2097152,
"tbk": 64,
"tl": 201232,
"mb": 2097152,
"mbk": 64,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
17,
18,
19,
108,
109,
110,
165,
166,
167,
168,
169
]
},
{
"tb": 32,
"tbk": 1,
"tl": 45084,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
27,
28,
29,
170,
7
]
},
{
"tb": 832,
"tbk": 8,
"tl": 193,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
171,
172,
173,
174,
175,
176
]
},
{
"tb": 1600,
"tbk": 8,
"tl": 131,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
177,
178,
179,
180,
181,
182
]
},
{
"tb": 1296,
"tbk": 2,
"tl": 5406,
"mb": 1296,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
183,
184,
185,
186,
187,
188,
189,
190
]
},
{
"tb": 48,
"tbk": 1,
"tl": 481191,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
191,
192,
193,
194,
195,
196,
197,
198,
199
]
},
{
"tb": 48,
"tbk": 1,
"tl": 31965,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
200,
201,
202,
203,
204,
205,
206,
207,
208
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 141,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
17,
18,
19,
108,
109,
110,
209,
210,
211
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3135,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
66,
67,
68,
212,
213,
75,
76
]
},
{
"tb": 2049,
"tbk": 1,
"tl": 60,
"mb": 2049,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
214,
215,
216,
217,
218,
219,
220,
221,
222,
223
]
},
{
"tb": 40,
"tbk": 1,
"tl": 205629,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
224,
225,
226,
227,
228,
229,
230,
231,
232
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
214,
215,
216,
217,
233,
234,
235,
236,
237,
238
]
},
{
"tb": 288,
"tbk": 1,
"tl": 4573,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
102,
239,
240,
241,
242,
243
]
},
{
"tb": 72,
"tbk": 1,
"tl": 3390,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
244,
245,
7,
8
]
},
{
"tb": 96,
"tbk": 1,
"tl": 3146,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
102,
145,
146,
147,
246,
107
]
},
{
"tb": 8388608,
"tbk": 8,
"tl": 728461,
"mb": 8388608,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
247,
248,
249,
250,
251,
252,
253,
254
]
},
{
"tb": 7680,
"tbk": 2,
"tl": 1128,
"mb": 3968,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
247,
255,
256,
257,
258,
259,
260,
261,
262
]
},
{
"tb": 512,
"tbk": 1,
"tl": 15,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
66,
67,
68,
94,
98,
263,
74
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 764,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
66,
67,
68,
94,
95,
264,
265
]
},
{
"tb": 17382,
"tbk": 10,
"tl": 2241,
"mb": 8704,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
266,
267,
268,
269,
270
]
},
{
"tb": 56,
"tbk": 1,
"tl": 1535,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
271,
272,
86,
76
]
},
{
"tb": 224,
"tbk": 1,
"tl": 3721,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
102,
273,
274,
275,
276,
190
]
},
{
"tb": 96,
"tbk": 1,
"tl": 3717,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
102,
145,
146,
147,
277,
190
]
},
{
"tb": 960,
"tbk": 8,
"tl": 1261,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
102,
278,
279,
280,
281,
282
]
},
{
"tb": 1984,
"tbk": 5,
"tl": 3156,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
102,
103,
104,
105,
283,
107
]
},
{
"tb": 896,
"tbk": 6,
"tl": 4546,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
102,
103,
104,
105,
284,
285
]
},
{
"tb": 24,
"tbk": 1,
"tl": 430714,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
286,
287,
288,
289,
290,
7
]
},
{
"tb": 16,
"tbk": 1,
"tl": 720465,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
291,
292,
293,
294,
295,
296,
297,
298
]
},
{
"tb": 48,
"tbk": 2,
"tl": 861201,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
299,
300,
301,
302,
303,
304,
305,
306,
307,
308
]
},
{
"tb": 72,
"tbk": 1,
"tl": 3605,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
200,
309,
310,
311,
166,
167,
168,
312,
313,
7
]
},
{
"tb": 1536,
"tbk": 1,
"tl": 3577,
"mb": 1536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
200,
309,
310,
311,
166,
167,
168,
169,
313,
7
]
},
{
"tb": 65568,
"tbk": 3,
"tl": 1221,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
66,
67,
68,
94,
314,
100,
315
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
214,
215,
216,
217,
233,
234,
235,
236,
316,
317
]
},
{
"tb": 61440,
"tbk": 2,
"tl": 785,
"mb": 31744,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
9,
10,
11,
12,
13,
14,
318
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 1985,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
40,
319,
320,
321,
322,
323,
324,
325,
326
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
214,
215,
216,
217,
233,
234,
235,
236,
237,
317
]
},
{
"tb": 1888,
"tbk": 8,
"tl": 755,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
150,
327,
328,
329,
330,
331,
332,
333,
334
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 1023,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
27,
28,
29,
335,
336
]
},
{
"tb": 256,
"tbk": 1,
"tl": 4208,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
17,
18,
19,
20,
21,
22,
337,
338,
339
]
},
{
"tb": 7392,
"tbk": 32,
"tl": 61296,
"mb": 7392,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
40,
80,
81,
82,
83,
340,
341,
72
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 542017,
"mb": 8388608,
"mbk": 1,
"gb": 8388608,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
247,
248,
249,
250,
251,
342,
343,
344
]
},
{
"tb": 2080,
"tbk": 20,
"tl": 268,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
171,
172,
173,
345,
346,
347
]
},
{
"tb": 1296,
"tbk": 2,
"tl": 1078,
"mb": 720,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
183,
184,
185,
186,
348,
349,
350,
351
]
},
{
"tb": 17382,
"tbk": 10,
"tl": 1054,
"mb": 8704,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
266,
267,
268,
269,
352
]
},
{
"tb": 960,
"tbk": 8,
"tl": 170,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
27,
28,
29,
353,
349
]
},
{
"tb": 48,
"tbk": 2,
"tl": 97,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
354,
89,
90,
91,
92,
93
]
},
{
"tb": 32,
"tbk": 1,
"tl": 98,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
355,
356,
7,
8
]
},
{
"tb": 99539,
"tbk": 7,
"tl": 4600,
"mb": 65926,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
102,
357,
358,
359,
360,
361
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 47758,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
9,
10,
11,
12,
13,
14,
362
]
},
{
"tb": 16,
"tbk": 1,
"tl": 69,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
363,
364,
365,
366,
367,
75
]
},
{
"tb": 1984,
"tbk": 5,
"tl": 9527,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
102,
103,
104,
105,
283,
368
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 44638,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
9,
10,
11,
12,
13,
14,
369
]
},
{
"tb": 96,
"tbk": 1,
"tl": 24,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
102,
145,
146,
147,
370,
74
]
},
{
"tb": 24,
"tbk": 1,
"tl": 434138,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
299,
300,
301,
302,
303,
304,
305,
306,
371,
372
]
},
{
"tb": 1048576,
"tbk": 64,
"tl": 13838954,
"mb": 1048576,
"mbk": 64,
"gb": 1048576,
"gbk": 64,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
17,
18,
19,
108,
109,
110,
373,
374,
375
]
},
{
"tb": 7680,
"tbk": 60,
"tl": 49,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
376,
377,
378,
379,
380,
381,
382,
383
]
},
{
"tb": 32,
"tbk": 1,
"tl": 154,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
384,
385,
386,
387,
388,
389
]
},
{
"tb": 96,
"tbk": 1,
"tl": 12,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
390,
391,
392,
393,
394,
395,
396,
397,
398
]
},
{
"tb": 8,
"tbk": 1,
"tl": 225502,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
31,
399,
400,
401,
402,
403,
404,
405,
406
]
},
{
"tb": 1984,
"tbk": 5,
"tl": 162,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
102,
103,
104,
105,
407,
408
]
},
{
"tb": 96,
"tbk": 1,
"tl": 5363,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
409,
410,
411,
412,
413,
414,
351,
7,
8
]
},
{
"tb": 1536,
"tbk": 1,
"tl": 481182,
"mb": 1536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
200,
309,
310,
311,
166,
167,
168,
415,
416,
417
]
},
{
"tb": 1984,
"tbk": 5,
"tl": 3371,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
102,
103,
104,
105,
407,
418
]
},
{
"tb": 1088,
"tbk": 2,
"tl": 29,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
419,
420,
421,
422,
423,
424
]
},
{
"tb": 1608,
"tbk": 2,
"tl": 867431,
"mb": 1608,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
200,
425,
426,
427,
428,
429,
430,
431,
432
]
},
{
"tb": 96,
"tbk": 1,
"tl": 9,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
102,
145,
146,
147,
433,
86
]
},
{
"tb": 32,
"tbk": 1,
"tl": 137,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
17,
18,
19,
108,
109,
110,
434,
210,
211
]
},
{
"tb": 512,
"tbk": 1,
"tl": 274,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
66,
67,
68,
435,
74,
75,
76
]
},
{
"tb": 128,
"tbk": 1,
"tl": 1766,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
436,
437,
438,
439,
440,
441,
442,
443
]
},
{
"tb": 24,
"tbk": 1,
"tl": 7,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
200,
309,
310,
311,
166,
167,
168,
444,
445,
446
]
},
{
"tb": 128,
"tbk": 1,
"tl": 2515,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
102,
447,
448,
449,
450,
451
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 430709,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
452,
453,
454,
455,
456,
457,
458,
459,
288,
289
]
},
{
"tb": 16,
"tbk": 1,
"tl": 99,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
363,
460,
365,
461,
462,
290
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 15647,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
66,
67,
68,
94,
463,
464,
465
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 380310,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
66,
67,
68,
94,
95,
264,
466
]
},
{
"tb": 1536,
"tbk": 1,
"tl": 226062,
"mb": 1536,
"mbk": 1,
"gb": 1536,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
200,
467,
468,
469,
470,
471,
472,
473,
474
]
},
{
"tb": 36864,
"tbk": 2,
"tl": 5530,
"mb": 36864,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
40,
80,
81,
82,
121,
475,
476,
243
]
},
{
"tb": 72,
"tbk": 3,
"tl": 10704,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
299,
300,
301,
302,
303,
304,
305,
306,
477,
478,
479,
480
]
},
{
"tb": 96,
"tbk": 1,
"tl": 2766,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
481,
482,
483,
484,
485
]
},
{
"tb": 512,
"tbk": 1,
"tl": 8,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
486,
487,
488,
489,
490,
491,
492,
493
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 29367,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
40,
80,
81,
82,
121,
494,
495,
496
]
},
{
"tb": 1904,
"tbk": 15,
"tl": 40,
"mb": 240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
150,
497,
498,
499,
500,
501,
502,
503,
349,
350
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1507,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
200,
504,
505,
506,
507,
508,
509,
510,
511
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1518,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
112,
113,
114,
115,
512,
513,
514
]
},
{
"tb": 96,
"tbk": 1,
"tl": 45090,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
102,
145,
146,
147,
515,
7
]
},
{
"tb": 48,
"tbk": 1,
"tl": 118,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
516,
356,
7,
8
]
},
{
"tb": 44232,
"tbk": 97,
"tl": 16929,
"mb": 15048,
"mbk": 33,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
517,
518,
519,
520,
521,
522
]
},
{
"tb": 16,
"tbk": 1,
"tl": 734256,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
523,
524,
525,
526,
527,
528,
529,
530
]
},
{
"tb": 4224,
"tbk": 22,
"tl": 6297,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
531,
532,
533,
534,
535,
536
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3570,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
17,
18,
19,
108,
109,
110,
537,
477,
478,
479,
480
]
},
{
"tb": 48,
"tbk": 2,
"tl": 868248,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
299,
300,
301,
302,
303,
304,
305,
306,
538,
539
]
},
{
"tb": 64,
"tbk": 1,
"tl": 137,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
102,
103,
104,
105,
540,
408
]
},
{
"tb": 7680,
"tbk": 60,
"tl": 58,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
66,
67,
68,
69,
541,
189,
190
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 105,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
9,
10,
11,
12,
13,
14,
542
]
},
{
"tb": 16,
"tbk": 1,
"tl": 434135,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
17,
18,
19,
108,
109,
110,
537,
371,
372
]
},
{
"tb": 7680,
"tbk": 2,
"tl": 6849,
"mb": 7680,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
66,
67,
68,
543,
189,
190,
86
]
},
{
"tb": 32,
"tbk": 1,
"tl": 958,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
27,
28,
29,
544,
485
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 1828,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
66,
67,
68,
69,
70,
545,
451
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1523,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
546,
547,
548,
549,
550,
551,
552,
553,
554
]
},
{
"tb": 256,
"tbk": 1,
"tl": 9,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
17,
18,
19,
108,
109,
110,
555,
351,
7
]
},
{
"tb": 1536,
"tbk": 1,
"tl": 733999,
"mb": 1536,
"mbk": 1,
"gb": 1536,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
200,
556,
557,
558,
559,
560,
561,
562,
563
]
},
{
"tb": 256,
"tbk": 1,
"tl": 959,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
150,
497,
498,
499,
564,
565,
566,
567,
568,
569
]
},
{
"tb": 21708,
"tbk": 18,
"tl": 8405,
"mb": 10880,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
266,
267,
268,
269,
570
]
},
{
"tb": 1920,
"tbk": 2,
"tl": 5681,
"mb": 1920,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
40,
571,
572,
573,
574,
575,
189,
190
]
},
{
"tb": 128,
"tbk": 2,
"tl": 1942,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
66,
67,
68,
94,
95,
264,
576
]
},
{
"tb": 480,
"tbk": 4,
"tl": 3121,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
27,
28,
29,
577,
578
]
},
{
"tb": 96,
"tbk": 1,
"tl": 1383,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
102,
579,
580,
581,
582,
583
]
},
{
"tb": 1824,
"tbk": 4,
"tl": 1141,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
517,
518,
519,
584,
585,
586
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1280,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
40,
571,
572,
573,
574,
587,
588,
589
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1506,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
590,
591,
592,
593,
594,
595,
596,
597,
598
]
},
{
"tb": 24,
"tbk": 1,
"tl": 161,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
200,
599,
600,
601,
602,
603,
604,
605,
606
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 45126,
"mb": 8388608,
"mbk": 1,
"gb": 8388608,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
17,
18,
19,
108,
109,
110,
607,
608,
609
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 3524,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
66,
67,
68,
94,
95,
264,
610
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1986,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
183,
184,
185,
186,
187,
341,
72,
611
]
},
{
"tb": 96,
"tbk": 1,
"tl": 19,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
612,
365,
366,
367,
75,
76
]
},
{
"tb": 640,
"tbk": 5,
"tl": 1507,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
102,
613,
614,
615,
616,
349
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 2574,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
66,
67,
68,
69,
70,
617,
451
]
},
{
"tb": 16,
"tbk": 1,
"tl": 5,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
363,
460,
618,
619,
7,
8
]
},
{
"tb": 8388608,
"tbk": 8192,
"tl": 13909,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
17,
18,
19,
20,
21,
22,
620,
621,
622
]
},
{
"tb": 96,
"tbk": 1,
"tl": 721534,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
623,
624,
625,
626,
627,
628,
629,
630,
631
]
},
{
"tb": 8,
"tbk": 1,
"tl": 15,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
150,
632,
633,
634,
635,
636,
637,
638,
639
]
},
{
"tb": 18432,
"tbk": 2,
"tl": 2305,
"mb": 18432,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
66,
67,
68,
94,
640,
641,
243
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 720150,
"mb": 32768,
"mbk": 1,
"gb": 32768,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
66,
67,
68,
94,
95,
642,
643
]
},
{
"tb": 144,
"tbk": 1,
"tl": 3579,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
390,
644,
645,
646,
478,
479,
480,
647,
313,
7
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1101,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
150,
648,
649,
650,
651,
652,
653,
654,
655
]
},
{
"tb": 24,
"tbk": 1,
"tl": 123,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
286,
287,
288,
656,
367,
75
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 160246,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
66,
67,
68,
94,
463,
464,
657
]
},
{
"tb": 72,
"tbk": 3,
"tl": 64,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
658,
659,
660,
661,
662,
663,
664,
665,
666
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 8509,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
66,
67,
68,
94,
667,
668,
669
]
},
{
"tb": 36864,
"tbk": 2,
"tl": 5262,
"mb": 36864,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
40,
80,
81,
82,
121,
122,
123,
670
]
},
{
"tb": 480,
"tbk": 4,
"tl": 4192,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
27,
28,
29,
577,
671
]
},
{
"tb": 480,
"tbk": 2,
"tl": 1686,
"mb": 248,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
150,
497,
498,
499,
564,
565,
566,
672,
673,
568
]
},
{
"tb": 512,
"tbk": 1,
"tl": 14,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
66,
67,
68,
94,
98,
674,
78
]
},
{
"tb": 64,
"tbk": 1,
"tl": 3360,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
102,
103,
104,
105,
540,
418
]
},
{
"tb": 32800,
"tbk": 33,
"tl": 42348,
"mb": 32768,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
17,
18,
19,
108,
109,
110,
165,
166,
167,
168,
444
]
},
{
"tb": 512,
"tbk": 1,
"tl": 2125,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
675,
676,
677,
678,
679,
680,
681,
682
]
},
{
"tb": 2304,
"tbk": 8,
"tl": 2312,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
683,
684,
685,
686,
687,
688
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1210,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
183,
184,
185,
186,
348,
689,
583,
245
]
},
{
"tb": 96,
"tbk": 1,
"tl": 4460,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
40,
80,
81,
82,
83,
690,
85,
86
]
},
{
"tb": 288,
"tbk": 2,
"tl": 768,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
112,
113,
114,
115,
691,
692,
568
]
},
{
"tb": 320,
"tbk": 2,
"tl": 861193,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
102,
693,
694,
695,
696,
308
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 21,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
66,
67,
68,
69,
697,
698,
86
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
384,
699,
76
]
},
{
"tb": 7392,
"tbk": 32,
"tl": 51119,
"mb": 7392,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
40,
80,
81,
82,
83,
340,
700,
451
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 6558,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
9,
10,
11,
12,
13,
14,
701
]
},
{
"tb": 8,
"tbk": 1,
"tl": 293,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
150,
702,
703,
704,
705,
706,
707,
708,
709
]
},
{
"tb": 512,
"tbk": 1,
"tl": 17,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
66,
67,
68,
710,
78,
75,
76
]
},
{
"tb": 1968,
"tbk": 2,
"tl": 51,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
711,
712,
713,
714,
715,
716
]
},
{
"tb": 960,
"tbk": 8,
"tl": 2496,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
102,
278,
279,
280,
281,
717
]
},
{
"tb": 160,
"tbk": 1,
"tl": 3405,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
102,
718,
719,
720,
721,
86
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 387038,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
66,
67,
68,
94,
722,
723,
724
]
},
{
"tb": 1536,
"tbk": 8,
"tl": 2390,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
531,
532,
533,
725,
726,
727
]
},
{
"tb": 160,
"tbk": 1,
"tl": 3344,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
728,
729,
730,
731,
732,
733,
734,
735,
736
]
},
{
"tb": 240,
"tbk": 2,
"tl": 434119,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
737,
372,
7,
8
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 3413,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
17,
18,
19,
108,
109,
110,
119,
738,
86
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 14418,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
112,
113,
114,
115,
739,
619,
7
]
},
{
"tb": 4032,
"tbk": 6,
"tl": 15,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
102,
103,
104,
105,
740,
741
]
},
{
"tb": 7680,
"tbk": 2,
"tl": 298,
"mb": 3968,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
66,
67,
68,
94,
98,
742,
692
]
},
{
"tb": 16,
"tbk": 1,
"tl": 97,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
363,
364,
365,
461,
462,
290
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 496027,
"mb": 262144,
"mbk": 1,
"gb": 262144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
40,
80,
81,
82,
121,
122,
123,
743
]
},
{
"tb": 1152,
"tbk": 4,
"tl": 130,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
102,
744,
745,
746,
747,
748
]
},
{
"tb": 192,
"tbk": 1,
"tl": 3356,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
102,
749,
750,
751,
752,
75
]
},
{
"tb": 2048,
"tbk": 6,
"tl": 860446,
"mb": 1088,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
102,
753,
754,
755,
756,
757
]
},
{
"tb": 4343,
"tbk": 9,
"tl": 21293,
"mb": 2176,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
102,
357,
358,
359,
360,
758
]
},
{
"tb": 384,
"tbk": 1,
"tl": 430612,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
759,
760,
761,
762,
763,
764,
765,
766,
767
]
},
{
"tb": 512,
"tbk": 1,
"tl": 380319,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
150,
768,
769,
770,
771,
772,
372,
7
]
},
{
"tb": 16,
"tbk": 1,
"tl": 27,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
136,
773,
774,
775,
776,
777,
778,
779,
7,
8
]
},
{
"tb": 96,
"tbk": 1,
"tl": 3389,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
102,
780,
781,
782,
783,
75
]
},
{
"tb": 98304,
"tbk": 3,
"tl": 10780,
"mb": 98304,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
17,
18,
19,
108,
109,
110,
165,
166,
167,
168,
312
]
},
{
"tb": 96,
"tbk": 1,
"tl": 29,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
612,
365,
461,
462,
290,
7
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 995,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
102,
145,
146,
147,
784,
589
]
},
{
"tb": 2080,
"tbk": 3,
"tl": 29819,
"mb": 2080,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
785,
786,
787,
788,
789,
790,
791,
792
]
},
{
"tb": 992,
"tbk": 5,
"tl": 434126,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
27,
28,
29,
793,
794
]
},
{
"tb": 16,
"tbk": 1,
"tl": 720195,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
795,
796,
797,
798,
799,
800,
801,
802,
803
]
},
{
"tb": 5520,
"tbk": 10,
"tl": 1365,
"mb": 2208,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
804,
805,
806,
807,
808,
809
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1535,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
810,
811,
812,
813,
814,
815,
816,
817,
818
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 725042,
"mb": 1024,
"mbk": 1,
"gb": 1024,
"gbk": 1,
"eb": 1024,
"ebk": 1,
"fs": [
819,
820,
821,
822,
823,
824,
825,
826,
827,
828,
829,
830,
831,
832,
833,
834,
835,
836,
837,
838,
839
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1206,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
40,
571,
572,
573,
574,
587,
689,
583
]
},
{
"tb": 16,
"tbk": 1,
"tl": 721522,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
101,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 3348,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
17,
18,
19,
108,
109,
110,
850,
851,
852
]
},
{
"tb": 24,
"tbk": 1,
"tl": 493915,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
853,
854,
855,
856,
857,
7,
8
]
},
{
"tb": 16,
"tbk": 1,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
840,
841,
842,
843,
844,
845,
846,
847,
858,
86
]
},
{
"tb": 24,
"tbk": 1,
"tl": 493911,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
859,
860,
861,
862,
863,
7,
8
]
},
{
"tb": 512,
"tbk": 1,
"tl": 2739,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
150,
497,
498,
499,
500,
501,
502,
864,
313,
7
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 113,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
17,
18,
19,
20,
21,
22,
865,
288,
656
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 43135,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
112,
113,
114,
115,
866,
117,
118
]
},
{
"tb": 1920,
"tbk": 8,
"tl": 1145,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
102,
103,
104,
105,
867,
868
]
},
{
"tb": 512,
"tbk": 1,
"tl": 3581,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
102,
869,
870,
871,
872,
7
]
},
{
"tb": 512,
"tbk": 1,
"tl": 44,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
873,
874,
875,
876,
877,
878,
879,
880
]
},
{
"tb": 480,
"tbk": 4,
"tl": 141,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
27,
28,
29,
353,
689
]
},
{
"tb": 256,
"tbk": 1,
"tl": 393,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
150,
768,
769,
770,
881,
336,
882,
883
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1776,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
66,
67,
68,
884,
885,
75,
76
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1610,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
214,
886,
887,
888,
889,
890,
589,
7
]
},
{
"tb": 1920,
"tbk": 2,
"tl": 1074,
"mb": 992,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
40,
571,
572,
573,
574,
587,
349,
350
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1082,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
150,
891,
892,
893,
894,
895,
896,
897,
898
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 2946,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
17,
18,
19,
108,
109,
110,
119,
899,
356
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
900,
901,
317,
76
]
},
{
"tb": 216,
"tbk": 1,
"tl": 4526,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
902,
903,
904,
905,
906,
907,
908,
909,
910
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 2800,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
214,
886,
887,
888,
911,
485,
583,
245
]
},
{
"tb": 1048576,
"tbk": 64,
"tl": 30777935,
"mb": 1048576,
"mbk": 64,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
17,
18,
19,
108,
109,
110,
165,
166,
167,
168,
415
]
},
{
"tb": 2088,
"tbk": 12,
"tl": 284,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
150,
497,
498,
499,
500,
501,
502,
912,
336,
913
]
},
{
"tb": 48,
"tbk": 1,
"tl": 721443,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
914,
915,
916,
917,
918,
919,
446,
7
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1093,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
150,
920,
921,
922,
923,
924,
925,
926,
927
]
},
{
"tb": 216,
"tbk": 1,
"tl": 720346,
"mb": 216,
"mbk": 1,
"gb": 216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
902,
928,
929,
930,
931,
932,
933,
934,
935
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1087,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
150,
936,
937,
938,
939,
940,
941,
942,
943
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
900,
901,
238,
446,
7,
8
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
363,
364,
618,
619,
7,
8
]
},
{
"tb": 48,
"tbk": 1,
"tl": 13054,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
944,
945,
946,
947,
948,
949
]
},
{
"tb": 96,
"tbk": 1,
"tl": 9516,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
102,
145,
146,
147,
246,
368
]
},
{
"tb": 216,
"tbk": 2,
"tl": 175168,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
950,
951,
952,
953,
954,
955,
956,
957,
958
]
},
{
"tb": 16,
"tbk": 1,
"tl": 71,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
363,
460,
365,
366,
367,
75
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 6543,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
9,
10,
11,
12,
13,
14,
959
]
},
{
"tb": 147456,
"tbk": 2,
"tl": 5591,
"mb": 147456,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
66,
67,
68,
94,
960,
961,
243
]
},
{
"tb": 96,
"tbk": 1,
"tl": 6,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
102,
145,
146,
147,
962,
356
]
},
{
"tb": 2048,
"tbk": 2,
"tl": 57568,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
9,
10,
11,
12,
13,
14,
963
]
},
{
"tb": 2097152,
"tbk": 2048,
"tl": 7515,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
17,
18,
19,
108,
109,
110,
964,
965,
966
]
},
{
"tb": 32,
"tbk": 1,
"tl": 18,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
66,
67,
68,
69,
967,
698,
86
]
},
{
"tb": 3864,
"tbk": 7,
"tl": 1724,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
804,
805,
806,
968,
969,
970
]
},
{
"tb": 5824,
"tbk": 53,
"tl": 138286,
"mb": 5824,
"mbk": 53,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
40,
80,
81,
82,
83,
340,
188,
189
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 31799,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
17,
18,
19,
20,
21,
22,
971,
589,
7
]
},
{
"tb": 80,
"tbk": 1,
"tl": 430206,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
972,
973,
974,
975,
976,
977,
978,
979,
980
]
},
{
"tb": 18432,
"tbk": 2,
"tl": 2001,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
66,
67,
68,
94,
722,
981,
982
]
},
{
"tb": 32768,
"tbk": 2,
"tl": 63864,
"mb": 32768,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
17,
18,
19,
20,
21,
22,
983,
984,
985
]
},
{
"tb": 2088,
"tbk": 12,
"tl": 35,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
150,
497,
498,
499,
500,
501,
502,
503,
689,
583
]
},
{
"tb": 32,
"tbk": 1,
"tl": 56,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
214,
215,
216,
217,
218,
219,
220,
986,
222,
223
]
},
{
"tb": 2048,
"tbk": 2,
"tl": 57575,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
9,
10,
11,
12,
13,
14,
987
]
},
{
"tb": 384,
"tbk": 2,
"tl": 67,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
988,
989,
990,
991,
992,
993,
994,
995,
996
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1284,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
183,
184,
185,
186,
348,
588,
589,
7
]
},
{
"tb": 32,
"tbk": 1,
"tl": 64,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
997,
998,
999,
1000,
1001,
1002,
1003,
1004,
1005
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 430701,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
17,
18,
19,
20,
21,
22,
865,
288,
289
]
},
{
"tb": 64,
"tbk": 1,
"tl": 9511,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
102,
103,
104,
105,
106,
368
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 720334,
"mb": 2048,
"mbk": 1,
"gb": 2048,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
452,
1006,
1007,
1008,
1009,
1010,
1011,
1012
]
},
{
"tb": 256,
"tbk": 1,
"tl": 11,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
150,
497,
498,
499,
564,
565,
566,
1013,
351,
7
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1667,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
183,
184,
185,
186,
187,
700,
451,
272
]
},
{
"tb": 96,
"tbk": 1,
"tl": 11,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
612,
618,
619,
7,
8
]
},
{
"tb": 32,
"tbk": 2,
"tl": 430854,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
1014,
1015,
1016,
1017,
1018,
1019,
1020,
1021
]
},
{
"tb": 960,
"tbk": 2,
"tl": 823,
"mb": 960,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
1022,
1023,
1024,
1025,
1026,
1027,
1028,
1029
]
},
{
"tb": 7680,
"tbk": 2,
"tl": 755,
"mb": 3968,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
247,
248,
249,
250,
1030,
350,
351,
7
]
},
{
"tb": 32768,
"tbk": 32,
"tl": 46103,
"mb": 32768,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
17,
18,
19,
20,
21,
22,
1031,
1032,
1033
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 538656,
"mb": 262144,
"mbk": 1,
"gb": 262144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
40,
80,
81,
82,
121,
1034,
622,
1035
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1514,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
112,
113,
114,
115,
1036,
513,
514
]
},
{
"tb": 256,
"tbk": 1,
"tl": 377,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
150,
768,
769,
770,
881,
336,
913,
1037
]
},
{
"tb": 24,
"tbk": 1,
"tl": 493906,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
200,
1038,
1039,
1040,
1041,
7,
8
]
},
{
"tb": 576,
"tbk": 2,
"tl": 41,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1042,
1043,
1044,
1045,
1046,
1047,
1048,
1049,
1050
]
},
{
"tb": 1904,
"tbk": 15,
"tl": 232,
"mb": 240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
150,
497,
498,
499,
500,
501,
502,
912,
336,
1051
]
},
{
"tb": 512,
"tbk": 1,
"tl": 953,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
17,
18,
19,
20,
21,
22,
1052,
568,
569
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1614,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
17,
18,
19,
20,
21,
22,
1053,
86,
76
]
},
{
"tb": 2088,
"tbk": 12,
"tl": 28,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
150,
497,
498,
499,
500,
501,
502,
503,
588,
589
]
},
{
"tb": 2097152,
"tbk": 64,
"tl": 379952,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
1054,
1055,
1056,
1057,
1058,
1059,
1060,
1061
]
},
{
"tb": 32,
"tbk": 1,
"tl": 47,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
997,
1062,
1063,
1064,
1065,
1066,
1067,
1068,
1069
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 4519,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
452,
1006,
1007,
1008,
1009,
1010,
1070,
1071
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
214,
215,
216,
217,
233,
234,
235,
236,
316,
238
]
},
{
"tb": 37984,
"tbk": 673,
"tl": 39036,
"mb": 8768,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
102,
357,
1072,
1073,
1074,
1075,
1076,
1077
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 43,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
66,
67,
68,
94,
95,
264,
1078
]
},
{
"tb": 8192,
"tbk": 1,
"tl": 19874,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
66,
67,
68,
94,
95,
264,
1079
]
},
{
"tb": 480,
"tbk": 4,
"tl": 134,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
27,
28,
29,
353,
588
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 1677,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
40,
1080,
1081,
1082,
1083,
1084,
1085,
1086,
1087
]
},
{
"tb": 24,
"tbk": 1,
"tl": 13062,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1088,
1089,
1090,
1091,
1092,
1093,
1094,
1095,
1096
]
},
{
"tb": 2195456,
"tbk": 67,
"tl": 29071500,
"mb": 2195456,
"mbk": 67,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
66,
67,
68,
94,
1097,
1098,
1099
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 119,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
452,
453,
454,
455,
456,
457,
458,
459,
288,
656
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 2834,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
214,
886,
887,
888,
1100,
485,
583,
245
]
},
{
"tb": 2088,
"tbk": 12,
"tl": 285,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
150,
497,
498,
499,
500,
501,
502,
912,
336,
882
]
},
{
"tb": 432,
"tbk": 2,
"tl": 374,
"mb": 240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
150,
768,
769,
770,
881,
336,
1051,
1101
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1387,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
200,
309,
310,
311,
166,
167,
168,
444,
1102,
583
]
}
],
"ftbl": [
"[root]",
"0x5c1d789c83b9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5c1d78891a1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c1d789679b5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d789679b5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d789679b5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d788f0909: winter_prover::Prover::generate_proof (prover/src/lib.rs:309:32)",
"0x5c1d789032ee: winter_prover::Prover::prove (prover/src/lib.rs:175:37)",
"0x5c1d7886327c: winterfell::main (winterfell/src/main.rs:54:17)",
"0x5c1d78bfeadc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x5c1d78bfdd6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x5c1d78bfdae8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x5c1d78bfdae8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x5c1d78bfd124: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5c1d78bfad43: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x5c1d7892c8a2: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x5c1d7889a4ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c1d78917e08: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d78917e08: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d78917e08: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5c1d7891845b: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5c1d7891845b: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5c1d7891845b: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5c1d78a3ab89: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x5c1d788f26b8: winter_prover::Prover::generate_proof (prover/src/lib.rs:558:13)",
"0x5c1d78b8c819: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5c1d78b8b2e9: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5c1d78a9a840: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5c1d78a9aaa9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5c1d78aaa111: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5c1d788f3e8b: winter_prover::Prover::generate_proof (prover/src/lib.rs:450:13)",
"0x5c1d7889344a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c1d789614f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d789614f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d789614f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d789614f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789af9da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789acbc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789d9eba: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d78900fcf: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:644:36)",
"0x5c1d7888ddec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c1d7894c69a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d7894c69a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d7894c69a: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d7894c69a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5c1d789af4cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789ada1a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d78a37f4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d78871243: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x5c1d789497f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d789497f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d789497f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d789497f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789af34a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789ab3a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789db13a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d78900f12: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:640:42)",
"0x5c1d7888e5cc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c1d78951aff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d78951aff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d78951aff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d78951aff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789af4ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789ac337: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789dae8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d78862edf: winterfell::main (winterfell/src/main.rs:28:26)",
"0x5c1d789677d5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d789677d5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d789677d5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d78916485: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5c1d78905efa: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x5c1d78840356: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x5c1d789403a7: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x5c1d788126fe: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x5c1d78805a15: winter_verifier::perform_verification (verifier/src/lib.rs:311:25)",
"0x5c1d788095da: winter_verifier::verify (verifier/src/lib.rs:111:21)",
"0x5c1d78863822: winterfell::main (winterfell/src/main.rs:71:11)",
"0x5c1d78816ca0: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x5c1d78805abc: winter_verifier::perform_verification (verifier/src/lib.rs:317:25)",
"0x5c1d7892cbbd: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x5c1d78967b95: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d78967b95: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d78967b95: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d78838785: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5c1d78946997: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x5c1d78939970: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x5c1d7880950b: winter_verifier::verify (verifier/src/lib.rs:109:19)",
"0x5c1d789c7847: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x5c1d787e34f5: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x5c1d7891055c: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x5c1d789be129: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x5c1d7890fb36: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x5c1d78913296: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x5c1d788ecbcf: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:369:9)",
"0x5c1d788d1ae7: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5c1d7886be2f: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x5c1d78a3a4f9: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x5c1d7883837b: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x5c1d7886b9fe: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x5c1d787fa2ce: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x5c1d787f7ac4: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x5c1d78c00f79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5c1d78bff709: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5c1d788c5fe1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5c1d788cf0d8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5c1d7898d67d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5c1d788ee1b5: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:547:13)",
"0x5c1d78804fc9: winter_verifier::perform_verification (verifier/src/lib.rs:266:61)",
"0x5c1d7899db85: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5c1d7899db85: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5c1d7899db85: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5c1d7881221f: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x5c1d78918511: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d78918511: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d78918511: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5c1d7899cc80: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5c1d7882758a: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:155:31)",
"0x5c1d7882ae25: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:128:17)",
"0x5c1d78a25c6e: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5c1d789650a6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5c1d788f14d0: winter_prover::Prover::generate_proof (prover/src/lib.rs:452:35)",
"0x5c1d788d1a57: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5c1d78870259: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x5c1d78871739: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x5c1d7882c572: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x5c1d78888e4c: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x5c1d78939f37: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x5c1d78899fac: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c1d7894f8df: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d7894f8df: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d7894f8df: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d7894f8df: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d7899ab4e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5c1d789ad415: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789db2ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d7880c4f7: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x5c1d7889730c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c1d7894ab59: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d7894ab59: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d7894ab59: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d7894ab59: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789af6ba: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789ad9a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789d9eea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d788f1e8c: winter_prover::Prover::generate_proof (prover/src/lib.rs:505:52)",
"0x5c1d788af281: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5c1d788cfa38: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5c1d7899033e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5c1d788132d7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x5c1d78bc3a99: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5c1d78bc3c0a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c1d7895905d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d7895905d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d7895905d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d7895905d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789afdda: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789acde4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789da1ca: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d789397eb: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x5c1d789421b0: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:140:51)",
"0x5c1d789e3476: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5c1d787e1fc1: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5c1d7894155d: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:243:25)",
"0x5c1d78863d94: winterfell::build_do_work_trace (winterfell/src/main.rs:91:5)",
"0x5c1d7890360b: winterfell::main::{{closure}} (winterfell/src/main.rs:30:23)",
"0x5c1d78966d83: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5c1d7899dd25: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5c1d7899dd25: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5c1d7899dd25: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5c1d787f72c5: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x5c1d788f3e70: winter_prover::Prover::generate_proof (prover/src/lib.rs:449:13)",
"0x5c1d78bc62db: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5c1d78bc5fb1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5c1d78bbf2ab: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5c1d78bb8e9d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5c1d78bc442b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5c1d78bc81e3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5c1d78bc612b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5c1d78bc6061: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5c1d78bbf46b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5c1d78bb9b71: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5c1d78bba307: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5c1d78bc990b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5c1d78899a6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c1d78967875: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d78967875: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d78967875: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d78841a4c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x5c1d78884e35: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x5c1d78888040: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x5c1d7893a104: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x5c1d7889cedc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c1d7895f25f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d7895f25f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d7895f25f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d7895f25f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d7899c18b: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5c1d789ac8d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789da56d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d788f07f7: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:36)",
"0x5c1d788907bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c1d7894b18f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d7894b18f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d7894b18f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d7894b18f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789afccd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789accd7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789da50d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d789cfaa0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x5c1d789ecd72: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x5c1d789ece16: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5c1d78805edf: winter_verifier::perform_verification (verifier/src/lib.rs:228:13)",
"0x5c1d78a52de9: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x5c1d788051ac: winter_verifier::perform_verification (verifier/src/lib.rs:275:24)",
"0x5c1d78b8b62a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c1d78b8e32c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d78b8e32c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d78b8e32c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5c1d78ae79e9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5c1d78ae79e9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5c1d78ae79e9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5c1d7890809a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x5c1d787e6a26: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5c1d7893a714: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5c1d788943fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c1d78953edf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d78953edf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d78953edf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d78953edf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789b088d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789ac0c5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789d99dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d7890108b: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:648:34)",
"0x5c1d78b5d69c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5c1d78b5d69c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5c1d78b5d69c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5c1d78802084: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x5c1d78801dce: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x5c1d7887d2db: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x5c1d788b1511: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5c1d788cfa08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5c1d7898d40e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5c1d78874c69: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x5c1d78879bc6: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x5c1d7880d41d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x5c1d788f3217: winter_prover::Prover::generate_proof (prover/src/lib.rs:603:29)",
"0x5c1d788ee350: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:543:13)",
"0x5c1d7889469c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c1d78967af5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d78967af5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d78967af5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d788d1c07: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5c1d787f4237: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x5c1d7882ba29: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x5c1d789e91d6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5c1d7894a70f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d7894a70f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d7894a70f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d7894a70f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789af27d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789ada55: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789d98ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d78a4aac4: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x5c1d788123b7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x5c1d78a3b338: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x5c1d787fbd08: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x5c1d78b89700: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5c1d78b89939: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5c1d78b89132: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5c1d7884217c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x5c1d7883a31d: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x5c1d78933e73: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x5c1d78939ad4: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x5c1d788bc6d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5c1d788cf7c8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5c1d7898e67e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5c1d78888216: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x5c1d788882b9: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x5c1d78bc40f0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5c1d78bb8669: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5c1d78bb7e51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5c1d78bb7950: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x5c1d78877e24: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x5c1d788ee3d4: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:541:17)",
"0x5c1d789c84e2: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x5c1d78801c98: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x5c1d787e3d37: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x5c1d787ecb7f: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x5c1d788ed010: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:354:9)",
"0x5c1d78829a9c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:51:13)",
"0x5c1d788f41b5: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:21)",
"0x5c1d7894decf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d7894decf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d7894decf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d7894decf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789b0d5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789adda7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789daedd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d788630e6: winterfell::main (winterfell/src/main.rs:38:27)",
"0x5c1d7889706c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c1d78917f38: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d78917f38: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d78917f38: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5c1d7899e7c5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5c1d7899e7c5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5c1d7899e7c5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5c1d787e48e2: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x5c1d788e0d5a: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:170:36)",
"0x5c1d788df34f: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:55:17)",
"0x5c1d78966a22: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d78966a22: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d78966a22: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5c1d787f7238: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x5c1d788f0e23: winter_prover::Prover::generate_proof (prover/src/lib.rs:423:33)",
"0x5c1d787fa1bf: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x5c1d787fbf9d: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x5c1d78801d9a: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x5c1d788091dd: winter_verifier::verify (verifier/src/lib.rs:96:32)",
"0x5c1d7892c82f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x5c1d78958e94: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d78958e94: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d78958e94: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d78958e94: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5c1d789af5da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789adec4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789dac5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d7884046e: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x5c1d78bc69e9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d78bc69e9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d78bc69e9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d78bc69e9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5c1d78bc6e2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d78bc6df7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d78bc6fce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d78bc94c9: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x5c1d78843c4b: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x5c1d7887146d: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x5c1d78879e92: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x5c1d78879b2c: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x5c1d788f2b02: winter_prover::Prover::generate_proof (prover/src/lib.rs:571:9)",
"0x5c1d78841cc7: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x5c1d78840547: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x5c1d7882f9bd: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x5c1d7882bc90: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x5c1d7882e614: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x5c1d78bbbf3e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5c1d78bbd400: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5c1d78bbcbf8: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5c1d78870aaf: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x5c1d788733c0: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x5c1d788780bd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x5c1d788f319c: winter_prover::Prover::generate_proof (prover/src/lib.rs:600:25)",
"0x5c1d7883eeb4: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x5c1d788712b7: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x5c1d787e3388: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x5c1d7891d4ab: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x5c1d788f202d: winter_prover::Prover::generate_proof (prover/src/lib.rs:524:9)",
"0x5c1d78bffea0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5c1d78c000d9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5c1d78c003d2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5c1d78c01159: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x5c1d78bb701a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x5c1d787fba93: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x5c1d78869245: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x5c1d78864330: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:177:13)",
"0x5c1d788ecb72: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:371:13)",
"0x5c1d789cd2cb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:64:9)",
"0x5c1d78805fcc: winter_verifier::perform_verification (verifier/src/lib.rs:225:43)",
"0x5c1d7887c1b6: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x5c1d787f424c: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x5c1d78813325: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x5c1d7882a973: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:33)",
"0x5c1d788f4266: winter_prover::Prover::generate_proof (prover/src/lib.rs:417:21)",
"0x5c1d787d9a3f: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:230:34)",
"0x5c1d789e2026: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5c1d78a083a7: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5c1d7895295f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d7895295f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d7895295f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d7895295f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789b0a4d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789ace15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789daf5d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d78a507af: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x5c1d78863e36: <winterfell::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (winterfell/src/main.rs:133:9)",
"0x5c1d789ca7a8: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:216:31)",
"0x5c1d789e8d36: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5c1d78a06bd0: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5c1d789d4f66: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5c1d789dc8f6: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5c1d78893c1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c1d789474b9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d789474b9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d789474b9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d789474b9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789af8ea: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789ac4f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789da39a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d788ddfe8: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:83:9)",
"0x5c1d78948539: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d78948539: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d78948539: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d78948539: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789afb7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789adb14: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789db44a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d788f04ea: winter_prover::Prover::generate_proof (prover/src/lib.rs:272:43)",
"0x5c1d788efa42: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:512:13)",
"0x5c1d7887c6b2: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x5c1d78bb6c69: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5c1d78bb3c1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c1d78bb0db6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d78bb0db6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d78bb0db6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d78877b68: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x5c1d787dc8cd: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x5c1d787db036: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5c1d789cbc48: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:300:57)",
"0x5c1d788048e5: winter_verifier::perform_verification (verifier/src/lib.rs:185:13)",
"0x5c1d7890b07b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5c1d7890828d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5c1d78a7c2ea: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5c1d78a57009: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5c1d789c0a75: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5c1d78837598: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5c1d78948f8f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d78948f8f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d78948f8f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d78948f8f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789b006d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789abf75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789d979d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d787f93a8: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x5c1d7893ae5f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x5c1d789ecd85: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x5c1d788126df: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x5c1d78961d2f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d78961d2f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d78961d2f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d78961d2f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789af56d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789ac125: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789da98d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d78a49d29: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x5c1d789650e6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5c1d7887d2f2: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x5c1d788eff02: winter_prover::Prover::generate_proof (prover/src/lib.rs:233:27)",
"0x5c1d788ac611: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5c1d788cf288: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5c1d7898dc0b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5c1d7883d3c9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x5c1d78933d0d: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x5c1d7888db4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c1d788ec012: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d788ec012: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d788ec012: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5c1d7899eb05: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5c1d7899eb05: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5c1d7899eb05: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5c1d787ecb95: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x5c1d78864247: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:176:13)",
"0x5c1d788deadf: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:41:22)",
"0x5c1d78829b39: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:36)",
"0x5c1d7882f30f: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x5c1d7882e506: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x5c1d78902acc: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:701:36)",
"0x5c1d787fdadb: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x5c1d7895dabf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d7895dabf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d7895dabf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d7895dabf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789b0e7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789ad925: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789da5dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d787d9788: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:228:23)",
"0x5c1d78a38472: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x5c1d7887499f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x5c1d787e4750: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5c1d7899ddf5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5c1d7899ddf5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5c1d7899ddf5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5c1d78adc0b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5c1d78aded69: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5c1d78ae6322: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5c1d7883a65f: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x5c1d7880a845: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x5c1d7894e4ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d7894e4ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d7894e4ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d7894e4ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789b0d3d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789ab5f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789db21d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d78816ff2: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x5c1d7882c4bd: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x5c1d78902eb8: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:716:26)",
"0x5c1d788f1931: winter_prover::Prover::generate_proof (prover/src/lib.rs:482:37)",
"0x5c1d78bb761c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d78bb761c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d78bb761c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5c1d7899e2d9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5c1d7899e2d9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5c1d7899e2d9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5c1d78870dbc: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x5c1d7894e2ef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d7894e2ef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d7894e2ef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d7894e2ef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789b04cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789acd15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789d97dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d7880a8d5: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x5c1d789321b0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x5c1d78809038: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:216:32)",
"0x5c1d789e8e5f: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5c1d788f3e30: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:13)",
"0x5c1d7891d347: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x5c1d7890972b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5c1d78908f9d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5c1d78a7c69a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5c1d78a69f7b: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5c1d78a741a9: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5c1d78a6e416: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5c1d7894dac3: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d7894dac3: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d7894dac3: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d7894dac3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789afbd4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789ac29a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789da654: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d78862d51: winterfell::main (winterfell/src/main.rs:22:32)",
"0x5c1d78bc663b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5c1d78bc5f01: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5c1d78bbf38b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5c1d78bbc04e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5c1d78bbd9ec: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5c1d78bbc55a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5c1d787e48f5: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x5c1d788de028: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:83:31)",
"0x5c1d789e47af: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5c1d788ef978: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:517:13)",
"0x5c1d78884d26: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x5c1d789ccf8c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:40:30)",
"0x5c1d78884b7f: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x5c1d7883a999: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x5c1d7883cb8e: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x5c1d7888f03c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c1d78951909: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d78951909: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d78951909: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d78951909: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789b0e3a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789ac934: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789d9a2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d78804ba2: winter_verifier::perform_verification (verifier/src/lib.rs:214:41)",
"0x5c1d78877c29: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x5c1d7896236f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d7896236f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d7896236f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d7896236f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789af89d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789ad895: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789dabdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d78941fe2: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:140:32)",
"0x5c1d78bb75cc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5c1d78bb75cc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5c1d78bb75cc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5c1d78a49d9d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x5c1d78a535e9: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x5c1d78805c03: winter_verifier::perform_verification (verifier/src/lib.rs:323:5)",
"0x5c1d788843b5: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x5c1d78838c84: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d78838c84: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d78838c84: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5c1d7899cc56: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5c1d78884b3e: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x5c1d7887f222: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x5c1d7886f7dc: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x5c1d788054f7: winter_verifier::perform_verification (verifier/src/lib.rs:298:27)",
"0x5c1d788c4c21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5c1d788cedd8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5c1d789906ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5c1d7880a8ec: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x5c1d7880d4b0: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x5c1d78a571e9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5c1d789c115b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5c1d788376eb: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5c1d78870a4c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x5c1d7890bb91: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x5c1d788f330a: winter_prover::Prover::generate_proof (prover/src/lib.rs:608:34)",
"0x5c1d7889b20c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c1d78954e49: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d78954e49: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d78954e49: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d78954e49: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789af93a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789ac7f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789da01a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d78804c5f: winter_verifier::perform_verification (verifier/src/lib.rs:218:40)",
"0x5c1d7894b3a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d7894b3a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d7894b3a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d7894b3a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789b048a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789abfc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789daa3a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d788efd8f: winter_prover::Prover::generate_proof (prover/src/lib.rs:214:39)",
"0x5c1d78831081: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x5c1d7882fe86: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5c1d7890112f: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:655:31)",
"0x5c1d78a3ab9b: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x5c1d78939d54: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x5c1d7886421b: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:175:9)",
"0x5c1d788cc2a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5c1d788cfa98: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5c1d7898f91b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5c1d788710fa: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x5c1d7883d31c: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x5c1d78942518: winter_prover::trace::Trace::validate (src/trace/mod.rs:123:26)",
"0x5c1d788f4578: winter_prover::Prover::generate_proof (prover/src/lib.rs:379:17)",
"0x5c1d7882d9d6: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x5c1d7882ce23: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x5c1d789016ee: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:669:26)",
"0x5c1d78894e6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c1d7894fb29: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d7894fb29: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d7894fb29: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d7894fb29: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789afcaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789ae084: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789da19a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d7887d24b: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x5c1d7894a033: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d7894a033: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d7894a033: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d7894a033: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789b09ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789ad545: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789dafdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d788f06db: winter_prover::Prover::generate_proof (prover/src/lib.rs:293:23)",
"0x5c1d7887f2d3: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x5c1d78874afb: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x5c1d78838428: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x5c1d788f0132: winter_prover::Prover::generate_proof (prover/src/lib.rs:262:22)",
"0x5c1d787e43e2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d787e43e2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d787e43e2: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5c1d787f724b: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x5c1d78956ecd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d78956ecd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d78956ecd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d78956ecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789b009a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789ab544: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789da73a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d7893950b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x5c1d789cce16: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:26:25)",
"0x5c1d789cc2f8: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:651:17)",
"0x5c1d7889123c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c1d7894bbd9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d7894bbd9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d7894bbd9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d7894bbd9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789b000a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789adc44: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789dac2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d787f94b2: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x5c1d789c8c5a: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x5c1d78a3c6a7: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x5c1d7891f889: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x5c1d788749b6: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x5c1d7887b8d8: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x5c1d78bb72c6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x5c1d78a4a6ca: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x5c1d78816eb1: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x5c1d78957a3f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d78957a3f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d78957a3f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d78957a3f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789b0b1d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789abbb7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789d99bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d78817df7: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x5c1d78bc648b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5c1d78bc5e51: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5c1d78bbf54b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5c1d78bb9c41: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5c1d78bba2c7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5c1d78bc995b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5c1d7880a77b: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x5c1d78946b50: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x5c1d7892c921: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x5c1d78a4ab73: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x5c1d788ce041: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5c1d788cf018: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5c1d7898d8be: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5c1d788e0e9d: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:175:17)",
"0x5c1d787e5f63: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x5c1d7893ac15: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5c1d78809330: winter_verifier::verify (verifier/src/lib.rs:98:38)",
"0x5c1d7883cf66: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x5c1d7891d0d2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x5c1d7895e40d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d7895e40d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d7895e40d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d7895e40d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789afe4a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789ad6e4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789d9d1a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d78933ba1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x5c1d78816cb7: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x5c1d78909a8b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5c1d78908e3d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5c1d78a7c78a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5c1d78a572a9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5c1d789bfbc8: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5c1d789be195: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x5c1d78a4a5ed: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x5c1d788cea21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5c1d788cee08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5c1d7899142e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5c1d7893af07: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x5c1d7886cec7: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x5c1d787f9eae: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x5c1d787fda1c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x5c1d78bb8e3d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5c1d78bc4748: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5c1d78bc80a7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5c1d788921fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c1d78954622: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d78954622: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d78954622: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d78954622: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5c1d789afdaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789ab484: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789c88ea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d78937d67: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x5c1d7882a8b2: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:28)",
"0x5c1d7893ad01: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x5c1d789429a5: winter_prover::trace::Trace::validate (src/trace/mod.rs:179:13)",
"0x5c1d787e5461: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x5c1d7887c03f: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x5c1d7892cb6c: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x5c1d7882ce5c: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x5c1d788c9b21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5c1d788cf498: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5c1d789917ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5c1d78882db7: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x5c1d7890fbae: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x5c1d788b37a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5c1d788cf108: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5c1d7898fdae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5c1d788061eb: winter_verifier::perform_verification (verifier/src/lib.rs:184:9)",
"0x5c1d788b28d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5c1d788cf318: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5c1d7899012d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5c1d787f9af2: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x5c1d78a25ac5: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5c1d787e532d: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x5c1d7888ed9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c1d78957e5f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d78957e5f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d78957e5f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d78957e5f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789af3cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789ace87: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789d9e8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d788debcd: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:51:26)",
"0x5c1d78967646: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d78967646: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d78967646: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d787fda78: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x5c1d7882abe1: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:135:9)",
"0x5c1d78966328: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d78966328: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d78966328: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5c1d7899e205: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5c1d7899e205: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5c1d7899e205: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5c1d788f1ea3: winter_prover::Prover::generate_proof (prover/src/lib.rs:510:39)",
"0x5c1d788b5a31: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5c1d788cf048: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5c1d7899255e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5c1d788063b2: winter_verifier::perform_verification (verifier/src/lib.rs:179:9)",
"0x5c1d7890bdca: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x5c1d7895aacf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d7895aacf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d7895aacf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d7895aacf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789afa5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789acc45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789dae4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d787d91cf: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:283:9)",
"0x5c1d7880141f: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x5c1d787ffa15: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x5c1d7889d17c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c1d7895feef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d7895feef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d7895feef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d7895feef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789b027d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789abc65: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789bc9bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d788f0033: winter_prover::Prover::generate_proof (prover/src/lib.rs:248:41)",
"0x5c1d7890a80b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5c1d78908a1d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5c1d78a7cc2a: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5c1d78a7555d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x5c1d78a7ba25: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x5c1d78a6e86e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x5c1d7889052a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c1d78948949: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d78948949: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d78948949: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d78948949: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789b096a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789ac874: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789dab8a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d7880d40e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x5c1d787b1d82: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5c1d787b1d82: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c1d787b1d82: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d787b1d82: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d787b1d82: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d787b1d82: std::io::buffered::bufwriter::BufWriter<W>::with_capacity (io/buffered/bufwriter.rs:115:33)",
"0x5c1d787b1d82: std::io::buffered::linewriter::LineWriter<W>::with_capacity (io/buffered/linewriter.rs:109:29)",
"0x5c1d787b1d82: std::io::buffered::linewriter::LineWriter<W>::new (io/buffered/linewriter.rs:89:9)",
"0x5c1d787b1d82: std::io::stdio::stdout::{{closure}} (src/io/stdio.rs:618:62)",
"0x5c1d787b1d82: std::sync::once_lock::OnceLock<T>::get_or_init::{{closure}} (src/sync/once_lock.rs:250:50)",
"0x5c1d787b1d82: std::sync::once_lock::OnceLock<T>::initialize::{{closure}} (src/sync/once_lock.rs:376:19)",
"0x5c1d787b1d82: std::sync::once::Once::call_once_force::{{closure}} (src/sync/once.rs:208:40)",
"0x5c1d787b1d82: std::sys_common::once::futex::Once::call (sys_common/once/futex.rs:124:21)",
"0x5c1d787b0eca: std::sync::once::Once::call_once_force (src/sync/once.rs:208:9)",
"0x5c1d787b0eca: std::sync::once_lock::OnceLock<T>::initialize (src/sync/once_lock.rs:375:9)",
"0x5c1d78c1b1c5: std::sync::once_lock::OnceLock<T>::get_or_try_init (src/sync/once_lock.rs:298:9)",
"0x5c1d78c1b1c5: std::sync::once_lock::OnceLock<T>::get_or_init (src/sync/once_lock.rs:250:15)",
"0x5c1d78c1b1c5: std::io::stdio::stdout (src/io/stdio.rs:618:14)",
"0x5c1d78c1b1c5: std::io::stdio::print_to (src/io/stdio.rs:1020:21)",
"0x5c1d78c1b1c5: std::io::stdio::_print (src/io/stdio.rs:1097:5)",
"0x5c1d7886303a: winterfell::main (winterfell/src/main.rs:36:5)",
"0x5c1d78bff9ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c1d78c0104c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d78c0104c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d78c0104c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5c1d78bfec7c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5c1d78bfec7c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5c1d78bfec7c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5c1d78bfaece: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x5c1d7880229f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x5c1d7887ddf3: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x5c1d78941131: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x5c1d78915853: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x5c1d789c8832: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x5c1d7889b9ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c1d78967a55: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d78967a55: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d78967a55: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d788f0877: winter_prover::Prover::generate_proof (prover/src/lib.rs:306:39)",
"0x5c1d78939370: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x5c1d7889accc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c1d78967c35: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d78967c35: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d78967c35: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d788f088e: winter_prover::Prover::generate_proof (prover/src/lib.rs:307:44)",
"0x5c1d787f7314: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x5c1d787eccba: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x5c1d788275e4: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:156:33)",
"0x5c1d78a3ed94: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x5c1d78a4a95d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x5c1d788a7c01: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5c1d788cf408: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5c1d78991c54: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5c1d788f4285: winter_prover::Prover::generate_proof (prover/src/lib.rs:418:17)",
"0x5c1d789533bf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d789533bf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d789533bf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d789533bf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789b06cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789ade45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789da52d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d788124ab: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x5c1d78842882: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x5c1d789384ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x5c1d78805636: winter_verifier::perform_verification (verifier/src/lib.rs:305:9)",
"0x5c1d7880f7be: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x5c1d78805b34: winter_verifier::perform_verification (verifier/src/lib.rs:319:28)",
"0x5c1d78ae2f36: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d78ae2f36: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d78ae2f36: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d7883edac: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x5c1d7890bd4a: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x5c1d7895058d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d7895058d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d7895058d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d7895058d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789afd7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789abd34: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789da30a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d78939733: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x5c1d7891ccbe: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x5c1d78a3814c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x5c1d78801e0c: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x5c1d7888fd4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c1d7894b59f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d7894b59f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d7894b59f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d7894b59f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d7899b0d6: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5c1d789adbc5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789db30d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d788093a8: winter_verifier::verify (verifier/src/lib.rs:102:24)",
"0x5c1d7883a517: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x5c1d78842abb: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x5c1d78938cf0: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x5c1d7888e32c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c1d787e6aea: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d787e6aea: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d787e6aea: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5c1d7899cca6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5c1d7887d508: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x5c1d78958b9d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d78958b9d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d78958b9d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d78958b9d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789af2aa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789ac394: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789dab5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d789395c3: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x5c1d7895586f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d7895586f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d7895586f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d7895586f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789b061d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789ab285: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789d9c1d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d788efeb3: winter_prover::Prover::generate_proof (prover/src/lib.rs:222:20)",
"0x5c1d789629dd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d789629dd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d789629dd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d789629dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789afc7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789acff4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789da86a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d7893967b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x5c1d788e775a: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x5c1d789cb852: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:503:32)",
"0x5c1d789e8dc6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5c1d78a0693a: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5c1d789d0e27: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5c1d789dba22: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5c1d78895b7c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c1d7894f19f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d7894f19f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d7894f19f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d7894f19f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789b054d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789ad355: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789daddd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d7882b1b1: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x5c1d7891d0f5: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x5c1d788d418f: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x5c1d7887493d: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x5c1d7891d5c3: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x5c1d787d789d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x5c1d787ec106: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x5c1d78828ac9: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:290:18)",
"0x5c1d7882788e: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:173:30)",
"0x5c1d787e6126: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x5c1d78a5bc7d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5c1d78a5e613: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5c1d7886f237: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5c1d7890bdb3: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x5c1d788960bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c1d789476af: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d789476af: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d789476af: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d789476af: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d7899c705: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5c1d789ad50a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789d9b3d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d78800891: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x5c1d7887e003: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x5c1d7887f210: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x5c1d789cfb0a: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x5c1d789e67a8: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5c1d7886b114: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x5c1d789080af: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x5c1d787d788c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x5c1d7889af6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c1d7896022b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d7896022b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d7896022b: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d7896022b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5c1d789b0aad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789ad955: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d788d116d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d78911618: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x5c1d7889249c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c1d789514cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d789514cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d789514cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d789514cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789b00dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789ad3d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789d9a6d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d788efcd2: winter_prover::Prover::generate_proof (prover/src/lib.rs:210:38)",
"0x5c1d788ec4c4: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d788ec4c4: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d788ec4c4: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5c1d7899cbf6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5c1d788640ad: <winterfell::WorkAir as winter_air::air::Air>::new (winterfell/src/main.rs:151:23)",
"0x5c1d789cbf36: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:226:17)",
"0x5c1d789e619e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5c1d78877c0e: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x5c1d7895b0ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d7895b0ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d7895b0ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d7895b0ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789af44d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789ab625: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789da13d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d787e3d28: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x5c1d78963e6f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d78963e6f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d78963e6f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d78963e6f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789afecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789ab825: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789daafd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d78a4ac5a: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x5c1d78873499: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x5c1d7880af56: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x5c1d789e7eb6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5c1d78a0cfbd: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5c1d7882cd9a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x5c1d788f0511: winter_prover::Prover::generate_proof (prover/src/lib.rs:274:13)",
"0x5c1d789321ce: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x5c1d788057a8: winter_verifier::perform_verification (verifier/src/lib.rs:306:42)",
"0x5c1d789673c5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d789673c5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d789673c5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d788f08cd: winter_prover::Prover::generate_proof (prover/src/lib.rs:308:37)",
"0x5c1d7889177c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c1d78955bf2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d78955bf2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d78955bf2: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d78955bf2: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5c1d789b0b7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789abc35: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789d98cd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d7890fa6a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x5c1d789312d4: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x5c1d78a49e04: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x5c1d7893a76e: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x5c1d78960d1f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d78960d1f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d78960d1f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d78960d1f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789af61d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789ab4f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789da34d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d787fa7f7: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x5c1d7894eb4f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d7894eb4f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d7894eb4f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d7894eb4f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d7899a03e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5c1d789ae035: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789db0ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d7886374e: winterfell::main (winterfell/src/main.rs:65:26)",
"0x5c1d7880a03b: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:102:85)",
"0x5c1d789e6a6e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5c1d78c00108: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x5c1d78c004ca: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x5c1d78c004ca: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x5c1d78c0026e: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x5c1d78c0026e: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x5c1d78c0035d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x5c1d78879d52: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x5c1d787d96e8: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:227:28)",
"0x5c1d78953b04: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d78953b04: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d78953b04: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d78953b04: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5c1d789b0eaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789acd64: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789db0da: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d7883ce8d: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x5c1d788936dc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c1d7895544f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c1d7895544f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c1d7895544f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c1d7895544f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c1d789b004d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c1d789aaf75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c1d789db41d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c1d788f1dcf: winter_prover::Prover::generate_proof (prover/src/lib.rs:501:51)",
"0x5c1d787f9440: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x5c1d789e1db6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5c1d787e1b11: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5c1d7883a07a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x5c1d78a4a78d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x5c1d7880a6db: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)"
]
}