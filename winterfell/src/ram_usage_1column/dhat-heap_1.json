{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell",
"pid": 27377,
"tg": 4451817,
"te": 4534077,
"pps": [
{
"tb": 1024,
"tbk": 1,
"tl": 2276,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9
]
},
{
"tb": 24,
"tbk": 1,
"tl": 2392537,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
15,
9,
16
]
},
{
"tb": 80,
"tbk": 1,
"tl": 4526611,
"mb": 80,
"mbk": 1,
"gb": 80,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
10,
17,
18,
19,
20,
21,
22,
23,
24,
25
]
},
{
"tb": 512,
"tbk": 1,
"tl": 3919,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
27,
28,
29,
30,
31,
32,
33
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2171,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
34,
35,
36,
37,
38,
39,
40,
41,
42
]
},
{
"tb": 64,
"tbk": 1,
"tl": 5484,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
45,
46,
47,
48,
49
]
},
{
"tb": 64,
"tbk": 1,
"tl": 163,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
45,
46,
47,
50,
51
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
53,
54,
55,
56,
9,
16
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1078246,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
57,
58,
59,
60,
61,
62,
63,
64,
65,
66
]
},
{
"tb": 77888,
"tbk": 1434,
"tl": 430441,
"mb": 16832,
"mbk": 8,
"gb": 160,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
67,
68,
69,
70,
71,
72,
73
]
},
{
"tb": 3280,
"tbk": 17,
"tl": 463,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
75,
76,
77,
78,
79,
80,
81,
82,
83,
84
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1078243,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
85,
86,
87,
88,
89,
90,
91,
65,
66
]
},
{
"tb": 480,
"tbk": 4,
"tl": 5464,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
96,
97
]
},
{
"tb": 32,
"tbk": 1,
"tl": 48,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
98,
99,
100,
101,
102,
103,
104,
105,
106
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1685,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
107,
108,
109,
110,
111,
112,
113
]
},
{
"tb": 1984,
"tbk": 4,
"tl": 2744,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
114,
115,
116,
117,
118,
119,
120,
121
]
},
{
"tb": 6072,
"tbk": 11,
"tl": 3728,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
122,
123,
124,
125,
126,
127
]
},
{
"tb": 240,
"tbk": 2,
"tl": 1078227,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
128,
66,
9,
16
]
},
{
"tb": 384,
"tbk": 2,
"tl": 69,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
129,
130,
131,
132,
133,
134,
135,
136,
137
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 441515,
"mb": 8388608,
"mbk": 1,
"gb": 8388608,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
10,
138,
139,
140,
141,
142,
143,
144,
145
]
},
{
"tb": 512,
"tbk": 1,
"tl": 24,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
27,
28,
29,
146,
147,
148,
149
]
},
{
"tb": 12160,
"tbk": 32,
"tl": 90554,
"mb": 12160,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
138,
139,
140,
141,
150,
151,
152,
153
]
},
{
"tb": 512,
"tbk": 1,
"tl": 45,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
154,
155,
156,
157,
158,
159,
160,
161
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2018943,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
162,
163,
164,
165,
166,
167,
168,
169,
170
]
},
{
"tb": 48,
"tbk": 2,
"tl": 1969759,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
57,
58,
59,
60,
61,
62,
63,
64,
171,
172
]
},
{
"tb": 96,
"tbk": 1,
"tl": 22,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
173,
174,
175,
176,
177
]
},
{
"tb": 2097184,
"tbk": 3,
"tl": 37765,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
27,
28,
29,
146,
178,
179,
180
]
},
{
"tb": 8,
"tbk": 1,
"tl": 17,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
75,
181,
182,
183,
184,
185,
186,
187,
188
]
},
{
"tb": 120,
"tbk": 2,
"tl": 2122661,
"mb": 120,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
189,
190,
191,
192,
193,
194,
195,
196,
197
]
},
{
"tb": 2097184,
"tbk": 3,
"tl": 37918,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
27,
28,
29,
146,
198,
180,
199
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 426,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
200,
201
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1872,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
138,
202,
203,
204,
205,
206,
207,
8
]
},
{
"tb": 64,
"tbk": 1,
"tl": 7254,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
208,
209,
210,
211,
212,
213,
214,
215
]
},
{
"tb": 67108864,
"tbk": 2,
"tl": 5737987,
"mb": 67108864,
"mbk": 2,
"gb": 67108864,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
216,
217,
218,
219,
220,
221,
222
]
},
{
"tb": 16,
"tbk": 1,
"tl": 6,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
53,
223,
55,
56,
9,
16
]
},
{
"tb": 80,
"tbk": 1,
"tl": 5479,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
27,
28,
29,
224,
225,
32,
33
]
},
{
"tb": 1088,
"tbk": 2,
"tl": 34,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
226,
227,
228,
229,
230,
231
]
},
{
"tb": 32,
"tbk": 1,
"tl": 984988,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
85,
86,
87,
232,
233,
234,
235,
236,
237
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 9976,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
216,
217,
218,
219,
220,
221,
238
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 129593,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
85,
86,
87,
88,
89,
90,
239,
240,
177
]
},
{
"tb": 24,
"tbk": 1,
"tl": 2106208,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
241,
242,
243,
244,
245,
246,
247,
248
]
},
{
"tb": 16,
"tbk": 1,
"tl": 92982,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
85,
86,
87,
88,
89,
90,
91,
249,
250,
251,
252
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 3055,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
27,
28,
29,
253,
254,
255,
153
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4055,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
256,
257,
258,
259,
260,
261,
262,
263
]
},
{
"tb": 96,
"tbk": 1,
"tl": 30,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
173,
174,
175,
264,
265
]
},
{
"tb": 96,
"tbk": 1,
"tl": 6537,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
173,
174,
175,
266,
267
]
},
{
"tb": 72,
"tbk": 3,
"tl": 278940,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
57,
58,
59,
60,
61,
62,
63,
64,
249,
250,
251,
252
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 153893,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
85,
86,
87,
232,
233,
234,
268,
269,
9
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1520,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
75,
270,
271,
272,
273,
274,
275,
276,
277
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2075641,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
278,
279,
280,
281,
282,
283,
284,
285,
286
]
},
{
"tb": 144,
"tbk": 1,
"tl": 92992,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
287,
288,
289,
290,
250,
251,
252,
291,
292,
9
]
},
{
"tb": 128,
"tbk": 1,
"tl": 6823,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
27,
28,
29,
253,
293,
294,
295
]
},
{
"tb": 24,
"tbk": 1,
"tl": 984999,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
296,
297,
236,
237,
298,
9
]
},
{
"tb": 5952,
"tbk": 38,
"tl": 767,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
75,
76,
77,
78,
79,
80,
81,
82,
83,
299
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 516,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
216,
217,
218,
219,
220,
221,
300
]
},
{
"tb": 320,
"tbk": 2,
"tl": 1969751,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
301,
302,
303,
304,
172
]
},
{
"tb": 480,
"tbk": 4,
"tl": 7880,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
96,
305
]
},
{
"tb": 512,
"tbk": 1,
"tl": 47,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
27,
28,
29,
306,
265,
32,
33
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 33727,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
27,
28,
29,
146,
147,
148,
307
]
},
{
"tb": 5952,
"tbk": 38,
"tl": 89,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
75,
76,
77,
78,
79,
80,
81,
308,
201,
309
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 823644,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
27,
28,
29,
146,
310,
311,
312
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2415,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
27,
28,
29,
253,
254,
313,
314
]
},
{
"tb": 16,
"tbk": 1,
"tl": 4505548,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
43,
315,
316,
317,
318,
319,
320,
321,
322,
323,
324
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1779,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
85,
86,
87,
232,
233,
234,
325,
295,
33
]
},
{
"tb": 576,
"tbk": 2,
"tl": 46,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
326,
327,
328,
329,
330,
331,
332,
333,
334
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 349181,
"mb": 4194304,
"mbk": 1,
"gb": 4194304,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
27,
28,
29,
146,
335,
336,
337
]
},
{
"tb": 256,
"tbk": 1,
"tl": 10,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
75,
76,
77,
78,
338,
339,
340,
341,
342,
9
]
},
{
"tb": 96,
"tbk": 1,
"tl": 2003,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
343,
344,
345,
346,
347
]
},
{
"tb": 64,
"tbk": 1,
"tl": 139582,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
45,
46,
47,
348,
349
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 4091,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
350,
351,
347,
352
]
},
{
"tb": 11592,
"tbk": 21,
"tl": 4769,
"mb": 3312,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
122,
123,
124,
353,
354,
355
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1210,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
75,
76,
77,
78,
338,
339,
340,
356,
357,
358
]
},
{
"tb": 32,
"tbk": 1,
"tl": 65,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
27,
28,
29,
253,
359,
360,
295
]
},
{
"tb": 12160,
"tbk": 32,
"tl": 73884,
"mb": 12160,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
138,
139,
140,
141,
150,
151,
361,
314
]
},
{
"tb": 65,
"tbk": 1,
"tl": 12,
"mb": 65,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
362,
363,
364,
365,
366,
367,
368,
369,
370
]
},
{
"tb": 16,
"tbk": 1,
"tl": 105,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
53,
54,
371,
372,
373,
298
]
},
{
"tb": 32,
"tbk": 1,
"tl": 96,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
216,
217,
218,
219,
220,
221,
374
]
},
{
"tb": 512,
"tbk": 1,
"tl": 17,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
27,
28,
29,
375,
376,
32,
33
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
377,
378,
379,
33
]
},
{
"tb": 256,
"tbk": 1,
"tl": 574,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
75,
380,
381,
382,
383,
83,
84,
384
]
},
{
"tb": 3968,
"tbk": 4,
"tl": 18050,
"mb": 3968,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
138,
202,
203,
204,
205,
385,
386,
267
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 2380,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
138,
387,
388,
389,
390,
391,
392,
393,
394
]
},
{
"tb": 3280,
"tbk": 17,
"tl": 463,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
75,
76,
77,
78,
79,
80,
81,
82,
83,
395
]
},
{
"tb": 1248,
"tbk": 12,
"tl": 294,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
396,
397,
398,
399,
400,
401
]
},
{
"tb": 48,
"tbk": 1,
"tl": 349861,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
107,
108,
109,
110,
402,
403,
404
]
},
{
"tb": 992,
"tbk": 4,
"tl": 3809,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
75,
76,
77,
78,
338,
339,
340,
405,
406,
357
]
},
{
"tb": 3145728,
"tbk": 3,
"tl": 280205,
"mb": 3145728,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
85,
86,
87,
88,
89,
90,
407,
408,
409,
410,
411
]
},
{
"tb": 160,
"tbk": 1,
"tl": 5659,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
412,
413,
414,
415,
416,
417,
418,
419,
420
]
},
{
"tb": 3456,
"tbk": 12,
"tl": 4155,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
421,
422,
423,
424,
425,
426
]
},
{
"tb": 128,
"tbk": 1,
"tl": 3183,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
427,
428,
429,
430,
314
]
},
{
"tb": 32,
"tbk": 1,
"tl": 22511,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
107,
108,
109,
110,
431,
432,
433
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2382,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
434,
435,
436,
437,
438,
361,
314,
439
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 3639929,
"mb": 8388608,
"mbk": 1,
"gb": 8388608,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
10,
138,
139,
140,
141,
142,
440,
441,
442
]
},
{
"tb": 15872,
"tbk": 124,
"tl": 106,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
443,
444,
445,
446,
447,
448,
449,
450
]
},
{
"tb": 96,
"tbk": 1,
"tl": 1293803,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
173,
174,
175,
451,
9
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1815,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
434,
435,
436,
437,
452,
453,
347,
352
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1528,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
75,
454,
455,
456,
457,
458,
459,
460,
461
]
},
{
"tb": 16,
"tbk": 1,
"tl": 4504045,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
462,
463,
464,
465,
466,
467,
468,
469
]
},
{
"tb": 96,
"tbk": 1,
"tl": 12,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
287,
470,
471,
472,
473,
474,
475,
476,
477
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 4086,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
478,
351,
347,
352
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 107771,
"mb": 1198080,
"mbk": 4,
"gb": 1048576,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
10,
138,
139,
140,
141,
142,
479,
480,
481
]
},
{
"tb": 599040,
"tbk": 4,
"tl": 74892,
"mb": 589824,
"mbk": 2,
"gb": 524288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
27,
28,
29,
146,
482,
483,
481
]
},
{
"tb": 2896,
"tbk": 12,
"tl": 1187,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
75,
484,
485,
486,
487,
488,
489,
490,
491
]
},
{
"tb": 48,
"tbk": 1,
"tl": 4526586,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
10,
189,
492,
493,
494,
495,
496,
497,
498,
499
]
},
{
"tb": 48,
"tbk": 1,
"tl": 92973,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
189,
500,
501,
502,
408,
409,
410,
503,
292,
9
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2006,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
189,
500,
501,
502,
408,
409,
410,
504,
505,
347
]
},
{
"tb": 384,
"tbk": 1,
"tl": 984892,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
506,
507,
508,
509,
510,
511,
512,
513,
514
]
},
{
"tb": 5242880,
"tbk": 5,
"tl": 5220746,
"mb": 5242880,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
27,
28,
29,
146,
515,
516,
517
]
},
{
"tb": 32,
"tbk": 1,
"tl": 7200,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
138,
139,
140,
141,
150,
518,
519,
295
]
},
{
"tb": 96,
"tbk": 1,
"tl": 10,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
173,
174,
175,
520,
295
]
},
{
"tb": 480,
"tbk": 4,
"tl": 200,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
200,
453
]
},
{
"tb": 16,
"tbk": 1,
"tl": 108,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
53,
223,
371,
372,
373,
298
]
},
{
"tb": 91200,
"tbk": 200,
"tl": 49070,
"mb": 24168,
"mbk": 53,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
521,
522,
523,
524,
525,
526
]
},
{
"tb": 63126,
"tbk": 37,
"tl": 26426,
"mb": 31616,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
527,
528,
529,
530,
531
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 802051,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
27,
28,
29,
146,
310,
311,
532
]
},
{
"tb": 936,
"tbk": 4,
"tl": 1088,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
75,
380,
381,
382,
383,
83,
299,
533
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 600,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
27,
28,
29,
146,
178,
534,
535
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 2326,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
536,
537,
538,
539,
540,
541,
542,
543,
544
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 4502704,
"mb": 1048576,
"mbk": 1,
"gb": 1048576,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
27,
28,
29,
146,
147,
545,
546
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
362,
363,
364,
547,
548,
549,
550,
551,
552
]
},
{
"tb": 32,
"tbk": 1,
"tl": 3027,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
553,
177,
9,
16
]
},
{
"tb": 64,
"tbk": 1,
"tl": 5691,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
45,
46,
47,
554,
555
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1677,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
556,
557,
558,
559,
560,
561,
562,
563,
564
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1693,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
565,
566,
567,
568,
569,
570,
571,
572,
573
]
},
{
"tb": 32,
"tbk": 1,
"tl": 128,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
85,
86,
87,
88,
89,
90,
574,
575,
576
]
},
{
"tb": 16,
"tbk": 1,
"tl": 387250,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
10,
577,
578,
579,
580,
581,
582,
583,
584,
585
]
},
{
"tb": 64,
"tbk": 2,
"tl": 370111,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
216,
217,
218,
219,
220,
221,
586
]
},
{
"tb": 48,
"tbk": 2,
"tl": 1601916,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
587,
588,
589,
590,
591,
592,
593,
594,
595
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1078221,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
596,
597
]
},
{
"tb": 40,
"tbk": 1,
"tl": 2075684,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
598,
599,
600,
601,
602,
603,
604,
605,
606
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 30079,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
27,
28,
29,
146,
147,
148,
607
]
},
{
"tb": 599040,
"tbk": 4,
"tl": 65931,
"mb": 524288,
"mbk": 1,
"gb": 524288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
27,
28,
29,
146,
608,
609,
610
]
},
{
"tb": 1048576,
"tbk": 2,
"tl": 1850591,
"mb": 1048576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
85,
86,
87,
232,
233,
234,
611,
612,
613
]
},
{
"tb": 16,
"tbk": 1,
"tl": 92191,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
75,
76,
77,
78,
79,
80,
81,
614,
292,
9
]
},
{
"tb": 2400,
"tbk": 12,
"tl": 204,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
615,
616,
617,
618,
619,
620
]
},
{
"tb": 206891,
"tbk": 11,
"tl": 7312,
"mb": 107840,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
67,
621,
622,
623,
624
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 3189,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
27,
28,
29,
253,
254,
625,
314
]
},
{
"tb": 576,
"tbk": 4,
"tl": 1570,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
107,
108,
109,
110,
626,
535,
357
]
},
{
"tb": 48,
"tbk": 2,
"tl": 71,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
627,
628,
629,
630,
631,
632
]
},
{
"tb": 64,
"tbk": 1,
"tl": 5687,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
45,
46,
47,
50,
555
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
362,
363,
364,
547,
548,
549,
550,
551,
379
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1876,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
434,
435,
436,
437,
452,
207,
8,
9
]
},
{
"tb": 128,
"tbk": 1,
"tl": 7898,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
85,
86,
87,
232,
233,
234,
633,
634,
635
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
636,
637,
33
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1810,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
138,
202,
203,
204,
205,
206,
453,
347
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 634846,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
27,
28,
29,
146,
608,
638,
639
]
},
{
"tb": 64,
"tbk": 1,
"tl": 11,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
45,
46,
47,
640,
641
]
},
{
"tb": 64,
"tbk": 1,
"tl": 139571,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
45,
46,
47,
48,
349
]
},
{
"tb": 128,
"tbk": 1,
"tl": 10,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
85,
86,
87,
88,
89,
90,
642,
342,
9
]
},
{
"tb": 16,
"tbk": 1,
"tl": 73,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
53,
54,
371,
643,
644,
32
]
},
{
"tb": 24,
"tbk": 1,
"tl": 2392541,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
10,
189,
645,
646,
647,
648,
9,
16
]
},
{
"tb": 512,
"tbk": 1,
"tl": 51,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
27,
28,
29,
649,
265,
32,
33
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 1587,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
216,
217,
218,
219,
220,
221,
650
]
},
{
"tb": 3968,
"tbk": 4,
"tl": 3335,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
138,
202,
203,
204,
205,
206,
201,
309
]
},
{
"tb": 96,
"tbk": 1,
"tl": 5488,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
173,
174,
175,
651,
49
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
377,
378,
552,
652,
9,
16
]
},
{
"tb": 3280,
"tbk": 17,
"tl": 65,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
75,
76,
77,
78,
79,
80,
81,
308,
207,
8
]
},
{
"tb": 80,
"tbk": 1,
"tl": 984747,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
653,
654,
655,
656,
657,
658,
659,
660,
661
]
},
{
"tb": 32,
"tbk": 1,
"tl": 9,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
362,
363,
364,
365,
366,
367,
662,
369,
370
]
},
{
"tb": 96,
"tbk": 1,
"tl": 139577,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
173,
174,
175,
651,
349
]
},
{
"tb": 24,
"tbk": 1,
"tl": 113,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
296,
297,
236,
663,
644,
32
]
},
{
"tb": 512,
"tbk": 1,
"tl": 16,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
27,
28,
29,
146,
178,
664,
265
]
},
{
"tb": 3840,
"tbk": 16,
"tl": 2358,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
45,
46,
47,
665,
666
]
},
{
"tb": 2808,
"tbk": 4,
"tl": 17501,
"mb": 2808,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
434,
435,
436,
437,
438,
667,
386,
267
]
},
{
"tb": 24,
"tbk": 1,
"tl": 2392557,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
10,
668,
669,
670,
671,
672,
9,
16
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1528,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
173,
174,
175,
673,
8
]
},
{
"tb": 1048576,
"tbk": 2,
"tl": 9053105,
"mb": 1048576,
"mbk": 2,
"gb": 1048576,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
27,
28,
29,
146,
674,
675,
676
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1487,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
677,
351
]
},
{
"tb": 127,
"tbk": 4,
"tl": 389069,
"mb": 68,
"mbk": 1,
"gb": 68,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
67,
621,
622,
623,
678
]
},
{
"tb": 32,
"tbk": 1,
"tl": 20238,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
107,
108,
109,
110,
679,
56,
9
]
},
{
"tb": 48,
"tbk": 2,
"tl": 2156461,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
57,
58,
59,
60,
61,
62,
63,
64,
680,
681
]
},
{
"tb": 2097152,
"tbk": 2,
"tl": 185457,
"mb": 2097152,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
85,
86,
87,
88,
89,
90,
407,
408,
409,
410,
503
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 3649,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
682,
683,
684,
685,
686
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1293789,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
687,
9
]
},
{
"tb": 72,
"tbk": 3,
"tl": 58,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
688,
689,
690,
691,
692,
693,
694,
695,
696
]
},
{
"tb": 2808,
"tbk": 4,
"tl": 3349,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
434,
435,
436,
437,
452,
201,
309,
342
]
},
{
"tb": 16,
"tbk": 1,
"tl": 4526712,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
697,
698,
699,
700,
701,
702,
703,
704
]
},
{
"tb": 4792320,
"tbk": 4,
"tl": 109544,
"mb": 4792320,
"mbk": 4,
"gb": 4194304,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
27,
28,
29,
146,
705,
706,
481
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 1226,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
527,
528,
529,
530,
707
]
},
{
"tb": 64,
"tbk": 1,
"tl": 5768,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
85,
86,
87,
88,
89,
90,
239,
708,
295
]
},
{
"tb": 32,
"tbk": 1,
"tl": 140,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
636,
709,
710,
711,
712,
713
]
},
{
"tb": 15872,
"tbk": 124,
"tl": 117,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
27,
28,
29,
253,
714,
386,
267
]
},
{
"tb": 96,
"tbk": 1,
"tl": 5697,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
715,
716,
717,
718,
32
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 4503686,
"mb": 262144,
"mbk": 1,
"gb": 262144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
27,
28,
29,
146,
147,
719,
720
]
},
{
"tb": 32,
"tbk": 1,
"tl": 131,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
85,
86,
87,
88,
89,
90,
721,
575,
576
]
},
{
"tb": 216,
"tbk": 1,
"tl": 4503907,
"mb": 216,
"mbk": 1,
"gb": 216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
10,
722,
723,
724,
725,
726,
727,
728,
729,
730
]
},
{
"tb": 32,
"tbk": 1,
"tl": 49,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
98,
731,
732,
733,
734,
735,
736,
737,
738
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2018934,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
189,
500,
501,
502,
408,
409,
410,
739,
740,
741
]
},
{
"tb": 256,
"tbk": 1,
"tl": 603,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
75,
380,
381,
382,
383,
83,
395,
742
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 153564,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
27,
28,
29,
146,
147,
148,
743
]
},
{
"tb": 192,
"tbk": 1,
"tl": 5683,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
744,
745,
746,
747,
32
]
},
{
"tb": 48,
"tbk": 1,
"tl": 926121,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
189,
748,
749,
750,
751,
752,
753,
754,
755
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 116,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
85,
86,
87,
88,
89,
90,
239,
756,
9
]
},
{
"tb": 96,
"tbk": 1,
"tl": 20,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
757,
371,
643,
644,
32,
33
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3448,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
758,
177,
9,
16
]
},
{
"tb": 512,
"tbk": 1,
"tl": 21,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
85,
86,
87,
88,
89,
90,
759,
265,
32
]
},
{
"tb": 32,
"tbk": 1,
"tl": 104,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
85,
86,
87,
232,
233,
234,
235,
236,
663
]
},
{
"tb": 512,
"tbk": 1,
"tl": 28,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
27,
28,
29,
760,
376,
32,
33
]
},
{
"tb": 64,
"tbk": 1,
"tl": 5663,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
85,
86,
87,
88,
89,
90,
761,
762,
763
]
},
{
"tb": 16,
"tbk": 1,
"tl": 4503769,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
10,
764,
765,
766,
767,
768,
769,
770,
771,
772
]
},
{
"tb": 3328,
"tbk": 32,
"tl": 438,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
396,
397,
398,
773,
774,
775
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 491339,
"mb": 8388608,
"mbk": 1,
"gb": 8388608,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
10,
138,
139,
140,
141,
142,
776,
777,
778
]
},
{
"tb": 1048576,
"tbk": 2,
"tl": 4195678,
"mb": 1048576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
85,
86,
87,
88,
89,
90,
779,
780,
781
]
},
{
"tb": 32,
"tbk": 1,
"tl": 349857,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
107,
108,
109,
110,
782,
403,
404
]
},
{
"tb": 24,
"tbk": 1,
"tl": 19481,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
783,
784,
785,
786,
787,
788,
789,
790,
791
]
},
{
"tb": 126976,
"tbk": 4,
"tl": 1602,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
216,
217,
218,
219,
220,
221,
792
]
},
{
"tb": 288,
"tbk": 1,
"tl": 18402,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
793,
794,
795,
796,
481
]
},
{
"tb": 16,
"tbk": 1,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
315,
316,
317,
318,
319,
320,
321,
322,
797,
295
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1499,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
75,
798,
799,
800,
801,
802,
803,
804,
805
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2141,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
189,
806,
807,
808,
809,
810,
811,
812,
813
]
},
{
"tb": 48,
"tbk": 1,
"tl": 4505460,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
10,
814,
815,
816,
817,
818,
819,
652,
9
]
},
{
"tb": 72,
"tbk": 1,
"tl": 4753,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
820,
352,
9,
16
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2900,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
434,
435,
436,
437,
438,
152,
153,
821
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 403318,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
27,
28,
29,
146,
147,
148,
822
]
},
{
"tb": 512,
"tbk": 1,
"tl": 9,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
823,
824,
825,
826,
827,
828,
829,
830
]
},
{
"tb": 128,
"tbk": 1,
"tl": 3913,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
831,
832,
833,
834,
835,
836,
837,
838
]
},
{
"tb": 6528,
"tbk": 34,
"tl": 12060,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
839,
840,
841,
842,
843,
844
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
362,
363,
364,
547,
548,
549,
550,
845,
552
]
},
{
"tb": 224,
"tbk": 1,
"tl": 6540,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
846,
847,
848,
849,
267
]
},
{
"tb": 32,
"tbk": 2,
"tl": 985131,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
850,
851,
852,
853,
854,
855,
856,
857
]
},
{
"tb": 64,
"tbk": 2,
"tl": 370123,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
216,
217,
218,
219,
220,
221,
858
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 48851,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
85,
86,
87,
232,
233,
234,
859,
8,
9
]
},
{
"tb": 128,
"tbk": 2,
"tl": 1969521,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
860,
861,
862,
863,
864
]
},
{
"tb": 64,
"tbk": 1,
"tl": 5492,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
45,
46,
47,
348,
49
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 20455,
"mb": 15872,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
27,
28,
29,
865,
386,
267,
295
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 2603,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
536,
866,
867,
868,
869,
309,
342,
9
]
},
{
"tb": 16,
"tbk": 1,
"tl": 75,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
53,
223,
371,
643,
644,
32
]
},
{
"tb": 64,
"tbk": 1,
"tl": 169,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
45,
46,
47,
554,
51
]
},
{
"tb": 64,
"tbk": 1,
"tl": 109,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
208,
870,
871,
872,
873,
874,
875,
876,
236,
663
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 2899,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
138,
877,
878,
879,
880,
881,
882,
883,
884
]
},
{
"tb": 64,
"tbk": 1,
"tl": 4503893,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
10,
208,
209,
210,
211,
212,
213,
885,
886
]
},
{
"tb": 1152,
"tbk": 4,
"tl": 143,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
887,
888,
889,
890,
891
]
},
{
"tb": 96,
"tbk": 1,
"tl": 29,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
757,
371,
372,
373,
298,
9
]
},
{
"tb": 24,
"tbk": 1,
"tl": 29,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
189,
500,
501,
502,
408,
409,
410,
504,
892,
652
]
},
{
"tb": 480,
"tbk": 4,
"tl": 190,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
200,
207
]
},
{
"tb": 192,
"tbk": 1,
"tl": 9632,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
893,
894,
895,
896,
897,
898,
342,
9,
16
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 6526,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
682,
683,
684,
685,
899
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 1385838,
"mb": 1048576,
"mbk": 1,
"gb": 1048576,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
216,
217,
218,
219,
220,
221,
900
]
},
{
"tb": 72,
"tbk": 1,
"tl": 2393036,
"mb": 72,
"mbk": 1,
"gb": 72,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
10,
901,
902,
903,
904,
905,
906,
907,
908,
909
]
},
{
"tb": 1968,
"tbk": 2,
"tl": 53,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
910,
911,
912,
913,
914,
915
]
},
{
"tb": 72,
"tbk": 1,
"tl": 93503,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
189,
500,
501,
502,
408,
409,
410,
411,
292,
9
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
362,
363,
364,
547,
548,
549,
550,
845,
379
]
},
{
"tb": 8388608,
"tbk": 262144,
"tl": 242554,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
85,
86,
87,
232,
233,
234,
916,
917,
441
]
},
{
"tb": 3280,
"tbk": 17,
"tl": 74,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
75,
76,
77,
78,
79,
80,
81,
308,
453,
347
]
},
{
"tb": 16,
"tbk": 1,
"tl": 403427,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
75,
380,
381,
382,
918,
919,
66,
9
]
},
{
"tb": 24,
"tbk": 1,
"tl": 2392548,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
10,
920,
921,
922,
923,
924,
9,
16
]
},
{
"tb": 2880,
"tbk": 24,
"tl": 2078,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
925,
83
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1514,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
75,
926,
927,
928,
929,
930,
931,
932,
933
]
},
{
"tb": 56,
"tbk": 1,
"tl": 2244,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
934,
439,
295,
33
]
},
{
"tb": 2736,
"tbk": 6,
"tl": 2260,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
521,
522,
523,
935,
936,
937
]
},
{
"tb": 96,
"tbk": 1,
"tl": 4080,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
938,
939,
940,
941,
351
]
},
{
"tb": 160,
"tbk": 1,
"tl": 7192,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
138,
139,
140,
141,
150,
942,
519,
295
]
},
{
"tb": 1048576,
"tbk": 2,
"tl": 4037673,
"mb": 1048576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
85,
86,
87,
88,
89,
90,
407,
408,
409,
410,
739
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1505,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
75,
943,
944,
945,
946,
947,
948,
949,
950
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 99502,
"mb": 1198080,
"mbk": 4,
"gb": 1048576,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
10,
138,
139,
140,
141,
142,
143,
144,
951
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2105751,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
278,
952,
953,
954,
955,
956,
957,
958,
959
]
},
{
"tb": 2304,
"tbk": 12,
"tl": 4251,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
839,
840,
841,
960,
961,
962
]
},
{
"tb": 216,
"tbk": 1,
"tl": 7262,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
722,
963,
964,
965,
966,
967,
968,
969,
970
]
},
{
"tb": 896,
"tbk": 6,
"tl": 7282,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
45,
46,
47,
971,
972
]
},
{
"tb": 96,
"tbk": 1,
"tl": 25,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
173,
174,
175,
973,
265
]
},
{
"tb": 96,
"tbk": 3,
"tl": 52029,
"mb": 96,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
974,
975,
976,
977,
978,
979,
980,
981
]
},
{
"tb": 96,
"tbk": 1,
"tl": 12,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
757,
55,
56,
9,
16
]
},
{
"tb": 2097152,
"tbk": 65536,
"tl": 38214,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
85,
86,
87,
88,
89,
90,
982,
983,
984
]
},
{
"tb": 2097152,
"tbk": 2,
"tl": 401465,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
985,
986,
987,
988,
989,
990,
991,
992
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1293794,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
993,
9
]
},
{
"tb": 16,
"tbk": 1,
"tl": 23,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
577,
994,
995,
996,
997,
998,
999,
1000,
9,
16
]
},
{
"tb": 512,
"tbk": 1,
"tl": 14,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
27,
28,
29,
146,
178,
1001,
376
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1205,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
85,
86,
87,
232,
233,
234,
1002,
357,
358
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2105198,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
189,
1003,
1004,
1005,
1006,
1007,
1008,
1009,
1010
]
},
{
"tb": 512,
"tbk": 1,
"tl": 93388,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
1011,
1012,
1013,
1014,
9
]
},
{
"tb": 8,
"tbk": 1,
"tl": 171,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
75,
1015,
1016,
1017,
1018,
1019,
1020,
1021,
1022
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1688,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
107,
108,
109,
110,
1023,
112,
113
]
},
{
"tb": 96,
"tbk": 1,
"tl": 4505560,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
10,
1024,
1025,
1026,
1027,
1028,
1029,
1030,
1031,
1032
]
},
{
"tb": 64,
"tbk": 1,
"tl": 984994,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
208,
870,
871,
872,
873,
874,
875,
876,
236,
237
]
},
{
"tb": 256,
"tbk": 4,
"tl": 64397,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
27,
28,
29,
146,
147,
148,
1033
]
},
{
"tb": 24,
"tbk": 1,
"tl": 147,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
189,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 3024,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
527,
528,
529,
530,
1042
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 2445543,
"mb": 8388608,
"mbk": 1,
"gb": 8388608,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
10,
138,
139,
140,
141,
142,
143,
144,
1043
]
},
{
"tb": 1056,
"tbk": 33,
"tl": 62048,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
85,
86,
87,
88,
89,
90,
407,
408,
409,
410,
504
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 4511361,
"mb": 1024,
"mbk": 1,
"gb": 1024,
"gbk": 1,
"eb": 1024,
"ebk": 1,
"fs": [
1044,
1045,
1046,
1047,
1048,
1049,
1050,
1051,
1052,
1053,
1054,
1055,
1056,
1057,
1058,
1059,
1060,
1061,
1062,
1063,
1064
]
},
{
"tb": 20096,
"tbk": 110,
"tl": 458017,
"mb": 20096,
"mbk": 110,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
138,
139,
140,
141,
150,
151,
667,
386
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 9913,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
216,
217,
218,
219,
220,
221,
1065
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 66026,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
85,
86,
87,
232,
233,
234,
1066,
1067,
1068
]
},
{
"tb": 48,
"tbk": 1,
"tl": 19470,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
1069,
1070,
1071,
1072,
1073,
1074
]
},
{
"tb": 100864,
"tbk": 392,
"tl": 190913,
"mb": 16384,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
138,
1075,
1076,
1077,
1078,
1079,
1080,
1081,
1082
]
},
{
"tb": 160,
"tbk": 1,
"tl": 5713,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
1083,
1084,
1085,
1086,
295
]
},
{
"tb": 64,
"tbk": 1,
"tl": 64,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
27,
28,
29,
253,
1087,
360,
295
]
},
{
"tb": 48,
"tbk": 2,
"tl": 105,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
52,
1088,
628,
629,
630,
631,
632
]
},
{
"tb": 33554432,
"tbk": 1,
"tl": 1251532,
"mb": 33554432,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
26,
85,
86,
87,
88,
89,
90,
1089,
1090,
1091
]
}
],
"ftbl": [
"[root]",
"0x55ebd3bff819: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x55ebd3bfe62a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55ebd3b55f36: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd3b55f36: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd3b55f36: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd38b1dac: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x55ebd397ed4a: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x55ebd396630a: winter_prover::Prover::generate_proof (prover/src/lib.rs:608:34)",
"0x55ebd39762ee: winter_prover::Prover::prove (prover/src/lib.rs:175:37)",
"0x55ebd3a3b3b9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x55ebd3904a1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55ebd39da9b5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39da9b5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39da9b5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd3963909: winter_prover::Prover::generate_proof (prover/src/lib.rs:309:32)",
"0x55ebd38d627c: winterfell::main (winterfell/src/main.rs:54:17)",
"0x55ebd39015cc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55ebd39c4aff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39c4aff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39c4aff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39c4aff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a224ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a1f337: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4de8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd38d5edf: winterfell::main (winterfell/src/main.rs:28:26)",
"0x55ebd390d4ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55ebd39da7d5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39da7d5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39da7d5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd38827be: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x55ebd3878b34: winter_verifier::perform_verification (verifier/src/lib.rs:319:28)",
"0x55ebd387c5da: winter_verifier::verify (verifier/src/lib.rs:111:21)",
"0x55ebd38d6822: winterfell::main (winterfell/src/main.rs:71:11)",
"0x55ebd390352a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55ebd39bb949: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39bb949: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39bb949: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39bb949: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a2396a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a1f874: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4db8a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd388040e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x55ebd3c73f79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x55ebd3c72709: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x55ebd3938fe1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x55ebd39420d8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x55ebd3a0067d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x55ebd39611b5: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:547:13)",
"0x55ebd3877fc9: winter_verifier::perform_verification (verifier/src/lib.rs:266:61)",
"0x55ebd3962978: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:517:13)",
"0x55ebd38ef6b2: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x55ebd3a3a847: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x55ebd38dc245: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x55ebd38d7330: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:177:13)",
"0x55ebd39b5518: winter_prover::trace::Trace::validate (src/trace/mod.rs:123:26)",
"0x55ebd3967578: winter_prover::Prover::generate_proof (prover/src/lib.rs:379:17)",
"0x55ebd390a06c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55ebd398af38: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd398af38: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd398af38: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55ebd3a117c5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55ebd3a117c5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x55ebd3a117c5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x55ebd38578e2: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x55ebd389d973: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:33)",
"0x55ebd3967266: winter_prover::Prover::generate_proof (prover/src/lib.rs:417:21)",
"0x55ebd3c72ea0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x55ebd3c73108: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x55ebd3c734ca: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x55ebd3c734ca: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x55ebd3c7326e: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x55ebd3c7326e: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x55ebd3c7335d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x55ebd3c36a99: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x55ebd3c36c0a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55ebd3c2a61c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd3c2a61c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd3c2a61c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55ebd3a112d9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55ebd3a112d9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x55ebd3a112d9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x55ebd38b5abb: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x55ebd38e446d: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x55ebd39abcf0: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x55ebd398ae08: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd398ae08: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd398ae08: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55ebd3a10b85: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55ebd3a10b85: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x55ebd3a10b85: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x55ebd38578f5: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x55ebd3bfe2e9: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x55ebd3b0d840: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x55ebd3b0daa9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x55ebd3b1d111: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x55ebd38e27dc: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x55ebd38784f7: winter_verifier::perform_verification (verifier/src/lib.rs:298:27)",
"0x55ebd390549c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55ebd39c1b4f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39c1b4f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39c1b4f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39c1b4f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a0d03e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x55ebd3a21035: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4e0ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd38d674e: winterfell::main (winterfell/src/main.rs:65:26)",
"0x55ebd398b511: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd398b511: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd398b511: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x55ebd3a0fc80: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x55ebd39a51ce: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x55ebd387c038: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:216:32)",
"0x55ebd3a5be5f: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x55ebd39d6e6f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39d6e6f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39d6e6f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39d6e6f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a22ecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a1e825: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4dafd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd3abdc5a: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x55ebd397d80b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x55ebd397ba1d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x55ebd3aefc2a: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x55ebd3acec7d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x55ebd3ad1613: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x55ebd38e2237: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x55ebd389d8b2: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:28)",
"0x55ebd390df6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55ebd39d322b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39d322b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39d322b: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39d322b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55ebd3a23aad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a20955: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd394416d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd3984618: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x55ebd3900dec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55ebd39dab95: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39dab95: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39dab95: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd3944a57: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x55ebd38e3259: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x55ebd38e4739: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x55ebd389f572: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x55ebd3944ae7: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x55ebd38dee2f: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x55ebd3aae338: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x55ebd38ecd52: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x55ebd38ab785: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x55ebd38b4cc7: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x55ebd38b3547: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x55ebd39b33a7: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x55ebd39c63bf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39c63bf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39c63bf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39c63bf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a236cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a20e45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4d52d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd38854ab: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x55ebd390fedc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55ebd39d225f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39d225f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39d225f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39d225f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a0f18b: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x55ebd3a1f8d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4d56d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd39637f7: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:36)",
"0x55ebd3953d5a: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:170:36)",
"0x55ebd395234f: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:55:17)",
"0x55ebd3922281: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x55ebd3942a38: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x55ebd3a0333e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x55ebd39905c3: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x55ebd396502d: winter_prover::Prover::generate_proof (prover/src/lib.rs:524:9)",
"0x55ebd38de9fe: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x55ebd386d2ce: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x55ebd386aac4: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x55ebd39bd033: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39bd033: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39bd033: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39bd033: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a239ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a20545: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4dfdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd39636db: winter_prover::Prover::generate_proof (prover/src/lib.rs:293:23)",
"0x55ebd39037bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55ebd39bbf8f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39bbf8f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39bbf8f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39bbf8f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a2306d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a1ef75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4c79d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd386c3a8: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x55ebd386d1bf: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x55ebd386ef9d: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x55ebd38e42b7: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x55ebd38e63c0: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x55ebd38abc84: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd38abc84: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd38abc84: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x55ebd3a0fc56: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x55ebd38e3a4c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x55ebd397eb91: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x55ebd3900b4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55ebd395f4c4: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd395f4c4: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd395f4c4: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x55ebd3a0fbf6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x55ebd38d70ad: <winterfell::WorkAir as winter_air::air::Air>::new (winterfell/src/main.rs:151:23)",
"0x55ebd387d03b: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:102:85)",
"0x55ebd3a59a6e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x55ebd3c71adc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x55ebd3c70d6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x55ebd3c70ae8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x55ebd3c70ae8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x55ebd3c70124: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x55ebd3c6dd43: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x55ebd386724c: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x55ebd38d7247: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:176:13)",
"0x55ebd3ac5de9: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x55ebd38781ac: winter_verifier::perform_verification (verifier/src/lib.rs:275:24)",
"0x55ebd397e07b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x55ebd397b28d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x55ebd3aef2ea: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x55ebd3aca009: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x55ebd3a33a75: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x55ebd38aa598: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x55ebd398b45b: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55ebd398b45b: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x55ebd398b45b: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x55ebd385fcba: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x55ebd3960010: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:354:9)",
"0x55ebd389ca9c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:51:13)",
"0x55ebd39900d2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x55ebd39d80a6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x55ebd398fcbe: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x55ebd39bc7f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39bc7f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39bc7f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39bc7f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a2234a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a1e3a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4e13a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd3973f12: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:640:42)",
"0x55ebd3857750: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x55ebd3a10df5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55ebd3a10df5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x55ebd3a10df5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x55ebd3989485: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x55ebd3978efa: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x55ebd38b3356: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x55ebd39caa3f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39caa3f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39caa3f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39caa3f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a23b1d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a1ebb7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4c9bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd388adf7: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x55ebd38862d7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x55ebd3878a15: winter_verifier::perform_verification (verifier/src/lib.rs:311:25)",
"0x55ebd38fb2b9: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x55ebd39ad104: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x55ebd3aadb89: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x55ebd39656b8: winter_prover::Prover::generate_proof (prover/src/lib.rs:558:13)",
"0x55ebd39cbb9d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39cbb9d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39cbb9d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39cbb9d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a222aa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a1f394: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4db5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd39ac5c3: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x55ebd390644a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55ebd39d44f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39d44f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39d44f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39d44f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a229da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a1fbc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4ceba: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd3973fcf: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:644:36)",
"0x55ebd3906c1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55ebd38573e2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd38573e2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd38573e2: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x55ebd386a24b: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x55ebd3963e23: winter_prover::Prover::generate_proof (prover/src/lib.rs:423:33)",
"0x55ebd38fbe4c: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x55ebd39acf37: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x55ebd387c50b: winter_verifier::verify (verifier/src/lib.rs:109:19)",
"0x55ebd3856d37: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x55ebd385fb7f: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x55ebd39671b5: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:21)",
"0x55ebd39a42d4: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x55ebd399fbbd: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x55ebd3941041: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x55ebd3942018: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x55ebd3a008be: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x55ebd3953e9d: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:175:17)",
"0x55ebd38ee8d8: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x55ebd38856fe: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x55ebd386ed08: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x55ebd38e3dbc: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x55ebd38eb0bd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x55ebd38a230f: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x55ebd38a1506: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x55ebd3a3f2f8: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:651:17)",
"0x55ebd38afb8e: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x55ebd39a6d0d: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x55ebd3c729ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55ebd3c7404c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd3c7404c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd3c7404c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55ebd3c71c7c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55ebd3c71c7c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x55ebd3c71c7c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x55ebd3c6dece: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x55ebd387529f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x55ebd38f0df3: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x55ebd39ad76e: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x55ebd390477c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55ebd39c8bf2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39c8bf2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39c8bf2: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39c8bf2: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55ebd3a23b7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a1ec35: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4c8cd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd3982a6a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x55ebd3a3bc5a: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x55ebd3aaf6a7: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x55ebd3992889: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x55ebd3c2a5cc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55ebd3c2a5cc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x55ebd3c2a5cc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x55ebd38eac0e: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x55ebd396619c: winter_prover::Prover::generate_proof (prover/src/lib.rs:600:25)",
"0x55ebd3937c21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x55ebd3941dd8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x55ebd3a036ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x55ebd387d8ec: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x55ebd38804b0: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x55ebd39613d4: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:541:17)",
"0x55ebd38ef1b6: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x55ebd38ad07a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x55ebd387d845: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x55ebd3966217: winter_prover::Prover::generate_proof (prover/src/lib.rs:603:29)",
"0x55ebd3ae855d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x55ebd3aeea25: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x55ebd3ae186e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x55ebd3abcd9d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x55ebd3ac65e9: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x55ebd3878c03: winter_verifier::perform_verification (verifier/src/lib.rs:323:5)",
"0x55ebd3859126: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x55ebd39adc15: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x55ebd38aff66: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x55ebd3c0132c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd3c0132c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd3c0132c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55ebd3b5a9e9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55ebd3b5a9e9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x55ebd3b5a9e9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x55ebd397b09a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x55ebd3859a26: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x55ebd39ad714: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x55ebd395fb72: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:371:13)",
"0x55ebd3951adf: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:41:22)",
"0x55ebd389cb39: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:36)",
"0x55ebd3a3ff8c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:40:30)",
"0x55ebd3889cb7: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x55ebd3878abc: winter_verifier::perform_verification (verifier/src/lib.rs:317:25)",
"0x55ebd3aab14c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x55ebd3874e0c: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x55ebd387c1dd: winter_verifier::verify (verifier/src/lib.rs:96:32)",
"0x55ebd39da646: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39da646: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39da646: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd38b5882: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x55ebd38787a8: winter_verifier::perform_verification (verifier/src/lib.rs:306:42)",
"0x55ebd38f7b3e: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x55ebd38fb040: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x55ebd39c6b04: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39c6b04: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39c6b04: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39c6b04: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55ebd3a23eaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a1fd64: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4e0da: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd38afe8d: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x55ebd39ab4ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x55ebd3c392db: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x55ebd3c38fb1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x55ebd3c322ab: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x55ebd3c2be9d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x55ebd3c3742b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x55ebd3c3b1e3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x55ebd389a58a: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:155:31)",
"0x55ebd389de25: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:128:17)",
"0x55ebd3a98c6e: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55ebd3c2a2c6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x55ebd3abd6ca: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x55ebd39d9d83: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x55ebd3a10d25: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55ebd3a10d25: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x55ebd3a10d25: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x55ebd386a238: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x55ebd39051fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55ebd39c7622: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39c7622: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39c7622: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39c7622: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55ebd3a22daa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a1e484: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a3b8ea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd39aad67: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x55ebd3c3948b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x55ebd3c38e51: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x55ebd3c3254b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x55ebd3c2cc41: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x55ebd3c2d2c7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x55ebd3c3c95b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x55ebd391f611: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x55ebd3942288: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x55ebd3a00c0b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x55ebd38b03c9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x55ebd39b455d: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:243:25)",
"0x55ebd38d6d94: winterfell::build_do_work_trace (winterfell/src/main.rs:91:5)",
"0x55ebd397660b: winterfell::main::{{closure}} (winterfell/src/main.rs:30:23)",
"0x55ebd390ca6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55ebd39da875: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39da875: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39da875: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd38b4a4c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x55ebd39acad4: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x55ebd389fd9a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x55ebd39746ee: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:669:26)",
"0x55ebd3963511: winter_prover::Prover::generate_proof (prover/src/lib.rs:274:13)",
"0x55ebd39c595f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39c595f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39c595f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39c595f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a23a4d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a1fe15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4df5d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd3ac37af: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x55ebd3966e30: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:13)",
"0x55ebd38e3aaf: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x55ebd387d77b: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x55ebd39c9ecd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39c9ecd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39c9ecd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39c9ecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a2309a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a1e544: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4d73a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd39ac50b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x55ebd39c0ecf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39c0ecf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39c0ecf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39c0ecf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a23d5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a20da7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4dedd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd38d60e6: winterfell::main (winterfell/src/main.rs:38:27)",
"0x55ebd39ba4b9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39ba4b9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39ba4b9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39ba4b9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a228ea: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a1f4f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4d39a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd3950fe8: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:83:9)",
"0x55ebd38ad517: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x55ebd3aab472: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x55ebd38e799f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x55ebd38ecbc6: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x55ebd38f22d3: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x55ebd38e7afb: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x55ebd3c399e9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd3c399e9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd3c399e9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd3c399e9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55ebd3c39e2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3c39df7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3c39fce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd3c3c4c9: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x55ebd39d536f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39d536f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39d536f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39d536f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a2289d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a20895: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4dbdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd39b4fe2: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:140:32)",
"0x55ebd39d9a22: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39d9a22: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39d9a22: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x55ebd386a2c5: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x55ebd39d80e6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x55ebd387d6db: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x55ebd3901d9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55ebd39cae5f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39cae5f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39cae5f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39cae5f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a223cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a1fe87: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4ce8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd3951bcd: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:51:26)",
"0x55ebd386c440: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x55ebd3a54db6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x55ebd3854b11: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x55ebd39b9997: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x55ebd39ac970: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x55ebd39ade5f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x55ebd397c72b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x55ebd397bf9d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x55ebd3aef69a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x55ebd3adcf7b: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x55ebd3ae71a9: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x55ebd3ae1416: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x55ebd3bfc700: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x55ebd3bfc939: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x55ebd3bfc132: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x55ebd38b517c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x55ebd38f73b5: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x55ebd3975acc: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:701:36)",
"0x55ebd3abd78d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x55ebd399fb6c: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x55ebd3abdb73: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x55ebd390769c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55ebd39bd70f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39bd70f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39bd70f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39bd70f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a2227d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a20a55: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4c8ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd3abdac4: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x55ebd38ab428: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x55ebd3963132: winter_prover::Prover::generate_proof (prover/src/lib.rs:262:22)",
"0x55ebd3bd069c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55ebd3bd069c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x55ebd3bd069c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x55ebd3875084: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x55ebd3874dce: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x55ebd38f02db: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x55ebd39904ab: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x55ebd3962a42: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:512:13)",
"0x55ebd38778e5: winter_verifier::perform_verification (verifier/src/lib.rs:185:13)",
"0x55ebd390e20c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55ebd39c7e49: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39c7e49: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39c7e49: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39c7e49: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a2293a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a1f7f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4d01a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd3877c5f: winter_verifier::perform_verification (verifier/src/lib.rs:218:40)",
"0x55ebd390203c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55ebd39c4909: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39c4909: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39c4909: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39c4909: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a23e3a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a1f934: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4ca2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd3877ba2: winter_verifier::perform_verification (verifier/src/lib.rs:214:41)",
"0x55ebd3a5fd85: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x55ebd3a5fe16: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x55ebd3878edf: winter_verifier::perform_verification (verifier/src/lib.rs:228:13)",
"0x55ebd390a30c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55ebd39bdb59: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39bdb59: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39bdb59: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39bdb59: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a226ba: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a209a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4ceea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd3964e8c: winter_prover::Prover::generate_proof (prover/src/lib.rs:505:52)",
"0x55ebd384a89d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x55ebd3908b7c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55ebd39c219f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39c219f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39c219f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39c219f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a2354d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a20355: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4dddd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd389e1b1: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x55ebd387441f: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x55ebd3872a15: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x55ebd39073fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55ebd39c6edf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39c6edf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39c6edf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39c6edf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a2388d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a1f0c5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4c9dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd397408b: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:648:34)",
"0x55ebd384c6e8: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:227:28)",
"0x55ebd38dfec7: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x55ebd38f1003: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x55ebd38f2210: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x55ebd3a42b0a: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x55ebd3a597a8: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x55ebd38de114: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x55ebd386a314: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x55ebd3c3912b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x55ebd3c39061: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x55ebd3c3246b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x55ebd3c2cb71: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x55ebd3c2d307: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x55ebd3c3c90b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x55ebd3c730d9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x55ebd3c733d2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x55ebd3c74159: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x55ebd3c2a01a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x55ebd38b031c: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x55ebd399f921: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x55ebd38564f5: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x55ebd398355c: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x55ebd3a31129: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x55ebd3982b36: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x55ebd3986296: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x55ebd395fbcf: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:369:9)",
"0x55ebd38ece92: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x55ebd38ecb2c: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x55ebd3965b02: winter_prover::Prover::generate_proof (prover/src/lib.rs:571:9)",
"0x55ebd38d6e36: <winterfell::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (winterfell/src/main.rs:133:9)",
"0x55ebd387c330: winter_verifier::verify (verifier/src/lib.rs:98:38)",
"0x55ebd386ceae: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x55ebd3870a1c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x55ebd3858461: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x55ebd38ef03f: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x55ebd38eac29: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x55ebd3a402cb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:64:9)",
"0x55ebd3878fcc: winter_verifier::perform_verification (verifier/src/lib.rs:225:43)",
"0x55ebd39da3c5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39da3c5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39da3c5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39638cd: winter_prover::Prover::generate_proof (prover/src/lib.rs:308:37)",
"0x55ebd38856df: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x55ebd399f8a2: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x55ebd3961350: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:543:13)",
"0x55ebd3962f02: winter_prover::Prover::generate_proof (prover/src/lib.rs:233:27)",
"0x55ebd39090bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55ebd39ba6af: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39ba6af: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39ba6af: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39ba6af: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a0f705: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x55ebd3a2050a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4cb3d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd3873891: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x55ebd397b0af: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x55ebd3a3fe16: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:26:25)",
"0x55ebd38853b7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x55ebd3ab1d94: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x55ebd3abd95d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x55ebd38f7e35: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x55ebd390e9ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55ebd39daa55: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39daa55: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39daa55: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd3963877: winter_prover::Prover::generate_proof (prover/src/lib.rs:306:39)",
"0x55ebd397edca: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x55ebd39b51b0: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:140:51)",
"0x55ebd3a56476: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x55ebd3854fc1: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x55ebd38ad999: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x55ebd385832d: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x55ebd39b59a5: winter_prover::trace::Trace::validate (src/trace/mod.rs:179:13)",
"0x55ebd3951028: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:83:31)",
"0x55ebd3a577af: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x55ebd3c370f0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x55ebd3c2b669: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x55ebd3c2ae51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x55ebd3c2a950: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x55ebd38eae24: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x55ebd3966e8b: winter_prover::Prover::generate_proof (prover/src/lib.rs:450:13)",
"0x55ebd390423c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55ebd39bebd9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39bebd9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39bebd9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39bebd9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a2300a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a20c44: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4dc2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd386c4b2: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x55ebd39c0ac3: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39c0ac3: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39c0ac3: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39c0ac3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a22bd4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a1f29a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4d654: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd38d5d51: winterfell::main (winterfell/src/main.rs:22:32)",
"0x55ebd394718f: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x55ebd38e793d: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x55ebd38b1eb4: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x55ebd39add01: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x55ebd3a3d7a8: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:216:31)",
"0x55ebd3a5bd36: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x55ebd3a79bd0: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55ebd3a47f66: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x55ebd3a4f8f6: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x55ebd38f7d26: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x55ebd3928a31: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x55ebd3942048: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x55ebd3a0555e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x55ebd38793b2: winter_verifier::perform_verification (verifier/src/lib.rs:179:9)",
"0x55ebd3aad4f9: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x55ebd38ab37b: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x55ebd3a5fd72: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x55ebd3902d4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55ebd39c886f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39c886f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39c886f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39c886f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a2361d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a1e285: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4cc1d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd3962eb3: winter_prover::Prover::generate_proof (prover/src/lib.rs:222:20)",
"0x55ebd39c44cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39c44cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39c44cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39c44cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a230dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a203d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4ca6d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd3962cd2: winter_prover::Prover::generate_proof (prover/src/lib.rs:210:38)",
"0x55ebd384f8cd: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x55ebd384e036: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x55ebd3a3ec48: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:300:57)",
"0x55ebd3878636: winter_verifier::perform_verification (verifier/src/lib.rs:305:9)",
"0x55ebd3aadb9b: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x55ebd39267a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x55ebd3942108: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x55ebd3a02dae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x55ebd38791eb: winter_verifier::perform_verification (verifier/src/lib.rs:184:9)",
"0x55ebd39be18f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39be18f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39be18f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39be18f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a22ccd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a1fcd7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4d50d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd3a42aa0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x55ebd39644d0: winter_prover::Prover::generate_proof (prover/src/lib.rs:452:35)",
"0x55ebd38d721b: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:175:9)",
"0x55ebd3990347: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x55ebd388521f: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x55ebd3889ca0: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x55ebd39b4131: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x55ebd3988853: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x55ebd3a3b832: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x55ebd391017c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55ebd39d2eef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39d2eef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39d2eef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39d2eef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a2327d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a1ec65: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a2f9bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd3963033: winter_prover::Prover::generate_proof (prover/src/lib.rs:248:41)",
"0x55ebd3c2ef3e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x55ebd3c30400: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x55ebd3c2fbf8: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x55ebd389f4bd: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x55ebd3975eb8: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:716:26)",
"0x55ebd3964931: winter_prover::Prover::generate_proof (prover/src/lib.rs:482:37)",
"0x55ebd384ca3f: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:230:34)",
"0x55ebd3a55026: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x55ebd3a7b3a7: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55ebd389a5e4: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:156:33)",
"0x55ebd39066dc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55ebd39c844f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39c844f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39c844f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39c844f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a2304d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a1df75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4e41d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd3964dcf: winter_prover::Prover::generate_proof (prover/src/lib.rs:501:51)",
"0x55ebd399f82f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x55ebd3924511: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x55ebd3942a08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x55ebd3a0040e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x55ebd38e7c69: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x55ebd39ac370: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x55ebd39cc05d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39cc05d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39cc05d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39cc05d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a22dda: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a1fde4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4d1ca: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd39ac7eb: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x55ebd39c12ef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39c12ef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39c12ef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39c12ef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a234cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a1fd15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4c7dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd387d8d5: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x55ebd390132c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55ebd3859aea: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd3859aea: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd3859aea: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x55ebd3a0fca6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x55ebd38f0508: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x55ebd388041d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x55ebd39acd54: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x55ebd3870adb: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x55ebd39c14ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39c14ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39c14ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39c14ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a23d3d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a1e5f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4e21d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd3889ff2: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x55ebd39d4d2f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39d4d2f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39d4d2f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39d4d2f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a2256d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a1f125: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4d98d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd3abcd29: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x55ebd3c3963b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x55ebd3c38f01: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x55ebd3c3238b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x55ebd3c2f04e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x55ebd3c309ec: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x55ebd3c2f55a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x55ebd3874d9a: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x55ebd392f6d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x55ebd39427c8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x55ebd3a0167e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x55ebd38fb216: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x55ebd39ce0ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39ce0ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39ce0ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39ce0ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a2244d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a1e625: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4d13d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd3856d28: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x55ebd384a88c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x55ebd397edb3: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x55ebd39258d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x55ebd3942318: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x55ebd3a0312d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x55ebd386caf2: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x55ebd3a98ac5: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55ebd38f7b7f: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x55ebd39daaf5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39daaf5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39daaf5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd38e6499: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x55ebd395f012: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd395f012: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd395f012: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x55ebd3a11b05: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55ebd3a11b05: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x55ebd3a11b05: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x55ebd385fb95: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x55ebd39cbe94: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39cbe94: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39cbe94: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39cbe94: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55ebd3a225da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a20ec4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4dc5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd38b346e: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x55ebd3a3ef36: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:226:17)",
"0x55ebd3a5919e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x55ebd393cb21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x55ebd3942498: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x55ebd3a047ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x55ebd38f5db7: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x55ebd3982bae: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x55ebd38f02f2: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x55ebd3c29c69: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x55ebd3c26c1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55ebd3c23db6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd3c23db6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd3c23db6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd38eab68: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x55ebd3abd5ed: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x55ebd386ea93: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x55ebd390cfac: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55ebd39c28df: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39c28df: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39c28df: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39c28df: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a0db4e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x55ebd3a20415: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4e2ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd387f4f7: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x55ebd397ca8b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x55ebd397be3d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x55ebd3aef78a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x55ebd3aca2a9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x55ebd3a32bc8: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x55ebd3a31195: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x55ebd38a09d6: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x55ebd389fe23: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x55ebd3870a78: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x55ebd389dbe1: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:135:9)",
"0x55ebd390dccc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55ebd39dac35: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39dac35: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39dac35: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd396388e: winter_prover::Prover::generate_proof (prover/src/lib.rs:307:44)",
"0x55ebd38b6c4b: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x55ebd39d59dd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39d59dd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39d59dd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39d59dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a22c7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a1fff4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4d86a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd39ac67b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x55ebd39a6e73: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x55ebd3aca1e9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x55ebd3a3415b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x55ebd38aa6eb: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x55ebd3b4f0b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x55ebd3b51d69: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x55ebd3b59322: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x55ebd38ad65f: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x55ebd39b9b50: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x55ebd39c358d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39c358d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39c358d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39c358d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a22d7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a1ed34: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4d30a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd39ac733: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x55ebd38e79b6: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x55ebd39bb539: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39bb539: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39bb539: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39bb539: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a22b7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a20b14: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4e44a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd39634ea: winter_prover::Prover::generate_proof (prover/src/lib.rs:272:43)",
"0x55ebd3c2be3d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x55ebd3c37748: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x55ebd3c3b0a7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x55ebd39be59f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39be59f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39be59f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39be59f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a0e0d6: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x55ebd3a20bc5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4e30d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd387c3a8: winter_verifier::verify (verifier/src/lib.rs:102:24)",
"0x55ebd3a3b4e2: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x55ebd3874c98: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x55ebd3886325: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x55ebd39cdacf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39cdacf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39cdacf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39cdacf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a22a5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a1fc45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4de4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd384c1cf: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:283:9)",
"0x55ebd385f106: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x55ebd389bac9: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:290:18)",
"0x55ebd389a88e: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:173:30)",
"0x55ebd39d3d1f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39d3d1f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39d3d1f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39d3d1f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a2261d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a1e4f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4d34d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd386d7f7: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x55ebd3966e70: winter_prover::Prover::generate_proof (prover/src/lib.rs:449:13)",
"0x55ebd39d9328: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39d9328: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39d9328: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55ebd3a11205: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55ebd3a11205: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x55ebd3a11205: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x55ebd3964ea3: winter_prover::Prover::generate_proof (prover/src/lib.rs:510:39)",
"0x55ebd3889eb1: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x55ebd3abce04: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x55ebd39d0abf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39d0abf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39d0abf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39d0abf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a23e7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a20925: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4d5dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd384c788: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:228:23)",
"0x55ebd391ac01: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x55ebd3942408: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x55ebd3a04c54: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x55ebd3967285: winter_prover::Prover::generate_proof (prover/src/lib.rs:418:17)",
"0x55ebd39d140d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39d140d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39d140d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39d140d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a22e4a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a206e4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4cd1a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd39a6ba1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x55ebd39a51b0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x55ebd3907e6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55ebd39c2b29: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39c2b29: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39c2b29: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39c2b29: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a22caa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a21084: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4d19a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd38f024b: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x55ebd38f2222: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x55ebd39be3a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39be3a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39be3a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39be3a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55ebd3a2348a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a1efc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3a4da3a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd3962d8f: winter_prover::Prover::generate_proof (prover/src/lib.rs:214:39)",
"0x55ebd38ad31d: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x55ebd389fe5c: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x55ebd3824d82: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x55ebd3824d82: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55ebd3824d82: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd3824d82: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd3824d82: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd3824d82: std::io::buffered::bufwriter::BufWriter<W>::with_capacity (io/buffered/bufwriter.rs:115:33)",
"0x55ebd3824d82: std::io::buffered::linewriter::LineWriter<W>::with_capacity (io/buffered/linewriter.rs:109:29)",
"0x55ebd3824d82: std::io::buffered::linewriter::LineWriter<W>::new (io/buffered/linewriter.rs:89:9)",
"0x55ebd3824d82: std::io::stdio::stdout::{{closure}} (src/io/stdio.rs:618:62)",
"0x55ebd3824d82: std::sync::once_lock::OnceLock<T>::get_or_init::{{closure}} (src/sync/once_lock.rs:250:50)",
"0x55ebd3824d82: std::sync::once_lock::OnceLock<T>::initialize::{{closure}} (src/sync/once_lock.rs:376:19)",
"0x55ebd3824d82: std::sync::once::Once::call_once_force::{{closure}} (src/sync/once.rs:208:40)",
"0x55ebd3824d82: std::sys_common::once::futex::Once::call (sys_common/once/futex.rs:124:21)",
"0x55ebd3823eca: std::sync::once::Once::call_once_force (src/sync/once.rs:208:9)",
"0x55ebd3823eca: std::sync::once_lock::OnceLock<T>::initialize (src/sync/once_lock.rs:375:9)",
"0x55ebd3c8e1c5: std::sync::once_lock::OnceLock<T>::get_or_try_init (src/sync/once_lock.rs:298:9)",
"0x55ebd3c8e1c5: std::sync::once_lock::OnceLock<T>::get_or_init (src/sync/once_lock.rs:250:15)",
"0x55ebd3c8e1c5: std::io::stdio::stdout (src/io/stdio.rs:618:14)",
"0x55ebd3c8e1c5: std::io::stdio::print_to (src/io/stdio.rs:1020:21)",
"0x55ebd3c8e1c5: std::io::stdio::_print (src/io/stdio.rs:1097:5)",
"0x55ebd38d603a: winterfell::main (winterfell/src/main.rs:36:5)",
"0x55ebd39900f5: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x55ebd387df56: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x55ebd3a5aeb6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x55ebd3a7ffbd: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55ebd395a75a: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x55ebd3a3e852: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:503:32)",
"0x55ebd3a5bdc6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x55ebd3a7993a: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55ebd3a43e27: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x55ebd3a4ea22: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x55ebd39bf69a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55ebd39bf69a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55ebd39bf69a: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55ebd39bf69a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55ebd3a224cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55ebd3a20a1a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55ebd3aaaf4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55ebd38e4243: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x55ebd3941a21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x55ebd3941e08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x55ebd3a0442e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x55ebd39adf07: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x55ebd3858f63: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x55ebd3856388: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x55ebd38a4081: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x55ebd38a2e86: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x55ebd397412f: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:655:31)"
]
}