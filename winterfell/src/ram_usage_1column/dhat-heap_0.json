{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell",
"pid": 27188,
"tg": 8485516,
"te": 8637379,
"pps": [
{
"tb": 8,
"tbk": 1,
"tl": 4117676,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10
]
},
{
"tb": 48,
"tbk": 1,
"tl": 8607324,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
11,
12,
13,
14,
15,
16,
17,
18
]
},
{
"tb": 240,
"tbk": 2,
"tl": 1704495,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
18,
22
]
},
{
"tb": 1248,
"tbk": 12,
"tl": 338,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
25,
26,
27,
28,
29
]
},
{
"tb": 160,
"tbk": 1,
"tl": 7778,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
30,
31,
32,
33,
34,
35,
36,
37
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1704511,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
42,
43,
44,
45,
46,
21
]
},
{
"tb": 3624,
"tbk": 18,
"tl": 521,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
47,
48,
49,
50,
51,
52,
53,
54,
55,
56
]
},
{
"tb": 32,
"tbk": 1,
"tl": 60,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
57,
58,
59,
60,
61,
62,
63,
64,
65
]
},
{
"tb": 8,
"tbk": 1,
"tl": 393462,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
47,
66,
67,
68,
69,
70,
21,
18
]
},
{
"tb": 256,
"tbk": 1,
"tl": 10,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
47,
48,
49,
50,
71,
72,
73,
74,
75,
18
]
},
{
"tb": 2400,
"tbk": 12,
"tl": 243,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
76,
77,
78,
79,
80,
81
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 53475,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
82,
83,
84,
85,
86,
18
]
},
{
"tb": 1152,
"tbk": 4,
"tl": 208,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
89,
90,
91,
92,
93
]
},
{
"tb": 224,
"tbk": 1,
"tl": 7116,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
94,
95,
96,
97,
98
]
},
{
"tb": 16,
"tbk": 1,
"tl": 838039,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
99,
100,
101,
102,
103,
104,
105,
106,
107
]
},
{
"tb": 72,
"tbk": 1,
"tl": 5122,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
108,
109,
18,
22
]
},
{
"tb": 24,
"tbk": 1,
"tl": 4478974,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
110,
111,
112,
113,
114,
18,
22
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
115,
116,
117
]
},
{
"tb": 32,
"tbk": 1,
"tl": 154,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
118,
119,
120,
121,
122,
123,
124,
125,
126,
127
]
},
{
"tb": 96,
"tbk": 1,
"tl": 4441,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
129,
130,
131,
132,
133,
134
]
},
{
"tb": 64,
"tbk": 1,
"tl": 164,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
135,
136,
137,
138,
139
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 4116235,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
42,
43,
44,
140,
141,
142
]
},
{
"tb": 2880,
"tbk": 24,
"tl": 2365,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
129,
143,
144,
145,
146,
55
]
},
{
"tb": 64,
"tbk": 1,
"tl": 169,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
135,
136,
137,
147,
139
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 3384,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
148,
149,
150,
151,
152,
153,
154
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3669971,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
155,
156,
157,
158,
159,
160,
161,
162,
163
]
},
{
"tb": 48,
"tbk": 2,
"tl": 94,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
164,
165,
166,
167,
168,
169
]
},
{
"tb": 24,
"tbk": 1,
"tl": 4478959,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
170,
171,
172,
173,
174,
18,
22
]
},
{
"tb": 96,
"tbk": 1,
"tl": 9,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
175,
176,
177,
178,
37
]
},
{
"tb": 32,
"tbk": 1,
"tl": 174,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
42,
43,
44,
179,
180,
181
]
},
{
"tb": 160,
"tbk": 1,
"tl": 6189,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
182,
183,
184,
185,
37
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1933,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
196,
197,
198,
199,
200,
201,
202,
109
]
},
{
"tb": 992,
"tbk": 4,
"tl": 1264,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
47,
66,
67,
68,
203,
55,
204,
205
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1515596,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
206,
207,
126,
208,
209,
18
]
},
{
"tb": 102600,
"tbk": 225,
"tl": 60311,
"mb": 25992,
"mbk": 57,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
210,
211,
212,
213,
214,
215
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1909,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
216,
217,
218,
219,
220,
221,
222
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1631,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
47,
223,
224,
225,
226,
227,
228,
229,
230
]
},
{
"tb": 64,
"tbk": 1,
"tl": 5933,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
135,
136,
137,
231,
232
]
},
{
"tb": 16,
"tbk": 1,
"tl": 8605804,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
233,
234,
235,
236,
237,
238,
239,
240
]
},
{
"tb": 96,
"tbk": 1,
"tl": 2749441,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
175,
176,
177,
241,
18
]
},
{
"tb": 216,
"tbk": 1,
"tl": 7855,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
242,
243,
244,
245,
246,
247,
248,
249,
250
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 72507,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
148,
149,
150,
251,
252,
253,
254
]
},
{
"tb": 24,
"tbk": 1,
"tl": 4478969,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
255,
256,
257,
258,
259,
18,
22
]
},
{
"tb": 8388608,
"tbk": 524288,
"tl": 465239,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
82,
83,
84,
260,
261,
262
]
},
{
"tb": 48,
"tbk": 2,
"tl": 151,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
263,
165,
166,
167,
168,
169
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 20956,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
264,
265,
266,
267,
268,
269,
270
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1515585,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
82,
83,
84,
271,
126,
208
]
},
{
"tb": 2976,
"tbk": 4,
"tl": 3849,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
196,
197,
198,
199,
200,
272,
273,
75
]
},
{
"tb": 129024,
"tbk": 4,
"tl": 1626,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
264,
265,
266,
267,
268,
269,
274
]
},
{
"tb": 59,
"tbk": 3,
"tl": 839980,
"mb": 34,
"mbk": 1,
"gb": 34,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
275,
276,
277,
278,
279
]
},
{
"tb": 480,
"tbk": 4,
"tl": 5889,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
129,
143,
144,
145,
280,
281
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 1044033,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
30,
31,
32,
33,
282,
283,
284,
285
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 852345,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
148,
149,
150,
251,
286,
287,
288
]
},
{
"tb": 64,
"tbk": 1,
"tl": 311426,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
135,
136,
137,
231,
289
]
},
{
"tb": 16,
"tbk": 1,
"tl": 107,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
290,
291,
292,
293,
294,
209
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2265,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
295,
296,
297,
298,
299,
300,
301,
302,
303
]
},
{
"tb": 56,
"tbk": 1,
"tl": 2505,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
304,
305,
37,
117
]
},
{
"tb": 512,
"tbk": 1,
"tl": 29,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
148,
149,
150,
306,
307,
308,
117
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 7002,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
309,
310,
311,
312,
313
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3225,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
196,
197,
198,
199,
314,
315,
154,
316
]
},
{
"tb": 512,
"tbk": 1,
"tl": 17,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
148,
149,
150,
317,
307,
308,
117
]
},
{
"tb": 96,
"tbk": 1,
"tl": 17,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
318,
319,
320,
18,
22
]
},
{
"tb": 32,
"tbk": 1,
"tl": 6151,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
42,
43,
44,
321,
322,
323
]
},
{
"tb": 8,
"tbk": 1,
"tl": 184,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
47,
324,
325,
326,
327,
328,
329,
330,
331
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1906,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
216,
217,
218,
219,
332,
221,
222
]
},
{
"tb": 128,
"tbk": 1,
"tl": 3523,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
333,
334,
335,
336,
337
]
},
{
"tb": 24,
"tbk": 1,
"tl": 188345,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
295,
338,
339,
340,
341,
342,
343,
344,
345,
18
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4325,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
346,
347,
348,
349,
350,
351,
352,
353
]
},
{
"tb": 24,
"tbk": 1,
"tl": 13,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
295,
338,
339,
340,
341,
342,
343,
354,
355,
17
]
},
{
"tb": 256,
"tbk": 1,
"tl": 662,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
47,
66,
67,
68,
203,
55,
56,
356
]
},
{
"tb": 96,
"tbk": 1,
"tl": 311422,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
175,
176,
177,
357,
289
]
},
{
"tb": 128,
"tbk": 1,
"tl": 243,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
358,
359,
360,
361,
272
]
},
{
"tb": 96,
"tbk": 1,
"tl": 2134,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
362,
363,
364,
365,
202
]
},
{
"tb": 32,
"tbk": 2,
"tl": 1515773,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
366,
367,
368,
369,
370,
371,
372,
373
]
},
{
"tb": 85120,
"tbk": 1653,
"tl": 883447,
"mb": 16960,
"mbk": 8,
"gb": 160,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
275,
374,
375,
376,
377,
378,
379
]
},
{
"tb": 32,
"tbk": 1,
"tl": 7846,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
118,
380,
381,
382,
383,
384,
385,
386
]
},
{
"tb": 2976,
"tbk": 4,
"tl": 19208,
"mb": 2976,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
196,
197,
198,
199,
314,
387,
388,
98
]
},
{
"tb": 320,
"tbk": 2,
"tl": 3030945,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
389,
390,
391,
392,
393
]
},
{
"tb": 7680,
"tbk": 40,
"tl": 15801,
"mb": 768,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
394,
395,
396,
397,
398,
399
]
},
{
"tb": 576,
"tbk": 4,
"tl": 1593,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
216,
217,
218,
219,
400,
401,
402
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4177,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
403,
404,
405,
406,
407,
408,
409,
410
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 1646264,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
148,
149,
150,
251,
411,
412,
413
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 8613719,
"mb": 1024,
"mbk": 1,
"gb": 1024,
"gbk": 1,
"eb": 1024,
"ebk": 1,
"fs": [
414,
415,
416,
417,
418,
419,
420,
421,
422,
423,
424,
425,
426,
427,
428,
429,
430,
431,
432,
433,
434
]
},
{
"tb": 3624,
"tbk": 18,
"tl": 70,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
47,
48,
49,
50,
51,
52,
53,
435,
436,
86
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1989,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
82,
83,
84,
437,
37,
117
]
},
{
"tb": 4032,
"tbk": 4,
"tl": 19790,
"mb": 4032,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
30,
438,
439,
440,
441,
442,
388,
98
]
},
{
"tb": 7024,
"tbk": 42,
"tl": 918,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
47,
48,
49,
50,
51,
52,
53,
54,
55,
204
]
},
{
"tb": 13536,
"tbk": 32,
"tl": 82341,
"mb": 13536,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
30,
31,
32,
33,
34,
443,
444,
337
]
},
{
"tb": 192,
"tbk": 1,
"tl": 10867,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
445,
446,
447,
448,
449,
450,
75,
18,
22
]
},
{
"tb": 160,
"tbk": 1,
"tl": 6147,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
451,
452,
453,
454,
455,
456,
457,
458,
459
]
},
{
"tb": 192,
"tbk": 1,
"tl": 6159,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
460,
461,
462,
463,
308
]
},
{
"tb": 512,
"tbk": 1,
"tl": 16,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
148,
149,
150,
251,
464,
465,
466
]
},
{
"tb": 134217728,
"tbk": 2,
"tl": 11266223,
"mb": 134217728,
"mbk": 2,
"gb": 134217728,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
264,
265,
266,
267,
268,
269,
467
]
},
{
"tb": 16,
"tbk": 1,
"tl": 11,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
290,
291,
319,
320,
18,
22
]
},
{
"tb": 4032,
"tbk": 4,
"tl": 3831,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
30,
438,
439,
440,
441,
468,
272,
273
]
},
{
"tb": 48,
"tbk": 2,
"tl": 3304119,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
469,
470,
471,
472,
473,
474,
475,
476,
477
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2749428,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
128,
129,
143,
144,
145,
478,
18
]
},
{
"tb": 3456,
"tbk": 12,
"tl": 4644,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
479,
480,
481,
482,
483,
484
]
},
{
"tb": 16,
"tbk": 1,
"tl": 178,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
42,
43,
44,
485,
180,
181
]
},
{
"tb": 1968,
"tbk": 2,
"tl": 98,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
486,
487,
488,
489,
490,
491
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2507,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
186,
492,
493,
494,
495,
496,
86,
18
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1640,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
47,
497,
498,
499,
500,
501,
502,
503,
504
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 3669951,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
42,
43,
44,
505,
341,
342,
343,
506
]
},
{
"tb": 72,
"tbk": 1,
"tl": 189288,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
295,
338,
339,
340,
341,
342,
343,
507,
345,
18
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 3415,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
129,
508,
509,
510,
511,
512
]
},
{
"tb": 96,
"tbk": 1,
"tl": 7112,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
175,
176,
177,
513,
98
]
},
{
"tb": 16,
"tbk": 1,
"tl": 661971,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
216,
217,
218,
219,
514,
515,
516
]
},
{
"tb": 96,
"tbk": 1,
"tl": 6173,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
517,
518,
519,
520,
308
]
},
{
"tb": 72,
"tbk": 3,
"tl": 74,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
521,
522,
523,
524,
525,
526,
527,
528,
529
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 150889,
"mb": 1179648,
"mbk": 2,
"gb": 1048576,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
148,
149,
150,
251,
530,
531,
532
]
},
{
"tb": 256,
"tbk": 1,
"tl": 9008,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
82,
83,
84,
533,
534,
535
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 393445,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
148,
149,
150,
251,
252,
253,
536
]
},
{
"tb": 32,
"tbk": 1,
"tl": 8,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
186,
187,
188,
189,
537,
538,
539,
540,
541,
542
]
},
{
"tb": 32,
"tbk": 1,
"tl": 65,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
148,
149,
150,
151,
543,
544,
37
]
},
{
"tb": 256,
"tbk": 4,
"tl": 129995,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
148,
149,
150,
251,
252,
253,
545
]
},
{
"tb": 96,
"tbk": 1,
"tl": 5919,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
175,
176,
177,
357,
232
]
},
{
"tb": 64,
"tbk": 1,
"tl": 5914,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
135,
136,
137,
546,
232
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 188402,
"mb": 2396160,
"mbk": 4,
"gb": 2097152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
30,
31,
32,
33,
282,
547,
548,
549
]
},
{
"tb": 64,
"tbk": 1,
"tl": 6163,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
135,
136,
137,
138,
550
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1515590,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
118,
119,
120,
121,
122,
123,
124,
125,
126,
208
]
},
{
"tb": 384,
"tbk": 1,
"tl": 1515490,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
551,
552,
553,
554,
555,
556,
557,
558,
559
]
},
{
"tb": 6072,
"tbk": 11,
"tl": 4271,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
560,
561,
562,
563,
564,
565
]
},
{
"tb": 24,
"tbk": 1,
"tl": 4478965,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
295,
566,
567,
568,
569,
18,
22
]
},
{
"tb": 480,
"tbk": 4,
"tl": 8989,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
129,
143,
144,
145,
280,
570
]
},
{
"tb": 480,
"tbk": 4,
"tl": 197,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
129,
143,
144,
145,
571,
436
]
},
{
"tb": 24,
"tbk": 1,
"tl": 35311,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
572,
573,
574,
575,
576,
577,
578,
579,
580
]
},
{
"tb": 96,
"tbk": 1,
"tl": 21,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
318,
292,
581,
582,
308,
117
]
},
{
"tb": 217022,
"tbk": 10,
"tl": 7911,
"mb": 114752,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
275,
276,
277,
278,
583
]
},
{
"tb": 32,
"tbk": 1,
"tl": 7786,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
30,
31,
32,
33,
34,
584,
36,
37
]
},
{
"tb": 24320,
"tbk": 123,
"tl": 577310,
"mb": 24320,
"mbk": 123,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
30,
31,
32,
33,
34,
443,
387,
388
]
},
{
"tb": 48,
"tbk": 1,
"tl": 13823,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
585,
586,
18,
22
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 4171,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
309,
310,
311,
312,
587
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4446,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
186,
492,
493,
494,
588,
134,
202,
109
]
},
{
"tb": 33,
"tbk": 1,
"tl": 12,
"mb": 33,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
186,
187,
188,
189,
537,
538,
539,
589,
541,
542
]
},
{
"tb": 512,
"tbk": 1,
"tl": 46,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
590,
591,
592,
593,
594,
595,
596,
597
]
},
{
"tb": 512,
"tbk": 1,
"tl": 9,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
598,
599,
600,
601,
602,
603,
604,
605
]
},
{
"tb": 24,
"tbk": 1,
"tl": 8629308,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
295,
606,
607,
608,
609,
610,
611,
612,
613
]
},
{
"tb": 13536,
"tbk": 32,
"tl": 100835,
"mb": 13536,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
30,
31,
32,
33,
34,
443,
315,
154
]
},
{
"tb": 512,
"tbk": 1,
"tl": 50,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
148,
149,
150,
614,
466,
308,
117
]
},
{
"tb": 16128,
"tbk": 4,
"tl": 524,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
264,
265,
266,
267,
268,
269,
615
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2137,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
295,
338,
339,
340,
341,
342,
343,
354,
616,
202
]
},
{
"tb": 72,
"tbk": 3,
"tl": 565066,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
617,
618,
619,
620,
621,
622,
623,
624,
625,
626,
627,
628
]
},
{
"tb": 16,
"tbk": 1,
"tl": 24756,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
216,
217,
218,
219,
629,
320,
18
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1964021,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
295,
630,
631,
632,
633,
634,
635,
636,
637
]
},
{
"tb": 16,
"tbk": 1,
"tl": 140,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
264,
265,
266,
267,
268,
269,
638
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 1704846,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
148,
149,
150,
251,
411,
412,
639
]
},
{
"tb": 32,
"tbk": 1,
"tl": 55,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
57,
640,
641,
642,
643,
644,
645,
646,
647
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
186,
187,
188,
189,
190,
191,
192,
193,
648,
649
]
},
{
"tb": 16128,
"tbk": 126,
"tl": 105,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
650,
651,
652,
653,
654,
655,
656,
657
]
},
{
"tb": 24,
"tbk": 1,
"tl": 159,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
206,
207,
126,
127,
582,
308
]
},
{
"tb": 80,
"tbk": 1,
"tl": 8629335,
"mb": 80,
"mbk": 1,
"gb": 80,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
658,
659,
660,
661,
662,
663,
664,
665,
666
]
},
{
"tb": 3624,
"tbk": 18,
"tl": 72,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
47,
48,
49,
50,
51,
52,
53,
435,
201,
202
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 8605505,
"mb": 524288,
"mbk": 1,
"gb": 524288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
148,
149,
150,
251,
252,
667,
668
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1899,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
669,
670,
671,
672,
673,
674,
675,
676,
677
]
},
{
"tb": 576,
"tbk": 2,
"tl": 47,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
678,
679,
680,
681,
682,
683,
684,
685,
686
]
},
{
"tb": 96,
"tbk": 1,
"tl": 12,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
687,
688,
689,
690,
691,
692,
693,
694,
695
]
},
{
"tb": 1088,
"tbk": 2,
"tl": 33,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
696,
697,
698,
699,
700,
701
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2749433,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
128,
129,
143,
144,
145,
702,
18
]
},
{
"tb": 16,
"tbk": 1,
"tl": 23449,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
216,
217,
218,
219,
703,
704,
705
]
},
{
"tb": 7024,
"tbk": 42,
"tl": 127,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
47,
48,
49,
50,
51,
52,
53,
435,
272,
273
]
},
{
"tb": 16,
"tbk": 1,
"tl": 27,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
99,
706,
707,
708,
709,
710,
711,
712,
18,
22
]
},
{
"tb": 256,
"tbk": 1,
"tl": 234,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
42,
43,
44,
713,
75,
18
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1624,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
47,
714,
715,
716,
717,
718,
719,
720,
721
]
},
{
"tb": 128,
"tbk": 2,
"tl": 3028770,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
722,
723,
724,
725,
726
]
},
{
"tb": 16128,
"tbk": 4,
"tl": 2380,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
727,
728,
729,
730,
731,
732,
733,
734,
735
]
},
{
"tb": 80,
"tbk": 1,
"tl": 5907,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
148,
149,
150,
736,
737,
308,
117
]
},
{
"tb": 32,
"tbk": 1,
"tl": 12072,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
738,
586,
18,
22
]
},
{
"tb": 72,
"tbk": 1,
"tl": 4479471,
"mb": 72,
"mbk": 1,
"gb": 72,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
739,
740,
741,
742,
743,
744,
745,
746,
747
]
},
{
"tb": 64,
"tbk": 1,
"tl": 14,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
135,
136,
137,
748,
749
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1249,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
82,
83,
84,
750,
402,
751
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 2936884,
"mb": 2097152,
"mbk": 1,
"gb": 2097152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
264,
265,
266,
267,
268,
269,
752
]
},
{
"tb": 288,
"tbk": 1,
"tl": 29906,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
753,
754,
755,
756,
532
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 944410,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
30,
31,
32,
33,
282,
547,
548,
757
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 339803,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
148,
149,
150,
251,
252,
253,
758
]
},
{
"tb": 24,
"tbk": 1,
"tl": 4116251,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
295,
759,
760,
761,
762,
763,
764,
765,
766
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1602,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
129,
143,
144,
145,
767,
134
]
},
{
"tb": 24,
"tbk": 1,
"tl": 3669962,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
295,
338,
339,
340,
341,
342,
343,
506,
768,
769
]
},
{
"tb": 32,
"tbk": 1,
"tl": 65,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
148,
149,
150,
151,
770,
544,
37
]
},
{
"tb": 24,
"tbk": 1,
"tl": 4118092,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
170,
771,
772,
773,
774,
775,
776,
777,
778
]
},
{
"tb": 16128,
"tbk": 126,
"tl": 127,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
148,
149,
150,
151,
779,
388,
98
]
},
{
"tb": 2097152,
"tbk": 2,
"tl": 3923369,
"mb": 2097152,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
82,
83,
84,
780,
781,
782
]
},
{
"tb": 544,
"tbk": 33,
"tl": 66257,
"mb": 512,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
42,
43,
44,
505,
341,
342,
343,
354
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 290598,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
42,
43,
44,
783,
784,
586
]
},
{
"tb": 96,
"tbk": 1,
"tl": 8607422,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
785,
786,
787,
788,
789,
790,
791,
792,
793
]
},
{
"tb": 16,
"tbk": 1,
"tl": 117,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
290,
794,
292,
581,
582,
308
]
},
{
"tb": 3952,
"tbk": 38,
"tl": 572,
"mb": 416,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
25,
26,
795,
796,
797
]
},
{
"tb": 32,
"tbk": 1,
"tl": 6197,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
42,
43,
44,
783,
798,
37
]
},
{
"tb": 16,
"tbk": 1,
"tl": 150,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
82,
83,
84,
271,
126,
127
]
},
{
"tb": 48,
"tbk": 2,
"tl": 3408997,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
617,
618,
619,
620,
621,
622,
623,
624,
799,
800
]
},
{
"tb": 480,
"tbk": 4,
"tl": 201,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
129,
143,
144,
145,
571,
201
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1611,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
47,
801,
802,
803,
804,
805,
806,
807,
808
]
},
{
"tb": 256,
"tbk": 1,
"tl": 625,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
47,
66,
67,
68,
203,
55,
809,
810
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1929,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
30,
438,
439,
440,
441,
468,
201,
202
]
},
{
"tb": 512,
"tbk": 1,
"tl": 46,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
148,
149,
150,
811,
466,
308,
117
]
},
{
"tb": 96,
"tbk": 1,
"tl": 29,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
318,
292,
293,
294,
209,
18
]
},
{
"tb": 3008,
"tbk": 12,
"tl": 1262,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
47,
812,
813,
814,
815,
816,
817,
818,
819
]
},
{
"tb": 96,
"tbk": 1,
"tl": 32,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
175,
176,
177,
820,
466
]
},
{
"tb": 96,
"tbk": 1,
"tl": 27,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
175,
176,
177,
821,
466
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 188338,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
42,
43,
44,
505,
341,
342,
343,
344
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
822,
823,
649,
117
]
},
{
"tb": 40,
"tbk": 1,
"tl": 4085209,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
824,
825,
826,
827,
828,
829,
830,
831,
832
]
},
{
"tb": 4194336,
"tbk": 3,
"tl": 75010,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
148,
149,
150,
251,
464,
833,
834
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2027,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
30,
438,
439,
440,
441,
468,
436,
86
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1255,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
47,
48,
49,
50,
71,
72,
73,
835,
402,
751
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 32466,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
148,
149,
150,
251,
252,
253,
836
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1672,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
175,
176,
177,
837,
86
]
},
{
"tb": 4194336,
"tbk": 3,
"tl": 74830,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
148,
149,
150,
251,
838,
834,
839
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 8629285,
"mb": 1048576,
"mbk": 1,
"gb": 1048576,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
148,
149,
150,
251,
840,
841,
842
]
},
{
"tb": 16,
"tbk": 1,
"tl": 8629417,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
843,
844,
845,
846,
847,
848,
849,
850
]
},
{
"tb": 512,
"tbk": 1,
"tl": 15,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
148,
149,
150,
251,
464,
851,
307
]
},
{
"tb": 64,
"tbk": 1,
"tl": 6167,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
135,
136,
137,
147,
550
]
},
{
"tb": 512,
"tbk": 32,
"tl": 70202,
"mb": 512,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
82,
83,
84,
852,
853,
854
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
855,
856,
857,
858,
859,
860,
861,
862,
863,
37
]
},
{
"tb": 64,
"tbk": 1,
"tl": 311416,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
135,
136,
137,
546,
289
]
},
{
"tb": 48,
"tbk": 1,
"tl": 35298,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
864,
865,
866,
867,
868,
869
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 506,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
129,
143,
144,
145,
571,
272
]
},
{
"tb": 16,
"tbk": 1,
"tl": 8605532,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
870,
871,
872,
873,
874,
875,
876,
877,
878
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 389875,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
879,
880,
881,
882,
883,
884,
885,
886
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 8602882,
"mb": 2097152,
"mbk": 1,
"gb": 2097152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
148,
149,
150,
251,
252,
887,
888
]
},
{
"tb": 2736,
"tbk": 6,
"tl": 2545,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
210,
211,
212,
889,
890,
891
]
},
{
"tb": 8388608,
"tbk": 4,
"tl": 6462790,
"mb": 8388608,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
148,
149,
150,
251,
892,
893,
894
]
},
{
"tb": 8,
"tbk": 1,
"tl": 20,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
47,
895,
896,
897,
898,
899,
900,
901,
902
]
},
{
"tb": 96,
"tbk": 1,
"tl": 175,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
175,
176,
177,
903,
586
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 6907789,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
30,
31,
32,
33,
282,
904,
262,
905
]
},
{
"tb": 512,
"tbk": 1,
"tl": 2687,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
148,
149,
150,
151,
152,
906,
337
]
},
{
"tb": 16128,
"tbk": 4,
"tl": 2998,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
727,
907,
908,
909,
910,
273,
75,
18
]
},
{
"tb": 512,
"tbk": 1,
"tl": 3529,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
148,
149,
150,
151,
152,
911,
337
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
822,
823,
195,
17,
18,
22
]
},
{
"tb": 8,
"tbk": 1,
"tl": 4085175,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
912,
913,
914,
915,
916,
917,
918,
919
]
},
{
"tb": 48,
"tbk": 1,
"tl": 661977,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
216,
217,
218,
219,
920,
515,
516
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 341389,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
82,
83,
84,
921,
922,
18
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1915,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
923,
924,
925,
926,
927,
928,
929,
930,
931
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 1469,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
129,
508,
509,
510,
511,
932
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1704488,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
129,
143,
144,
145,
933,
934
]
},
{
"tb": 9584640,
"tbk": 4,
"tl": 210093,
"mb": 9584640,
"mbk": 4,
"gb": 8388608,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
148,
149,
150,
251,
935,
936,
532
]
},
{
"tb": 32,
"tbk": 1,
"tl": 8605660,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
118,
380,
381,
382,
383,
384,
937,
938
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
186,
187,
188,
189,
190,
191,
192,
193,
194,
649
]
},
{
"tb": 2097152,
"tbk": 131072,
"tl": 88380,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
42,
43,
44,
939,
940,
941
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4452,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
186,
492,
493,
494,
942,
134,
202,
109
]
},
{
"tb": 3624,
"tbk": 18,
"tl": 511,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
47,
48,
49,
50,
51,
52,
53,
54,
55,
809
]
},
{
"tb": 512,
"tbk": 1,
"tl": 189059,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
943,
944,
945,
946,
18
]
},
{
"tb": 16,
"tbk": 1,
"tl": 8607408,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
87,
855,
856,
857,
858,
859,
860,
861,
862,
947,
948
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 206158,
"mb": 2396160,
"mbk": 4,
"gb": 2097152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
30,
31,
32,
33,
282,
949,
950,
532
]
},
{
"tb": 64,
"tbk": 3,
"tl": 109151,
"mb": 64,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
951,
952,
953,
954,
955,
956,
957,
958
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 45,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
148,
149,
150,
251,
252,
253,
959
]
},
{
"tb": 67108864,
"tbk": 1,
"tl": 2438416,
"mb": 67108864,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
42,
43,
44,
960,
961,
962
]
},
{
"tb": 896,
"tbk": 6,
"tl": 7882,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
135,
136,
137,
963,
964
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 4576636,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
30,
31,
32,
33,
282,
547,
548,
965
]
},
{
"tb": 16,
"tbk": 1,
"tl": 105,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
290,
794,
292,
293,
294,
209
]
},
{
"tb": 2304,
"tbk": 12,
"tl": 4742,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
394,
395,
396,
966,
967,
968
]
},
{
"tb": 256,
"tbk": 1,
"tl": 7412,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
148,
149,
150,
151,
969,
970,
37
]
},
{
"tb": 16128,
"tbk": 4,
"tl": 1611,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
264,
265,
266,
267,
268,
269,
971
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 2648,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
30,
972,
973,
974,
975,
976,
977,
978,
979
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 229,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
42,
43,
44,
783,
980,
18
]
},
{
"tb": 24,
"tbk": 1,
"tl": 160,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
295,
981,
982,
983,
984,
985,
986,
987,
988
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2295,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
989,
990,
991,
992,
993,
994,
995,
996,
997
]
},
{
"tb": 48,
"tbk": 2,
"tl": 3030953,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
617,
618,
619,
620,
621,
622,
623,
624,
998,
393
]
},
{
"tb": 111616,
"tbk": 432,
"tl": 213852,
"mb": 16384,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
30,
999,
1000,
1001,
1002,
1003,
1004,
1005,
1006
]
},
{
"tb": 96,
"tbk": 2,
"tl": 3335708,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
295,
1007,
1008,
1009,
1010,
1011,
1012,
1013,
1014
]
},
{
"tb": 80,
"tbk": 1,
"tl": 1514367,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1015,
1016,
1017,
1018,
1019,
1020,
1021,
1022,
1023
]
},
{
"tb": 16,
"tbk": 1,
"tl": 120,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
290,
291,
292,
581,
582,
308
]
},
{
"tb": 1008,
"tbk": 4,
"tl": 4066,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
47,
48,
49,
50,
71,
72,
73,
1024,
1025,
402
]
},
{
"tb": 16128,
"tbk": 4,
"tl": 22251,
"mb": 16128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
148,
149,
150,
1026,
388,
98,
37
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 755311,
"mb": 8388608,
"mbk": 1,
"gb": 8388608,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
148,
149,
150,
251,
1027,
1028,
1029
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4185,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
148,
149,
150,
1030,
1031,
308,
117
]
},
{
"tb": 8,
"tbk": 1,
"tl": 187710,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
47,
48,
49,
50,
51,
52,
53,
1032,
345,
18
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
186,
187,
188,
189,
190,
191,
192,
193,
648,
195
]
},
{
"tb": 216,
"tbk": 1,
"tl": 8605672,
"mb": 216,
"mbk": 1,
"gb": 216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
242,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 20670,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
264,
265,
266,
267,
268,
269,
1041
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 133204,
"mb": 1048576,
"mbk": 1,
"gb": 1048576,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
148,
149,
150,
251,
286,
1042,
1043
]
},
{
"tb": 16,
"tbk": 1,
"tl": 188359,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
42,
43,
44,
45,
625,
626,
627,
628
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1618,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
47,
1044,
1045,
1046,
1047,
1048,
1049,
1050,
1051
]
},
{
"tb": 73880,
"tbk": 39,
"tl": 30119,
"mb": 36992,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
129,
508,
509,
510,
511,
1052
]
},
{
"tb": 512,
"tbk": 1,
"tl": 23,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
42,
43,
44,
1053,
466,
308
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2031,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
196,
197,
198,
199,
200,
436,
86,
18
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 3223,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
30,
1054,
1055,
1056,
1057,
1058,
1059,
1060,
1061
]
},
{
"tb": 32,
"tbk": 2,
"tl": 686754,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
264,
265,
266,
267,
268,
269,
1062
]
},
{
"tb": 32,
"tbk": 1,
"tl": 144,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
115,
1063,
1064,
1065,
1066,
1067
]
},
{
"tb": 6291456,
"tbk": 3,
"tl": 567352,
"mb": 6291456,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
42,
43,
44,
505,
341,
342,
343,
507
]
},
{
"tb": 16128,
"tbk": 4,
"tl": 609,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
148,
149,
150,
251,
464,
1068,
401
]
},
{
"tb": 2016,
"tbk": 4,
"tl": 2963,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
1069,
1070,
1071,
1072,
1073,
1074,
1075,
1076
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1704514,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
617,
618,
619,
620,
621,
622,
623,
624,
46,
21
]
},
{
"tb": 144,
"tbk": 1,
"tl": 188369,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
687,
1077,
1078,
1079,
626,
627,
628,
1080,
345,
18
]
},
{
"tb": 13800,
"tbk": 25,
"tl": 6070,
"mb": 3864,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
560,
561,
562,
1081,
1082,
1083
]
},
{
"tb": 384,
"tbk": 2,
"tl": 93,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1084,
1085,
1086,
1087,
1088,
1089,
1090,
1091,
1092
]
},
{
"tb": 16,
"tbk": 1,
"tl": 8,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
290,
794,
319,
320,
18,
22
]
},
{
"tb": 3840,
"tbk": 16,
"tl": 2412,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
135,
136,
137,
1093,
1094
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2648,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
196,
197,
198,
199,
314,
444,
337,
305
]
},
{
"tb": 32,
"tbk": 2,
"tl": 686746,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
264,
265,
266,
267,
268,
269,
1095
]
}
],
"ftbl": [
"[root]",
"0x5f7c301513a9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5f7c3001c43a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f7c300d1529: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300d1529: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300d1529: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300d1529: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c30138b6a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30136b04: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c3016443a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c300794da: winter_prover::Prover::generate_proof (prover/src/lib.rs:272:43)",
"0x5f7c3001731c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f7c2ff6faea: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c2ff6faea: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c2ff6faea: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5f7c30125c96: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5f7c300064f8: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x5f7c30078ef2: winter_prover::Prover::generate_proof (prover/src/lib.rs:233:27)",
"0x5f7c3008c2de: winter_prover::Prover::prove (prover/src/lib.rs:175:37)",
"0x5f7c30150837: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x5f7c2ffb38b2: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:28)",
"0x5f7c3007d256: winter_prover::Prover::generate_proof (prover/src/lib.rs:417:21)",
"0x5f7c2ffec279: winterfell::main (winterfell/src/main.rs:54:17)",
"0x5f7c3034ca89: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5f7c3034f2cb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5f7c3034efa1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5f7c3034829b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5f7c30341e8d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5f7c3034d41b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5f7c303511d3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5f7c30016ddc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f7c300f0b85: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300f0b85: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300f0b85: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c2ffc1785: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5f7c300cfb40: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x5f7c300c2960: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x5f7c2ff9250b: winter_verifier::verify (verifier/src/lib.rs:109:19)",
"0x5f7c300234dc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f7c300a0df8: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300a0df8: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300a0df8: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5f7c30126b75: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5f7c30126b75: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5f7c30126b75: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5f7c2ff6d8f5: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x5f7c2ffb3973: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:33)",
"0x5f7c3034cbfa: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f7c3034060c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c3034060c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c3034060c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5f7c301272c9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5f7c301272c9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5f7c301272c9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5f7c2ffcbabb: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x5f7c2fffa45d: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x5f7c300c149c: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x5f7c3001b48c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f7c300da4bf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300da4bf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300da4bf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300da4bf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c301390cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c301363c7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c30162a5d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c30078cc2: winter_prover::Prover::generate_proof (prover/src/lib.rs:210:38)",
"0x5f7c300f0636: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300f0636: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300f0636: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c2ff86a78: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x5f7c2ffb3be1: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:135:9)",
"0x5f7c303405bc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5f7c303405bc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5f7c303405bc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5f7c30000bfe: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x5f7c3007c18c: winter_prover::Prover::generate_proof (prover/src/lib.rs:600:25)",
"0x5f7c3034f11b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5f7c3034f051: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5f7c3034845b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5f7c30342b61: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5f7c303432f7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5f7c303528fb: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5f7c300a144b: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5f7c300a144b: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5f7c300a144b: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5f7c30094da3: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x5f7c3007c2fa: winter_prover::Prover::generate_proof (prover/src/lib.rs:608:34)",
"0x5f7c30389f79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5f7c30388709: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5f7c30052b11: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f7c30058488: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f7c3011a79e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f7c3000bda7: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x5f7c30098b9e: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x5f7c300456c1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f7c300587b8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f7c3011766e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f7c30011206: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x5f7c300c30f4: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x5f7c300202fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f7c300d3b49: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300d3b49: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300d3b49: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300d3b49: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c301386aa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30136994: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c30162eda: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c3007ae7c: winter_prover::Prover::generate_proof (prover/src/lib.rs:505:52)",
"0x5f7c2ff9641d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x5f7c3007c207: winter_prover::Prover::generate_proof (prover/src/lib.rs:603:29)",
"0x5f7c300249dc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f7c300f0a45: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300f0a45: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300f0a45: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c30079867: winter_prover::Prover::generate_proof (prover/src/lib.rs:306:39)",
"0x5f7c2ffece26: <winterfell::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (winterfell/src/main.rs:133:9)",
"0x5f7c2ff92330: winter_verifier::verify (verifier/src/lib.rs:98:38)",
"0x5f7c2ffec81f: winterfell::main (winterfell/src/main.rs:71:11)",
"0x5f7c30016b3c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f7c30075002: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c30075002: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c30075002: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5f7c30127af5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5f7c30127af5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5f7c30127af5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5f7c2ff75b95: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x5f7c30076000: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:354:9)",
"0x5f7c30155e06: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:26:25)",
"0x5f7c30315809: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5f7c303142d9: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5f7c302650a2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f7c30267d59: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f7c3026f312: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f7c2ffc365f: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x5f7c2ff93845: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x5f7c3004efd1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f7c300580c8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f7c3011666d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f7c30078968: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:517:13)",
"0x5f7c300056a2: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x5f7c2ff62a3f: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:230:34)",
"0x5f7c3016b016: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5f7c30191397: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5f7c30223830: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f7c30223a99: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f7c30233101: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f7c2ffccc4b: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x5f7c30078a32: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:512:13)",
"0x5f7c300f07c5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300f07c5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300f07c5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c3009f475: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5f7c3008eeea: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x5f7c2ffc9356: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x5f7c300c9397: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x5f7c30025ecc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f7c300e824f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300e824f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300e824f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300e824f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c3012517b: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5f7c301358c7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c3016355d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c300797e7: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:36)",
"0x5f7c2ff6c4f5: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x5f7c3009954c: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x5f7c30147119: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x5f7c30098b26: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x5f7c3009c286: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x5f7c30075bbf: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:369:9)",
"0x5f7c3001aa0c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f7c300f09a5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300f09a5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300f09a5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300798f9: winter_prover::Prover::generate_proof (prover/src/lib.rs:309:32)",
"0x5f7c30038271: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f7c30058a28: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f7c3011932e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f7c300c3e4f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x5f7c30175d75: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x5f7c30175e06: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5f7c2ff8eedf: winter_verifier::perform_verification (verifier/src/lib.rs:228:13)",
"0x5f7c30057a11: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f7c30057df8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f7c3011a41e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f7c300c3ef7: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x5f7c3031461a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f7c3031731c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c3031731c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c3031731c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5f7c302e668c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5f7c302e668c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5f7c302e668c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5f7c2ff8b084: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x5f7c2ff8adce: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x5f7c300062cb: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x5f7c30022a5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f7c300f0865: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300f0865: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300f0865: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c2fff9a9f: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x5f7c2ff9377b: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x5f7c2ff964b0: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x5f7c2ffcb882: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x5f7c300ba2c4: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x5f7c301d377d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x5f7c2ff6cd37: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x5f7c2ff75b7f: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x5f7c2ffb2a9c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:51:13)",
"0x5f7c3007d1a5: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:21)",
"0x5f7c3009271b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5f7c30091f8d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5f7c3020568a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5f7c301f2f6b: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5f7c301fd199: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5f7c301f7406: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5f7c300a1501: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300a1501: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300a1501: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5f7c30125c70: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5f7c300bb1a0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x5f7c2ff92038: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:216:32)",
"0x5f7c30171e4f: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5f7c300e1b8d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300e1b8d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300e1b8d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300e1b8d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c3013829a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30135384: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c30163b4a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c300c25b3: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x5f7c300773c4: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:541:17)",
"0x5f7c2ff8dfc9: winter_verifier::perform_verification (verifier/src/lib.rs:266:61)",
"0x5f7c300d6ebf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300d6ebf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300d6ebf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300d6ebf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c30139d4d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30136d97: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c30163ecd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c2ffec0e3: winterfell::main (winterfell/src/main.rs:38:27)",
"0x5f7c3007ce20: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:13)",
"0x5f7c30018d3c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f7c300d458f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300d458f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300d458f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300d458f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c301240c6: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5f7c30136bb5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c301642fd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c2ff923a8: winter_verifier::verify (verifier/src/lib.rs:102:24)",
"0x5f7c3005aad7: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5f7c2fff4e1f: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x5f7c301c4328: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x5f7c2ff84d08: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x5f7c30023cbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f7c300f0c25: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300f0c25: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300f0c25: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c3007987e: winter_prover::Prover::generate_proof (prover/src/lib.rs:307:44)",
"0x5f7c2ffb69d6: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x5f7c2ffb5e23: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x5f7c3008a6de: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:669:26)",
"0x5f7c2ff6c388: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x5f7c30387adc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x5f7c30386d6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x5f7c30386ae8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x5f7c30386ae8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x5f7c30386124: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5f7c30383d43: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x5f7c300a60c2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x5f7c2ff75cba: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x5f7c2fffc3b0: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x5f7c300010ad: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x5f7c300b581f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x5f7c30388ea0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f7c303890d9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f7c303893d2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f7c3038a159: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x5f7c2ff6e32d: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x5f7c2fff87cc: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x5f7c2ff8e4f7: winter_verifier::perform_verification (verifier/src/lib.rs:298:27)",
"0x5f7c3005aa47: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5f7c2ffb54bd: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x5f7c3008bea8: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:716:26)",
"0x5f7c3007a921: winter_prover::Prover::generate_proof (prover/src/lib.rs:482:37)",
"0x5f7c2fff5eb7: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x5f7c2ff82eae: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x5f7c2ff86a1c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x5f7c300051a6: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x5f7c2fff2235: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x5f7c2ffed237: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:176:13)",
"0x5f7c30075b62: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:371:13)",
"0x5f7c30067acf: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:41:22)",
"0x5f7c2ffb2b39: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:36)",
"0x5f7c300197ac: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f7c300d72df: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300d72df: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300d72df: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300d72df: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c301394bd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30135d05: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c301627cd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c2ff938d5: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x5f7c300bce63: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x5f7c300c2ac4: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x5f7c2ff9fca0: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x5f7c2ff8eabc: winter_verifier::perform_verification (verifier/src/lib.rs:317:25)",
"0x5f7c2ff925da: winter_verifier::verify (verifier/src/lib.rs:111:21)",
"0x5f7c3034d0e0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f7c30341659: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f7c30340e41: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f7c30340940: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x5f7c301d35dd: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x5f7c2ffcaa4c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x5f7c2ffc9547: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x5f7c300c2d44: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x5f7c2ff9fcb7: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x5f7c2ffed20b: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:175:9)",
"0x5f7c300cb508: winter_prover::trace::Trace::validate (src/trace/mod.rs:123:26)",
"0x5f7c3007d568: winter_prover::Prover::generate_proof (prover/src/lib.rs:379:17)",
"0x5f7c300ca121: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x5f7c3009e843: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x5f7c30151822: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x5f7c300e73fd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300e73fd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300e73fd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300e73fd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c30138e3a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c301366d4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c30162d0a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c300bcb91: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x5f7c300bb1be: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x5f7c30035601: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f7c30058278: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f7c30116bfb: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f7c2ffc63c9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x5f7c300bccfd: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x5f7c300efa12: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300efa12: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300efa12: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5f7c30126d15: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5f7c30126d15: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5f7c30126d15: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5f7c2ff802c5: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x5f7c30079e13: winter_prover::Prover::generate_proof (prover/src/lib.rs:423:33)",
"0x5f7c300e0a2f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300e0a2f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300e0a2f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300e0a2f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c30139b0d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30134ba7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c301629ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c2ffa0df7: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x5f7c300ee0d6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5f7c300062e2: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x5f7c2ff8e636: winter_verifier::perform_verification (verifier/src/lib.rs:305:9)",
"0x5f7c30077340: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:543:13)",
"0x5f7c30055291: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f7c30058a88: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f7c3011890b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f7c2fffa0ea: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x5f7c3004dc11: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f7c30057dc8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f7c3011969e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f7c2ff938ec: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x5f7c300e40ef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300e40ef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300e40ef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300e40ef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c3013843d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30134615: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c3016312d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c2ff6cd28: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x5f7c30389108: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x5f7c303894ca: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x5f7c303894ca: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x5f7c3038926e: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x5f7c3038926e: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x5f7c3038935d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x5f7c300754b4: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300754b4: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300754b4: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5f7c30125be6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5f7c2ffed09d: <winterfell::WorkAir as winter_air::air::Air>::new (winterfell/src/main.rs:151:23)",
"0x5f7c2ff9303b: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:102:85)",
"0x5f7c3016fa5e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5f7c3000de25: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x5f7c30011030: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x5f7c30057031: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f7c30058008: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f7c301168ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f7c30069e8d: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:175:17)",
"0x5f7c3006833f: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:55:17)",
"0x5f7c3034f62b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5f7c3034eef1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5f7c3034837b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5f7c3034503e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5f7c303469dc: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5f7c3034554a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5f7c300b5911: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x5f7c301d3b63: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x5f7c301dc5d9: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x5f7c300ead1f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300ead1f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300ead1f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300ead1f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c3013855d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30135115: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c3016397d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c301d2d19: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x5f7c2ffb830f: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x5f7c2ffb7506: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x5f7c301552e8: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:651:17)",
"0x5f7c2ff3ad82: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5f7c2ff3ad82: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f7c2ff3ad82: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c2ff3ad82: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c2ff3ad82: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c2ff3ad82: std::io::buffered::bufwriter::BufWriter<W>::with_capacity (io/buffered/bufwriter.rs:115:33)",
"0x5f7c2ff3ad82: std::io::buffered::linewriter::LineWriter<W>::with_capacity (io/buffered/linewriter.rs:109:29)",
"0x5f7c2ff3ad82: std::io::buffered::linewriter::LineWriter<W>::new (io/buffered/linewriter.rs:89:9)",
"0x5f7c2ff3ad82: std::io::stdio::stdout::{{closure}} (src/io/stdio.rs:618:62)",
"0x5f7c2ff3ad82: std::sync::once_lock::OnceLock<T>::get_or_init::{{closure}} (src/sync/once_lock.rs:250:50)",
"0x5f7c2ff3ad82: std::sync::once_lock::OnceLock<T>::initialize::{{closure}} (src/sync/once_lock.rs:376:19)",
"0x5f7c2ff3ad82: std::sync::once::Once::call_once_force::{{closure}} (src/sync/once.rs:208:40)",
"0x5f7c2ff3ad82: std::sys_common::once::futex::Once::call (sys_common/once/futex.rs:124:21)",
"0x5f7c2ff39eca: std::sync::once::Once::call_once_force (src/sync/once.rs:208:9)",
"0x5f7c2ff39eca: std::sync::once_lock::OnceLock<T>::initialize (src/sync/once_lock.rs:375:9)",
"0x5f7c303a41c5: std::sync::once_lock::OnceLock<T>::get_or_try_init (src/sync/once_lock.rs:298:9)",
"0x5f7c303a41c5: std::sync::once_lock::OnceLock<T>::get_or_init (src/sync/once_lock.rs:250:15)",
"0x5f7c303a41c5: std::io::stdio::stdout (src/io/stdio.rs:618:14)",
"0x5f7c303a41c5: std::io::stdio::print_to (src/io/stdio.rs:1020:21)",
"0x5f7c303a41c5: std::io::stdio::_print (src/io/stdio.rs:1097:5)",
"0x5f7c2ffec037: winterfell::main (winterfell/src/main.rs:36:5)",
"0x5f7c2fff9dac: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x5f7c30094b81: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x5f7c300c375e: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x5f7c2ffc1c84: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c2ffc1c84: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c2ffc1c84: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5f7c30125c46: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5f7c3000db2e: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x5f7c2ffcacc7: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x5f7c2ffc5f66: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x5f7c3033fc59: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5f7c3033cc0c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f7c30339da6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c30339da6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c30339da6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c30000b58: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x5f7c3001b1ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f7c300dd612: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300dd612: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300dd612: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300dd612: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5f7c30138d9a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30134474: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c301518da: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c300c0d57: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x5f7c3003c791: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f7c300580f8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f7c30118d9e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f7c2ff8f1eb: winter_verifier::perform_verification (verifier/src/lib.rs:184:9)",
"0x5f7c2fff49ee: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x5f7c2ff9b3b7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x5f7c2ff8ea15: winter_verifier::perform_verification (verifier/src/lib.rs:311:25)",
"0x5f7c2ff7d24c: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x5f7c2fff9a3c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x5f7c3001eb6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f7c300d818f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300d818f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300d818f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300d818f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c3013953d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30136345: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c30163dcd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c2ffb41b1: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x5f7c3007ce7b: winter_prover::Prover::generate_proof (prover/src/lib.rs:450:13)",
"0x5f7c3034f47b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5f7c3034ee41: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5f7c3034853b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5f7c30342c31: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5f7c303432b7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5f7c3035294b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5f7c30175d62: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x5f7c30092a7b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5f7c30091e2d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5f7c3020577a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5f7c301e0299: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5f7c30148bb8: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5f7c30147185: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x5f7c3026bf26: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c3026bf26: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c3026bf26: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c2ffc7dac: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x5f7c30094d3a: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x5f7c300dfebd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300dfebd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300dfebd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300dfebd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c3013908a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30134534: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c3016372a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c300c24fb: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x5f7c300efd73: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5f7c2ff658cd: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x5f7c2ff80238: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x5f7c303126f0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f7c30312929: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f7c30312122: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f7c2ffcb17c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x5f7c2ffc331d: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x5f7c300112a9: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x5f7c2ffb05e4: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:156:33)",
"0x5f7c2ffb3e25: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:128:17)",
"0x5f7c301aec5e: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5f7c3003ea21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f7c30058038: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f7c3011b54e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f7c2ff8f3b2: winter_verifier::perform_verification (verifier/src/lib.rs:179:9)",
"0x5f7c3001a22c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f7c300d4bc9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300d4bc9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300d4bc9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300d4bc9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c30138ffa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30136c34: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c30163c1a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c2ff824b2: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x5f7c300082c3: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x5f7c2fffdaeb: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x5f7c30002bb6: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x5f7c30002e82: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x5f7c30002b1c: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x5f7c3007baf2: winter_prover::Prover::generate_proof (prover/src/lib.rs:571:9)",
"0x5f7c2ff86adb: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x5f7c302709d9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5f7c302709d9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5f7c302709d9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5f7c3009109f: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x5f7c2ff6fa26: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5f7c300c3704: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5f7c2ff6ef63: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x5f7c300c3c05: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5f7c30008212: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x5f7c300771a5: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:547:13)",
"0x5f7c2fff9249: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x5f7c2fffa729: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x5f7c2fffd9a6: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x5f7c2ff8d8e5: winter_verifier::perform_verification (verifier/src/lib.rs:185:13)",
"0x5f7c30017d8c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f7c300e0e4f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300e0e4f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300e0e4f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300e0e4f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c301383bd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30135e77: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c30162e7d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c30067bbd: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:51:26)",
"0x5f7c300937fb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5f7c30091a0d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5f7c30205c1a: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5f7c301e4c6d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5f7c301e7603: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5f7c2fff8227: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5f7c300f03b5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300f03b5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300f03b5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300798bd: winter_prover::Prover::generate_proof (prover/src/lib.rs:308:37)",
"0x5f7c300048c8: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x5f7c2fffa2a7: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x5f7c3001c6cc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f7c300de43f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300de43f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300de43f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300de43f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c3013903d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30133f65: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c3016440d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c3007adbf: winter_prover::Prover::generate_proof (prover/src/lib.rs:501:51)",
"0x5f7c301562bb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:64:9)",
"0x5f7c2ff8efcc: winter_verifier::perform_verification (verifier/src/lib.rs:225:43)",
"0x5f7c3034000a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x5f7c300cf987: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x5f7c300a6337: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x5f7c3007b01d: winter_prover::Prover::generate_proof (prover/src/lib.rs:524:9)",
"0x5f7c30000e14: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x5f7c2ffc3517: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x5f7c3009108a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x5f7c300dc3af: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300dc3af: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300dc3af: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300dc3af: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c301396bd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30136e35: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c3016351d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c2ff9b4ab: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x5f7c300d74ef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300d74ef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300d74ef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300d74ef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c30139d2d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c301345e5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c3016420d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c2ff9fff2: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x5f7c300eb35f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300eb35f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300eb35f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300eb35f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c3013888d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30136885: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c30163bcd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c300cafd2: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:140:32)",
"0x5f7c2ff9b6df: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x5f7c300b5bad: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x5f7c2ff936db: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x5f7c3002005c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f7c300a0f28: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300a0f28: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300a0f28: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5f7c301277b5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5f7c301277b5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5f7c301277b5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5f7c2ff6d8e2: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x5f7c2ff6d750: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5f7c30126de5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5f7c30126de5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5f7c30126de5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5f7c300cb995: winter_prover::trace::Trace::validate (src/trace/mod.rs:179:13)",
"0x5f7c300d417f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300d417f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300d417f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300d417f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c30138cbd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30135cc7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c301634fd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c30158a90: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x5f7c30155f7c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:40:30)",
"0x5f7c3008babc: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:701:36)",
"0x5f7c300d7b3f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300d7b3f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300d7b3f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300d7b3f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c3012302e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5f7c30137025: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c3016409d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c2ffec74b: winterfell::main (winterfell/src/main.rs:65:26)",
"0x5f7c2ff8ad9a: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x5f7c2ff921dd: winter_verifier::verify (verifier/src/lib.rs:96:32)",
"0x5f7c300db94f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300db94f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300db94f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300db94f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c30139a3d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30135e05: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c30163f4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c301d979f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x5f7c300175bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f7c300daaef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300daaef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300daaef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300daaef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c3013849d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30135327: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c30163e7d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c2ffebedc: winterfell::main (winterfell/src/main.rs:28:26)",
"0x5f7c301c34e9: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x5f7c2ffc137b: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x5f7c300241fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f7c300dde39: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300dde39: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300dde39: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300dde39: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c3013892a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c301357e4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c3016300a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c2ff8dc5f: winter_verifier::perform_verification (verifier/src/lib.rs:218:40)",
"0x5f7c3001a76c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f7c300debe2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300debe2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300debe2: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300debe2: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5f7c30139b6d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30134c25: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c301628bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c30098a5a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x5f7c3001cc0c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f7c300d04a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300d04a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300d04a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300d04a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c301388da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c301354e4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c3016338a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c30066fd8: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:83:9)",
"0x5f7c3009406b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5f7c3009127d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5f7c302052da: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5f7c301dfff9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5f7c30149a65: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5f7c2ffc0598: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5f7c3007ce60: winter_prover::Prover::generate_proof (prover/src/lib.rs:449:13)",
"0x5f7c300ca54d: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:243:25)",
"0x5f7c2ffecd84: winterfell::build_do_work_trace (winterfell/src/main.rs:91:5)",
"0x5f7c3008c5fb: winterfell::main::{{closure}} (winterfell/src/main.rs:30:23)",
"0x5f7c300ef318: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300ef318: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300ef318: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5f7c301271f5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5f7c301271f5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5f7c301271f5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5f7c3007ae93: winter_prover::Prover::generate_proof (prover/src/lib.rs:510:39)",
"0x5f7c30000c19: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x5f7c300eb9cd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300eb9cd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300eb9cd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300eb9cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c30138c6a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30135fe4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c3016385a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c300c266b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x5f7c3003b8c1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f7c30058308: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f7c3011911d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f7c2ff82af2: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x5f7c301aeab5: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5f7c3001d68c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f7c300d36ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300d36ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300d36ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300d36ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c3013826d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30136a45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c3016289d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c301d3ab4: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x5f7c301dbdd9: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x5f7c2ff8e1ac: winter_verifier::perform_verification (verifier/src/lib.rs:275:24)",
"0x5f7c300a649b: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x5f7c30022f9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f7c300d88cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300d88cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300d88cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300d88cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c30123b3e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5f7c30136405: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c3016429d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c2ff954f7: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x5f7c2ff6e461: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x5f7c3000502f: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x5f7c301d2df4: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x5f7c2ff8ec03: winter_verifier::perform_verification (verifier/src/lib.rs:323:5)",
"0x5f7c2ff84a93: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x5f7c3003a501: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f7c300589f8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f7c301163fe: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f7c2fffdc59: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x5f7c2ffb5572: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x5f7c301c3b8b: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x5f7c300e6aaf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300e6aaf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300e6aaf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300e6aaf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c30139e6d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30136915: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c301635cd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c2ff62788: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:228:23)",
"0x5f7c2ffc3999: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x5f7c2ff64036: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5f7c30154c38: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:300:57)",
"0x5f7c2ff6f126: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x5f7c300d27e9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300d27e9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300d27e9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300d27e9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c3013833a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30134394: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c3016412a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c30089f02: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:640:42)",
"0x5f7c3000dd16: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x5f7c30158afa: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x5f7c3016f798: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5f7c2fff4104: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x5f7c300ee096: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5f7c300a5cae: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x5f7c3001de5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f7c300d8b19: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300d8b19: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300d8b19: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300d8b19: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c30138c9a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30137074: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c3016318a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c3000623b: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x5f7c2ffed320: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:177:13)",
"0x5f7c30344f2e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5f7c303463f0: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5f7c30345be8: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5f7c300c3cf1: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x5f7c30067018: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:83:31)",
"0x5f7c3016d79f: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5f7c300e204d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300e204d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300e204d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300e204d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c30138dca: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30135dd4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c301631ba: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c300c27db: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x5f7c300c1ce0: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x5f7c2ff8e7a8: winter_verifier::perform_verification (verifier/src/lib.rs:306:42)",
"0x5f7c2ff9b6fe: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x5f7c3034f9d9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c3034f9d9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c3034f9d9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c3034f9d9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5f7c3034fe1e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c3034fde7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c3034ffbe: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c303524b9: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x5f7c2ff9c2d7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x5f7c2ff9c325: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x5f7c301c113c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x5f7c2ff8ae0c: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x5f7c3001d3ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f7c300dcecf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300dcecf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300dcecf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300dcecf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c3013987d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c301350b5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c301629cd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c3008a07b: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:648:34)",
"0x5f7c2ff832ce: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x5f7c2ff80ac4: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x5f7c301d2d8d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x5f7c2ff626e8: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:227:28)",
"0x5f7c30094dba: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x5f7c2ff831bf: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x5f7c2ff84f9d: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x5f7c300cb1a0: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:140:51)",
"0x5f7c3016c466: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5f7c2ff6afc1: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5f7c300d6ab3: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300d6ab3: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300d6ab3: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300d6ab3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c30138bc4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c3013528a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c30163644: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c2ffebd51: winterfell::main (winterfell/src/main.rs:22:32)",
"0x5f7c2ff9feb1: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x5f7c2ff93f56: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x5f7c30170ea6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5f7c30195fad: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5f7c303889ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f7c3038a04c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c3038a04c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c3038a04c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5f7c30387c7c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5f7c30387c7c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5f7c30387c7c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5f7c30383ece: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x5f7c300c2360: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x5f7c3007074a: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x5f7c30154842: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:503:32)",
"0x5f7c30171db6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5f7c3018f92a: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5f7c30159e17: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5f7c30164a12: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5f7c3002616c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f7c300e8edf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300e8edf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300e8edf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300e8edf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c3013926d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30134c55: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c301459ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c30079023: winter_prover::Prover::generate_proof (prover/src/lib.rs:248:41)",
"0x5f7c300e9d0f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300e9d0f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300e9d0f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300e9d0f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c3013860d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c301344e5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c3016333d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c2ff837f7: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x5f7c2ffc1428: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x5f7c30079122: winter_prover::Prover::generate_proof (prover/src/lib.rs:262:22)",
"0x5f7c301e01d9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5f7c3014a14b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5f7c2ffc06eb: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5f7c2ff82440: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x5f7c3016ada6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5f7c2ff6ab11: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5f7c300d3023: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300d3023: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300d3023: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300d3023: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c3013999d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30136535: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c30163fcd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c300796cb: winter_prover::Prover::generate_proof (prover/src/lib.rs:293:23)",
"0x5f7c300a65b3: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x5f7c2ffb5d9a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x5f7c30079501: winter_prover::Prover::generate_proof (prover/src/lib.rs:274:13)",
"0x5f7c2ffc5b8e: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x5f7c300f0ae5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300f0ae5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300f0ae5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c2fffc489: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x5f7c2ffc631c: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x5f7c300ea4e9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300ea4e9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300ea4e9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300ea4e9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c301389ca: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30135bb4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c30162eaa: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c30089fbf: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:644:36)",
"0x5f7c2ffb058a: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:155:31)",
"0x5f7c301c3b79: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x5f7c3007b6a8: winter_prover::Prover::generate_proof (prover/src/lib.rs:558:13)",
"0x5f7c3001802c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f7c300da8f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300da8f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300da8f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300da8f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c30139e2a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30135924: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c30162a1a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c2ff8dba2: winter_verifier::perform_verification (verifier/src/lib.rs:214:41)",
"0x5f7c2ffc7eb4: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x5f7c2ff8a41f: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x5f7c2ff88a15: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x5f7c3005d17f: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x5f7c2fffd92d: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x5f7c30154f26: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:226:17)",
"0x5f7c3016f18e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5f7c2ff75106: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x5f7c2ffb1ac9: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:290:18)",
"0x5f7c2ffb088e: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:173:30)",
"0x5f7c2ffc307a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x5f7c30030bf1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5f7c300583f8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5f7c3011ac44: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5f7c3007d275: winter_prover::Prover::generate_proof (prover/src/lib.rs:418:17)",
"0x5f7c2ff8b29f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x5f7c30006de3: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x5f7c301c1462: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x5f7c2fffd98f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x5f7c300e3abf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300e3abf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300e3abf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300e3abf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c30138a4d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30135c35: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c30163e3d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c2ff621cf: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:283:9)",
"0x5f7c30002d42: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x5f7c2ffba081: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x5f7c2ffb8e86: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5f7c3008a11f: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:655:31)",
"0x5f7c301514d2: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x5f7c2ff8ac98: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x5f7c2ffb5e5c: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x5f7c30341e2d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5f7c3034d738: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5f7c30351097: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5f7c30011e3c: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x5f7c300c2f27: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x5f7c300b5892: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x5f7c300dcaf4: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300dcaf4: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300dcaf4: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300dcaf4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5f7c30139e9a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30135d54: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c301640ca: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c2ffc5e8d: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x5f7c3007a4c0: winter_prover::Prover::generate_proof (prover/src/lib.rs:452:35)",
"0x5f7c300d4399: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300d4399: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300d4399: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300d4399: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c3013947a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30134fb4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c30163a2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c30078d7f: winter_prover::Prover::generate_proof (prover/src/lib.rs:214:39)",
"0x5f7c3001951a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f7c300d1939: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300d1939: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300d1939: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300d1939: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c3013995a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30135864: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c30163b7a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c2ff9640e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x5f7c30069d4a: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:170:36)",
"0x5f7c300d568a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300d568a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300d568a: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300d568a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5f7c301384bd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30136a0a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c301c0f3d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c2fffa233: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x5f7c300d1f7f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300d1f7f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300d1f7f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300d1f7f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c3013905d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30134f65: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c3016278d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c2ff823a8: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x5f7c3001f0ac: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f7c300d069f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300d069f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300d069f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300d069f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c301256f5: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5f7c301364fa: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c30162b2d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c2ff89891: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x5f7c303402b6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x5f7c301d36ba: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x5f7c3000db6f: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x5f7c30151c4a: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x5f7c301c5697: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x5f7c300a8879: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x5f7c2ff987be: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x5f7c2ff8eb34: winter_verifier::perform_verification (verifier/src/lib.rs:319:28)",
"0x5f7c2ff80314: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x5f7c300de85f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300de85f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300de85f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300de85f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c3013960d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30134275: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c30162c0d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c30078ea3: winter_prover::Prover::generate_proof (prover/src/lib.rs:222:20)",
"0x5f7c300a60e5: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x5f7c30006ff3: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x5f7c30008200: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x5f7c300d957d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300d957d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300d957d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300d957d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c30138d6a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30134d24: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c301632fa: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c300c2723: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x5f7c3000d3a5: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x5f7c2ff9b21f: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x5f7c300e1e84: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300e1e84: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300e1e84: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300e1e84: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5f7c301385ca: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30136eb4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c30163c4a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c2ffc946e: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x5f7c2ff6088c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x5f7c30153798: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:216:31)",
"0x5f7c30171d26: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5f7c3018fbc0: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5f7c3015df56: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5f7c301658e6: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5f7c300b5b5c: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x5f7c300ece5f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300ece5f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300ece5f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300ece5f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5f7c30138ebd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30134815: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c30163aed: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c301d3c4a: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x5f7c2ff6d3e2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c2ff6d3e2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c2ff6d3e2: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5f7c2ff8024b: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x5f7c301fe54d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x5f7c30204a15: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x5f7c301f785e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x5f7c30023f5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5f7c300e921b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5f7c300e921b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5f7c300e921b: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5f7c300e921b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5f7c30139a9d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5f7c30136945: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5f7c3005a15d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5f7c3009a608: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x5f7c301c7d84: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x5f7c301d394d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x5f7c2ff6089d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)"
]
}