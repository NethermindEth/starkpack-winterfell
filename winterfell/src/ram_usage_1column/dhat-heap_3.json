{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell",
"pid": 27755,
"tg": 1422291,
"te": 1451304,
"pps": [
{
"tb": 512,
"tbk": 1,
"tl": 44,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10
]
},
{
"tb": 1440,
"tbk": 12,
"tl": 2525,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
13,
14,
15,
16,
17
]
},
{
"tb": 256,
"tbk": 1,
"tl": 554465,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
22,
23,
24,
25,
26,
27
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1147,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38
]
},
{
"tb": 1048576,
"tbk": 8,
"tl": 4255328,
"mb": 1048576,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
39,
40,
41,
42,
43,
44,
45,
46,
47
]
},
{
"tb": 192,
"tbk": 1,
"tl": 4508,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
48,
49,
50,
51,
52
]
},
{
"tb": 24,
"tbk": 1,
"tl": 887458,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
53,
54,
55,
56,
57,
58,
59
]
},
{
"tb": 4096,
"tbk": 32,
"tl": 58180,
"mb": 4096,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
39,
40,
41,
60,
61,
62,
63,
64,
65
]
},
{
"tb": 2944,
"tbk": 3,
"tl": 2293,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
66,
67,
68,
69,
70,
71,
72,
73
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1944,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
75,
76,
77,
78,
79,
80,
81,
58
]
},
{
"tb": 8832,
"tbk": 16,
"tl": 3264,
"mb": 2760,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
82,
83,
84,
85,
86,
87
]
},
{
"tb": 192,
"tbk": 1,
"tl": 1445261,
"mb": 192,
"mbk": 1,
"gb": 192,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
88,
89,
90,
91,
92,
93,
94,
95,
96
]
},
{
"tb": 256,
"tbk": 1,
"tl": 61,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
100,
101,
102,
103
]
},
{
"tb": 4968,
"tbk": 9,
"tl": 2907,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
82,
83,
84,
104,
105,
106
]
},
{
"tb": 1968,
"tbk": 2,
"tl": 56,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
107,
108,
109,
110,
111,
112
]
},
{
"tb": 512,
"tbk": 1,
"tl": 73,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
113,
114,
52,
115
]
},
{
"tb": 2920,
"tbk": 15,
"tl": 60,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
30,
31,
32,
116,
117,
118,
119,
120,
81
]
},
{
"tb": 24,
"tbk": 1,
"tl": 887449,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
88,
121,
122,
123,
124,
58,
59
]
},
{
"tb": 288,
"tbk": 1,
"tl": 8879,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
125,
126,
127,
128,
129
]
},
{
"tb": 192,
"tbk": 2,
"tl": 161,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
130,
131,
132,
133,
134
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1914,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
135,
136,
137,
138,
139,
140,
141,
142,
143
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1431499,
"mb": 256,
"mbk": 1,
"gb": 256,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
144,
145,
146,
147,
148,
149,
150
]
},
{
"tb": 257,
"tbk": 1,
"tl": 56,
"mb": 257,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
75,
151,
152,
153,
154,
155,
156,
157,
158,
159
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 165974,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
160,
161,
162,
163
]
},
{
"tb": 32,
"tbk": 1,
"tl": 18,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
100,
164,
102,
103
]
},
{
"tb": 256,
"tbk": 1,
"tl": 532,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
165,
166,
167,
168,
169,
170,
171
]
},
{
"tb": 480,
"tbk": 4,
"tl": 6224,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
172,
173,
174,
175,
176,
177
]
},
{
"tb": 2880,
"tbk": 12,
"tl": 1757,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
130,
131,
132,
178,
179
]
},
{
"tb": 128,
"tbk": 1,
"tl": 130,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
39,
40,
41,
42,
43,
44,
180,
181,
182
]
},
{
"tb": 96,
"tbk": 1,
"tl": 4525,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
183,
184,
185,
186,
52
]
},
{
"tb": 524320,
"tbk": 3,
"tl": 9332,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
160,
187,
188,
189
]
},
{
"tb": 149504,
"tbk": 3,
"tl": 16434,
"mb": 131072,
"mbk": 1,
"gb": 131072,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
160,
190,
191,
192
]
},
{
"tb": 32,
"tbk": 1,
"tl": 761,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
193,
194,
195,
58,
59
]
},
{
"tb": 128,
"tbk": 1,
"tl": 1553,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
196,
197,
198,
199,
200,
201,
202
]
},
{
"tb": 48,
"tbk": 2,
"tl": 1154080,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
203,
204,
205,
206,
207,
208,
209,
210,
211,
212
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 899705,
"mb": 2097152,
"mbk": 1,
"gb": 2097152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
66,
213,
214,
215,
216,
217,
218,
219
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
193,
220,
221,
115
]
},
{
"tb": 32,
"tbk": 1,
"tl": 108,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
193,
220,
222,
223,
224,
225,
226
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 1431377,
"mb": 65536,
"mbk": 1,
"gb": 65536,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
160,
227,
228,
229
]
},
{
"tb": 30386,
"tbk": 27,
"tl": 17047,
"mb": 15232,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
172,
230,
231,
232,
233,
234
]
},
{
"tb": 64,
"tbk": 1,
"tl": 35843,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
130,
131,
132,
235,
236
]
},
{
"tb": 24,
"tbk": 1,
"tl": 112,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
193,
237,
238,
26,
239,
240,
52
]
},
{
"tb": 32,
"tbk": 1,
"tl": 294369,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
74,
172,
173,
174,
175,
241,
58
]
},
{
"tb": 64,
"tbk": 1,
"tl": 4513,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
130,
131,
132,
242,
243
]
},
{
"tb": 13472,
"tbk": 85,
"tl": 289674,
"mb": 13472,
"mbk": 85,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
66,
213,
214,
215,
244,
245,
246,
247
]
},
{
"tb": 24,
"tbk": 1,
"tl": 14308,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
248,
249,
250,
251,
252,
253,
254,
255,
256
]
},
{
"tb": 96,
"tbk": 1,
"tl": 3530,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
172,
257,
258,
259,
260,
261
]
},
{
"tb": 224,
"tbk": 1,
"tl": 5121,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
262,
263,
264,
265,
266
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 28507,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
39,
40,
41,
42,
43,
44,
267,
268,
195
]
},
{
"tb": 1920,
"tbk": 10,
"tl": 3415,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
269,
270,
271,
272,
273,
274
]
},
{
"tb": 8,
"tbk": 1,
"tl": 19,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
275,
276,
277,
278,
279,
280,
281,
282
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
75,
151,
152,
153,
283,
284,
285,
286,
287,
288
]
},
{
"tb": 256,
"tbk": 2,
"tl": 124826,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
289,
290,
291,
292,
293,
294,
295
]
},
{
"tb": 320,
"tbk": 2,
"tl": 1108699,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
296,
297,
298,
299,
300
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2675,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
100,
301,
302,
303
]
},
{
"tb": 24,
"tbk": 1,
"tl": 9,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
88,
304,
305,
306,
307,
308,
309,
310,
311,
312
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1431688,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
313,
314,
315,
316,
317,
318,
319,
320
]
},
{
"tb": 8388608,
"tbk": 65536,
"tl": 69365,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
39,
40,
41,
60,
61,
62,
321,
322,
323
]
},
{
"tb": 48,
"tbk": 2,
"tl": 106,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
193,
324,
325,
326,
327,
328,
329
]
},
{
"tb": 144,
"tbk": 1,
"tl": 22627,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
330,
331,
332,
333,
334,
335,
336,
337,
338,
58
]
},
{
"tb": 288,
"tbk": 3,
"tl": 34353,
"mb": 288,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
339,
340,
341,
342,
343,
344,
345,
346
]
},
{
"tb": 16,
"tbk": 1,
"tl": 71,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
193,
347,
348,
349,
350,
240,
52
]
},
{
"tb": 216,
"tbk": 1,
"tl": 5839,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
351,
352,
353,
354,
355,
356,
357,
358,
359
]
},
{
"tb": 48,
"tbk": 1,
"tl": 205409,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
88,
360,
361,
362,
363,
364,
365,
366,
367
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
193,
368,
369,
370,
115
]
},
{
"tb": 2280,
"tbk": 5,
"tl": 1786,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
371,
372,
373,
374,
375,
376
]
},
{
"tb": 2944,
"tbk": 3,
"tl": 11001,
"mb": 2944,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
66,
67,
68,
69,
70,
377,
247,
266
]
},
{
"tb": 2000,
"tbk": 10,
"tl": 168,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
378,
379,
380,
381,
382,
383
]
},
{
"tb": 480,
"tbk": 4,
"tl": 177,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
172,
173,
174,
175,
384,
120
]
},
{
"tb": 192,
"tbk": 2,
"tl": 4329,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
130,
131,
132,
385,
386
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 42914,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
39,
40,
41,
60,
61,
62,
387,
81,
58
]
},
{
"tb": 2040,
"tbk": 3,
"tl": 2304,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
388,
389,
390,
391,
392,
72,
73,
393
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 128288,
"mb": 2097152,
"mbk": 1,
"gb": 2097152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
66,
213,
214,
215,
216,
394,
395,
396
]
},
{
"tb": 680,
"tbk": 3,
"tl": 756,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
165,
166,
167,
168,
169,
397,
398
]
},
{
"tb": 192,
"tbk": 1,
"tl": 797363,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
88,
304,
305,
306,
307,
308,
309,
399,
400,
401
]
},
{
"tb": 4128,
"tbk": 33,
"tl": 54336,
"mb": 4096,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
39,
40,
41,
42,
43,
44,
402,
307,
308,
309,
310
]
},
{
"tb": 72,
"tbk": 1,
"tl": 4148,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
193,
403,
404,
58,
59
]
},
{
"tb": 80,
"tbk": 1,
"tl": 1445277,
"mb": 80,
"mbk": 1,
"gb": 80,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
405,
406,
407,
408,
409,
410,
411,
412,
413
]
},
{
"tb": 524320,
"tbk": 3,
"tl": 9281,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
160,
414,
415,
188
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
416,
417,
418,
419,
420,
421,
422,
423,
424,
103
]
},
{
"tb": 192,
"tbk": 2,
"tl": 4517,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
130,
131,
132,
133,
243
]
},
{
"tb": 192,
"tbk": 2,
"tl": 35854,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
130,
131,
132,
385,
236
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
75,
151,
152,
153,
283,
284,
285,
286,
287,
370
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1271,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
425,
426,
427,
428,
429,
430,
431,
432
]
},
{
"tb": 96,
"tbk": 1,
"tl": 4325,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
433,
434,
435,
436,
386
]
},
{
"tb": 2097152,
"tbk": 8,
"tl": 178583,
"mb": 2097152,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
39,
40,
41,
42,
43,
44,
402,
307,
308,
309,
437
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 389586,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
160,
227,
438,
439
]
},
{
"tb": 512,
"tbk": 1,
"tl": 14,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
160,
414,
440,
441
]
},
{
"tb": 48,
"tbk": 2,
"tl": 1108708,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
203,
204,
205,
206,
207,
208,
209,
210,
442,
300
]
},
{
"tb": 2920,
"tbk": 15,
"tl": 418,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
30,
31,
32,
116,
117,
118,
443,
169,
170
]
},
{
"tb": 512,
"tbk": 1,
"tl": 69,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
444,
114,
52,
115
]
},
{
"tb": 512,
"tbk": 1,
"tl": 2890,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
445,
446,
52,
115
]
},
{
"tb": 2384,
"tbk": 10,
"tl": 961,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
447,
448,
449,
450,
451,
452,
453,
454
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1291,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
172,
173,
174,
175,
455,
261
]
},
{
"tb": 128,
"tbk": 1,
"tl": 1556,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
196,
197,
198,
199,
456,
201,
202
]
},
{
"tb": 1048576,
"tbk": 8,
"tl": 11561587,
"mb": 1048576,
"mbk": 8,
"gb": 1048576,
"gbk": 8,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
160,
457,
458,
459
]
},
{
"tb": 2883584,
"tbk": 11,
"tl": 6307302,
"mb": 2883584,
"mbk": 11,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
160,
460,
461,
462
]
},
{
"tb": 256,
"tbk": 1,
"tl": 503,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
165,
166,
167,
168,
169,
463,
464
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 1431160,
"mb": 262144,
"mbk": 1,
"gb": 262144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
160,
227,
465,
466
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1580,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
388,
389,
390,
391,
392,
467,
468,
404
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1437604,
"mb": 1024,
"mbk": 1,
"gb": 1024,
"gbk": 1,
"eb": 1024,
"ebk": 1,
"fs": [
469,
470,
471,
472,
473,
474,
475,
476,
477,
478,
479,
480,
481,
482,
483,
484,
485,
486,
487,
488,
489
]
},
{
"tb": 48,
"tbk": 1,
"tl": 797370,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
490,
491,
492,
493,
494,
495,
496,
497,
498
]
},
{
"tb": 2097152,
"tbk": 8,
"tl": 389120,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
499,
500,
501,
502,
503,
504,
505,
506
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1278,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
507,
508,
509,
510,
511,
512,
513,
514
]
},
{
"tb": 480,
"tbk": 4,
"tl": 4301,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
172,
173,
174,
175,
176,
515
]
},
{
"tb": 96,
"tbk": 1,
"tl": 29,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
433,
434,
435,
516,
114
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 906,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
172,
230,
231,
232,
233,
517
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 2500,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
66,
518,
519,
520,
521,
522,
523,
524,
525
]
},
{
"tb": 256,
"tbk": 1,
"tl": 107,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
22,
23,
24,
25,
26,
239
]
},
{
"tb": 1152,
"tbk": 4,
"tl": 141,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
526,
527,
528,
529,
530
]
},
{
"tb": 256,
"tbk": 1,
"tl": 5832,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
144,
145,
146,
147,
148,
531,
532
]
},
{
"tb": 192,
"tbk": 3,
"tl": 16024,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
160,
227,
438,
533
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1432889,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
534,
535,
536,
537,
538,
539,
312,
58
]
},
{
"tb": 786432,
"tbk": 3,
"tl": 68220,
"mb": 786432,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
39,
40,
41,
42,
43,
44,
402,
307,
308,
309,
540
]
},
{
"tb": 2704,
"tbk": 26,
"tl": 349,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
541,
542,
543,
544,
545,
546
]
},
{
"tb": 11776,
"tbk": 92,
"tl": 91,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
100,
547,
247,
266
]
},
{
"tb": 32,
"tbk": 1,
"tl": 52,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
75,
151,
152,
153,
154,
155,
156,
548,
158,
159
]
},
{
"tb": 4056,
"tbk": 27,
"tl": 84,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
30,
31,
32,
116,
117,
118,
119,
72,
73
]
},
{
"tb": 134759,
"tbk": 10,
"tl": 5931,
"mb": 69168,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
549,
550,
551,
552,
553
]
},
{
"tb": 71592,
"tbk": 157,
"tl": 35205,
"mb": 20976,
"mbk": 46,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
371,
372,
373,
554,
555,
556
]
},
{
"tb": 1088,
"tbk": 2,
"tl": 29,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
557,
558,
559,
560,
561,
562
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 34889,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
160,
227,
438,
563
]
},
{
"tb": 128,
"tbk": 1,
"tl": 13522,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
196,
197,
198,
199,
564,
565,
566
]
},
{
"tb": 160,
"tbk": 1,
"tl": 4541,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
567,
568,
569,
570,
103
]
},
{
"tb": 512,
"tbk": 1,
"tl": 15,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
160,
414,
571,
114
]
},
{
"tb": 60464,
"tbk": 1129,
"tl": 129893,
"mb": 12864,
"mbk": 7,
"gb": 160,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
549,
572,
573,
574,
575,
576,
577
]
},
{
"tb": 192,
"tbk": 1,
"tl": 542638,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
88,
578,
579,
580,
581,
582,
583,
584,
585
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1562,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
586,
587,
588,
589,
590,
591,
592,
593,
594
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 39,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
39,
40,
41,
42,
43,
44,
267,
595,
58
]
},
{
"tb": 16,
"tbk": 1,
"tl": 23,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
596,
597,
598,
599,
600,
601,
602,
603,
58,
59
]
},
{
"tb": 128,
"tbk": 1,
"tl": 5775,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
66,
213,
214,
215,
244,
604,
605,
103
]
},
{
"tb": 1440,
"tbk": 12,
"tl": 4535,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
13,
14,
15,
16,
606
]
},
{
"tb": 264,
"tbk": 2,
"tl": 1146461,
"mb": 264,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
88,
607,
608,
609,
610,
611,
612,
613,
614
]
},
{
"tb": 736,
"tbk": 3,
"tl": 2790,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
30,
31,
32,
33,
34,
35,
615,
616,
37
]
},
{
"tb": 10720,
"tbk": 32,
"tl": 63549,
"mb": 10720,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
66,
213,
214,
215,
244,
245,
617,
618
]
},
{
"tb": 24,
"tbk": 1,
"tl": 577055,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
203,
204,
205,
206,
207,
208,
209,
210,
619,
620
]
},
{
"tb": 40,
"tbk": 1,
"tl": 517914,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
621,
622,
623,
624,
625,
626,
627,
628,
629
]
},
{
"tb": 96,
"tbk": 2,
"tl": 577030,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
172,
173,
174,
175,
630,
631
]
},
{
"tb": 2097152,
"tbk": 16384,
"tl": 14669,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
39,
40,
41,
42,
43,
44,
632,
633,
634
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 2822,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
100,
301,
635,
618
]
},
{
"tb": 512,
"tbk": 1,
"tl": 20,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
39,
40,
41,
42,
43,
44,
636,
114,
52
]
},
{
"tb": 256,
"tbk": 1,
"tl": 9,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
39,
40,
41,
42,
43,
44,
637,
393,
58
]
},
{
"tb": 262144,
"tbk": 2,
"tl": 410400,
"mb": 262144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
39,
40,
41,
60,
61,
62,
638,
639,
640
]
},
{
"tb": 24,
"tbk": 1,
"tl": 542868,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
641,
642,
643,
644,
645,
646,
647,
648,
649
]
},
{
"tb": 576,
"tbk": 2,
"tl": 45,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
650,
651,
652,
653,
654,
655,
656,
657,
658
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
75,
151,
152,
153,
283,
284,
285,
286,
659,
370
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1546,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
660,
661,
662,
663,
664,
665,
666,
667,
668
]
},
{
"tb": 512,
"tbk": 1,
"tl": 27,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
669,
441,
52,
115
]
},
{
"tb": 192,
"tbk": 1,
"tl": 22606,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
88,
304,
305,
306,
307,
308,
309,
437,
338,
58
]
},
{
"tb": 1040,
"tbk": 10,
"tl": 242,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
541,
542,
543,
670,
671,
672
]
},
{
"tb": 128,
"tbk": 1,
"tl": 103,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
39,
40,
41,
60,
61,
62,
673,
26,
239
]
},
{
"tb": 2920,
"tbk": 15,
"tl": 400,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
30,
31,
32,
116,
117,
118,
443,
169,
463
]
},
{
"tb": 16,
"tbk": 1,
"tl": 73,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
193,
347,
674,
349,
350,
240,
52
]
},
{
"tb": 48,
"tbk": 2,
"tl": 360344,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
675,
676,
677,
678,
679,
680,
681,
682,
683
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1259,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
684,
685,
686,
687,
688,
689,
690,
691
]
},
{
"tb": 8,
"tbk": 1,
"tl": 188,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
692,
693,
694,
695,
696,
697,
698,
699
]
},
{
"tb": 240,
"tbk": 2,
"tl": 577034,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
193,
700,
620,
58,
59
]
},
{
"tb": 4992,
"tbk": 26,
"tl": 9041,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
269,
270,
271,
701,
702,
703
]
},
{
"tb": 384,
"tbk": 2,
"tl": 71,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
704,
705,
706,
707,
708,
709,
710,
711,
712
]
},
{
"tb": 96,
"tbk": 1,
"tl": 11,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
193,
713,
714,
715,
58,
59
]
},
{
"tb": 1440,
"tbk": 12,
"tl": 321,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
172,
173,
174,
175,
384,
72
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 7306,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
289,
290,
291,
292,
293,
294,
716
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 3539,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
75,
76,
77,
78,
717,
261,
468,
404
]
},
{
"tb": 48,
"tbk": 1,
"tl": 109035,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
196,
197,
198,
199,
718,
719,
720
]
},
{
"tb": 24,
"tbk": 1,
"tl": 554470,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
193,
237,
238,
26,
27,
721,
58
]
},
{
"tb": 2880,
"tbk": 10,
"tl": 3334,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
722,
723,
724,
725,
726,
727
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
75,
151,
152,
153,
283,
284,
285,
286,
659,
288
]
},
{
"tb": 512,
"tbk": 1,
"tl": 16,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
728,
441,
52,
115
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1636,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
39,
40,
41,
60,
61,
62,
729,
103,
115
]
},
{
"tb": 256,
"tbk": 3,
"tl": 1108426,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
730,
731,
732,
733,
734
]
},
{
"tb": 80,
"tbk": 1,
"tl": 554199,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
735,
736,
737,
738,
739,
740,
741,
742,
743
]
},
{
"tb": 64,
"tbk": 1,
"tl": 389594,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
165,
166,
167,
744,
745,
620,
58
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 116397,
"mb": 2097152,
"mbk": 1,
"gb": 2097152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
66,
213,
214,
215,
216,
217,
218,
746
]
},
{
"tb": 256,
"tbk": 1,
"tl": 4549,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
39,
40,
41,
42,
43,
44,
267,
747,
103
]
},
{
"tb": 64,
"tbk": 1,
"tl": 4315,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
748,
749,
52,
115
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1141,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
39,
40,
41,
60,
61,
62,
750,
37,
38
]
},
{
"tb": 11776,
"tbk": 3,
"tl": 1731,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
751,
752,
753,
754,
755,
756,
757,
758,
759
]
},
{
"tb": 1048576,
"tbk": 8,
"tl": 6377643,
"mb": 1048576,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
39,
40,
41,
42,
43,
44,
402,
307,
308,
309,
399
]
},
{
"tb": 24,
"tbk": 1,
"tl": 116,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
88,
760,
761,
762,
763,
764,
765,
766,
767
]
},
{
"tb": 16,
"tbk": 1,
"tl": 22616,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
39,
40,
41,
42,
43,
44,
768,
769,
334,
335,
336
]
},
{
"tb": 96,
"tbk": 1,
"tl": 1761,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
770,
771,
772,
773,
468
]
},
{
"tb": 96,
"tbk": 1,
"tl": 1432957,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
774,
775,
776,
777,
778,
779,
780,
781,
782
]
},
{
"tb": 11776,
"tbk": 3,
"tl": 457,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
160,
414,
783,
784
]
},
{
"tb": 32,
"tbk": 1,
"tl": 294374,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
74,
172,
173,
174,
175,
785,
58
]
},
{
"tb": 16,
"tbk": 1,
"tl": 577052,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
39,
40,
41,
42,
43,
44,
768,
619,
620
]
},
{
"tb": 512,
"tbk": 1,
"tl": 3043,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
786,
787,
788,
789,
790,
791,
792,
793
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 1204299,
"mb": 2097152,
"mbk": 1,
"gb": 2097152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
66,
213,
214,
215,
216,
794,
323,
795
]
},
{
"tb": 535,
"tbk": 6,
"tl": 100154,
"mb": 272,
"mbk": 1,
"gb": 272,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
549,
550,
551,
552,
796
]
},
{
"tb": 896,
"tbk": 6,
"tl": 5858,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
130,
131,
132,
797,
798
]
},
{
"tb": 4056,
"tbk": 27,
"tl": 523,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
30,
31,
32,
116,
117,
118,
443,
169,
397
]
},
{
"tb": 64,
"tbk": 1,
"tl": 21976,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
30,
31,
32,
116,
117,
118,
799,
338,
58
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1342,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
433,
434,
435,
800,
81
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1445355,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
801,
802,
803,
804,
805,
806,
807,
808
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1254,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
809,
810,
811,
812,
813,
814,
815,
816
]
},
{
"tb": 256,
"tbk": 1,
"tl": 11,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
30,
31,
32,
33,
34,
35,
817,
393,
58
]
},
{
"tb": 96,
"tbk": 1,
"tl": 5116,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
433,
434,
435,
818,
266
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1432949,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
11,
416,
417,
418,
419,
420,
421,
422,
423,
819,
820
]
},
{
"tb": 96,
"tbk": 1,
"tl": 9,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
433,
434,
435,
821,
103
]
},
{
"tb": 32,
"tbk": 1,
"tl": 73,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
822,
823,
824,
825,
826,
827,
828,
829,
830
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 2107,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
100,
301,
831,
618
]
},
{
"tb": 128,
"tbk": 1,
"tl": 95,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
289,
290,
291,
292,
293,
294,
832
]
},
{
"tb": 256,
"tbk": 1,
"tl": 6242,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
39,
40,
41,
60,
61,
62,
833,
834,
835
]
},
{
"tb": 128,
"tbk": 1,
"tl": 109031,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
196,
197,
198,
199,
836,
719,
720
]
},
{
"tb": 512,
"tbk": 1,
"tl": 9,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
837,
838,
839,
840,
841,
842,
843,
844
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
193,
368,
369,
288,
312,
58,
59
]
},
{
"tb": 16,
"tbk": 1,
"tl": 103,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
193,
347,
674,
349,
845,
846,
721
]
},
{
"tb": 48,
"tbk": 2,
"tl": 72,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
193,
847,
325,
326,
327,
328,
329
]
},
{
"tb": 32,
"tbk": 1,
"tl": 127,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
39,
40,
41,
42,
43,
44,
848,
181,
182
]
},
{
"tb": 1196032,
"tbk": 3,
"tl": 31467,
"mb": 1196032,
"mbk": 3,
"gb": 1048576,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
160,
849,
850,
129
]
},
{
"tb": 216,
"tbk": 1,
"tl": 1431510,
"mb": 216,
"mbk": 1,
"gb": 216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
351,
851,
852,
853,
854,
855,
856,
857,
858
]
},
{
"tb": 96,
"tbk": 1,
"tl": 35849,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
433,
434,
435,
436,
236
]
},
{
"tb": 32,
"tbk": 1,
"tl": 5782,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
66,
213,
214,
215,
244,
859,
605,
103
]
},
{
"tb": 448,
"tbk": 3,
"tl": 11,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
130,
131,
132,
860,
861
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 317460,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
39,
40,
41,
42,
43,
44,
862,
863,
864
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1677,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
388,
389,
390,
391,
392,
120,
81,
58
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 2059,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
66,
865,
866,
867,
868,
869,
870,
871,
872
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2502,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
388,
389,
390,
391,
873,
874,
303,
875
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1673,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
66,
67,
68,
69,
70,
71,
120,
81
]
},
{
"tb": 11776,
"tbk": 3,
"tl": 12806,
"mb": 11776,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
876,
247,
266,
103
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 316282,
"mb": 262144,
"mbk": 1,
"gb": 262144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
289,
290,
291,
292,
293,
294,
877
]
},
{
"tb": 256,
"tbk": 1,
"tl": 4501,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
39,
40,
41,
42,
43,
44,
878,
879,
880
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 24533,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
160,
227,
438,
881
]
},
{
"tb": 128,
"tbk": 1,
"tl": 15773,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
196,
197,
198,
199,
882,
715,
58
]
},
{
"tb": 8,
"tbk": 1,
"tl": 542441,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
883,
884,
885,
886,
887,
888,
889,
890,
891
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 445133,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
160,
190,
892,
893
]
},
{
"tb": 56,
"tbk": 1,
"tl": 1921,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
193,
894,
895,
103,
115
]
},
{
"tb": 256,
"tbk": 1,
"tl": 5413,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
100,
896,
897,
103
]
},
{
"tb": 48,
"tbk": 1,
"tl": 14298,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
193,
898,
899,
900,
901,
902,
903
]
},
{
"tb": 144,
"tbk": 1,
"tl": 7670,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
904,
905,
906,
907,
908,
909,
393,
58,
59
]
},
{
"tb": 1472,
"tbk": 3,
"tl": 1764,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
910,
911,
912,
913,
914,
915,
916,
917
]
},
{
"tb": 299008,
"tbk": 3,
"tl": 28848,
"mb": 299008,
"mbk": 3,
"gb": 262144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
66,
213,
214,
215,
216,
217,
218,
918
]
},
{
"tb": 11776,
"tbk": 3,
"tl": 1191,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
289,
290,
291,
292,
293,
294,
919
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 291514,
"mb": 8388608,
"mbk": 1,
"gb": 8388608,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
289,
290,
291,
292,
293,
294,
920
]
},
{
"tb": 128,
"tbk": 1,
"tl": 2883,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
921,
922,
923,
924,
925,
926,
927,
928
]
},
{
"tb": 72,
"tbk": 3,
"tl": 67841,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
203,
204,
205,
206,
207,
208,
209,
210,
769,
334,
335,
336
]
},
{
"tb": 256,
"tbk": 2,
"tl": 124819,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
289,
290,
291,
292,
293,
294,
929
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1764,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
88,
304,
305,
306,
307,
308,
309,
310,
930,
468
]
},
{
"tb": 72,
"tbk": 1,
"tl": 887895,
"mb": 72,
"mbk": 1,
"gb": 72,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
931,
932,
933,
934,
935,
936,
937,
938,
939
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 7332,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
289,
290,
291,
292,
293,
294,
940
]
},
{
"tb": 96,
"tbk": 1,
"tl": 10,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
433,
434,
435,
941,
195
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1431405,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
942,
943,
944,
945,
946,
947,
948,
949,
950
]
},
{
"tb": 149504,
"tbk": 3,
"tl": 18653,
"mb": 147456,
"mbk": 2,
"gb": 131072,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
160,
951,
952,
129
]
},
{
"tb": 128,
"tbk": 1,
"tl": 554459,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
39,
40,
41,
60,
61,
62,
673,
26,
27
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
193,
347,
348,
714,
715,
58,
59
]
},
{
"tb": 81152,
"tbk": 320,
"tl": 145372,
"mb": 16384,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
66,
953,
954,
955,
956,
957,
958,
959,
960
]
},
{
"tb": 64,
"tbk": 1,
"tl": 156,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
130,
131,
132,
242,
134
]
},
{
"tb": 64,
"tbk": 1,
"tl": 4321,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
130,
131,
132,
235,
386
]
},
{
"tb": 24,
"tbk": 1,
"tl": 887444,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
641,
961,
962,
963,
964,
58,
59
]
},
{
"tb": 94208,
"tbk": 3,
"tl": 1202,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
289,
290,
291,
292,
293,
294,
965
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 34956,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
39,
40,
41,
60,
61,
62,
966,
967,
58
]
},
{
"tb": 72,
"tbk": 3,
"tl": 57,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
968,
969,
970,
971,
972,
973,
974,
975,
976
]
},
{
"tb": 48,
"tbk": 1,
"tl": 867,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
193,
977,
195,
58,
59
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 3548,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
75,
76,
77,
78,
978,
261,
468,
404
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1575,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
66,
67,
68,
69,
70,
71,
467,
468
]
},
{
"tb": 96,
"tbk": 1,
"tl": 20,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
193,
713,
349,
350,
240,
52,
115
]
},
{
"tb": 11776,
"tbk": 3,
"tl": 1747,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
751,
979,
980,
981,
982,
73,
393,
58
]
},
{
"tb": 432,
"tbk": 3,
"tl": 1178,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
196,
197,
198,
199,
983,
784,
37
]
},
{
"tb": 16,
"tbk": 1,
"tl": 6,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
193,
347,
674,
714,
715,
58,
59
]
},
{
"tb": 299008,
"tbk": 3,
"tl": 31019,
"mb": 299008,
"mbk": 3,
"gb": 262144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
66,
213,
214,
215,
216,
984,
985,
129
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2059,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
388,
389,
390,
391,
873,
617,
618,
895
]
},
{
"tb": 96,
"tbk": 1,
"tl": 13,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
330,
986,
987,
988,
989,
990,
991,
992,
993
]
},
{
"tb": 480,
"tbk": 4,
"tl": 178,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
172,
173,
174,
175,
384,
467
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 43,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
160,
227,
438,
994
]
},
{
"tb": 2400,
"tbk": 20,
"tl": 1642,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
172,
173,
174,
175,
995,
169
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 2498,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
74,
172,
230,
231,
232,
233,
996
]
},
{
"tb": 24,
"tbk": 1,
"tl": 887454,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
997,
998,
999,
1000,
1001,
58,
59
]
},
{
"tb": 32,
"tbk": 1,
"tl": 48,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
822,
1002,
1003,
1004,
1005,
1006,
1007,
1008,
1009
]
},
{
"tb": 72,
"tbk": 1,
"tl": 22767,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
88,
304,
305,
306,
307,
308,
309,
540,
338,
58
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1885,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
88,
1010,
1011,
1012,
1013,
1014,
1015,
1016,
1017
]
},
{
"tb": 160,
"tbk": 1,
"tl": 4497,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1018,
1019,
1020,
1021,
1022,
1023,
1024,
1025,
1026
]
},
{
"tb": 11776,
"tbk": 92,
"tl": 77,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 7553,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
160,
227,
438,
1035
]
},
{
"tb": 10720,
"tbk": 32,
"tl": 77797,
"mb": 10720,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
66,
213,
214,
215,
244,
245,
874,
303
]
},
{
"tb": 16,
"tbk": 1,
"tl": 98642,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
596,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1265,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
1044,
1045,
1046,
1047,
1048,
1049,
1050,
1051
]
},
{
"tb": 896,
"tbk": 7,
"tl": 2743,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
1052,
1053,
1054,
1055,
72
]
},
{
"tb": 32,
"tbk": 2,
"tl": 554599,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1056,
1057,
1058,
1059,
1060,
1061,
1062,
1063
]
},
{
"tb": 96,
"tbk": 1,
"tl": 294380,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
433,
434,
435,
1064,
58
]
},
{
"tb": 16,
"tbk": 1,
"tl": 101,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
193,
347,
348,
349,
845,
846,
721
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 200210,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
160,
161,
162,
1065
]
},
{
"tb": 96,
"tbk": 1,
"tl": 25,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
433,
434,
435,
1066,
114
]
},
{
"tb": 2040,
"tbk": 3,
"tl": 10599,
"mb": 2040,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
388,
389,
390,
391,
873,
246,
247,
266
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 1402556,
"mb": 8388608,
"mbk": 1,
"gb": 8388608,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
751,
979,
980,
981,
1067,
1068,
1069,
1070
]
},
{
"tb": 8,
"tbk": 1,
"tl": 517885,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
883,
1071,
1072,
1073,
1074,
1075,
1076,
1077,
1078
]
},
{
"tb": 96,
"tbk": 1,
"tl": 27,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
193,
713,
349,
845,
846,
721,
58
]
},
{
"tb": 384,
"tbk": 1,
"tl": 554367,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1079,
1080,
1081,
1082,
1083,
1084,
1085,
1086,
1087
]
},
{
"tb": 512,
"tbk": 1,
"tl": 22728,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
1088,
1089,
1090,
1091,
58
]
},
{
"tb": 11776,
"tbk": 3,
"tl": 397,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
289,
290,
291,
292,
293,
294,
1092
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 80042,
"mb": 1048576,
"mbk": 1,
"gb": 1048576,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
160,
1093,
1094,
1095
]
},
{
"tb": 2920,
"tbk": 15,
"tl": 62,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
30,
31,
32,
116,
117,
118,
119,
467,
468
]
},
{
"tb": 128,
"tbk": 1,
"tl": 2810,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
1096,
1097,
1098,
1099,
618
]
}
],
"ftbl": [
"[root]",
"0x573c8b2143b9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x573c8b0e64ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x573c8b19f3bf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b19f3bf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b19f3bf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b19f3bf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fc6cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f9e45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b22652d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b05e4ab: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x573c8b44cf79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x573c8b44b709: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x573c8b4100f0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x573c8b404669: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x573c8b403e51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x573c8b403950: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x573c8b0c3e24: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x573c8b0d9b4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x573c8b138012: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b138012: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b138012: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x573c8b1eab05: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x573c8b1eab05: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x573c8b1eab05: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x573c8b038b95: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x573c8b139010: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:354:9)",
"0x573c8b075a9c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:51:13)",
"0x573c8b40fa99: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x573c8b40fc0a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x573c8b40361c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b40361c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b40361c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x573c8b4035cc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x573c8b4035cc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x573c8b4035cc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x573c8b295d9d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x573c8b29f5e9: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x573c8b051c03: winter_verifier::perform_verification (verifier/src/lib.rs:323:5)",
"0x573c8b163e08: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b163e08: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b163e08: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x573c8b1e9b85: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x573c8b1e9b85: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x573c8b1e9b85: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x573c8b025a3f: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:230:34)",
"0x573c8b22e026: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x573c8b2543a7: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x573c8b0ff7a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x573c8b11b108: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x573c8b1dbdae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x573c8b0521eb: winter_verifier::perform_verification (verifier/src/lib.rs:184:9)",
"0x573c8b0555da: winter_verifier::verify (verifier/src/lib.rs:111:21)",
"0x573c8b0e79ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x573c8b1b3a55: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b1b3a55: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b1b3a55: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b13c877: winter_prover::Prover::generate_proof (prover/src/lib.rs:306:39)",
"0x573c8b14f2ee: winter_prover::Prover::prove (prover/src/lib.rs:175:37)",
"0x573c8b0af27c: winterfell::main (winterfell/src/main.rs:54:17)",
"0x573c8b16445b: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x573c8b16445b: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x573c8b16445b: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x573c8b056f56: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x573c8b233eb6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x573c8b258fbd: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x573c8b0d9dec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x573c8b084c84: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b084c84: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b084c84: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x573c8b1e8c56: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x573c8b0bca4c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x573c8b0bf3c0: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x573c8b0c40bd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x573c8b3d8819: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x573c8b3d762a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x573c8b32ef36: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b32ef36: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b32ef36: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b08adac: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x573c8b157d4a: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x573c8b13f30a: winter_prover::Prover::generate_proof (prover/src/lib.rs:608:34)",
"0x573c8b15680b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x573c8b154a1d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x573c8b2c8c2a: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x573c8b2c155d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x573c8b2c7a25: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x573c8b2ba86e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x573c8b0dc7bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x573c8b1ae36f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b1ae36f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b1ae36f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b1ae36f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fb89d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f9895: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b226bdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b18dfe2: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:140:32)",
"0x573c8b1b37d5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b1b37d5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b1b37d5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b162485: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x573c8b031f63: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x573c8b186c15: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x573c8b05550b: winter_verifier::verify (verifier/src/lib.rs:109:19)",
"0x573c8b2a7c7d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x573c8b2aa613: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x573c8b0bb237: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x573c8b155a8b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x573c8b154e3d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x573c8b2c878a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x573c8b2a32a9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x573c8b20bbc8: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x573c8b20a195: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x573c8b05e6df: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x573c8b051a15: winter_verifier::perform_verification (verifier/src/lib.rs:311:25)",
"0x573c8b0af822: winterfell::main (winterfell/src/main.rs:71:11)",
"0x573c8b1ea2d9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x573c8b1ea2d9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x573c8b1ea2d9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x573c8b0bcdbc: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x573c8b157b91: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x573c8b1b33c5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b1b33c5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b1b33c5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b13c8cd: winter_prover::Prover::generate_proof (prover/src/lib.rs:308:37)",
"0x573c8b0fd511: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x573c8b11ba08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x573c8b1d940e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x573c8b0c0c69: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x573c8b0c5bc6: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x573c8b111fe1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x573c8b11b0d8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x573c8b1d967d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x573c8b13ba42: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:512:13)",
"0x573c8b0c86b2: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x573c8b0dc52a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x573c8b194949: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b194949: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b194949: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b194949: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fc96a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f8874: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b226b8a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b05940e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x573c8b1384c4: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b1384c4: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b1384c4: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x573c8b1e8bf6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x573c8b0b00ad: <winterfell::WorkAir as winter_air::air::Air>::new (winterfell/src/main.rs:151:23)",
"0x573c8b217f36: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:226:17)",
"0x573c8b23219e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x573c8b3da32c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b3da32c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b3da32c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x573c8b3339e9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x573c8b3339e9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x573c8b3339e9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x573c8b15409a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x573c8b032a26: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x573c8b186714: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x573c8b11dae7: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x573c8b07b30f: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x573c8b07a506: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x573c8b14eacc: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:701:36)",
"0x573c8b032126: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x573c8b1b3646: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b1b3646: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b1b3646: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b08e882: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x573c8b0bd46d: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x573c8b1844ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x573c8b051636: winter_verifier::perform_verification (verifier/src/lib.rs:305:9)",
"0x573c8b3d72e9: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x573c8b2e6840: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x573c8b2e6aa9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x573c8b2f6111: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x573c8b0bb7dc: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x573c8b0c78d8: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x573c8b28ad94: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x573c8b29695d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x573c8b238d72: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x573c8b238e16: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x573c8b051edf: winter_verifier::perform_verification (verifier/src/lib.rs:228:13)",
"0x573c8b101a31: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x573c8b11b048: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x573c8b1de55e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x573c8b0523b2: winter_verifier::perform_verification (verifier/src/lib.rs:179:9)",
"0x573c8b0461bf: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x573c8b043ac4: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x573c8b047f9d: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x573c8b0b8ec7: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x573c8b0ca003: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x573c8b0cb210: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x573c8b213847: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x573c8b1694ab: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x573c8b13e02d: winter_prover::Prover::generate_proof (prover/src/lib.rs:524:9)",
"0x573c8b164511: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b164511: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b164511: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x573c8b1e8c80: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x573c8b17e1ce: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x573c8b055038: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:216:32)",
"0x573c8b234e5f: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x573c8b0e306c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x573c8b163f38: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b163f38: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b163f38: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x573c8b1ea7c5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x573c8b1ea7c5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x573c8b1ea7c5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x573c8b0308e2: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x573c8b12a028: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:83:31)",
"0x573c8b2307af: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x573c8b1b3b95: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b1b3b95: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b1b3b95: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b11da57: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x573c8b0bc259: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x573c8b0bd739: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x573c8b078e5c: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x573c8b0afe36: <winterfell::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (winterfell/src/main.rs:133:9)",
"0x573c8b055330: winter_verifier::verify (verifier/src/lib.rs:98:38)",
"0x573c8b2167a8: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:216:31)",
"0x573c8b234d36: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x573c8b252bd0: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x573c8b220f66: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x573c8b2288f6: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x573c8b0b7e2f: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x573c8b2864f9: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x573c8b08437b: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x573c8b3d5700: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x573c8b3d5939: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x573c8b3d5132: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x573c8b08e17c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x573c8b0d03b5: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x573c8b13a1b5: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:547:13)",
"0x573c8b0c81b6: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x573c8b02fd37: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x573c8b038b7f: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x573c8b218e16: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:26:25)",
"0x573c8b051fcc: winter_verifier::perform_verification (verifier/src/lib.rs:225:43)",
"0x573c8b13fe8b: winter_prover::Prover::generate_proof (prover/src/lib.rs:450:13)",
"0x573c8b13b978: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:517:13)",
"0x573c8b0508e5: winter_verifier::perform_verification (verifier/src/lib.rs:185:13)",
"0x573c8b084785: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x573c8b08dcc7: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x573c8b0d0e35: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x573c8b0d4040: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x573c8b0df6dc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x573c8b1a144f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b1a144f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b1a144f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b1a144f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fc04d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f6f75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b22741d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b13ddcf: winter_prover::Prover::generate_proof (prover/src/lib.rs:501:51)",
"0x573c8b3280b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x573c8b32ad69: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x573c8b332322: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x573c8b08665f: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x573c8b056845: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x573c8b1086d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x573c8b11b7c8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x573c8b1da67e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x573c8b0d4216: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x573c8b186104: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x573c8b1b10a6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x573c8b168cbe: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x573c8b41263b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x573c8b411f01: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x573c8b40b38b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x573c8b404e3d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x573c8b410748: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x573c8b4140a7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x573c8b196033: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b196033: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b196033: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b196033: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fc9ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f9545: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b226fdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b13c6db: winter_prover::Prover::generate_proof (prover/src/lib.rs:293:23)",
"0x573c8b3a969c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x573c8b3a969c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x573c8b3a969c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x573c8b04e084: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x573c8b04ddce: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x573c8b0c92db: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x573c8b44aadc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x573c8b449d6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x573c8b449ae8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x573c8b449ae8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x573c8b449124: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x573c8b446d43: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x573c8b02388c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x573c8b11a041: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x573c8b11b018: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x573c8b1d98be: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x573c8b12ce9d: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:175:17)",
"0x573c8b12b34f: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:55:17)",
"0x573c8b151efa: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x573c8b08c356: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x573c8b18c3a7: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x573c8b1b2a22: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b1b2a22: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b1b2a22: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x573c8b1e9d25: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x573c8b1e9d25: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x573c8b1e9d25: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x573c8b1b10e6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x573c8b0c92f2: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x573c8b13bf02: winter_prover::Prover::generate_proof (prover/src/lib.rs:233:27)",
"0x573c8b199ecf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b199ecf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b199ecf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b199ecf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fcd5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f9da7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b226edd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b0af0e6: winterfell::main (winterfell/src/main.rs:38:27)",
"0x573c8b0799d6: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x573c8b078e23: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x573c8b14d6ee: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:669:26)",
"0x573c8b02f388: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x573c8b15c55c: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x573c8b20a129: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x573c8b15bb36: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x573c8b15f296: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x573c8b138bcf: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:369:9)",
"0x573c8b0dfc1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x573c8b0303e2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b0303e2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b0303e2: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x573c8b1e9df5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x573c8b1e9df5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x573c8b1e9df5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x573c8b04324b: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x573c8b13ce23: winter_prover::Prover::generate_proof (prover/src/lib.rs:423:33)",
"0x573c8b1a6acf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b1a6acf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b1a6acf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b1a6acf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fba5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f8c45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b226e4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b0251cf: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:283:9)",
"0x573c8b0b5245: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x573c8b0b0330: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:177:13)",
"0x573c8b138b72: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:371:13)",
"0x573c8b2192cb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:64:9)",
"0x573c8b0dbd4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x573c8b19759f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b19759f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b19759f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b19759f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1e70d6: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x573c8b1f9bc5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b22730d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b0553a8: winter_verifier::verify (verifier/src/lib.rs:102:24)",
"0x573c8b19718f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b19718f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b19718f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b19718f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fbccd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f8cd7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b22650d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b21baa0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x573c8b28414c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x573c8b04de0c: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x573c8b0551dd: winter_verifier::verify (verifier/src/lib.rs:96:32)",
"0x573c8b15572b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x573c8b154f9d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x573c8b2c869a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x573c8b2a31e9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x573c8b20d15b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x573c8b0836eb: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x573c8b0d0b3e: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x573c8b41212b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x573c8b412061: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x573c8b40b46b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x573c8b405b71: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x573c8b406307: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x573c8b41590b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x573c8b0bd2b7: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x573c8b13a3d4: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:541:17)",
"0x573c8b050fc9: winter_verifier::perform_verification (verifier/src/lib.rs:266:61)",
"0x573c8b157db3: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x573c8b0e5a6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x573c8b1b3875: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b1b3875: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b1b3875: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b0bcaaf: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x573c8b13f19c: winter_prover::Prover::generate_proof (prover/src/lib.rs:600:25)",
"0x573c8b0784bd: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x573c8b14eeb8: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:716:26)",
"0x573c8b13d931: winter_prover::Prover::generate_proof (prover/src/lib.rs:482:37)",
"0x573c8b17d2d4: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x573c8b29678d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x573c8b0288cd: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x573c8b027036: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x573c8b217c48: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:300:57)",
"0x573c8b1b2d83: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x573c8b05941d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x573c8b13f217: winter_prover::Prover::generate_proof (prover/src/lib.rs:603:29)",
"0x573c8b0da5cc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x573c8b19daff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b19daff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b19daff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b19daff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fb4ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f8337: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b226e8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b0aeedf: winterfell::main (winterfell/src/main.rs:28:26)",
"0x573c8b0b79fe: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x573c8b0462ce: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x573c8b44b9ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x573c8b44d04c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b44d04c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b44d04c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x573c8b44ac7c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x573c8b44ac7c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x573c8b44ac7c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x573c8b446ece: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x573c8b185370: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x573c8b1a4b9d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b1a4b9d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b1a4b9d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b1a4b9d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fb2aa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f8394: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b226b5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b1855c3: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x573c8b0fb281: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x573c8b11ba38: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x573c8b1dc33e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x573c8b13a350: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:543:13)",
"0x573c8b0432c5: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x573c8b287338: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x573c8b049adb: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x573c8b062eb1: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x573c8b051abc: winter_verifier::perform_verification (verifier/src/lib.rs:317:25)",
"0x573c8b12cd5a: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:170:36)",
"0x573c8b08eabb: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x573c8b05e6fe: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x573c8b05b7be: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x573c8b051b34: winter_verifier::perform_verification (verifier/src/lib.rs:319:28)",
"0x573c8b4129e9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b4129e9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b4129e9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b4129e9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x573c8b412e2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b412df7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b412fce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b4154c9: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x573c8b086999: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x573c8b17e1b0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x573c8b18e1b0: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:140:51)",
"0x573c8b22f476: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x573c8b02dfc1: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x573c8b045440: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x573c8b22ddb6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x573c8b02db11: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x573c8b184cf0: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x573c8b0517a8: winter_verifier::perform_verification (verifier/src/lib.rs:306:42)",
"0x573c8b084428: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x573c8b13c132: winter_prover::Prover::generate_proof (prover/src/lib.rs:262:22)",
"0x573c8b05677b: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x573c8b0594b0: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x573c8affdd82: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x573c8affdd82: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x573c8affdd82: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8affdd82: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8affdd82: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8affdd82: std::io::buffered::bufwriter::BufWriter<W>::with_capacity (io/buffered/bufwriter.rs:115:33)",
"0x573c8affdd82: std::io::buffered::linewriter::LineWriter<W>::with_capacity (io/buffered/linewriter.rs:109:29)",
"0x573c8affdd82: std::io::buffered::linewriter::LineWriter<W>::new (io/buffered/linewriter.rs:89:9)",
"0x573c8affdd82: std::io::stdio::stdout::{{closure}} (src/io/stdio.rs:618:62)",
"0x573c8affdd82: std::sync::once_lock::OnceLock<T>::get_or_init::{{closure}} (src/sync/once_lock.rs:250:50)",
"0x573c8affdd82: std::sync::once_lock::OnceLock<T>::initialize::{{closure}} (src/sync/once_lock.rs:376:19)",
"0x573c8affdd82: std::sync::once::Once::call_once_force::{{closure}} (src/sync/once.rs:208:40)",
"0x573c8affdd82: std::sys_common::once::futex::Once::call (sys_common/once/futex.rs:124:21)",
"0x573c8affceca: std::sync::once::Once::call_once_force (src/sync/once.rs:208:9)",
"0x573c8affceca: std::sync::once_lock::OnceLock<T>::initialize (src/sync/once_lock.rs:375:9)",
"0x573c8b4671c5: std::sync::once_lock::OnceLock<T>::get_or_try_init (src/sync/once_lock.rs:298:9)",
"0x573c8b4671c5: std::sync::once_lock::OnceLock<T>::get_or_init (src/sync/once_lock.rs:250:15)",
"0x573c8b4671c5: std::io::stdio::stdout (src/io/stdio.rs:618:14)",
"0x573c8b4671c5: std::io::stdio::print_to (src/io/stdio.rs:1020:21)",
"0x573c8b4671c5: std::io::stdio::_print (src/io/stdio.rs:1097:5)",
"0x573c8b0af03a: winterfell::main (winterfell/src/main.rs:36:5)",
"0x573c8b0e8edc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x573c8b1ab25f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b1ab25f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b1ab25f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b1ab25f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1e818b: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x573c8b1f88d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b22656d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b13c7f7: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:36)",
"0x573c8b1acd1f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b1acd1f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b1acd1f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b1acd1f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fb61d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f74f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b22634d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b0467f7: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x573c8b1a2ecd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b1a2ecd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b1a2ecd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b1a2ecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fc09a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f7544: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b22673a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b18550b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x573c8b0514f7: winter_verifier::perform_verification (verifier/src/lib.rs:298:27)",
"0x573c8b05f2d7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x573c8b08aeb4: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x573c8b1a4e94: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b1a4e94: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b1a4e94: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b1a4e94: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x573c8b1fb5da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f9ec4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b226c5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b08c46e: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x573c8b115b21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x573c8b11b498: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x573c8b1dd7ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x573c8b0cedb7: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x573c8b15bbae: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x573c8b05603b: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:102:85)",
"0x573c8b232a6e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x573c8b0cb222: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x573c8b0da32c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x573c8b032aea: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b032aea: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b032aea: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x573c8b1e8ca6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x573c8b0c9508: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x573c8b043238: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x573c8b4122db: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x573c8b411fb1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x573c8b40b2ab: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x573c8b407f3e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x573c8b409400: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x573c8b408bf8: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x573c8b0d0d26: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x573c8b1540af: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x573c8b44bea0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x573c8b44c0d9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x573c8b44c3d2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x573c8b44d159: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x573c8b40301a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x573c8b2b5f7b: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x573c8b2c01a9: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x573c8b2ba416: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x573c8b15707b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x573c8b15428d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x573c8b2c82ea: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x573c8b2a3009: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x573c8b20ca75: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x573c8b083598: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x573c8b286b9b: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x573c8b18d55d: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:243:25)",
"0x573c8b0afd94: winterfell::build_do_work_trace (winterfell/src/main.rs:91:5)",
"0x573c8b14f60b: winterfell::main::{{closure}} (winterfell/src/main.rs:30:23)",
"0x573c8b11aa21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x573c8b11ae08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x573c8b1dd42e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x573c8b186f07: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x573c8b05e3b7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x573c8b44c108: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x573c8b44c4ca: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x573c8b44c4ca: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x573c8b44c26e: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x573c8b44c26e: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x573c8b44c35d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x573c8b1a9abf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b1a9abf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b1a9abf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b1a9abf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fce7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f9925: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b2265dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b025788: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:228:23)",
"0x573c8b0db03c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x573c8b19d909: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b19d909: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b19d909: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b19d909: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fce3a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f8934: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b225a2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b050ba2: winter_verifier::perform_verification (verifier/src/lib.rs:214:41)",
"0x573c8b13d4d0: winter_prover::Prover::generate_proof (prover/src/lib.rs:452:35)",
"0x573c8b0e330c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x573c8b1b2328: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b1b2328: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b1b2328: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x573c8b1ea205: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x573c8b1ea205: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x573c8b1ea205: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x573c8b13dea3: winter_prover::Prover::generate_proof (prover/src/lib.rs:510:39)",
"0x573c8b192b50: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x573c8b185970: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x573c8b2965ed: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x573c8b194f8f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b194f8f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b194f8f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b194f8f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fc06d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f7f75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b22579d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b0453a8: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x573c8b4032c6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x573c8b2966ca: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x573c8b088f66: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x573c8b17fd0d: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x573c8b076973: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:33)",
"0x573c8b140266: winter_prover::Prover::generate_proof (prover/src/lib.rs:417:21)",
"0x573c8b0e03fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x573c8b19fedf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b19fedf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b19fedf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b19fedf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fc88d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f80c5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b2259dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b14d08b: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:648:34)",
"0x573c8b04d41f: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x573c8b04ba15: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x573c8b038106: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x573c8b074ac9: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:290:18)",
"0x573c8b07388e: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:173:30)",
"0x573c8b08931c: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x573c8b05e21f: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x573c8b0c3c29: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x573c8b21bb0a: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x573c8b2327a8: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x573c8b0b7114: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x573c8b0dda1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x573c8b1957f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b1957f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b1957f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b1957f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fb34a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f73a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b22713a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b14cf12: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:640:42)",
"0x573c8b0dd77c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x573c8b1a1bf2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b1a1bf2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b1a1bf2: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b1a1bf2: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x573c8b1fcb7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f7c35: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b2258cd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b15ba6a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x573c8b04dd9a: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x573c8b0e720c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x573c8b1a0e49: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b1a0e49: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b1a0e49: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b1a0e49: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fb93a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f87f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b22601a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b050c5f: winter_verifier::perform_verification (verifier/src/lib.rs:218:40)",
"0x573c8b062ca0: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x573c8b404e9d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x573c8b41042b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x573c8b4141e3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x573c8b038cba: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x573c8b0b0247: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:176:13)",
"0x573c8b0e1b7c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x573c8b19b19f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b19b19f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b19b19f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b19b19f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fc54d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f9355: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b226ddd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b0771b1: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x573c8b19c58d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b19c58d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b19c58d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b19c58d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fbd7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f7d34: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b22630a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b185733: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x573c8b1aa40d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b1aa40d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b1aa40d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b1aa40d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fbe4a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f96e4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b225d1a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b17fba1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x573c8b0768b2: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:28)",
"0x573c8b40804e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x573c8b4099ec: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x573c8b40855a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x573c8b0e6f6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x573c8b1ac22b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b1ac22b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b1ac22b: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b1ac22b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x573c8b1fcaad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f9955: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b11d16d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b15d618: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x573c8b0b021b: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:175:9)",
"0x573c8b18e518: winter_prover::trace::Trace::validate (src/trace/mod.rs:123:26)",
"0x573c8b140578: winter_prover::Prover::generate_proof (prover/src/lib.rs:379:17)",
"0x573c8b1690f5: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x573c8b086517: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x573c8b07358a: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:155:31)",
"0x573c8b076e25: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:128:17)",
"0x573c8b271c6e: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x573c8b1401b5: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:21)",
"0x573c8b41248b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x573c8b411e51: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x573c8b40b54b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x573c8b405c41: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x573c8b4062c7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x573c8b41595b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x573c8b062cb7: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x573c8b18676e: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x573c8b0fe8d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x573c8b11b318: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x573c8b1dc12d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x573c8b045af2: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x573c8b271ac5: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x573c8b0e20bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x573c8b1936af: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b1936af: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b1936af: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b1936af: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1e8705: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x573c8b1f950a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b225b3d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b04c891: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x573c8b049a78: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x573c8b076be1: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:135:9)",
"0x573c8b078572: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x573c8b186d01: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x573c8b29ede9: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x573c8b0511ac: winter_verifier::perform_verification (verifier/src/lib.rs:275:24)",
"0x573c8b295e04: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x573c8b0e069c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x573c8b19670f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b19670f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b19670f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b19670f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fb27d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f9a55: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b2258ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b296ac4: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x573c8b1973a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b1973a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b1973a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b1973a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fc48a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f7fc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b226a3a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b13bd8f: winter_prover::Prover::generate_proof (prover/src/lib.rs:214:39)",
"0x573c8b0308f5: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x573c8b030750: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x573c8b110c21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x573c8b11add8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x573c8b1dc6ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x573c8b0568ec: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x573c8b0e0e6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x573c8b19bb29: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b19bb29: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b19bb29: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b19bb29: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fbcaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1fa084: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b22619a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b0c924b: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x573c8b178b6c: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x573c8b296b73: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x573c8b13fe70: winter_prover::Prover::generate_proof (prover/src/lib.rs:449:13)",
"0x573c8b1a3a3f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b1a3a3f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b1a3a3f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b1a3a3f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fcb1d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f7bb7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b2259bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b063df7: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x573c8b078d9a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x573c8b13c511: winter_prover::Prover::generate_proof (prover/src/lib.rs:274:13)",
"0x573c8b03132d: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x573c8b2144e2: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x573c8b04dc98: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x573c8b043314: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x573c8b157dca: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x573c8b199ac3: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b199ac3: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b199ac3: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b199ac3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fbbd4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f829a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b226654: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b0aed51: winterfell::main (winterfell/src/main.rs:22:32)",
"0x573c8b1a505d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b1a505d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b1a505d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b1a505d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fbdda: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f8de4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b2261ca: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b1857eb: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x573c8b0c3c0e: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x573c8b0d42b9: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x573c8b04e29f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x573c8b0c9df3: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x573c8b186e5f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x573c8b0de49c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x573c8b19ab4f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b19ab4f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b19ab4f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b19ab4f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1e603e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x573c8b1fa035: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b2270ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b0af74e: winterfell::main (winterfell/src/main.rs:65:26)",
"0x573c8b088b8e: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x573c8b218f8c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:40:30)",
"0x573c8b0c5e92: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x573c8b0c5b2c: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x573c8b13eb02: winter_prover::Prover::generate_proof (prover/src/lib.rs:571:9)",
"0x573c8b0735e4: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:156:33)",
"0x573c8b19a4ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b19a4ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b19a4ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b19a4ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fcd3d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f75f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b22721d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b062ff2: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x573c8b12aadf: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:41:22)",
"0x573c8b075b39: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:36)",
"0x573c8b02f4f5: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x573c8b238d85: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x573c8b12018f: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x573c8b0c093d: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x573c8b1a186f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b1a186f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b1a186f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b1a186f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fc61d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f7285: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b225c1d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b13beb3: winter_prover::Prover::generate_proof (prover/src/lib.rs:222:20)",
"0x573c8b192997: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x573c8b031461: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x573c8b0c803f: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x573c8b07d081: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x573c8b07be86: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x573c8b14d12f: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:655:31)",
"0x573c8b19fb04: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b19fb04: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b19fb04: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b19fb04: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x573c8b1fceaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f8d64: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b2270da: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b088e8d: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x573c8b08da4c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x573c8b08c547: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x573c8b185d54: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x573c8b0d0b7f: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x573c8b047a93: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x573c8b18d131: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x573c8b161853: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x573c8b214832: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x573c8b0256e8: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:227:28)",
"0x573c8b18e9a5: winter_prover::trace::Trace::validate (src/trace/mod.rs:179:13)",
"0x573c8b0df44a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x573c8b194539: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b194539: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b194539: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b194539: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fbb7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f9b14: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b22744a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b13c4ea: winter_prover::Prover::generate_proof (prover/src/lib.rs:272:43)",
"0x573c8b045eae: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x573c8b049a1c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x573c8b17fe73: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x573c8b185ad4: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x573c8b0d4e4c: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x573c8b185f37: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x573c8b13375a: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x573c8b217852: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:503:32)",
"0x573c8b234dc6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x573c8b25293a: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x573c8b21ce27: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x573c8b227a22: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x573c8b402c69: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x573c8b3ffc1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x573c8b3fcdb6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b3fcdb6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b3fcdb6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b0c3b68: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x573c8b1afe6f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b1afe6f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b1afe6f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b1afe6f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fbecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f7825: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b226afd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b296c5a: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x573c8b0c09b6: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x573c8b1788a2: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x573c8b04024c: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x573c8b1add2f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b1add2f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b1add2f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b1add2f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fb56d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f8125: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b22698d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b295d29: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x573c8b02389d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x573c8b0566db: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x573c8b0e5fac: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x573c8b19b8df: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b19b8df: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b19b8df: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b19b8df: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1e6b4e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x573c8b1f9415: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b2272ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b0584f7: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x573c8b1690d2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x573c8b1695c3: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x573c8b0e917c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x573c8b1abeef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b1abeef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b1abeef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b1abeef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fc27d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f7c65: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b2089bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b13c033: winter_prover::Prover::generate_proof (prover/src/lib.rs:248:41)",
"0x573c8b0cb2d3: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x573c8b0c0afb: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x573c8b19869a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b19869a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b19869a: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b19869a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x573c8b1fb4cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f9a1a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b283f4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b0bd243: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x573c8b1b39b5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b1b39b5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b1b39b5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b13c909: winter_prover::Prover::generate_proof (prover/src/lib.rs:309:32)",
"0x573c8b17882f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x573c8b286b89: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x573c8b13e6b8: winter_prover::Prover::generate_proof (prover/src/lib.rs:558:13)",
"0x573c8b0dd23c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x573c8b197bd9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b197bd9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b197bd9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b197bd9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fc00a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f9c44: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b226c2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b0454b2: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x573c8b169347: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x573c8b08607a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x573c8b1b3af5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b1b3af5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b1b3af5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b0bf499: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x573c8b178921: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x573c8b284472: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x573c8b0c099f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x573c8b1934b9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b1934b9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b1934b9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b1934b9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fb8ea: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f84f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b22639a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b129fe8: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:83:9)",
"0x573c8b0c5d52: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x573c8b08fc4b: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x573c8b08631d: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x573c8b0e6ccc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x573c8b1b3c35: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b1b3c35: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b1b3c35: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b13c88e: winter_prover::Prover::generate_proof (prover/src/lib.rs:307:44)",
"0x573c8b19d4cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b19d4cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b19d4cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b19d4cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fc0dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f93d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b225a6d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b13bcd2: winter_prover::Prover::generate_proof (prover/src/lib.rs:210:38)",
"0x573c8b19a2ef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b19a2ef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b19a2ef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b19a2ef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fc4cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f8d15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b2257dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b0568d5: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x573c8b0de1fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x573c8b1a0622: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b1a0622: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b1a0622: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b1a0622: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x573c8b1fbdaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f7484: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b2148ea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b183d67: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x573c8b19e95f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b19e95f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b19e95f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b19e95f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fca4d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f8e15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b226f5d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b29c7af: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x573c8b047d08: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x573c8b196b59: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b196b59: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b196b59: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b196b59: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fb6ba: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f99a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b225eea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b13de8c: winter_prover::Prover::generate_proof (prover/src/lib.rs:505:52)",
"0x573c8b1ae9dd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b1ae9dd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b1ae9dd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b1ae9dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fbc7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f8ff4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b22686a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b18567b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x573c8b1182a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x573c8b11ba98: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x573c8b1db91b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x573c8b0bd0fa: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x573c8b1a70ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b1a70ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b1a70ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b1a70ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fb44d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f7625: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b22613d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b02fd28: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x573c8b13fe30: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:13)",
"0x573c8b2182f8: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:651:17)",
"0x573c8b05f325: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x573c8b11dc07: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x573c8b040237: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x573c8b077a29: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x573c8b2351d6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x573c8b1ad4f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b1ad4f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b1ad4f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b1ad4f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fb9da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f8bc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b225eba: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b14cfcf: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:644:36)",
"0x573c8b0dad9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x573c8b1a3e5f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x573c8b1a3e5f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x573c8b1a3e5f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x573c8b1a3e5f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x573c8b1fb3cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x573c8b1f8e87: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x573c8b225e8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x573c8b12abcd: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:51:26)",
"0x573c8b0f3c01: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x573c8b11b408: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x573c8b1ddc54: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x573c8b140285: winter_prover::Prover::generate_proof (prover/src/lib.rs:418:17)",
"0x573c8b178bbd: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x573c8b214c5a: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x573c8b2886a7: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x573c8b16b889: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x573c8b0f8611: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x573c8b11b288: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x573c8b1d9c0b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x573c8b0893c9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)"
]
}