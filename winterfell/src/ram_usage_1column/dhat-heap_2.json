{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell",
"pid": 27566,
"tg": 2360679,
"te": 2407862,
"pps": [
{
"tb": 4194304,
"tbk": 1,
"tl": 1958619,
"mb": 4194304,
"mbk": 1,
"gb": 4194304,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9
]
},
{
"tb": 5520,
"tbk": 10,
"tl": 3352,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
13,
14,
15
]
},
{
"tb": 96,
"tbk": 1,
"tl": 2400963,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
17,
18,
19,
20,
21,
22,
23,
24
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2381094,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35
]
},
{
"tb": 64,
"tbk": 1,
"tl": 691781,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
37,
38,
39,
40,
41,
42,
43,
44,
45
]
},
{
"tb": 1440,
"tbk": 12,
"tl": 4942,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
46,
47,
48,
49,
50,
51
]
},
{
"tb": 2097152,
"tbk": 4,
"tl": 180340,
"mb": 2097152,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
37,
38,
39,
52,
53,
54,
55,
56,
57,
58,
59
]
},
{
"tb": 12032,
"tbk": 94,
"tl": 114,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
60,
61,
62,
63,
64,
65,
66
]
},
{
"tb": 1968,
"tbk": 2,
"tl": 52,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
67,
68,
69,
70,
71,
72
]
},
{
"tb": 64,
"tbk": 1,
"tl": 4666,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
46,
73,
74,
75,
76,
77
]
},
{
"tb": 2048,
"tbk": 32,
"tl": 62536,
"mb": 2048,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
37,
38,
39,
40,
41,
42,
78,
79,
80
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1208,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
37,
38,
39,
40,
41,
42,
81,
82,
83
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
84,
85,
86,
87,
88
]
},
{
"tb": 96,
"tbk": 1,
"tl": 1182812,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
89,
90,
91,
56,
57,
58,
92,
93,
94
]
},
{
"tb": 384,
"tbk": 2,
"tl": 68,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
95,
96,
97,
98,
99,
100,
101,
102,
103
]
},
{
"tb": 256,
"tbk": 1,
"tl": 10,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
104,
105,
106,
107,
108,
109,
110,
111,
112,
113,
114
]
},
{
"tb": 16,
"tbk": 1,
"tl": 75,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
84,
115,
116,
117,
118,
119,
120
]
},
{
"tb": 3008,
"tbk": 3,
"tl": 2629,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
121,
122,
123,
124,
125,
126,
127
]
},
{
"tb": 96,
"tbk": 1,
"tl": 3923,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
129,
130,
131,
132,
133,
134
]
},
{
"tb": 96,
"tbk": 1,
"tl": 12,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
84,
135,
136,
137,
114,
138
]
},
{
"tb": 3176,
"tbk": 16,
"tl": 64,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
104,
105,
106,
107,
108,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 1048576,
"tbk": 4,
"tl": 4002159,
"mb": 1048576,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
37,
38,
39,
52,
53,
54,
145,
146,
147
]
},
{
"tb": 64,
"tbk": 1,
"tl": 183477,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
148,
149,
150,
151,
152,
153,
154
]
},
{
"tb": 598016,
"tbk": 3,
"tl": 55241,
"mb": 598016,
"mbk": 3,
"gb": 524288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
155,
156,
157
]
},
{
"tb": 48,
"tbk": 1,
"tl": 183481,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
148,
149,
150,
151,
158,
153,
154
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1477,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
46,
159,
160,
161,
162,
163
]
},
{
"tb": 2232,
"tbk": 3,
"tl": 11441,
"mb": 2232,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
164,
165,
166,
167,
168,
169,
65,
66
]
},
{
"tb": 96,
"tbk": 1,
"tl": 4670,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
46,
159,
160,
161,
170,
77
]
},
{
"tb": 24,
"tbk": 1,
"tl": 202,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
171,
172,
173,
174,
175,
176,
177,
178
]
},
{
"tb": 72,
"tbk": 1,
"tl": 45647,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
89,
90,
91,
56,
57,
58,
179,
180,
114
]
},
{
"tb": 96256,
"tbk": 3,
"tl": 1251,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
181,
182,
183,
184,
185,
186,
187
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 2379007,
"mb": 131072,
"mbk": 1,
"gb": 131072,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
60,
61,
62,
188,
189,
190,
191
]
},
{
"tb": 16,
"tbk": 1,
"tl": 102,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
84,
115,
192,
117,
193,
194,
195
]
},
{
"tb": 240,
"tbk": 2,
"tl": 737225,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
84,
196,
197,
114,
138
]
},
{
"tb": 2097152,
"tbk": 4,
"tl": 393738,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
198,
199,
200,
201,
202,
203,
204,
205
]
},
{
"tb": 16192,
"tbk": 93,
"tl": 345538,
"mb": 16192,
"mbk": 93,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
206,
207,
169,
65
]
},
{
"tb": 12032,
"tbk": 3,
"tl": 411,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
181,
182,
183,
184,
185,
186,
208
]
},
{
"tb": 32,
"tbk": 1,
"tl": 130,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
37,
38,
39,
52,
53,
54,
209,
210,
211
]
},
{
"tb": 144,
"tbk": 1,
"tl": 45413,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
212,
213,
214,
215,
216,
217,
218,
219,
180,
114
]
},
{
"tb": 64,
"tbk": 1,
"tl": 133,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
37,
38,
39,
52,
53,
54,
220,
210,
211
]
},
{
"tb": 512,
"tbk": 1,
"tl": 5982,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
60,
61,
62,
63,
221,
222,
223
]
},
{
"tb": 32,
"tbk": 1,
"tl": 72,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
224,
225,
226,
227,
228,
229,
230,
231,
232
]
},
{
"tb": 32,
"tbk": 1,
"tl": 610720,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
128,
129,
233,
234,
235,
236,
114
]
},
{
"tb": 3120,
"tbk": 30,
"tl": 427,
"mb": 416,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
104,
237,
238,
239,
240,
241,
242
]
},
{
"tb": 1048608,
"tbk": 3,
"tl": 18705,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
60,
61,
62,
188,
243,
244,
245
]
},
{
"tb": 128,
"tbk": 2,
"tl": 1383086,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
46,
246,
247,
248,
249,
250
]
},
{
"tb": 512,
"tbk": 1,
"tl": 45594,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
46,
251,
252,
253,
254,
114
]
},
{
"tb": 33554432,
"tbk": 2,
"tl": 2948673,
"mb": 33554432,
"mbk": 2,
"gb": 33554432,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
181,
182,
183,
184,
185,
186,
255
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 47269,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
37,
38,
39,
40,
41,
42,
256,
163,
114
]
},
{
"tb": 32,
"tbk": 1,
"tl": 6595,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
206,
257,
258,
223
]
},
{
"tb": 2512,
"tbk": 10,
"tl": 1028,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
104,
105,
259,
260,
261,
262,
263,
264,
265,
266
]
},
{
"tb": 128,
"tbk": 1,
"tl": 6585,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
206,
267,
258,
223
]
},
{
"tb": 64,
"tbk": 1,
"tl": 4862,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
46,
73,
74,
75,
268,
269
]
},
{
"tb": 512,
"tbk": 1,
"tl": 3140,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
60,
61,
62,
270,
271,
120,
88
]
},
{
"tb": 480,
"tbk": 4,
"tl": 6872,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
129,
233,
234,
235,
272,
273
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1827,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
121,
122,
123,
124,
125,
274,
163
]
},
{
"tb": 32,
"tbk": 1,
"tl": 610724,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
128,
129,
233,
234,
235,
275,
114
]
},
{
"tb": 216,
"tbk": 1,
"tl": 6662,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
276,
277,
278,
279,
280,
281,
282,
283,
284
]
},
{
"tb": 32,
"tbk": 1,
"tl": 194,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
84,
285,
286,
287,
288,
289,
290
]
},
{
"tb": 192,
"tbk": 2,
"tl": 10,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
46,
73,
74,
75,
291,
292
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4850,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
37,
38,
39,
52,
53,
54,
293,
294,
295
]
},
{
"tb": 480,
"tbk": 4,
"tl": 4646,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
129,
233,
234,
235,
272,
296
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
297,
298,
299,
300,
301,
302,
303,
304,
305,
87
]
},
{
"tb": 3008,
"tbk": 3,
"tl": 11971,
"mb": 3008,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
121,
122,
123,
124,
306,
65,
66
]
},
{
"tb": 72,
"tbk": 3,
"tl": 65,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
307,
308,
309,
310,
311,
312,
313,
314,
315
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 1389265,
"mb": 4194304,
"mbk": 1,
"gb": 4194304,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
316,
317,
318
]
},
{
"tb": 48,
"tbk": 2,
"tl": 68,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
84,
319,
320,
321,
322,
323,
324
]
},
{
"tb": 64,
"tbk": 1,
"tl": 70223,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
46,
73,
74,
75,
325,
326
]
},
{
"tb": 512,
"tbk": 1,
"tl": 17,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
60,
61,
62,
327,
328,
120,
88
]
},
{
"tb": 512,
"tbk": 1,
"tl": 14,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
60,
61,
62,
188,
243,
329,
328
]
},
{
"tb": 128,
"tbk": 1,
"tl": 2379226,
"mb": 128,
"mbk": 1,
"gb": 128,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
330,
331,
332,
333,
334,
335,
336,
337
]
},
{
"tb": 144,
"tbk": 1,
"tl": 8789,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
338,
339,
340,
341,
342,
343,
113,
114,
138
]
},
{
"tb": 128,
"tbk": 1,
"tl": 691786,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
330,
344,
345,
346,
347,
348,
349,
350,
44,
45
]
},
{
"tb": 48,
"tbk": 2,
"tl": 102,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
84,
351,
320,
321,
322,
323,
324
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1509,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
84,
352,
353,
114,
138
]
},
{
"tb": 1920,
"tbk": 10,
"tl": 3757,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
104,
354,
355,
356,
357,
358,
359
]
},
{
"tb": 129,
"tbk": 1,
"tl": 12,
"mb": 129,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
297,
298,
299,
300,
360,
361,
362,
363,
364,
365
]
},
{
"tb": 512,
"tbk": 1,
"tl": 15,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
60,
61,
62,
188,
243,
366,
367
]
},
{
"tb": 96,
"tbk": 1,
"tl": 30,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
46,
159,
160,
161,
368,
367
]
},
{
"tb": 96,
"tbk": 1,
"tl": 21,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
84,
135,
117,
118,
119,
120,
88
]
},
{
"tb": 4752,
"tbk": 30,
"tl": 639,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
104,
105,
106,
107,
108,
139,
140,
141,
369,
370,
371
]
},
{
"tb": 512,
"tbk": 1,
"tl": 28,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
60,
61,
62,
372,
328,
120,
88
]
},
{
"tb": 24,
"tbk": 1,
"tl": 115,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
84,
373,
374,
44,
375,
119,
120
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1753,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
104,
105,
376,
377,
378,
379,
380,
381,
382,
383
]
},
{
"tb": 24,
"tbk": 1,
"tl": 737244,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
384,
385,
386,
387,
388,
389,
390,
391,
392,
197
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1743,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
104,
105,
393,
394,
395,
396,
397,
398,
399,
400
]
},
{
"tb": 512,
"tbk": 1,
"tl": 9,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
401,
402,
403,
404,
405,
406,
407,
408
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 2563,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
409,
410,
411,
412,
413,
414,
415,
416
]
},
{
"tb": 10488,
"tbk": 19,
"tl": 4139,
"mb": 3312,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
417,
418,
419
]
},
{
"tb": 128,
"tbk": 2,
"tl": 200521,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
181,
182,
183,
184,
185,
186,
420
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 61934,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
37,
38,
39,
52,
53,
54,
421,
422,
353
]
},
{
"tb": 12032,
"tbk": 3,
"tl": 2029,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
423,
424,
425,
426,
427,
127,
113,
114
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1721,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
104,
105,
428,
429,
430,
431,
432,
433,
434,
435
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 2878,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
129,
436,
437,
438,
439,
440
]
},
{
"tb": 1504,
"tbk": 3,
"tl": 1951,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
441,
442,
443,
444,
445,
446,
447,
448
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2379381,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
449,
450,
451,
452,
453,
454,
455,
456
]
},
{
"tb": 24,
"tbk": 2,
"tl": 2,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
297,
298,
299,
300,
301,
302,
303,
304,
305,
457
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2022,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
458,
459,
460,
461,
462,
463,
464,
465
]
},
{
"tb": 263,
"tbk": 5,
"tl": 194661,
"mb": 136,
"mbk": 1,
"gb": 136,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
25,
46,
466,
467,
468,
469,
470
]
},
{
"tb": 128,
"tbk": 1,
"tl": 6654,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
330,
331,
332,
333,
334,
335,
471,
472
]
},
{
"tb": 48,
"tbk": 2,
"tl": 1474457,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
384,
385,
386,
387,
388,
389,
390,
391,
473,
474
]
},
{
"tb": 16,
"tbk": 1,
"tl": 192670,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
475,
476,
477,
478,
479,
480,
481,
482,
483
]
},
{
"tb": 3176,
"tbk": 16,
"tl": 62,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
104,
105,
106,
107,
108,
139,
140,
141,
142,
274,
163
]
},
{
"tb": 896,
"tbk": 6,
"tl": 6697,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
46,
73,
74,
75,
484,
485
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 655334,
"mb": 524288,
"mbk": 1,
"gb": 524288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
181,
182,
183,
184,
185,
186,
486
]
},
{
"tb": 192,
"tbk": 3,
"tl": 32096,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
60,
61,
62,
188,
189,
487,
488
]
},
{
"tb": 64,
"tbk": 1,
"tl": 105,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
37,
38,
39,
40,
41,
42,
43,
44,
375
]
},
{
"tb": 168,
"tbk": 2,
"tl": 1458602,
"mb": 168,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
489,
490,
491,
492,
493,
494,
495,
496
]
},
{
"tb": 96,
"tbk": 1,
"tl": 70219,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
46,
159,
160,
161,
170,
326
]
},
{
"tb": 48,
"tbk": 2,
"tl": 1383351,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
384,
385,
386,
387,
388,
389,
390,
391,
497,
498
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2379050,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
499,
500,
501,
502,
503,
504,
505,
506,
507
]
},
{
"tb": 512,
"tbk": 1,
"tl": 55,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
60,
61,
62,
508,
367,
120,
88
]
},
{
"tb": 96,
"tbk": 1,
"tl": 26,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
46,
159,
160,
161,
509,
367
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1734,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
37,
38,
39,
40,
41,
42,
510,
223,
88
]
},
{
"tb": 128,
"tbk": 1,
"tl": 3133,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
511,
512,
513,
514,
515,
516,
517,
518
]
},
{
"tb": 64,
"tbk": 1,
"tl": 3,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
84,
85,
86,
457,
519,
114,
138
]
},
{
"tb": 48,
"tbk": 1,
"tl": 431057,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
520,
521,
522,
523,
524,
525,
526,
527
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 26627,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
60,
61,
62,
188,
189,
487,
528
]
},
{
"tb": 11744,
"tbk": 32,
"tl": 78260,
"mb": 11744,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
206,
207,
529,
530
]
},
{
"tb": 512,
"tbk": 1,
"tl": 21,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
37,
38,
39,
52,
53,
54,
531,
367,
120
]
},
{
"tb": 16,
"tbk": 1,
"tl": 22,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
475,
532,
533,
534,
535,
536,
537,
538,
114,
138
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
84,
115,
192,
136,
137,
114,
138
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1709,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
121,
122,
123,
124,
125,
143,
144
]
},
{
"tb": 12032,
"tbk": 94,
"tl": 79,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
539,
540,
541,
542,
543,
544,
545,
546
]
},
{
"tb": 2097152,
"tbk": 32768,
"tl": 23351,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
37,
38,
39,
52,
53,
54,
547,
548,
549
]
},
{
"tb": 12032,
"tbk": 3,
"tl": 1240,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
181,
182,
183,
184,
185,
186,
550
]
},
{
"tb": 64,
"tbk": 1,
"tl": 70214,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
46,
73,
74,
75,
76,
326
]
},
{
"tb": 1440,
"tbk": 12,
"tl": 2879,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
46,
47,
48,
49,
50,
551
]
},
{
"tb": 128,
"tbk": 1,
"tl": 110,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
330,
344,
345,
346,
347,
348,
349,
350,
44,
375
]
},
{
"tb": 3176,
"tbk": 16,
"tl": 445,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
104,
105,
106,
107,
108,
139,
140,
141,
369,
370,
552
]
},
{
"tb": 224,
"tbk": 1,
"tl": 5543,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
46,
553,
554,
555,
556,
66
]
},
{
"tb": 40,
"tbk": 1,
"tl": 983904,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
557,
558,
559,
560,
561,
562,
563,
564,
565
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 3930,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
297,
566,
567,
568,
569,
134,
144,
570
]
},
{
"tb": 32,
"tbk": 1,
"tl": 394654,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
104,
105,
571,
572,
573,
574,
575,
197,
114
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 394641,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
60,
61,
62,
188,
189,
487,
576
]
},
{
"tb": 56,
"tbk": 1,
"tl": 2343,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
84,
577,
578,
223,
88
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2401076,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
579,
580,
581,
582,
583,
584,
585,
586
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1713,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
164,
165,
166,
167,
587,
143,
144,
570
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 15788,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
60,
61,
62,
188,
189,
487,
588
]
},
{
"tb": 16,
"tbk": 1,
"tl": 105,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
84,
115,
116,
117,
193,
194,
195
]
},
{
"tb": 512,
"tbk": 1,
"tl": 11,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
37,
38,
39,
52,
53,
54,
589,
113,
114
]
},
{
"tb": 160,
"tbk": 3,
"tl": 40576,
"mb": 160,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
590,
591,
592,
593,
594,
595,
596,
597
]
},
{
"tb": 299008,
"tbk": 3,
"tl": 37340,
"mb": 294912,
"mbk": 2,
"gb": 262144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
60,
61,
62,
188,
598,
599,
157
]
},
{
"tb": 432,
"tbk": 3,
"tl": 1227,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
148,
149,
150,
151,
600,
601,
82
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1659,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
602,
603,
604,
605,
606,
607,
608,
609,
610
]
},
{
"tb": 96,
"tbk": 1,
"tl": 1896,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
46,
611,
612,
613,
614,
144
]
},
{
"tb": 160,
"tbk": 1,
"tl": 4889,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
46,
615,
616,
617,
618,
223
]
},
{
"tb": 96,
"tbk": 1,
"tl": 2381113,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
619,
620,
621,
622,
623,
624,
625,
626,
627
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
297,
298,
299,
300,
301,
302,
303,
304,
628,
457
]
},
{
"tb": 16,
"tbk": 1,
"tl": 737241,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
37,
38,
39,
52,
53,
54,
629,
392,
197
]
},
{
"tb": 64,
"tbk": 1,
"tl": 4661,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
60,
61,
62,
630,
631,
120,
88
]
},
{
"tb": 8388608,
"tbk": 131072,
"tl": 115615,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
37,
38,
39,
40,
41,
42,
632,
633,
8
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1650,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
148,
149,
150,
151,
634,
635,
636
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 3936,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
297,
566,
567,
568,
637,
134,
144,
570
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2967,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
164,
165,
166,
167,
168,
638,
639,
640
]
},
{
"tb": 96,
"tbk": 1,
"tl": 14,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
46,
159,
160,
161,
641,
353
]
},
{
"tb": 480,
"tbk": 4,
"tl": 182,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
129,
233,
234,
235,
642,
274
]
},
{
"tb": 576,
"tbk": 2,
"tl": 45,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
643,
644,
645,
646,
647,
648,
649,
650,
651
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1213,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
104,
105,
106,
107,
108,
109,
110,
111,
652,
82,
83
]
},
{
"tb": 96,
"tbk": 1,
"tl": 610730,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
25,
46,
159,
160,
161,
653,
114
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2386123,
"mb": 1024,
"mbk": 1,
"gb": 1024,
"gbk": 1,
"eb": 1024,
"ebk": 1,
"fs": [
654,
655,
656,
657,
658,
659,
660,
661,
662,
663,
664,
665,
666,
667,
668,
669,
670,
671,
672,
673,
674
]
},
{
"tb": 96,
"tbk": 1,
"tl": 5537,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
46,
159,
160,
161,
675,
66
]
},
{
"tb": 216,
"tbk": 1,
"tl": 2379240,
"mb": 216,
"mbk": 1,
"gb": 216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
276,
676,
677,
678,
679,
680,
681,
682,
683
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1420,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
129,
233,
234,
235,
684,
134
]
},
{
"tb": 320,
"tbk": 2,
"tl": 1383343,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
46,
685,
686,
687,
688,
498
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1831,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
164,
165,
166,
167,
587,
274,
163,
114
]
},
{
"tb": 16,
"tbk": 1,
"tl": 45404,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
37,
38,
39,
52,
53,
54,
629,
689,
216,
217,
218
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2051,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
690,
691,
692,
693,
694,
695,
696,
697,
698
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 72377,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
60,
61,
62,
188,
189,
487,
699
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
297,
298,
299,
300,
301,
302,
303,
304,
628,
87
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1642,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
700,
701,
702,
703,
704,
705,
706,
707,
708
]
},
{
"tb": 96,
"tbk": 1,
"tl": 1010434,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
709,
710,
711,
712,
713,
714,
715,
716
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 85,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
60,
61,
62,
188,
189,
487,
717
]
},
{
"tb": 256,
"tbk": 1,
"tl": 577,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
104,
105,
571,
572,
573,
718,
370,
719,
720
]
},
{
"tb": 2080,
"tbk": 33,
"tl": 58713,
"mb": 2048,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
37,
38,
39,
52,
53,
54,
55,
56,
57,
58,
721
]
},
{
"tb": 256,
"tbk": 1,
"tl": 553,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
104,
105,
571,
572,
573,
718,
370,
552,
722
]
},
{
"tb": 8,
"tbk": 1,
"tl": 15,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
104,
105,
723,
724,
725,
726,
727,
728,
729,
730
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1653,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
148,
149,
150,
151,
731,
635,
636
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1712,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
84,
732,
353,
114,
138
]
},
{
"tb": 16,
"tbk": 1,
"tl": 72,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
84,
115,
192,
117,
118,
119,
120
]
},
{
"tb": 12032,
"tbk": 3,
"tl": 481,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
60,
61,
62,
188,
243,
733,
601
]
},
{
"tb": 1048608,
"tbk": 3,
"tl": 18726,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
60,
61,
62,
188,
734,
245,
735
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1010934,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
736,
737,
738,
739,
740,
741,
742,
743,
744
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 167475,
"mb": 2097152,
"mbk": 1,
"gb": 2097152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
60,
61,
62,
188,
745,
746,
747
]
},
{
"tb": 1572864,
"tbk": 3,
"tl": 136814,
"mb": 1572864,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
37,
38,
39,
52,
53,
54,
55,
56,
57,
58,
179
]
},
{
"tb": 512,
"tbk": 1,
"tl": 45,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
748,
749,
750,
751,
752,
753,
754,
755
]
},
{
"tb": 64,
"tbk": 1,
"tl": 17021,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
148,
149,
150,
151,
756,
137,
114
]
},
{
"tb": 64,
"tbk": 1,
"tl": 160,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
46,
73,
74,
75,
268,
757
]
},
{
"tb": 48,
"tbk": 2,
"tl": 740748,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
758,
759,
760,
761,
762,
763,
764,
765,
766
]
},
{
"tb": 160,
"tbk": 1,
"tl": 4845,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
767,
768,
769,
770,
771,
772,
773,
774,
775
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 3138,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
60,
61,
62,
63,
776,
777,
639
]
},
{
"tb": 2280,
"tbk": 5,
"tl": 2021,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
778,
779,
780,
781,
782,
783
]
},
{
"tb": 2880,
"tbk": 12,
"tl": 1825,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
46,
73,
74,
75,
784,
785
]
},
{
"tb": 3176,
"tbk": 16,
"tl": 459,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
104,
105,
106,
107,
108,
139,
140,
141,
369,
370,
719
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2329,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
297,
566,
567,
568,
786,
787,
163,
114
]
},
{
"tb": 16,
"tbk": 1,
"tl": 6,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
84,
115,
116,
136,
137,
114,
138
]
},
{
"tb": 32,
"tbk": 1,
"tl": 67,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
224,
788,
789,
790,
791,
792,
793,
794,
795
]
},
{
"tb": 64,
"tbk": 1,
"tl": 4866,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
46,
73,
74,
75,
796,
269
]
},
{
"tb": 24,
"tbk": 1,
"tl": 16161,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
797,
798,
799,
800,
801,
802,
803,
804,
805
]
},
{
"tb": 598016,
"tbk": 3,
"tl": 50928,
"mb": 598016,
"mbk": 3,
"gb": 524288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
316,
317,
806
]
},
{
"tb": 1088,
"tbk": 2,
"tl": 33,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
807,
808,
809,
810,
811,
812
]
},
{
"tb": 1152,
"tbk": 4,
"tl": 137,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
46,
813,
814,
815,
816,
817
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 8272,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
181,
182,
183,
184,
185,
186,
818
]
},
{
"tb": 1048576,
"tbk": 4,
"tl": 4730737,
"mb": 1048576,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
37,
38,
39,
52,
53,
54,
55,
56,
57,
58,
92
]
},
{
"tb": 1048576,
"tbk": 4,
"tl": 9603642,
"mb": 1048576,
"mbk": 4,
"gb": 1048576,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
60,
61,
62,
188,
819,
820,
821
]
},
{
"tb": 89600,
"tbk": 351,
"tl": 169020,
"mb": 16128,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
822,
823,
824,
825,
826,
827,
828,
829
]
},
{
"tb": 128,
"tbk": 1,
"tl": 67,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
60,
61,
62,
63,
830,
831,
223
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 1280,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
129,
436,
437,
438,
439,
832
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 3370,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
60,
61,
62,
63,
776,
833,
530
]
},
{
"tb": 12032,
"tbk": 3,
"tl": 13830,
"mb": 12032,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
60,
61,
62,
834,
65,
66,
223
]
},
{
"tb": 288,
"tbk": 1,
"tl": 12141,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
46,
835,
836,
837,
838,
157
]
},
{
"tb": 299008,
"tbk": 3,
"tl": 32871,
"mb": 262144,
"mbk": 1,
"gb": 262144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
60,
61,
62,
188,
839,
840,
841
]
},
{
"tb": 96,
"tbk": 1,
"tl": 4873,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
46,
842,
843,
844,
845,
120
]
},
{
"tb": 64,
"tbk": 1,
"tl": 4675,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
46,
73,
74,
75,
325,
77
]
},
{
"tb": 24,
"tbk": 1,
"tl": 13,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
89,
90,
91,
56,
57,
58,
721,
846,
519
]
},
{
"tb": 32,
"tbk": 1,
"tl": 737219,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
129,
233,
234,
235,
847,
848
]
},
{
"tb": 2392064,
"tbk": 3,
"tl": 56140,
"mb": 2392064,
"mbk": 3,
"gb": 2097152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
60,
61,
62,
188,
849,
850,
157
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1900,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
89,
90,
91,
56,
57,
58,
721,
851,
144
]
},
{
"tb": 524288,
"tbk": 2,
"tl": 861283,
"mb": 524288,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
37,
38,
39,
40,
41,
42,
852,
853,
854
]
},
{
"tb": 512,
"tbk": 1,
"tl": 59,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
60,
61,
62,
855,
367,
120,
88
]
},
{
"tb": 72,
"tbk": 1,
"tl": 1365678,
"mb": 72,
"mbk": 1,
"gb": 72,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
856,
857,
858,
859,
860,
861,
862,
863,
864
]
},
{
"tb": 4752,
"tbk": 30,
"tl": 74,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
104,
105,
106,
107,
108,
139,
140,
141,
142,
126,
127
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1365233,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
736,
865,
866,
867,
868,
114,
138
]
},
{
"tb": 384,
"tbk": 1,
"tl": 691688,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
869,
870,
871,
872,
873,
874,
875,
876,
877
]
},
{
"tb": 96,
"tbk": 1,
"tl": 12,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
212,
878,
879,
880,
881,
882,
883,
884,
885
]
},
{
"tb": 128,
"tbk": 1,
"tl": 346,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
46,
886,
887,
888,
889,
126
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2560,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
164,
165,
166,
167,
168,
529,
530,
578
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1182820,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
890,
891,
892,
893,
894,
895,
896,
897,
898
]
},
{
"tb": 3670016,
"tbk": 7,
"tl": 5079016,
"mb": 3670016,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
60,
61,
62,
188,
899,
900,
901
]
},
{
"tb": 65744,
"tbk": 1279,
"tl": 228249,
"mb": 13120,
"mbk": 7,
"gb": 160,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
25,
46,
466,
902,
903,
904,
905,
906,
907
]
},
{
"tb": 8,
"tbk": 1,
"tl": 983879,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
908,
909,
910,
911,
912,
913,
914,
915,
916
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 594928,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
37,
38,
39,
52,
53,
54,
917,
918,
919
]
},
{
"tb": 1040,
"tbk": 10,
"tl": 263,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
104,
237,
238,
239,
920,
921,
922
]
},
{
"tb": 80,
"tbk": 1,
"tl": 2400988,
"mb": 80,
"mbk": 1,
"gb": 80,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
923,
924,
925,
926,
927,
928,
929,
930,
931
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
84,
285,
932,
88
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1736,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
104,
105,
933,
934,
935,
936,
937,
938,
939,
940
]
},
{
"tb": 512,
"tbk": 1,
"tl": 3284,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
941,
942,
943,
944,
945,
946,
947,
948
]
},
{
"tb": 64,
"tbk": 1,
"tl": 96,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
181,
182,
183,
184,
185,
186,
949
]
},
{
"tb": 752,
"tbk": 3,
"tl": 3014,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
104,
105,
106,
107,
108,
109,
110,
111,
950,
951,
82
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 388502,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
60,
61,
62,
188,
952,
953,
954
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1365237,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
955,
956,
957,
958,
114,
138
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1365242,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
959,
960,
961,
962,
963,
114,
138
]
},
{
"tb": 192,
"tbk": 1,
"tl": 4858,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
46,
964,
965,
966,
967,
120
]
},
{
"tb": 64,
"tbk": 1,
"tl": 165,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
46,
73,
74,
75,
796,
757
]
},
{
"tb": 2400,
"tbk": 20,
"tl": 1874,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
129,
233,
234,
235,
968,
370
]
},
{
"tb": 48,
"tbk": 1,
"tl": 16152,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
84,
969,
970,
971,
972,
973,
974
]
},
{
"tb": 1440,
"tbk": 12,
"tl": 360,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
129,
233,
234,
235,
642,
126
]
},
{
"tb": 32,
"tbk": 1,
"tl": 44692,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
104,
105,
106,
107,
108,
139,
140,
141,
975,
180,
114
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 53,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
37,
38,
39,
52,
53,
54,
421,
976,
114
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 247253,
"mb": 4194304,
"mbk": 1,
"gb": 4194304,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
977,
978,
979
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1728,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
104,
105,
980,
981,
982,
983,
984,
985,
986,
987
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1010532,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
908,
988,
989,
990,
991,
992,
993,
994,
995
]
},
{
"tb": 72,
"tbk": 1,
"tl": 4549,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
84,
996,
570,
114,
138
]
},
{
"tb": 32,
"tbk": 1,
"tl": 67,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
60,
61,
62,
63,
997,
831,
223
]
},
{
"tb": 12032,
"tbk": 3,
"tl": 1800,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
423,
998,
999,
1000,
1001,
1002,
1003,
1004,
1005
]
},
{
"tb": 2880,
"tbk": 10,
"tl": 3676,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
104,
1006,
1007,
1008,
1009,
1010,
1011
]
},
{
"tb": 11744,
"tbk": 32,
"tl": 90627,
"mb": 11744,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
206,
207,
638,
639
]
},
{
"tb": 96,
"tbk": 1,
"tl": 45395,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
16,
89,
90,
91,
56,
57,
58,
59,
180,
114
]
},
{
"tb": 512,
"tbk": 1,
"tl": 6891,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
37,
38,
39,
40,
41,
42,
1012,
1013,
1014
]
},
{
"tb": 96,
"tbk": 1,
"tl": 9,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
46,
159,
160,
161,
1015,
223
]
},
{
"tb": 80,
"tbk": 1,
"tl": 691529,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1016,
1017,
1018,
1019,
1020,
1021,
1022,
1023,
1024
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 72527,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
37,
38,
39,
40,
41,
42,
1025,
1026,
114
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 8233,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
181,
182,
183,
184,
185,
186,
1027
]
},
{
"tb": 43442,
"tbk": 29,
"tl": 19559,
"mb": 21760,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
129,
436,
437,
438,
439,
1028
]
},
{
"tb": 480,
"tbk": 4,
"tl": 183,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
129,
233,
234,
235,
642,
143
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4897,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
37,
38,
39,
52,
53,
54,
421,
1029,
223
]
},
{
"tb": 128,
"tbk": 1,
"tl": 3358,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
46,
1030,
1031,
1032,
1033,
530
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 2969,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041
]
},
{
"tb": 80712,
"tbk": 177,
"tl": 43246,
"mb": 22800,
"mbk": 50,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
778,
779,
780,
1042,
1043,
1044
]
},
{
"tb": 744,
"tbk": 3,
"tl": 895,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
104,
105,
571,
572,
573,
718,
370,
371,
1045
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1365248,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
1046,
1047,
1048,
1049,
1050,
114,
138
]
},
{
"tb": 128,
"tbk": 2,
"tl": 200513,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
181,
182,
183,
184,
185,
186,
1051
]
},
{
"tb": 24,
"tbk": 1,
"tl": 691791,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
84,
373,
374,
44,
45,
195,
114
]
},
{
"tb": 32,
"tbk": 1,
"tl": 8,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
128,
297,
298,
299,
300,
360,
361,
362,
1052,
364,
365
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2380983,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
1053,
1054,
1055,
1056,
1057,
1058,
519,
114
]
},
{
"tb": 2232,
"tbk": 3,
"tl": 2642,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
164,
165,
166,
167,
587,
126,
127,
113
]
},
{
"tb": 105963,
"tbk": 10,
"tl": 6750,
"mb": 56224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
46,
466,
467,
468,
469,
1059
]
},
{
"tb": 5760,
"tbk": 30,
"tl": 11064,
"mb": 768,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
104,
354,
355,
356,
1060,
1061,
1062
]
},
{
"tb": 8,
"tbk": 1,
"tl": 274,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
104,
105,
1063,
1064,
1065,
1066,
1067,
1068,
1069,
1070
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 222730,
"mb": 4194304,
"mbk": 1,
"gb": 4194304,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
316,
317,
1071
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 2378166,
"mb": 524288,
"mbk": 1,
"gb": 524288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
60,
61,
62,
188,
189,
1072,
1073
]
},
{
"tb": 2000,
"tbk": 10,
"tl": 188,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
104,
1074,
1075,
1076,
1077,
1078,
1079
]
},
{
"tb": 16,
"tbk": 1,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
27,
28,
29,
30,
31,
32,
33,
1080,
223
]
},
{
"tb": 72,
"tbk": 3,
"tl": 136205,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
384,
385,
386,
387,
388,
389,
390,
391,
689,
216,
217,
218
]
},
{
"tb": 96,
"tbk": 1,
"tl": 28,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
84,
135,
117,
193,
194,
195,
114
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 363370,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
60,
61,
62,
188,
952,
953,
1081
]
},
{
"tb": 64,
"tbk": 1,
"tl": 21500,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
148,
149,
150,
151,
1082,
1083,
1084
]
},
{
"tb": 32,
"tbk": 2,
"tl": 691924,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
1085,
1086,
1087,
1088,
1089,
1090,
1091,
1092
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 508016,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
60,
61,
62,
188,
839,
1093,
1094
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 2618,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
36,
60,
61,
62,
63,
776,
1095,
530
]
}
],
"ftbl": [
"[root]",
"0x62f893d7f3b9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x62f893c44dec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62f893d1eb95: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d1eb95: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d1eb95: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893c88a57: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x62f893be3d9a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x62f893cb86ee: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:669:26)",
"0x62f893ca7511: winter_prover::Prover::generate_proof (prover/src/lib.rs:274:13)",
"0x62f893cc180b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x62f893cbfa1d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x62f893e33c2a: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x62f893e12c7d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x62f893e15613: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x62f893c26237: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x62f893c477bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62f893d1936f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d1936f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d1936f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d1936f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d6689d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d64895: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d91bdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893cf8fe2: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:140:32)",
"0x62f893fb7f79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x62f893fb69ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62f893fb804c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893fb804c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893fb804c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x62f893fb5c7c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x62f893fb5c7c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x62f893fb5c7c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x62f893fb1ece: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x62f893bb929f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x62f893c34df3: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x62f893c514ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62f893ccee08: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893ccee08: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893ccee08: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x62f893ccf45b: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x62f893ccf45b: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x62f893ccf45b: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x62f893ba3cba: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x62f893ca4010: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:354:9)",
"0x62f893be0a9c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:51:13)",
"0x62f893fb6709: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x62f893f7b0f0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x62f893f6f669: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x62f893f6ee51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x62f893f6e950: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x62f893e015ed: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x62f893d54b85: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x62f893d54b85: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x62f893d54b85: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x62f893d1dd83: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x62f893d54d25: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x62f893d54d25: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x62f893d54d25: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x62f893bae2c5: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x62f893d1e7d5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d1e7d5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d1e7d5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893ccd485: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x62f893c3bd26: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x62f893c3f040: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x62f893cf1104: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x62f893cc0a8b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x62f893cbfe3d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x62f893e3378a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x62f893e0e2a9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x62f893d76bc8: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x62f893d75195: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x62f893c7cfe1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x62f893c860d8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x62f893d4467d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x62f893ca51b5: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:547:13)",
"0x62f893bbbfc9: winter_verifier::perform_verification (verifier/src/lib.rs:266:61)",
"0x62f893bc1f56: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x62f893d9eeb6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x62f893dc3fbd: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x62f893e00e04: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x62f893e0a5e9: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x62f893bbcc03: winter_verifier::perform_verification (verifier/src/lib.rs:323:5)",
"0x62f893d7e847: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x62f893def14c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x62f893bb8e0c: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x62f893bc01dd: winter_verifier::verify (verifier/src/lib.rs:96:32)",
"0x62f893c1a822: winterfell::main (winterfell/src/main.rs:71:11)",
"0x62f893d1da22: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d1da22: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d1da22: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x62f893b938cd: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x62f893b92036: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x62f893d82c48: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:300:57)",
"0x62f893c51f6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62f893d1722b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d1722b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d1722b: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d1722b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x62f893d67aad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d64955: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893c8816d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893cc8618: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x62f893f7aa99: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x62f893f7ac0a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62f893f6e61c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893f6e61c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893f6e61c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x62f893f6e5cc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x62f893f6e5cc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x62f893f6e5cc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x62f893c2ec0e: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x62f893caa19c: winter_prover::Prover::generate_proof (prover/src/lib.rs:600:25)",
"0x62f893cba2ee: winter_prover::Prover::prove (prover/src/lib.rs:175:37)",
"0x62f893c20245: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x62f893c1b247: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:176:13)",
"0x62f893ca3b72: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:371:13)",
"0x62f893d842cb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:64:9)",
"0x62f893bbcfcc: winter_verifier::perform_verification (verifier/src/lib.rs:225:43)",
"0x62f893bc05da: winter_verifier::verify (verifier/src/lib.rs:111:21)",
"0x62f893befc84: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893befc84: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893befc84: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x62f893d53c56: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x62f893c27a4c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x62f893c2a3c0: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x62f893c2f0bd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x62f893f43819: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x62f893f422e9: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x62f893e930b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x62f893e95d69: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x62f893e9d322: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x62f893bf165f: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x62f893bc1845: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x62f893c1b21b: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:175:9)",
"0x62f893cf9518: winter_prover::trace::Trace::validate (src/trace/mod.rs:123:26)",
"0x62f893cab578: winter_prover::Prover::generate_proof (prover/src/lib.rs:379:17)",
"0x62f893c1a27c: winterfell::main (winterfell/src/main.rs:54:17)",
"0x62f893d552d9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x62f893d552d9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x62f893d552d9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x62f893c27dbc: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x62f893bc177b: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x62f893bc44b0: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x62f893b90a3f: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:230:34)",
"0x62f893d99026: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x62f893dbf3a7: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x62f893ccf511: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893ccf511: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893ccf511: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x62f893d53c80: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x62f893bde5e4: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:156:33)",
"0x62f893be1e25: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:128:17)",
"0x62f893ddcc6e: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x62f893def472: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x62f893c2b99f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x62f893c30bc6: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x62f893bde58a: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:155:31)",
"0x62f893c66281: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x62f893c86a38: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x62f893d4733e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x62f893cc2dca: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x62f893caa30a: winter_prover::Prover::generate_proof (prover/src/lib.rs:608:34)",
"0x62f893c50a6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62f893d1e875: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d1e875: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d1e875: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893bf8a4c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x62f893c3be35: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x62f893ca5350: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:543:13)",
"0x62f893d023a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d023a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d023a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d023a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d6748a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d62fc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d91a3a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893ca6d8f: winter_prover::Prover::generate_proof (prover/src/lib.rs:214:39)",
"0x62f893bae238: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x62f893ca7e23: winter_prover::Prover::generate_proof (prover/src/lib.rs:423:33)",
"0x62f893fb5adc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x62f893fb4d6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x62f893fb4ae8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x62f893fb4ae8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x62f893fb4124: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x62f893fb1d43: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x62f893ce382f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x62f893c88ae7: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x62f893c22e2f: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x62f893df14f9: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x62f893bef37b: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x62f893c1b330: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:177:13)",
"0x62f893c95adf: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:41:22)",
"0x62f893be0b39: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:36)",
"0x62f893cab1b5: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:21)",
"0x62f893be18b2: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:28)",
"0x62f893cab266: winter_prover::Prover::generate_proof (prover/src/lib.rs:417:21)",
"0x62f893d17d1f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d17d1f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d17d1f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d17d1f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d6661d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d624f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d9134d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893bb17f7: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x62f893bef785: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x62f893bf8cc7: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x62f893ce3bbd: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x62f893da3d85: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x62f893da3e16: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x62f893bbcedf: winter_verifier::perform_verification (verifier/src/lib.rs:228:13)",
"0x62f893c4ac1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62f893b9b3e2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893b9b3e2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893b9b3e2: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x62f893d54df5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x62f893d54df5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x62f893d54df5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x62f893bae24b: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x62f893da3d72: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x62f893c3fe4c: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x62f893cf0f37: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x62f893bc050b: winter_verifier::verify (verifier/src/lib.rs:109:19)",
"0x62f893c4949c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62f893d05b4f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d05b4f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d05b4f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d05b4f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d5103e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x62f893d65035: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d920ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893c1a74e: winterfell::main (winterfell/src/main.rs:65:26)",
"0x62f893e51840: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x62f893e51aa9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x62f893e61111: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x62f893caae8b: winter_prover::Prover::generate_proof (prover/src/lib.rs:450:13)",
"0x62f893f7d2db: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x62f893f7cfb1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x62f893f762ab: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x62f893f72f3e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x62f893f74400: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x62f893f73bf8: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x62f893c229fe: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x62f893bb12ce: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x62f893baeac4: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x62f893c698d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x62f893c86318: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x62f893d4712d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x62f893bb0af2: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x62f893ddcac5: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x62f893c5ec01: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x62f893c86408: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x62f893d48c54: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x62f893cab285: winter_prover::Prover::generate_proof (prover/src/lib.rs:418:17)",
"0x62f893bab24c: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x62f893cc2db3: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x62f893cfd997: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x62f893cf0970: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x62f893f7d9e9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893f7d9e9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893f7d9e9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893f7d9e9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x62f893f7de2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893f7ddf7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893f7dfce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893f804c9: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x62f893cfdb50: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x62f893ca6978: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:517:13)",
"0x62f893bbb8e5: winter_verifier::perform_verification (verifier/src/lib.rs:185:13)",
"0x62f893bc67be: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x62f893bbcb34: winter_verifier::perform_verification (verifier/src/lib.rs:319:28)",
"0x62f893c267dc: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x62f893c328d8: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x62f893cc2b91: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x62f893caae70: winter_prover::Prover::generate_proof (prover/src/lib.rs:449:13)",
"0x62f893c46d4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62f893d0259f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d0259f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d0259f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d0259f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d520d6: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x62f893d64bc5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d9230d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893bc03a8: winter_verifier::verify (verifier/src/lib.rs:102:24)",
"0x62f893c1ae36: <winterfell::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (winterfell/src/main.rs:133:9)",
"0x62f893d817a8: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:216:31)",
"0x62f893d9fd36: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x62f893dbdbd0: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x62f893d8bf66: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x62f893d938f6: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x62f893b9c461: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x62f893c3303f: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x62f893cf8131: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x62f893ccc853: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x62f893d7f832: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x62f893bbc4f7: winter_verifier::perform_verification (verifier/src/lib.rs:298:27)",
"0x62f893f4262a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62f893f4532c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893f4532c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893f4532c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x62f893f1469c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x62f893f1469c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x62f893f1469c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x62f893bb9084: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x62f893bb8d9a: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x62f893c3bb3e: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x62f893c4823c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62f893d02bd9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d02bd9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d02bd9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d02bd9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d6700a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d64c44: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d91c2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893bb04b2: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x62f893c27259: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x62f893c28739: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x62f893be3e5c: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x62f893b9a4f5: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x62f893cc755c: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x62f893d75129: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x62f893cc6b36: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x62f893cca296: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x62f893ca3bcf: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:369:9)",
"0x62f893ca53d4: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:541:17)",
"0x62f893c331b6: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x62f893bcdcb7: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x62f893bbcabc: winter_verifier::perform_verification (verifier/src/lib.rs:317:25)",
"0x62f893bcdeb1: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x62f893c44b4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62f893ca34c4: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893ca34c4: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893ca34c4: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x62f893d53bf6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x62f893c1b0ad: <winterfell::WorkAir as winter_air::air::Air>::new (winterfell/src/main.rs:151:23)",
"0x62f893d82f36: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:226:17)",
"0x62f893d9d19e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x62f893f6dc69: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x62f893f6ac1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62f893f67db6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893f67db6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893f67db6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893c2eb68: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x62f893ca3012: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893ca3012: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893ca3012: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x62f893d55b05: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x62f893d55b05: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x62f893d55b05: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x62f893ba3b95: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x62f893b9a388: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x62f893cd44ab: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x62f893ca902d: winter_prover::Prover::generate_proof (prover/src/lib.rs:524:9)",
"0x62f893f7d63b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x62f893f7cf01: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x62f893f7638b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x62f893f6fe3d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x62f893f7b748: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x62f893f7f0a7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x62f893e9e9e9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x62f893e9e9e9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x62f893e9e9e9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x62f893cbf09a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x62f893b9da26: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x62f893cf1714: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x62f893bc93b7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x62f893bbca15: winter_verifier::perform_verification (verifier/src/lib.rs:311:25)",
"0x62f893bca2d7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x62f893bf9abb: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x62f893c2846d: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x62f893ce82d4: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x62f893bcdca0: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x62f893b9ad37: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x62f893ba3b7f: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x62f893d83e16: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:26:25)",
"0x62f893d0decd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d0decd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d0decd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d0decd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d6709a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d62544: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d9173a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893cf050b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x62f893c4e06c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62f893ccef38: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893ccef38: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893ccef38: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x62f893d557c5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x62f893d557c5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x62f893d557c5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x62f893b9b8e2: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x62f893be1973: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:33)",
"0x62f893d0fb9d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d0fb9d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d0fb9d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d0fb9d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d662aa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d63394: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d91b5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893cf05c3: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x62f893d054ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d054ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d054ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d054ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d67d3d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d625f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d9221d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893bcdff2: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x62f893d0ab04: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d0ab04: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d0ab04: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d0ab04: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x62f893d67eaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d63d64: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d920da: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893bf3e8d: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x62f893e2c55d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x62f893e32a25: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x62f893e2586e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x62f893b8e88c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x62f893d1c0a6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x62f893cd3cbe: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x62f893c4b69c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62f893d1eaf5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d1eaf5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d1eaf5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893c2a499: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x62f893d1005d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d1005d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d1005d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d1005d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d66dda: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d63de4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d911ca: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893cf07eb: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x62f893f40700: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x62f893f40939: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x62f893f40132: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x62f893bf917c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x62f893bf131d: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x62f893d1ae6f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d1ae6f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d1ae6f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d1ae6f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d66ecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d62825: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d91afd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893e01c5a: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x62f893d04ecf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d04ecf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d04ecf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d04ecf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d67d5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d64da7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d91edd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893c1a0e6: winterfell::main (winterfell/src/main.rs:38:27)",
"0x62f893c342db: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x62f893d052ef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d052ef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d052ef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d052ef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d674cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d63d15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d907dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893bc18d5: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x62f893fb6ea0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x62f893fb70d9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x62f893fb73d2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x62f893fb8159: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x62f893b9c32d: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x62f893bc103b: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:102:85)",
"0x62f893d9da6e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x62f893c95028: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:83:31)",
"0x62f893d9b7af: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x62f893c4e30c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62f893d01b59: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d01b59: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d01b59: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d01b59: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d666ba: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d649a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d90eea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893ca8e8c: winter_prover::Prover::generate_proof (prover/src/lib.rs:505:52)",
"0x62f893d7f4e2: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x62f893bb8c98: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x62f893bb2a93: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x62f893df2338: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x62f893c36222: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x62f893cfff8f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893cfff8f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893cfff8f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893cfff8f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d6706d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d62f75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d9079d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893bb03a8: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x62f893c97d5a: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:170:36)",
"0x62f893c9634f: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:55:17)",
"0x62f893c5417c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62f893d16eef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d16eef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d16eef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d16eef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d6727d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d62c65: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d739bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893ca7033: winter_prover::Prover::generate_proof (prover/src/lib.rs:248:41)",
"0x62f893bc96fe: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x62f893bca325: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x62f893cf176e: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x62f893d18d2f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d18d2f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d18d2f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d18d2f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d6656d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d63125: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d9198d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893e00d29: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x62f893ca6f02: winter_prover::Prover::generate_proof (prover/src/lib.rs:233:27)",
"0x62f893d0218f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d0218f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d0218f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d0218f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d66ccd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d63cd7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d9150d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893d86aa0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x62f893b906e8: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:227:28)",
"0x62f893bf3f66: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x62f893cead0d: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x62f893bc921f: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x62f893d1d328: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d1d328: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d1d328: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x62f893d55205: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x62f893d55205: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x62f893d55205: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x62f893ca8ea3: winter_prover::Prover::generate_proof (prover/src/lib.rs:510:39)",
"0x62f893d0995f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d0995f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d0995f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d0995f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d67a4d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d63e15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d91f5d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893e077af: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x62f893ba3106: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x62f893bdfac9: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:290:18)",
"0x62f893bde88e: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:173:30)",
"0x62f893ce38a2: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x62f893c2ee24: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x62f893cefcf0: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x62f893c736d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x62f893c867c8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x62f893d4567e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x62f893c3f216: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x62f893c4b3fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62f893d0aedf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d0aedf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d0aedf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d0aedf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d6788d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d630c5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d909dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893cb808b: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:648:34)",
"0x62f893e99f36: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893e99f36: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893e99f36: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893bf1517: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x62f893caa217: winter_prover::Prover::generate_proof (prover/src/lib.rs:603:29)",
"0x62f893d1e646: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d1e646: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d1e646: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893bb4a78: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x62f893be1be1: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:135:9)",
"0x62f893bb4adb: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x62f893ceae73: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x62f893cf0ad4: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x62f893d04ac3: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d04ac3: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d04ac3: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d04ac3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d66bd4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d6329a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d91654: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893c19d51: winterfell::main (winterfell/src/main.rs:22:32)",
"0x62f893c27aaf: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x62f893bb2d08: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x62f893c2ec29: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x62f893d11acf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d11acf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d11acf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d11acf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d66a5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d63c45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d91e4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893b901cf: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:283:9)",
"0x62f893c362d3: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x62f893c2bafb: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x62f893ce3921: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x62f893e01b73: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x62f893c4603c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62f893d08909: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d08909: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d08909: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d08909: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d67e3a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d63934: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d90a2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893bbbba2: winter_verifier::perform_verification (verifier/src/lib.rs:214:41)",
"0x62f893c7bc21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x62f893c85dd8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x62f893d476ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x62f893bc18ec: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x62f893c85a21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x62f893c85e08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x62f893d4842e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x62f893cf1f07: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x62f893c4be6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62f893d06b29: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d06b29: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d06b29: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d06b29: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d66caa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d65084: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d9119a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893c3424b: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x62f893bb8dce: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x62f893b9b8f5: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x62f893e09de9: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x62f893bbc1ac: winter_verifier::perform_verification (verifier/src/lib.rs:275:24)",
"0x62f893be49d6: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x62f893be3e23: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x62f893ce91ce: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x62f893bc0038: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:216:32)",
"0x62f893d9fe5f: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x62f893bf107a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x62f893bf7547: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x62f893cf73a7: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x62f893cf0d54: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x62f893cd45c3: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x62f893c282b7: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x62f893c4877c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62f893d0cbf2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d0cbf2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d0cbf2: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d0cbf2: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x62f893d67b7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d62c35: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d908cd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893cc6a6a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x62f893e00d9d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x62f893caae30: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:13)",
"0x62f893b68d82: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x62f893b68d82: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62f893b68d82: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893b68d82: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893b68d82: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893b68d82: std::io::buffered::bufwriter::BufWriter<W>::with_capacity (io/buffered/bufwriter.rs:115:33)",
"0x62f893b68d82: std::io::buffered::linewriter::LineWriter<W>::with_capacity (io/buffered/linewriter.rs:109:29)",
"0x62f893b68d82: std::io::buffered::linewriter::LineWriter<W>::new (io/buffered/linewriter.rs:89:9)",
"0x62f893b68d82: std::io::stdio::stdout::{{closure}} (src/io/stdio.rs:618:62)",
"0x62f893b68d82: std::sync::once_lock::OnceLock<T>::get_or_init::{{closure}} (src/sync/once_lock.rs:250:50)",
"0x62f893b68d82: std::sync::once_lock::OnceLock<T>::initialize::{{closure}} (src/sync/once_lock.rs:376:19)",
"0x62f893b68d82: std::sync::once::Once::call_once_force::{{closure}} (src/sync/once.rs:208:40)",
"0x62f893b68d82: std::sys_common::once::futex::Once::call (sys_common/once/futex.rs:124:21)",
"0x62f893b67eca: std::sync::once::Once::call_once_force (src/sync/once.rs:208:9)",
"0x62f893b67eca: std::sync::once_lock::OnceLock<T>::initialize (src/sync/once_lock.rs:375:9)",
"0x62f893fd21c5: std::sync::once_lock::OnceLock<T>::get_or_try_init (src/sync/once_lock.rs:298:9)",
"0x62f893fd21c5: std::sync::once_lock::OnceLock<T>::get_or_init (src/sync/once_lock.rs:250:15)",
"0x62f893fd21c5: std::io::stdio::stdout (src/io/stdio.rs:618:14)",
"0x62f893fd21c5: std::io::stdio::print_to (src/io/stdio.rs:1020:21)",
"0x62f893fd21c5: std::io::stdio::_print (src/io/stdio.rs:1097:5)",
"0x62f893c1a03a: winterfell::main (winterfell/src/main.rs:36:5)",
"0x62f893c3f2b9: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x62f893d0c86f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d0c86f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d0c86f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d0c86f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d6761d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d62285: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d90c1d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893ca6eb3: winter_prover::Prover::generate_proof (prover/src/lib.rs:222:20)",
"0x62f893bf1999: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x62f893c85041: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x62f893c86018: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x62f893d448be: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x62f893c97e9d: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:175:17)",
"0x62f893b9b750: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x62f893c4752a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62f893cff949: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893cff949: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893cff949: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893cff949: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d6796a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d63874: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d91b8a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893bc440e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x62f893df1b9b: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x62f893c5220c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62f893d0be49: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d0be49: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d0be49: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d0be49: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d6693a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d637f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d9101a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893bbbc5f: winter_verifier::perform_verification (verifier/src/lib.rs:218:40)",
"0x62f893d14abf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d14abf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d14abf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d14abf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d67e7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d64925: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d915dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893b90788: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:228:23)",
"0x62f893c30d52: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x62f893bf9882: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x62f893cef4ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x62f893bbc636: winter_verifier::perform_verification (verifier/src/lib.rs:305:9)",
"0x62f893d1c0e6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x62f893bbc7a8: winter_verifier::perform_verification (verifier/src/lib.rs:306:42)",
"0x62f893d01033: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d01033: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d01033: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d01033: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d679ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d64545: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d91fdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893ca76db: winter_prover::Prover::generate_proof (prover/src/lib.rs:293:23)",
"0x62f893ce91b0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x62f893cd4347: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x62f893ce3b6c: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x62f893bb11bf: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x62f893bb2f9d: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x62f893c48a1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62f893d007f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d007f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d007f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d007f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d6634a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d623a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d9213a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893cb7f12: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:640:42)",
"0x62f893d7fc5a: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x62f893df36a7: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x62f893cd6889: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x62f893d0a3bf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d0a3bf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d0a3bf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d0a3bf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d676cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d64e45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d9152d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893bc94ab: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x62f893cf99a5: winter_prover::trace::Trace::validate (src/trace/mod.rs:179:13)",
"0x62f893c336b2: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x62f893c4cb7c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62f893d0619f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d0619f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d0619f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d0619f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d6754d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d64355: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d91ddd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893be21b1: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x62f893c491fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62f893d0b622: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d0b622: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d0b622: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d0b622: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x62f893d66daa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d62484: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d7f8ea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893ceed67: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x62f893cbcefa: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x62f893bf7356: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x62f893cc072b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x62f893cbff9d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x62f893e3369a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x62f893e0e1e9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x62f893d7815b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x62f893bee6eb: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x62f893df5d94: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x62f893e0195d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x62f893bf5dac: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x62f893cc2d4a: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x62f893d084cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d084cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d084cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d084cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d670dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d643d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d90a6d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893ca6cd2: winter_prover::Prover::generate_proof (prover/src/lib.rs:210:38)",
"0x62f893ca6a42: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:512:13)",
"0x62f893c4a6dc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62f893d0c44f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d0c44f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d0c44f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d0c44f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d6704d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d61f75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d9241d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893ca8dcf: winter_prover::Prover::generate_proof (prover/src/lib.rs:501:51)",
"0x62f893c2b9b6: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x62f893cc207b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x62f893cbf28d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x62f893e332ea: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x62f893e0e009: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x62f893d77a75: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x62f893bee598: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x62f893c80b21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x62f893c86498: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x62f893d487ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x62f893c39db7: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x62f893cc6bae: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x62f893cd40d2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x62f893cf91b0: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:140:51)",
"0x62f893d9a476: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x62f893b98fc1: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x62f893d0369a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d0369a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d0369a: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d0369a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x62f893d664cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d64a1a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893deef4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893c28243: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x62f893b9cf63: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x62f893cf1c15: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x62f893bf5eb4: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x62f893bf431c: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x62f893c3bb7f: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x62f893c68511: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x62f893c86a08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x62f893d4440e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x62f893c2bc69: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x62f893c23ec7: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x62f893c35003: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x62f893c36210: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x62f893c6ca31: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x62f893c86048: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x62f893d4955e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x62f893bbd3b2: winter_verifier::perform_verification (verifier/src/lib.rs:179:9)",
"0x62f893c342f2: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x62f893bb841f: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x62f893bb6a15: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x62f893c8b18f: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x62f893c2b93d: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x62f893bc16db: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x62f893d86b0a: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x62f893d9d7a8: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x62f893c22114: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x62f893bc96df: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x62f893c50fac: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62f893d068df: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d068df: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d068df: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d068df: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d51b4e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x62f893d64415: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d922ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893bc34f7: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x62f893d1e9b5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d1e9b5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d1e9b5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893ca7909: winter_prover::Prover::generate_proof (prover/src/lib.rs:309:32)",
"0x62f893c45d9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62f893d0ee5f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d0ee5f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d0ee5f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d0ee5f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d663cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d63e87: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d90e8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893c95bcd: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:51:26)",
"0x62f893cfe4b9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893cfe4b9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893cfe4b9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893cfe4b9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d668ea: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d634f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d9139a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893c94fe8: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:83:9)",
"0x62f893c832a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x62f893c86a98: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x62f893d4691b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x62f893c280fa: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x62f893c53edc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62f893d1625f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d1625f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d1625f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d1625f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d5318b: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x62f893d638d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d9156d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893ca77f7: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:36)",
"0x62f893bb0440: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x62f893d98db6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x62f893b98b11: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x62f893fb7108: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x62f893fb74ca: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x62f893fb74ca: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x62f893fb726e: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x62f893fb726e: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x62f893fb735d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x62f893c4a44a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62f893d184f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d184f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d184f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d184f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d669da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d63bc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d90eba: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893cb7fcf: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:644:36)",
"0x62f893be8081: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x62f893be6e86: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x62f893cb812f: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:655:31)",
"0x62f893f6fe9d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x62f893f7b42b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x62f893f7f1e3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x62f893c455cc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62f893d08aff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d08aff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d08aff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d08aff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d664ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d63337: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d91e8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893c19edf: winterfell::main (winterfell/src/main.rs:28:26)",
"0x62f893bc0330: winter_verifier::verify (verifier/src/lib.rs:98:38)",
"0x62f893d199dd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d199dd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d199dd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d199dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d66c7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d63ff4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d9186a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893cf067b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x62f893d0ea3f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d0ea3f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d0ea3f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d0ea3f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d67b1d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d62bb7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d909bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893bcedf7: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x62f893d83f8c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:40:30)",
"0x62f893f6e2c6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x62f893e016ca: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x62f893be630f: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x62f893be5506: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x62f893d832f8: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:651:17)",
"0x62f893d1e3c5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d1e3c5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d1e3c5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893ca78cd: winter_prover::Prover::generate_proof (prover/src/lib.rs:308:37)",
"0x62f893c51ccc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62f893d1ec35: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d1ec35: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d1ec35: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893ca788e: winter_prover::Prover::generate_proof (prover/src/lib.rs:307:44)",
"0x62f893c6a7a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x62f893c86108: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x62f893d46dae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x62f893bbd1eb: winter_verifier::perform_verification (verifier/src/lib.rs:184:9)",
"0x62f893bfac4b: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x62f893c9e75a: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x62f893d82852: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:503:32)",
"0x62f893d9fdc6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x62f893dbd93a: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x62f893d87e27: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x62f893d92a22: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x62f893bae314: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x62f893ca84d0: winter_prover::Prover::generate_proof (prover/src/lib.rs:452:35)",
"0x62f893be34bd: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x62f893cb9eb8: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:716:26)",
"0x62f893ca8931: winter_prover::Prover::generate_proof (prover/src/lib.rs:482:37)",
"0x62f893d0758d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d0758d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d0758d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d0758d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d66d7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d62d34: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d9130a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893cf0733: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x62f893cff539: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893cff539: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893cff539: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893cff539: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d66b7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d64b14: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d9244a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893ca74ea: winter_prover::Prover::generate_proof (prover/src/lib.rs:272:43)",
"0x62f893bc441d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x62f893b9d126: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x62f893d0170f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d0170f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d0170f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d0170f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d6627d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d64a55: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d908ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893e01ac4: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x62f893f7d48b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x62f893f7ce51: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x62f893f7654b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x62f893f70c41: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x62f893f712c7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x62f893f8095b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x62f893c30e92: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x62f893c30b2c: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x62f893ca9b02: winter_prover::Prover::generate_proof (prover/src/lib.rs:571:9)",
"0x62f893cf1e5f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x62f893c4d0bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62f893cfe6af: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893cfe6af: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893cfe6af: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893cfe6af: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d53705: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x62f893d6450a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d90b3d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893bb7891: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x62f893df1b89: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x62f893ca96b8: winter_prover::Prover::generate_proof (prover/src/lib.rs:558:13)",
"0x62f893cd40f5: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x62f893c3b3b5: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x62f893cf1d01: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x62f893c63611: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x62f893c86288: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x62f893d44c0b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x62f893bf43c9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x62f893d0fe94: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d0fe94: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d0fe94: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d0fe94: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x62f893d665da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d64ec4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d91c5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893bf746e: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x62f893e20f7b: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x62f893e2b1a9: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x62f893e25416: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x62f893e0178d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x62f893c529ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62f893d1ea55: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d1ea55: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d1ea55: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893ca7877: winter_prover::Prover::generate_proof (prover/src/lib.rs:306:39)",
"0x62f893b8e89d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x62f893cbf0af: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x62f893c4532c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62f893b9daea: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893b9daea: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893b9daea: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x62f893d53ca6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x62f893c34508: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x62f893f6e01a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x62f893f7304e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x62f893f749ec: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x62f893f7355a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x62f893d1540d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d1540d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d1540d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d1540d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d66e4a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d646e4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d90d1a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893ceaba1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x62f893be3572: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x62f893bef428: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x62f893ca7132: winter_prover::Prover::generate_proof (prover/src/lib.rs:262:22)",
"0x62f893f7d12b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x62f893f7d061: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x62f893f7646b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x62f893f70b71: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x62f893f71307: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x62f893f8090b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x62f893cf0370: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x62f893cb9acc: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:701:36)",
"0x62f893cf855d: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:243:25)",
"0x62f893c1ad94: winterfell::build_do_work_trace (winterfell/src/main.rs:91:5)",
"0x62f893cba60b: winterfell::main::{{closure}} (winterfell/src/main.rs:30:23)",
"0x62f893d120ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62f893d120ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62f893d120ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62f893d120ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62f893d6644d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62f893d62625: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62f893d9113d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62f893b9ad28: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x62f893bb0eae: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x62f893bb4a1c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x62f893bf3b8e: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)"
]
}