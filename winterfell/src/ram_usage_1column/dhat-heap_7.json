{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell",
"pid": 28533,
"tg": 200630,
"te": 670041,
"pps": [
{
"tb": 3864,
"tbk": 7,
"tl": 1372,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7
]
},
{
"tb": 24,
"tbk": 1,
"tl": 463051,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
8,
9,
10,
11,
12,
13,
14
]
},
{
"tb": 18432,
"tbk": 2,
"tl": 3568,
"mb": 18432,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
15,
16,
17,
18,
19,
20,
21,
22
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 1863,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
15,
23,
24,
25,
26,
27,
28,
29,
30
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1634,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
31,
32,
33,
34,
35,
36,
37,
38,
39
]
},
{
"tb": 96,
"tbk": 1,
"tl": 29,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
42,
43,
44,
45,
46
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 4539,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
47,
48,
49,
50,
51,
52,
53,
54
]
},
{
"tb": 1760,
"tbk": 8,
"tl": 711,
"mb": 248,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
57,
58,
59,
60,
61,
62,
63,
64
]
},
{
"tb": 4097,
"tbk": 1,
"tl": 19,
"mb": 4097,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
66,
67,
68,
69,
70,
71,
72,
73,
74,
75
]
},
{
"tb": 48,
"tbk": 2,
"tl": 66,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
76,
77,
78,
79,
80,
81,
82
]
},
{
"tb": 8,
"tbk": 1,
"tl": 185836,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
83,
84,
85,
86,
87,
88,
89,
90,
91
]
},
{
"tb": 8192,
"tbk": 1,
"tl": 364,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
96,
97,
98,
99
]
},
{
"tb": 48,
"tbk": 1,
"tl": 455929,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
100,
101,
102,
103,
104,
105,
106,
107,
108
]
},
{
"tb": 960,
"tbk": 8,
"tl": 966,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
109,
110,
111,
112,
113
]
},
{
"tb": 1752,
"tbk": 11,
"tl": 28,
"mb": 248,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
114,
115,
116,
117,
118,
119,
120,
121,
122
]
},
{
"tb": 32,
"tbk": 1,
"tl": 159,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
123,
124,
125,
126,
127,
128,
129,
130,
131
]
},
{
"tb": 48,
"tbk": 2,
"tl": 838528,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141
]
},
{
"tb": 256,
"tbk": 1,
"tl": 10,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
114,
115,
116,
142,
143,
144,
145,
146,
13
]
},
{
"tb": 96,
"tbk": 1,
"tl": 3046,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
42,
43,
44,
147,
148
]
},
{
"tb": 3864,
"tbk": 7,
"tl": 890,
"mb": 1656,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
149,
150,
151
]
},
{
"tb": 72,
"tbk": 3,
"tl": 71,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
152,
153,
154,
155,
156,
157,
158,
159,
160
]
},
{
"tb": 16,
"tbk": 1,
"tl": 5,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
76,
161,
162,
163,
164,
13,
14
]
},
{
"tb": 9216,
"tbk": 2,
"tl": 1035,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
96,
165,
166,
167
]
},
{
"tb": 65568,
"tbk": 33,
"tl": 38267,
"mb": 65536,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
123,
124,
125,
126,
127,
128,
168,
169,
170,
171,
172
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 464703,
"mb": 131072,
"mbk": 1,
"gb": 131072,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
15,
16,
17,
18,
19,
173,
174,
175
]
},
{
"tb": 512,
"tbk": 1,
"tl": 24,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
96,
97,
98,
176
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 1657,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
96,
97,
98,
177
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 13736,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
178,
179,
180,
181,
182,
183,
184
]
},
{
"tb": 320,
"tbk": 2,
"tl": 833654,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
185,
186,
187,
188,
189
]
},
{
"tb": 1432,
"tbk": 13,
"tl": 34,
"mb": 232,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
114,
115,
116,
117,
118,
119,
120,
190,
191
]
},
{
"tb": 56,
"tbk": 1,
"tl": 1486,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
76,
192,
193,
194,
195
]
},
{
"tb": 1824,
"tbk": 2,
"tl": 827,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
15,
196,
197,
198,
199,
200,
190,
191
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 124,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
201,
202,
203,
204,
205,
206,
207
]
},
{
"tb": 2097152,
"tbk": 128,
"tl": 374920,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
208,
209,
210,
211,
212,
213,
214,
215
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 1625,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
15,
216,
217,
218,
219,
220,
221,
222,
223
]
},
{
"tb": 248,
"tbk": 1,
"tl": 335,
"mb": 248,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
224,
225,
226,
227,
228,
229,
230
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1561,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
66,
231,
232,
233,
234,
235,
122,
13
]
},
{
"tb": 36936,
"tbk": 81,
"tl": 12119,
"mb": 13224,
"mbk": 29,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
236,
237,
238,
239,
240,
241
]
},
{
"tb": 32,
"tbk": 1,
"tl": 51,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
76,
242,
243,
13,
14
]
},
{
"tb": 32,
"tbk": 1,
"tl": 29358,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
244,
245,
246,
247,
248,
13
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1412,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
249,
250,
251,
252,
253,
254,
255,
256,
257
]
},
{
"tb": 32,
"tbk": 1,
"tl": 18,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
258,
259,
260,
194
]
},
{
"tb": 512,
"tbk": 1,
"tl": 504,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
261,
46,
262,
195
]
},
{
"tb": 8,
"tbk": 1,
"tl": 399,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
263,
264,
265,
266,
267,
268,
269,
270
]
},
{
"tb": 80,
"tbk": 1,
"tl": 416192,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
271,
272,
273,
274,
275,
276,
277,
278,
279
]
},
{
"tb": 49152,
"tbk": 3,
"tl": 7558,
"mb": 49152,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
123,
124,
125,
126,
127,
128,
168,
169,
170,
171,
280
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 6900,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
96,
281,
282,
283
]
},
{
"tb": 288,
"tbk": 2,
"tl": 716,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
178,
179,
180,
181,
284,
285,
286
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1446,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
114,
115,
116,
117,
118,
119,
287,
288,
13
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 416931,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
123,
124,
125,
289,
290,
291,
292,
293,
294
]
},
{
"tb": 8192,
"tbk": 1,
"tl": 6547,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
201,
202,
203,
204,
205,
206,
295
]
},
{
"tb": 512,
"tbk": 1,
"tl": 508,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
296,
46,
262,
195
]
},
{
"tb": 744,
"tbk": 1,
"tl": 1864,
"mb": 744,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
297,
298,
299,
300,
301,
302,
303,
304
]
},
{
"tb": 96,
"tbk": 1,
"tl": 9,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
42,
43,
44,
305,
194
]
},
{
"tb": 16384,
"tbk": 2,
"tl": 42919,
"mb": 16384,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
123,
124,
125,
289,
290,
291,
306,
307,
308
]
},
{
"tb": 480,
"tbk": 4,
"tl": 126,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
244,
245,
246,
247,
309,
310
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1139,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
311,
312,
313,
314,
315,
316,
317,
318
]
},
{
"tb": 512,
"tbk": 1,
"tl": 17,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
319,
320,
262,
195
]
},
{
"tb": 6048,
"tbk": 31,
"tl": 47958,
"mb": 6048,
"mbk": 31,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
15,
16,
17,
18,
321,
322,
323,
324
]
},
{
"tb": 144,
"tbk": 1,
"tl": 2509,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
325,
326,
327,
328,
329,
330,
331,
332,
288,
13
]
},
{
"tb": 24,
"tbk": 1,
"tl": 416945,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
76,
333,
334,
293,
294,
335,
13
]
},
{
"tb": 4032,
"tbk": 45,
"tl": 117531,
"mb": 4032,
"mbk": 45,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
15,
16,
17,
18,
321,
322,
336,
337
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 22379,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
15,
16,
17,
18,
19,
338,
339,
340
]
},
{
"tb": 64,
"tbk": 1,
"tl": 7945,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
341,
342,
343,
344,
345
]
},
{
"tb": 48,
"tbk": 1,
"tl": 37368,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
178,
179,
180,
181,
346,
347,
348
]
},
{
"tb": 8192,
"tbk": 1,
"tl": 375510,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
96,
97,
98,
349
]
},
{
"tb": 9216,
"tbk": 2,
"tl": 1209,
"mb": 9216,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
96,
350,
351,
22
]
},
{
"tb": 2146304,
"tbk": 131,
"tl": 54887005,
"mb": 2146304,
"mbk": 131,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
96,
352,
353,
354
]
},
{
"tb": 32800,
"tbk": 3,
"tl": 621,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
96,
355,
356,
357
]
},
{
"tb": 16,
"tbk": 1,
"tl": 14731,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
358,
359,
360,
361,
362,
363,
364,
365,
366
]
},
{
"tb": 96,
"tbk": 1,
"tl": 1256,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
367,
368,
369,
370,
371
]
},
{
"tb": 73728,
"tbk": 2,
"tl": 3607,
"mb": 73728,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
96,
372,
373,
22
]
},
{
"tb": 17382,
"tbk": 10,
"tl": 1029,
"mb": 8704,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
244,
374,
375,
376,
377,
378
]
},
{
"tb": 128,
"tbk": 1,
"tl": 2612,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
379,
380,
381,
382,
324
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 1648,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
178,
179,
180,
181,
383,
384,
385
]
},
{
"tb": 16,
"tbk": 1,
"tl": 73,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
76,
161,
162,
386,
387,
388,
262
]
},
{
"tb": 96,
"tbk": 1,
"tl": 3345,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
389,
390,
391,
392,
262
]
},
{
"tb": 96,
"tbk": 1,
"tl": 24,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
42,
43,
44,
393,
46
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 1666,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
123,
124,
125,
289,
290,
291,
394,
395,
13
]
},
{
"tb": 768,
"tbk": 6,
"tl": 1821,
"mb": 384,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
396,
397,
398,
399,
190
]
},
{
"tb": 456,
"tbk": 2,
"tl": 1516,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
114,
115,
116,
142,
143,
144,
400,
401,
286
]
},
{
"tb": 384,
"tbk": 2,
"tl": 291,
"mb": 232,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
224,
225,
226,
227,
228,
402,
403
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1759,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
123,
124,
125,
289,
290,
291,
404,
194,
195
]
},
{
"tb": 480,
"tbk": 4,
"tl": 3550,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
244,
245,
246,
247,
405,
406
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1653,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
407,
408,
409,
410,
411,
412,
413,
414,
415
]
},
{
"tb": 512,
"tbk": 1,
"tl": 907,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
123,
124,
125,
289,
290,
291,
416,
286,
417
]
},
{
"tb": 7296,
"tbk": 2,
"tl": 276,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
96,
418,
419,
285
]
},
{
"tb": 96,
"tbk": 1,
"tl": 29368,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
42,
43,
44,
420,
13
]
},
{
"tb": 1152,
"tbk": 4,
"tl": 133,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
421,
422,
423,
424,
425
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 143936,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
96,
281,
282,
426
]
},
{
"tb": 72,
"tbk": 1,
"tl": 2530,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
427,
428,
429,
430,
169,
170,
171,
280,
288,
13
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
76,
431,
432,
195
]
},
{
"tb": 72,
"tbk": 3,
"tl": 7494,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
132,
133,
134,
135,
136,
137,
138,
139,
433,
329,
330,
331
]
},
{
"tb": 16,
"tbk": 1,
"tl": 98,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
76,
161,
162,
386,
434,
435,
335
]
},
{
"tb": 744,
"tbk": 1,
"tl": 1073,
"mb": 744,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
297,
298,
299,
300,
436,
121,
122,
13
]
},
{
"tb": 1752,
"tbk": 11,
"tl": 235,
"mb": 248,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
114,
115,
116,
117,
118,
119,
437,
228,
438
]
},
{
"tb": 8192,
"tbk": 1,
"tl": 6562,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
201,
202,
203,
204,
205,
206,
439
]
},
{
"tb": 96,
"tbk": 1,
"tl": 4475,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
15,
16,
17,
18,
321,
440,
441,
194
]
},
{
"tb": 512,
"tbk": 1,
"tl": 9,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
442,
443,
444,
445,
446,
447,
448,
449
]
},
{
"tb": 3072,
"tbk": 1,
"tl": 2523,
"mb": 3072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
427,
428,
429,
430,
169,
170,
171,
450,
288,
13
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1069,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
15,
196,
197,
198,
199,
200,
121,
122
]
},
{
"tb": 512,
"tbk": 1,
"tl": 2167,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
451,
452,
453,
454,
455,
456,
457,
458
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 162,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
123,
124,
125,
126,
127,
128,
459,
130,
131
]
},
{
"tb": 32,
"tbk": 1,
"tl": 62,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
460,
461,
462,
463,
464,
465,
466,
467,
468
]
},
{
"tb": 1048576,
"tbk": 128,
"tl": 22722538,
"mb": 1048576,
"mbk": 128,
"gb": 1048576,
"gbk": 128,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
123,
124,
125,
126,
127,
128,
469,
470,
471
]
},
{
"tb": 7296,
"tbk": 2,
"tl": 725,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
201,
202,
203,
204,
205,
206,
472
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 649866,
"mb": 4096,
"mbk": 1,
"gb": 4096,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
96,
97,
473,
474
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1161,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
475,
476,
477,
478,
479,
480,
481,
482
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 489487,
"mb": 8388608,
"mbk": 1,
"gb": 8388608,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
483,
484,
485,
486,
487,
488,
489,
490
]
},
{
"tb": 7296,
"tbk": 2,
"tl": 238,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
201,
202,
203,
204,
205,
206,
491
]
},
{
"tb": 16,
"tbk": 1,
"tl": 665380,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
492,
493,
494,
495,
496,
497,
498,
499
]
},
{
"tb": 1048576,
"tbk": 128,
"tl": 58305476,
"mb": 1048576,
"mbk": 128,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
123,
124,
125,
126,
127,
128,
168,
169,
170,
171,
500
]
},
{
"tb": 384,
"tbk": 1,
"tl": 416843,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
501,
502,
503,
504,
505,
506,
507,
508,
509
]
},
{
"tb": 32800,
"tbk": 3,
"tl": 597,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
96,
418,
510,
356
]
},
{
"tb": 32,
"tbk": 1,
"tl": 856,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
244,
245,
246,
247,
511,
512
]
},
{
"tb": 7296,
"tbk": 57,
"tl": 56,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
258,
513,
337,
514
]
},
{
"tb": 24,
"tbk": 1,
"tl": 11,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
427,
428,
429,
430,
169,
170,
171,
172,
515,
516
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 2601,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
66,
231,
232,
233,
517,
512,
371,
518
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
66,
67,
68,
69,
519,
520,
521,
522,
523,
524
]
},
{
"tb": 1824,
"tbk": 4,
"tl": 945,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
236,
237,
238,
525,
526,
527
]
},
{
"tb": 128,
"tbk": 1,
"tl": 3566,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
123,
124,
125,
289,
290,
291,
528,
529,
530
]
},
{
"tb": 16,
"tbk": 1,
"tl": 650178,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
531,
532,
533,
534,
535,
536,
537,
538
]
},
{
"tb": 16,
"tbk": 1,
"tl": 651292,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
40,
539,
540,
541,
542,
543,
544,
545,
546,
547,
548
]
},
{
"tb": 1088,
"tbk": 2,
"tl": 29,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
549,
550,
551,
552,
553,
554
]
},
{
"tb": 8695,
"tbk": 10,
"tl": 16067,
"mb": 4352,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
555,
556,
557,
558,
559
]
},
{
"tb": 1920,
"tbk": 8,
"tl": 1072,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
341,
342,
343,
560,
561
]
},
{
"tb": 32,
"tbk": 1,
"tl": 29363,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
244,
245,
246,
247,
562,
13
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 23318,
"mb": 8388608,
"mbk": 1,
"gb": 8388608,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
123,
124,
125,
126,
127,
128,
563,
564,
565
]
},
{
"tb": 48,
"tbk": 1,
"tl": 21480,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
427,
566,
567,
568,
569,
570,
571,
572,
573
]
},
{
"tb": 32,
"tbk": 1,
"tl": 122,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
76,
431,
574,
575,
576,
577,
578
]
},
{
"tb": 16,
"tbk": 1,
"tl": 649878,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
579,
580,
581,
582,
583,
584,
585,
586,
587
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
76,
588,
589,
590,
195
]
},
{
"tb": 10828,
"tbk": 16,
"tl": 7946,
"mb": 5440,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
244,
374,
375,
376,
377,
591
]
},
{
"tb": 96,
"tbk": 1,
"tl": 7951,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
42,
43,
44,
147,
345
]
},
{
"tb": 96,
"tbk": 1,
"tl": 2539,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
244,
592,
593,
594,
595,
512
]
},
{
"tb": 216,
"tbk": 1,
"tl": 4547,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
596,
597,
598,
599,
600,
601,
602,
603,
604
]
},
{
"tb": 48,
"tbk": 1,
"tl": 651229,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
605,
606,
607,
608,
609,
610,
516,
13
]
},
{
"tb": 512,
"tbk": 1,
"tl": 45,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
611,
612,
613,
614,
615,
616,
617,
618
]
},
{
"tb": 1432,
"tbk": 13,
"tl": 162,
"mb": 232,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
114,
115,
116,
117,
118,
119,
437,
228,
402
]
},
{
"tb": 64,
"tbk": 1,
"tl": 138,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
341,
342,
343,
619,
620
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
66,
67,
68,
69,
519,
520,
521,
522,
523,
590
]
},
{
"tb": 16,
"tbk": 1,
"tl": 96,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
76,
161,
621,
386,
434,
435,
335
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 140,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
47,
622,
623,
624,
625,
626,
627,
628,
293,
629
]
},
{
"tb": 4096,
"tbk": 7,
"tl": 832421,
"mb": 2112,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
630,
631,
632,
633,
634
]
},
{
"tb": 960,
"tbk": 8,
"tl": 2186,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
109,
110,
111,
112,
635
]
},
{
"tb": 24,
"tbk": 1,
"tl": 12910,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
636,
637,
638,
639,
640,
641,
642,
643,
644
]
},
{
"tb": 96,
"tbk": 1,
"tl": 21,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
76,
645,
386,
387,
388,
262,
195
]
},
{
"tb": 32,
"tbk": 1,
"tl": 4482,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
15,
16,
17,
18,
321,
646,
441,
194
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 3290,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
123,
124,
125,
126,
127,
128,
647,
648,
649
]
},
{
"tb": 3072,
"tbk": 1,
"tl": 455922,
"mb": 3072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
427,
428,
429,
430,
169,
170,
171,
500,
650,
651
]
},
{
"tb": 48,
"tbk": 1,
"tl": 64,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
76,
652,
243,
13,
14
]
},
{
"tb": 2304,
"tbk": 8,
"tl": 1985,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
653,
654,
655,
656,
657,
658
]
},
{
"tb": 4032,
"tbk": 6,
"tl": 168,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
341,
342,
343,
659,
620
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1145,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
660,
661,
662,
663,
664,
665,
666,
667
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1152,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
668,
669,
670,
671,
672,
673,
674,
675
]
},
{
"tb": 4032,
"tbk": 6,
"tl": 3321,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
341,
342,
343,
659,
676
]
},
{
"tb": 8388608,
"tbk": 16,
"tl": 1235194,
"mb": 8388608,
"mbk": 16,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
483,
484,
485,
486,
487,
677,
678,
679
]
},
{
"tb": 16,
"tbk": 1,
"tl": 71,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
76,
161,
621,
386,
387,
388,
262
]
},
{
"tb": 512,
"tbk": 1,
"tl": 2509,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
680,
681,
682,
683,
13
]
},
{
"tb": 1824,
"tbk": 2,
"tl": 5742,
"mb": 1824,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
15,
196,
197,
198,
199,
684,
337,
514
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 649846,
"mb": 16384,
"mbk": 1,
"gb": 16384,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
96,
97,
685,
686
]
},
{
"tb": 960,
"tbk": 8,
"tl": 127,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
244,
245,
246,
247,
309,
190
]
},
{
"tb": 72,
"tbk": 1,
"tl": 3201,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
76,
687,
518,
13,
14
]
},
{
"tb": 58368,
"tbk": 2,
"tl": 732,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
201,
202,
203,
204,
205,
206,
688
]
},
{
"tb": 4096,
"tbk": 2,
"tl": 51495,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
201,
202,
203,
204,
205,
206,
689
]
},
{
"tb": 7296,
"tbk": 2,
"tl": 6834,
"mb": 7296,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
690,
337,
514,
194
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 25,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
258,
691,
260,
194
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
539,
540,
541,
542,
543,
544,
545,
546,
692,
194
]
},
{
"tb": 32,
"tbk": 2,
"tl": 417107,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
693,
694,
695,
696,
697,
698,
699,
700
]
},
{
"tb": 96,
"tbk": 1,
"tl": 29,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
76,
645,
386,
434,
435,
335,
13
]
},
{
"tb": 48,
"tbk": 2,
"tl": 99,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
76,
701,
78,
79,
80,
81,
82
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 654789,
"mb": 1024,
"mbk": 1,
"gb": 1024,
"gbk": 1,
"eb": 1024,
"ebk": 1,
"fs": [
702,
703,
704,
705,
706,
707,
708,
709,
710,
711,
712,
713,
714,
715,
716,
717,
718,
719,
720,
721,
722
]
},
{
"tb": 64,
"tbk": 1,
"tl": 3303,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
341,
342,
343,
619,
676
]
},
{
"tb": 4032,
"tbk": 6,
"tl": 3064,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
341,
342,
343,
723,
148
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 3369,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
123,
124,
125,
126,
127,
128,
724,
725,
194
]
},
{
"tb": 160,
"tbk": 1,
"tl": 3361,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
726,
727,
728,
729,
194
]
},
{
"tb": 96,
"tbk": 1,
"tl": 651302,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
730,
731,
732,
733,
734,
735,
736,
737,
738
]
},
{
"tb": 16,
"tbk": 1,
"tl": 41,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
358,
739,
740,
741,
742,
743,
744,
745,
13,
14
]
},
{
"tb": 4096,
"tbk": 2,
"tl": 51503,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
201,
202,
203,
204,
205,
206,
746
]
},
{
"tb": 128,
"tbk": 1,
"tl": 3906,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
258,
747,
748,
194
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 486325,
"mb": 131072,
"mbk": 1,
"gb": 131072,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
15,
16,
17,
18,
19,
749,
750,
751
]
},
{
"tb": 16,
"tbk": 1,
"tl": 419276,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
123,
124,
125,
126,
127,
128,
752,
753,
754
]
},
{
"tb": 1456,
"tbk": 14,
"tl": 181,
"mb": 208,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
755,
756,
757,
758,
759,
760
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 1885,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
258,
761,
762,
324
]
},
{
"tb": 26240,
"tbk": 152,
"tl": 71490,
"mb": 7168,
"mbk": 30,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
15,
763,
764,
765,
766,
767,
768,
769,
770
]
},
{
"tb": 512,
"tbk": 1,
"tl": 20,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
123,
124,
125,
126,
127,
128,
771,
46,
262
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 37364,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
178,
179,
180,
181,
772,
347,
348
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
76,
588,
589,
524,
516,
13,
14
]
},
{
"tb": 96,
"tbk": 1,
"tl": 6,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
42,
43,
44,
773,
243
]
},
{
"tb": 128,
"tbk": 2,
"tl": 999,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
96,
97,
98,
774
]
},
{
"tb": 24,
"tbk": 1,
"tl": 131,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
427,
775,
776,
777,
778,
779,
780,
781,
782
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 416940,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
47,
622,
623,
624,
625,
626,
627,
628,
293,
294
]
},
{
"tb": 288,
"tbk": 1,
"tl": 3779,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
783,
784,
785,
786,
22
]
},
{
"tb": 224,
"tbk": 1,
"tl": 3637,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
787,
788,
789,
790,
514
]
},
{
"tb": 912,
"tbk": 2,
"tl": 683,
"mb": 912,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
791,
792,
793,
794,
795,
796,
797,
798
]
},
{
"tb": 128,
"tbk": 1,
"tl": 1580,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
799,
800,
801,
802,
803,
804,
805,
806
]
},
{
"tb": 96,
"tbk": 1,
"tl": 4823,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
807,
808,
809,
810,
811,
812,
146,
13,
14
]
},
{
"tb": 40,
"tbk": 1,
"tl": 167491,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
813,
814,
815,
816,
817,
818,
819,
820,
821
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1088,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
15,
196,
197,
198,
199,
200,
310,
371
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 2665,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
66,
231,
232,
233,
822,
512,
371,
518
]
},
{
"tb": 48,
"tbk": 1,
"tl": 12902,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
76,
823,
824,
825,
826,
827,
828
]
},
{
"tb": 17382,
"tbk": 10,
"tl": 2013,
"mb": 8704,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
244,
374,
375,
376,
377,
829
]
},
{
"tb": 24,
"tbk": 1,
"tl": 463060,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
830,
831,
832,
833,
834,
13,
14
]
},
{
"tb": 2097152,
"tbk": 128,
"tl": 250342,
"mb": 2097152,
"mbk": 128,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
123,
124,
125,
126,
127,
128,
168,
169,
170,
171,
450
]
},
{
"tb": 8192,
"tbk": 1,
"tl": 1376,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
123,
124,
125,
126,
127,
128,
724,
835,
243
]
},
{
"tb": 3456,
"tbk": 18,
"tl": 4409,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
836,
837,
838,
839,
840,
841
]
},
{
"tb": 576,
"tbk": 2,
"tl": 43,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
842,
843,
844,
845,
846,
847,
848,
849,
850
]
},
{
"tb": 1048576,
"tbk": 128,
"tl": 85062596,
"mb": 1048576,
"mbk": 128,
"gb": 1048576,
"gbk": 128,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
96,
851,
852,
853
]
},
{
"tb": 1752,
"tbk": 11,
"tl": 31,
"mb": 248,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
114,
115,
116,
117,
118,
119,
120,
310,
371
]
},
{
"tb": 8,
"tbk": 1,
"tl": 167467,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
83,
854,
855,
856,
857,
858,
859,
860,
861
]
},
{
"tb": 1152,
"tbk": 2,
"tl": 5478,
"mb": 1152,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
297,
298,
299,
300,
301,
336,
337,
514
]
},
{
"tb": 7296,
"tbk": 2,
"tl": 541,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
483,
484,
485,
486,
862,
191,
146,
13
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 378794,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
96,
165,
863,
864
]
},
{
"tb": 1536,
"tbk": 8,
"tl": 2051,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
836,
837,
838,
865,
866,
867
]
},
{
"tb": 2097152,
"tbk": 1024,
"tl": 6845,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
123,
124,
125,
126,
127,
128,
868,
869,
870
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 375520,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
224,
225,
226,
871,
872,
754,
13
]
},
{
"tb": 24,
"tbk": 1,
"tl": 186691,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
8,
873,
874,
875,
876,
877,
878,
879,
880
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 4070,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
96,
881,
882,
883
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 18345,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
96,
97,
98,
884
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 797,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
42,
43,
44,
885,
122
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 1644,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
178,
179,
180,
181,
886,
384,
385
]
},
{
"tb": 32,
"tbk": 1,
"tl": 15,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
66,
67,
68,
69,
70,
71,
72,
887,
74,
75
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1587,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
888,
889,
262,
195
]
},
{
"tb": 1752,
"tbk": 11,
"tl": 238,
"mb": 248,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
114,
115,
116,
117,
118,
119,
437,
228,
229
]
},
{
"tb": 480,
"tbk": 4,
"tl": 3015,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
244,
245,
246,
247,
405,
890
]
},
{
"tb": 96,
"tbk": 1,
"tl": 11,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
76,
645,
163,
164,
13,
14
]
},
{
"tb": 18432,
"tbk": 2,
"tl": 3428,
"mb": 18432,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
15,
16,
17,
18,
19,
173,
174,
891
]
},
{
"tb": 64,
"tbk": 1,
"tl": 3040,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
341,
342,
343,
344,
148
]
},
{
"tb": 384,
"tbk": 2,
"tl": 912,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
396,
397,
398,
399,
310
]
},
{
"tb": 96,
"tbk": 1,
"tl": 3633,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
42,
43,
44,
892,
514
]
},
{
"tb": 24,
"tbk": 1,
"tl": 145,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
76,
333,
334,
293,
629,
388,
262
]
},
{
"tb": 72,
"tbk": 1,
"tl": 463930,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
893,
894,
895,
896,
897,
898,
899,
900,
901
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1133,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
902,
903,
904,
905,
906,
907,
908,
909
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 649981,
"mb": 4096,
"mbk": 1,
"gb": 4096,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
47,
48,
49,
50,
51,
52,
910,
911
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1260,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
427,
428,
429,
430,
169,
170,
171,
172,
912,
371
]
},
{
"tb": 384,
"tbk": 2,
"tl": 66,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
913,
914,
915,
916,
917,
918,
919,
920,
921
]
},
{
"tb": 408,
"tbk": 2,
"tl": 150448,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
922,
923,
924,
925,
926,
927,
928,
929,
930
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 25458,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
123,
124,
125,
289,
290,
291,
931,
122,
13
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 131,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
123,
124,
125,
289,
290,
291,
292,
293,
629
]
},
{
"tb": 4128,
"tbk": 3,
"tl": 29461,
"mb": 4128,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
932,
933,
934,
935,
936,
937,
938,
939
]
},
{
"tb": 24,
"tbk": 1,
"tl": 463064,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
940,
941,
942,
943,
944,
13,
14
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3030,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
945,
946,
262,
195
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 2724,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
258,
761,
947,
324
]
},
{
"tb": 3072,
"tbk": 1,
"tl": 665254,
"mb": 3072,
"mbk": 1,
"gb": 3072,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
427,
948,
949,
950,
951,
952,
953,
954,
955
]
},
{
"tb": 128,
"tbk": 1,
"tl": 8,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
123,
124,
125,
126,
127,
128,
956,
146,
13
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 14116,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
178,
179,
180,
181,
957,
164,
13
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
66,
67,
68,
69,
519,
520,
521,
522,
958,
590
]
},
{
"tb": 512,
"tbk": 1,
"tl": 28,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
959,
320,
262,
195
]
},
{
"tb": 7296,
"tbk": 2,
"tl": 1055,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
483,
960,
961,
962,
963,
964,
965,
966,
967
]
},
{
"tb": 24,
"tbk": 1,
"tl": 463055,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
427,
968,
969,
970,
971,
13,
14
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 831,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
244,
245,
246,
247,
972,
228
]
},
{
"tb": 744,
"tbk": 1,
"tl": 1614,
"mb": 744,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
297,
298,
299,
300,
301,
323,
324,
193
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 20,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
123,
124,
125,
126,
127,
128,
724,
973,
13
]
},
{
"tb": 8128,
"tbk": 7,
"tl": 25,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
341,
342,
343,
974,
975
]
},
{
"tb": 480,
"tbk": 4,
"tl": 121,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
244,
245,
246,
247,
309,
121
]
},
{
"tb": 744,
"tbk": 1,
"tl": 1092,
"mb": 744,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
297,
298,
299,
300,
436,
310,
371,
518
]
},
{
"tb": 832,
"tbk": 8,
"tl": 166,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
755,
756,
757,
976,
977,
978
]
},
{
"tb": 48,
"tbk": 2,
"tl": 833662,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
132,
133,
134,
135,
136,
137,
138,
139,
979,
189
]
},
{
"tb": 512,
"tbk": 1,
"tl": 15,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
96,
418,
980,
46
]
},
{
"tb": 3072,
"tbk": 1,
"tl": 186663,
"mb": 3072,
"mbk": 1,
"gb": 3072,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
427,
981,
982,
983,
984,
985,
986,
987,
988
]
},
{
"tb": 1600,
"tbk": 8,
"tl": 102,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
989,
990,
991,
992,
993,
994
]
},
{
"tb": 24,
"tbk": 1,
"tl": 419279,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
132,
133,
134,
135,
136,
137,
138,
139,
753,
754
]
},
{
"tb": 197843,
"tbk": 7,
"tl": 4614,
"mb": 131462,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
555,
556,
557,
558,
995
]
},
{
"tb": 65536,
"tbk": 32,
"tl": 42110,
"mb": 65536,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
123,
124,
125,
289,
290,
291,
996,
997,
998
]
},
{
"tb": 96,
"tbk": 1,
"tl": 13,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
325,
999,
1000,
1001,
1002,
1003,
1004,
1005,
1006
]
},
{
"tb": 33248,
"tbk": 532,
"tl": 32168,
"mb": 8640,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
555,
1007,
1008,
1009,
1010,
1011,
1012
]
},
{
"tb": 240,
"tbk": 2,
"tl": 419258,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
76,
1013,
754,
13,
14
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
66,
67,
68,
69,
519,
520,
521,
522,
958,
524
]
},
{
"tb": 8388608,
"tbk": 4096,
"tl": 7342,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
123,
124,
125,
289,
290,
291,
1014,
1015,
750
]
},
{
"tb": 8,
"tbk": 1,
"tl": 16,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
1016,
1017,
1018,
1019,
1020,
1021,
1022,
1023
]
},
{
"tb": 4032,
"tbk": 6,
"tl": 7969,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
341,
342,
343,
723,
345
]
},
{
"tb": 1152,
"tbk": 2,
"tl": 830,
"mb": 696,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
297,
298,
299,
300,
436,
190,
191,
146
]
},
{
"tb": 512,
"tbk": 1,
"tl": 14,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
96,
418,
1024,
320
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
76,
161,
621,
163,
164,
13,
14
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2500,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
123,
124,
125,
126,
127,
128,
752,
433,
329,
330,
331
]
},
{
"tb": 216,
"tbk": 1,
"tl": 649997,
"mb": 216,
"mbk": 1,
"gb": 216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
596,
1025,
1026,
1027,
1028,
1029,
1030,
1031,
1032
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 30728,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
201,
202,
203,
204,
205,
206,
1033
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1385,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
427,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041
]
},
{
"tb": 32,
"tbk": 1,
"tl": 63,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
460,
1042,
1043,
1044,
1045,
1046,
1047,
1048,
1049
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2463,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
93,
94,
95,
258,
761,
1050,
303
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 29077,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
201,
202,
203,
204,
205,
206,
1051
]
},
{
"tb": 1968,
"tbk": 2,
"tl": 51,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1052,
1053,
1054,
1055,
1056,
1057
]
},
{
"tb": 384,
"tbk": 2,
"tl": 899,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
396,
397,
398,
399,
121
]
},
{
"tb": 80,
"tbk": 1,
"tl": 665279,
"mb": 80,
"mbk": 1,
"gb": 80,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
1058,
1059,
1060,
1061,
1062,
1063,
1064,
1065,
1066
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 21619,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
15,
16,
17,
18,
19,
173,
174,
1067
]
},
{
"tb": 2016,
"tbk": 6,
"tl": 419282,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
244,
245,
246,
247,
1068,
1069
]
},
{
"tb": 160,
"tbk": 1,
"tl": 3286,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1070,
1071,
1072,
1073,
1074,
1075,
1076,
1077,
1078
]
},
{
"tb": 248,
"tbk": 1,
"tl": 323,
"mb": 248,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
224,
225,
226,
227,
228,
438,
1079
]
},
{
"tb": 896,
"tbk": 6,
"tl": 4566,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
341,
342,
343,
1080,
1081
]
},
{
"tb": 256,
"tbk": 1,
"tl": 913,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
114,
115,
116,
142,
143,
144,
1082,
286,
417
]
},
{
"tb": 192,
"tbk": 1,
"tl": 3299,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
1083,
1084,
1085,
1086,
262
]
},
{
"tb": 7296,
"tbk": 57,
"tl": 47,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
92,
1087,
1088,
1089,
1090,
1091,
1092,
1093,
1094
]
},
{
"tb": 6048,
"tbk": 31,
"tl": 55711,
"mb": 6048,
"mbk": 31,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
15,
16,
17,
18,
321,
322,
302,
303
]
},
{
"tb": 3144,
"tbk": 2,
"tl": 838127,
"mb": 3144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
427,
1095,
1096,
1097,
1098,
1099,
1100,
1101,
1102
]
}
],
"ftbl": [
"[root]",
"0x5d1c477353b9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5d1c4767780b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5d1c47675a1d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5d1c477e9c2a: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5d1c477c8c7d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5d1c477cb613: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5d1c475dc237: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5d1c475fea1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d1c476d49b5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476d49b5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476d49b5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c4765d909: winter_prover::Prover::generate_proof (prover/src/lib.rs:309:32)",
"0x5d1c476702ee: winter_prover::Prover::prove (prover/src/lib.rs:175:37)",
"0x5d1c475d027c: winterfell::main (winterfell/src/main.rs:54:17)",
"0x5d1c475fadec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d1c476d4b95: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476d4b95: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476d4b95: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c4763ea57: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5d1c477a5472: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x5d1c475e199f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x5d1c475e6bc6: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x5d1c476c5e94: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476c5e94: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476c5e94: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476c5e94: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5d1c4771c5da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c4771aec4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c47747c5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c475ad46e: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x5d1c4760820c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d1c476c1e49: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476c1e49: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476c1e49: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476c1e49: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771c93a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c477197f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c4774701a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c47571c5f: winter_verifier::perform_verification (verifier/src/lib.rs:218:40)",
"0x5d1c4796df79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5d1c4796c709: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5d1c4761c281: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5d1c4763ca38: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5d1c476fd33e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5d1c475802d7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x5d1c47572a15: winter_verifier::perform_verification (verifier/src/lib.rs:311:25)",
"0x5d1c475fab4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d1c476594c4: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476594c4: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476594c4: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5d1c47709bf6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5d1c475d10ad: <winterfell::WorkAir as winter_air::air::Air>::new (winterfell/src/main.rs:151:23)",
"0x5d1c4757703b: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:102:85)",
"0x5d1c47753a6e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5d1c47930a99: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5d1c47930c0a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d1c479339e9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c479339e9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c479339e9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c479339e9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5d1c47933e2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c47933df7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c47933fce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c479364c9: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x5d1c478f9819: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5d1c478f862a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d1c478fb32c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c478fb32c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c478fb32c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5d1c478549e9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5d1c478549e9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5d1c478549e9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5d1c4767509a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x5d1c47553a26: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5d1c476a7714: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5d1c47734847: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x5d1c475504f5: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x5d1c4767d55c: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x5d1c4772b129: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x5d1c4767cb36: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x5d1c47680296: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x5d1c47659bcf: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:369:9)",
"0x5d1c4760044a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d1c476b5539: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476b5539: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476b5539: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476b5539: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771cb7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c4771ab14: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c4774844a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c4765d4ea: winter_prover::Prover::generate_proof (prover/src/lib.rs:272:43)",
"0x5d1c476074ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d1c476d47d5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476d47d5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476d47d5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c4763eae7: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5d1c475d8e2f: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x5d1c477a8338: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x5d1c47568d08: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x5d1c47609edc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d1c476cc25f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476cc25f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476cc25f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476cc25f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4770918b: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5d1c477198d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c4774756d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c4765d7f7: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:36)",
"0x5d1c479310f0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5d1c47925669: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5d1c47924e51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5d1c47924950: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x5d1c475e4e24: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x5d1c4792461c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c4792461c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c4792461c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5d1c4770b2d9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5d1c4770b2d9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5d1c4770b2d9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5d1c475dddbc: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x5d1c47678b91: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x5d1c4766030a: winter_prover::Prover::generate_proof (prover/src/lib.rs:608:34)",
"0x5d1c47684e08: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c47684e08: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c47684e08: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5d1c4770ab85: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5d1c4770ab85: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5d1c4770ab85: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5d1c47759d85: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x5d1c47759e16: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5d1c47572edf: winter_verifier::perform_verification (verifier/src/lib.rs:228:13)",
"0x5d1c4760406c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d1c47684f38: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c47684f38: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c47684f38: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5d1c4770b7c5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5d1c4770b7c5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5d1c4770b7c5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5d1c475518e2: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x5d1c4764b028: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:83:31)",
"0x5d1c477517af: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5d1c479245cc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5d1c479245cc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5d1c479245cc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5d1c475e4c0e: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x5d1c4766019c: winter_prover::Prover::generate_proof (prover/src/lib.rs:600:25)",
"0x5d1c4765b350: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:543:13)",
"0x5d1c47571fc9: winter_verifier::perform_verification (verifier/src/lib.rs:266:61)",
"0x5d1c477e255d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x5d1c477e8a25: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x5d1c477db86e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x5d1c475fe23c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d1c476b8bd9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476b8bd9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476b8bd9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476b8bd9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771d00a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c4771ac44: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c47747c2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c475664b2: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x5d1c475d6245: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x5d1c475d1247: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:176:13)",
"0x5d1c476af518: winter_prover::trace::Trace::validate (src/trace/mod.rs:123:26)",
"0x5d1c47661578: winter_prover::Prover::generate_proof (prover/src/lib.rs:379:17)",
"0x5d1c475d9ec7: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x5d1c475eb003: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x5d1c475ec210: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x5d1c476d3d83: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5d1c4770ad25: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5d1c4770ad25: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5d1c4770ad25: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5d1c476d20e6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5d1c475dd259: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x5d1c475de739: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x5d1c47599e5c: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x5d1c475e6d52: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x5d1c477a7b9b: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x5d1c47685511: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c47685511: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c47685511: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5d1c47709c80: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5d1c476ae55d: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:243:25)",
"0x5d1c475d0d94: winterfell::build_do_work_trace (winterfell/src/main.rs:91:5)",
"0x5d1c4767060b: winterfell::main::{{closure}} (winterfell/src/main.rs:30:23)",
"0x5d1c4763b041: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5d1c4763c018: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5d1c476fa8be: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5d1c4764de9d: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:175:17)",
"0x5d1c4764c34f: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:55:17)",
"0x5d1c475e03c0: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x5d1c475e50bd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x5d1c476a0e73: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x5d1c476a6ad4: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x5d1c4757650b: winter_verifier::verify (verifier/src/lib.rs:109:19)",
"0x5d1c475d0822: winterfell::main (winterfell/src/main.rs:71:11)",
"0x5d1c475a5c84: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c475a5c84: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c475a5c84: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5d1c47709c56: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5d1c475dda4c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x5d1c4796badc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x5d1c4796ad6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x5d1c4796aae8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x5d1c4796aae8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x5d1c4796a124: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5d1c47967d43: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x5d1c47739f8c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:40:30)",
"0x5d1c476cdd1f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476cdd1f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476cdd1f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476cdd1f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771c61d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c477184f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c4774734d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c475677f7: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x5d1c476c0b04: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476c0b04: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476c0b04: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476c0b04: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5d1c4771deaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c47719d64: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c477480da: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c475a9e8d: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x5d1c476d4646: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476d4646: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476d4646: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c475af882: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x5d1c475de46d: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x5d1c476a54ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x5d1c47572636: winter_verifier::perform_verification (verifier/src/lib.rs:305:9)",
"0x5d1c4784ff36: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c4784ff36: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c4784ff36: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c475abdac: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x5d1c47678d4a: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x5d1c4767672b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5d1c47675f9d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5d1c477e969a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5d1c477d6f7b: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5d1c477e11a9: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5d1c477db416: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5d1c4768a4ab: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x5d1c4765f02d: winter_prover::Prover::generate_proof (prover/src/lib.rs:524:9)",
"0x5d1c478f82e9: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5d1c47807840: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5d1c47807aa9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5d1c47817111: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5d1c47660e8b: winter_prover::Prover::generate_proof (prover/src/lib.rs:450:13)",
"0x5d1c475fd52a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d1c476b5949: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476b5949: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476b5949: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476b5949: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771d96a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c47719874: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c47747b8a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c4757a40e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x5d1c47683485: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5d1c47553126: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x5d1c476a7c15: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5d1c4757f6fe: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x5d1c475765da: winter_verifier::verify (verifier/src/lib.rs:111:21)",
"0x5d1c476cb40d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476cb40d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476cb40d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476cb40d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771ce4a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c4771a6e4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c47746d1a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c476a0ba1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x5d1c476030bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d1c476b46af: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476b46af: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476b46af: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476b46af: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c47709705: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5d1c4771a50a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c47746b3d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c4756d891: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x5d1c47564238: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x5d1c4759c30f: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x5d1c4759b506: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x5d1c4766facc: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:701:36)",
"0x5d1c47699921: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x5d1c477b7b73: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x5d1c477c05e9: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x5d1c47564314: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x5d1c4765de23: winter_prover::Prover::generate_proof (prover/src/lib.rs:423:33)",
"0x5d1c4768545b: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5d1c4768545b: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5d1c4768545b: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5d1c47559cba: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x5d1c4765a010: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:354:9)",
"0x5d1c47596a9c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:51:13)",
"0x5d1c4768a0f5: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x5d1c4757f6df: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x5d1c47606a6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d1c476d4875: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476d4875: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476d4875: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c475aea4c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x5d1c475ad547: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x5d1c476ad3a7: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x5d1c476a6d54: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x5d1c476a7e5f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x5d1c4773cb0a: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x5d1c477537a8: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5d1c475d8114: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x5d1c475de2b7: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x5d1c4757777b: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x5d1c476bd58d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476bd58d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476bd58d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476bd58d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771cd7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c47718d34: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c4774730a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c476a6733: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x5d1c47583cb7: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x5d1c47572abc: winter_verifier::perform_verification (verifier/src/lib.rs:317:25)",
"0x5d1c475a5785: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5d1c475aecc7: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x5d1c475a9f66: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x5d1c476a0d0d: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x5d1c47600c1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d1c475513e2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c475513e2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c475513e2: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5d1c4770adf5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5d1c4770adf5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5d1c4770adf5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5d1c4756424b: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x5d1c47550d37: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x5d1c47559b7f: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x5d1c476611b5: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:21)",
"0x5d1c475f1e35: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x5d1c475f5040: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x5d1c475994bd: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x5d1c4766feb8: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:716:26)",
"0x5d1c4765e931: winter_prover::Prover::generate_proof (prover/src/lib.rs:482:37)",
"0x5d1c47632fe1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5d1c4763c0d8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5d1c476fa67d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5d1c4765b1b5: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:547:13)",
"0x5d1c475e91b6: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x5d1c4759458a: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:155:31)",
"0x5d1c47597e25: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:128:17)",
"0x5d1c47792c6e: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5d1c4756aadb: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x5d1c475ec2d3: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x5d1c475e1afb: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x5d1c47566440: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x5d1c4774edb6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5d1c4754eb11: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5d1c475671bf: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x5d1c47564ac4: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x5d1c47568f9d: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x5d1c4760430c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d1c476b7b59: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476b7b59: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476b7b59: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476b7b59: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771c6ba: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c4771a9a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c47746eea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c4765ee8c: winter_prover::Prover::generate_proof (prover/src/lib.rs:505:52)",
"0x5d1c47631c21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5d1c4763bdd8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5d1c476fd6ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5d1c475778ec: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x5d1c4757a4b0: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x5d1c4764118f: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x5d1c475e193d: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x5d1c478f6700: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5d1c478f6939: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5d1c478f6132: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5d1c475af17c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x5d1c475abeb4: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x5d1c47619611: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5d1c4763c288: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5d1c476fac0b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5d1c475aa3c9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x5d1c4769f1b0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x5d1c47576038: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:216:32)",
"0x5d1c47755e5f: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5d1c47659b72: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:371:13)",
"0x5d1c4773a2cb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:64:9)",
"0x5d1c47572fcc: winter_verifier::perform_verification (verifier/src/lib.rs:225:43)",
"0x5d1c47622a31: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5d1c4763c048: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5d1c476ff55e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5d1c475733b2: winter_verifier::perform_verification (verifier/src/lib.rs:179:9)",
"0x5d1c47580325: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x5d1c477a7b89: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x5d1c4765f6b8: winter_prover::Prover::generate_proof (prover/src/lib.rs:558:13)",
"0x5d1c476392a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5d1c4763ca98: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5d1c476fc91b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5d1c475de0fa: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x5d1c479242c6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x5d1c477b76ca: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x5d1c4769e2d4: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x5d1c477b778d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x5d1c476a776e: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x5d1c475dc7dc: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x5d1c475e88d8: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x5d1c475fc03c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d1c476be909: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476be909: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476be909: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476be909: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771de3a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c47719934: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c47746a2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c47571ba2: winter_verifier::perform_verification (verifier/src/lib.rs:214:41)",
"0x5d1c477b6e04: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x5d1c47572c03: winter_verifier::perform_verification (verifier/src/lib.rs:323:5)",
"0x5d1c475d89fe: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x5d1c47699b6c: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x5d1c47660e30: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:13)",
"0x5d1c47636b21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5d1c4763c498: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5d1c476fe7ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5d1c475efdb7: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x5d1c4767cbae: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x5d1c477392f8: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:651:17)",
"0x5d1c475fd7bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d1c476d3a22: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476d3a22: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476d3a22: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5d1c475d0e36: <winterfell::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (winterfell/src/main.rs:133:9)",
"0x5d1c47576330: winter_verifier::verify (verifier/src/lib.rs:98:38)",
"0x5d1c47551750: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5d1c4764badf: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:41:22)",
"0x5d1c47596b39: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:36)",
"0x5d1c475ddaaf: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x5d1c475afabb: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x5d1c476a5cf0: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x5d1c4768a0d2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x5d1c476b3b50: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x5d1c476a6970: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x5d1c476bb4ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476bb4ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476bb4ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476bb4ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771dd3d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c477185f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c4774821d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c47583ff2: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x5d1c475642c5: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x5d1c476c4a3f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476c4a3f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476c4a3f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476c4a3f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771db1d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c47718bb7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c477469bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c47584df7: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x5d1c47759d72: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x5d1c475ff49c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d1c476be4cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476be4cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476be4cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476be4cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771d0dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c4771a3d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c47746a6d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c4765ccd2: winter_prover::Prover::generate_proof (prover/src/lib.rs:210:38)",
"0x5d1c47546a3f: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:230:34)",
"0x5d1c4774f026: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5d1c477753a7: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5d1c476998a2: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x5d1c477a74f9: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x5d1c475a537b: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x5d1c476c3ecd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476c3ecd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476c3ecd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476c3ecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771d09a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c47718544: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c4774773a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c476a650b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x5d1c4760169c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d1c476d4af5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476d4af5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476d4af5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c4763ec07: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5d1c4759c9bd: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x5d1c47598c90: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x5d1c4759b614: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x5d1c47699bbd: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x5d1c476baac3: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476baac3: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476baac3: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476baac3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771cbd4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c4771929a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c47747654: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c475cfd51: winterfell::main (winterfell/src/main.rs:22:32)",
"0x5d1c475498cd: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x5d1c475fbd9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d1c476c4e5f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476c4e5f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476c4e5f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476c4e5f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771c3cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c47719e87: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c47746e8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c4764bbcd: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:51:26)",
"0x5d1c475672ce: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x5d1c475a7999: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x5d1c47577845: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x5d1c475f1d26: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x5d1c476a7104: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x5d1c475ea2f2: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x5d1c4765cf02: winter_prover::Prover::generate_proof (prover/src/lib.rs:233:27)",
"0x5d1c475a7517: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x5d1c47660217: winter_prover::Prover::generate_proof (prover/src/lib.rs:603:29)",
"0x5d1c478ca69c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5d1c478ca69c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5d1c478ca69c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5d1c4756f084: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x5d1c4756edce: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x5d1c475ea2db: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x5d1c477c41e9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5d1c4772e15b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5d1c475a46eb: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5d1c475e6e92: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x5d1c475e6b2c: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x5d1c4765fb02: winter_prover::Prover::generate_proof (prover/src/lib.rs:571:9)",
"0x5d1c476baecf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476baecf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476baecf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476baecf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771dd5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c4771ada7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c47747edd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c475d00e6: winterfell::main (winterfell/src/main.rs:38:27)",
"0x5d1c4796c9ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d1c4796e04c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c4796e04c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c4796e04c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5d1c4796bc7c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5d1c4796bc7c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5d1c4796bc7c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5d1c47967ece: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x5d1c4756f29f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x5d1c475eadf3: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x5d1c4767807b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5d1c4767528d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5d1c477e92ea: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5d1c477c4009: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5d1c4772da75: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5d1c475a4598: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5d1c4796cea0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5d1c4796d0d9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5d1c4796d3d2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5d1c4796e159: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x5d1c4755232d: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x5d1c477abd94: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x5d1c477b795d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x5d1c47660e70: winter_prover::Prover::generate_proof (prover/src/lib.rs:449:13)",
"0x5d1c4759e081: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x5d1c4759ce86: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5d1c4766e12f: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:655:31)",
"0x5d1c476b818f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476b818f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476b818f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476b818f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771cccd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c47719cd7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c4774750d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c4773caa0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x5d1c477377a8: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:216:31)",
"0x5d1c47755d36: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5d1c47773bd0: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5d1c47741f66: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5d1c477498f6: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5d1c4760a17c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d1c476cceef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476cceef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476cceef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476cceef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771d27d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c47718c65: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c477299bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c4765d033: winter_prover::Prover::generate_proof (prover/src/lib.rs:248:41)",
"0x5d1c477a514c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x5d1c4756ee0c: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x5d1c475761dd: winter_verifier::verify (verifier/src/lib.rs:96:32)",
"0x5d1c475f13b5: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x5d1c478490b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5d1c4784bd69: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5d1c47853322: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5d1c475a765f: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x5d1c475fcd4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d1c476b859f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476b859f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476b859f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476b859f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c477080d6: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5d1c4771abc5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c4774830d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c475763a8: winter_verifier::verify (verifier/src/lib.rs:102:24)",
"0x5d1c475fb32c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d1c47553aea: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c47553aea: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c47553aea: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5d1c47709ca6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5d1c475ea508: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x5d1c476c03bf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476c03bf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476c03bf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476c03bf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771d6cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c4771ae45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c4774752d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c4757f4ab: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x5d1c4765c978: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:517:13)",
"0x5d1c475e96b2: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x5d1c475d1330: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:177:13)",
"0x5d1c47659012: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c47659012: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c47659012: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5d1c4770bb05: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5d1c4770bb05: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5d1c4770bb05: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5d1c47559b95: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x5d1c47739e16: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:26:25)",
"0x5d1c4761f8d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5d1c4763c318: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5d1c476fd12d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5d1c47566af2: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x5d1c47792ac5: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5d1c477b75ed: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x5d1c476006dc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d1c476c244f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476c244f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476c244f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476c244f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771d04d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c47717f75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c4774841d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c4765edcf: winter_prover::Prover::generate_proof (prover/src/lib.rs:501:51)",
"0x5d1c475d121b: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:175:9)",
"0x5d1c476b3997: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x5d1c476ae131: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x5d1c47682853: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x5d1c47735832: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x5d1c47548036: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5d1c47738c48: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:300:57)",
"0x5d1c4768a347: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x5d1c4793348b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5d1c47932e51: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5d1c4792c54b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5d1c47926c41: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5d1c479272c7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5d1c4793695b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5d1c4765ca42: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:512:13)",
"0x5d1c476cf9dd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476cf9dd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476cf9dd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476cf9dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771cc7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c47719ff4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c4774786a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c476a667b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x5d1c476c5b9d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476c5b9d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476c5b9d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476c5b9d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771c2aa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c47719394: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c47747b5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c476a65c3: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x5d1c475718e5: winter_verifier::perform_verification (verifier/src/lib.rs:185:13)",
"0x5d1c47561237: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x5d1c47598a29: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x5d1c477561d6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5d1c47614c01: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5d1c4763c408: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5d1c476fec54: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5d1c47661285: winter_prover::Prover::generate_proof (prover/src/lib.rs:418:17)",
"0x5d1c475f1b3e: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x5d1c475a5428: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x5d1c4765d132: winter_prover::Prover::generate_proof (prover/src/lib.rs:262:22)",
"0x5d1c4757a41d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x5d1c4769982f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x5d1c4754489d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x5d1c475f1b7f: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x5d1c47552f63: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x5d1c476a6370: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x5d1c476c80ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476c80ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476c80ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476c80ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771c44d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c47718625: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c4774713d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c47550d28: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x5d1c47550388: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x5d1c4751ed82: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5d1c4751ed82: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d1c4751ed82: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c4751ed82: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c4751ed82: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c4751ed82: std::io::buffered::bufwriter::BufWriter<W>::with_capacity (io/buffered/bufwriter.rs:115:33)",
"0x5d1c4751ed82: std::io::buffered::linewriter::LineWriter<W>::with_capacity (io/buffered/linewriter.rs:109:29)",
"0x5d1c4751ed82: std::io::buffered::linewriter::LineWriter<W>::new (io/buffered/linewriter.rs:89:9)",
"0x5d1c4751ed82: std::io::stdio::stdout::{{closure}} (src/io/stdio.rs:618:62)",
"0x5d1c4751ed82: std::sync::once_lock::OnceLock<T>::get_or_init::{{closure}} (src/sync/once_lock.rs:250:50)",
"0x5d1c4751ed82: std::sync::once_lock::OnceLock<T>::initialize::{{closure}} (src/sync/once_lock.rs:376:19)",
"0x5d1c4751ed82: std::sync::once::Once::call_once_force::{{closure}} (src/sync/once.rs:208:40)",
"0x5d1c4751ed82: std::sys_common::once::futex::Once::call (sys_common/once/futex.rs:124:21)",
"0x5d1c4751deca: std::sync::once::Once::call_once_force (src/sync/once.rs:208:9)",
"0x5d1c4751deca: std::sync::once_lock::OnceLock<T>::initialize (src/sync/once_lock.rs:375:9)",
"0x5d1c479881c5: std::sync::once_lock::OnceLock<T>::get_or_try_init (src/sync/once_lock.rs:298:9)",
"0x5d1c479881c5: std::sync::once_lock::OnceLock<T>::get_or_init (src/sync/once_lock.rs:250:15)",
"0x5d1c479881c5: std::io::stdio::stdout (src/io/stdio.rs:618:14)",
"0x5d1c479881c5: std::io::stdio::print_to (src/io/stdio.rs:1020:21)",
"0x5d1c479881c5: std::io::stdio::_print (src/io/stdio.rs:1097:5)",
"0x5d1c475d003a: winterfell::main (winterfell/src/main.rs:36:5)",
"0x5d1c4765b3d4: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:541:17)",
"0x5d1c476d20a6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5d1c476a7d01: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x5d1c4763ba21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5d1c4763be08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5d1c476fe42e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5d1c476a7f07: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x5d1c47601e6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d1c476bcb29: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476bcb29: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476bcb29: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476bcb29: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771ccaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c4771b084: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c4774719a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c475ea24b: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x5d1c476d3328: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476d3328: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476d3328: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5d1c4770b205: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5d1c4770b205: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5d1c4770b205: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5d1c4765eea3: winter_prover::Prover::generate_proof (prover/src/lib.rs:510:39)",
"0x5d1c4754488c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x5d1c475f5e4c: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x5d1c476a6f37: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x5d1c47599d9a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x5d1c4766e6ee: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:669:26)",
"0x5d1c4765d511: winter_prover::Prover::generate_proof (prover/src/lib.rs:274:13)",
"0x5d1c475518f5: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x5d1c47597973: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:33)",
"0x5d1c47661266: winter_prover::Prover::generate_proof (prover/src/lib.rs:417:21)",
"0x5d1c479332db: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5d1c47932fb1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5d1c4792c2ab: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5d1c47928f3e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5d1c4792a400: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5d1c47929bf8: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5d1c47672efa: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x5d1c475a9b8e: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x5d1c476b969a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476b969a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476b969a: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476b969a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5d1c4771c4cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c4771aa1a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c477a4f4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c475de243: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x5d1c4757f21f: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x5d1c475945e4: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:156:33)",
"0x5d1c4768a5c3: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x5d1c475ec222: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x5d1c476b83a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476b83a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476b83a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476b83a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771d48a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c47718fc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c47747a3a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c4765cd8f: winter_prover::Prover::generate_proof (prover/src/lib.rs:214:39)",
"0x5d1c4761e511: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5d1c4763ca08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5d1c476fa40e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5d1c475e1c69: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x5d1c476296d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5d1c4763c7c8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5d1c476fb67e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5d1c475f5216: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x5d1c476d0e6f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476d0e6f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476d0e6f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476d0e6f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771cecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c47718825: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c47747afd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c477b7c5a: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x5d1c476ced2f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476ced2f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476ced2f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476ced2f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771c56d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c47719125: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c4774798d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c477b6d29: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x5d1c47923c69: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5d1c47920c1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d1c4791ddb6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c4791ddb6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c4791ddb6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c475e4b68: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x5d1c476013fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d1c476c0edf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476c0edf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476c0edf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476c0edf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771d88d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c477190c5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c477469dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c4766e08b: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:648:34)",
"0x5d1c475a707a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x5d1c4765475a: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x5d1c47738852: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:503:32)",
"0x5d1c47755dc6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5d1c4777393a: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5d1c4773de27: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5d1c47748a22: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5d1c475a731d: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x5d1c47607ccc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d1c476d4c35: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476d4c35: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476d4c35: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c4765d88e: winter_prover::Prover::generate_proof (prover/src/lib.rs:307:44)",
"0x5d1c47689cbe: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x5d1c4793363b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5d1c47932f01: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5d1c4792c38b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5d1c4792904e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5d1c4792a9ec: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5d1c4792955a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5d1c475fe77c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d1c476c2bf2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476c2bf2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476c2bf2: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476c2bf2: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5d1c4771db7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c47718c35: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c477468cd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c4767ca6a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x5d1c476af1b0: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:140:51)",
"0x5d1c47750476: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5d1c4754efc1: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5d1c476ce4f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476ce4f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476ce4f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476ce4f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771c9da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c47719bc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c47746eba: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c4766dfcf: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:644:36)",
"0x5d1c475e0499: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x5d1c47566eae: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x5d1c4756aa1c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x5d1c47925e3d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5d1c47931748: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5d1c479350a7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5d1c47559106: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x5d1c47595ac9: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:290:18)",
"0x5d1c4759488e: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:173:30)",
"0x5d1c4756aa78: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x5d1c47597be1: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:135:9)",
"0x5d1c476b67f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476b67f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476b67f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476b67f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771c34a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c477183a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c4774813a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c4766df12: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:640:42)",
"0x5d1c47735c5a: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x5d1c477a96a7: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x5d1c4768c889: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x5d1c475466e8: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:227:28)",
"0x5d1c47678dca: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x5d1c4769f1ce: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x5d1c476750af: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x5d1c4757c7be: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x5d1c47572b34: winter_verifier::perform_verification (verifier/src/lib.rs:319:28)",
"0x5d1c475724f7: winter_verifier::perform_verification (verifier/src/lib.rs:298:27)",
"0x5d1c475e19b6: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x5d1c475f52b9: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x5d1c47606fac: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d1c476bc8df: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476bc8df: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476bc8df: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476bc8df: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c47707b4e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5d1c4771a415: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c477482ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c475794f7: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x5d1c476c605d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476c605d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476c605d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476c605d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771cdda: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c47719de4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c477471ca: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c476a67eb: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x5d1c47738f36: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:226:17)",
"0x5d1c4775319e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5d1c475776db: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x5d1c47607f6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d1c476cd22b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476cd22b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476cd22b: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476cd22b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5d1c4771daad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c4771a955: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c4763e16d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c4767e618: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x5d1c47602b7c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d1c476bc19f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476bc19f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476bc19f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476bc19f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771d54d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c4771a355: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c47747ddd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c475981b1: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x5d1c47678db3: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x5d1c476c7acf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476c7acf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476c7acf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476c7acf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771ca5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c47719c45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c47747e4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c475461cf: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:283:9)",
"0x5d1c476089ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d1c476d4a55: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476d4a55: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476d4a55: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c4765d877: winter_prover::Prover::generate_proof (prover/src/lib.rs:306:39)",
"0x5d1c477bfde9: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x5d1c475721ac: winter_verifier::perform_verification (verifier/src/lib.rs:275:24)",
"0x5d1c475aa31c: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x5d1c476cf36f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476cf36f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476cf36f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476cf36f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771c89d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c4771a895: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c47747bdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c476aefe2: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:140:32)",
"0x5d1c475e4c29: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x5d1c476af9a5: winter_prover::trace::Trace::validate (src/trace/mod.rs:179:13)",
"0x5d1c4756ed9a: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x5d1c47583ca0: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x5d1c476b770f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476b770f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476b770f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476b770f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771c27d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c4771aa55: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c477468ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c477b7ac4: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x5d1c476d43c5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476d43c5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476d43c5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c4765d8cd: winter_prover::Prover::generate_proof (prover/src/lib.rs:308:37)",
"0x5d1c475b0c4b: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x5d1c4765e4d0: winter_prover::Prover::generate_proof (prover/src/lib.rs:452:35)",
"0x5d1c47552461: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x5d1c475e903f: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x5d1c47925e9d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5d1c4793142b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5d1c479351e3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5d1c4764dd5a: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:170:36)",
"0x5d1c4757f3b7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x5d1c476caabf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476caabf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476caabf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476caabf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771de7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c4771a925: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c477475dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c47546788: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:228:23)",
"0x5d1c4793312b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5d1c47933061: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5d1c4792c46b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5d1c47926b71: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5d1c47927307: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5d1c4793690b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5d1c4792401a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x5d1c47577f56: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x5d1c47754eb6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5d1c47779fbd: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5d1c476b44b9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476b44b9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476b44b9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476b44b9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771c8ea: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c477194f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c4774739a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c4764afe8: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:83:9)",
"0x5d1c4796d108: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x5d1c4796d4ca: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x5d1c4796d4ca: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x5d1c4796d26e: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x5d1c4796d26e: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x5d1c4796d35d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x5d1c475978b2: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:28)",
"0x5d1c4759a9d6: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x5d1c47599e23: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x5d1c476b7033: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476b7033: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476b7033: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476b7033: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771d9ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c4771a545: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c47747fdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c4765d6db: winter_prover::Prover::generate_proof (prover/src/lib.rs:293:23)",
"0x5d1c47583eb1: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x5d1c476c286f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476c286f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476c286f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476c286f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771d61d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c47718285: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c47746c1d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c4765ceb3: winter_prover::Prover::generate_proof (prover/src/lib.rs:222:20)",
"0x5d1c47568a93: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x5d1c476bb2ef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476bb2ef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476bb2ef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476bb2ef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771d4cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c47719d15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c477467dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c475778d5: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x5d1c476bbb4f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476bbb4f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476bbb4f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476bbb4f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4770703e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5d1c4771b035: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c477480ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c475d074e: winterfell::main (winterfell/src/main.rs:65:26)",
"0x5d1c475ad356: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x5d1c4756124c: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x5d1c47676a8b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5d1c47675e3d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5d1c477e978a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5d1c477c42a9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5d1c4772cbc8: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5d1c4772b195: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x5d1c475fb5cc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d1c476beaff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476beaff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476beaff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476beaff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771c4ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c47719337: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c47747e8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c475cfedf: winterfell::main (winterfell/src/main.rs:28:26)",
"0x5d1c47599572: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x5d1c4756e41f: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x5d1c4756ca15: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x5d1c475ff1fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5d1c476c1622: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476c1622: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476c1622: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476c1622: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5d1c4771cdaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c47718484: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c477358ea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c476a4d67: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x5d1c475727a8: winter_verifier::perform_verification (verifier/src/lib.rs:306:42)",
"0x5d1c477354e2: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x5d1c4756ec98: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x5d1c477b6d9d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x5d1c476207a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5d1c4763c108: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5d1c476fcdae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5d1c475731eb: winter_verifier::perform_verification (verifier/src/lib.rs:184:9)",
"0x5d1c476bf95f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476bf95f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476bf95f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476bf95f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771da4d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c47719e15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c47747f5d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c477bd7af: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x5d1c476b5f8f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5d1c476b5f8f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5d1c476b5f8f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5d1c476b5f8f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5d1c4771d06d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5d1c47718f75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5d1c4774679d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5d1c475663a8: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)"
]
}