{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell",
"pid": 20814,
"tg": 53105175,
"te": 57791661,
"pps": [
{
"tb": 480,
"tbk": 4,
"tl": 173,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7
]
},
{
"tb": 1920,
"tbk": 3,
"tl": 59178,
"mb": 1920,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
16
]
},
{
"tb": 256,
"tbk": 1,
"tl": 467251,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
18,
19,
20,
21,
22,
23,
24
]
},
{
"tb": 96,
"tbk": 1,
"tl": 10,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
27,
28,
29,
30,
31
]
},
{
"tb": 256,
"tbk": 1,
"tl": 142,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
32,
33,
34,
35,
36,
37,
38,
39,
40
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 27,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
32,
33,
34,
35,
36,
37,
41,
42,
24
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 38714,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
32,
33,
34,
43,
44,
45,
46,
47,
24
]
},
{
"tb": 2306867200,
"tbk": 550,
"tl": 12996446294,
"mb": 2306867200,
"mbk": 550,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
48,
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 320,
"tbk": 2,
"tl": 1030349,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
56,
57,
58,
59,
60
]
},
{
"tb": 80,
"tbk": 1,
"tl": 515004,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
61,
62,
63,
64,
65,
66,
67,
68,
69
]
},
{
"tb": 10624,
"tbk": 3,
"tl": 1078,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
70,
71,
72,
73,
74,
75,
76
]
},
{
"tb": 512,
"tbk": 1,
"tl": 17697,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
77,
78,
79,
80,
81,
82,
83,
84
]
},
{
"tb": 16,
"tbk": 1,
"tl": 57423159,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
25,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94
]
},
{
"tb": 96,
"tbk": 1,
"tl": 37,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
95,
96,
97,
98,
99,
100,
24
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1791472,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
101,
102,
103,
104,
105,
106,
107,
108,
109
]
},
{
"tb": 128,
"tbk": 1,
"tl": 9821,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
32,
33,
34,
43,
44,
45,
110,
111,
112
]
},
{
"tb": 72,
"tbk": 3,
"tl": 66,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
113,
114,
115,
116,
117,
118,
119,
120,
121
]
},
{
"tb": 24,
"tbk": 1,
"tl": 4528648,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
122,
123,
124,
125,
126,
24,
127
]
},
{
"tb": 393216,
"tbk": 3,
"tl": 33107,
"mb": 393216,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
32,
33,
34,
35,
36,
37,
128,
129,
130,
131,
132
]
},
{
"tb": 140832,
"tbk": 3,
"tl": 7690438,
"mb": 140832,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
133,
134,
135,
136,
137,
138,
139,
140
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 1729750,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
70,
71,
72,
73,
74,
75,
141
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
95,
142,
143,
144
]
},
{
"tb": 105600,
"tbk": 1,
"tl": 57760371,
"mb": 105600,
"mbk": 1,
"gb": 105600,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
145,
146,
147,
148,
149,
150,
151,
152,
153
]
},
{
"tb": 128,
"tbk": 1,
"tl": 2559,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
154,
155,
156,
157,
158,
159,
160,
161
]
},
{
"tb": 2252800,
"tbk": 32,
"tl": 189424,
"mb": 2252800,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
32,
33,
34,
43,
44,
45,
162,
163,
164
]
},
{
"tb": 32,
"tbk": 1,
"tl": 139,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
32,
33,
34,
35,
36,
37,
165,
39,
40
]
},
{
"tb": 64,
"tbk": 1,
"tl": 20268,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
166,
167,
168,
169,
170
]
},
{
"tb": 32,
"tbk": 1,
"tl": 300,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
171,
172,
173,
174,
175,
176,
177,
178,
179,
180
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1549,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
181,
182,
47,
24
]
},
{
"tb": 10624,
"tbk": 3,
"tl": 61201,
"mb": 10624,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
183,
184,
185,
186,
15,
16,
31
]
},
{
"tb": 24,
"tbk": 1,
"tl": 52869379,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
187,
188,
189,
190,
191,
192,
193,
194,
195
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 25068,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
196,
197,
198,
199,
200
]
},
{
"tb": 24,
"tbk": 1,
"tl": 148,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
145,
201,
202,
203,
204,
205,
206,
207,
208
]
},
{
"tb": 480,
"tbk": 4,
"tl": 177,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
182
]
},
{
"tb": 2252800,
"tbk": 1,
"tl": 12167,
"mb": 2252800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
183,
184,
185,
209,
210,
211,
212
]
},
{
"tb": 48,
"tbk": 2,
"tl": 71,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
95,
213,
214,
215,
216,
217,
218
]
},
{
"tb": 55152,
"tbk": 970,
"tl": 1969736,
"mb": 12736,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
219,
220,
221,
222,
223,
224,
225
]
},
{
"tb": 16,
"tbk": 1,
"tl": 75,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
95,
226,
227,
97,
228,
229,
230
]
},
{
"tb": 2252800,
"tbk": 1,
"tl": 28088,
"mb": 2252800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
171,
231,
232,
233,
234,
235,
236,
237
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3388154,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
95,
238,
239,
240,
241,
242,
243
]
},
{
"tb": 2640,
"tbk": 14,
"tl": 57,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
244,
245,
246,
247,
248,
249,
250,
251,
252,
7,
236
]
},
{
"tb": 48,
"tbk": 1,
"tl": 17635,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
253,
254,
255,
256,
257,
258,
259,
260,
261
]
},
{
"tb": 1920,
"tbk": 10,
"tl": 3202,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
244,
262,
263,
264,
265,
266,
267
]
},
{
"tb": 256,
"tbk": 1,
"tl": 113,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
32,
33,
34,
43,
44,
45,
268,
269,
270
]
},
{
"tb": 16,
"tbk": 1,
"tl": 57412966,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
271,
272,
273,
274,
275,
276,
277,
278
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
85,
86,
87,
88,
89,
90,
91,
92,
279,
31
]
},
{
"tb": 2252832,
"tbk": 33,
"tl": 180911,
"mb": 2252800,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
32,
33,
34,
35,
36,
37,
128,
129,
130,
131,
280
]
},
{
"tb": 640,
"tbk": 3,
"tl": 633,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
244,
245,
281,
282,
283,
284,
285,
286,
287
]
},
{
"tb": 224,
"tbk": 3,
"tl": 526146,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
288,
289
]
},
{
"tb": 96,
"tbk": 1,
"tl": 21,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
95,
96,
97,
228,
229,
230,
144
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 45831489,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
183,
184,
185,
290,
291,
292,
293
]
},
{
"tb": 10624,
"tbk": 3,
"tl": 410,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
183,
184,
185,
290,
294,
295,
296
]
},
{
"tb": 240,
"tbk": 2,
"tl": 526148,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
95,
297,
298,
24,
127
]
},
{
"tb": 48,
"tbk": 1,
"tl": 103981,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
18,
19,
20,
21,
299,
300,
301
]
},
{
"tb": 72,
"tbk": 3,
"tl": 33009,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
302,
303,
304,
305,
306,
307,
308,
309,
310,
311,
312,
313
]
},
{
"tb": 70400,
"tbk": 1,
"tl": 319084,
"mb": 70400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
18,
19,
20,
21,
314,
315,
316
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3401,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
317,
212,
318
]
},
{
"tb": 32,
"tbk": 1,
"tl": 30477,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
319,
320,
321,
322,
323,
324,
325,
31
]
},
{
"tb": 224,
"tbk": 1,
"tl": 21090,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
326,
327,
328,
329,
16
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 24628,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
171,
231,
232,
233,
330,
331,
47,
24
]
},
{
"tb": 384,
"tbk": 1,
"tl": 11002,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
145,
332,
333,
334,
129,
130,
131,
335,
336,
24
]
},
{
"tb": 262176,
"tbk": 3,
"tl": 4654,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
183,
184,
185,
290,
337,
338,
339
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 57443616,
"mb": 1024,
"mbk": 1,
"gb": 1024,
"gbk": 1,
"eb": 1024,
"ebk": 1,
"fs": [
340,
341,
342,
343,
344,
345,
346,
347,
348,
349,
350,
351,
352,
353,
354,
355,
356,
357,
358,
359,
360
]
},
{
"tb": 8,
"tbk": 1,
"tl": 47031208,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
361,
362,
363,
364,
365,
366,
367,
368,
369
]
},
{
"tb": 32,
"tbk": 1,
"tl": 141,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
95,
142,
370,
371,
372,
373,
374
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 23861,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
32,
33,
34,
35,
36,
37,
41,
375,
376
]
},
{
"tb": 598016,
"tbk": 3,
"tl": 18272,
"mb": 598016,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
183,
184,
185,
290,
377,
378,
379
]
},
{
"tb": 10624,
"tbk": 3,
"tl": 1569,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
48,
380,
381,
382,
383,
384,
385,
386,
387
]
},
{
"tb": 32,
"tbk": 1,
"tl": 3534931,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
388,
24
]
},
{
"tb": 70400,
"tbk": 1,
"tl": 17604,
"mb": 70400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
18,
19,
20,
21,
389,
390,
391
]
},
{
"tb": 512,
"tbk": 1,
"tl": 515301,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
392,
393,
394,
395,
396,
397,
398,
399,
269,
400
]
},
{
"tb": 32,
"tbk": 1,
"tl": 79,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
401,
402,
403,
404,
405,
406,
407,
408,
409
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1210,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
27,
28,
29,
410,
47
]
},
{
"tb": 96,
"tbk": 1,
"tl": 26093,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
411,
412,
413,
414,
235
]
},
{
"tb": 2400,
"tbk": 20,
"tl": 1428,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
415,
285
]
},
{
"tb": 2306867200,
"tbk": 32768,
"tl": 739397,
"mb": 70400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
32,
33,
34,
43,
44,
45,
416,
417,
418
]
},
{
"tb": 128,
"tbk": 1,
"tl": 10764,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
244,
245,
246,
247,
248,
249,
250,
251,
419,
336,
24
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 410985,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
183,
184,
185,
290,
420,
421,
422
]
},
{
"tb": 512,
"tbk": 1,
"tl": 28,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
183,
184,
185,
423,
424,
230,
144
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 1729726,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
70,
71,
72,
73,
74,
75,
425
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1095,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
244,
245,
246,
247,
248,
426,
427,
428,
429,
430,
431
]
},
{
"tb": 24,
"tbk": 1,
"tl": 4528643,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
145,
432,
433,
434,
435,
24,
127
]
},
{
"tb": 2656,
"tbk": 3,
"tl": 59571,
"mb": 2656,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
319,
436,
437,
438,
439,
440,
15,
16
]
},
{
"tb": 480,
"tbk": 4,
"tl": 18895,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
441,
442
]
},
{
"tb": 288358400,
"tbk": 4400,
"tl": 220024662434,
"mb": 288358400,
"mbk": 4400,
"gb": 288358400,
"gbk": 4400,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
32,
33,
34,
35,
36,
37,
443,
444,
445
]
},
{
"tb": 144,
"tbk": 1,
"tl": 11015,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
446,
447,
448,
449,
311,
312,
313,
450,
336,
24
]
},
{
"tb": 48,
"tbk": 2,
"tl": 1030358,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
302,
303,
304,
305,
306,
307,
308,
309,
451,
60
]
},
{
"tb": 448,
"tbk": 3,
"tl": 20274,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
166,
167,
168,
452,
170
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 5418,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
319,
436,
437,
438,
439,
453,
7,
236
]
},
{
"tb": 262176,
"tbk": 3,
"tl": 4653,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
183,
184,
185,
290,
294,
454,
338
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1089,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
32,
33,
34,
43,
44,
45,
455,
430,
431
]
},
{
"tb": 10656,
"tbk": 79,
"tl": 1545157,
"mb": 10656,
"mbk": 79,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
319,
320,
321,
322,
323,
456,
14,
15
]
},
{
"tb": 24,
"tbk": 1,
"tl": 3388163,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
457,
458,
459,
460,
461,
462,
463,
464,
465
]
},
{
"tb": 262080,
"tbk": 12,
"tl": 1753693,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
166,
167,
168,
466,
467
]
},
{
"tb": 6759827,
"tbk": 7,
"tl": 30700,
"mb": 4506054,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
219,
468,
469,
470,
471
]
},
{
"tb": 2252800,
"tbk": 1,
"tl": 30088,
"mb": 2252800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
171,
231,
232,
233,
472,
235,
236,
237
]
},
{
"tb": 48,
"tbk": 1,
"tl": 488,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
95,
473,
376,
24,
127
]
},
{
"tb": 3280,
"tbk": 24,
"tl": 46,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
244,
245,
246,
247,
248,
249,
250,
251,
252,
474,
475
]
},
{
"tb": 3280,
"tbk": 24,
"tl": 412,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
244,
245,
246,
247,
248,
249,
250,
251,
476,
285,
286
]
},
{
"tb": 128,
"tbk": 1,
"tl": 383996,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
244,
245,
281,
282,
283,
477,
478,
298,
24
]
},
{
"tb": 288,
"tbk": 1,
"tl": 11194,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
479,
480,
481,
482,
379
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
171,
172,
173,
174,
483,
484,
485,
486,
487,
488
]
},
{
"tb": 8,
"tbk": 1,
"tl": 10223,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
244,
245,
489,
490,
491,
492,
493,
494,
495,
496
]
},
{
"tb": 96,
"tbk": 1,
"tl": 21085,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
27,
28,
29,
497,
16
]
},
{
"tb": 64,
"tbk": 1,
"tl": 155,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
166,
167,
168,
169,
498
]
},
{
"tb": 1440,
"tbk": 12,
"tl": 2048,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
499,
500,
501,
502,
503
]
},
{
"tb": 1440,
"tbk": 12,
"tl": 3956,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
499,
500,
501,
502,
504
]
},
{
"tb": 288358400,
"tbk": 4400,
"tl": 19897038986,
"mb": 288358400,
"mbk": 4400,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
32,
33,
34,
35,
36,
37,
128,
129,
130,
131,
505
]
},
{
"tb": 1328,
"tbk": 3,
"tl": 1489,
"mb": 1008,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
506,
507,
508,
509,
510,
511,
512,
513
]
},
{
"tb": 16,
"tbk": 1,
"tl": 77,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
95,
226,
514,
97,
228,
229,
230
]
},
{
"tb": 256,
"tbk": 1,
"tl": 103977,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
18,
19,
20,
21,
515,
300,
301
]
},
{
"tb": 512,
"tbk": 1,
"tl": 118,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
392,
393,
394,
395,
396,
397,
398,
399,
269,
270
]
},
{
"tb": 24,
"tbk": 1,
"tl": 515307,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
95,
516,
517,
269,
400,
100,
24
]
},
{
"tb": 1440,
"tbk": 12,
"tl": 251,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
474
]
},
{
"tb": 256,
"tbk": 1,
"tl": 102,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
70,
71,
72,
73,
74,
75,
518
]
},
{
"tb": 512,
"tbk": 1,
"tl": 57410649,
"mb": 512,
"mbk": 1,
"gb": 512,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
392,
519,
520,
521,
522,
523,
524,
525
]
},
{
"tb": 8,
"tbk": 1,
"tl": 8904,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
244,
245,
526,
527,
528,
529,
530,
531,
532,
533
]
},
{
"tb": 64,
"tbk": 1,
"tl": 18911,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
183,
184,
185,
534,
535,
230,
144
]
},
{
"tb": 96,
"tbk": 1,
"tl": 32,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
27,
28,
29,
536,
537
]
},
{
"tb": 24,
"tbk": 1,
"tl": 7,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
145,
332,
333,
334,
129,
130,
131,
280,
538,
539
]
},
{
"tb": 216,
"tbk": 1,
"tl": 57410666,
"mb": 216,
"mbk": 1,
"gb": 216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
540,
541,
542,
543,
544,
545,
546,
547,
548
]
},
{
"tb": 16,
"tbk": 1,
"tl": 11005,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
32,
33,
34,
35,
36,
37,
549,
310,
311,
312,
313
]
},
{
"tb": 48,
"tbk": 1,
"tl": 57423096,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
550,
551,
552,
553,
554,
555,
539,
24
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3486292,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
145,
556,
557,
558,
559,
560,
561,
562,
563
]
},
{
"tb": 62016,
"tbk": 136,
"tl": 28378,
"mb": 19152,
"mbk": 42,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
564,
565,
566,
567,
568,
569
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3814,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
570,
571,
572
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1753618,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
166,
167,
168,
573,
467
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
171,
172,
173,
174,
483,
484,
485,
486,
574,
488
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 15850,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
32,
33,
34,
43,
44,
45,
575,
576,
24
]
},
{
"tb": 768,
"tbk": 1,
"tl": 5791,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
145,
332,
333,
334,
129,
130,
131,
280,
577,
236
]
},
{
"tb": 32,
"tbk": 1,
"tl": 22,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
183,
184,
185,
209,
578,
579,
31
]
},
{
"tb": 80,
"tbk": 1,
"tl": 57760399,
"mb": 80,
"mbk": 1,
"gb": 80,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
580,
581,
582,
583,
584,
585,
586,
587,
588
]
},
{
"tb": 9600,
"tbk": 32,
"tl": 119783,
"mb": 9600,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
319,
320,
321,
322,
323,
456,
570,
571
]
},
{
"tb": 1088,
"tbk": 2,
"tl": 32,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
589,
590,
591,
592,
593,
594
]
},
{
"tb": 48,
"tbk": 2,
"tl": 106,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
95,
595,
214,
215,
216,
217,
218
]
},
{
"tb": 8,
"tbk": 1,
"tl": 52765369,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
361,
596,
597,
598,
599,
600,
601,
602,
603
]
},
{
"tb": 512,
"tbk": 4,
"tl": 1030038,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
604,
605,
606,
607,
608
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 23588,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
196,
197,
198,
199,
609
]
},
{
"tb": 256,
"tbk": 1,
"tl": 487,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
244,
245,
281,
282,
283,
284,
285,
610,
611
]
},
{
"tb": 448,
"tbk": 3,
"tl": 177,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
166,
167,
168,
452,
498
]
},
{
"tb": 288358400,
"tbk": 4400,
"tl": 254067888203,
"mb": 288358400,
"mbk": 4400,
"gb": 288358400,
"gbk": 4400,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
183,
184,
185,
290,
612,
613,
614
]
},
{
"tb": 16,
"tbk": 1,
"tl": 6,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
95,
226,
514,
615,
23,
24,
127
]
},
{
"tb": 256,
"tbk": 1,
"tl": 464,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
244,
245,
281,
282,
283,
284,
285,
616,
617
]
},
{
"tb": 105600,
"tbk": 1,
"tl": 52869246,
"mb": 105600,
"mbk": 1,
"gb": 105600,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
145,
618,
619,
620,
621,
622,
623,
624,
625
]
},
{
"tb": 48,
"tbk": 1,
"tl": 4583203,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
626,
627,
628,
629,
630,
631,
632,
633,
634
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 4644701,
"mb": 1048576,
"mbk": 1,
"gb": 1048576,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
319,
320,
321,
322,
635,
636,
637,
638
]
},
{
"tb": 192,
"tbk": 3,
"tl": 7984,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
183,
184,
185,
290,
639,
640,
641
]
},
{
"tb": 1920,
"tbk": 3,
"tl": 1836,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
181,
474,
475,
642
]
},
{
"tb": 256,
"tbk": 2,
"tl": 572,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
643,
644,
645,
646,
474
]
},
{
"tb": 140800,
"tbk": 1,
"tl": 262,
"mb": 140800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
183,
184,
185,
209,
647,
579,
31
]
},
{
"tb": 16,
"tbk": 1,
"tl": 110,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
95,
226,
227,
97,
98,
99,
100
]
},
{
"tb": 72,
"tbk": 1,
"tl": 11051,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
145,
332,
333,
334,
129,
130,
131,
132,
336,
24
]
},
{
"tb": 96,
"tbk": 1,
"tl": 12,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
95,
96,
615,
23,
24,
127
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 3533451,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
70,
71,
72,
73,
74,
75,
648
]
},
{
"tb": 16,
"tbk": 1,
"tl": 57760963,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
649,
650,
651,
652,
653,
654,
655,
656
]
},
{
"tb": 40,
"tbk": 1,
"tl": 47031246,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
657,
658,
659,
660,
661,
662,
663,
664,
665
]
},
{
"tb": 16,
"tbk": 1,
"tl": 358,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
101,
666,
667,
668,
669,
670,
671,
672,
24,
127
]
},
{
"tb": 140800,
"tbk": 2,
"tl": 571250,
"mb": 70400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
70,
71,
72,
73,
74,
75,
673
]
},
{
"tb": 10624,
"tbk": 83,
"tl": 83,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
183,
184,
185,
209,
674,
15,
16
]
},
{
"tb": 2252800,
"tbk": 1,
"tl": 23435,
"mb": 2252800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
183,
184,
185,
209,
210,
675,
212
]
},
{
"tb": 4968,
"tbk": 9,
"tl": 2506,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
676,
677,
678,
679,
680,
681
]
},
{
"tb": 72,
"tbk": 1,
"tl": 31018,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
95,
682,
237,
24,
127
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 18964,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
183,
184,
185,
209,
210,
683,
571
]
},
{
"tb": 512,
"tbk": 1,
"tl": 15,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
183,
184,
185,
290,
294,
684,
424
]
},
{
"tb": 128,
"tbk": 1,
"tl": 9,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
32,
33,
34,
35,
36,
37,
685,
642,
24
]
},
{
"tb": 512,
"tbk": 1,
"tl": 15045,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
183,
184,
185,
686,
537,
230,
144
]
},
{
"tb": 432,
"tbk": 3,
"tl": 1065,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
18,
19,
20,
21,
687,
296,
430
]
},
{
"tb": 2097152,
"tbk": 16,
"tl": 383701,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
688,
689,
690,
691,
692,
693,
694,
695
]
},
{
"tb": 1968,
"tbk": 2,
"tl": 54,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
696,
697,
698,
699,
700,
701
]
},
{
"tb": 24,
"tbk": 1,
"tl": 4528653,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
702,
703,
704,
705,
706,
24,
127
]
},
{
"tb": 384,
"tbk": 1,
"tl": 515192,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
707,
708,
709,
710,
711,
712,
713,
714,
715
]
},
{
"tb": 192,
"tbk": 1,
"tl": 20264,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
716,
717,
718,
719,
230
]
},
{
"tb": 32,
"tbk": 1,
"tl": 72,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
401,
720,
721,
722,
723,
724,
725,
726,
727
]
},
{
"tb": 10624,
"tbk": 3,
"tl": 1341,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
48,
49,
50,
51,
728,
475,
642,
24
]
},
{
"tb": 262080,
"tbk": 12,
"tl": 18991,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
166,
167,
168,
466,
729
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 3524,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
183,
184,
185,
290,
639,
640,
730
]
},
{
"tb": 140801,
"tbk": 1,
"tl": 313,
"mb": 140801,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
171,
172,
173,
174,
175,
176,
177,
731,
179,
180
]
},
{
"tb": 96,
"tbk": 1,
"tl": 11,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
27,
28,
29,
732,
376
]
},
{
"tb": 140800,
"tbk": 1,
"tl": 20256,
"mb": 140800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
32,
33,
34,
35,
36,
37,
733,
734,
735
]
},
{
"tb": 2280,
"tbk": 5,
"tl": 1578,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
564,
565,
566,
736,
737,
738
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 3714,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
319,
739,
740,
741,
742,
743,
744,
745,
746
]
},
{
"tb": 480,
"tbk": 4,
"tl": 9802,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
441,
747
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
171,
172,
173,
174,
483,
484,
485,
486,
487,
748
]
},
{
"tb": 74752,
"tbk": 3,
"tl": 9350,
"mb": 73728,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
183,
184,
185,
290,
749,
750,
379
]
},
{
"tb": 2640,
"tbk": 14,
"tl": 370,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
244,
245,
246,
247,
248,
249,
250,
251,
476,
285,
610
]
},
{
"tb": 512,
"tbk": 1,
"tl": 23,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
32,
33,
34,
35,
36,
37,
751,
537,
230
]
},
{
"tb": 32,
"tbk": 1,
"tl": 425,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
95,
752,
376,
24,
127
]
},
{
"tb": 16,
"tbk": 1,
"tl": 112,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
95,
226,
514,
97,
98,
99,
100
]
},
{
"tb": 2880,
"tbk": 10,
"tl": 3119,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
244,
753,
754,
755,
756,
757,
758
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
95,
759,
760,
488,
144
]
},
{
"tb": 256,
"tbk": 1,
"tl": 515294,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
32,
33,
34,
43,
44,
45,
268,
269,
400
]
},
{
"tb": 9600,
"tbk": 32,
"tl": 106516,
"mb": 9600,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
319,
320,
321,
322,
323,
456,
317,
212
]
},
{
"tb": 512,
"tbk": 1,
"tl": 24,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
183,
184,
185,
290,
639,
640,
761
]
},
{
"tb": 96,
"tbk": 1,
"tl": 5786,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
762,
763,
764,
765,
236
]
},
{
"tb": 10624,
"tbk": 83,
"tl": 68,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
766,
767,
768,
769,
770,
771,
772,
773
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
95,
226,
227,
615,
23,
24,
127
]
},
{
"tb": 96,
"tbk": 1,
"tl": 28,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
27,
28,
29,
774,
537
]
},
{
"tb": 1152,
"tbk": 4,
"tl": 142,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
775,
776,
777,
778,
779
]
},
{
"tb": 8,
"tbk": 1,
"tl": 23,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
244,
245,
780,
781,
782,
783,
784,
785,
786,
787
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 75089,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
183,
184,
185,
290,
291,
292,
788
]
},
{
"tb": 28210,
"tbk": 26,
"tl": 96876,
"mb": 14144,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
196,
197,
198,
199,
789
]
},
{
"tb": 24,
"tbk": 1,
"tl": 4528638,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
187,
790,
791,
792,
793,
24,
127
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 3459780,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
319,
320,
321,
322,
635,
794,
795,
796
]
},
{
"tb": 576,
"tbk": 2,
"tl": 46,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
797,
798,
799,
800,
801,
802,
803,
804,
805
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
171,
172,
173,
174,
483,
484,
485,
486,
574,
748
]
},
{
"tb": 96,
"tbk": 1,
"tl": 57423170,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
806,
807,
808,
809,
810,
811,
812,
813,
814
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 3810,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
319,
815,
816,
817,
818,
819,
820,
821,
822
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 57410425,
"mb": 131072,
"mbk": 1,
"gb": 131072,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
183,
184,
185,
290,
639,
823,
824
]
},
{
"tb": 512,
"tbk": 1,
"tl": 17,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
183,
184,
185,
825,
424,
230,
144
]
},
{
"tb": 8,
"tbk": 1,
"tl": 10214,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
244,
245,
826,
827,
828,
829,
830,
831,
832,
833
]
},
{
"tb": 1040,
"tbk": 10,
"tl": 264,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
244,
834,
835,
836,
837,
838,
839
]
},
{
"tb": 768,
"tbk": 1,
"tl": 6054,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
145,
840,
841,
842,
843,
844,
845,
846,
847
]
},
{
"tb": 2097152,
"tbk": 16,
"tl": 174188,
"mb": 2097152,
"mbk": 16,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
32,
33,
34,
35,
36,
37,
128,
129,
130,
131,
335
]
},
{
"tb": 2490368,
"tbk": 19,
"tl": 9976745,
"mb": 2490368,
"mbk": 19,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
183,
184,
185,
290,
848,
849,
850
]
},
{
"tb": 84992,
"tbk": 3,
"tl": 1090,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
70,
71,
72,
73,
74,
75,
851
]
},
{
"tb": 10624,
"tbk": 3,
"tl": 353,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
70,
71,
72,
73,
74,
75,
852
]
},
{
"tb": 384,
"tbk": 2,
"tl": 70,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
853,
854,
855,
856,
857,
858,
859,
860,
861
]
},
{
"tb": 32,
"tbk": 1,
"tl": 17720,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
32,
33,
34,
43,
44,
45,
862,
31,
144
]
},
{
"tb": 32,
"tbk": 1,
"tl": 5129,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
863,
235
]
},
{
"tb": 149504,
"tbk": 3,
"tl": 18038,
"mb": 149504,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
319,
320,
321,
322,
635,
864,
865,
379
]
},
{
"tb": 3120,
"tbk": 30,
"tl": 446,
"mb": 416,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
244,
834,
835,
836,
866,
867,
868
]
},
{
"tb": 768,
"tbk": 1,
"tl": 5422,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
181,
7,
236,
237
]
},
{
"tb": 32,
"tbk": 1,
"tl": 3534935,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
869,
24
]
},
{
"tb": 216,
"tbk": 1,
"tl": 30564,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
540,
870,
871,
872,
873,
874,
875,
876,
877
]
},
{
"tb": 512,
"tbk": 1,
"tl": 30552,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
392,
519,
520,
521,
522,
523,
878,
879
]
},
{
"tb": 160,
"tbk": 1,
"tl": 20250,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
880,
881,
882,
883,
884,
885,
886,
887,
888
]
},
{
"tb": 664,
"tbk": 3,
"tl": 2485,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
244,
245,
246,
247,
248,
426,
427,
428,
889,
890,
430
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 3453901,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
319,
320,
321,
322,
635,
636,
637,
891
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 57410534,
"mb": 32768,
"mbk": 1,
"gb": 32768,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
183,
184,
185,
290,
639,
892,
893
]
},
{
"tb": 8,
"tbk": 1,
"tl": 10190,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
244,
245,
894,
895,
896,
897,
898,
899,
900,
901
]
},
{
"tb": 128,
"tbk": 1,
"tl": 21380,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
183,
184,
185,
209,
902,
903,
31
]
},
{
"tb": 512,
"tbk": 1,
"tl": 17,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
183,
184,
185,
290,
294,
904,
537
]
},
{
"tb": 13224,
"tbk": 2,
"tl": 45903639,
"mb": 13200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
905,
906,
907,
908,
909,
910,
911,
912,
913
]
},
{
"tb": 256,
"tbk": 1,
"tl": 10,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
244,
245,
246,
247,
248,
426,
427,
428,
914,
642,
24
]
},
{
"tb": 24,
"tbk": 1,
"tl": 526168,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
302,
303,
304,
305,
306,
307,
308,
309,
915,
298
]
},
{
"tb": 2640,
"tbk": 14,
"tl": 57,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
244,
245,
246,
247,
248,
249,
250,
251,
252,
182,
47
]
},
{
"tb": 56,
"tbk": 1,
"tl": 3265,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
95,
916,
318,
31,
144
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 5734125,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
183,
184,
185,
290,
639,
640,
917
]
},
{
"tb": 70400,
"tbk": 1,
"tl": 17629,
"mb": 70400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
18,
19,
20,
21,
918,
390,
391
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
95,
759,
760,
748,
539,
24,
127
]
},
{
"tb": 557047,
"tbk": 16,
"tl": 1815716,
"mb": 278528,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
219,
468,
469,
470,
919
]
},
{
"tb": 144,
"tbk": 1,
"tl": 34011,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
920,
921,
922,
923,
924,
925,
642,
24,
127
]
},
{
"tb": 896,
"tbk": 6,
"tl": 30590,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
166,
167,
168,
926,
927
]
},
{
"tb": 2306867200,
"tbk": 1,
"tl": 7190351,
"mb": 2306867200,
"mbk": 1,
"gb": 2306867200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
48,
49,
50,
51,
52,
928,
929,
930
]
},
{
"tb": 8,
"tbk": 1,
"tl": 6087,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
931,
932,
933,
934,
935,
936,
937,
938,
939
]
},
{
"tb": 128,
"tbk": 1,
"tl": 19746,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
940,
941,
942,
943,
212
]
},
{
"tb": 512,
"tbk": 1,
"tl": 9,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
944,
945,
946,
947,
948,
949,
950,
951
]
},
{
"tb": 96,
"tbk": 1,
"tl": 13,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
446,
952,
953,
954,
955,
956,
957,
958,
959
]
},
{
"tb": 16,
"tbk": 1,
"tl": 57410545,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
960,
961,
962,
963,
964,
965,
966,
967,
968
]
},
{
"tb": 5760,
"tbk": 30,
"tl": 10430,
"mb": 768,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
244,
262,
263,
264,
969,
970,
971
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 15813,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
183,
184,
185,
290,
639,
640,
972
]
},
{
"tb": 2306867200,
"tbk": 1,
"tl": 1199440,
"mb": 2306867200,
"mbk": 1,
"gb": 2306867200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
32,
33,
34,
35,
36,
37,
973,
974,
975
]
},
{
"tb": 160,
"tbk": 1,
"tl": 20303,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
976,
977,
978,
979,
31
]
},
{
"tb": 512,
"tbk": 1,
"tl": 2567,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
183,
184,
185,
980,
981,
230,
144
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1545,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
319,
436,
437,
438,
439,
453,
182,
47
]
},
{
"tb": 74752,
"tbk": 3,
"tl": 8198,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
183,
184,
185,
290,
420,
982,
983
]
},
{
"tb": 2640,
"tbk": 14,
"tl": 363,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
244,
245,
246,
247,
248,
249,
250,
251,
476,
285,
616
]
},
{
"tb": 48,
"tbk": 2,
"tl": 1052307,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
302,
303,
304,
305,
306,
307,
308,
309,
984,
985
]
},
{
"tb": 96,
"tbk": 1,
"tl": 3534941,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
27,
28,
29,
986,
24
]
},
{
"tb": 524224,
"tbk": 13,
"tl": 194,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
166,
167,
168,
987,
988
]
},
{
"tb": 8,
"tbk": 1,
"tl": 10206,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
244,
245,
989,
990,
991,
992,
993,
994,
995,
996
]
},
{
"tb": 128,
"tbk": 1,
"tl": 30466,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
319,
320,
321,
322,
323,
997,
325,
31
]
},
{
"tb": 2880,
"tbk": 12,
"tl": 1594,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
166,
167,
168,
998,
999
]
},
{
"tb": 2000,
"tbk": 10,
"tl": 188,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
244,
1000,
1001,
1002,
1003,
1004,
1005
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 5510522,
"mb": 1048576,
"mbk": 1,
"gb": 1048576,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
319,
320,
321,
322,
635,
1006,
418,
1007
]
},
{
"tb": 71040,
"tbk": 294,
"tl": 253542,
"mb": 15104,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
319,
1008,
1009,
1010,
1011,
1012,
1013,
1014,
1015
]
},
{
"tb": 16,
"tbk": 1,
"tl": 526164,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
32,
33,
34,
35,
36,
37,
549,
915,
298
]
},
{
"tb": 8,
"tbk": 1,
"tl": 10198,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
244,
245,
1016,
1017,
1018,
1019,
1020,
1021,
1022,
1023
]
},
{
"tb": 105600,
"tbk": 1,
"tl": 4583191,
"mb": 105600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
145,
332,
333,
334,
129,
130,
131,
505,
1024,
1025
]
},
{
"tb": 512,
"tbk": 1,
"tl": 11024,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
1026,
1027,
1028,
1029,
24
]
},
{
"tb": 32,
"tbk": 2,
"tl": 515448,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037
]
},
{
"tb": 456,
"tbk": 2,
"tl": 1048722,
"mb": 456,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
145,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045
]
},
{
"tb": 140800,
"tbk": 2,
"tl": 571262,
"mb": 70400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
70,
71,
72,
73,
74,
75,
1046
]
},
{
"tb": 512,
"tbk": 1,
"tl": 15049,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
183,
184,
185,
1047,
537,
230,
144
]
},
{
"tb": 131072,
"tbk": 2,
"tl": 6972363,
"mb": 131072,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
32,
33,
34,
43,
44,
45,
1048,
1049,
1050
]
},
{
"tb": 512,
"tbk": 1,
"tl": 47,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
1051,
1052,
1053,
1054,
1055,
1056,
1057,
1058
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 37401,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
183,
184,
185,
290,
1059,
1060,
1061
]
},
{
"tb": 2304,
"tbk": 10,
"tl": 979,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
244,
245,
1062,
1063,
1064,
1065,
1066,
1067,
1068,
1069
]
},
{
"tb": 7728,
"tbk": 14,
"tl": 2568,
"mb": 2760,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
676,
677,
678,
1070,
1071,
1072
]
},
{
"tb": 140800,
"tbk": 1,
"tl": 20313,
"mb": 140800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
32,
33,
34,
35,
36,
37,
41,
1073,
31
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 383987,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
183,
184,
185,
290,
639,
640,
1074
]
},
{
"tb": 72,
"tbk": 1,
"tl": 4635719,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
1075,
1076,
1077,
1078,
1079,
1080,
1081,
1082,
1083
]
},
{
"tb": 2656,
"tbk": 3,
"tl": 1828,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
319,
436,
437,
438,
439,
453,
474,
475
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 3545641,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
70,
71,
72,
73,
74,
75,
1084
]
},
{
"tb": 96,
"tbk": 1,
"tl": 1753624,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
27,
28,
29,
1085,
467
]
},
{
"tb": 149504,
"tbk": 3,
"tl": 16929,
"mb": 149504,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
319,
320,
321,
322,
635,
636,
637,
1086
]
},
{
"tb": 96,
"tbk": 1,
"tl": 18920,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
27,
28,
29,
1085,
729
]
},
{
"tb": 2097152,
"tbk": 8192,
"tl": 10738,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
17,
32,
33,
34,
35,
36,
37,
1087,
1088,
1089
]
},
{
"tb": 48,
"tbk": 1,
"tl": 17477,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
1090,
1091,
1092,
1093,
1094,
1095,
1096,
1097,
1098
]
},
{
"tb": 96,
"tbk": 1,
"tl": 20284,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
1099,
1100,
1101,
1102,
230
]
},
{
"tb": 64,
"tbk": 1,
"tl": 18916,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
166,
167,
168,
573,
729
]
},
{
"tb": 24,
"tbk": 1,
"tl": 123,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
95,
516,
517,
269,
270,
229,
230
]
}
],
"ftbl": [
"[root]",
"0x5e20f0407819: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5e20f04062e9: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5e20f0315840: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e20f0315aa9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e20f0325111: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e20f00ec2b7: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x5e20f008577b: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x5e20f02433b9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5e20f0114a6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e20f01e2875: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01e2875: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01e2875: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f00bca4c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x5e20f00ffe35: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x5e20f0103040: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x5e20f01b5104: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x5e20f01154ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e20f0193511: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f0193511: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f0193511: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5e20f0217c80: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5e20f01bd9a5: winter_prover::trace::Trace::validate (src/trace/mod.rs:179:13)",
"0x5e20f016f578: winter_prover::Prover::generate_proof (prover/src/lib.rs:379:17)",
"0x5e20f017e2ee: winter_prover::Prover::prove (prover/src/lib.rs:175:37)",
"0x5e20f047bf79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5e20f047a709: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5e20f012a281: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e20f014aa38: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e20f020b33e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e20f01b5e5f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x5e20f008450b: winter_verifier::verify (verifier/src/lib.rs:109:19)",
"0x5e20f0192e08: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f0192e08: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f0192e08: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5e20f0218b85: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5e20f0218b85: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5e20f0218b85: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5e20f0267d72: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x5e20f0267e16: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5e20f0080edf: winter_verifier::perform_verification (verifier/src/lib.rs:228:13)",
"0x5e20f01e00a6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5e20f016c4d0: winter_prover::Prover::generate_proof (prover/src/lib.rs:452:35)",
"0x5e20f019345b: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5e20f019345b: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5e20f019345b: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5e20f0186db3: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x5e20f016e30a: winter_prover::Prover::generate_proof (prover/src/lib.rs:608:34)",
"0x5e20f010f69c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e20f01e2af5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01e2af5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01e2af5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f014cc07: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5e20f006f237: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x5e20f00a6a29: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x5e20f02641d6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5e20f0149041: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e20f014a018: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e20f02088be: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e20f015be9d: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:175:17)",
"0x5e20f015a34f: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:55:17)",
"0x5e20f01110bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e20f01c26af: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01c26af: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01c26af: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01c26af: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f0217705: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5e20f022850a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f0254b3d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f007b891: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x5e20f0479adc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x5e20f0478d6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x5e20f0478ae8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x5e20f0478ae8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x5e20f0478124: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5e20f0475d43: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x5e20f01a78a2: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x5e20f01d2a3f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01d2a3f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01d2a3f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01d2a3f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022bb1d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f0226bb7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f02549bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f0092df7: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x5e20f047a9ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e20f047c04c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f047c04c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f047c04c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5e20f0479c7c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5e20f0479c7c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5e20f0479c7c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5e20f0475ece: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x5e20f007d29f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x5e20f00f8df3: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x5e20f0242847: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x5e20f00df21b: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:175:9)",
"0x5e20f0167b72: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:371:13)",
"0x5e20f0159adf: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:41:22)",
"0x5e20f00a4b39: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:36)",
"0x5e20f016f1b5: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:21)",
"0x5e20f011230c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e20f01c5b59: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01c5b59: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01c5b59: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01c5b59: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022a6ba: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f02289a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f0254eea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f016ce8c: winter_prover::Prover::generate_proof (prover/src/lib.rs:505:52)",
"0x5e20f00f4e92: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x5e20f00f4b2c: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x5e20f016db02: winter_prover::Prover::generate_proof (prover/src/lib.rs:571:9)",
"0x5e20f010c23c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e20f01c6bd9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01c6bd9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01c6bd9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01c6bd9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022b00a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f0228c44: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f0255c2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f00744b2: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x5e20f0115ccc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e20f01e2c35: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01e2c35: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01e2c35: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f016b88e: winter_prover::Prover::generate_proof (prover/src/lib.rs:307:44)",
"0x5e20f00de27c: winterfell::main (winterfell/src/main.rs:54:17)",
"0x5e20f01e1d83: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5e20f0218d25: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5e20f0218d25: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5e20f0218d25: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5e20f0072238: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x5e20f01d5acf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01d5acf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01d5acf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01d5acf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022aa5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f0227c45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f0255e4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f00541cf: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:283:9)",
"0x5e20f01980d2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x5e20f00dee36: <winterfell::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (winterfell/src/main.rs:133:9)",
"0x5e20f0084330: winter_verifier::verify (verifier/src/lib.rs:98:38)",
"0x5e20f00de822: winterfell::main (winterfell/src/main.rs:71:11)",
"0x5e20f010b7bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e20f01dd36f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01dd36f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01dd36f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01dd36f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022a89d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f0228895: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f0255bdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f01bcfe2: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:140:32)",
"0x5e20f01dcd2f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01dcd2f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01dcd2f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01dcd2f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022a56d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f0227125: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f025598d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f02c4d29: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x5e20f0085f56: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x5e20f0262eb6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5e20f0287fbd: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5e20f0267d85: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x5e20f0140fe1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e20f014a0d8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e20f020867d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e20f016a978: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:517:13)",
"0x5e20f007f8e5: winter_verifier::perform_verification (verifier/src/lib.rs:185:13)",
"0x5e20f040662a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e20f040932c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f040932c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f040932c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5e20f03629e9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5e20f03629e9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5e20f03629e9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5e20f01830af: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x5e20f0061a26: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5e20f01b5714: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5e20f00ebaaf: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x5e20f0186b91: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x5e20f01e27d5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01e27d5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01e27d5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f00ffb7f: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x5e20f010ca1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e20f01c47f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01c47f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01c47f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01c47f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022a34a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f02263a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f025613a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f017bf12: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:640:42)",
"0x5e20f0404700: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e20f0404939: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e20f0404132: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e20f00bd17c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x5e20f00b531d: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x5e20f01c63a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01c63a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01c63a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01c63a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022b48a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f0226fc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f0255a3a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f016ad8f: winter_prover::Prover::generate_proof (prover/src/lib.rs:214:39)",
"0x5e20f0191485: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5e20f0180efa: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x5e20f00b7b8e: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x5e20f01aed0d: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x5e20f005e4f5: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x5e20f018b55c: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x5e20f0239129: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x5e20f018ab36: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x5e20f018e296: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x5e20f0167bcf: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:369:9)",
"0x5e20f047aea0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e20f047b108: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x5e20f047b4ca: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x5e20f047b4ca: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x5e20f047b26e: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x5e20f047b26e: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x5e20f047b35d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x5e20f00e4245: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x5e20f00df330: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:177:13)",
"0x5e20f02482cb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:64:9)",
"0x5e20f0080fcc: winter_verifier::perform_verification (verifier/src/lib.rs:225:43)",
"0x5e20f00845da: winter_verifier::verify (verifier/src/lib.rs:111:21)",
"0x5e20f035df36: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f035df36: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f035df36: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f00b5517: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x5e20f0085845: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x5e20f00884b0: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x5e20f016e217: winter_prover::Prover::generate_proof (prover/src/lib.rs:603:29)",
"0x5e20f016275a: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x5e20f0246852: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:503:32)",
"0x5e20f0263dc6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5e20f028193a: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5e20f024be27: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5e20f0256a22: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5e20f043ea99: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5e20f043ec0a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e20f043261c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f043261c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f043261c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5e20f02192d9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5e20f02192d9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5e20f02192d9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5e20f00ebdbc: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x5e20f010a03c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e20f01cc909: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01cc909: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01cc909: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01cc909: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022be3a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f0227934: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f0254a2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f007fba2: winter_verifier::perform_verification (verifier/src/lib.rs:214:41)",
"0x5e20f044163b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5e20f0440f01: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5e20f043a38b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5e20f0433e3d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5e20f043f748: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5e20f04430a7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5e20f0067cba: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x5e20f0168010: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:354:9)",
"0x5e20f0247e16: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:26:25)",
"0x5e20f01c8ecf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01c8ecf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01c8ecf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01c8ecf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022bd5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f0228da7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f0255edd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f00de0e6: winterfell::main (winterfell/src/main.rs:38:27)",
"0x5e20f01b4370: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x5e20f01e00e6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5e20f01e2646: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01e2646: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01e2646: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f00bd882: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x5e20f00ec46d: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x5e20f01ac2d4: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x5e20f02c578d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x5e20f007c41f: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x5e20f007aa15: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x5e20f014cae7: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5e20f00aa30f: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x5e20f00a9506: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x5e20f02472f8: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:651:17)",
"0x5e20f00e69fe: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x5e20f01a7b6c: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x5e20f02c5b73: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x5e20f00a58b2: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:28)",
"0x5e20f016f266: winter_prover::Prover::generate_proof (prover/src/lib.rs:417:21)",
"0x5e20f00a258a: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:155:31)",
"0x5e20f00a5e25: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:128:17)",
"0x5e20f02a0c6e: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5e20f011206c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e20f0192f38: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f0192f38: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f0192f38: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5e20f02197c5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5e20f02197c5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5e20f02197c5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5e20f005f8e2: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x5e20f005f750: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5e20f0218df5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5e20f0218df5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5e20f0218df5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5e20f01bc55d: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:243:25)",
"0x5e20f00ded94: winterfell::build_do_work_trace (winterfell/src/main.rs:91:5)",
"0x5e20f017e60b: winterfell::main::{{closure}} (winterfell/src/main.rs:30:23)",
"0x5e20f00b7f66: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x5e20f01b4ad4: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x5e20f0108dec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e20f01e2b95: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01e2b95: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01e2b95: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f00b3785: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5e20f01c1997: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x5e20f01b4970: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x5e20f01376d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e20f014a7c8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e20f020967e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e20f0103216: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x5e20f00b9dac: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x5e20f0186d4a: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x5e20f01e1a22: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01e1a22: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01e1a22: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5e20f00722c5: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x5e20f016be23: winter_prover::Prover::generate_proof (prover/src/lib.rs:423:33)",
"0x5e20f00751bf: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x5e20f0072ac4: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x5e20f0076f9d: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x5e20f002cd82: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5e20f002cd82: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e20f002cd82: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f002cd82: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f002cd82: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f002cd82: std::io::buffered::bufwriter::BufWriter<W>::with_capacity (io/buffered/bufwriter.rs:115:33)",
"0x5e20f002cd82: std::io::buffered::linewriter::LineWriter<W>::with_capacity (io/buffered/linewriter.rs:109:29)",
"0x5e20f002cd82: std::io::buffered::linewriter::LineWriter<W>::new (io/buffered/linewriter.rs:89:9)",
"0x5e20f002cd82: std::io::stdio::stdout::{{closure}} (src/io/stdio.rs:618:62)",
"0x5e20f002cd82: std::sync::once_lock::OnceLock<T>::get_or_init::{{closure}} (src/sync/once_lock.rs:250:50)",
"0x5e20f002cd82: std::sync::once_lock::OnceLock<T>::initialize::{{closure}} (src/sync/once_lock.rs:376:19)",
"0x5e20f002cd82: std::sync::once::Once::call_once_force::{{closure}} (src/sync/once.rs:208:40)",
"0x5e20f002cd82: std::sys_common::once::futex::Once::call (sys_common/once/futex.rs:124:21)",
"0x5e20f002beca: std::sync::once::Once::call_once_force (src/sync/once.rs:208:9)",
"0x5e20f002beca: std::sync::once_lock::OnceLock<T>::initialize (src/sync/once_lock.rs:375:9)",
"0x5e20f04961c5: std::sync::once_lock::OnceLock<T>::get_or_try_init (src/sync/once_lock.rs:298:9)",
"0x5e20f04961c5: std::sync::once_lock::OnceLock<T>::get_or_init (src/sync/once_lock.rs:250:15)",
"0x5e20f04961c5: std::io::stdio::stdout (src/io/stdio.rs:618:14)",
"0x5e20f04961c5: std::io::stdio::print_to (src/io/stdio.rs:1020:21)",
"0x5e20f04961c5: std::io::stdio::_print (src/io/stdio.rs:1097:5)",
"0x5e20f00de03a: winterfell::main (winterfell/src/main.rs:36:5)",
"0x5e20f010e44a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e20f01dc4f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01dc4f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01dc4f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01dc4f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022a9da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f0227bc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f0254eba: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f017bfcf: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:644:36)",
"0x5e20f02457a8: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:216:31)",
"0x5e20f0263d36: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5e20f0281bd0: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5e20f024ff66: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5e20f02578f6: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5e20f0197cbe: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x5e20f016d02d: winter_prover::Prover::generate_proof (prover/src/lib.rs:524:9)",
"0x5e20f014f18f: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x5e20f00ef93d: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x5e20f00f4bc6: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x5e20f01c570f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01c570f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01c570f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01c570f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022a27d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f0228a55: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f02548ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f02c5ac4: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x5e20f016ee8b: winter_prover::Prover::generate_proof (prover/src/lib.rs:450:13)",
"0x5e20f01ad1ce: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x5e20f0084038: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:216:32)",
"0x5e20f0263e5f: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5e20f0108b4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e20f0167012: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f0167012: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f0167012: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5e20f0219b05: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5e20f0219b05: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5e20f0219b05: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5e20f0067b95: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x5e20f00a4a9c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:51:13)",
"0x5e20f010d49c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e20f01c9b4f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01c9b4f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01c9b4f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01c9b4f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f021503e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5e20f0229035: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f02560ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f00de74e: winterfell::main (winterfell/src/main.rs:65:26)",
"0x5e20f0186dca: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x5e20f03570b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e20f0359d69: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e20f0361322: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e20f00b565f: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x5e20f00bec4b: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x5e20f00a89d6: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x5e20f00a7e23: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x5e20f017c6ee: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:669:26)",
"0x5e20f0072314: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x5e20f00e7ec7: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x5e20f0074eae: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x5e20f0078a1c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x5e20f0091ca0: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x5e20f0080abc: winter_verifier::perform_verification (verifier/src/lib.rs:317:25)",
"0x5e20f01980f5: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x5e20f04325cc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5e20f04325cc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5e20f04325cc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5e20f02c4d9d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x5e20f02ce5e9: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x5e20f0080c03: winter_verifier::perform_verification (verifier/src/lib.rs:323:5)",
"0x5e20f01e23c5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01e23c5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01e23c5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f016b8cd: winter_prover::Prover::generate_proof (prover/src/lib.rs:308:37)",
"0x5e20f00b3c84: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f00b3c84: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f00b3c84: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5e20f0217c56: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5e20f00ffb3e: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x5e20f00ea7dc: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x5e20f00804f7: winter_verifier::perform_verification (verifier/src/lib.rs:298:27)",
"0x5e20f0054a3f: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:230:34)",
"0x5e20f025d026: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5e20f02833a7: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5e20f010ec1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e20f005f3e2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f005f3e2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f005f3e2: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5e20f007224b: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x5e20f015bd5a: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:170:36)",
"0x5e20f016aa42: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:512:13)",
"0x5e20f00eba4c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x5e20f00752ce: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x5e20f02c4e04: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x5e20f00bccc7: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x5e20f010e6dc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e20f01d044f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01d044f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01d044f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01d044f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022b04d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f0225f75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f025641d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f016cdcf: winter_prover::Prover::generate_proof (prover/src/lib.rs:501:51)",
"0x5e20f01693d4: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:541:17)",
"0x5e20f00f71b6: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x5e20f047b0d9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e20f047b3d2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e20f047c159: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x5e20f043201a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x5e20f00b507a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x5e20f0198347: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x5e20f00ee3c0: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x5e20f00f30bd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x5e20f00bdabb: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x5e20f0078a78: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x5e20f00a5be1: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:135:9)",
"0x5e20f012c511: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e20f014aa08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e20f020840e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e20f00efc69: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x5e20f03d869c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5e20f03d869c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5e20f03d869c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5e20f007d084: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x5e20f007cdce: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x5e20f00841dd: winter_verifier::verify (verifier/src/lib.rs:96:32)",
"0x5e20f01d1ecd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01d1ecd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01d1ecd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01d1ecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022b09a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f0226544: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f025573a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f01b450b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x5e20f01032b9: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x5e20f00f76b2: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x5e20f043f0f0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e20f0433669: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e20f0432e51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e20f0432950: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x5e20f00f2e24: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x5e20f02c55ed: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x5e20f00578cd: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x5e20f01dee6f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01dee6f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01dee6f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01dee6f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022aecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f0226825: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f0255afd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f02c5c5a: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x5e20f00df247: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:176:13)",
"0x5e20f00a25e4: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:156:33)",
"0x5e20f005ed37: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x5e20f0067b7f: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x5e20f0247f8c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:40:30)",
"0x5e20f01674c4: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01674c4: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01674c4: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5e20f0217bf6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5e20f00df0ad: <winterfell::WorkAir as winter_air::air::Air>::new (winterfell/src/main.rs:151:23)",
"0x5e20f0246f36: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:226:17)",
"0x5e20f026119e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5e20f01d940d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01d940d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01d940d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01d940d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022ae4a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f02286e4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f0254d1a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f01aeba1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x5e20f02cdde9: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x5e20f00801ac: winter_verifier::perform_verification (verifier/src/lib.rs:275:24)",
"0x5e20f008e2d7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x5e20f0080a15: winter_verifier::perform_verification (verifier/src/lib.rs:311:25)",
"0x5e20f00f82f2: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x5e20f016af02: winter_prover::Prover::generate_proof (prover/src/lib.rs:233:27)",
"0x5e20f010ad4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e20f01d086f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01d086f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01d086f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01d086f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022b61d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f0226285: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f0254c1d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f016aeb3: winter_prover::Prover::generate_proof (prover/src/lib.rs:222:20)",
"0x5e20f005f8f5: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x5e20f010932c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e20f0061aea: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f0061aea: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f0061aea: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5e20f0217ca6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5e20f00f8508: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x5e20f01c618f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01c618f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01c618f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01c618f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022accd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f0227cd7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f025550d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f024aaa0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x5e20f018472b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5e20f0183f9d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5e20f02f769a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5e20f02e4f7b: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5e20f02ef1a9: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5e20f02e9416: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5e20f00bb547: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x5e20f01bb3a7: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x5e20f01b4d54: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x5e20f01691b5: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:547:13)",
"0x5e20f007cd9a: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x5e20f02b5b89: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x5e20f016d6b8: winter_prover::Prover::generate_proof (prover/src/lib.rs:558:13)",
"0x5e20f00856db: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x5e20f0061126: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x5e20f01b5c15: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5e20f01095cc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e20f01ccaff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01ccaff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01ccaff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01ccaff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022a4ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f0227337: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f0255e8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f00ddedf: winterfell::main (winterfell/src/main.rs:28:26)",
"0x5e20f018607b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5e20f018328d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5e20f02f72ea: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5e20f02d2009: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5e20f023ba75: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5e20f00b2598: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5e20f005e388: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x5e20f01c3539: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01c3539: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01c3539: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01c3539: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022ab7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f0228b14: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f025644a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f016b4ea: winter_prover::Prover::generate_proof (prover/src/lib.rs:272:43)",
"0x5e20f012d8d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e20f014a318: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e20f020b12d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e20f0074af2: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x5e20f02a0ac5: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5e20f00b9eb4: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x5e20f01b34ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x5e20f0080636: winter_verifier::perform_verification (verifier/src/lib.rs:305:9)",
"0x5e20f01bd1b0: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:140:51)",
"0x5e20f025e476: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5e20f005cfc1: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5e20f01bd518: winter_prover::trace::Trace::validate (src/trace/mod.rs:123:26)",
"0x5e20f01b3cf0: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x5e20f00807a8: winter_verifier::perform_verification (verifier/src/lib.rs:306:42)",
"0x5e20f01d8abf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01d8abf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01d8abf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01d8abf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022be7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f0228925: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f02555dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f0054788: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:228:23)",
"0x5e20f0117edc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e20f01da25f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01da25f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01da25f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01da25f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f021718b: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5e20f02278d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f025556d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f016b7f7: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:36)",
"0x5e20f014ca57: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5e20f00eb259: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x5e20f00ec739: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x5e20f00a7e5c: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x5e20f00e6e2f: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x5e20f02b6338: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x5e20f00fa222: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x5e20f016e19c: winter_prover::Prover::generate_proof (prover/src/lib.rs:600:25)",
"0x5e20f01472a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e20f014aa98: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e20f020a91b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e20f00ec0fa: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x5e20f0060f63: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x5e20f006f24c: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x5e20f01c8ac3: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01c8ac3: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01c8ac3: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01c8ac3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022abd4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f022729a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f0255654: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f00ddd51: winterfell::main (winterfell/src/main.rs:22:32)",
"0x5e20f010f3fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e20f01ceedf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01ceedf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01ceedf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01ceedf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022b88d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f02270c5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f02549dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f017c08b: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:648:34)",
"0x5e20f01e1328: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01e1328: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01e1328: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5e20f0219205: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5e20f0219205: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5e20f0219205: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5e20f016cea3: winter_prover::Prover::generate_proof (prover/src/lib.rs:510:39)",
"0x5e20f005289d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x5e20f00ffd26: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x5e20f00b831c: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x5e20f018580b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5e20f0183a1d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5e20f02f7c2a: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5e20f02d6c7d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5e20f02d9613: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5e20f00ea237: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5e20f008841d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x5e20f00bb356: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x5e20f0091eb1: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x5e20f00f2c29: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x5e20f008d6fe: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x5e20f01a7921: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x5e20f01dbd1f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01dbd1f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01dbd1f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01dbd1f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022a61d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f02264f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f025534d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f00757f7: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x5e20f0184a8b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5e20f0183e3d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5e20f02f778a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5e20f02d22a9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5e20f023abc8: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5e20f0239195: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x5e20f01169ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e20f01e2a55: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01e2a55: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01e2a55: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f016b877: winter_prover::Prover::generate_proof (prover/src/lib.rs:306:39)",
"0x5e20f0109d9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e20f01d2e5f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01d2e5f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01d2e5f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01d2e5f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022a3cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f0227e87: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f0254e8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f0159bcd: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:51:26)",
"0x5e20f012e7a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e20f014a108: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e20f020adae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e20f00811eb: winter_verifier::perform_verification (verifier/src/lib.rs:184:9)",
"0x5e20f01cc4cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01cc4cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01cc4cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01cc4cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022b0dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f02283d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f0254a6d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f016acd2: winter_prover::Prover::generate_proof (prover/src/lib.rs:210:38)",
"0x5e20f00ee499: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x5e20f007ffc9: winter_verifier::perform_verification (verifier/src/lib.rs:266:61)",
"0x5e20f0076d08: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x5e20f018309a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x5e20f01985c3: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x5e20f01bc131: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x5e20f0190853: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x5e20f0243832: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x5e20f02d21e9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5e20f023c15b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5e20f00b26eb: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5e20f01ceb04: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01ceb04: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01ceb04: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01ceb04: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5e20f022beaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f0227d64: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f02560da: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f00b7e8d: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x5e20f00f68d8: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x5e20f00f82db: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x5e20f00fa2d3: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x5e20f00efafb: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x5e20f008d21f: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x5e20f01984ab: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x5e20f044148b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5e20f0440e51: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5e20f043a54b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5e20f0434c41: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5e20f04352c7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5e20f044495b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5e20f02b314c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x5e20f007ce0c: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x5e20f00f4d52: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x5e20f013fc21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e20f0149dd8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e20f020b6ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e20f00858ec: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x5e20f01cd95f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01cd95f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01cd95f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01cd95f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022ba4d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f0227e15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f0255f5d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f02cb7af: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x5e20f008e325: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x5e20f0144b21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e20f014a498: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e20f020c7ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e20f00fddb7: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x5e20f018abae: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x5e20f01c5033: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01c5033: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01c5033: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01c5033: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022b9ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f0228545: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f0255fdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f016b6db: winter_prover::Prover::generate_proof (prover/src/lib.rs:293:23)",
"0x5e20f017dacc: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:701:36)",
"0x5e20f00ff3b5: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x5e20f01e29b5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01e29b5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01e29b5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f016b909: winter_prover::Prover::generate_proof (prover/src/lib.rs:309:32)",
"0x5e20f00a74bd: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x5e20f017deb8: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:716:26)",
"0x5e20f016c931: winter_prover::Prover::generate_proof (prover/src/lib.rs:482:37)",
"0x5e20f010c77c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e20f01d0bf2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01d0bf2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01d0bf2: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01d0bf2: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5e20f022bb7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f0226c35: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f02548cd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f018aa6a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x5e20f010fe6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e20f01cab29: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01cab29: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01cab29: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01cab29: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022acaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f0229084: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f025519a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f00f824b: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x5e20f01d3e94: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01d3e94: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01d3e94: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01d3e94: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5e20f022a5da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f0228ec4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f0255c5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f00bb46e: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x5e20f00b3428: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x5e20f016b132: winter_prover::Prover::generate_proof (prover/src/lib.rs:262:22)",
"0x5e20f0091cb7: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x5e20f01d3b9d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01d3b9d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01d3b9d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01d3b9d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022a2aa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f0227394: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f0255b5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f01b45c3: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x5e20f04412db: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5e20f0440fb1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5e20f043a2ab: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5e20f0433e9d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5e20f043f42b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5e20f04431e3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5e20f01c92ef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01c92ef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01c92ef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01c92ef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022b4cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f0227d15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f02547dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f00858d5: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x5e20f0074440: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x5e20f025cdb6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5e20f005cb11: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5e20f01a782f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x5e20f01a7bbd: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x5e20f0115f6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e20f01db22b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01db22b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01db22b: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01db22b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5e20f022baad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f0228955: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f014c16d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f018c618: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x5e20f01b576e: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x5e20f00b5999: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x5e20f02b3472: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x5e20f00ef99f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x5e20f0436f3e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5e20f0438400: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5e20f0437bf8: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5e20f016ee70: winter_prover::Prover::generate_proof (prover/src/lib.rs:449:13)",
"0x5e20f01c659f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01c659f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01c659f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01c659f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f02160d6: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5e20f0228bc5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f025630d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f00843a8: winter_verifier::verify (verifier/src/lib.rs:102:24)",
"0x5e20f008503b: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:102:85)",
"0x5e20f0261a6e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5e20f010d1fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e20f01cf622: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01cf622: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01cf622: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01cf622: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5e20f022adaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f0226484: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f02438ea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f01b2d67: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x5e20f04322c6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x5e20f02c56ca: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x5e20f00a7572: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x5e20f02b54f9: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x5e20f00b337b: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x5e20f01d405d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01d405d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01d405d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01d405d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022adda: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f0227de4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f02551ca: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f01b47eb: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x5e20f0103e4c: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x5e20f01b4f37: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x5e20f008d3b7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x5e20f0110b7c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e20f01ca19f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01ca19f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01ca19f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01ca19f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022b54d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f0228355: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f0255ddd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f00a61b1: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x5e20f00f2c0e: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x5e20f00a5973: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:33)",
"0x5e20f01aee73: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x5e20f00546e8: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:227:28)",
"0x5e20f01ad1b0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x5e20f006032d: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x5e20f0431c69: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5e20f042ec1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e20f042bdb6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f042bdb6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f042bdb6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f00f2b68: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x5e20f02434e2: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x5e20f007cc98: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x5e20f00aa9bd: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x5e20f00a6c90: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x5e20f00a9614: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x5e20f010b52a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e20f01c3949: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01c3949: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01c3949: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01c3949: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022b96a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f0227874: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f0255b8a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f008840e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x5e20f0127611: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e20f014a288: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e20f0208c0b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e20f00b83c9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x5e20f01c94ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01c94ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01c94ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01c94ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022bd3d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f02265f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f025621d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f0091ff2: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x5e20f01c24b9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01c24b9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01c24b9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01c24b9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022a8ea: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f02274f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f025539a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f0158fe8: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:83:9)",
"0x5e20f011817c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e20f01daeef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01daeef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01daeef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01daeef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022b27d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f0226c65: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f02379bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f016b033: winter_prover::Prover::generate_proof (prover/src/lib.rs:248:41)",
"0x5e20f043704e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5e20f04389ec: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5e20f043755a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5e20f02b5b9b: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x5e20f00ac081: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x5e20f00aae86: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5e20f017c12f: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:655:31)",
"0x5e20f0149a21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e20f0149e08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e20f020c42e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e20f01b5f07: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x5e20f008a7be: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x5e20f0080b34: winter_verifier::perform_verification (verifier/src/lib.rs:319:28)",
"0x5e20f00f9003: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x5e20f00fa210: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x5e20f0159028: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:83:31)",
"0x5e20f025f7af: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5e20f016ee30: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:13)",
"0x5e20f0060461: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x5e20f00f703f: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x5e20f01dd9dd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01dd9dd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01dd9dd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01dd9dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022ac7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f0227ff4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f025586a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f01b467b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x5e20f01c1b50: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x5e20f02b9d94: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x5e20f02c595d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x5e20f044112b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5e20f0441061: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5e20f043a46b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5e20f0434b71: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5e20f0435307: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5e20f044490b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5e20f00a7d9a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x5e20f016b511: winter_prover::Prover::generate_proof (prover/src/lib.rs:274:13)",
"0x5e20f01c769a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01c769a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01c769a: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01c769a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5e20f022a4cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f0228a1a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f02b2f4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f00ec243: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x5e20f01cb58d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01cb58d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01cb58d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01cb58d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022ad7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f0226d34: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f025530a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f01b4733: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x5e20f0056036: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5e20f0246c48: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:300:57)",
"0x5e20f0122c01: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e20f014a408: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e20f020cc54: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e20f016f285: winter_prover::Prover::generate_proof (prover/src/lib.rs:418:17)",
"0x5e20f01d60ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01d60ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01d60ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01d60ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022a44d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f0226625: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f025513d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f005ed28: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x5e20f01c3f8f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01c3f8f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01c3f8f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01c3f8f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022b06d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f0226f75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f025479d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f00743a8: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x5e20f005288c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x5e20f008d6df: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x5e20f024ab0a: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x5e20f02617a8: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5e20f00e6114: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x5e20f01ce3bf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01ce3bf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01ce3bf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01ce3bf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022b6cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f0228e45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f025552d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f008d4ab: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x5e20f0243c5a: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x5e20f02b76a7: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x5e20f019a889: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x5e20f04419e9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f04419e9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f04419e9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f04419e9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5e20f0441e2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f0441df7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f0441fce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f04444c9: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x5e20f02f055d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x5e20f02f6a25: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x5e20f02e986e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x5e20f01b5d01: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x5e20f0078adb: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x5e20f0114fac: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e20f01ca8df: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01ca8df: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01ca8df: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01ca8df: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f0215b4e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5e20f0228415: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f02562ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f00874f7: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x5e20f0076a93: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x5e20f0169350: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:543:13)",
"0x5e20f00ef9b6: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x5e20f0067106: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x5e20f00a3ac9: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:290:18)",
"0x5e20f00a288e: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:173:30)",
"0x5e20f011620c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e20f01cfe49: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e20f01cfe49: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e20f01cfe49: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e20f01cfe49: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e20f022a93a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e20f02277f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e20f025501a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e20f007fc5f: winter_verifier::perform_verification (verifier/src/lib.rs:218:40)",
"0x5e20f0130a31: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e20f014a048: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e20f020d55e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e20f00813b2: winter_verifier::perform_verification (verifier/src/lib.rs:179:9)"
]
}