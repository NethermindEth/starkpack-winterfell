{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell",
"pid": 20298,
"tg": 64856476,
"te": 70495807,
"pps": [
{
"tb": 512,
"tbk": 1,
"tl": 14,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11
]
},
{
"tb": 80,
"tbk": 1,
"tl": 734415,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
12,
13,
14,
15,
16,
17,
18,
19,
20
]
},
{
"tb": 8,
"tbk": 1,
"tl": 3737,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
23,
24,
25,
26,
27,
28,
29,
30
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 368312,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
31,
32,
33,
34,
35,
36,
37
]
},
{
"tb": 32,
"tbk": 1,
"tl": 4086880,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
38,
39,
40,
41,
42,
43,
11
]
},
{
"tb": 2097152,
"tbk": 32768,
"tl": 27376,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
44,
45,
46
]
},
{
"tb": 288,
"tbk": 1,
"tl": 14237,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
47,
48,
49,
50,
51,
52,
53
]
},
{
"tb": 96,
"tbk": 1,
"tl": 12,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
54,
55,
56,
57,
11,
58
]
},
{
"tb": 1152,
"tbk": 4,
"tl": 147,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
47,
48,
59,
60,
61,
62,
63
]
},
{
"tb": 48,
"tbk": 1,
"tl": 5387337,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
64,
65,
66,
67,
68,
69,
70,
71,
72
]
},
{
"tb": 17600,
"tbk": 1,
"tl": 6265,
"mb": 17600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
76,
77,
78,
79
]
},
{
"tb": 8,
"tbk": 1,
"tl": 3731,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
80,
81,
82,
83,
84,
85,
86,
87
]
},
{
"tb": 12160,
"tbk": 3,
"tl": 1332,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
88,
89,
90,
91,
92,
93,
94
]
},
{
"tb": 64,
"tbk": 1,
"tl": 148,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
95,
96,
97
]
},
{
"tb": 32,
"tbk": 1,
"tl": 4086885,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
38,
39,
40,
41,
42,
98,
11
]
},
{
"tb": 2880,
"tbk": 10,
"tl": 4008,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
99,
100,
101,
102,
103,
104
]
},
{
"tb": 96,
"tbk": 1,
"tl": 15,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
105,
106,
107,
108,
109,
110,
111,
112,
113
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 3718391,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
114,
115,
116,
117,
118,
119,
120,
121
]
},
{
"tb": 96,
"tbk": 1,
"tl": 3208,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
47,
48,
122,
123,
124,
125,
126
]
},
{
"tb": 32,
"tbk": 1,
"tl": 67,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
127,
128,
129,
130,
131,
132,
133,
134,
135
]
},
{
"tb": 563200,
"tbk": 1,
"tl": 26244,
"mb": 563200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
38,
136,
137,
138,
139,
140,
141,
126,
142
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
38,
136,
143,
144,
145,
146,
147,
148,
149,
150,
151
]
},
{
"tb": 512,
"tbk": 1,
"tl": 7725,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
152,
153,
154,
155,
156,
157,
158,
159
]
},
{
"tb": 8,
"tbk": 1,
"tl": 64463363,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
160,
161,
162,
163,
164,
165,
166,
167,
168
]
},
{
"tb": 97280,
"tbk": 3,
"tl": 1344,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
88,
89,
90,
91,
92,
93,
169
]
},
{
"tb": 432,
"tbk": 3,
"tl": 1316,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
76,
170,
171,
172
]
},
{
"tb": 24,
"tbk": 1,
"tl": 11,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
173,
174,
175,
176,
177,
178,
179,
180,
181,
182
]
},
{
"tb": 65472,
"tbk": 10,
"tl": 1845901,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
47,
48,
183,
184,
185,
186,
187
]
},
{
"tb": 1040,
"tbk": 10,
"tl": 265,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
188,
189,
190,
191,
192,
193
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1918,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
194,
195,
196,
197,
198,
199,
200,
11
]
},
{
"tb": 3670016,
"tbk": 7,
"tl": 5384685,
"mb": 3670016,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
31,
32,
33,
34,
201,
202,
203
]
},
{
"tb": 64,
"tbk": 1,
"tl": 117,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
204,
205,
206,
207,
208,
209
]
},
{
"tb": 3088,
"tbk": 16,
"tl": 479,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
210,
211,
212,
213,
214,
215,
216,
217,
218
]
},
{
"tb": 16,
"tbk": 1,
"tl": 46863,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
219,
220,
221,
222,
223
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 88,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
224,
225,
11
]
},
{
"tb": 11392,
"tbk": 32,
"tl": 103976,
"mb": 11392,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
114,
115,
116,
117,
226,
227,
228,
229
]
},
{
"tb": 96,
"tbk": 1,
"tl": 31,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
47,
48,
230,
231,
232,
233,
234
]
},
{
"tb": 128,
"tbk": 1,
"tl": 423,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
47,
48,
235,
236,
237,
238,
239
]
},
{
"tb": 12160,
"tbk": 95,
"tl": 108,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
31,
32,
33,
240,
241,
242,
243
]
},
{
"tb": 2392064,
"tbk": 3,
"tl": 60171,
"mb": 2392064,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
31,
32,
33,
34,
244,
245,
53
]
},
{
"tb": 128,
"tbk": 1,
"tl": 734681,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
246,
247,
248,
249,
250,
251,
252,
253,
208,
254
]
},
{
"tb": 128,
"tbk": 1,
"tl": 123,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
246,
247,
248,
249,
250,
251,
252,
253,
208,
209
]
},
{
"tb": 2400,
"tbk": 20,
"tl": 2019,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
38,
39,
40,
41,
42,
255,
217
]
},
{
"tb": 80,
"tbk": 1,
"tl": 70481920,
"mb": 80,
"mbk": 1,
"gb": 80,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
256,
257,
258,
259,
260,
261,
262,
263,
264
]
},
{
"tb": 33554432,
"tbk": 2,
"tl": 5590852,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
88,
89,
90,
91,
92,
93,
265
]
},
{
"tb": 192,
"tbk": 3,
"tl": 34096,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
31,
32,
33,
34,
266,
267,
268
]
},
{
"tb": 40,
"tbk": 1,
"tl": 57567698,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
269,
270,
271,
272,
273,
274,
275,
276,
277
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
38,
136,
143,
144,
145,
146,
147,
148,
149,
150,
278
]
},
{
"tb": 24,
"tbk": 1,
"tl": 781495,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
279,
280,
281,
282,
283,
284,
285,
286,
287,
288
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 48848,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
204,
205,
206,
289,
200,
11
]
},
{
"tb": 2298478592,
"tbk": 137,
"tl": 3924475989,
"mb": 2298478592,
"mbk": 137,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
290,
291,
292,
293,
294,
295,
296,
297
]
},
{
"tb": 1520,
"tbk": 3,
"tl": 2184,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
298,
299,
300,
301,
302,
303,
304,
305
]
},
{
"tb": 64912,
"tbk": 1253,
"tl": 2145528,
"mb": 13120,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
47,
48,
306,
307,
308,
309,
310,
311,
312
]
},
{
"tb": 2306867200,
"tbk": 131072,
"tl": 971497,
"mb": 17600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
204,
205,
206,
313,
314,
315
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1590,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
54,
316,
317,
11,
58
]
},
{
"tb": 1440,
"tbk": 12,
"tl": 5443,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
47,
48,
318,
319,
320,
321,
322
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 6895669,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
31,
32,
33,
34,
266,
267,
323
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 7058475,
"mb": 4194304,
"mbk": 1,
"gb": 4194304,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
114,
115,
116,
117,
118,
324,
315,
325
]
},
{
"tb": 96,
"tbk": 1,
"tl": 70067780,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
326,
327,
328,
329,
330,
331,
332,
333,
334
]
},
{
"tb": 384,
"tbk": 1,
"tl": 734574,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
335,
336,
337,
338,
339,
340,
341,
342,
343
]
},
{
"tb": 88448,
"tbk": 351,
"tl": 218688,
"mb": 16128,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
114,
344,
345,
346,
347,
348,
349,
350,
351
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4204,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
31,
32,
33,
352,
234,
353,
354
]
},
{
"tb": 512,
"tbk": 1,
"tl": 18,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
31,
32,
33,
34,
355,
356,
234
]
},
{
"tb": 512,
"tbk": 1,
"tl": 10,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
357,
358,
359,
360,
361,
362,
363,
364
]
},
{
"tb": 299008,
"tbk": 3,
"tl": 34926,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
31,
32,
33,
34,
365,
366,
367
]
},
{
"tb": 96,
"tbk": 1,
"tl": 10578,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
47,
48,
230,
231,
232,
368,
243
]
},
{
"tb": 35200,
"tbk": 2,
"tl": 828754,
"mb": 17600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
88,
89,
90,
91,
92,
93,
369
]
},
{
"tb": 64,
"tbk": 1,
"tl": 163,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
47,
48,
183,
184,
185,
370,
371
]
},
{
"tb": 16,
"tbk": 1,
"tl": 105,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
54,
372,
373,
374,
375,
376,
377
]
},
{
"tb": 598016,
"tbk": 3,
"tl": 54572,
"mb": 598016,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
114,
115,
116,
117,
118,
378,
379,
380
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1913,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
114,
381,
382,
383,
384,
385,
199,
200
]
},
{
"tb": 64,
"tbk": 1,
"tl": 9780,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
47,
48,
183,
184,
185,
386,
387
]
},
{
"tb": 10488,
"tbk": 19,
"tl": 4394,
"mb": 3312,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
388,
389,
390,
391,
392,
393
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 395388,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
31,
32,
33,
34,
266,
267,
394
]
},
{
"tb": 16,
"tbk": 1,
"tl": 81,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
54,
372,
373,
374,
395,
396,
353
]
},
{
"tb": 64,
"tbk": 1,
"tl": 226017,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
76,
397,
398,
399
]
},
{
"tb": 12160,
"tbk": 95,
"tl": 90,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
400,
401,
402,
403,
404,
405,
406,
407
]
},
{
"tb": 79344,
"tbk": 174,
"tl": 45909,
"mb": 22344,
"mbk": 49,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
408,
409,
410,
411,
412,
413
]
},
{
"tb": 16,
"tbk": 1,
"tl": 70482108,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 17021,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
31,
32,
33,
34,
266,
267,
422
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3477159,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
54,
423,
424,
425,
426,
427,
428
]
},
{
"tb": 3088,
"tbk": 16,
"tl": 83,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
210,
211,
212,
213,
214,
215,
429,
430,
126
]
},
{
"tb": 64,
"tbk": 1,
"tl": 734673,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
204,
205,
206,
207,
208,
254
]
},
{
"tb": 35201,
"tbk": 1,
"tl": 133,
"mb": 35201,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
38,
136,
143,
144,
145,
431,
432,
433,
434,
435,
436
]
},
{
"tb": 16,
"tbk": 1,
"tl": 83,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
54,
372,
437,
374,
395,
396,
353
]
},
{
"tb": 24,
"tbk": 1,
"tl": 5471420,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
438,
439,
440,
441,
442,
11,
58
]
},
{
"tb": 16,
"tbk": 1,
"tl": 121,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
443,
444,
445,
446,
447,
448,
449,
450,
11,
58
]
},
{
"tb": 32,
"tbk": 1,
"tl": 21,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
31,
32,
33,
240,
451,
452,
453
]
},
{
"tb": 1572864,
"tbk": 3,
"tl": 141059,
"mb": 1572864,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
454,
177,
178,
179,
455
]
},
{
"tb": 512,
"tbk": 1,
"tl": 10900,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
31,
32,
33,
240,
456,
457,
453
]
},
{
"tb": 216,
"tbk": 1,
"tl": 13586,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
458,
459,
460,
461,
462,
463,
464,
465,
466
]
},
{
"tb": 72,
"tbk": 1,
"tl": 5582040,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
467,
468,
469,
470,
471,
472,
473,
474,
475
]
},
{
"tb": 35200,
"tbk": 2,
"tl": 828770,
"mb": 17600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
88,
89,
90,
91,
92,
93,
476
]
},
{
"tb": 1048608,
"tbk": 3,
"tl": 18852,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
31,
32,
33,
34,
355,
477,
478
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 24514,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
38,
39,
479,
480,
481,
482,
483
]
},
{
"tb": 17600,
"tbk": 1,
"tl": 406007,
"mb": 17600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
76,
484,
485,
486
]
},
{
"tb": 32,
"tbk": 2,
"tl": 734833,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
487,
488,
489,
490,
491,
492,
493,
494
]
},
{
"tb": 2097152,
"tbk": 4,
"tl": 186276,
"mb": 2097152,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
454,
177,
178,
179,
495
]
},
{
"tb": 72,
"tbk": 3,
"tl": 56,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
496,
497,
498,
499,
500,
501,
502,
503,
504
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 64474,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
224,
505,
317
]
},
{
"tb": 48,
"tbk": 1,
"tl": 6226,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
506,
507,
508,
509,
510,
511,
512,
513,
514
]
},
{
"tb": 512,
"tbk": 1,
"tl": 25,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
515,
234,
353
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 4132929,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
88,
89,
90,
91,
92,
93,
516
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 508338,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
31,
32,
33,
34,
365,
517,
518
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1975596,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
443,
519,
520,
521,
522,
523,
524,
525,
526
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
47,
527,
528,
529,
530,
531,
532,
533,
534,
535,
453
]
},
{
"tb": 48,
"tbk": 2,
"tl": 73,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
54,
536,
537,
538,
539,
540,
541
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3330,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
194,
195,
196,
197,
542,
228,
229,
543
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1527,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
47,
48,
230,
231,
232,
544,
200
]
},
{
"tb": 24,
"tbk": 1,
"tl": 5471408,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
173,
545,
546,
547,
548,
11,
58
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 22676,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
38,
39,
479,
480,
481,
482,
549
]
},
{
"tb": 12160,
"tbk": 3,
"tl": 1954,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
290,
550,
551,
552,
553,
554,
555,
556,
557
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 23790,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
38,
136,
137,
138,
139,
558,
559,
200,
11
]
},
{
"tb": 32,
"tbk": 1,
"tl": 13516,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
114,
115,
116,
117,
226,
560,
561,
453
]
},
{
"tb": 216,
"tbk": 1,
"tl": 70047569,
"mb": 216,
"mbk": 1,
"gb": 216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
458,
562,
563,
564,
565,
566,
567,
568,
569
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 70046964,
"mb": 524288,
"mbk": 1,
"gb": 524288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
31,
32,
33,
34,
266,
570,
571
]
},
{
"tb": 24,
"tbk": 1,
"tl": 734686,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
54,
572,
573,
208,
254,
377,
11
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 74852,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
204,
205,
206,
574,
575,
11
]
},
{
"tb": 96,
"tbk": 1,
"tl": 25711,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
38,
39,
576,
577,
578,
579,
141
]
},
{
"tb": 64,
"tbk": 1,
"tl": 9230,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
31,
32,
33,
580,
581,
353,
354
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3212,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
173,
174,
175,
176,
177,
178,
179,
180,
582,
126
]
},
{
"tb": 96,
"tbk": 1,
"tl": 1845881,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
47,
48,
230,
231,
232,
583,
187
]
},
{
"tb": 144,
"tbk": 1,
"tl": 31902,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
584,
585,
586,
587,
588,
589,
10,
11,
58
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 74702,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
31,
32,
33,
34,
266,
267,
590
]
},
{
"tb": 26400,
"tbk": 1,
"tl": 5387327,
"mb": 26400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
173,
174,
175,
176,
177,
178,
179,
591,
592,
593
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 91,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
31,
32,
33,
34,
266,
267,
594
]
},
{
"tb": 72,
"tbk": 1,
"tl": 47071,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
173,
174,
175,
176,
177,
178,
179,
455,
595,
11
]
},
{
"tb": 24,
"tbk": 1,
"tl": 5471403,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
596,
597,
598,
599,
600,
11,
58
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
54,
601,
602,
278,
182,
11,
58
]
},
{
"tb": 8,
"tbk": 1,
"tl": 23,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
603,
604,
605,
606,
607,
608,
609,
610
]
},
{
"tb": 3088,
"tbk": 16,
"tl": 82,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
210,
211,
212,
213,
214,
215,
429,
199,
200
]
},
{
"tb": 8,
"tbk": 1,
"tl": 3718,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
611,
612,
613,
614,
615,
616,
617,
618
]
},
{
"tb": 24,
"tbk": 1,
"tl": 3477170,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
619,
620,
621,
622,
623,
624,
625,
626,
627
]
},
{
"tb": 16064,
"tbk": 94,
"tl": 804923,
"mb": 16064,
"mbk": 94,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
114,
115,
116,
117,
226,
227,
628,
242
]
},
{
"tb": 4728,
"tbk": 30,
"tl": 686,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
210,
211,
212,
213,
214,
215,
216,
217,
629
]
},
{
"tb": 563200,
"tbk": 1,
"tl": 26794,
"mb": 563200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
38,
136,
137,
138,
139,
630,
141,
126,
142
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1267,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
210,
211,
212,
631,
632,
633,
634,
172,
635
]
},
{
"tb": 2000,
"tbk": 10,
"tl": 179,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
636,
637,
638,
639,
640,
641
]
},
{
"tb": 1440,
"tbk": 12,
"tl": 409,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
38,
39,
40,
41,
42,
642,
239
]
},
{
"tb": 12160,
"tbk": 3,
"tl": 434,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
88,
89,
90,
91,
92,
93,
643
]
},
{
"tb": 598016,
"tbk": 3,
"tl": 59207,
"mb": 598016,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
114,
115,
116,
117,
118,
644,
645,
53
]
},
{
"tb": 16,
"tbk": 1,
"tl": 70047439,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
646,
647,
648,
649,
650,
651,
652,
653,
654
]
},
{
"tb": 4608,
"tbk": 24,
"tl": 9084,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
655,
656,
657,
658,
659,
660
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
54,
661,
662,
354
]
},
{
"tb": 160,
"tbk": 1,
"tl": 9813,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
47,
48,
663,
664,
665,
666,
453
]
},
{
"tb": 4728,
"tbk": 30,
"tl": 100,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
210,
211,
212,
213,
214,
215,
429,
239,
667
]
},
{
"tb": 128,
"tbk": 1,
"tl": 13507,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
114,
115,
116,
117,
226,
668,
561,
453
]
},
{
"tb": 24,
"tbk": 1,
"tl": 142,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
173,
669,
670,
671,
672,
673,
674,
675,
676
]
},
{
"tb": 48,
"tbk": 1,
"tl": 70067705,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
677,
678,
679,
680,
681,
682,
182,
11
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3385,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
173,
683,
684,
685,
686,
687,
688,
689,
690
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 7649,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
31,
32,
33,
240,
691,
692,
229
]
},
{
"tb": 2880,
"tbk": 12,
"tl": 1983,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
47,
48,
183,
184,
185,
693,
694
]
},
{
"tb": 8,
"tbk": 1,
"tl": 3746,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
695,
696,
697,
698,
699,
700,
701,
702
]
},
{
"tb": 32,
"tbk": 1,
"tl": 126,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
38,
136,
143,
144,
145,
431,
432,
433,
703,
435,
436
]
},
{
"tb": 1088,
"tbk": 2,
"tl": 33,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
704,
705,
706,
707,
708,
709
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2653,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
38,
39,
40,
41,
42,
710,
141
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 70047403,
"mb": 131072,
"mbk": 1,
"gb": 131072,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
31,
32,
33,
34,
266,
711,
712
]
},
{
"tb": 24,
"tbk": 1,
"tl": 5471413,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
713,
714,
715,
716,
717,
11,
58
]
},
{
"tb": 128,
"tbk": 1,
"tl": 3419,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
718,
719,
720,
721,
722,
723,
724,
725
]
},
{
"tb": 16,
"tbk": 1,
"tl": 781492,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
219,
287,
288
]
},
{
"tb": 8,
"tbk": 1,
"tl": 3724,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
726,
727,
728,
729,
730,
731,
732,
733
]
},
{
"tb": 480,
"tbk": 4,
"tl": 215,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
38,
39,
40,
41,
42,
642,
430
]
},
{
"tb": 96,
"tbk": 1,
"tl": 23,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
54,
55,
374,
395,
396,
353,
354
]
},
{
"tb": 1968,
"tbk": 2,
"tl": 56,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
734,
735,
736,
737,
738,
739
]
},
{
"tb": 168,
"tbk": 2,
"tl": 1545859,
"mb": 168,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
173,
740,
741,
742,
743,
744,
745,
746,
747
]
},
{
"tb": 512,
"tbk": 1,
"tl": 17,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
31,
32,
33,
34,
355,
748,
749
]
},
{
"tb": 96,
"tbk": 1,
"tl": 46852,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
173,
174,
175,
176,
177,
178,
179,
495,
595,
11
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
54,
601,
602,
151,
354
]
},
{
"tb": 96,
"tbk": 1,
"tl": 9244,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
47,
48,
230,
231,
232,
583,
750
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2995,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
194,
195,
196,
197,
198,
430,
126,
142
]
},
{
"tb": 224,
"tbk": 1,
"tl": 10583,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
47,
48,
751,
752,
753,
754,
243
]
},
{
"tb": 16,
"tbk": 1,
"tl": 70064064,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
755,
756,
757,
758,
759,
760,
761,
762
]
},
{
"tb": 43442,
"tbk": 29,
"tl": 88262,
"mb": 21760,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
38,
39,
479,
480,
481,
482,
763
]
},
{
"tb": 16,
"tbk": 1,
"tl": 108,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
54,
372,
437,
374,
375,
376,
377
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2989,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
114,
381,
382,
383,
384,
385,
430,
126
]
},
{
"tb": 56,
"tbk": 1,
"tl": 2617,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
54,
764,
765,
453,
354
]
},
{
"tb": 5520,
"tbk": 10,
"tl": 3616,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
388,
389,
390,
766,
767,
768
]
},
{
"tb": 1920,
"tbk": 10,
"tl": 4124,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
655,
656,
657,
769,
770,
771
]
},
{
"tb": 128,
"tbk": 1,
"tl": 13577,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
246,
772,
773,
774,
775,
776,
777,
778
]
},
{
"tb": 32,
"tbk": 1,
"tl": 135,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
54,
661,
779,
780,
781,
782,
783
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
54,
372,
373,
56,
57,
11,
58
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 2859,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
114,
784,
785,
786,
787,
788,
789,
790,
791
]
},
{
"tb": 12160,
"tbk": 3,
"tl": 505,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
31,
32,
33,
34,
355,
792,
171
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1814,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
54,
793,
317,
11,
58
]
},
{
"tb": 24,
"tbk": 1,
"tl": 64570870,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
596,
794,
795,
796,
797,
798,
799,
800,
801
]
},
{
"tb": 96,
"tbk": 1,
"tl": 33,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
54,
55,
374,
375,
376,
377,
11
]
},
{
"tb": 26400,
"tbk": 1,
"tl": 64570387,
"mb": 26400,
"mbk": 1,
"gb": 26400,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
173,
802,
803,
804,
805,
806,
807,
808,
809
]
},
{
"tb": 48,
"tbk": 2,
"tl": 1469123,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
279,
280,
281,
282,
283,
284,
285,
286,
810,
811
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3898614,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
173,
812,
813,
814,
815,
816,
817,
818,
819
]
},
{
"tb": 240,
"tbk": 2,
"tl": 781475,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
54,
820,
288,
11,
58
]
},
{
"tb": 96,
"tbk": 1,
"tl": 14,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
47,
48,
230,
231,
232,
821,
317
]
},
{
"tb": 2496,
"tbk": 24,
"tl": 359,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
188,
189,
190,
822,
823,
824
]
},
{
"tb": 32,
"tbk": 1,
"tl": 6368,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
204,
205,
206,
825,
453,
354
]
},
{
"tb": 2256,
"tbk": 3,
"tl": 2955,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
194,
195,
196,
197,
198,
239,
667,
10
]
},
{
"tb": 563200,
"tbk": 1,
"tl": 5021,
"mb": 563200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
31,
32,
33,
240,
691,
826,
827
]
},
{
"tb": 320,
"tbk": 2,
"tl": 1469114,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
47,
48,
828,
829,
830,
831,
811
]
},
{
"tb": 512,
"tbk": 1,
"tl": 19,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
31,
32,
33,
832,
749,
353,
354
]
},
{
"tb": 288358400,
"tbk": 1100,
"tl": 5875317308,
"mb": 288358400,
"mbk": 1100,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
454,
177,
178,
179,
591
]
},
{
"tb": 2315255808,
"tbk": 1,
"tl": 8549972,
"mb": 2315255808,
"mbk": 1,
"gb": 2315255808,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
290,
291,
292,
293,
294,
833,
834,
835
]
},
{
"tb": 32,
"tbk": 1,
"tl": 781470,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
38,
39,
40,
41,
42,
836,
837
]
},
{
"tb": 48,
"tbk": 1,
"tl": 226022,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
76,
838,
398,
399
]
},
{
"tb": 96,
"tbk": 1,
"tl": 4086894,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
47,
48,
230,
231,
232,
839,
11
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 1781394,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
88,
89,
90,
91,
92,
93,
840
]
},
{
"tb": 64,
"tbk": 1,
"tl": 9239,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
47,
48,
183,
184,
185,
841,
750
]
},
{
"tb": 128,
"tbk": 2,
"tl": 1468857,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
47,
48,
842,
843,
844,
845,
846
]
},
{
"tb": 288358400,
"tbk": 1100,
"tl": 77515589656,
"mb": 288358400,
"mbk": 1100,
"gb": 288358400,
"gbk": 1100,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
31,
32,
33,
34,
847,
848,
849
]
},
{
"tb": 139255,
"tbk": 14,
"tl": 1998910,
"mb": 69632,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
47,
48,
306,
850,
851,
852,
853
]
},
{
"tb": 512,
"tbk": 1,
"tl": 46980,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
47,
48,
854,
855,
856,
857,
11
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 70077718,
"mb": 1024,
"mbk": 1,
"gb": 1024,
"gbk": 1,
"eb": 1024,
"ebk": 1,
"fs": [
858,
859,
860,
861,
862,
863,
864,
865,
866,
867,
868,
869,
870,
871,
872,
873,
874,
875,
876,
877,
878
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2404,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
879,
880,
881,
882,
883,
884,
885,
886
]
},
{
"tb": 32,
"tbk": 1,
"tl": 46168,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
210,
211,
212,
213,
214,
215,
887,
595,
11
]
},
{
"tb": 131008,
"tbk": 11,
"tl": 66,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
47,
48,
183,
184,
185,
888,
889
]
},
{
"tb": 35200,
"tbk": 1,
"tl": 81,
"mb": 35200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
31,
32,
33,
240,
890,
452,
453
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4199,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
31,
32,
33,
891,
234,
353,
354
]
},
{
"tb": 12160,
"tbk": 3,
"tl": 28458,
"mb": 12160,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
31,
32,
33,
892,
242,
243,
453
]
},
{
"tb": 35200,
"tbk": 1,
"tl": 9766,
"mb": 35200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
893,
894,
895
]
},
{
"tb": 1440,
"tbk": 12,
"tl": 3204,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
47,
48,
318,
319,
320,
321,
896
]
},
{
"tb": 128,
"tbk": 1,
"tl": 70047556,
"mb": 128,
"mbk": 1,
"gb": 128,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
246,
772,
773,
774,
775,
776,
897,
898
]
},
{
"tb": 48,
"tbk": 1,
"tl": 6281,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
899,
900,
901,
902,
903,
904,
905,
906,
907
]
},
{
"tb": 563200,
"tbk": 32,
"tl": 105300,
"mb": 563200,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
204,
205,
206,
908,
909,
910
]
},
{
"tb": 16,
"tbk": 1,
"tl": 6,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
54,
372,
437,
56,
57,
11,
58
]
},
{
"tb": 12160,
"tbk": 3,
"tl": 2265,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
290,
291,
292,
293,
911,
667,
10,
11
]
},
{
"tb": 576,
"tbk": 2,
"tl": 48,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
912,
913,
914,
915,
916,
917,
918,
919,
920
]
},
{
"tb": 35232,
"tbk": 3,
"tl": 7891846,
"mb": 35232,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
921,
922,
923,
924,
925,
926,
927,
928
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 173949,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
31,
32,
33,
34,
929,
930,
931
]
},
{
"tb": 3336,
"tbk": 2,
"tl": 56083809,
"mb": 3312,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
932,
933,
934,
935,
936,
937,
938,
939,
940
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2770,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
194,
195,
196,
197,
542,
941,
827,
765
]
},
{
"tb": 11392,
"tbk": 32,
"tl": 86077,
"mb": 11392,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
114,
115,
116,
117,
226,
227,
941,
827
]
},
{
"tb": 480,
"tbk": 4,
"tl": 9212,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
38,
39,
40,
41,
42,
942,
943
]
},
{
"tb": 256,
"tbk": 1,
"tl": 609,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
944,
945,
946,
947,
217,
218,
948
]
},
{
"tb": 512,
"tbk": 1,
"tl": 3427,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
31,
32,
33,
949,
950,
353,
354
]
},
{
"tb": 3040,
"tbk": 3,
"tl": 2940,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
114,
381,
382,
383,
384,
385,
239,
667
]
},
{
"tb": 96,
"tbk": 1,
"tl": 11,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
47,
48,
230,
231,
232,
951,
453
]
},
{
"tb": 384,
"tbk": 2,
"tl": 73,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
952,
953,
954,
955,
956,
957,
958,
959,
960
]
},
{
"tb": 1048608,
"tbk": 3,
"tl": 18873,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
31,
32,
33,
34,
961,
478,
962
]
},
{
"tb": 8,
"tbk": 1,
"tl": 3420,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
963,
964,
965,
966,
967,
968,
969,
970,
971
]
},
{
"tb": 563200,
"tbk": 1,
"tl": 9005,
"mb": 563200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
31,
32,
33,
240,
691,
972,
827
]
},
{
"tb": 480,
"tbk": 4,
"tl": 213,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
38,
39,
40,
41,
42,
642,
199
]
},
{
"tb": 2256,
"tbk": 3,
"tl": 25960,
"mb": 2256,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
194,
195,
196,
197,
542,
628,
242,
243
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1845875,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
47,
48,
183,
184,
185,
841,
187
]
},
{
"tb": 896,
"tbk": 6,
"tl": 13607,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
47,
48,
183,
184,
185,
973,
974
]
},
{
"tb": 299008,
"tbk": 3,
"tl": 39660,
"mb": 294912,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
31,
32,
33,
34,
975,
976,
53
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 3328,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
114,
977,
978,
979,
980,
981,
982,
983,
984
]
},
{
"tb": 96,
"tbk": 1,
"tl": 9793,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
47,
48,
985,
986,
987,
988,
353
]
},
{
"tb": 24,
"tbk": 1,
"tl": 128,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
54,
572,
573,
208,
209,
396,
353
]
},
{
"tb": 2280,
"tbk": 5,
"tl": 2189,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
408,
409,
410,
989,
990,
991
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 3693488,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
114,
115,
116,
117,
118,
378,
379,
992
]
},
{
"tb": 64,
"tbk": 1,
"tl": 602711,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
76,
993,
57,
11
]
},
{
"tb": 128,
"tbk": 1,
"tl": 7992,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
47,
48,
994,
995,
996,
997,
827
]
},
{
"tb": 64,
"tbk": 1,
"tl": 106,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
88,
89,
90,
91,
92,
93,
998
]
},
{
"tb": 3040,
"tbk": 3,
"tl": 26432,
"mb": 3040,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
114,
381,
382,
383,
384,
999,
242,
243
]
},
{
"tb": 35200,
"tbk": 1,
"tl": 9822,
"mb": 35200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
224,
1000,
453
]
},
{
"tb": 72,
"tbk": 1,
"tl": 27533,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
54,
1001,
142,
11,
58
]
},
{
"tb": 32,
"tbk": 1,
"tl": 144,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
1002,
96,
97
]
},
{
"tb": 256,
"tbk": 1,
"tl": 609,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
944,
945,
946,
947,
217,
1003,
1004
]
},
{
"tb": 65472,
"tbk": 10,
"tl": 9266,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
47,
48,
183,
184,
185,
186,
750
]
},
{
"tb": 8,
"tbk": 1,
"tl": 57567659,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
160,
1005,
1006,
1007,
1008,
1009,
1010,
1011,
1012
]
},
{
"tb": 64,
"tbk": 1,
"tl": 155,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
47,
48,
183,
184,
185,
386,
371
]
},
{
"tb": 48,
"tbk": 2,
"tl": 109,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
54,
1013,
537,
538,
539,
540,
541
]
},
{
"tb": 64,
"tbk": 1,
"tl": 9786,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
47,
48,
183,
184,
185,
370,
387
]
},
{
"tb": 512,
"tbk": 1,
"tl": 52,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1014,
1015,
1016,
1017,
1018,
1019,
1020,
1021
]
},
{
"tb": 288358400,
"tbk": 1100,
"tl": 67240433192,
"mb": 288358400,
"mbk": 1100,
"gb": 288358400,
"gbk": 1100,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
1022,
1023,
1024
]
},
{
"tb": 192,
"tbk": 1,
"tl": 9775,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
47,
48,
1025,
1026,
1027,
1028,
353
]
},
{
"tb": 512,
"tbk": 1,
"tl": 32,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
31,
32,
33,
1029,
749,
353,
354
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
38,
136,
143,
144,
145,
146,
147,
148,
149,
1030,
151
]
},
{
"tb": 256,
"tbk": 1,
"tl": 12,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
210,
211,
212,
631,
632,
633,
1031,
10,
11
]
},
{
"tb": 752,
"tbk": 3,
"tl": 977,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
944,
945,
946,
947,
217,
629,
1032
]
},
{
"tb": 32,
"tbk": 1,
"tl": 395404,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
944,
945,
946,
1033,
1034,
288,
11
]
},
{
"tb": 17600,
"tbk": 1,
"tl": 6275,
"mb": 17600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
76,
1035,
78,
79
]
},
{
"tb": 2528,
"tbk": 10,
"tl": 1153,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043
]
},
{
"tb": 96,
"tbk": 1,
"tl": 36,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
47,
48,
230,
231,
232,
1044,
234
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 1781354,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
88,
89,
90,
91,
92,
93,
1045
]
},
{
"tb": 160,
"tbk": 1,
"tl": 9760,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1046,
1047,
1048,
1049,
1050,
1051,
1052,
1053,
1054
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 55727176,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
31,
32,
33,
34,
35,
36,
1055
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 5609235,
"mb": 4194304,
"mbk": 1,
"gb": 4194304,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
114,
115,
116,
117,
118,
378,
379,
1056
]
},
{
"tb": 48,
"tbk": 2,
"tl": 1562962,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
279,
280,
281,
282,
283,
284,
285,
286,
1057,
1058
]
},
{
"tb": 72,
"tbk": 3,
"tl": 140580,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
279,
280,
281,
282,
283,
284,
285,
286,
220,
221,
222,
223
]
},
{
"tb": 3088,
"tbk": 16,
"tl": 490,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
210,
211,
212,
213,
214,
215,
216,
217,
1003
]
},
{
"tb": 563232,
"tbk": 33,
"tl": 100020,
"mb": 563200,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
454,
177,
178,
179,
180
]
},
{
"tb": 2315255808,
"tbk": 1,
"tl": 1840008,
"mb": 2315255808,
"mbk": 1,
"gb": 2315255808,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
1059,
1060,
1061
]
},
{
"tb": 480,
"tbk": 4,
"tl": 8654,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
38,
39,
40,
41,
42,
942,
1062
]
},
{
"tb": 16,
"tbk": 1,
"tl": 70067769,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
47,
527,
528,
529,
530,
531,
532,
533,
534,
1063,
1064
]
},
{
"tb": 32,
"tbk": 1,
"tl": 63,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
127,
1065,
1066,
1067,
1068,
1069,
1070,
1071,
1072
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
38,
136,
143,
144,
145,
146,
147,
148,
149,
1030,
278
]
},
{
"tb": 144,
"tbk": 1,
"tl": 46873,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
105,
1073,
1074,
1075,
221,
222,
223,
1076,
595,
11
]
},
{
"tb": 512,
"tbk": 1,
"tl": 8675,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
204,
205,
206,
1077,
1078,
1079
]
},
{
"tb": 524288,
"tbk": 2,
"tl": 7796352,
"mb": 524288,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
204,
205,
206,
1080,
1081,
1082
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1260,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
204,
205,
206,
1083,
172,
635
]
},
{
"tb": 2097152,
"tbk": 4,
"tl": 394468,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1084,
1085,
1086,
1087,
1088,
1089,
1090,
1091
]
},
{
"tb": 26400,
"tbk": 1,
"tl": 70481894,
"mb": 26400,
"mbk": 1,
"gb": 26400,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
173,
1092,
1093,
1094,
1095,
1096,
1097,
1098,
1099
]
},
{
"tb": 1691027,
"tbk": 7,
"tl": 13670,
"mb": 1126854,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
47,
48,
306,
850,
851,
852,
1100
]
},
{
"tb": 760,
"tbk": 3,
"tl": 3281,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
21,
22,
210,
211,
212,
631,
632,
633,
1101,
1102,
172
]
}
],
"ftbl": [
"[root]",
"0x593cbe0a53b9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x593cbdf774ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593cbdff4e08: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbdff4e08: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbdff4e08: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x593cbe07ab85: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x593cbe07ab85: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x593cbe07ab85: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x593cbdf54c29: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x593cbdfd019c: winter_prover::Prover::generate_proof (prover/src/lib.rs:600:25)",
"0x593cbdfe02ee: winter_prover::Prover::prove (prover/src/lib.rs:175:37)",
"0x593cbdf730bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593cbe0246af: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe0246af: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe0246af: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe0246af: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe079705: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x593cbe08a50a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b6b3d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbdedd891: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x593cbe2a0a99: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x593cbe2a0c0a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593cbe035b9d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe035b9d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe035b9d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe035b9d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08c2aa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe089394: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b7b5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbe0165c3: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x593cbe0447d5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe0447d5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe0447d5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbdfaeae7: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x593cbdf0c30f: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x593cbdf0b506: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x593cbdfdfacc: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:701:36)",
"0x593cbe269819: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x593cbe2682e9: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x593cbe177840: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x593cbe177aa9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x593cbe187111: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x593cbdfd0e8b: winter_prover::Prover::generate_proof (prover/src/lib.rs:450:13)",
"0x593cbdec9106: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x593cbdf05ac9: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:290:18)",
"0x593cbdf0488e: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:173:30)",
"0x593cbe2ddf79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x593cbe2dc709: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x593cbdf8e511: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x593cbdfaca08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x593cbe06a40e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x593cbdf51c69: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x593cbdf56bc6: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x593cbe0a4847: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x593cbdf4121b: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:175:9)",
"0x593cbe01f518: winter_prover::trace::Trace::validate (src/trace/mod.rs:123:26)",
"0x593cbdfd1578: winter_prover::Prover::generate_proof (prover/src/lib.rs:379:17)",
"0x593cbdf4027c: winterfell::main (winterfell/src/main.rs:54:17)",
"0x593cbdfa6b21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x593cbdfac498: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x593cbe06e7ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x593cbdf5fdb7: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x593cbdfecbae: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x593cbdf79edc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593cbe03c25f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe03c25f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe03c25f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe03c25f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe07918b: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x593cbe0898d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b756d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbdfcd7f7: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:36)",
"0x593cbdff5511: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbdff5511: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbdff5511: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x593cbe079c80: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x593cbe00f1ce: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x593cbdee6038: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:216:32)",
"0x593cbe0c5e5f: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x593cbe03f9dd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe03f9dd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe03f9dd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe03f9dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08cc7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe089ff4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b786a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbe01667b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x593cbe2dbadc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x593cbe2dad6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x593cbe2daae8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x593cbe2daae8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x593cbe2da124: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x593cbe2d7d43: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x593cbe0098a2: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x593cbe0c9d72: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x593cbe0c9e16: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x593cbdee2edf: winter_verifier::perform_verification (verifier/src/lib.rs:228:13)",
"0x593cbdfd0e70: winter_prover::Prover::generate_proof (prover/src/lib.rs:449:13)",
"0x593cbe2a348b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x593cbe2a2e51: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x593cbe29c54b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x593cbe296c41: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x593cbe2972c7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x593cbe2a695b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x593cbdf70c1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593cbe0244b9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe0244b9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe0244b9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe0244b9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08c8ea: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe0894f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b739a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbdfbafe8: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:83:9)",
"0x593cbdf6adec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593cbe044b95: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe044b95: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe044b95: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbdfaea57: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x593cbdf094bd: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x593cbdfdfeb8: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:716:26)",
"0x593cbdfce931: winter_prover::Prover::generate_proof (prover/src/lib.rs:482:37)",
"0x593cbdfa1c21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x593cbdfabdd8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x593cbe06d6ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x593cbdee78ec: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x593cbdeea4b0: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x593cbdf6f49c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593cbe02e4cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe02e4cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe02e4cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe02e4cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08d0dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe08a3d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b6a6d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbdfcccd2: winter_prover::Prover::generate_proof (prover/src/lib.rs:210:38)",
"0x593cbe26862a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593cbe1bff36: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe1bff36: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe1bff36: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbdf17517: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x593cbdee7845: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x593cbdfd0217: winter_prover::Prover::generate_proof (prover/src/lib.rs:603:29)",
"0x593cbe26b32c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe26b32c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe26b32c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x593cbe23a69c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x593cbe23a69c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x593cbe23a69c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x593cbdedf084: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x593cbdeded9a: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x593cbdee61dd: winter_verifier::verify (verifier/src/lib.rs:96:32)",
"0x593cbe034a3f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe034a3f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe034a3f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe034a3f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08db1d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe088bb7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b69bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbdef4df7: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x593cbdf7044a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593cbe025539: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe025539: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe025539: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe025539: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08cb7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe08ab14: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b844a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbdfcd4ea: winter_prover::Prover::generate_proof (prover/src/lib.rs:272:43)",
"0x593cbe00982f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x593cbe009921: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x593cbe127b73: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x593cbe1305e9: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x593cbdf6d7bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593cbe043a22: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe043a22: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe043a22: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x593cbe07ad25: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x593cbe07ad25: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x593cbe07ad25: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x593cbe0420e6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x593cbdf5a2f2: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x593cbdfccf02: winter_prover::Prover::generate_proof (prover/src/lib.rs:233:27)",
"0x593cbdfa2fe1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x593cbdfac0d8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x593cbe06a67d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x593cbdfcb3d4: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:541:17)",
"0x593cbdf591b6: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x593cbe2a32db: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x593cbe2a2fb1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x593cbe29c2ab: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x593cbe295e9d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x593cbe2a142b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x593cbe2a51e3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x593cbdf76a6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593cbe044875: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe044875: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe044875: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbdf4daaf: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x593cbdfe8b91: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x593cbdfd030a: winter_prover::Prover::generate_proof (prover/src/lib.rs:608:34)",
"0x593cbded6440: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x593cbe0bedb6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x593cbdebeb11: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x593cbdff545b: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x593cbdff545b: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x593cbdff545b: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x593cbdec9cba: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x593cbdfca010: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:354:9)",
"0x593cbe0a9e16: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:26:25)",
"0x593cbe29461c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe29461c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe29461c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x593cbe07b2d9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x593cbe07b2d9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x593cbe07b2d9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x593cbdf1fabb: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x593cbdf4e46d: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x593cbe0154ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x593cbdec18f5: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x593cbdec1750: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x593cbe07adf5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x593cbe07adf5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x593cbe07adf5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x593cbe0420a6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x593cbdfce4d0: winter_prover::Prover::generate_proof (prover/src/lib.rs:452:35)",
"0x593cbdf15785: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x593cbdf1ecc7: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x593cbdf1d547: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x593cbe01d3a7: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x593cbdf8c281: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x593cbdfaca38: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x593cbe06d33e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x593cbdef0325: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x593cbdee2a15: winter_verifier::perform_verification (verifier/src/lib.rs:311:25)",
"0x593cbdfa92a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x593cbdfaca98: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x593cbe06c91b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x593cbdf4e0fa: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x593cbdf503c0: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x593cbdff3485: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x593cbdf61d26: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x593cbdf65040: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x593cbe017104: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x593cbdfb118f: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x593cbdf5193d: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x593cbdf6ab4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593cbdfc9012: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbdfc9012: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbdfc9012: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x593cbe07bb05: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x593cbe07bb05: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x593cbe07bb05: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x593cbdec9b95: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x593cbdf06a9c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:51:13)",
"0x593cbdf20c4b: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x593cbdf6b5cc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593cbe02eaff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe02eaff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe02eaff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe02eaff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08c4ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe089337: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b7e8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbdf3fedf: winterfell::main (winterfell/src/main.rs:28:26)",
"0x593cbded124c: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x593cbdf48e2f: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x593cbe118338: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x593cbdf5c222: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x593cbdf713fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593cbe030edf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe030edf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe030edf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe030edf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08d88d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe0890c5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b69dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbdfde08b: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:648:34)",
"0x593cbdf5a2db: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x593cbdf7406c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593cbdff4f38: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbdff4f38: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbdff4f38: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x593cbe07b7c5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x593cbe07b7c5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x593cbe07b7c5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x593cbdec18e2: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x593cbdf07973: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:33)",
"0x593cbdfd1266: winter_prover::Prover::generate_proof (prover/src/lib.rs:417:21)",
"0x593cbdfe8db3: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x593cbdf7169c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593cbe044af5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe044af5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe044af5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbdfaec07: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x593cbded1237: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x593cbdf08a29: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x593cbe0c61d6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x593cbe040e6f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe040e6f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe040e6f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe040e6f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08cecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe088825: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b7afd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbe127c5a: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x593cbe2dcea0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x593cbe2dd108: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x593cbe2dd4ca: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x593cbe2dd4ca: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x593cbe2dd26e: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x593cbe2dd26e: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x593cbe2dd35d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x593cbdf0a9d6: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x593cbdf09e23: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x593cbdfde6ee: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:669:26)",
"0x593cbdffa4ab: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x593cbdfcf02d: winter_prover::Prover::generate_proof (prover/src/lib.rs:524:9)",
"0x593cbe2a10f0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x593cbe295669: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x593cbe294e51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x593cbe294950: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x593cbe1275ed: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x593cbdeb66e8: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:227:28)",
"0x593cbdf09d9a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x593cbdfcd511: winter_prover::Prover::generate_proof (prover/src/lib.rs:274:13)",
"0x593cbdf71e6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593cbe02cb29: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe02cb29: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe02cb29: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe02cb29: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08ccaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe08b084: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b719a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbdf5a24b: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x593cbdf6bd9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593cbe034e5f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe034e5f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe034e5f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe034e5f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08c3cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe089e87: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b6e8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbdfbbbcd: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:51:26)",
"0x593cbe02969a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe02969a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe02969a: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe02969a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x593cbe08c4cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe08aa1a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe114f4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbdf4e243: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x593cbdeef6df: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x593cbdee65da: winter_verifier::verify (verifier/src/lib.rs:111:21)",
"0x593cbdf40822: winterfell::main (winterfell/src/main.rs:71:11)",
"0x593cbdf489fe: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x593cbdeef3b7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x593cbe02b4ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe02b4ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe02b4ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe02b4ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08dd3d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe0885f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b821d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbdef3ff2: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x593cbdf49ec7: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x593cbdf5b003: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x593cbdf5c210: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x593cbdf652b9: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x593cbdeb489d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x593cbdfcca42: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:512:13)",
"0x593cbdf596b2: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x593cbdf46245: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x593cbdf41330: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:177:13)",
"0x593cbdfc9b72: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:371:13)",
"0x593cbdfbbadf: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:41:22)",
"0x593cbdf06b39: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:36)",
"0x593cbdfd11b5: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:21)",
"0x593cbdf4d259: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x593cbdf4e739: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x593cbdf519b6: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x593cbdf15c84: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbdf15c84: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbdf15c84: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x593cbe079c56: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x593cbdf4da4c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x593cbdfcc978: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:517:13)",
"0x593cbdee18e5: winter_verifier::perform_verification (verifier/src/lib.rs:185:13)",
"0x593cbdfe780b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x593cbdfe5a1d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x593cbe159c2a: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x593cbe15255d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x593cbe158a25: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x593cbe14b86e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x593cbdedaadb: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x593cbe0aa2cb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:64:9)",
"0x593cbdee2fcc: winter_verifier::perform_verification (verifier/src/lib.rs:225:43)",
"0x593cbdf045e4: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:156:33)",
"0x593cbdf07e25: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:128:17)",
"0x593cbe102c6e: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x593cbe02f95f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe02f95f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe02f95f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe02f95f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08da4d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe089e15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b7f5d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbe12d7af: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x593cbdfe672b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x593cbdfe5f9d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x593cbe15969a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x593cbe146f7b: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x593cbe1511a9: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x593cbe14b416: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x593cbe02aac3: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe02aac3: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe02aac3: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe02aac3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08cbd4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe08929a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b7654: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbdf3fd51: winterfell::main (winterfell/src/main.rs:22:32)",
"0x593cbded8d08: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x593cbdfc475a: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x593cbe0a8852: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:503:32)",
"0x593cbe0c5dc6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x593cbe0e393a: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x593cbe0ade27: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x593cbe0b8a22: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x593cbdf4ddbc: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x593cbdee777b: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x593cbe1c49e9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x593cbe1c49e9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x593cbe1c49e9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x593cbdfe509a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x593cbdec3a26: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x593cbe017714: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x593cbdf41247: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:176:13)",
"0x593cbdf789ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593cbe044a55: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe044a55: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe044a55: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbdfcd877: winter_prover::Prover::generate_proof (prover/src/lib.rs:306:39)",
"0x593cbdf7430c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593cbe043328: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe043328: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe043328: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x593cbe07b205: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x593cbe07b205: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x593cbe07b205: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x593cbdfceea3: winter_prover::Prover::generate_proof (prover/src/lib.rs:510:39)",
"0x593cbdec3126: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x593cbe017c15: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x593cbdee650b: winter_verifier::verify (verifier/src/lib.rs:109:19)",
"0x593cbe043d83: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x593cbded4238: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x593cbdf65e4c: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x593cbe016f37: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x593cbdf6cd4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593cbe02859f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe02859f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe02859f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe02859f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe0780d6: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x593cbe08abc5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b830d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbdee63a8: winter_verifier::verify (verifier/src/lib.rs:102:24)",
"0x593cbdf76fac: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593cbe02c8df: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe02c8df: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe02c8df: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe02c8df: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe077b4e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x593cbe08a415: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b82ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbdee94f7: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x593cbdeb488c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x593cbded72ce: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x593cbded4ac4: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x593cbe266700: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x593cbe266939: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x593cbe266132: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x593cbdf1f17c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x593cbdf1731d: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x593cbe01e55d: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:243:25)",
"0x593cbdf40d94: winterfell::build_do_work_trace (winterfell/src/main.rs:91:5)",
"0x593cbdfe060b: winterfell::main::{{closure}} (winterfell/src/main.rs:30:23)",
"0x593cbe0380ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe0380ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe0380ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe0380ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08c44d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe088625: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b713d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbdec0d28: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x593cbded42c5: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x593cbdf6e23c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593cbe028bd9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe028bd9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe028bd9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe028bd9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08d00a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe08ac44: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b7c2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbded64b2: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x593cbdff9cbe: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x593cbdf7820c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593cbe031e49: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe031e49: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe031e49: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe031e49: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08c93a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe0897f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b701a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbdee1c5f: winter_verifier::perform_verification (verifier/src/lib.rs:218:40)",
"0x593cbdeef21f: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x593cbded8a93: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x593cbded6eae: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x593cbdedaa1c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x593cbe027b59: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe027b59: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe027b59: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe027b59: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08c6ba: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe08a9a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b6eea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbdfcee8c: winter_prover::Prover::generate_proof (prover/src/lib.rs:505:52)",
"0x593cbe2dc9ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593cbe2de04c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe2de04c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe2de04c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x593cbe2dbc7c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x593cbe2dbc7c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x593cbe2dbc7c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x593cbe2d7ece: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x593cbe016370: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x593cbdec04f5: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x593cbdfed55c: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x593cbe09b129: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x593cbdfecb36: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x593cbdff0296: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x593cbdfc9bcf: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:369:9)",
"0x593cbdf1ea4c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x593cbe016d54: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x593cbdfe8dca: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x593cbe0443c5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe0443c5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe0443c5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbdfcd8cd: winter_prover::Prover::generate_proof (prover/src/lib.rs:308:37)",
"0x593cbdf1beb4: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x593cbe02770f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe02770f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe02770f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe02770f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08c27d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe08aa55: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b68ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbe127ac4: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x593cbdf1bdac: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x593cbdfe8d4a: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x593cbe023997: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x593cbe016970: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x593cbe03286f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe03286f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe03286f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe03286f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08d61d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe088285: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b6c1d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbdfcceb3: winter_prover::Prover::generate_proof (prover/src/lib.rs:222:20)",
"0x593cbdf15428: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x593cbdfcd132: winter_prover::Prover::generate_proof (prover/src/lib.rs:262:22)",
"0x593cbdec0d37: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x593cbdec9b7f: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x593cbe117b89: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x593cbdfcf6b8: winter_prover::Prover::generate_proof (prover/src/lib.rs:558:13)",
"0x593cbe1b90b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x593cbe1bbd69: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x593cbe1c3322: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x593cbdf1765f: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x593cbe12fde9: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x593cbdee21ac: winter_verifier::perform_verification (verifier/src/lib.rs:275:24)",
"0x593cbdee76db: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x593cbdfcb350: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:543:13)",
"0x593cbe293c69: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x593cbe290c1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593cbe28ddb6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe28ddb6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe28ddb6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbdf54b68: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x593cbe117b9b: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x593cbdeb98cd: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x593cbdeb8036: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x593cbe0a8c48: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:300:57)",
"0x593cbdf56d52: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x593cbdfcde23: winter_prover::Prover::generate_proof (prover/src/lib.rs:423:33)",
"0x593cbdf6ea1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593cbe0449b5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe0449b5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe0449b5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbdfcd909: winter_prover::Prover::generate_proof (prover/src/lib.rs:309:32)",
"0x593cbe11514c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x593cbdedee0c: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x593cbe027033: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe027033: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe027033: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe027033: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08d9ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe08a545: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b7fdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbdfcd6db: winter_prover::Prover::generate_proof (prover/src/lib.rs:293:23)",
"0x593cbe03605d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe03605d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe03605d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe03605d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08cdda: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe089de4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b71ca: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbe0167eb: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x593cbdf706dc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593cbe03244f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe03244f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe03244f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe03244f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08d04d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe087f75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b841d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbdfcedcf: winter_prover::Prover::generate_proof (prover/src/lib.rs:501:51)",
"0x593cbdf61e35: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x593cbe00e2d4: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x593cbdf1707a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x593cbe2945cc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x593cbe2945cc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x593cbe2945cc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x593cbe126d9d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x593cbdee2c03: winter_verifier::perform_verification (verifier/src/lib.rs:323:5)",
"0x593cbe2a312b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x593cbe2a3061: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x593cbe29c46b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x593cbe296b71: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x593cbe297307: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x593cbe2a690b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x593cbdf4e2b7: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x593cbe009bbd: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x593cbe115472: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x593cbdf5199f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x593cbdf7a17c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593cbe03ceef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe03ceef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe03ceef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe03ceef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08d27d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe088c65: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0999bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbdfcd033: winter_prover::Prover::generate_proof (prover/src/lib.rs:248:41)",
"0x593cbe2a363b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x593cbe2a2f01: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x593cbe29c38b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x593cbe29904e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x593cbe29a9ec: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x593cbe29955a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x593cbdf40e36: <winterfell::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (winterfell/src/main.rs:133:9)",
"0x593cbdee6330: winter_verifier::verify (verifier/src/lib.rs:98:38)",
"0x593cbdfaba21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x593cbdfabe08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x593cbe06e42e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x593cbe017f07: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x593cbdf550bd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x593cbe023b50: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x593cbe0283a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe0283a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe0283a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe0283a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08d48a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe088fc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b7a3a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbdfccd8f: winter_prover::Prover::generate_proof (prover/src/lib.rs:214:39)",
"0x593cbdf6b32c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593cbdec3aea: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbdec3aea: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbdec3aea: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x593cbe079ca6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x593cbdf5a508: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x593cbe02b2ef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe02b2ef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe02b2ef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe02b2ef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08d4cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe089d15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b67dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbdee78d5: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x593cbdfe2efa: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x593cbdf1d356: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x593cbe11bd94: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x593cbe12795d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x593cbe033ecd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe033ecd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe033ecd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe033ecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08d09a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe088544: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b773a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbe01650b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x593cbdfe50af: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x593cbdfe807b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x593cbdfe528d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x593cbe1592ea: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x593cbe134009: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x593cbe09da75: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x593cbdf14598: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x593cbdf17999: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x593cbe1174f9: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x593cbdf1537b: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x593cbdf77ccc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593cbe044c35: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe044c35: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe044c35: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbdfcd88e: winter_prover::Prover::generate_proof (prover/src/lib.rs:307:44)",
"0x593cbe03ed2f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe03ed2f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe03ed2f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe03ed2f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08c56d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe089125: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b798d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbe126d29: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x593cbe02d58d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe02d58d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe02d58d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe02d58d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08cd7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe088d34: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b730a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbe016733: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x593cbdfe6a8b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x593cbdfe5e3d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x593cbe15978a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x593cbe1342a9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x593cbe09cbc8: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x593cbe09b195: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x593cbe025f8f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe025f8f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe025f8f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe025f8f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08d06d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe088f75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b679d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbded63a8: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x593cbdef3eb1: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x593cbdee2abc: winter_verifier::perform_verification (verifier/src/lib.rs:317:25)",
"0x593cbdee1fc9: winter_verifier::perform_verification (verifier/src/lib.rs:266:61)",
"0x593cbdf996d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x593cbdfac7c8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x593cbe06b67e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x593cbdf65216: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x593cbe02aecf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe02aecf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe02aecf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe02aecf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08dd5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe08ada7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b7edd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbdf400e6: winterfell::main (winterfell/src/main.rs:38:27)",
"0x593cbdf613b5: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x593cbe010e73: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x593cbe016ad4: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x593cbe138c7d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x593cbe13b613: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x593cbdf4c237: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x593cbe295e3d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x593cbe2a1748: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x593cbe2a50a7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x593cbdfc94c4: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbdfc94c4: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbdfc94c4: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x593cbe079bf6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x593cbdf410ad: <winterfell::WorkAir as winter_air::air::Air>::new (winterfell/src/main.rs:151:23)",
"0x593cbdee703b: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:102:85)",
"0x593cbe0c3a6e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x593cbe0a77a8: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:216:31)",
"0x593cbe0c5d36: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x593cbe0e3bd0: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x593cbe0b1f66: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x593cbe0b98f6: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x593cbe030b04: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe030b04: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe030b04: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe030b04: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x593cbe08deaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe089d64: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b80da: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbdf19e8d: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x593cbe009b6c: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x593cbdffa347: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x593cbe0267f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe0267f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe0267f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe0267f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08c34a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe0883a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b813a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbdfddf12: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:640:42)",
"0x593cbe03aabf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe03aabf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe03aabf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe03aabf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08de7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe08a925: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b75dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbdeb6788: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:228:23)",
"0x593cbdfbdd5a: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:170:36)",
"0x593cbdfbc34f: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:55:17)",
"0x593cbe02818f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe02818f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe02818f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe02818f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08cccd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe089cd7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b750d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbe0acaa0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x593cbdf078b2: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:28)",
"0x593cbdffa5c3: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x593cbe298f3e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x593cbe29a400: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x593cbe299bf8: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x593cbe01776e: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x593cbdf19b8e: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x593cbe010d0d: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x593cbdfab041: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x593cbdfac018: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x593cbe06a8be: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x593cbdfbde9d: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:175:17)",
"0x593cbdef3cb7: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x593cbdf0c9bd: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x593cbdf08c90: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x593cbdf0b614: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x593cbdede41f: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x593cbdedca15: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x593cbdf0458a: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:155:31)",
"0x593cbdfd0e30: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:13)",
"0x593cbdffa0d2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x593cbdfcb1b5: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:547:13)",
"0x593cbdf8f8d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x593cbdfac318: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x593cbe06d12d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x593cbded6af2: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x593cbe102ac5: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x593cbe01f1b0: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:140:51)",
"0x593cbe0c0476: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x593cbdebefc1: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x593cbe2dd0d9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x593cbe2dd3d2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x593cbe2de159: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x593cbdec232d: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x593cbdf84c01: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x593cbdfac408: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x593cbe06ec54: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x593cbdfd1285: winter_prover::Prover::generate_proof (prover/src/lib.rs:418:17)",
"0x593cbde8ed82: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x593cbde8ed82: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593cbde8ed82: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbde8ed82: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbde8ed82: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbde8ed82: std::io::buffered::bufwriter::BufWriter<W>::with_capacity (io/buffered/bufwriter.rs:115:33)",
"0x593cbde8ed82: std::io::buffered::linewriter::LineWriter<W>::with_capacity (io/buffered/linewriter.rs:109:29)",
"0x593cbde8ed82: std::io::buffered::linewriter::LineWriter<W>::new (io/buffered/linewriter.rs:89:9)",
"0x593cbde8ed82: std::io::stdio::stdout::{{closure}} (src/io/stdio.rs:618:62)",
"0x593cbde8ed82: std::sync::once_lock::OnceLock<T>::get_or_init::{{closure}} (src/sync/once_lock.rs:250:50)",
"0x593cbde8ed82: std::sync::once_lock::OnceLock<T>::initialize::{{closure}} (src/sync/once_lock.rs:376:19)",
"0x593cbde8ed82: std::sync::once::Once::call_once_force::{{closure}} (src/sync/once.rs:208:40)",
"0x593cbde8ed82: std::sys_common::once::futex::Once::call (sys_common/once/futex.rs:124:21)",
"0x593cbde8deca: std::sync::once::Once::call_once_force (src/sync/once.rs:208:9)",
"0x593cbde8deca: std::sync::once_lock::OnceLock<T>::initialize (src/sync/once_lock.rs:375:9)",
"0x593cbe2f81c5: std::sync::once_lock::OnceLock<T>::get_or_try_init (src/sync/once_lock.rs:298:9)",
"0x593cbe2f81c5: std::sync::once_lock::OnceLock<T>::get_or_init (src/sync/once_lock.rs:250:15)",
"0x593cbe2f81c5: std::io::stdio::stdout (src/io/stdio.rs:618:14)",
"0x593cbe2f81c5: std::io::stdio::print_to (src/io/stdio.rs:1020:21)",
"0x593cbe2f81c5: std::io::stdio::_print (src/io/stdio.rs:1097:5)",
"0x593cbdf4003a: winterfell::main (winterfell/src/main.rs:36:5)",
"0x593cbe03b40d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe03b40d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe03b40d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe03b40d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08ce4a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe08a6e4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b6d1a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbe010ba1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x593cbded4314: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x593cbdec2461: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x593cbdf5903f: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x593cbdec2f63: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x593cbdeef6fe: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x593cbdf61b7f: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x593cbe01e131: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x593cbdff2853: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x593cbe0a5832: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x593cbdf54e24: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x593cbe0a8f36: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:226:17)",
"0x593cbe0c319e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x593cbdf6c03c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593cbe02e909: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe02e909: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe02e909: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe02e909: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08de3a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe089934: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b6a2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbdee1ba2: winter_verifier::perform_verification (verifier/src/lib.rs:214:41)",
"0x593cbdee7f56: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x593cbe0c4eb6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x593cbe0e9fbd: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x593cbdf50499: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x593cbdf6e77c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593cbe032bf2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe032bf2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe032bf2: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe032bf2: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x593cbe08db7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe088c35: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b68cd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbdfeca6a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x593cbe037acf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe037acf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe037acf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe037acf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08ca5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe089c45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b7e4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbdeb61cf: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:283:9)",
"0x593cbe0a5c5a: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x593cbe1196a7: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x593cbdffc889: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x593cbdf72b7c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593cbe02c19f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe02c19f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe02c19f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe02c19f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08d54d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe08a355: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b7ddd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbdf081b1: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x593cbdf19f66: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x593cbdf4c7dc: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x593cbdee24f7: winter_verifier::perform_verification (verifier/src/lib.rs:298:27)",
"0x593cbe044646: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe044646: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe044646: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbdf1f882: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x593cbdee2636: winter_verifier::perform_verification (verifier/src/lib.rs:305:9)",
"0x593cbdeec7be: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x593cbdee2b34: winter_verifier::perform_verification (verifier/src/lib.rs:319:28)",
"0x593cbe017e5f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x593cbdf77f6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593cbe03d22b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe03d22b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe03d22b: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe03d22b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x593cbe08daad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe08a955: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbdfae16d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbdfee618: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x593cbded71bf: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x593cbded8f9d: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x593cbdf6d52a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593cbe025949: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe025949: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe025949: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe025949: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08d96a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe089874: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b7b8a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbdeea40e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x593cbdf1a31c: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x593cbe0a54e2: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x593cbdedec98: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x593cbdf5c2d3: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x593cbdf51afb: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x593cbe035e94: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe035e94: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe035e94: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe035e94: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x593cbe08c5da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe08aec4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b7c5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbdf1d46e: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x593cbdf92a31: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x593cbdfac048: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x593cbe06f55e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x593cbdee33b2: winter_verifier::perform_verification (verifier/src/lib.rs:179:9)",
"0x593cbe1341e9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x593cbe09e15b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x593cbdf146eb: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x593cbdf09572: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x593cbe01f9a5: winter_prover::trace::Trace::validate (src/trace/mod.rs:179:13)",
"0x593cbdf89611: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x593cbdfac288: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x593cbe06ac0b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x593cbdf1a3c9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x593cbe0a9f8c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:40:30)",
"0x593cbdf61b3e: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x593cbe017d01: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x593cbdeea41d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x593cbe0c9d85: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x593cbe015cf0: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x593cbdee27a8: winter_verifier::perform_verification (verifier/src/lib.rs:306:42)",
"0x593cbe03e4f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe03e4f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe03e4f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe03e4f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08c9da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe089bc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b6eba: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbdfddfcf: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:644:36)",
"0x593cbdec0388: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x593cbe0303bf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe0303bf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe0303bf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe0303bf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08d6cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe08ae45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b752d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbdeef4ab: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x593cbdeb6a3f: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:230:34)",
"0x593cbe0bf026: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x593cbe0e53a7: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x593cbdf907a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x593cbdfac108: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x593cbe06cdae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x593cbdee31eb: winter_verifier::perform_verification (verifier/src/lib.rs:184:9)",
"0x593cbdef3ca0: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x593cbdededce: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x593cbdf54c0e: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x593cbe12778d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x593cbdedaa78: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x593cbdf07be1: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:135:9)",
"0x593cbe00f1b0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x593cbe2a39e9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe2a39e9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe2a39e9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe2a39e9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x593cbe2a3e2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe2a3df7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe2a3fce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbe2a64c9: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x593cbdef02d7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x593cbdffa0f5: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x593cbdf6f1fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593cbe031622: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe031622: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe031622: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe031622: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x593cbe08cdaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe088484: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0a58ea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbe014d67: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x593cbe0a92f8: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:651:17)",
"0x593cbdf09e5c: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x593cbdfbb028: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:83:31)",
"0x593cbe0c17af: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x593cbdf0e081: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x593cbdf0ce86: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x593cbdfde12f: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:655:31)",
"0x593cbdf588d8: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x593cbdedf29f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x593cbdf5adf3: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x593cbe02bb4f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe02bb4f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe02bb4f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe02bb4f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe07703e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x593cbe08b035: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b80ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbdf4074e: winterfell::main (winterfell/src/main.rs:65:26)",
"0x593cbdec13e2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbdec13e2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbdec13e2: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x593cbded424b: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x593cbdf56e92: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x593cbdf56b2c: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x593cbdfcfb02: winter_prover::Prover::generate_proof (prover/src/lib.rs:571:9)",
"0x593cbe0acb0a: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x593cbe0c37a8: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x593cbdf48114: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x593cbe126e04: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x593cbe03dd1f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe03dd1f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe03dd1f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe03dd1f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08c61d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe0884f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b734d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbded77f7: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x593cbe03f36f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593cbe03f36f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593cbe03f36f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593cbe03f36f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593cbe08c89d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593cbe08a895: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593cbe0b7bdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593cbe01efe2: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:140:32)",
"0x593cbe29401a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x593cbe2942c6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x593cbe1276ca: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)"
]
}