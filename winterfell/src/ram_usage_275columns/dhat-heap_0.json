{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell",
"pid": 19777,
"tg": 76183334,
"te": 84943725,
"pps": [
{
"tb": 256,
"tbk": 2,
"tl": 442,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7
]
},
{
"tb": 6600,
"tbk": 1,
"tl": 84933917,
"mb": 6600,
"mbk": 1,
"gb": 6600,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
16,
17
]
},
{
"tb": 16,
"tbk": 1,
"tl": 695145,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
22,
23,
24,
25
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
28,
29
]
},
{
"tb": 216,
"tbk": 1,
"tl": 84637603,
"mb": 216,
"mbk": 1,
"gb": 216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
30,
31,
32,
33,
34,
35,
36,
37,
38
]
},
{
"tb": 8,
"tbk": 1,
"tl": 395486,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
39,
40,
41,
42,
43,
44,
45,
46,
47
]
},
{
"tb": 256,
"tbk": 1,
"tl": 9413,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
48,
49,
50,
51,
52,
53,
54,
55,
56
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 7602616,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
57,
58,
59,
60,
61,
62,
63
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2272,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
64,
65,
66,
67,
68,
69,
70,
71
]
},
{
"tb": 32,
"tbk": 1,
"tl": 6228830,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
72,
73,
74,
75,
76,
77,
47
]
},
{
"tb": 2880,
"tbk": 24,
"tl": 2421,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
72,
73,
74,
75,
76,
78,
79
]
},
{
"tb": 129024,
"tbk": 4,
"tl": 1645,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
80,
81,
82,
83,
84,
85,
86
]
},
{
"tb": 288,
"tbk": 1,
"tl": 31157,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
87,
88,
89,
90,
91
]
},
{
"tb": 13800,
"tbk": 25,
"tl": 6456,
"mb": 3864,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
92,
93,
94,
95,
96,
97
]
},
{
"tb": 2016,
"tbk": 4,
"tl": 3020,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
98,
99,
100,
101,
102,
103,
104,
105
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2277,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
106,
107,
108,
109,
110,
70,
71,
111
]
},
{
"tb": 96,
"tbk": 1,
"tl": 6228846,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
112,
113,
114,
115,
47
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2813,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
106,
107,
108,
109,
116,
117,
118,
119
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 329,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
48,
49,
50,
120,
121,
122,
123,
124,
47
]
},
{
"tb": 48,
"tbk": 1,
"tl": 84646984,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
125,
126,
127,
128,
129,
130,
131,
47
]
},
{
"tb": 5760,
"tbk": 30,
"tl": 12277,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
39,
132,
133,
134,
135,
136,
137
]
},
{
"tb": 192,
"tbk": 1,
"tl": 22023,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
138,
139,
140,
141,
142,
143,
144,
47,
145
]
},
{
"tb": 48,
"tbk": 1,
"tl": 7863519,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
146,
147,
148,
149,
150,
151,
152,
153,
154
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 391741,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
155,
156,
157,
158,
159,
160,
161,
162
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 152408,
"mb": 1179648,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
57,
58,
59,
60,
163,
164,
91
]
},
{
"tb": 24,
"tbk": 1,
"tl": 8545664,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
165,
166,
167,
168,
169,
47,
145
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 194586,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
48,
49,
50,
120,
121,
122,
170,
171,
172,
173,
174
]
},
{
"tb": 256,
"tbk": 1,
"tl": 8571,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
57,
58,
59,
175,
176,
177,
178
]
},
{
"tb": 56,
"tbk": 1,
"tl": 2662,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
179,
119,
178,
29
]
},
{
"tb": 96,
"tbk": 1,
"tl": 8227,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
112,
113,
114,
180,
181
]
},
{
"tb": 16,
"tbk": 1,
"tl": 99,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
80,
81,
82,
83,
84,
85,
182
]
},
{
"tb": 3456,
"tbk": 12,
"tl": 4737,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
39,
183,
184,
185,
186,
187,
188
]
},
{
"tb": 64,
"tbk": 1,
"tl": 169,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
189,
190,
191,
192,
193
]
},
{
"tb": 16,
"tbk": 1,
"tl": 114,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
194,
195,
196,
197,
198,
199
]
},
{
"tb": 1968,
"tbk": 2,
"tl": 57,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
200,
201,
202,
203,
204,
205
]
},
{
"tb": 4194336,
"tbk": 3,
"tl": 76767,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
57,
58,
59,
60,
206,
207,
208
]
},
{
"tb": 32,
"tbk": 1,
"tl": 52,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
209,
210,
211,
212,
213,
214,
215,
216,
217
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2121,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
64,
65,
66,
67,
68,
69,
218,
219
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4257,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
220,
221,
222,
223,
224,
225,
226,
227
]
},
{
"tb": 8,
"tbk": 1,
"tl": 21,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
39,
40,
228,
229,
230,
231,
232,
233,
234,
235
]
},
{
"tb": 96,
"tbk": 1,
"tl": 10,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
112,
113,
114,
236,
178
]
},
{
"tb": 140800,
"tbk": 1,
"tl": 4919,
"mb": 140800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
57,
58,
59,
175,
237,
238,
118
]
},
{
"tb": 6600,
"tbk": 1,
"tl": 76078752,
"mb": 6600,
"mbk": 1,
"gb": 6600,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
239,
240,
241,
242,
243,
244,
245,
246
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1757665,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
72,
73,
74,
75,
76,
247,
248
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1757686,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
48,
49,
50,
120,
121,
122,
249,
250,
46
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
194,
251,
252,
253,
47,
145
]
},
{
"tb": 16,
"tbk": 1,
"tl": 75,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
254,
255,
256,
257,
258,
259,
260,
261,
47,
145
]
},
{
"tb": 16,
"tbk": 1,
"tl": 194605,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
48,
49,
50,
120,
121,
122,
249,
262,
263,
264,
265
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1562814,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
48,
49,
50,
51,
52,
53,
266,
267,
268
]
},
{
"tb": 8,
"tbk": 1,
"tl": 193884,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
39,
40,
269,
270,
271,
272,
273,
274,
275,
276,
47
]
},
{
"tb": 64,
"tbk": 1,
"tl": 7201,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
189,
190,
191,
192,
277
]
},
{
"tb": 3840,
"tbk": 16,
"tl": 2473,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
189,
190,
191,
278,
279
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 4340,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
280,
281,
282,
283,
284
]
},
{
"tb": 16,
"tbk": 1,
"tl": 558809,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
22,
285,
253,
47
]
},
{
"tb": 160,
"tbk": 1,
"tl": 7226,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
286,
287,
288,
289,
178
]
},
{
"tb": 96,
"tbk": 1,
"tl": 44,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
112,
113,
114,
290,
291
]
},
{
"tb": 256,
"tbk": 1,
"tl": 642,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
39,
40,
41,
42,
43,
292,
79,
293,
294
]
},
{
"tb": 48,
"tbk": 2,
"tl": 74,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
295,
296,
297,
298,
299,
300
]
},
{
"tb": 32,
"tbk": 1,
"tl": 9547,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
301,
302,
303,
304,
305,
306,
307,
308
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 74776,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
57,
58,
59,
60,
61,
62,
309
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 84654400,
"mb": 1024,
"mbk": 1,
"gb": 1024,
"gbk": 1,
"eb": 1024,
"ebk": 1,
"fs": [
310,
311,
312,
313,
314,
315,
316,
317,
318,
319,
320,
321,
322,
323,
324,
325,
326,
327,
328,
329,
330
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
72,
331,
332,
333,
334,
335,
336,
337,
338,
339,
340
]
},
{
"tb": 24,
"tbk": 1,
"tl": 118,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
341,
342,
267,
343,
344,
345
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1562820,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
301,
346,
347,
348,
349,
350,
351,
352,
267,
268
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 206962,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
64,
353,
354,
355,
356,
357,
358,
91
]
},
{
"tb": 4400,
"tbk": 1,
"tl": 2862,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
22,
359,
360,
361
]
},
{
"tb": 96,
"tbk": 1,
"tl": 27,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
112,
113,
114,
362,
363
]
},
{
"tb": 6072,
"tbk": 11,
"tl": 4393,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
92,
93,
94,
364,
365,
366
]
},
{
"tb": 96,
"tbk": 1,
"tl": 7208,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
367,
368,
369,
370,
345
]
},
{
"tb": 6848,
"tbk": 42,
"tl": 927,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
39,
40,
269,
270,
271,
272,
273,
274,
371,
79,
372
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 552,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
72,
73,
74,
75,
76,
373,
7
]
},
{
"tb": 13568,
"tbk": 32,
"tl": 87468,
"mb": 13568,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
64,
353,
354,
355,
374,
375,
117,
118
]
},
{
"tb": 8800,
"tbk": 1,
"tl": 33,
"mb": 8800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
57,
58,
59,
175,
376,
377,
178
]
},
{
"tb": 384,
"tbk": 2,
"tl": 73,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
378,
379,
380,
381,
382,
383,
384,
385,
386
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 6422355,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
80,
81,
82,
83,
84,
85,
387
]
},
{
"tb": 8800,
"tbk": 1,
"tl": 7185,
"mb": 8800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
48,
49,
50,
120,
121,
122,
388,
389,
390
]
},
{
"tb": 32,
"tbk": 1,
"tl": 6711,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
391,
291,
47,
145
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 1781496,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
80,
81,
82,
83,
84,
85,
392
]
},
{
"tb": 24,
"tbk": 1,
"tl": 8545674,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
393,
394,
395,
396,
397,
47,
145
]
},
{
"tb": 24,
"tbk": 1,
"tl": 8545680,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
398,
399,
400,
401,
402,
47,
145
]
},
{
"tb": 2976,
"tbk": 12,
"tl": 1296,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
39,
40,
403,
404,
405,
406,
407,
408,
409,
410
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2274,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
39,
40,
411,
412,
413,
414,
415,
416,
417,
418
]
},
{
"tb": 16320,
"tbk": 8,
"tl": 2058820,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
189,
190,
191,
419,
420
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 8743616,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
64,
353,
354,
355,
356,
421,
422,
423
]
},
{
"tb": 576,
"tbk": 4,
"tl": 1611,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
22,
424,
425,
426
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
72,
331,
332,
333,
334,
335,
336,
337,
338,
427,
340
]
},
{
"tb": 40,
"tbk": 1,
"tl": 68381727,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
428,
429,
430,
431,
432,
433,
434,
435,
436
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2843,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
437,
438,
439,
440,
441,
442,
443,
444,
445
]
},
{
"tb": 256,
"tbk": 4,
"tl": 130670,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
57,
58,
59,
60,
61,
62,
446
]
},
{
"tb": 424019,
"tbk": 7,
"tl": 9642,
"mb": 282118,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
447,
448,
449,
450,
451
]
},
{
"tb": 8801,
"tbk": 1,
"tl": 76,
"mb": 8801,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
72,
331,
332,
333,
334,
452,
453,
454,
455,
456,
457
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1562826,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
341,
342,
267,
268,
199,
47
]
},
{
"tb": 2348810240,
"tbk": 1,
"tl": 13373946,
"mb": 2348810240,
"mbk": 1,
"gb": 2348810240,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
458,
459,
460,
461,
462,
463,
464,
465
]
},
{
"tb": 32,
"tbk": 1,
"tl": 19,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
57,
58,
59,
175,
466,
377,
178
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 64441551,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
57,
58,
59,
60,
467,
468,
469
]
},
{
"tb": 16,
"tbk": 1,
"tl": 6,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
194,
195,
252,
253,
47,
145
]
},
{
"tb": 16,
"tbk": 1,
"tl": 84644777,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
470,
471,
472,
473,
474,
475,
476,
477
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2287,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
39,
40,
478,
479,
480,
481,
482,
483,
484,
485
]
},
{
"tb": 96,
"tbk": 1,
"tl": 12,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
486,
252,
253,
47,
145
]
},
{
"tb": 512,
"tbk": 1,
"tl": 22,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
48,
49,
50,
120,
121,
122,
487,
363,
345
]
},
{
"tb": 16128,
"tbk": 126,
"tl": 152,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
488,
489,
490,
491,
492,
493,
494,
495
]
},
{
"tb": 160,
"tbk": 1,
"tl": 7180,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
496,
497,
498,
499,
500,
501,
502,
503,
504
]
},
{
"tb": 4400,
"tbk": 1,
"tl": 285526,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
22,
505,
506,
507
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4680,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
508,
509,
510,
511,
118
]
},
{
"tb": 512,
"tbk": 1,
"tl": 17,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
57,
58,
59,
512,
513,
345,
29
]
},
{
"tb": 24,
"tbk": 1,
"tl": 76080604,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
165,
514,
515,
516,
517,
518,
519,
520,
521
]
},
{
"tb": 8800,
"tbk": 2,
"tl": 1253973,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
80,
81,
82,
83,
84,
85,
522
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2058806,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
189,
190,
191,
523,
420
]
},
{
"tb": 512,
"tbk": 1,
"tl": 29,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
57,
58,
59,
524,
513,
345,
29
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 84635376,
"mb": 2097152,
"mbk": 1,
"gb": 2097152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
57,
58,
59,
60,
61,
525,
526
]
},
{
"tb": 512,
"tbk": 1,
"tl": 195051,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
527,
528,
529,
530,
47
]
},
{
"tb": 9584640,
"tbk": 4,
"tl": 210683,
"mb": 9584640,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
57,
58,
59,
60,
531,
532,
91
]
},
{
"tb": 72,
"tbk": 1,
"tl": 16213,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
533,
111,
47,
145
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 3389,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
64,
534,
535,
536,
537,
538,
539,
540,
541
]
},
{
"tb": 32,
"tbk": 1,
"tl": 72,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
72,
331,
332,
333,
334,
452,
453,
454,
542,
456,
457
]
},
{
"tb": 1248,
"tbk": 12,
"tl": 313,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
39,
543,
544,
545,
546,
547,
548
]
},
{
"tb": 240,
"tbk": 2,
"tl": 1757670,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
549,
46,
47,
145
]
},
{
"tb": 16,
"tbk": 1,
"tl": 75,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
194,
251,
196,
550,
344,
345
]
},
{
"tb": 8,
"tbk": 1,
"tl": 75984337,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
551,
552,
553,
554,
555,
556,
557,
558,
559
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 323510,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
48,
49,
50,
51,
52,
53,
560,
561,
47
]
},
{
"tb": 144,
"tbk": 1,
"tl": 194617,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
562,
563,
564,
565,
263,
264,
265,
566,
276,
47
]
},
{
"tb": 2304,
"tbk": 12,
"tl": 4841,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
39,
132,
133,
134,
567,
568,
569
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 12140,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
72,
73,
570,
571,
572,
573,
574
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1757690,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
575,
576,
577,
578,
579,
580,
581,
582,
250,
46
]
},
{
"tb": 512,
"tbk": 1,
"tl": 16,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
57,
58,
59,
60,
206,
583,
363
]
},
{
"tb": 64,
"tbk": 1,
"tl": 7197,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
189,
190,
191,
584,
277
]
},
{
"tb": 32,
"tbk": 1,
"tl": 9486,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
64,
353,
354,
355,
374,
585,
586,
178
]
},
{
"tb": 1008,
"tbk": 4,
"tl": 4144,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
39,
40,
269,
270,
271,
587,
588,
589,
590,
591,
426
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 14172,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
72,
73,
570,
571,
572,
573,
592
]
},
{
"tb": 32,
"tbk": 2,
"tl": 1562964,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
593,
594,
595,
596,
597,
598,
599,
600
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 7137,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
280,
281,
282,
283,
601
]
},
{
"tb": 80,
"tbk": 1,
"tl": 6913,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
57,
58,
59,
602,
603,
345,
29
]
},
{
"tb": 4032,
"tbk": 4,
"tl": 24077,
"mb": 4032,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
64,
65,
66,
67,
68,
604,
605,
181
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 55317,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
48,
49,
50,
51,
52,
53,
606,
219,
47
]
},
{
"tb": 2928,
"tbk": 4,
"tl": 4023,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
106,
107,
108,
109,
110,
7,
607,
144
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2293,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
39,
40,
608,
609,
610,
611,
612,
613,
614,
615
]
},
{
"tb": 160,
"tbk": 1,
"tl": 9478,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
64,
353,
354,
355,
374,
616,
586,
178
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2629,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
617,
618,
619,
620,
621,
622,
623,
624
]
},
{
"tb": 320,
"tbk": 2,
"tl": 3125380,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
625,
626,
627,
628,
629
]
},
{
"tb": 96,
"tbk": 1,
"tl": 15246,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
72,
73,
630,
631,
632,
633,
634
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2305,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
39,
40,
635,
636,
637,
638,
639,
640,
641,
642
]
},
{
"tb": 48,
"tbk": 2,
"tl": 112,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
643,
296,
297,
298,
299,
300
]
},
{
"tb": 1152,
"tbk": 4,
"tl": 151,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
644,
645,
646,
647,
648
]
},
{
"tb": 976,
"tbk": 4,
"tl": 1286,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
39,
40,
41,
42,
43,
292,
79,
372,
649
]
},
{
"tb": 16,
"tbk": 1,
"tl": 84637481,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
650,
651,
652,
653,
654,
655,
656,
657,
658
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2661,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
659,
660,
661,
662,
663,
664,
665,
666,
667
]
},
{
"tb": 216,
"tbk": 1,
"tl": 9556,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
30,
668,
669,
670,
671,
672,
673,
674,
675
]
},
{
"tb": 16128,
"tbk": 126,
"tl": 162,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
57,
58,
59,
175,
676,
605,
181
]
},
{
"tb": 64,
"tbk": 1,
"tl": 163,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
189,
190,
191,
584,
193
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3390,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
106,
107,
108,
109,
116,
677,
678,
679
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 133909,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
57,
58,
59,
60,
680,
681,
682
]
},
{
"tb": 16128,
"tbk": 4,
"tl": 530,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
80,
81,
82,
83,
84,
85,
683
]
},
{
"tb": 96,
"tbk": 2,
"tl": 3440486,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
684,
685,
686,
687,
688,
689,
690,
691
]
},
{
"tb": 72,
"tbk": 3,
"tl": 583809,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
575,
576,
577,
578,
579,
580,
581,
582,
262,
263,
264,
265
]
},
{
"tb": 2281701376,
"tbk": 34,
"tl": 1165916063,
"mb": 2281701376,
"mbk": 34,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
458,
459,
460,
461,
462,
692,
693,
694
]
},
{
"tb": 6291456,
"tbk": 3,
"tl": 585600,
"mb": 6291456,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
48,
49,
50,
120,
121,
122,
170,
171,
172,
173,
695
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 189490,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
64,
353,
354,
355,
356,
421,
422,
696
]
},
{
"tb": 3328,
"tbk": 32,
"tl": 460,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
39,
543,
544,
545,
697,
698,
699
]
},
{
"tb": 2348810240,
"tbk": 1,
"tl": 3939672,
"mb": 2348810240,
"mbk": 1,
"gb": 2348810240,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
48,
49,
50,
120,
121,
122,
700,
701,
702
]
},
{
"tb": 32,
"tbk": 1,
"tl": 60,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
209,
703,
704,
705,
706,
707,
708,
709,
710
]
},
{
"tb": 3632,
"tbk": 18,
"tl": 90,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
39,
40,
269,
270,
271,
272,
273,
274,
711,
218,
219
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
72,
331,
332,
333,
334,
335,
336,
337,
338,
427,
712
]
},
{
"tb": 512,
"tbk": 1,
"tl": 5328,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
713,
714,
715,
716,
717,
718,
719,
720
]
},
{
"tb": 16128,
"tbk": 4,
"tl": 1629,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
80,
81,
82,
83,
84,
85,
721
]
},
{
"tb": 480,
"tbk": 4,
"tl": 221,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
72,
73,
74,
75,
76,
373,
218
]
},
{
"tb": 96,
"tbk": 1,
"tl": 84647064,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
722,
723,
724,
725,
726,
727,
728,
729,
730
]
},
{
"tb": 72,
"tbk": 3,
"tl": 63,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
731,
732,
733,
734,
735,
736,
737,
738,
739
]
},
{
"tb": 96,
"tbk": 1,
"tl": 22,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
486,
196,
550,
344,
345,
29
]
},
{
"tb": 24,
"tbk": 1,
"tl": 134,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
740,
741,
742,
743,
744,
745,
746,
747
]
},
{
"tb": 96,
"tbk": 1,
"tl": 33,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
486,
196,
197,
198,
199,
47
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3487771,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
748,
749,
750,
751,
752,
753
]
},
{
"tb": 16128,
"tbk": 4,
"tl": 617,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
57,
58,
59,
60,
206,
754,
425
]
},
{
"tb": 80,
"tbk": 1,
"tl": 84933941,
"mb": 80,
"mbk": 1,
"gb": 80,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
755,
756,
757,
758,
759,
760,
761,
762,
763
]
},
{
"tb": 2736,
"tbk": 6,
"tl": 2602,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
764,
765,
766,
767,
768,
769
]
},
{
"tb": 512,
"tbk": 1,
"tl": 14,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
57,
58,
59,
60,
206,
770,
513
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 867358,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
57,
58,
59,
60,
680,
771,
772
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 2837,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
64,
773,
774,
775,
776,
777,
778,
779,
780
]
},
{
"tb": 8800,
"tbk": 1,
"tl": 7234,
"mb": 8800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
48,
49,
50,
120,
121,
122,
123,
781,
178
]
},
{
"tb": 134217728,
"tbk": 2,
"tl": 8655986,
"mb": 67108864,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
80,
81,
82,
83,
84,
85,
782
]
},
{
"tb": 896,
"tbk": 6,
"tl": 9581,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
189,
190,
191,
783,
784
]
},
{
"tb": 96,
"tbk": 1,
"tl": 13,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
562,
785,
786,
787,
788,
789,
790,
791,
792
]
},
{
"tb": 4400,
"tbk": 1,
"tl": 2857,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
22,
793,
360,
361
]
},
{
"tb": 3632,
"tbk": 18,
"tl": 89,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
39,
40,
269,
270,
271,
272,
273,
274,
711,
70,
71
]
},
{
"tb": 48,
"tbk": 1,
"tl": 7565,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
794,
291,
47,
145
]
},
{
"tb": 128,
"tbk": 2,
"tl": 3125144,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
795,
796,
797,
798,
799
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 734243,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
57,
58,
59,
60,
800,
801,
802
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 84637451,
"mb": 524288,
"mbk": 1,
"gb": 524288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
57,
58,
59,
60,
61,
803,
804
]
},
{
"tb": 16,
"tbk": 1,
"tl": 77,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
194,
195,
196,
550,
344,
345
]
},
{
"tb": 24,
"tbk": 1,
"tl": 8545669,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
805,
806,
807,
808,
47,
145
]
},
{
"tb": 288358400,
"tbk": 275,
"tl": 19879710585,
"mb": 288358400,
"mbk": 275,
"gb": 288358400,
"gbk": 275,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
48,
49,
50,
120,
121,
122,
809,
810,
811
]
},
{
"tb": 512,
"tbk": 1,
"tl": 9,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
812,
813,
814,
815,
816,
817,
818,
819
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1933,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
72,
73,
74,
75,
76,
820,
634
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2281,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
39,
40,
821,
822,
823,
824,
825,
826,
827,
828
]
},
{
"tb": 224,
"tbk": 1,
"tl": 8231,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
829,
830,
831,
832,
181
]
},
{
"tb": 480,
"tbk": 4,
"tl": 6897,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
72,
73,
74,
75,
76,
833,
834
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
835,
836,
712,
29
]
},
{
"tb": 512,
"tbk": 1,
"tl": 975,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
57,
58,
59,
837,
363,
345,
29
]
},
{
"tb": 4032,
"tbk": 4,
"tl": 4009,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
64,
65,
66,
67,
68,
69,
7,
607
]
},
{
"tb": 72,
"tbk": 1,
"tl": 8645066,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
838,
839,
840,
841,
842,
843,
844,
845,
846
]
},
{
"tb": 8832,
"tbk": 3,
"tl": 7923132,
"mb": 8832,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
847,
848,
849,
850,
851,
852,
853,
854
]
},
{
"tb": 16,
"tbk": 1,
"tl": 109,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
194,
251,
196,
197,
198,
199
]
},
{
"tb": 2928,
"tbk": 4,
"tl": 23460,
"mb": 2928,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
106,
107,
108,
109,
116,
855,
605,
181
]
},
{
"tb": 2097152,
"tbk": 131072,
"tl": 87716,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
48,
49,
50,
120,
121,
122,
856,
857,
858
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1731,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
112,
113,
114,
859,
219
]
},
{
"tb": 1088,
"tbk": 2,
"tl": 32,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
860,
861,
862,
863,
864,
865
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 4475,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
57,
58,
59,
175,
237,
866,
678
]
},
{
"tb": 2400,
"tbk": 12,
"tl": 216,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
39,
867,
868,
869,
870,
871,
872
]
},
{
"tb": 72,
"tbk": 1,
"tl": 195385,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
873,
874,
875,
171,
172,
173,
695,
276,
47
]
},
{
"tb": 140832,
"tbk": 33,
"tl": 76943,
"mb": 140800,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
48,
49,
50,
120,
121,
122,
170,
171,
172,
173,
876
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 1781385,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
80,
81,
82,
83,
84,
85,
877
]
},
{
"tb": 140800,
"tbk": 1,
"tl": 15509,
"mb": 140800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
72,
331,
878,
879,
880,
881,
634,
71,
111
]
},
{
"tb": 2306867200,
"tbk": 524288,
"tl": 1571642,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
48,
49,
50,
51,
52,
53,
882,
883,
884
]
},
{
"tb": 48,
"tbk": 1,
"tl": 5463221,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
885,
886,
887,
888,
889,
890,
891,
892
]
},
{
"tb": 3632,
"tbk": 18,
"tl": 526,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
39,
40,
269,
270,
271,
272,
273,
274,
371,
79,
293
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2125,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
106,
107,
108,
109,
110,
218,
219,
47
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 4363429,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
64,
353,
354,
355,
356,
421,
422,
893
]
},
{
"tb": 96,
"tbk": 1,
"tl": 2058812,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
112,
113,
114,
894,
420
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2566592,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
254,
895,
896,
897,
898,
899,
900,
901,
902
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 322922,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
57,
58,
59,
60,
61,
62,
903
]
},
{
"tb": 576,
"tbk": 2,
"tl": 50,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
904,
905,
906,
907,
908,
909,
910,
911,
912
]
},
{
"tb": 48,
"tbk": 2,
"tl": 3515346,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
575,
576,
577,
578,
579,
580,
581,
582,
913,
914
]
},
{
"tb": 288358400,
"tbk": 275,
"tl": 2149872043,
"mb": 288358400,
"mbk": 275,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
48,
49,
50,
120,
121,
122,
170,
171,
172,
173,
915
]
},
{
"tb": 480,
"tbk": 4,
"tl": 223,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
72,
73,
74,
75,
76,
373,
70
]
},
{
"tb": 140800,
"tbk": 1,
"tl": 3376,
"mb": 140800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
57,
58,
59,
175,
237,
916,
118
]
},
{
"tb": 48,
"tbk": 2,
"tl": 3125390,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
575,
576,
577,
578,
579,
580,
581,
582,
917,
629
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 1763312,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
57,
58,
59,
60,
467,
468,
918
]
},
{
"tb": 140800,
"tbk": 1,
"tl": 15378,
"mb": 140800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
72,
331,
878,
879,
880,
919,
634,
71,
111
]
},
{
"tb": 102144,
"tbk": 224,
"tl": 63425,
"mb": 26448,
"mbk": 58,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
764,
765,
766,
920,
921,
922
]
},
{
"tb": 4194336,
"tbk": 3,
"tl": 77564,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
57,
58,
59,
60,
923,
208,
924
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1278,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
39,
40,
269,
270,
271,
587,
588,
589,
925,
426,
926
]
},
{
"tb": 8,
"tbk": 1,
"tl": 68381681,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
551,
927,
928,
929,
930,
931,
932,
933,
934
]
},
{
"tb": 23616,
"tbk": 120,
"tl": 686770,
"mb": 23616,
"mbk": 120,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
64,
353,
354,
355,
374,
375,
855,
605
]
},
{
"tb": 34807,
"tbk": 12,
"tl": 2579268,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
447,
448,
449,
450,
935
]
},
{
"tb": 107520,
"tbk": 418,
"tl": 230260,
"mb": 16128,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
64,
936,
937,
938,
939,
940,
941,
942,
943
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
72,
331,
332,
333,
334,
335,
336,
337,
338,
339,
712
]
},
{
"tb": 13568,
"tbk": 32,
"tl": 105970,
"mb": 13568,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
64,
353,
354,
355,
374,
375,
677,
678
]
},
{
"tb": 32,
"tbk": 1,
"tl": 6228836,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
72,
73,
74,
75,
76,
944,
47
]
},
{
"tb": 96,
"tbk": 1,
"tl": 2476,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
945,
946,
947,
948,
71
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 277331,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
48,
49,
50,
120,
121,
122,
123,
949,
291
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2480,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
873,
874,
875,
171,
172,
173,
876,
950,
71
]
},
{
"tb": 140800,
"tbk": 32,
"tl": 81493,
"mb": 140800,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
48,
49,
50,
51,
52,
53,
951,
952,
953
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
954,
955,
956,
957,
958,
959,
960,
961,
962,
178
]
},
{
"tb": 384,
"tbk": 1,
"tl": 1562710,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
963,
964,
965,
966,
967,
968,
969,
970,
971
]
},
{
"tb": 16128,
"tbk": 4,
"tl": 26601,
"mb": 16128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
57,
58,
59,
972,
605,
181,
178
]
},
{
"tb": 288358400,
"tbk": 275,
"tl": 23355399698,
"mb": 288358400,
"mbk": 275,
"gb": 288358400,
"gbk": 275,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
57,
58,
59,
60,
973,
974,
975
]
},
{
"tb": 32,
"tbk": 1,
"tl": 134,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
48,
49,
50,
120,
121,
122,
976,
977,
978
]
},
{
"tb": 48,
"tbk": 1,
"tl": 695149,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
22,
979,
24,
25
]
},
{
"tb": 24,
"tbk": 1,
"tl": 3487782,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
980,
981,
982,
983,
984,
985,
986,
987,
988
]
},
{
"tb": 2097152,
"tbk": 2,
"tl": 10923054,
"mb": 2097152,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
48,
49,
50,
51,
52,
53,
989,
990,
991
]
},
{
"tb": 16320,
"tbk": 8,
"tl": 6930,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
189,
190,
191,
419,
992
]
},
{
"tb": 16,
"tbk": 1,
"tl": 84934064,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
993,
994,
995,
996,
997,
998,
999,
1000
]
},
{
"tb": 512,
"tbk": 1,
"tl": 46,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
1001,
1002,
1003,
1004,
1005,
1006,
1007,
1008
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 46,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
57,
58,
59,
60,
61,
62,
1009
]
},
{
"tb": 864,
"tbk": 2,
"tl": 66156278,
"mb": 840,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
1010,
1011,
1012,
1013,
1014,
1015,
1016,
1017,
1018
]
},
{
"tb": 6600,
"tbk": 1,
"tl": 7863508,
"mb": 6600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
873,
874,
875,
171,
172,
173,
915,
1019,
1020
]
},
{
"tb": 8388608,
"tbk": 4,
"tl": 6665163,
"mb": 8388608,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
57,
58,
59,
60,
1021,
1022,
1023
]
},
{
"tb": 84480,
"tbk": 1633,
"tl": 2689810,
"mb": 16960,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
447,
1024,
1025,
1026,
1027,
1028,
1029
]
},
{
"tb": 16,
"tbk": 1,
"tl": 84647051,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
954,
955,
956,
957,
958,
959,
960,
961,
1030,
1031
]
},
{
"tb": 73880,
"tbk": 39,
"tl": 73968,
"mb": 36992,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
72,
73,
570,
571,
572,
573,
1032
]
},
{
"tb": 3632,
"tbk": 18,
"tl": 549,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
39,
40,
269,
270,
271,
272,
273,
274,
371,
79,
1033
]
},
{
"tb": 80,
"tbk": 1,
"tl": 1562557,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2868,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
1043,
1044,
1045,
1046,
1047,
1048,
1049,
1050,
1051
]
},
{
"tb": 96,
"tbk": 1,
"tl": 31,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
112,
113,
114,
1052,
363
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 4464860,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
64,
353,
354,
355,
356,
1053,
1054,
1055
]
},
{
"tb": 16128,
"tbk": 4,
"tl": 2440,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
458,
1056,
1057,
1058,
1059,
1060,
1061,
1062,
1063
]
},
{
"tb": 256,
"tbk": 1,
"tl": 11,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
39,
40,
269,
270,
271,
587,
588,
589,
1064,
144,
47
]
},
{
"tb": 96,
"tbk": 1,
"tl": 6922,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
112,
113,
114,
894,
992
]
},
{
"tb": 24,
"tbk": 1,
"tl": 194595,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
873,
874,
875,
171,
172,
173,
174,
276,
47
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2946,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
48,
49,
50,
51,
52,
53,
1065,
178,
29
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 13206,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
72,
331,
878,
879,
880,
1066,
1067,
219,
47
]
},
{
"tb": 32,
"tbk": 1,
"tl": 84637591,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
301,
302,
303,
304,
305,
306,
1068,
1069
]
},
{
"tb": 8,
"tbk": 1,
"tl": 715,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
39,
40,
1070,
1071,
1072,
1073,
1074,
1075,
1076,
1077
]
},
{
"tb": 256,
"tbk": 1,
"tl": 681,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
39,
40,
41,
42,
43,
292,
79,
1033,
1078
]
},
{
"tb": 32,
"tbk": 1,
"tl": 114,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
301,
346,
347,
348,
349,
350,
351,
352,
267,
343
]
},
{
"tb": 480,
"tbk": 4,
"tl": 9391,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
72,
73,
74,
75,
76,
833,
1079
]
},
{
"tb": 16128,
"tbk": 4,
"tl": 3109,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
458,
459,
460,
461,
1080,
607,
144,
47
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 12240686,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
64,
353,
354,
355,
356,
1081,
884,
1082
]
},
{
"tb": 64,
"tbk": 1,
"tl": 6918,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
189,
190,
191,
523,
992
]
},
{
"tb": 192,
"tbk": 1,
"tl": 7193,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1083,
1084,
1085,
1086,
345
]
},
{
"tb": 512,
"tbk": 1,
"tl": 970,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
57,
58,
59,
1087,
363,
345,
29
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
835,
836,
340,
131,
47,
145
]
},
{
"tb": 32704,
"tbk": 9,
"tl": 44,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
189,
190,
191,
1088,
1089
]
},
{
"tb": 24,
"tbk": 1,
"tl": 8,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
873,
874,
875,
171,
172,
173,
876,
1090,
131
]
},
{
"tb": 32,
"tbk": 1,
"tl": 125,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
1091,
1092,
1093,
1094,
1095
]
},
{
"tb": 256,
"tbk": 1,
"tl": 13,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
48,
49,
50,
120,
121,
122,
1096,
144,
47
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4264,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
57,
58,
59,
1097,
1098,
345,
29
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 395460,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
57,
58,
59,
60,
61,
62,
1099
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1272,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
48,
49,
50,
51,
52,
53,
1100,
426,
926
]
},
{
"tb": 16,
"tbk": 1,
"tl": 137,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
48,
49,
50,
120,
121,
122,
1101,
977,
978
]
},
{
"tb": 16,
"tbk": 1,
"tl": 109,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
48,
49,
50,
51,
52,
53,
266,
267,
343
]
},
{
"tb": 6848,
"tbk": 42,
"tl": 155,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
39,
40,
269,
270,
271,
272,
273,
274,
711,
7,
607
]
},
{
"tb": 8800,
"tbk": 2,
"tl": 1253983,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
80,
81,
82,
83,
84,
85,
1102
]
}
],
"ftbl": [
"[root]",
"0x593e7ccf8f79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x593e7ccf7709: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x593e7c9c4291: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x593e7c9c7a88: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x593e7ca8790b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x593e7c9690ea: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x593e7c96b3b0: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x593e7cac03a9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x593e7c9887ac: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593e7ca5a35f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca5a35f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca5a35f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca5a35f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa788d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa5885: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad2bcd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7ca39fd2: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:140:32)",
"0x593e7c9924dc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593e7ca10501: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca10501: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca10501: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x593e7ca94c70: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x593e7c91f5e4: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:156:33)",
"0x593e7c922e25: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:128:17)",
"0x593e7cb1dc5e: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x593e7cabf837: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x593e7c95be26: <winterfell::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (winterfell/src/main.rs:133:9)",
"0x593e7c901330: winter_verifier::verify (verifier/src/lib.rs:98:38)",
"0x593e7c95b81f: winterfell::main (winterfell/src/main.rs:71:11)",
"0x593e7c987d3c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593e7ca4d85f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca4d85f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca4d85f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca4d85f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa860d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa3275: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad1c0d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7c9e7ea3: winter_prover::Prover::generate_proof (prover/src/lib.rs:222:20)",
"0x593e7ccbba89: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x593e7ccbbbfa: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593e7ca5f636: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca5f636: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca5f636: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7c8f5a78: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x593e7c922be1: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:135:9)",
"0x593e7c9ec256: winter_prover::Prover::generate_proof (prover/src/lib.rs:417:21)",
"0x593e7c9fb2de: winter_prover::Prover::prove (prover/src/lib.rs:175:37)",
"0x593e7ca0fdf8: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca0fdf8: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca0fdf8: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x593e7ca1044b: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x593e7ca1044b: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x593e7ca1044b: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x593e7c971e82: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x593e7c971b1c: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x593e7c9eaaf2: winter_prover::Prover::generate_proof (prover/src/lib.rs:571:9)",
"0x593e7ca5f7c5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca5f7c5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca5f7c5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7c9c9ad7: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x593e7c963e1f: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x593e7cb33328: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x593e7c8d16e8: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:227:28)",
"0x593e7c985ddc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593e7c930c84: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7c930c84: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7c930c84: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x593e7ca94c46: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x593e7c968a3c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x593e7c90277b: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x593e7c9054b0: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x593e7cc84809: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x593e7cc832d9: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x593e7cb92830: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x593e7cb92a99: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x593e7cba2101: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x593e7c9ebe7b: winter_prover::Prover::generate_proof (prover/src/lib.rs:450:13)",
"0x593e7c93bc4b: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x593e7c96945d: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x593e7ccf6adc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x593e7ccf5d6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x593e7ccf5ae8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x593e7ccf5ae8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x593e7ccf5124: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x593e7ccf2d43: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x593e7ca2481f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x593e7c9a9501: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x593e7c9c79f8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x593e7ca853fe: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x593e7c96cc59: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x593e7c971bb6: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x593e7ca027fb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x593e7ca00a0d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x593e7cb74c1a: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x593e7cb6d54d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x593e7cb73a15: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x593e7cb6685e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x593e7ca5be5f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca5be5f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca5be5f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca5be5f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa7ebd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa3815: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad2aed: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7cb42c4a: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x593e7c991a5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593e7ca5f865: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca5f865: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca5f865: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7c968a9f: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x593e7c9eb207: winter_prover::Prover::generate_proof (prover/src/lib.rs:603:29)",
"0x593e7c9a7271: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x593e7c9c7a28: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x593e7ca8832e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x593e7c9ebe20: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:13)",
"0x593e7c939a4c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x593e7c934f66: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x593e7ca2bcfd: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x593e7ca31ac4: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x593e7ca95b75: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x593e7ca95b75: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x593e7ca95b75: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x593e7ca5d096: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x593e7c9e94c0: winter_prover::Prover::generate_proof (prover/src/lib.rs:452:35)",
"0x593e7c98631c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593e7c8deaea: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7c8deaea: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7c8deaea: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x593e7ca94c96: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x593e7c9754f8: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x593e7c9e7ef2: winter_prover::Prover::generate_proof (prover/src/lib.rs:233:27)",
"0x593e7ccbe62b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x593e7ccbdef1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x593e7ccb737b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x593e7ccb403e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x593e7ccb59dc: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x593e7ccb454a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x593e7ccaec59: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x593e7ccabc0c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593e7cca8da6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7cca8da6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7cca8da6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7c96fb58: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x593e7c9eb18c: winter_prover::Prover::generate_proof (prover/src/lib.rs:600:25)",
"0x593e7c95b279: winterfell::main (winterfell/src/main.rs:54:17)",
"0x593e7c994ecc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593e7ca5724f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca5724f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca5724f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca5724f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7ca9417b: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x593e7caa48c7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad255d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7c9e87e7: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:36)",
"0x593e7ca58d0f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca58d0f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca58d0f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca58d0f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa760d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa34e5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad233d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7c8f27f7: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x593e7c9772c3: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x593e7c96caeb: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x593e7c989a0c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593e7ca5f9a5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca5f9a5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca5f9a5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7c9e88f9: winter_prover::Prover::generate_proof (prover/src/lib.rs:309:32)",
"0x593e7ca5ed73: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x593e7ca95d15: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x593e7ca95d15: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x593e7ca95d15: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x593e7c8ef2c5: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x593e7ca0e475: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x593e7c980e3c: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x593e7ca31f27: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x593e7c90150b: winter_verifier::verify (verifier/src/lib.rs:109:19)",
"0x593e7ca2be63: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x593e7c9802a9: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x593e7ca320f4: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x593e7cac4f7c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:40:30)",
"0x593e7ccbe47b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x593e7ccbde41: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x593e7ccb753b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x593e7ccb1c31: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x593e7ccb22b7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x593e7ccc194b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x593e7c9bdfd1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x593e7c9c70c8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x593e7ca8566d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x593e7c9e7a32: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:512:13)",
"0x593e7c9746a2: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x593e7c961235: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x593e7c95c237: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:176:13)",
"0x593e7c9e4b62: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:371:13)",
"0x593e7c9d6acf: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:41:22)",
"0x593e7c921b39: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:36)",
"0x593e7c9ec1a5: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:21)",
"0x593e7ca01a7b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x593e7ca00e2d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x593e7cb7477a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x593e7cb4f299: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x593e7cab7bb8: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x593e7cab6185: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x593e7c9639ee: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x593e7c8f22ce: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x593e7c8efac4: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x593e7c98a48c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593e7ca494bf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca494bf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca494bf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca494bf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa80cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa53c7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad1a5d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7c9e7cc2: winter_prover::Prover::generate_proof (prover/src/lib.rs:210:38)",
"0x593e7ca03b81: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x593e7c9eb2fa: winter_prover::Prover::generate_proof (prover/src/lib.rs:608:34)",
"0x593e7ca59d1f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca59d1f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca59d1f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca59d1f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa755d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa4115: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad297d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7cb41d19: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x593e7ca42023: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca42023: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca42023: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca42023: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa899d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa5535: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad2fcd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7c9e86cb: winter_prover::Prover::generate_proof (prover/src/lib.rs:293:23)",
"0x593e7ca32e4f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x593e7c9fdeea: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x593e7c93531c: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x593e7ca55aaf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca55aaf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca55aaf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca55aaf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa8e6d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa5915: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad25cd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7c8d1788: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:228:23)",
"0x593e7c8f941f: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x593e7c8f7a15: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x593e7c8dc8f5: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x593e7c922973: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:33)",
"0x593e7c95c320: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:177:13)",
"0x593e7ca3a508: winter_prover::trace::Trace::validate (src/trace/mod.rs:123:26)",
"0x593e7c9ec568: winter_prover::Prover::generate_proof (prover/src/lib.rs:379:17)",
"0x593e7c98f2fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593e7ca5e318: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca5e318: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca5e318: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x593e7ca961f5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x593e7ca961f5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x593e7ca961f5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x593e7c9e9e93: winter_prover::Prover::generate_proof (prover/src/lib.rs:510:39)",
"0x593e7c8dc750: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x593e7ca95de5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x593e7ca95de5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x593e7ca95de5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x593e7c8e4cba: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x593e7c9e5000: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:354:9)",
"0x593e7c921a9c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:51:13)",
"0x593e7ccaf60c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ccaf60c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ccaf60c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x593e7ca962c9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x593e7ca962c9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x593e7ca962c9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x593e7c8ef314: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x593e7c9e8e13: winter_prover::Prover::generate_proof (prover/src/lib.rs:423:33)",
"0x593e7c8fc8e5: winter_verifier::perform_verification (verifier/src/lib.rs:185:13)",
"0x593e7cb36d84: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x593e7cb4294d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x593e7ccbc0e0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x593e7ccb0659: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x593e7ccafe41: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x593e7ccaf940: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x593e7c96fe14: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x593e7ca3a995: winter_prover::trace::Trace::validate (src/trace/mod.rs:179:13)",
"0x593e7c9c6a11: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x593e7c9c6df8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x593e7ca8941e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x593e7ca32ef7: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x593e7ca155b3: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x593e7c9ea01d: winter_prover::Prover::generate_proof (prover/src/lib.rs:524:9)",
"0x593e7c93a882: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x593e7ca30ce0: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x593e7c8fd7a8: winter_verifier::perform_verification (verifier/src/lib.rs:306:42)",
"0x593e7c8db4f5: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x593e7ca0854c: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x593e7cab6119: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x593e7ca07b26: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x593e7ca0b286: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x593e7c9e4bbf: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:369:9)",
"0x593e7c985b3c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593e7c9e44b4: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7c9e44b4: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7c9e44b4: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x593e7ca94be6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x593e7c95c09d: <winterfell::WorkAir as winter_air::air::Air>::new (winterfell/src/main.rs:151:23)",
"0x593e7c90203b: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:102:85)",
"0x593e7cadea5e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x593e7c8f3d08: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x593e7c8a9d82: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x593e7c8a9d82: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593e7c8a9d82: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7c8a9d82: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7c8a9d82: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7c8a9d82: std::io::buffered::bufwriter::BufWriter<W>::with_capacity (io/buffered/bufwriter.rs:115:33)",
"0x593e7c8a9d82: std::io::buffered::linewriter::LineWriter<W>::with_capacity (io/buffered/linewriter.rs:109:29)",
"0x593e7c8a9d82: std::io::buffered::linewriter::LineWriter<W>::new (io/buffered/linewriter.rs:89:9)",
"0x593e7c8a9d82: std::io::stdio::stdout::{{closure}} (src/io/stdio.rs:618:62)",
"0x593e7c8a9d82: std::sync::once_lock::OnceLock<T>::get_or_init::{{closure}} (src/sync/once_lock.rs:250:50)",
"0x593e7c8a9d82: std::sync::once_lock::OnceLock<T>::initialize::{{closure}} (src/sync/once_lock.rs:376:19)",
"0x593e7c8a9d82: std::sync::once::Once::call_once_force::{{closure}} (src/sync/once.rs:208:40)",
"0x593e7c8a9d82: std::sys_common::once::futex::Once::call (sys_common/once/futex.rs:124:21)",
"0x593e7c8a8eca: std::sync::once::Once::call_once_force (src/sync/once.rs:208:9)",
"0x593e7c8a8eca: std::sync::once_lock::OnceLock<T>::initialize (src/sync/once_lock.rs:375:9)",
"0x593e7cd131c5: std::sync::once_lock::OnceLock<T>::get_or_try_init (src/sync/once_lock.rs:298:9)",
"0x593e7cd131c5: std::sync::once_lock::OnceLock<T>::get_or_init (src/sync/once_lock.rs:250:15)",
"0x593e7cd131c5: std::io::stdio::stdout (src/io/stdio.rs:618:14)",
"0x593e7cd131c5: std::io::stdio::print_to (src/io/stdio.rs:1020:21)",
"0x593e7cd131c5: std::io::stdio::_print (src/io/stdio.rs:1097:5)",
"0x593e7c95b037: winterfell::main (winterfell/src/main.rs:36:5)",
"0x593e7cc8361a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593e7cc8631c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7cc8631c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7cc8631c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x593e7cc5568c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x593e7cc5568c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x593e7cc5568c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x593e7c8fa084: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x593e7c8f9dce: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x593e7c9752cb: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x593e7c8dbd37: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x593e7c8e4b7f: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x593e7cac4e06: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:26:25)",
"0x593e7c8fdfcc: winter_verifier::perform_verification (verifier/src/lib.rs:225:43)",
"0x593e7c9015da: winter_verifier::verify (verifier/src/lib.rs:111:21)",
"0x593e7c9e4002: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7c9e4002: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7c9e4002: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x593e7ca96af5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x593e7ca96af5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x593e7ca96af5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x593e7c8e4b95: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x593e7ca5fb85: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca5fb85: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca5fb85: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7c9c9a47: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x593e7cb30462: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x593e7c96c98f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x593e7ca2a1a0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x593e7c901038: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:216:32)",
"0x593e7cae0e4f: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x593e7c90b325: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x593e7c8fda15: winter_verifier::perform_verification (verifier/src/lib.rs:311:25)",
"0x593e7cb53c6d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x593e7cb56603: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x593e7c967227: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x593e7c9ada21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x593e7c9c7038: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x593e7ca8a54e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x593e7c8fe3b2: winter_verifier::perform_verification (verifier/src/lib.rs:179:9)",
"0x593e7c93aabb: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x593e7ca292c4: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x593e7c9692a7: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x593e7c930785: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x593e7c939cc7: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x593e7c8ddf63: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x593e7ca32c05: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x593e7c992f5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593e7ca5821b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca5821b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca5821b: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca5821b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x593e7caa8a9d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa5945: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7c9c915d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7ca09608: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x593e7c8f3a93: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x593e7ca39121: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x593e7ca0d843: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x593e7cac0822: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x593e7ca1549b: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x593e7ca150c2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x593e7c992cbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593e7ca5fc25: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca5fc25: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca5fc25: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7c9e887e: winter_prover::Prover::generate_proof (prover/src/lib.rs:307:44)",
"0x593e7c9939dc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593e7ca5fa45: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca5fa45: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca5fa45: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7c9e8867: winter_prover::Prover::generate_proof (prover/src/lib.rs:306:39)",
"0x593e7ccbe9d9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ccbe9d9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ccbe9d9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ccbe9d9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x593e7ccbee1e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7ccbede7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7ccbefbe: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7ccc14b9: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x593e7ca5104d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca5104d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca5104d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca5104d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa7dca: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa4dd4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad21ba: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7ca317db: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x593e7c9e63c4: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:541:17)",
"0x593e7c9741a6: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x593e7c968249: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x593e7c969729: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x593e7c924e5c: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x593e7ca24911: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x593e7cb42b63: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x593e7cb4b5d9: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x593e7c8f9d9a: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x593e7c98c3ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593e7ca4becf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca4becf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca4becf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca4becf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa887d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa40b5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad19cd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7c9f907b: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:648:34)",
"0x593e7c9931fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593e7ca4ce39: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca4ce39: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca4ce39: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca4ce39: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa792a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa47e4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad200a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7c8fcc5f: winter_verifier::perform_verification (verifier/src/lib.rs:218:40)",
"0x593e7c977212: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x593e7ccf7ea0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x593e7ccf80d9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x593e7ccf83d2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x593e7ccf9159: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x593e7ccaf00a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x593e7cbdf9d9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x593e7cbdf9d9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x593e7cbdf9d9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x593e7ca0008a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x593e7c8dea26: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x593e7ca32704: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x593e7c98c68c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593e7ca5fae5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca5fae5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca5fae5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7c9c9bf7: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x593e7c9279bd: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x593e7c923c90: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x593e7c926614: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x593e7c8de126: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x593e7c92730f: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x593e7c926506: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x593e7cac42e8: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:651:17)",
"0x593e7ca45ebf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca45ebf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca45ebf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca45ebf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa8d4d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa5d97: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad2ecd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7c95b0e3: winterfell::main (winterfell/src/main.rs:38:27)",
"0x593e7ca5a9cd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca5a9cd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca5a9cd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca5a9cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa7c6a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa4fe4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad285a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7ca3166b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x593e7c95c20b: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:175:9)",
"0x593e7c90a21f: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x593e7ca4a94f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca4a94f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca4a94f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca4a94f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa8a3d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa4e05: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad2f4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7cb4879f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x593e7c98a1ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593e7ca4c612: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca4c612: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca4c612: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca4c612: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x593e7caa7d9a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa3474: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cac08da: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7ca2fd57: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x593e7ca3954d: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:243:25)",
"0x593e7c95bd84: winterfell::build_do_work_trace (winterfell/src/main.rs:91:5)",
"0x593e7c9fb5fb: winterfell::main::{{closure}} (winterfell/src/main.rs:30:23)",
"0x593e7c9a4601: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x593e7c9c7278: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x593e7ca85bfb: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x593e7c9353c9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x593e7c90ecb7: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x593e7c8fdabc: winter_verifier::perform_verification (verifier/src/lib.rs:317:25)",
"0x593e7ca417e9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca417e9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca417e9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca417e9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa733a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa3394: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad312a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7c9f8f02: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:640:42)",
"0x593e7c8cf89d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x593e7c9e61a5: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:547:13)",
"0x593e7c90eca0: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x593e7c930428: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x593e7c9e8122: winter_prover::Prover::generate_proof (prover/src/lib.rs:262:22)",
"0x593e7c99fbf1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x593e7c9c73f8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x593e7ca89c44: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x593e7c9ec275: winter_prover::Prover::generate_proof (prover/src/lib.rs:418:17)",
"0x593e7c9cc17f: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x593e7c96c92d: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x593e7c90541d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x593e7ca50e84: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca50e84: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca50e84: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca50e84: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x593e7caa75ca: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa5eb4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad2c4a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7c93846e: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x593e7ca0009f: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x593e7ccbe2cb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x593e7ccbdfa1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x593e7ccb729b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x593e7ccb0e8d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x593e7ccbc41b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x593e7ccc01d3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x593e7c9228b2: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:28)",
"0x593e7cac52bb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:64:9)",
"0x593e7c98b43a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593e7ca40529: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca40529: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca40529: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca40529: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa7b6a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa5b04: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad343a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7c9e84da: winter_prover::Prover::generate_proof (prover/src/lib.rs:272:43)",
"0x593e7cb32b79: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x593e7c9ea6a8: winter_prover::Prover::generate_proof (prover/src/lib.rs:558:13)",
"0x593e7c98bc0c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593e7c8dc3e2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7c8dc3e2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7c8dc3e2: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x593e7c8ef24b: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x593e7ccb0e2d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x593e7ccbc738: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x593e7ccc0097: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x593e7cc816f0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x593e7cc81929: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x593e7cc81122: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x593e7c93a17c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x593e7c936eb4: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x593e7c98f05c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593e7ca0ff28: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca0ff28: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca0ff28: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x593e7ca967b5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x593e7ca967b5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x593e7ca967b5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x593e7c8dc8e2: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x593e7c90a3b7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x593e7c9e7968: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:517:13)",
"0x593e7ca3e987: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x593e7ca31960: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x593e7ccaf5bc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x593e7ccaf5bc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x593e7ccaf5bc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x593e7ccaf2b6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x593e7cb426ba: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x593e7c93231d: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x593e7ca530ef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca530ef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca530ef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca530ef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa743d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa3615: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad212d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7c8dbd28: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x593e7cb425dd: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x593e7cb4add9: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x593e7c8fd1ac: winter_verifier::perform_verification (verifier/src/lib.rs:275:24)",
"0x593e7c97cb2e: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x593e7c980030: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x593e7ca03da3: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x593e7c9700ad: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x593e7ca50b8d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca50b8d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca50b8d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca50b8d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa729a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa4384: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad2b4a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7ca315b3: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x593e7ca3eb40: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x593e7ca462df: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca462df: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca462df: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca462df: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa84bd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa4d05: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad17cd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7c9028d5: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x593e7c9c6031: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x593e7c9c7008: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x593e7ca858ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x593e7c9d8e8d: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:175:17)",
"0x593e7c9d733f: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:55:17)",
"0x593e7cbd40a2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x593e7cbd6d59: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x593e7cbde312: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x593e7c93265f: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x593e7c902845: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x593e7ca4eebd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca4eebd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca4eebd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca4eebd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa808a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa3534: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad272a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7ca314fb: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x593e7c8db388: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x593e7c9c1b11: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x593e7c9c7488: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x593e7ca8979e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x593e7c97ada7: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x593e7ca07b9e: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x593e7cb4277d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x593e7c99516c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593e7ca57edf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca57edf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca57edf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca57edf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa826d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa3c55: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cab49ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7c9e8023: winter_prover::Prover::generate_proof (prover/src/lib.rs:248:41)",
"0x593e7c98851a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593e7ca40939: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca40939: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca40939: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca40939: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa895a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa4864: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad2b7a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7c90540e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x593e7ca4358f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca4358f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca4358f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca4358f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7ca930c6: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x593e7caa5bb5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad32fd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7c9013a8: winter_verifier::verify (verifier/src/lib.rs:102:24)",
"0x593e7c97cd16: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x593e7c938547: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x593e7ca38397: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x593e7ca31d44: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x593e7c964eb7: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x593e7c975ff3: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x593e7c977200: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x593e7ca24bad: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x593e7ca40f7f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca40f7f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca40f7f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca40f7f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa805d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa3f65: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad178d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7c8f13a8: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x593e7c8ec237: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x593e7c923a29: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x593e7cae11c6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x593e7c8ef238: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x593e7c96c9a6: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x593e7ccb3f2e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x593e7ccb53f0: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x593e7ccb4be8: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x593e7c929081: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x593e7c927e86: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x593e7c9f911f: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:655:31)",
"0x593e7ca46b3f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca46b3f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca46b3f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca46b3f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7ca9202e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x593e7caa6025: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad309d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7c95b74b: winterfell::main (winterfell/src/main.rs:65:26)",
"0x593e7c968dac: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x593e7c9011dd: winter_verifier::verify (verifier/src/lib.rs:96:32)",
"0x593e7ca4fa2f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca4fa2f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca4fa2f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca4fa2f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa8b0d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa3ba7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad19ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7c90fdf7: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x593e7ca24892: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x593e7c98ce5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593e7ca47b19: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca47b19: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca47b19: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca47b19: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa7c9a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa6074: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad218a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7c97523b: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x593e7c98922c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593e7ca43bc9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca43bc9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca43bc9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca43bc9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa7ffa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa5c34: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad2c1a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7c8f14b2: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x593e7ca43399: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca43399: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca43399: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca43399: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa847a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa3fb4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad2a2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7c9e7d7f: winter_prover::Prover::generate_proof (prover/src/lib.rs:214:39)",
"0x593e7c9df74a: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x593e7cac3842: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:503:32)",
"0x593e7cae0db6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x593e7cafe92a: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x593e7cac8e17: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x593e7cad3a12: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x593e7ca24b5c: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x593e7c9865bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593e7ca49aef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca49aef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca49aef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca49aef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa749d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa4327: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad2e7d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7c95aedc: winterfell::main (winterfell/src/main.rs:28:26)",
"0x593e7ca0171b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x593e7ca00f8d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x593e7cb7468a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x593e7cb4f1d9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x593e7cab914b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x593e7c92f6eb: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x593e7c90eeb1: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x593e7c8f1eae: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x593e7c8f5a1c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x593e7ca4baf4: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca4baf4: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca4baf4: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca4baf4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x593e7caa8e9a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa4d54: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad30ca: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7c934e8d: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x593e7ca32cf1: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x593e7c8ec24c: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x593e7cac04d2: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x593e7c8f9c98: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x593e7ca3f4a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca3f4a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca3f4a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca3f4a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa78da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa44e4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad238a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7c9d5fd8: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:83:9)",
"0x593e7ca2a1be: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x593e7ca15337: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x593e7c9aa8c1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x593e7c9c7308: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x593e7ca8811d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x593e7c8f1af2: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x593e7cb1dab5: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x593e7cac0c4a: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x593e7cb34697: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x593e7ca17879: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x593e7cb324e9: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x593e7c93037b: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x593e7ca5f3b5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca5f3b5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca5f3b5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7c9e88bd: winter_prover::Prover::generate_proof (prover/src/lib.rs:308:37)",
"0x593e7c8d1a3f: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:230:34)",
"0x593e7cada016: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x593e7cb00397: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x593e7ca464ef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca464ef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca464ef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca464ef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa8d2d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa35e5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad320d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7c90eff2: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x593e7c932999: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x593e7ca4857d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca4857d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca4857d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca4857d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa7d6a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa3d24: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad22fa: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7ca31723: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x593e7c9b46c1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x593e7c9c77b8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x593e7ca8666e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x593e7c980206: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x593e7c9677cc: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x593e7c8fd4f7: winter_verifier::perform_verification (verifier/src/lib.rs:298:27)",
"0x593e7cb3013c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x593e7c8f9e0c: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x593e7c90a6df: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x593e7c991f9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593e7ca478cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca478cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca478cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca478cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7ca92b3e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x593e7caa5405: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad329d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7c9044f7: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x593e7ca52abf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca52abf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca52abf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca52abf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa7a4d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa4c35: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad2e3d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7c8d11cf: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:283:9)",
"0x593e7c97ce25: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x593e7c8e4106: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x593e7c920ac9: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:290:18)",
"0x593e7c91f88e: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:173:30)",
"0x593e7ca03dba: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x593e7ca0306b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x593e7ca0027d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x593e7cb742da: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x593e7cb4eff9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x593e7cab8a65: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x593e7c92f598: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x593e7c938356: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x593e7ccbe11b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x593e7ccbe051: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x593e7ccb745b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x593e7ccb1b61: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x593e7ccb22f7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x593e7ccc18fb: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x593e7ca5ea12: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca5ea12: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca5ea12: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x593e7ca5d0d6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x593e7ca150e5: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x593e7cbdaf26: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7cbdaf26: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7cbdaf26: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7c93207a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x593e7c9259d6: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x593e7c924e23: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x593e7c9f96de: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:669:26)",
"0x593e7ca4317f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca4317f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca4317f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca4317f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa7cbd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa4cc7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad24fd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7cac7a90: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x593e7c924572: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x593e7c9e6340: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:543:13)",
"0x593e7ca42b49: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca42b49: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca42b49: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca42b49: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa76aa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa5994: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad1eda: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7c9e9e7c: winter_prover::Prover::generate_proof (prover/src/lib.rs:505:52)",
"0x593e7cb32b8b: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x593e7c98976c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593e7ca4dbe2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca4dbe2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca4dbe2: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca4dbe2: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x593e7caa8b6d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa3c25: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad18bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7ca07a5a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x593e7c9d6018: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:83:31)",
"0x593e7cadc79f: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x593e7c8d48cd: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x593e7c934b8e: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x593e7c9d8d4a: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:170:36)",
"0x593e7c9faabc: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:701:36)",
"0x593e7c932517: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x593e7cb61f6b: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x593e7cb6c199: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x593e7cb66406: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x593e7c8f21bf: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x593e7c8f3f9d: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x593e7cb41d8d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x593e7c8fdc03: winter_verifier::perform_verification (verifier/src/lib.rs:323:5)",
"0x593e7ca594e9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca594e9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca594e9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca594e9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa79ca: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa4bb4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad1eaa: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7c9f8fbf: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:644:36)",
"0x593e7c8dd32d: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x593e7ca4468a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca4468a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca4468a: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca4468a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x593e7caa74bd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa5a0a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cb2ff3d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7c969233: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x593e7c9ebe60: winter_prover::Prover::generate_proof (prover/src/lib.rs:449:13)",
"0x593e7c9bcc11: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x593e7c9c6dc8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x593e7ca8869e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x593e7c9028ec: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x593e7ca14cae: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x593e7c9026db: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x593e7c902f56: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x593e7cadfea6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x593e7cb04fad: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x593e7ccf79ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593e7ccf904c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ccf904c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ccf904c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x593e7ccf6c7c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x593e7ccf6c7c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x593e7ccf6c7c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x593e7ccf2ece: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x593e7ca31360: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x593e7c986d8c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593e7ca4fe4f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca4fe4f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca4fe4f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca4fe4f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa73bd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa4e77: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad1e7d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7c9d6bbd: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:51:26)",
"0x593e7c97cb6f: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x593e7ca3a1a0: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:140:51)",
"0x593e7cadb466: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x593e7c8d9fc1: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x593e7cae4d75: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x593e7cae4e06: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x593e7c8fdedf: winter_verifier::perform_verification (verifier/src/lib.rs:228:13)",
"0x593e7c91f58a: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:155:31)",
"0x593e7c98b6cc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593e7ca4d43f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca4d43f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca4d43f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca4d43f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa803d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa2f65: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad340d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7c9e9dbf: winter_prover::Prover::generate_proof (prover/src/lib.rs:501:51)",
"0x593e7cac7afa: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x593e7cade798: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x593e7c963104: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x593e7c8fcfc9: winter_verifier::perform_verification (verifier/src/lib.rs:266:61)",
"0x593e7ca45ab3: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca45ab3: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca45ab3: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca45ab3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa7bc4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa428a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad2644: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7c95ad51: winterfell::main (winterfell/src/main.rs:22:32)",
"0x593e7ca4b3af: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca4b3af: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca4b3af: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca4b3af: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa86bd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa5e35: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad251d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7c90a4ab: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x593e7c971d42: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x593e7c98db6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593e7ca4718f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca4718f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca4718f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca4718f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa853d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa5345: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad2dcd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7c9231b1: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x593e7c8d3036: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x593e7cac3c38: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:300:57)",
"0x593e7c8f1440: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x593e7cad9da6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x593e7c8d9b11: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x593e7ccf8108: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x593e7ccf84ca: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x593e7ccf84ca: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x593e7ccf826e: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x593e7ccf826e: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x593e7ccf835d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x593e7c8fa29f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x593e7c975de3: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x593e7c97c3a5: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x593e7ca3049c: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x593e7c98e0ac: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593e7ca3f69f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca3f69f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca3f69f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca3f69f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7ca946f5: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x593e7caa54fa: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad1b2d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7c8f8891: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x593e7c98702c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x593e7ca498f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca498f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca498f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca498f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa8e2a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa4924: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad1a1a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7c8fcba2: winter_verifier::perform_verification (verifier/src/lib.rs:214:41)",
"0x593e7c90b2d7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x593e7c9244bd: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x593e7c9faea8: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:716:26)",
"0x593e7c9e9921: winter_prover::Prover::generate_proof (prover/src/lib.rs:482:37)",
"0x593e7ca426ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca426ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca426ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca426ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa726d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa5a45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad189d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7cb42ab4: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x593e7c96fbfe: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x593e7ca3275e: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x593e7c936dac: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x593e7ca03d3a: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x593e7cac3f26: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:226:17)",
"0x593e7cade18e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x593e7ca563fd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x593e7ca563fd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x593e7ca563fd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x593e7ca563fd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x593e7caa7e3a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x593e7caa56d4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x593e7cad1d0a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x593e7ca2bb91: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x593e7c8fd636: winter_verifier::perform_verification (verifier/src/lib.rs:305:9)",
"0x593e7c9738c8: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x593e7c96b489: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x593e7c924d9a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x593e7c9e8501: winter_prover::Prover::generate_proof (prover/src/lib.rs:274:13)",
"0x593e7c9ab791: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x593e7c9c70f8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x593e7ca87d9e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x593e7c8fe1eb: winter_verifier::perform_verification (verifier/src/lib.rs:184:9)",
"0x593e7c90a6fe: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x593e7c8dd461: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x593e7c97402f: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x593e7c9752e2: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x593e7cac2798: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:216:31)",
"0x593e7cae0d26: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x593e7cafebc0: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x593e7caccf56: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x593e7cad48e6: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x593e7c96fc19: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x593e7c9077be: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x593e7c8fdb34: winter_verifier::perform_verification (verifier/src/lib.rs:319:28)",
"0x593e7c8f5adb: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x593e7cb41df4: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x593e7cae4d62: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x593e7c8cf88c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)"
]
}