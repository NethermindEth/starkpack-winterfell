{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell",
"pid": 21217,
"tg": 45747571,
"te": 50733060,
"pps": [
{
"tb": 192,
"tbk": 1,
"tl": 69167,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7
]
},
{
"tb": 9011200,
"tbk": 32,
"tl": 605464,
"mb": 9011200,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
16,
17,
18
]
},
{
"tb": 496,
"tbk": 2,
"tl": 1763,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29
]
},
{
"tb": 512,
"tbk": 1,
"tl": 11,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
30,
31,
32,
33,
34,
35,
36,
37
]
},
{
"tb": 2228215,
"tbk": 18,
"tl": 1833701,
"mb": 1114112,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
38,
39,
40,
41,
42
]
},
{
"tb": 48,
"tbk": 2,
"tl": 74,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
45,
46,
47,
48,
49
]
},
{
"tb": 8,
"tbk": 1,
"tl": 31872,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
50,
51,
52,
53,
54,
55,
56,
57
]
},
{
"tb": 64,
"tbk": 1,
"tl": 69172,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
58,
59,
60,
61,
62
]
},
{
"tb": 36864,
"tbk": 2,
"tl": 5381,
"mb": 36864,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
63,
64,
65,
66,
67,
68,
69,
70
]
},
{
"tb": 45144,
"tbk": 99,
"tl": 17876,
"mb": 15504,
"mbk": 34,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
71,
72,
73,
74,
75,
76
]
},
{
"tb": 128,
"tbk": 1,
"tl": 71878,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
77,
78,
79,
80,
81
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 15382,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
82,
83,
84,
85,
86,
87,
88
]
},
{
"tb": 256,
"tbk": 1,
"tl": 398,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
89,
90,
91,
92,
93,
94,
95
]
},
{
"tb": 768,
"tbk": 1,
"tl": 18441,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
96,
97,
98,
99,
100,
101,
102,
103,
104,
105
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
106,
107,
108,
109,
110,
111,
112,
113,
114,
115,
116
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1863,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
82,
83,
84,
117,
118,
7,
119
]
},
{
"tb": 7936,
"tbk": 2,
"tl": 798,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
120,
121,
122,
123,
124,
125,
126
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 141,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
127,
128,
129,
130,
131,
132,
133,
134,
135,
136
]
},
{
"tb": 96,
"tbk": 1,
"tl": 36,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
137,
138,
139,
140,
141,
142
]
},
{
"tb": 96,
"tbk": 1,
"tl": 33,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
143,
144,
145,
146,
147
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 3480583,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
120,
121,
122,
123,
124,
125,
148
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1789835,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
149,
150,
151,
152,
153,
154,
155,
156,
157
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 1740514,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
120,
121,
122,
123,
124,
125,
158
]
},
{
"tb": 1920,
"tbk": 8,
"tl": 1181,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
58,
59,
60,
159,
160
]
},
{
"tb": 37952,
"tbk": 672,
"tl": 2061652,
"mb": 8768,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
38,
161,
162,
163,
164,
165,
166
]
},
{
"tb": 2097152,
"tbk": 2048,
"tl": 7725,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
167,
168,
169,
170,
171,
172
]
},
{
"tb": 32,
"tbk": 1,
"tl": 103041,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
63,
64,
65,
66,
173,
174,
175,
176
]
},
{
"tb": 96,
"tbk": 1,
"tl": 103032,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
63,
64,
65,
66,
173,
177,
175,
176
]
},
{
"tb": 65568,
"tbk": 3,
"tl": 1153,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
82,
83,
84,
85,
178,
179,
180
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
181,
182,
116,
183,
142,
184
]
},
{
"tb": 1984,
"tbk": 2,
"tl": 1129,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
63,
185,
186,
187,
188,
189,
190,
191
]
},
{
"tb": 1984,
"tbk": 2,
"tl": 139545,
"mb": 1984,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
63,
185,
186,
187,
188,
192,
193,
194
]
},
{
"tb": 832,
"tbk": 8,
"tl": 232,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
195,
196,
197,
198,
199,
200
]
},
{
"tb": 72,
"tbk": 1,
"tl": 63826,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
201,
202,
142,
184
]
},
{
"tb": 512,
"tbk": 1,
"tl": 999,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
203,
29,
204
]
},
{
"tb": 1048512,
"tbk": 14,
"tl": 64476,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
58,
59,
60,
205,
206
]
},
{
"tb": 80,
"tbk": 1,
"tl": 50628078,
"mb": 80,
"mbk": 1,
"gb": 80,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
207,
208,
209,
210,
211,
212,
213,
214,
215
]
},
{
"tb": 48,
"tbk": 1,
"tl": 87397,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
216,
217,
218,
219,
220,
221,
222
]
},
{
"tb": 56,
"tbk": 1,
"tl": 7522,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
223,
224,
176,
119
]
},
{
"tb": 8,
"tbk": 1,
"tl": 33837,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
225,
226,
227,
228,
229,
230,
231,
232
]
},
{
"tb": 288,
"tbk": 2,
"tl": 789,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
216,
217,
218,
219,
233,
234,
29
]
},
{
"tb": 17382,
"tbk": 10,
"tl": 43588,
"mb": 8704,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
106,
235,
236,
237,
238,
239,
240
]
},
{
"tb": 7936,
"tbk": 62,
"tl": 52,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
241,
242,
243,
244,
245,
246,
247,
248
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 950,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
143,
144,
145,
249,
250
]
},
{
"tb": 512,
"tbk": 1,
"tl": 3050,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
251,
252,
253,
254,
142
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 44118,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
106,
107,
255,
256,
257,
258,
259,
250,
142
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 751444,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
216,
217,
218,
219,
260,
261,
142
]
},
{
"tb": 32,
"tbk": 1,
"tl": 57,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
82,
83,
84,
262,
263,
264,
176
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 8529,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
82,
83,
84,
85,
265,
266,
267
]
},
{
"tb": 24,
"tbk": 1,
"tl": 45491414,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
268,
269,
270,
271,
272,
273,
274,
275,
276
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 169,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
167,
168,
169,
277,
278,
279
]
},
{
"tb": 16,
"tbk": 1,
"tl": 50629816,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
280,
281,
282,
283,
284,
285,
286,
287
]
},
{
"tb": 32,
"tbk": 1,
"tl": 166,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
167,
168,
169,
288,
278,
279
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1006,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
25,
26,
289,
29,
204
]
},
{
"tb": 480,
"tbk": 4,
"tl": 148,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
106,
235,
290,
291,
292,
293,
294
]
},
{
"tb": 288358400,
"tbk": 17600,
"tl": 890142314063,
"mb": 288358400,
"mbk": 17600,
"gb": 288358400,
"gbk": 17600,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
82,
83,
84,
85,
295,
296,
297
]
},
{
"tb": 96,
"tbk": 1,
"tl": 23,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
137,
138,
298,
299,
7,
119
]
},
{
"tb": 128,
"tbk": 1,
"tl": 1853,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
300,
301,
302,
303,
304,
305,
306,
307
]
},
{
"tb": 9011200,
"tbk": 1,
"tl": 39396,
"mb": 9011200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
82,
83,
84,
262,
308,
309,
81
]
},
{
"tb": 16,
"tbk": 1,
"tl": 6,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
310,
311,
312,
261,
142,
184
]
},
{
"tb": 27034835,
"tbk": 7,
"tl": 103282,
"mb": 18022790,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
38,
39,
40,
41,
313
]
},
{
"tb": 24,
"tbk": 1,
"tl": 147,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
314,
315,
135,
136,
299,
7
]
},
{
"tb": 16,
"tbk": 1,
"tl": 50212420,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
316,
317,
318,
319,
320,
321,
322,
323
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
324,
325,
119
]
},
{
"tb": 16,
"tbk": 1,
"tl": 50204268,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
326,
327,
328,
329,
330,
331,
332,
333,
334
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 473895,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
127,
128,
129,
130,
131,
132,
133,
134,
135,
335
]
},
{
"tb": 216,
"tbk": 1,
"tl": 103114,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
336,
337,
338,
339,
340,
341,
342,
343,
344
]
},
{
"tb": 512,
"tbk": 1,
"tl": 58,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
345,
346,
347,
348,
349,
350,
351,
352
]
},
{
"tb": 96,
"tbk": 1,
"tl": 12,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
143,
144,
145,
353,
354
]
},
{
"tb": 2496,
"tbk": 24,
"tl": 371,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
195,
196,
197,
355,
356,
357
]
},
{
"tb": 563200,
"tbk": 1,
"tl": 69268,
"mb": 563200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
167,
168,
169,
358,
359,
176
]
},
{
"tb": 1152,
"tbk": 4,
"tl": 148,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
360,
361,
362,
363,
364
]
},
{
"tb": 256,
"tbk": 1,
"tl": 414,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
89,
90,
91,
92,
93,
365,
366
]
},
{
"tb": 32768,
"tbk": 2,
"tl": 6899822,
"mb": 32768,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
367,
368,
369
]
},
{
"tb": 2048,
"tbk": 6,
"tl": 946876,
"mb": 1088,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
370,
371,
372,
373,
374
]
},
{
"tb": 16,
"tbk": 1,
"tl": 111,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
310,
311,
138,
139,
140,
141
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 87392,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
216,
217,
218,
219,
375,
221,
222
]
},
{
"tb": 24,
"tbk": 1,
"tl": 4709603,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
376,
377,
378,
379,
380,
142,
184
]
},
{
"tb": 40,
"tbk": 1,
"tl": 40443510,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
381,
382,
383,
384,
385,
386,
387,
388,
389
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 3465576,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
63,
64,
65,
66,
67,
390,
391,
392
]
},
{
"tb": 72,
"tbk": 3,
"tl": 66,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
393,
394,
395,
396,
397,
398,
399,
400,
401
]
},
{
"tb": 1928,
"tbk": 15,
"tl": 34,
"mb": 248,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
402,
403,
404,
405,
190,
191
]
},
{
"tb": 2080,
"tbk": 12,
"tl": 299,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
402,
403,
404,
406,
93,
94
]
},
{
"tb": 422400,
"tbk": 1,
"tl": 50628044,
"mb": 422400,
"mbk": 1,
"gb": 422400,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
96,
407,
408,
409,
410,
411,
412,
413,
414
]
},
{
"tb": 896,
"tbk": 6,
"tl": 103136,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
58,
59,
60,
415,
416
]
},
{
"tb": 960,
"tbk": 8,
"tl": 1297,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
417,
418,
419,
420,
421
]
},
{
"tb": 7360,
"tbk": 32,
"tl": 253524,
"mb": 7360,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
63,
64,
65,
66,
173,
422,
423,
424
]
},
{
"tb": 16,
"tbk": 1,
"tl": 109,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
310,
425,
138,
139,
140,
141
]
},
{
"tb": 2306867200,
"tbk": 1,
"tl": 1073362,
"mb": 2306867200,
"mbk": 1,
"gb": 2306867200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
167,
168,
169,
426,
427,
428
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
106,
107,
108,
109,
110,
111,
112,
113,
114,
115,
429
]
},
{
"tb": 72,
"tbk": 1,
"tl": 3073,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
96,
97,
98,
99,
100,
101,
102,
430,
431,
142
]
},
{
"tb": 216,
"tbk": 1,
"tl": 50204424,
"mb": 216,
"mbk": 1,
"gb": 216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
336,
432,
433,
434,
435,
436,
437,
438,
439
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 473887,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
440,
135,
335
]
},
{
"tb": 1984,
"tbk": 5,
"tl": 184,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
58,
59,
60,
441,
442
]
},
{
"tb": 7936,
"tbk": 2,
"tl": 1163,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
443,
444,
445,
446,
447,
448,
449,
450,
451
]
},
{
"tb": 563232,
"tbk": 3,
"tl": 7759714,
"mb": 563232,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
452,
453,
454,
455,
456,
457,
458,
459
]
},
{
"tb": 48,
"tbk": 1,
"tl": 50246160,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
460,
461,
462,
463,
464,
465,
183,
142
]
},
{
"tb": 8,
"tbk": 1,
"tl": 45334448,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
466,
467,
468,
469,
470,
471,
472,
473,
474
]
},
{
"tb": 2306867200,
"tbk": 1,
"tl": 7112490,
"mb": 2306867200,
"mbk": 1,
"gb": 2306867200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
443,
475,
476,
477,
478,
479,
480,
481
]
},
{
"tb": 2306867200,
"tbk": 2200,
"tl": 44452590592,
"mb": 2306867200,
"mbk": 2200,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
443,
475,
476,
477,
478,
482,
483,
484
]
},
{
"tb": 98304,
"tbk": 3,
"tl": 9185,
"mb": 98304,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
167,
168,
169,
485,
100,
101,
102,
430
]
},
{
"tb": 480,
"tbk": 4,
"tl": 64169,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
106,
235,
290,
291,
292,
486,
487
]
},
{
"tb": 8,
"tbk": 1,
"tl": 33850,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
488,
489,
490,
491,
492,
493,
494,
495
]
},
{
"tb": 36864,
"tbk": 2,
"tl": 5655,
"mb": 36864,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
63,
64,
65,
66,
67,
496,
497,
498
]
},
{
"tb": 16,
"tbk": 1,
"tl": 81,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
310,
425,
138,
298,
299,
7
]
},
{
"tb": 48,
"tbk": 2,
"tl": 947543,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
499,
500,
501,
502,
503,
504,
505,
506,
507,
508
]
},
{
"tb": 80,
"tbk": 1,
"tl": 473422,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
509,
510,
511,
512,
513,
514,
515,
516,
517
]
},
{
"tb": 128,
"tbk": 2,
"tl": 1960,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
82,
83,
84,
85,
518,
519,
520
]
},
{
"tb": 9011200,
"tbk": 1,
"tl": 86602,
"mb": 9011200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
82,
83,
84,
262,
308,
521,
81
]
},
{
"tb": 563201,
"tbk": 1,
"tl": 1150,
"mb": 563201,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
106,
107,
108,
109,
110,
522,
523,
524,
525,
526,
527
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 379252,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
82,
83,
84,
85,
518,
519,
528
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1265,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
529,
530,
531,
532,
533,
294,
250,
142
]
},
{
"tb": 256,
"tbk": 1,
"tl": 9,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
167,
168,
169,
534,
535,
142
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 15611,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
167,
168,
169,
358,
536,
354
]
},
{
"tb": 8,
"tbk": 1,
"tl": 33831,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
537,
538,
539,
540,
541,
542,
543,
544
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 3483640,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
120,
121,
122,
123,
124,
125,
545
]
},
{
"tb": 96,
"tbk": 1,
"tl": 11,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
143,
144,
145,
546,
176
]
},
{
"tb": 2097152,
"tbk": 64,
"tl": 182660,
"mb": 2097152,
"mbk": 64,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
167,
168,
169,
485,
100,
101,
102,
547
]
},
{
"tb": 256,
"tbk": 1,
"tl": 22140,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
548,
549,
550
]
},
{
"tb": 1928,
"tbk": 15,
"tl": 229,
"mb": 248,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
402,
403,
404,
406,
93,
551
]
},
{
"tb": 9011200,
"tbk": 1,
"tl": 61687,
"mb": 9011200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
106,
107,
255,
256,
257,
552,
553,
105,
202
]
},
{
"tb": 24,
"tbk": 1,
"tl": 473900,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
314,
315,
135,
335,
141,
142
]
},
{
"tb": 768,
"tbk": 1,
"tl": 7995,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
529,
530,
531,
532,
554,
423,
424,
555
]
},
{
"tb": 16,
"tbk": 1,
"tl": 476765,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
167,
168,
169,
556,
557,
558
]
},
{
"tb": 768,
"tbk": 1,
"tl": 19392,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
96,
559,
560,
561,
562,
563,
564,
565,
566
]
},
{
"tb": 563200,
"tbk": 2,
"tl": 838914,
"mb": 281600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
120,
121,
122,
123,
124,
125,
567
]
},
{
"tb": 7936,
"tbk": 2,
"tl": 776,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
443,
475,
476,
477,
568,
191,
535,
142
]
},
{
"tb": 8,
"tbk": 1,
"tl": 33860,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
569,
570,
571,
572,
573,
574,
575,
576
]
},
{
"tb": 24,
"tbk": 1,
"tl": 3418613,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
577,
578,
579,
580,
581,
582,
583,
584,
585
]
},
{
"tb": 768,
"tbk": 1,
"tl": 17545,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
529,
530,
531,
532,
533,
586,
105,
202
]
},
{
"tb": 144,
"tbk": 1,
"tl": 3051,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
587,
588,
589,
590,
591,
592,
593,
594,
431,
142
]
},
{
"tb": 24,
"tbk": 1,
"tl": 166,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
96,
595,
596,
597,
598,
599,
600,
601,
602
]
},
{
"tb": 4608,
"tbk": 24,
"tl": 7388,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
603,
604,
605,
606,
607,
608
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 758,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
82,
83,
84,
85,
518,
519,
609
]
},
{
"tb": 1984,
"tbk": 5,
"tl": 69184,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
58,
59,
60,
441,
62
]
},
{
"tb": 48,
"tbk": 1,
"tl": 4835252,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
610,
611,
612,
613,
614,
615,
616,
617,
618
]
},
{
"tb": 1824,
"tbk": 4,
"tl": 1189,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
71,
72,
73,
619,
620,
621
]
},
{
"tb": 2080,
"tbk": 12,
"tl": 304,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
402,
403,
404,
406,
93,
365
]
},
{
"tb": 512,
"tbk": 1,
"tl": 61157,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
82,
83,
84,
622,
147,
7,
119
]
},
{
"tb": 96,
"tbk": 1,
"tl": 11,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
137,
312,
261,
142,
184
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
623,
624,
625,
626,
627,
628,
629,
630,
631,
176
]
},
{
"tb": 72,
"tbk": 3,
"tl": 9118,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
499,
500,
501,
502,
503,
504,
505,
506,
632,
591,
592,
593
]
},
{
"tb": 160,
"tbk": 1,
"tl": 69135,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
633,
634,
635,
636,
637,
638,
639,
640,
641
]
},
{
"tb": 7936,
"tbk": 2,
"tl": 305,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
82,
83,
84,
85,
178,
642,
234
]
},
{
"tb": 563200,
"tbk": 2,
"tl": 838883,
"mb": 281600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
120,
121,
122,
123,
124,
125,
643
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1098,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
106,
107,
108,
109,
110,
522,
523,
524,
644,
526,
527
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 3549,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
82,
83,
84,
85,
518,
519,
645
]
},
{
"tb": 24,
"tbk": 1,
"tl": 4709598,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
96,
646,
647,
648,
649,
142,
184
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1261,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
63,
185,
186,
187,
188,
189,
294,
250
]
},
{
"tb": 24,
"tbk": 1,
"tl": 476768,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
499,
500,
501,
502,
503,
504,
505,
506,
557,
558
]
},
{
"tb": 8,
"tbk": 1,
"tl": 19433,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
650,
651,
652,
653,
654,
655,
656,
657,
658
]
},
{
"tb": 24,
"tbk": 1,
"tl": 4709594,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
268,
659,
660,
661,
662,
142,
184
]
},
{
"tb": 768,
"tbk": 1,
"tl": 7665,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
529,
530,
531,
532,
554,
663,
81,
224
]
},
{
"tb": 96,
"tbk": 1,
"tl": 64199,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
143,
144,
145,
664,
206
]
},
{
"tb": 32,
"tbk": 1,
"tl": 69,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
665,
666,
667,
668,
669,
670,
671,
672,
673
]
},
{
"tb": 63488,
"tbk": 2,
"tl": 806,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
120,
121,
122,
123,
124,
125,
674
]
},
{
"tb": 7360,
"tbk": 32,
"tl": 242859,
"mb": 7360,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
63,
64,
65,
66,
173,
422,
663,
81
]
},
{
"tb": 65568,
"tbk": 3,
"tl": 1167,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
82,
83,
84,
85,
675,
180,
676
]
},
{
"tb": 1608,
"tbk": 2,
"tl": 952701,
"mb": 1608,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
96,
677,
678,
679,
680,
681,
682,
683,
684
]
},
{
"tb": 384,
"tbk": 3,
"tl": 1103,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
685,
686,
687,
688,
190
]
},
{
"tb": 512,
"tbk": 1,
"tl": 21,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
82,
83,
84,
689,
690,
7,
119
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 39369831,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
82,
83,
84,
85,
86,
87,
691
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 30386,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
692,
250,
142
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 8808,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
63,
693,
694,
695,
696,
697,
698,
699,
700
]
},
{
"tb": 48,
"tbk": 1,
"tl": 64187,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
82,
83,
84,
701,
702,
7,
119
]
},
{
"tb": 96,
"tbk": 1,
"tl": 50246251,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
703,
704,
705,
706,
707,
708,
709,
710,
711
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3041,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
167,
168,
169,
556,
632,
591,
592,
593
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 3464018,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
63,
64,
65,
66,
67,
68,
69,
712
]
},
{
"tb": 32,
"tbk": 1,
"tl": 159,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
324,
713,
714,
715,
716,
717
]
},
{
"tb": 32,
"tbk": 1,
"tl": 3481035,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
106,
235,
290,
291,
292,
718,
142
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 50204226,
"mb": 32768,
"mbk": 1,
"gb": 32768,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
82,
83,
84,
85,
518,
719,
720
]
},
{
"tb": 8192,
"tbk": 1,
"tl": 50204257,
"mb": 8192,
"mbk": 1,
"gb": 8192,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
82,
83,
84,
85,
518,
721,
722
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 49,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
82,
83,
84,
85,
518,
519,
723
]
},
{
"tb": 24,
"tbk": 1,
"tl": 4709608,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
724,
725,
726,
727,
728,
142,
184
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
310,
425,
312,
261,
142,
184
]
},
{
"tb": 464,
"tbk": 2,
"tl": 381,
"mb": 248,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
89,
90,
91,
92,
93,
551,
729
]
},
{
"tb": 281600,
"tbk": 1,
"tl": 67114,
"mb": 281600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
216,
217,
218,
219,
730,
731,
732
]
},
{
"tb": 512,
"tbk": 1,
"tl": 18,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
82,
83,
84,
85,
178,
733,
690
]
},
{
"tb": 240,
"tbk": 2,
"tl": 476748,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
734,
558,
142,
184
]
},
{
"tb": 16,
"tbk": 1,
"tl": 83,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
310,
311,
138,
298,
299,
7
]
},
{
"tb": 480,
"tbk": 4,
"tl": 22119,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
106,
235,
290,
291,
292,
486,
735
]
},
{
"tb": 147456,
"tbk": 2,
"tl": 5715,
"mb": 147456,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
82,
83,
84,
85,
736,
737,
498
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 17564,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
63,
185,
186,
187,
188,
189,
586,
105
]
},
{
"tb": 32,
"tbk": 1,
"tl": 124,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
738,
354,
142,
184
]
},
{
"tb": 18432,
"tbk": 2,
"tl": 2020,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
82,
83,
84,
85,
739,
740,
741
]
},
{
"tb": 96,
"tbk": 1,
"tl": 69202,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
742,
743,
744,
745,
7
]
},
{
"tb": 576,
"tbk": 2,
"tl": 48,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
746,
747,
748,
749,
750,
751,
752,
753,
754
]
},
{
"tb": 960,
"tbk": 8,
"tl": 2612,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
417,
418,
419,
420,
755
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 103104,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
127,
756,
757,
758,
759,
760,
761,
762
]
},
{
"tb": 288358400,
"tbk": 17600,
"tl": 757519408029,
"mb": 288358400,
"mbk": 17600,
"gb": 288358400,
"gbk": 17600,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
167,
168,
169,
763,
764,
765
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 5595097,
"mb": 262144,
"mbk": 1,
"gb": 262144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
63,
64,
65,
66,
67,
766,
767,
768
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 134,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
440,
135,
136
]
},
{
"tb": 72,
"tbk": 1,
"tl": 4869638,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
769,
770,
771,
772,
773,
774,
775,
776,
777
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 50315611,
"mb": 1024,
"mbk": 1,
"gb": 1024,
"gbk": 1,
"eb": 1024,
"ebk": 1,
"fs": [
778,
779,
780,
781,
782,
783,
784,
785,
786,
787,
788,
789,
790,
791,
792,
793,
794,
795,
796,
797,
798
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3449945,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
96,
799,
800,
801,
802,
803,
804,
805,
806
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 3564,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
807,
808,
142
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1756133,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
58,
59,
60,
809,
810
]
},
{
"tb": 32,
"tbk": 1,
"tl": 74,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
665,
811,
812,
813,
814,
815,
816,
817,
818
]
},
{
"tb": 5520,
"tbk": 10,
"tl": 1455,
"mb": 2208,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
819,
820,
821,
822,
823,
824
]
},
{
"tb": 2306867200,
"tbk": 8192,
"tl": 690777,
"mb": 281600,
"mbk": 1,
"gb": 281600,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
825,
826,
767
]
},
{
"tb": 48,
"tbk": 2,
"tl": 953507,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
499,
500,
501,
502,
503,
504,
505,
506,
827,
828
]
},
{
"tb": 224,
"tbk": 1,
"tl": 70689,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
829,
830,
831,
832,
194
]
},
{
"tb": 7936,
"tbk": 2,
"tl": 266,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
120,
121,
122,
123,
124,
125,
833
]
},
{
"tb": 52824,
"tbk": 2,
"tl": 39384485,
"mb": 52800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
834,
835,
836,
837,
838,
839,
840,
841,
842
]
},
{
"tb": 1536,
"tbk": 8,
"tl": 2580,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
603,
604,
605,
843,
844,
845
]
},
{
"tb": 96,
"tbk": 1,
"tl": 3481045,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
143,
144,
145,
846,
142
]
},
{
"tb": 1600,
"tbk": 8,
"tl": 166,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
847,
848,
849,
850,
851,
852
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1274,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
149,
853,
854,
855,
856,
857,
858,
859,
142,
184
]
},
{
"tb": 281600,
"tbk": 1,
"tl": 67207,
"mb": 281600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
216,
217,
218,
219,
860,
731,
732
]
},
{
"tb": 2097152,
"tbk": 64,
"tl": 378921,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
861,
862,
863,
864,
865,
866,
867,
868
]
},
{
"tb": 32,
"tbk": 1,
"tl": 67343,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
869,
176,
119
]
},
{
"tb": 2080,
"tbk": 12,
"tl": 41,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
402,
403,
404,
405,
294,
250
]
},
{
"tb": 48,
"tbk": 1,
"tl": 66606,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
870,
871,
872,
873,
874,
875,
876,
877,
878
]
},
{
"tb": 512,
"tbk": 1,
"tl": 379260,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
89,
90,
91,
879,
880,
558,
142
]
},
{
"tb": 422400,
"tbk": 1,
"tl": 45491365,
"mb": 422400,
"mbk": 1,
"gb": 422400,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
96,
881,
882,
883,
884,
885,
886,
887,
888
]
},
{
"tb": 256,
"tbk": 1,
"tl": 11,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
25,
26,
889,
535,
142
]
},
{
"tb": 32,
"tbk": 1,
"tl": 17254,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
106,
235,
290,
291,
292,
890,
553
]
},
{
"tb": 281600,
"tbk": 1,
"tl": 326218,
"mb": 281600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
216,
217,
218,
219,
891,
892,
893
]
},
{
"tb": 288358400,
"tbk": 17600,
"tl": 83619136646,
"mb": 288358400,
"mbk": 17600,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
167,
168,
169,
485,
100,
101,
102,
894
]
},
{
"tb": 1088,
"tbk": 2,
"tl": 33,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
895,
896,
897,
898,
899,
900
]
},
{
"tb": 96,
"tbk": 1,
"tl": 65877,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
901,
902,
903,
904,
905,
906,
535,
142,
184
]
},
{
"tb": 1952,
"tbk": 8,
"tl": 869,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
907,
908,
909,
910,
911,
912,
913,
914
]
},
{
"tb": 24,
"tbk": 1,
"tl": 11,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
96,
97,
98,
99,
100,
101,
102,
103,
915,
183
]
},
{
"tb": 2304,
"tbk": 8,
"tl": 2505,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
916,
917,
918,
919,
920,
921
]
},
{
"tb": 992,
"tbk": 2,
"tl": 862,
"mb": 992,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
922,
923,
924,
925,
926,
927,
928,
929
]
},
{
"tb": 64,
"tbk": 1,
"tl": 155,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
58,
59,
60,
61,
442
]
},
{
"tb": 1392,
"tbk": 2,
"tl": 1135,
"mb": 744,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
529,
530,
531,
532,
533,
190,
191,
535
]
},
{
"tb": 96,
"tbk": 1,
"tl": 45375,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
106,
235,
930,
931,
932,
933,
553
]
},
{
"tb": 64,
"tbk": 1,
"tl": 64193,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
58,
59,
60,
809,
206
]
},
{
"tb": 8,
"tbk": 1,
"tl": 40443469,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
466,
934,
935,
936,
937,
938,
939,
940,
941
]
},
{
"tb": 320,
"tbk": 2,
"tl": 947535,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
942,
943,
944,
945,
508
]
},
{
"tb": 1968,
"tbk": 2,
"tl": 57,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
946,
947,
948,
949,
950,
951
]
},
{
"tb": 48,
"tbk": 1,
"tl": 155,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
952,
354,
142,
184
]
},
{
"tb": 18432,
"tbk": 2,
"tl": 2337,
"mb": 18432,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
82,
83,
84,
85,
953,
954,
498
]
},
{
"tb": 480,
"tbk": 4,
"tl": 149,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
106,
235,
290,
291,
292,
293,
586
]
},
{
"tb": 3864,
"tbk": 7,
"tl": 1795,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
819,
820,
821,
955,
956,
957
]
},
{
"tb": 96,
"tbk": 1,
"tl": 13,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
587,
958,
959,
960,
961,
962,
963,
964,
965
]
},
{
"tb": 16,
"tbk": 1,
"tl": 50246241,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
623,
624,
625,
626,
627,
628,
629,
630,
966,
967
]
},
{
"tb": 422400,
"tbk": 1,
"tl": 4835236,
"mb": 422400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
96,
97,
98,
99,
100,
101,
102,
894,
968,
969
]
},
{
"tb": 32,
"tbk": 2,
"tl": 474067,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
970,
971,
972,
973,
974,
975,
976,
977
]
},
{
"tb": 38400,
"tbk": 203,
"tl": 615691,
"mb": 8832,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
63,
978,
979,
980,
981,
982,
983,
984,
985
]
},
{
"tb": 96,
"tbk": 1,
"tl": 18432,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
986,
987,
988,
989,
105
]
},
{
"tb": 48,
"tbk": 1,
"tl": 67214,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
990,
991,
992,
993,
994,
995,
996,
997,
998
]
},
{
"tb": 8,
"tbk": 1,
"tl": 25,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
999,
1000,
1001,
1002,
1003,
1004,
1005,
1006
]
},
{
"tb": 512,
"tbk": 1,
"tl": 35,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
82,
83,
84,
1007,
690,
7,
119
]
},
{
"tb": 512,
"tbk": 1,
"tl": 28,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
167,
168,
169,
1008,
147,
7
]
},
{
"tb": 563200,
"tbk": 1,
"tl": 1085,
"mb": 563200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
82,
83,
84,
262,
1009,
264,
176
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 385964,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
82,
83,
84,
85,
739,
1010,
1011
]
},
{
"tb": 1048512,
"tbk": 14,
"tl": 1756412,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
58,
59,
60,
205,
810
]
},
{
"tb": 9011232,
"tbk": 33,
"tl": 577235,
"mb": 9011200,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
167,
168,
169,
485,
100,
101,
102,
103
]
},
{
"tb": 17382,
"tbk": 10,
"tl": 44793,
"mb": 8704,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
106,
235,
236,
237,
238,
239,
1012
]
},
{
"tb": 563200,
"tbk": 1,
"tl": 69158,
"mb": 563200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
167,
168,
169,
1013,
1014,
1015
]
},
{
"tb": 512,
"tbk": 1,
"tl": 20,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
82,
83,
84,
85,
178,
1016,
147
]
},
{
"tb": 96,
"tbk": 1,
"tl": 70685,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
143,
144,
145,
1017,
194
]
},
{
"tb": 384,
"tbk": 2,
"tl": 73,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
1018,
1019,
1020,
1021,
1022,
1023,
1024,
1025,
1026
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 4874284,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
63,
64,
65,
66,
67,
68,
69,
1027
]
},
{
"tb": 512,
"tbk": 1,
"tl": 63113,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 22,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
167,
168,
169,
358,
1036,
142
]
},
{
"tb": 960,
"tbk": 8,
"tl": 190,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
106,
235,
290,
291,
292,
293,
190
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
106,
107,
108,
109,
110,
111,
112,
113,
114,
1037,
116
]
},
{
"tb": 160,
"tbk": 1,
"tl": 69225,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1038,
1039,
1040,
1041,
176
]
},
{
"tb": 2080,
"tbk": 12,
"tl": 37,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
402,
403,
404,
405,
586,
105
]
},
{
"tb": 384,
"tbk": 1,
"tl": 473785,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
1042,
1043,
1044,
1045,
1046,
1047,
1048,
1049,
1050
]
},
{
"tb": 2097088,
"tbk": 15,
"tl": 757,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
58,
59,
60,
1051,
1052
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 50204398,
"mb": 2048,
"mbk": 1,
"gb": 2048,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
127,
756,
757,
758,
759,
760,
1053,
1054
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
181,
182,
429,
119
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 1740489,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
120,
121,
122,
123,
124,
125,
1055
]
},
{
"tb": 96,
"tbk": 1,
"tl": 1756139,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
143,
144,
145,
664,
810
]
},
{
"tb": 1392,
"tbk": 2,
"tl": 139264,
"mb": 1392,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
529,
530,
531,
532,
554,
1056,
193,
194
]
},
{
"tb": 96,
"tbk": 1,
"tl": 39,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
143,
144,
145,
1057,
147
]
},
{
"tb": 8192,
"tbk": 1,
"tl": 4890950,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
82,
83,
84,
85,
518,
519,
1058
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 1065,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
106,
235,
290,
291,
292,
1059,
93
]
},
{
"tb": 7936,
"tbk": 62,
"tl": 59,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
82,
83,
84,
262,
1060,
193,
194
]
},
{
"tb": 992,
"tbk": 5,
"tl": 476762,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
106,
235,
290,
291,
292,
1061,
1062
]
},
{
"tb": 5856,
"tbk": 57,
"tl": 3963999,
"mb": 5856,
"mbk": 57,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
63,
64,
65,
66,
173,
422,
1056,
193
]
},
{
"tb": 32,
"tbk": 1,
"tl": 3481039,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
106,
235,
290,
291,
292,
1063,
142
]
},
{
"tb": 48,
"tbk": 2,
"tl": 110,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
1064,
45,
46,
47,
48,
49
]
},
{
"tb": 1536,
"tbk": 1,
"tl": 3054,
"mb": 1536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
96,
97,
98,
99,
100,
101,
102,
547,
431,
142
]
},
{
"tb": 13004,
"tbk": 17,
"tl": 129652,
"mb": 6528,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
106,
235,
236,
237,
238,
239,
1065
]
},
{
"tb": 9011200,
"tbk": 1,
"tl": 53454,
"mb": 9011200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
106,
107,
255,
256,
257,
1066,
553,
105,
202
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3418604,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
1067,
1068,
1069,
1070,
1071,
1072
]
},
{
"tb": 512,
"tbk": 1,
"tl": 2671,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
402,
403,
404,
1073,
431,
142
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
106,
107,
108,
109,
110,
111,
112,
113,
114,
1037,
429
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 69266,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
82,
83,
84,
262,
308,
1074,
424
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 122,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
120,
121,
122,
123,
124,
125,
1075
]
},
{
"tb": 288,
"tbk": 1,
"tl": 22518,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1076,
1077,
1078,
1079,
498
]
},
{
"tb": 512,
"tbk": 1,
"tl": 61162,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
82,
83,
84,
1080,
147,
7,
119
]
},
{
"tb": 2195456,
"tbk": 67,
"tl": 31928731,
"mb": 2195456,
"mbk": 67,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
82,
83,
84,
85,
1081,
1082,
1083
]
},
{
"tb": 256,
"tbk": 1,
"tl": 70974,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
82,
83,
84,
262,
1084,
1085,
176
]
},
{
"tb": 7936,
"tbk": 2,
"tl": 140756,
"mb": 7936,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
82,
83,
84,
1086,
193,
194,
176
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 7991,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
63,
1087,
1088,
1089,
1090,
1091,
1092,
1093,
1094
]
},
{
"tb": 8,
"tbk": 1,
"tl": 33844,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
1095,
1096,
1097,
1098,
1099,
1100,
1101,
1102
]
}
],
"ftbl": [
"[root]",
"0x5aff1c0ccf79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5aff1c0cb709: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5aff1bd7f7a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5aff1bd9b108: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5aff1be5bdae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5aff1bcd21eb: winter_verifier::perform_verification (verifier/src/lib.rs:184:9)",
"0x5aff1bcd55da: winter_verifier::verify (verifier/src/lib.rs:111:21)",
"0x5aff1be943b9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5aff1bd664ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aff1bde3e08: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1bde3e08: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1bde3e08: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5aff1bde445b: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5aff1bde445b: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5aff1bde445b: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5aff1bcd6f56: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x5aff1beb3eb6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5aff1bed8fbd: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5aff1c08fa99: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5aff1c08fc0a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aff1c08361c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1c08361c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1c08361c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5aff1c0835cc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5aff1c0835cc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5aff1c0835cc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5aff1c0832c6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x5aff1bf166ca: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x5aff1bf1f5e9: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x5aff1be1a4ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be1a4ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be1a4ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be1a4ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7cd3d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be775f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea721d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bce2ff2: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x5aff1c0cbea0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5aff1c0cc0d9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5aff1c0cc3d2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5aff1c0cd159: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x5aff1bcb132d: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x5aff1be93847: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x5aff1bcaf4f5: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x5aff1bddc55c: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x5aff1be8a129: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x5aff1bddbb36: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x5aff1bddf296: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x5aff1bdb8bcf: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:369:9)",
"0x5aff1be2a40d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be2a40d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be2a40d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be2a40d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7be4a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be796e4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea5d1a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bdffba1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x5aff1bd91fe1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5aff1bd9b0d8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5aff1be5967d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5aff1bdbb978: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:517:13)",
"0x5aff1bcd08e5: winter_verifier::perform_verification (verifier/src/lib.rs:185:13)",
"0x5aff1bd59dec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aff1be33b95: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be33b95: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be33b95: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1bd9da57: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5aff1bd3c259: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x5aff1bd3d739: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x5aff1bd409b6: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x5aff1bdd572b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5aff1bdd4f9d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5aff1bf4869a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5aff1bf35f7b: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5aff1bf401a9: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5aff1bf3a416: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5aff1bd78611: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5aff1bd9b288: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5aff1be59c0b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5aff1bd093c9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x5aff1bdffd0d: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x5aff1be337d5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be337d5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be337d5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1bd9dae7: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5aff1bcfb30f: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x5aff1bcfa506: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x5aff1bdceacc: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:701:36)",
"0x5aff1be33646: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be33646: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be33646: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1bd0e882: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x5aff1bd3d46d: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x5aff1be04cf0: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x5aff1bcd17a8: winter_verifier::perform_verification (verifier/src/lib.rs:306:42)",
"0x5aff1bd5c7bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aff1be32a22: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be32a22: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be32a22: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5aff1be69d25: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5aff1be69d25: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5aff1be69d25: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5aff1be310e6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5aff1bcd66db: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x5aff1bcd94b0: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x5aff1c058819: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5aff1c05762a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aff1c05a32c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1c05a32c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1c05a32c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5aff1c02969c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5aff1c02969c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5aff1c02969c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5aff1bcce084: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x5aff1bccdd9a: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x5aff1bd492db: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x5aff1bcdb7be: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x5aff1bcd1b34: winter_verifier::perform_verification (verifier/src/lib.rs:319:28)",
"0x5aff1bd2f822: winterfell::main (winterfell/src/main.rs:71:11)",
"0x5aff1c0caadc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x5aff1c0c9d6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x5aff1c0c9ae8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x5aff1c0c9ae8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x5aff1c0c9124: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5aff1c0c6d43: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x5aff1bdf88a2: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x5aff1bd59b4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aff1bdb8012: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1bdb8012: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1bdb8012: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5aff1be6ab05: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5aff1be6ab05: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5aff1be6ab05: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5aff1bcb8b95: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x5aff1bdb9010: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:354:9)",
"0x5aff1be98e16: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:26:25)",
"0x5aff1bd3021b: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:175:9)",
"0x5aff1bdb8b72: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:371:13)",
"0x5aff1bdaaadf: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:41:22)",
"0x5aff1bcf5b39: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:36)",
"0x5aff1bdc01b5: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:21)",
"0x5aff1bdcf2ee: winter_prover::Prover::prove (prover/src/lib.rs:175:37)",
"0x5aff1bd7b281: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5aff1bd9ba38: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5aff1be5c33e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5aff1bcdf325: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x5aff1bcd1a15: winter_verifier::perform_verification (verifier/src/lib.rs:311:25)",
"0x5aff1bcc024c: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x5aff1bd6330c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aff1be16b59: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be16b59: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be16b59: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be16b59: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7b6ba: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be799a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea5eea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bdbde8c: winter_prover::Prover::generate_proof (prover/src/lib.rs:505:52)",
"0x5aff1bde90d2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x5aff1bf0ad94: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x5aff1bf1695d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x5aff1c0cc108: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x5aff1c0cc4ca: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x5aff1c0cc4ca: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x5aff1c0cc26e: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x5aff1c0cc26e: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x5aff1c0cc35d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x5aff1be69b85: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5aff1be69b85: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5aff1be69b85: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5aff1bcb8106: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x5aff1bcf4ac9: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:290:18)",
"0x5aff1bcf388e: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:173:30)",
"0x5aff1bd04785: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5aff1be12997: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x5aff1be05970: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x5aff1bcd550b: winter_verifier::verify (verifier/src/lib.rs:109:19)",
"0x5aff1be12b50: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x5aff1bd379fe: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x5aff1bcc62ce: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x5aff1bcc3ac4: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x5aff1bf0414c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x5aff1bccde0c: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x5aff1bdbbf02: winter_prover::Prover::generate_proof (prover/src/lib.rs:233:27)",
"0x5aff1bd2f27c: winterfell::main (winterfell/src/main.rs:54:17)",
"0x5aff1bd04c84: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1bd04c84: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1bd04c84: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5aff1be68c56: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5aff1bd3ca4c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x5aff1bd3f3c0: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x5aff1bd440bd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x5aff1bd50b3e: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x5aff1bd54040: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x5aff1be06104: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x5aff1c0922db: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5aff1c091fb1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5aff1c08b2ab: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5aff1c084e9d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5aff1c09042b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5aff1c0941e3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5aff1bcd941d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x5aff1bdbf217: winter_prover::Prover::generate_proof (prover/src/lib.rs:603:29)",
"0x5aff1bf15e04: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x5aff1bcd1c03: winter_verifier::perform_verification (verifier/src/lib.rs:323:5)",
"0x5aff1bdba3d4: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:541:17)",
"0x5aff1bcd0fc9: winter_verifier::perform_verification (verifier/src/lib.rs:266:61)",
"0x5aff1bd5a5cc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aff1be1daff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be1daff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be1daff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be1daff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7b4ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be78337: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea6e8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bd2eedf: winterfell::main (winterfell/src/main.rs:28:26)",
"0x5aff1bde4511: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1bde4511: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1bde4511: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5aff1be68c80: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5aff1bcf358a: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:155:31)",
"0x5aff1bcf6e25: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:128:17)",
"0x5aff1bef1c6e: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5aff1bdffe73: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x5aff1be05ad4: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x5aff1be1c58d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be1c58d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be1c58d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be1c58d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7bd7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be77d34: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea630a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1be05733: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x5aff1bdf8921: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x5aff1bf16b73: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x5aff1c0572e9: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5aff1c055700: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5aff1c055939: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5aff1c055132: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5aff1bd0e17c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x5aff1bd0aeb4: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x5aff1be1e95f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be1e95f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be1e95f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be1e95f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7ca4d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be78e15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea6f5d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bf1c7af: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x5aff1bdd7dca: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x5aff1bdbf30a: winter_prover::Prover::generate_proof (prover/src/lib.rs:608:34)",
"0x5aff1bd73c01: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5aff1bd9b408: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5aff1be5dc54: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5aff1bdc0285: winter_prover::Prover::generate_proof (prover/src/lib.rs:418:17)",
"0x5aff1bfaef36: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1bfaef36: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1bfaef36: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1bd0adac: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x5aff1bdd7d4a: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x5aff1be0e9a5: winter_prover::trace::Trace::validate (src/trace/mod.rs:179:13)",
"0x5aff1bdc0578: winter_prover::Prover::generate_proof (prover/src/lib.rs:379:17)",
"0x5aff1bde2485: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5aff1bcb2126: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x5aff1be06c15: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5aff1be94c5a: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x5aff1bf086a7: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x5aff1bdeb889: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x5aff1bd5da1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aff1be157f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be157f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be157f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be157f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7b34a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be773a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea713a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bdccf12: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:640:42)",
"0x5aff1beb8d72: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x5aff1beb8e16: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5aff1bcd1edf: winter_verifier::perform_verification (verifier/src/lib.rs:228:13)",
"0x5aff1be19ac3: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be19ac3: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be19ac3: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be19ac3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7bbd4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be7829a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea6654: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bd2ed51: winterfell::main (winterfell/src/main.rs:22:32)",
"0x5aff1beb8d85: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x5aff1bf15d9d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x5aff1bf66840: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5aff1bf66aa9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5aff1bf76111: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5aff1bd3d2b7: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x5aff1bdd7b91: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x5aff1be0e1b0: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:140:51)",
"0x5aff1beaf476: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5aff1bcadfc1: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5aff1be992cb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:64:9)",
"0x5aff1bcd1fcc: winter_verifier::perform_verification (verifier/src/lib.rs:225:43)",
"0x5aff1be2dd2f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be2dd2f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be2dd2f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be2dd2f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7b56d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be78125: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea698d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bf15d29: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x5aff1bdd1efa: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x5aff1bd08b8e: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x5aff1bd35245: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x5aff1bd30247: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:176:13)",
"0x5aff1be0e518: winter_prover::trace::Trace::validate (src/trace/mod.rs:123:26)",
"0x5aff1c08301a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x5aff1bcafd37: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x5aff1bcb8b7f: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x5aff1be19ecf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be19ecf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be19ecf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be19ecf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7cd5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be79da7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea6edd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bd2f0e6: winterfell::main (winterfell/src/main.rs:38:27)",
"0x5aff1bd2fe36: <winterfell::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (winterfell/src/main.rs:133:9)",
"0x5aff1bcd5330: winter_verifier::verify (verifier/src/lib.rs:98:38)",
"0x5aff1bd6917c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aff1be2beef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be2beef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be2beef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be2beef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7c27d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be77c65: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1be889bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bdbc033: winter_prover::Prover::generate_proof (prover/src/lib.rs:248:41)",
"0x5aff1bcf5a9c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:51:13)",
"0x5aff1bd5bd4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aff1be1759f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be1759f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be1759f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be1759f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be670d6: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5aff1be79bc5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea730d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bcd53a8: winter_verifier::verify (verifier/src/lib.rs:102:24)",
"0x5aff1be1f3bf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be1f3bf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be1f3bf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be1f3bf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7c6cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be79e45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea652d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bcde4ab: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x5aff1bde95c3: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x5aff1bdbe02d: winter_prover::Prover::generate_proof (prover/src/lib.rs:524:9)",
"0x5aff1c087f3e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5aff1c089400: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5aff1c088bf8: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5aff1be310a6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5aff1be06d01: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x5aff1bd95b21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5aff1bd9b498: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5aff1be5d7ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5aff1bd4edb7: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x5aff1bddbbae: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x5aff1be044ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x5aff1bcd1636: winter_verifier::perform_verification (verifier/src/lib.rs:305:9)",
"0x5aff1be9bb0a: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x5aff1beb27a8: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5aff1bd37114: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x5aff1bd7e8d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5aff1bd9b318: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5aff1be5c12d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5aff1bcc5af2: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x5aff1bef1ac5: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5aff1bcf35e4: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:156:33)",
"0x5aff1bd66ccc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aff1be33c35: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be33c35: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be33c35: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1bdbc88e: winter_prover::Prover::generate_proof (prover/src/lib.rs:307:44)",
"0x5aff1bd603fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aff1be1fedf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be1fedf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be1fedf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be1fedf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7c88d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be780c5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea59dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bdcd08b: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:648:34)",
"0x5aff1bcf84bd: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x5aff1bdceeb8: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:716:26)",
"0x5aff1bdbd931: winter_prover::Prover::generate_proof (prover/src/lib.rs:482:37)",
"0x5aff1bd5d23c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aff1be17bd9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be17bd9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be17bd9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be17bd9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7c00a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be79c44: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea6c2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bcc54b2: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x5aff1be6a2d9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5aff1be6a2d9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5aff1be6a2d9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5aff1bd3cdbc: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x5aff1bd0eabb: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x5aff1be2e36f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be2e36f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be2e36f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be2e36f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7b89d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be79895: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea6bdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1be0dfe2: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:140:32)",
"0x5aff1be944e2: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x5aff1bccdc98: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x5aff1c0900f0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5aff1c084669: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5aff1c083e51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5aff1c083950: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x5aff1bd43e24: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x5aff1bd0dcc7: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x5aff1bd0c547: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x5aff1be0c3a7: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x5aff1bd30330: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:177:13)",
"0x5aff1bcfd081: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x5aff1bcfbe86: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5aff1bdcd12f: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:655:31)",
"0x5aff1bcd51dd: winter_verifier::verify (verifier/src/lib.rs:96:32)",
"0x5aff1bcc3238: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x5aff1bdbce23: winter_prover::Prover::generate_proof (prover/src/lib.rs:423:33)",
"0x5aff1be2186f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be2186f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be2186f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be2186f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7c61d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be77285: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea5c1d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bdbbeb3: winter_prover::Prover::generate_proof (prover/src/lib.rs:222:20)",
"0x5aff1bcb8cba: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x5aff1bdbba42: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:512:13)",
"0x5aff1bd486b2: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x5aff1bd6069c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aff1be1670f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be1670f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be1670f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be1670f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7b27d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be79a55: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea58ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bf16ac4: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x5aff1be26acf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be26acf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be26acf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be26acf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7ba5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be78c45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea6e4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bca51cf: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:283:9)",
"0x5aff1bd5a32c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aff1bcb2aea: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1bcb2aea: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1bcb2aea: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5aff1be68ca6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5aff1bd49508: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x5aff1bd5f44a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aff1be14539: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be14539: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be14539: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be14539: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7bb7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be79b14: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea744a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bdbc4ea: winter_prover::Prover::generate_proof (prover/src/lib.rs:272:43)",
"0x5aff1be33af5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be33af5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be33af5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1bd9dc07: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5aff1bcfb9bd: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x5aff1bcf7c90: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x5aff1bcfa614: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x5aff1bcc0237: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x5aff1bcf7a29: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x5aff1beb51d6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5aff1be32d83: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5aff1bd3b7dc: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x5aff1bcd14f7: winter_verifier::perform_verification (verifier/src/lib.rs:298:27)",
"0x5aff1be24b9d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be24b9d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be24b9d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be24b9d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7b2aa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be78394: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea6b5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1be055c3: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x5aff1bf04472: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x5aff1bd4099f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x5aff1bd45bc6: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x5aff1bd6306c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aff1bde3f38: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1bde3f38: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1bde3f38: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5aff1be6a7c5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5aff1be6a7c5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5aff1be6a7c5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5aff1bcb08e2: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x5aff1bdacd5a: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:170:36)",
"0x5aff1bdab34f: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:55:17)",
"0x5aff1bd620bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aff1be136af: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be136af: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be136af: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be136af: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be68705: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5aff1be7950a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea5b3d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bccc891: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x5aff1bd37e2f: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x5aff1bf07338: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x5aff1bd4b222: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x5aff1bd0931c: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x5aff1bfb39e9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5aff1bfb39e9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5aff1bfb39e9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5aff1bdd409a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x5aff1bcb2a26: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5aff1be06714: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5aff1bcc9adb: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x5aff1bd65a6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aff1be33875: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be33875: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be33875: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1bd3caaf: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x5aff1bd43c29: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x5aff1bdbf19c: winter_prover::Prover::generate_proof (prover/src/lib.rs:600:25)",
"0x5aff1bde8cbe: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x5aff1be2505d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be2505d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be2505d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be2505d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7bdda: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be78de4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea61ca: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1be057eb: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x5aff1bcc7a93: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x5aff1be06e5f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x5aff1bcc32c5: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x5aff1bd45e92: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x5aff1bd45b2c: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x5aff1bdbeb02: winter_prover::Prover::generate_proof (prover/src/lib.rs:571:9)",
"0x5aff1bdfd2d4: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x5aff1bd0607a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x5aff1bcd6845: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x5aff1bd0da4c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x5aff1be05d54: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x5aff1bcb08f5: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x5aff1bcf6973: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:33)",
"0x5aff1bdc0266: winter_prover::Prover::generate_proof (prover/src/lib.rs:417:21)",
"0x5aff1be1a2ef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be1a2ef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be1a2ef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be1a2ef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7c4cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be78d15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea57dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bcd68d5: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x5aff1bca388c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x5aff1bd3f499: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x5aff1be22ecd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be22ecd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be22ecd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be22ecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7c09a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be77544: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea673a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1be0550b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x5aff1bd5f6dc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aff1be2144f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be2144f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be2144f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be2144f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7c04d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be76f75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea741d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bdbddcf: winter_prover::Prover::generate_proof (prover/src/lib.rs:501:51)",
"0x5aff1bcd677b: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x5aff1bd5fc1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aff1bcb03e2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1bcb03e2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1bcb03e2: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5aff1be69df5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5aff1be69df5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5aff1be69df5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5aff1bcc324b: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x5aff1be173a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be173a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be173a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be173a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7c48a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be77fc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea6a3a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bdbbd8f: winter_prover::Prover::generate_proof (prover/src/lib.rs:214:39)",
"0x5aff1c09263b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5aff1c091f01: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5aff1c08b38b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5aff1c08804e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5aff1c0899ec: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5aff1c08855a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5aff1bcc7d08: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x5aff1bd68edc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aff1be2b25f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be2b25f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be2b25f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be2b25f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be6818b: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5aff1be788d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea656d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bdbc7f7: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:36)",
"0x5aff1bf231e9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5aff1be8d15b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5aff1bd036eb: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5aff1bcde6fe: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x5aff1c0cb9ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aff1c0cd04c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1c0cd04c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1c0cd04c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5aff1c0cac7c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5aff1c0cac7c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5aff1c0cac7c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5aff1c0c6ece: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x5aff1be05370: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x5aff1bcb0750: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5aff1bd5e1fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aff1be20622: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be20622: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be20622: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be20622: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5aff1be7bdaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be77484: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1be948ea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1be03d67: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x5aff1bdf8b6c: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x5aff1bca389d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x5aff1bdd40af: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x5aff1bf06b9b: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x5aff1be333c5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be333c5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be333c5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1bdbc8cd: winter_prover::Prover::generate_proof (prover/src/lib.rs:308:37)",
"0x5aff1bd5c52a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aff1be14949: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be14949: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be14949: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be14949: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7c96a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be78874: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea6b8a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bcd940e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x5aff1be339b5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be339b5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be339b5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1bdbc909: winter_prover::Prover::generate_proof (prover/src/lib.rs:309:32)",
"0x5aff1bd08f66: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x5aff1bdba350: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:543:13)",
"0x5aff1bd5e49c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aff1be1ab4f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be1ab4f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be1ab4f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be1ab4f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be6603e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5aff1be7a035: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea70ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bd2f74e: winterfell::main (winterfell/src/main.rs:65:26)",
"0x5aff1bdf882f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x5aff1bcc61bf: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x5aff1bcc7f9d: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x5aff1be14f8f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be14f8f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be14f8f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be14f8f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7c06d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be77f75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea579d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bcc53a8: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x5aff1bd982a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5aff1bd9ba98: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5aff1be5b91b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5aff1bd3d0fa: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x5aff1bce2cb7: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x5aff1bcd1abc: winter_verifier::perform_verification (verifier/src/lib.rs:317:25)",
"0x5aff1be982f8: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:651:17)",
"0x5aff1bdd7db3: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x5aff1be1fb04: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be1fb04: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be1fb04: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be1fb04: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5aff1be7ceaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be78d64: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea70da: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bd08e8d: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x5aff1bf1ede9: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x5aff1bcd11ac: winter_verifier::perform_verification (verifier/src/lib.rs:275:24)",
"0x5aff1bd60e6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aff1be1bb29: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be1bb29: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be1bb29: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be1bb29: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7bcaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be7a084: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea619a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bd4924b: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x5aff1bcf8572: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x5aff1be967a8: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:216:31)",
"0x5aff1beb4d36: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5aff1bed2bd0: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5aff1bea0f66: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5aff1bea88f6: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5aff1bdbfe8b: winter_prover::Prover::generate_proof (prover/src/lib.rs:450:13)",
"0x5aff1bd04428: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x5aff1bdbc132: winter_prover::Prover::generate_proof (prover/src/lib.rs:262:22)",
"0x5aff1bf064f9: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x5aff1bd0437b: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x5aff1bd45d52: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x5aff1bd679ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aff1be33a55: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be33a55: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be33a55: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1bdbc877: winter_prover::Prover::generate_proof (prover/src/lib.rs:306:39)",
"0x5aff1bf1678d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x5aff1bdfe1ce: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x5aff1bcd5038: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:216:32)",
"0x5aff1beb4e5f: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5aff1bce2eb1: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x5aff1bcf68b2: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:28)",
"0x5aff1bd478d8: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x5aff1bda018f: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x5aff1bd4093d: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x5aff1bde94ab: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x5aff1bd38ec7: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x5aff1bd4a003: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x5aff1bd4b210: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x5aff1bd81a31: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5aff1bd9b048: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5aff1be5e55e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5aff1bcd23b2: winter_verifier::perform_verification (verifier/src/lib.rs:179:9)",
"0x5aff1bd5d77c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aff1be21bf2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be21bf2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be21bf2: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be21bf2: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5aff1be7cb7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be77c35: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea58cd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bddba6a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x5aff1bf165ed: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x5aff1bdb84c4: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1bdb84c4: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1bdb84c4: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5aff1be68bf6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5aff1bd300ad: <winterfell::WorkAir as winter_air::air::Air>::new (winterfell/src/main.rs:151:23)",
"0x5aff1bcd603b: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:102:85)",
"0x5aff1beb2a6e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5aff1bca5a3f: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:230:34)",
"0x5aff1beae026: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5aff1bed43a7: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5aff1bcf8d9a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x5aff1bdcd6ee: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:669:26)",
"0x5aff1bdbc511: winter_prover::Prover::generate_proof (prover/src/lib.rs:274:13)",
"0x5aff1bd65fac: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aff1be1b8df: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be1b8df: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be1b8df: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be1b8df: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be66b4e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5aff1be79415: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea72ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bcd84f7: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x5aff1bc7dd82: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5aff1bc7dd82: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aff1bc7dd82: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1bc7dd82: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1bc7dd82: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1bc7dd82: std::io::buffered::bufwriter::BufWriter<W>::with_capacity (io/buffered/bufwriter.rs:115:33)",
"0x5aff1bc7dd82: std::io::buffered::linewriter::LineWriter<W>::with_capacity (io/buffered/linewriter.rs:109:29)",
"0x5aff1bc7dd82: std::io::buffered::linewriter::LineWriter<W>::new (io/buffered/linewriter.rs:89:9)",
"0x5aff1bc7dd82: std::io::stdio::stdout::{{closure}} (src/io/stdio.rs:618:62)",
"0x5aff1bc7dd82: std::sync::once_lock::OnceLock<T>::get_or_init::{{closure}} (src/sync/once_lock.rs:250:50)",
"0x5aff1bc7dd82: std::sync::once_lock::OnceLock<T>::initialize::{{closure}} (src/sync/once_lock.rs:376:19)",
"0x5aff1bc7dd82: std::sync::once::Once::call_once_force::{{closure}} (src/sync/once.rs:208:40)",
"0x5aff1bc7dd82: std::sys_common::once::futex::Once::call (sys_common/once/futex.rs:124:21)",
"0x5aff1bc7ceca: std::sync::once::Once::call_once_force (src/sync/once.rs:208:9)",
"0x5aff1bc7ceca: std::sync::once_lock::OnceLock<T>::initialize (src/sync/once_lock.rs:375:9)",
"0x5aff1c0e71c5: std::sync::once_lock::OnceLock<T>::get_or_try_init (src/sync/once_lock.rs:298:9)",
"0x5aff1c0e71c5: std::sync::once_lock::OnceLock<T>::get_or_init (src/sync/once_lock.rs:250:15)",
"0x5aff1c0e71c5: std::io::stdio::stdout (src/io/stdio.rs:618:14)",
"0x5aff1c0e71c5: std::io::stdio::print_to (src/io/stdio.rs:1020:21)",
"0x5aff1c0e71c5: std::io::stdio::_print (src/io/stdio.rs:1097:5)",
"0x5aff1bd2f03a: winterfell::main (winterfell/src/main.rs:36:5)",
"0x5aff1be1718f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be1718f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be1718f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be1718f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7bccd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be78cd7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea650d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1be9baa0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x5aff1bf06b89: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x5aff1bdbe6b8: winter_prover::Prover::generate_proof (prover/src/lib.rs:558:13)",
"0x5aff1bdba1b5: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:547:13)",
"0x5aff1bd481b6: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x5aff1be1d4cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be1d4cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be1d4cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be1d4cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7c0dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be793d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea5a6d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bdbbcd2: winter_prover::Prover::generate_proof (prover/src/lib.rs:210:38)",
"0x5aff1bdd680b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5aff1bdd4a1d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5aff1bf48c2a: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5aff1bf4155d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x5aff1bf47a25: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x5aff1bf3a86e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x5aff1bcf99d6: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x5aff1bcf8e23: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x5aff1bdaa028: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:83:31)",
"0x5aff1beb07af: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5aff1bd886d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5aff1bd9b7c8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5aff1be5a67e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5aff1bd54216: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x5aff1bdf8bbd: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x5aff1bd61b7c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aff1be1b19f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be1b19f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be1b19f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be1b19f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7c54d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be79355: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea6ddd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bcf71b1: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x5aff1c084e3d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5aff1c090748: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5aff1c0940a7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5aff1bdbfe30: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:13)",
"0x5aff1c09212b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5aff1c092061: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5aff1c08b46b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5aff1c085b71: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5aff1c086307: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5aff1c09590b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5aff1be32328: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be32328: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be32328: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5aff1be6a205: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5aff1be6a205: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5aff1be6a205: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5aff1bdbdea3: winter_prover::Prover::generate_proof (prover/src/lib.rs:510:39)",
"0x5aff1bdfe1b0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x5aff1be2cd1f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be2cd1f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be2cd1f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be2cd1f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7b61d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be774f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea634d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bcc67f7: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x5aff1be0676e: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x5aff1bd6720c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aff1be20e49: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be20e49: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be20e49: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be20e49: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7b93a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be787f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea601a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bcd0c5f: winter_verifier::perform_verification (verifier/src/lib.rs:218:40)",
"0x5aff1bcc9a78: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x5aff1bcf6be1: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:135:9)",
"0x5aff1be29abf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be29abf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be29abf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be29abf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7ce7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be79925: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea65dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bca5788: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:228:23)",
"0x5aff1bd43c0e: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x5aff1bd06999: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x5aff1be0d55d: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:243:25)",
"0x5aff1bd2fd94: winterfell::build_do_work_trace (winterfell/src/main.rs:91:5)",
"0x5aff1bdcf60b: winterfell::main::{{closure}} (winterfell/src/main.rs:30:23)",
"0x5aff1bca88cd: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x5aff1bdd707b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5aff1bdd428d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5aff1bf482ea: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5aff1bf23009: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5aff1be8ca75: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5aff1bd03598: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5aff1c082c69: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5aff1c07fc1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aff1c07cdb6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1c07cdb6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1c07cdb6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1bd43b68: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x5aff1c0929e9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1c0929e9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1c0929e9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1c0929e9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5aff1c092e2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1c092df7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1c092fce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1c0954c9: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x5aff1bd492f2: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x5aff1c09248b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5aff1c091e51: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5aff1c08b54b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5aff1c085c41: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5aff1c0862c7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5aff1c09595b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5aff1be2fe6f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be2fe6f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be2fe6f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be2fe6f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7becd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be77825: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea6afd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bf16c5a: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x5aff1bfa80b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5aff1bfaad69: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5aff1bfb2322: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5aff1bd0665f: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x5aff1be2d4f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be2d4f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be2d4f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be2d4f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7b9da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be78bc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea5eba: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bdccfcf: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:644:36)",
"0x5aff1bd9a041: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5aff1bd9b018: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5aff1be598be: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5aff1bdace9d: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:175:17)",
"0x5aff1bdd5a8b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5aff1bdd4e3d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5aff1bf4878a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5aff1bf232a9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5aff1be8bbc8: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5aff1be8a195: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x5aff1bde9347: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x5aff1bd4b2d3: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x5aff1bd40afb: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x5aff1bf27c7d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5aff1bf2a613: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5aff1bd3b237: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5aff1be134b9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be134b9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be134b9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be134b9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7b8ea: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be784f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea639a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bda9fe8: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:83:9)",
"0x5aff1bcce29f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x5aff1bd49df3: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x5aff1bca7036: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5aff1be97c48: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:300:57)",
"0x5aff1be270ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be270ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be270ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be270ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7b44d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be77625: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea613d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bcafd28: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x5aff1be1869a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be1869a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be1869a: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be1869a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5aff1be7b4cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be79a1a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bf03f4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bd3d243: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x5aff1bd90c21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5aff1bd9add8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5aff1be5c6ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5aff1bcd68ec: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x5aff1bd5b03c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aff1be1d909: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be1d909: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be1d909: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be1d909: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7ce3a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be78934: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea5a2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bcd0ba2: winter_verifier::perform_verification (verifier/src/lib.rs:214:41)",
"0x5aff1be16033: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be16033: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be16033: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be16033: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7c9ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be79545: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea6fdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bdbc6db: winter_prover::Prover::generate_proof (prover/src/lib.rs:293:23)",
"0x5aff1bce2ca0: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x5aff1bcde21f: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x5aff1bcb1f63: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x5aff1bcc5eae: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x5aff1bcc9a1c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x5aff1bd0631d: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x5aff1be0d131: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x5aff1bde1853: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x5aff1be94832: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x5aff1bcde3b7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x5aff1bd542b9: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x5aff1bd66f6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aff1be2c22b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be2c22b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be2c22b: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be2c22b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5aff1be7caad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be79955: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bd9d16d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bddd618: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x5aff1bcf8e5c: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x5aff1be23a3f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be23a3f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be23a3f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be23a3f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7cb1d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be77bb7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea59bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bce3df7: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x5aff1bdbd4d0: winter_prover::Prover::generate_proof (prover/src/lib.rs:452:35)",
"0x5aff1bccddce: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x5aff1bd9aa21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5aff1bd9ae08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5aff1be5d42e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5aff1be06f07: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x5aff1bd5ad9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aff1be23e5f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be23e5f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be23e5f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be23e5f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7b3cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be78e87: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea5e8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bdaabcd: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:51:26)",
"0x5aff1bcb1461: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x5aff1bd4803f: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x5aff1be97f36: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:226:17)",
"0x5aff1beb219e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5aff1bde90f5: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x5aff1bd50e35: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x5aff1bcdf2d7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x5aff1bca56e8: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:227:28)",
"0x5aff1bd0fc4b: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x5aff1bd50d26: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x5aff1bccd41f: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x5aff1bccba15: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x5aff1bdbfe70: winter_prover::Prover::generate_proof (prover/src/lib.rs:449:13)",
"0x5aff1bcaf388: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x5aff1bd503b5: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x5aff1bd06517: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x5aff1bdb375a: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x5aff1be97852: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:503:32)",
"0x5aff1beb4dc6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5aff1bed293a: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5aff1be9ce27: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5aff1bea7a22: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5aff1bcc3314: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x5aff1bd0c356: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x5aff1be98f8c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:40:30)",
"0x5aff1bd7d511: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5aff1bd9ba08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5aff1be5940e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5aff1bd40c69: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x5aff1bcde6df: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x5aff1bcc5440: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x5aff1beaddb6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5aff1bcadb11: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5aff1bd54e4c: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x5aff1be05f37: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x5aff1bd50b7f: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x5aff1be24e94: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be24e94: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be24e94: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be24e94: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5aff1be7b5da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be79ec4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea6c5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1bd0c46e: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x5aff1be2e9dd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aff1be2e9dd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aff1be2e9dd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aff1be2e9dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aff1be7bc7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aff1be78ff4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aff1bea686a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aff1be0567b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)"
]
}