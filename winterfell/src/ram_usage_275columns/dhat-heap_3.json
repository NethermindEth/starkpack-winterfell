{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell",
"pid": 20502,
"tg": 59809831,
"te": 64972680,
"pps": [
{
"tb": 16,
"tbk": 1,
"tl": 226,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11
]
},
{
"tb": 96,
"tbk": 1,
"tl": 1784273,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
14,
15,
16,
17,
18
]
},
{
"tb": 512,
"tbk": 1,
"tl": 2941,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
20,
21,
22,
23,
24,
25,
26
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37
]
},
{
"tb": 2208,
"tbk": 3,
"tl": 38159,
"mb": 2208,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
42,
43,
44,
45
]
},
{
"tb": 512,
"tbk": 1,
"tl": 29,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
20,
21,
22,
46,
47,
25,
26
]
},
{
"tb": 2097152,
"tbk": 8,
"tl": 173369,
"mb": 2097152,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58
]
},
{
"tb": 736,
"tbk": 3,
"tl": 765,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
59,
60,
61,
62,
63,
64,
65,
66,
67
]
},
{
"tb": 16,
"tbk": 1,
"tl": 64952527,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
68,
69,
70,
71,
72,
73,
74,
75
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 38288,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
76,
77,
78,
79,
80,
81
]
},
{
"tb": 16,
"tbk": 1,
"tl": 125,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88
]
},
{
"tb": 16,
"tbk": 1,
"tl": 6,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
89,
90,
10,
11
]
},
{
"tb": 96,
"tbk": 1,
"tl": 30,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
14,
15,
16,
91,
92
]
},
{
"tb": 512,
"tbk": 1,
"tl": 16,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
20,
21,
22,
93,
47,
25,
26
]
},
{
"tb": 256,
"tbk": 1,
"tl": 10,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
59,
60,
94,
95,
96,
97,
98,
99,
100,
101,
10
]
},
{
"tb": 52800,
"tbk": 1,
"tl": 64952243,
"mb": 52800,
"mbk": 1,
"gb": 52800,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
102,
103,
104,
105,
106,
107,
108,
109,
110
]
},
{
"tb": 32,
"tbk": 1,
"tl": 782,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
111,
112,
10,
11
]
},
{
"tb": 2306867200,
"tbk": 1,
"tl": 7873416,
"mb": 2306867200,
"mbk": 1,
"gb": 2306867200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
113,
114,
115,
116,
117,
118,
119,
120
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1299,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
14,
15,
16,
121,
122
]
},
{
"tb": 64,
"tbk": 1,
"tl": 389805,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
59,
60,
61,
62,
63,
123,
124,
125,
10
]
},
{
"tb": 512,
"tbk": 1,
"tl": 24,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
48,
49,
50,
51,
52,
53,
126,
92,
25
]
},
{
"tb": 48,
"tbk": 1,
"tl": 896,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
127,
112,
10,
11
]
},
{
"tb": 16,
"tbk": 1,
"tl": 64579727,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
12,
128,
129,
130,
131,
132,
133,
134,
135,
136,
137
]
},
{
"tb": 216,
"tbk": 1,
"tl": 19562,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
138,
139,
140,
141,
142,
143,
144,
145,
146
]
},
{
"tb": 2496,
"tbk": 10,
"tl": 1065,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
59,
60,
147,
148,
149,
150,
151,
152,
153,
154
]
},
{
"tb": 512,
"tbk": 1,
"tl": 9,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
155,
156,
157,
158,
159,
160,
161,
162
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 3324,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
163,
164,
165,
166,
167,
168,
169,
170,
171
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
172,
173,
26
]
},
{
"tb": 72,
"tbk": 1,
"tl": 21854,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
102,
174,
175,
176,
55,
56,
57,
177,
178,
10
]
},
{
"tb": 70400,
"tbk": 2,
"tl": 826847,
"mb": 35200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
183,
184,
185
]
},
{
"tb": 256,
"tbk": 1,
"tl": 594741,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
186,
187,
188,
189,
190,
191,
192,
193,
194,
195
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 7406,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
20,
21,
22,
196,
197,
198,
199
]
},
{
"tb": 32,
"tbk": 1,
"tl": 171,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
29,
30,
31,
200,
201,
202,
203,
204,
205
]
},
{
"tb": 48,
"tbk": 1,
"tl": 5005592,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
206,
207,
208,
209,
210,
211,
212,
213,
214
]
},
{
"tb": 72,
"tbk": 3,
"tl": 64,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
215,
216,
217,
218,
219,
220,
221,
222,
223
]
},
{
"tb": 32,
"tbk": 1,
"tl": 125,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
172,
224,
225,
226,
227,
228
]
},
{
"tb": 256,
"tbk": 1,
"tl": 64547795,
"mb": 256,
"mbk": 1,
"gb": 256,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
186,
229,
230,
231,
232,
233,
234,
235
]
},
{
"tb": 48,
"tbk": 2,
"tl": 87,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
236,
237,
238,
239,
240,
241
]
},
{
"tb": 224,
"tbk": 1,
"tl": 14367,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
242,
243,
244,
245,
45
]
},
{
"tb": 11904,
"tbk": 3,
"tl": 453,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
20,
21,
22,
196,
246,
247,
248
]
},
{
"tb": 278519,
"tbk": 15,
"tl": 1885793,
"mb": 139264,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
249,
250,
251,
252,
253
]
},
{
"tb": 2976,
"tbk": 3,
"tl": 2229,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
163,
254,
255,
256,
257,
258,
259,
260
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 165876,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
20,
21,
22,
196,
261,
262,
263
]
},
{
"tb": 11904,
"tbk": 3,
"tl": 40411,
"mb": 11904,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
20,
21,
22,
264,
44,
45,
265
]
},
{
"tb": 70400,
"tbk": 2,
"tl": 826858,
"mb": 35200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
183,
184,
266
]
},
{
"tb": 35200,
"tbk": 1,
"tl": 10566,
"mb": 35200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
267,
268,
269,
270,
271,
272,
273
]
},
{
"tb": 24,
"tbk": 1,
"tl": 616394,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
274,
275,
276,
277,
278,
279,
280,
281,
282,
125
]
},
{
"tb": 32,
"tbk": 1,
"tl": 3245,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
76,
283,
284,
285,
286,
287
]
},
{
"tb": 131008,
"tbk": 11,
"tl": 1784311,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
288,
289,
290,
291,
18
]
},
{
"tb": 32,
"tbk": 1,
"tl": 164,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
48,
49,
50,
51,
52,
53,
292,
293,
294
]
},
{
"tb": 192,
"tbk": 3,
"tl": 15863,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
20,
21,
22,
196,
197,
198,
295
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 78308,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
20,
21,
22,
196,
296,
297,
298
]
},
{
"tb": 1126400,
"tbk": 1,
"tl": 7370,
"mb": 1126400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
20,
21,
22,
299,
300,
301,
302
]
},
{
"tb": 32,
"tbk": 1,
"tl": 61,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
303,
304,
305,
306,
307,
308,
309,
310,
311
]
},
{
"tb": 2208,
"tbk": 3,
"tl": 2242,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
312,
259,
260,
101
]
},
{
"tb": 70400,
"tbk": 1,
"tl": 13637,
"mb": 70400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
48,
49,
50,
51,
52,
53,
313,
314,
265
]
},
{
"tb": 262080,
"tbk": 12,
"tl": 128,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
288,
289,
290,
315,
316
]
},
{
"tb": 4968,
"tbk": 9,
"tl": 2908,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
317,
318,
319,
320,
321,
322
]
},
{
"tb": 59312,
"tbk": 1093,
"tl": 2100768,
"mb": 12864,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
249,
323,
324,
325,
326,
327,
328
]
},
{
"tb": 192,
"tbk": 1,
"tl": 21770,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
102,
174,
175,
176,
55,
56,
57,
58,
178,
10
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 64593987,
"mb": 1024,
"mbk": 1,
"gb": 1024,
"gbk": 1,
"eb": 1024,
"ebk": 1,
"fs": [
329,
330,
331,
332,
333,
334,
335,
336,
337,
338,
339,
340,
341,
342,
343,
344,
345,
346,
347,
348,
349
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3560,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
312,
350,
351,
352
]
},
{
"tb": 6624,
"tbk": 2,
"tl": 51991566,
"mb": 6600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
353,
354,
355,
356,
357,
358,
359,
360,
361
]
},
{
"tb": 2880,
"tbk": 10,
"tl": 3450,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
59,
362,
363,
364,
365,
366,
367
]
},
{
"tb": 128,
"tbk": 1,
"tl": 19480,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
163,
368,
369,
370,
371,
372,
373,
265
]
},
{
"tb": 24,
"tbk": 1,
"tl": 594747,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
374,
375,
194,
195,
88,
10
]
},
{
"tb": 52800,
"tbk": 1,
"tl": 59558047,
"mb": 52800,
"mbk": 1,
"gb": 52800,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
102,
376,
377,
378,
379,
380,
381,
382,
383
]
},
{
"tb": 32,
"tbk": 2,
"tl": 594914,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
384,
385,
386,
387,
388,
389,
390,
391
]
},
{
"tb": 8,
"tbk": 1,
"tl": 5889,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
59,
60,
392,
393,
394,
395,
396,
397,
398,
399
]
},
{
"tb": 480,
"tbk": 4,
"tl": 193,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
76,
283,
284,
285,
400,
401
]
},
{
"tb": 192,
"tbk": 2,
"tl": 188,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
288,
289,
290,
402,
403
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3791,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
102,
174,
175,
176,
55,
56,
57,
404,
405,
351
]
},
{
"tb": 2306867200,
"tbk": 65536,
"tl": 787743,
"mb": 35200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
48,
49,
50,
406,
407,
408,
409,
410,
411
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1660,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
312,
401,
122,
10
]
},
{
"tb": 256,
"tbk": 1,
"tl": 516,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
59,
60,
61,
62,
63,
64,
65,
412,
413
]
},
{
"tb": 16,
"tbk": 1,
"tl": 21779,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
48,
49,
50,
51,
52,
53,
414,
415,
416,
417,
418
]
},
{
"tb": 8,
"tbk": 1,
"tl": 23,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
59,
60,
419,
420,
421,
422,
423,
424,
425,
426
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 64547663,
"mb": 65536,
"mbk": 1,
"gb": 65536,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
20,
21,
22,
196,
197,
427,
428
]
},
{
"tb": 3380627,
"tbk": 7,
"tl": 20166,
"mb": 2253254,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
249,
250,
251,
252,
429
]
},
{
"tb": 13088,
"tbk": 92,
"tl": 1161572,
"mb": 13088,
"mbk": 92,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
163,
368,
369,
370,
371,
430,
43,
44
]
},
{
"tb": 131008,
"tbk": 11,
"tl": 12820,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
288,
289,
290,
291,
431
]
},
{
"tb": 128,
"tbk": 1,
"tl": 12421,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
432,
433,
434,
435,
302
]
},
{
"tb": 144,
"tbk": 1,
"tl": 21790,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
436,
437,
438,
439,
416,
417,
418,
440,
178,
10
]
},
{
"tb": 256,
"tbk": 1,
"tl": 10,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
48,
49,
50,
51,
52,
53,
441,
101,
10
]
},
{
"tb": 512,
"tbk": 1,
"tl": 11467,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
442,
443,
444,
445,
446,
447,
448,
449
]
},
{
"tb": 149504,
"tbk": 3,
"tl": 16273,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
20,
21,
22,
196,
450,
451,
452
]
},
{
"tb": 80,
"tbk": 1,
"tl": 594458,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
453,
454,
455,
456,
457,
458,
459,
460,
461
]
},
{
"tb": 24,
"tbk": 1,
"tl": 4982786,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
462,
463,
464,
465,
466,
10,
11
]
},
{
"tb": 1126400,
"tbk": 1,
"tl": 40323,
"mb": 1126400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
467,
468,
469,
470,
287,
351,
352
]
},
{
"tb": 32,
"tbk": 1,
"tl": 61,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
303,
471,
472,
473,
474,
475,
476,
477,
478
]
},
{
"tb": 52800,
"tbk": 1,
"tl": 5005581,
"mb": 52800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
102,
174,
175,
176,
55,
56,
57,
479,
480,
481
]
},
{
"tb": 512,
"tbk": 1,
"tl": 21819,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
482,
483,
484,
485,
10
]
},
{
"tb": 35200,
"tbk": 1,
"tl": 351366,
"mb": 35200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
267,
268,
269,
270,
486,
487,
488
]
},
{
"tb": 8,
"tbk": 1,
"tl": 53204200,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
489,
490,
491,
492,
493,
494,
495,
496,
497
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 3521609,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
163,
368,
369,
370,
498,
499,
500,
501
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 64547454,
"mb": 262144,
"mbk": 1,
"gb": 262144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
20,
21,
22,
196,
197,
502,
503
]
},
{
"tb": 96,
"tbk": 1,
"tl": 12,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
504,
89,
90,
10,
11
]
},
{
"tb": 288358400,
"tbk": 2200,
"tl": 10882292307,
"mb": 288358400,
"mbk": 2200,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
479
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 33772,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
48,
49,
50,
406,
407,
408,
505,
506,
10
]
},
{
"tb": 8,
"tbk": 1,
"tl": 5877,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
59,
60,
507,
508,
509,
510,
511,
512,
513,
514
]
},
{
"tb": 192,
"tbk": 2,
"tl": 13599,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
288,
289,
290,
402,
515
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
516,
89,
90,
10,
11
]
},
{
"tb": 96,
"tbk": 1,
"tl": 13609,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
517,
518,
519,
520,
25
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 3709047,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
183,
184,
521
]
},
{
"tb": 1440,
"tbk": 12,
"tl": 2458,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
522,
523,
524,
525,
526
]
},
{
"tb": 288358400,
"tbk": 2200,
"tl": 142842721350,
"mb": 288358400,
"mbk": 2200,
"gb": 288358400,
"gbk": 2200,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
20,
21,
22,
196,
527,
528,
529
]
},
{
"tb": 512,
"tbk": 1,
"tl": 8438,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
20,
21,
22,
530,
92,
25,
26
]
},
{
"tb": 64,
"tbk": 1,
"tl": 12779,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
288,
289,
290,
531,
431
]
},
{
"tb": 144,
"tbk": 1,
"tl": 45603,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
532,
533,
534,
535,
536,
537,
101,
10,
11
]
},
{
"tb": 8,
"tbk": 1,
"tl": 5904,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
59,
60,
538,
539,
540,
541,
542,
543,
544,
545
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 43,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
20,
21,
22,
196,
197,
198,
546
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 3555,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
163,
254,
255,
256,
257,
258,
350,
351
]
},
{
"tb": 896,
"tbk": 6,
"tl": 19583,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
288,
289,
290,
547,
548
]
},
{
"tb": 8,
"tbk": 1,
"tl": 4038,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
549,
550,
551,
552,
553,
554,
555,
556,
557
]
},
{
"tb": 2824,
"tbk": 15,
"tl": 411,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
59,
60,
94,
95,
96,
558,
559,
560,
561,
65,
412
]
},
{
"tb": 2306867200,
"tbk": 275,
"tl": 7346549234,
"mb": 2306867200,
"mbk": 275,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
113,
114,
115,
116,
117,
562,
563,
564
]
},
{
"tb": 256,
"tbk": 3,
"tl": 1188946,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
565,
566,
567,
568,
569
]
},
{
"tb": 480,
"tbk": 4,
"tl": 8267,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
76,
283,
284,
285,
570,
571
]
},
{
"tb": 264,
"tbk": 2,
"tl": 1225283,
"mb": 264,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
102,
572,
573,
574,
575,
576,
577,
578,
579
]
},
{
"tb": 480,
"tbk": 4,
"tl": 195,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
76,
283,
284,
285,
400,
350
]
},
{
"tb": 35200,
"tbk": 1,
"tl": 10581,
"mb": 35200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
267,
268,
269,
270,
580,
272,
273
]
},
{
"tb": 128,
"tbk": 1,
"tl": 2934,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
581,
582,
583,
584,
585,
586,
587,
588
]
},
{
"tb": 2097152,
"tbk": 16384,
"tl": 20899,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
48,
49,
50,
51,
52,
53,
589,
590,
591
]
},
{
"tb": 11904,
"tbk": 93,
"tl": 125,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
592,
593,
594,
595,
596,
597,
598,
599
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 3072,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
163,
600,
601,
602,
603,
604,
605,
606,
607
]
},
{
"tb": 48,
"tbk": 1,
"tl": 64579662,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
608,
609,
610,
611,
612,
613,
614,
10
]
},
{
"tb": 70224,
"tbk": 154,
"tl": 35051,
"mb": 20520,
"mbk": 45,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
615,
616,
617,
618,
619,
620
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3396481,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
621,
622,
623,
624,
625,
626
]
},
{
"tb": 160,
"tbk": 1,
"tl": 13628,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
627,
628,
629,
630,
265
]
},
{
"tb": 24,
"tbk": 1,
"tl": 4982777,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
102,
631,
632,
633,
634,
10,
11
]
},
{
"tb": 48,
"tbk": 1,
"tl": 10587,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
635,
636,
637,
638,
639,
640,
641,
642,
643
]
},
{
"tb": 2000,
"tbk": 10,
"tl": 165,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
59,
644,
645,
646,
647,
648,
649
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
128,
129,
130,
131,
132,
133,
134,
135,
650,
265
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
651,
652,
653,
614,
10,
11
]
},
{
"tb": 48,
"tbk": 2,
"tl": 1189212,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
274,
275,
276,
277,
278,
279,
280,
281,
654,
655
]
},
{
"tb": 480,
"tbk": 4,
"tl": 12757,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
76,
283,
284,
285,
570,
656
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 37762,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
467,
468,
469,
657,
658,
122,
10
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
651,
652,
37,
26
]
},
{
"tb": 72,
"tbk": 3,
"tl": 65328,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
274,
275,
276,
277,
278,
279,
280,
281,
415,
416,
417,
418
]
},
{
"tb": 64,
"tbk": 1,
"tl": 21551,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
59,
60,
94,
95,
96,
558,
559,
560,
659,
178,
10
]
},
{
"tb": 3968,
"tbk": 27,
"tl": 63,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
59,
60,
94,
95,
96,
558,
559,
560,
660,
259,
260
]
},
{
"tb": 10336,
"tbk": 32,
"tl": 104135,
"mb": 10336,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
163,
368,
369,
370,
371,
430,
661,
662
]
},
{
"tb": 32,
"tbk": 1,
"tl": 19490,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
163,
368,
369,
370,
371,
663,
373,
265
]
},
{
"tb": 2880,
"tbk": 12,
"tl": 1799,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
288,
289,
290,
664,
665
]
},
{
"tb": 72,
"tbk": 1,
"tl": 5099482,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
666,
667,
668,
669,
670,
671,
672,
673,
674
]
},
{
"tb": 2824,
"tbk": 15,
"tl": 415,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
59,
60,
94,
95,
96,
558,
559,
560,
561,
65,
675
]
},
{
"tb": 16,
"tbk": 1,
"tl": 64573869,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
676,
677,
678,
679,
680,
681,
682,
683
]
},
{
"tb": 149504,
"tbk": 3,
"tl": 18494,
"mb": 147456,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
20,
21,
22,
196,
684,
685,
686
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 3684758,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
183,
184,
687
]
},
{
"tb": 256,
"tbk": 1,
"tl": 8285,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
48,
49,
50,
406,
407,
408,
688,
689,
690
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 41537,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
48,
49,
50,
406,
407,
408,
691,
122,
10
]
},
{
"tb": 744,
"tbk": 3,
"tl": 2836,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
59,
60,
94,
95,
96,
97,
98,
99,
692,
693,
694
]
},
{
"tb": 128,
"tbk": 1,
"tl": 137,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
48,
49,
50,
406,
407,
408,
695,
194,
696
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 6240359,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
20,
21,
22,
196,
197,
198,
697
]
},
{
"tb": 96,
"tbk": 1,
"tl": 64579736,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
698,
699,
700,
701,
702,
703,
704,
705,
706
]
},
{
"tb": 128,
"tbk": 1,
"tl": 264,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
707,
708,
709,
710,
259
]
},
{
"tb": 72,
"tbk": 1,
"tl": 42108,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
711,
352,
10,
11
]
},
{
"tb": 2496,
"tbk": 24,
"tl": 336,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
59,
712,
713,
714,
715,
716,
717
]
},
{
"tb": 96,
"tbk": 1,
"tl": 3687568,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
14,
15,
16,
718,
10
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1784267,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
288,
289,
290,
531,
18
]
},
{
"tb": 1126400,
"tbk": 1,
"tl": 41340,
"mb": 1126400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
467,
468,
469,
719,
287,
351,
352
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1654,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
163,
254,
255,
256,
257,
258,
401,
122
]
},
{
"tb": 70400,
"tbk": 1,
"tl": 132,
"mb": 70400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
20,
21,
22,
299,
720,
721,
265
]
},
{
"tb": 2400,
"tbk": 20,
"tl": 1656,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
76,
283,
284,
285,
722,
65
]
},
{
"tb": 32,
"tbk": 1,
"tl": 20,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
20,
21,
22,
299,
723,
721,
265
]
},
{
"tb": 10336,
"tbk": 32,
"tl": 89836,
"mb": 10336,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
163,
368,
369,
370,
371,
430,
724,
302
]
},
{
"tb": 2097152,
"tbk": 8,
"tl": 389335,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
725,
726,
727,
728,
729,
730,
731,
732
]
},
{
"tb": 8,
"tbk": 1,
"tl": 4638,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
59,
60,
733,
734,
735,
736,
737,
738,
739,
740
]
},
{
"tb": 1196032,
"tbk": 3,
"tl": 31056,
"mb": 1196032,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
20,
21,
22,
196,
741,
742,
686
]
},
{
"tb": 2976,
"tbk": 3,
"tl": 38570,
"mb": 2976,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
163,
254,
255,
256,
257,
743,
44,
45
]
},
{
"tb": 256,
"tbk": 1,
"tl": 534,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
59,
60,
61,
62,
63,
64,
65,
675,
744
]
},
{
"tb": 32,
"tbk": 1,
"tl": 3687561,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
76,
283,
284,
285,
745,
10
]
},
{
"tb": 786432,
"tbk": 3,
"tl": 65492,
"mb": 786432,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
177
]
},
{
"tb": 240,
"tbk": 2,
"tl": 616371,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
746,
125,
10,
11
]
},
{
"tb": 512,
"tbk": 1,
"tl": 15,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
20,
21,
22,
196,
246,
747,
47
]
},
{
"tb": 288,
"tbk": 1,
"tl": 10926,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
748,
749,
750,
751,
686
]
},
{
"tb": 96,
"tbk": 1,
"tl": 22,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
504,
85,
752,
753,
25,
26
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1134,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
48,
49,
50,
406,
407,
408,
754,
694,
755
]
},
{
"tb": 96,
"tbk": 1,
"tl": 13,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
14,
15,
16,
756,
112
]
},
{
"tb": 80,
"tbk": 1,
"tl": 64952264,
"mb": 80,
"mbk": 1,
"gb": 80,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
757,
758,
759,
760,
761,
762,
763,
764,
765
]
},
{
"tb": 524320,
"tbk": 3,
"tl": 9178,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
20,
21,
22,
196,
766,
767,
768
]
},
{
"tb": 24,
"tbk": 1,
"tl": 134,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
102,
769,
770,
771,
772,
773,
774,
775,
776
]
},
{
"tb": 16,
"tbk": 1,
"tl": 64547690,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
777,
778,
779,
780,
781,
782,
783,
784,
785
]
},
{
"tb": 1152,
"tbk": 4,
"tl": 175,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
786,
787,
788,
789,
790
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 34,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
48,
49,
50,
51,
52,
53,
313,
791,
10
]
},
{
"tb": 11904,
"tbk": 93,
"tl": 95,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
20,
21,
22,
299,
792,
44,
45
]
},
{
"tb": 128,
"tbk": 1,
"tl": 126,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
183,
184,
793
]
},
{
"tb": 24,
"tbk": 1,
"tl": 4982771,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
794,
795,
796,
797,
798,
10,
11
]
},
{
"tb": 96,
"tbk": 1,
"tl": 14363,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
14,
15,
16,
799,
45
]
},
{
"tb": 79744,
"tbk": 324,
"tl": 209724,
"mb": 16000,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
163,
800,
801,
802,
803,
804,
805,
806,
807
]
},
{
"tb": 24,
"tbk": 1,
"tl": 4982781,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
808,
809,
810,
811,
812,
10,
11
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
29,
30,
31,
32,
33,
34,
35,
813,
37
]
},
{
"tb": 256,
"tbk": 1,
"tl": 19552,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
186,
229,
230,
231,
232,
233,
814,
815
]
},
{
"tb": 384,
"tbk": 2,
"tl": 97,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
816,
817,
818,
819,
820,
821,
822,
823,
824
]
},
{
"tb": 48,
"tbk": 2,
"tl": 1232756,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
274,
275,
276,
277,
278,
279,
280,
281,
825,
826
]
},
{
"tb": 524320,
"tbk": 3,
"tl": 9169,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
20,
21,
22,
196,
246,
827,
767
]
},
{
"tb": 96,
"tbk": 1,
"tl": 3787,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
828,
829,
830,
831,
351
]
},
{
"tb": 262144,
"tbk": 2,
"tl": 7196120,
"mb": 262144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
48,
49,
50,
406,
407,
408,
832,
833,
834
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 1745710,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
183,
184,
835
]
},
{
"tb": 320,
"tbk": 2,
"tl": 1189203,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
836,
837,
838,
839,
655
]
},
{
"tb": 96,
"tbk": 1,
"tl": 35,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
14,
15,
16,
840,
92
]
},
{
"tb": 299008,
"tbk": 3,
"tl": 28519,
"mb": 299008,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
163,
368,
369,
370,
498,
841,
842,
843
]
},
{
"tb": 40,
"tbk": 1,
"tl": 53204236,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
844,
845,
846,
847,
848,
849,
850,
851,
852
]
},
{
"tb": 2306867200,
"tbk": 1,
"tl": 1372447,
"mb": 2306867200,
"mbk": 1,
"gb": 2306867200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
48,
49,
50,
51,
52,
53,
853,
854,
855
]
},
{
"tb": 128,
"tbk": 1,
"tl": 594734,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
48,
49,
50,
406,
407,
408,
695,
194,
195
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 36724,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
76,
77,
78,
79,
80,
856
]
},
{
"tb": 8,
"tbk": 1,
"tl": 5883,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
59,
60,
857,
858,
859,
860,
861,
862,
863,
864
]
},
{
"tb": 192,
"tbk": 1,
"tl": 13590,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
865,
866,
867,
868,
25
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 1745679,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
183,
184,
869
]
},
{
"tb": 2824,
"tbk": 15,
"tl": 73,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
59,
60,
94,
95,
96,
558,
559,
560,
660,
401,
122
]
},
{
"tb": 32,
"tbk": 1,
"tl": 10670,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
48,
49,
50,
406,
407,
408,
870,
265,
26
]
},
{
"tb": 512,
"tbk": 1,
"tl": 8442,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
20,
21,
22,
871,
92,
25,
26
]
},
{
"tb": 11904,
"tbk": 3,
"tl": 1175,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
183,
184,
872
]
},
{
"tb": 512,
"tbk": 1,
"tl": 48,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
873,
874,
875,
876,
877,
878,
879,
880
]
},
{
"tb": 2824,
"tbk": 15,
"tl": 75,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
59,
60,
94,
95,
96,
558,
559,
560,
660,
350,
351
]
},
{
"tb": 1088,
"tbk": 2,
"tl": 31,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
881,
882,
883,
884,
885,
886
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 38550,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
48,
49,
50,
51,
52,
53,
313,
887,
112
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
29,
30,
31,
32,
33,
34,
35,
813,
653
]
},
{
"tb": 32,
"tbk": 1,
"tl": 3687556,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
76,
283,
284,
285,
888,
10
]
},
{
"tb": 64,
"tbk": 1,
"tl": 168,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
288,
289,
290,
889,
403
]
},
{
"tb": 48,
"tbk": 2,
"tl": 124,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
890,
237,
238,
239,
240,
241
]
},
{
"tb": 576,
"tbk": 2,
"tl": 60,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
891,
892,
893,
894,
895,
896,
897,
898,
899
]
},
{
"tb": 384,
"tbk": 1,
"tl": 594632,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
900,
901,
902,
903,
904,
905,
906,
907,
908
]
},
{
"tb": 2883584,
"tbk": 11,
"tl": 6740773,
"mb": 2883584,
"mbk": 11,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
20,
21,
22,
196,
909,
910,
911
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 389796,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
20,
21,
22,
196,
197,
198,
912
]
},
{
"tb": 70401,
"tbk": 1,
"tl": 180,
"mb": 70401,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
29,
30,
31,
200,
201,
202,
913,
204,
205
]
},
{
"tb": 2280,
"tbk": 5,
"tl": 1809,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
615,
616,
617,
914,
915,
916
]
},
{
"tb": 8832,
"tbk": 16,
"tl": 3239,
"mb": 2760,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
317,
318,
319,
917,
918,
919
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3326,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
42,
661,
662,
920
]
},
{
"tb": 24,
"tbk": 1,
"tl": 3396490,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
921,
922,
923,
924,
925,
926,
927,
928,
929
]
},
{
"tb": 1920,
"tbk": 10,
"tl": 3540,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
59,
930,
931,
932,
933,
934,
935
]
},
{
"tb": 11904,
"tbk": 3,
"tl": 1642,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
113,
114,
115,
116,
936,
260,
101,
10
]
},
{
"tb": 4608,
"tbk": 24,
"tl": 8653,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
59,
930,
931,
932,
937,
938,
939
]
},
{
"tb": 96,
"tbk": 1,
"tl": 16,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
436,
940,
941,
942,
943,
944,
945,
946,
947
]
},
{
"tb": 8,
"tbk": 1,
"tl": 5895,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
59,
60,
948,
949,
950,
951,
952,
953,
954,
955
]
},
{
"tb": 70400,
"tbk": 1,
"tl": 13582,
"mb": 70400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
48,
49,
50,
51,
52,
53,
956,
957,
958
]
},
{
"tb": 16,
"tbk": 1,
"tl": 616390,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
48,
49,
50,
51,
52,
53,
414,
282,
125
]
},
{
"tb": 512,
"tbk": 1,
"tl": 18,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
20,
21,
22,
196,
246,
959,
92
]
},
{
"tb": 1126400,
"tbk": 1,
"tl": 14304,
"mb": 1126400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
20,
21,
22,
299,
300,
960,
302
]
},
{
"tb": 256,
"tbk": 1,
"tl": 14651,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
20,
21,
22,
299,
961,
962,
265
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 446115,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
20,
21,
22,
196,
450,
963,
964
]
},
{
"tb": 96,
"tbk": 1,
"tl": 34,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
504,
85,
86,
87,
88,
10
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2890,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
42,
724,
302,
965
]
},
{
"tb": 16,
"tbk": 1,
"tl": 102,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
516,
85,
752,
753,
25
]
},
{
"tb": 64,
"tbk": 1,
"tl": 13595,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
288,
289,
290,
889,
515
]
},
{
"tb": 24,
"tbk": 1,
"tl": 11,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
102,
174,
175,
176,
55,
56,
57,
404,
966,
614
]
},
{
"tb": 96,
"tbk": 1,
"tl": 39316,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
76,
967,
968,
969,
970,
287
]
},
{
"tb": 16,
"tbk": 1,
"tl": 123,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
516,
85,
86,
87,
88
]
},
{
"tb": 1126400,
"tbk": 32,
"tl": 124663,
"mb": 1126400,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
48,
49,
50,
406,
407,
408,
971,
972,
973
]
},
{
"tb": 24,
"tbk": 1,
"tl": 148,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
374,
375,
194,
696,
753,
25
]
},
{
"tb": 1440,
"tbk": 12,
"tl": 4637,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
522,
523,
524,
525,
974
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 6141315,
"mb": 2097152,
"mbk": 1,
"gb": 2097152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
163,
368,
369,
370,
498,
975,
411,
976
]
},
{
"tb": 1968,
"tbk": 2,
"tl": 57,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
977,
978,
979,
980,
981,
982
]
},
{
"tb": 11904,
"tbk": 3,
"tl": 1773,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
113,
983,
984,
985,
986,
987,
988,
989,
990
]
},
{
"tb": 3968,
"tbk": 27,
"tl": 515,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
59,
60,
94,
95,
96,
558,
559,
560,
561,
65,
66
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 5114196,
"mb": 2097152,
"mbk": 1,
"gb": 2097152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
163,
368,
369,
370,
498,
841,
842,
991
]
},
{
"tb": 216,
"tbk": 1,
"tl": 64547809,
"mb": 216,
"mbk": 1,
"gb": 216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
138,
992,
993,
994,
995,
996,
997,
998,
999
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 33693,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
20,
21,
22,
196,
197,
198,
1000
]
},
{
"tb": 768,
"tbk": 1,
"tl": 4006,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
102,
1001,
1002,
1003,
1004,
1005,
1006,
1007,
1008
]
},
{
"tb": 128,
"tbk": 1,
"tl": 148302,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
267,
268,
269,
270,
1009,
1010,
1011
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 11874,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
20,
21,
22,
299,
300,
1012,
662
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3598273,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
102,
1013,
1014,
1015,
1016,
1017,
1018,
1019,
1020
]
},
{
"tb": 96,
"tbk": 1,
"tl": 10,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
14,
15,
16,
1021,
265
]
},
{
"tb": 48,
"tbk": 1,
"tl": 148307,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
267,
268,
269,
270,
1022,
1010,
1011
]
},
{
"tb": 30386,
"tbk": 27,
"tl": 131005,
"mb": 15232,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
76,
77,
78,
79,
80,
1023
]
},
{
"tb": 11904,
"tbk": 3,
"tl": 395,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
183,
184,
1024
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
653
]
},
{
"tb": 128,
"tbk": 1,
"tl": 678524,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
267,
268,
269,
270,
1025,
90,
10
]
},
{
"tb": 95232,
"tbk": 3,
"tl": 1187,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
183,
184,
1026
]
},
{
"tb": 288358400,
"tbk": 2200,
"tl": 124113511365,
"mb": 288358400,
"mbk": 2200,
"gb": 288358400,
"gbk": 2200,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
48,
49,
50,
51,
52,
53,
1027,
1028,
1029
]
},
{
"tb": 1040,
"tbk": 10,
"tl": 248,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
59,
712,
713,
714,
1030,
1031,
1032
]
},
{
"tb": 432,
"tbk": 3,
"tl": 1163,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
267,
268,
269,
270,
1033,
248,
694
]
},
{
"tb": 299008,
"tbk": 3,
"tl": 30623,
"mb": 299008,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
163,
368,
369,
370,
498,
1034,
1035,
686
]
},
{
"tb": 256,
"tbk": 1,
"tl": 143,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
186,
187,
188,
189,
190,
191,
192,
193,
194,
696
]
},
{
"tb": 128,
"tbk": 1,
"tl": 167,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
48,
49,
50,
51,
52,
53,
1036,
293,
294
]
},
{
"tb": 16,
"tbk": 1,
"tl": 104,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
752,
753,
25
]
},
{
"tb": 24,
"tbk": 1,
"tl": 59558291,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
794,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1848444,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1045,
1046,
1047,
1048,
1049,
1050,
1051,
1052
]
},
{
"tb": 96,
"tbk": 1,
"tl": 12783,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
12,
13,
14,
15,
16,
17,
431
]
},
{
"tb": 64,
"tbk": 1,
"tl": 12773,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
20,
21,
22,
1053,
1054,
25,
26
]
},
{
"tb": 48,
"tbk": 1,
"tl": 10500,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1055,
1056,
1057,
1058,
1059,
1060,
1061,
1062,
1063
]
},
{
"tb": 160,
"tbk": 1,
"tl": 13576,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1064,
1065,
1066,
1067,
1068,
1069,
1070,
1071,
1072
]
},
{
"tb": 1488,
"tbk": 3,
"tl": 1826,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
1073,
1074,
1075,
1076,
1077,
1078,
1079,
1080
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 51831465,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
20,
21,
22,
196,
261,
262,
1081
]
},
{
"tb": 70432,
"tbk": 3,
"tl": 7725518,
"mb": 70432,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
1082,
1083,
1084,
1085,
1086,
1087,
1088,
1089
]
},
{
"tb": 56,
"tbk": 1,
"tl": 2733,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
1090,
965,
265,
26
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1141,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
59,
60,
94,
95,
96,
97,
98,
99,
1091,
694,
755
]
},
{
"tb": 1440,
"tbk": 12,
"tl": 342,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
76,
283,
284,
285,
400,
259
]
},
{
"tb": 8,
"tbk": 1,
"tl": 59444590,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
489,
1092,
1093,
1094,
1095,
1096,
1097,
1098,
1099
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 3508924,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
163,
368,
369,
370,
498,
841,
842,
1100
]
},
{
"tb": 1126432,
"tbk": 33,
"tl": 118405,
"mb": 1126400,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
19,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
404
]
},
{
"tb": 96,
"tbk": 2,
"tl": 616366,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
76,
283,
284,
285,
1101,
1102
]
}
],
"ftbl": [
"[root]",
"0x5b29d41d43b9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5b29d40a330c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b29d4172328: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d4172328: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d4172328: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5b29d41aa205: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5b29d41aa205: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5b29d41aa205: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5b29d40fdea3: winter_prover::Prover::generate_proof (prover/src/lib.rs:510:39)",
"0x5b29d410f2ee: winter_prover::Prover::prove (prover/src/lib.rs:175:37)",
"0x5b29d406f27c: winterfell::main (winterfell/src/main.rs:54:17)",
"0x5b29d440cf79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5b29d440b709: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5b29d40bb281: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b29d40dba38: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b29d419c33e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b29d40fa350: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:543:13)",
"0x5b29d40881b6: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x5b29d40a64ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b29d41737d5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d41737d5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d41737d5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d401b7be: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x5b29d4011b34: winter_verifier::perform_verification (verifier/src/lib.rs:319:28)",
"0x5b29d40155da: winter_verifier::verify (verifier/src/lib.rs:111:21)",
"0x5b29d406f822: winterfell::main (winterfell/src/main.rs:71:11)",
"0x5b29d4398819: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5b29d439762a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b29d439a32c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d439a32c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d439a32c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5b29d436969c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5b29d436969c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5b29d436969c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5b29d400e084: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x5b29d400ddce: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x5b29d40151dd: winter_verifier::verify (verifier/src/lib.rs:96:32)",
"0x5b29d40a5a6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b29d4173875: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d4173875: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d4173875: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d404da4c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x5b29d4090e35: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x5b29d4094040: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x5b29d4146104: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x5b29d4022ca0: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x5b29d4011abc: winter_verifier::perform_verification (verifier/src/lib.rs:317:25)",
"0x5b29d4123e08: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d4123e08: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d4123e08: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5b29d41a9b85: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5b29d41a9b85: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5b29d41a9b85: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5b29d4172d83: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5b29d41a9d25: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5b29d41a9d25: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5b29d41a9d25: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5b29d40032c5: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x5b29d43cfa99: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5b29d43cfc0a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b29d4173646: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d4173646: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d4173646: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d404e882: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x5b29d407d46d: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x5b29d413d2d4: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x5b29d425678d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x5b29d4159ac3: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d4159ac3: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d4159ac3: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d4159ac3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bbbd4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b829a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e6654: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d406ed51: winterfell::main (winterfell/src/main.rs:22:32)",
"0x5b29d43972e9: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5b29d4395700: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b29d4395939: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b29d4395132: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b29d404e17c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x5b29d404631d: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x5b29d41d3847: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x5b29d4075245: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x5b29d4070247: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:176:13)",
"0x5b29d40f8b72: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:371:13)",
"0x5b29d40eaadf: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:41:22)",
"0x5b29d4035b39: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:36)",
"0x5b29d41001b5: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:21)",
"0x5b29d414e518: winter_prover::trace::Trace::validate (src/trace/mod.rs:123:26)",
"0x5b29d4100578: winter_prover::Prover::generate_proof (prover/src/lib.rs:379:17)",
"0x5b29d401f325: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x5b29d4011a15: winter_verifier::perform_verification (verifier/src/lib.rs:311:25)",
"0x5b29d4022cb7: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x5b29d43c361c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d43c361c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d43c361c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5b29d43c35cc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5b29d43c35cc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5b29d43c35cc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5b29d4083c0e: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x5b29d40ff19c: winter_prover::Prover::generate_proof (prover/src/lib.rs:600:25)",
"0x5b29d409c7bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b29d416e36f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d416e36f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d416e36f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d416e36f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bb89d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b9895: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e6bdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d414dfe2: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:140:32)",
"0x5b29d41294ab: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x5b29d40fe02d: winter_prover::Prover::generate_proof (prover/src/lib.rs:524:9)",
"0x5b29d40a069c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b29d4173af5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d4173af5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d4173af5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d40ddc07: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5b29d403b9bd: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x5b29d4037c90: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x5b29d403a614: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x5b29d4117dca: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x5b29d40ff30a: winter_prover::Prover::generate_proof (prover/src/lib.rs:608:34)",
"0x5b29d4009a78: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x5b29d4036be1: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:135:9)",
"0x5b29d4100266: winter_prover::Prover::generate_proof (prover/src/lib.rs:417:21)",
"0x5b29d401e21f: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x5b29d4129347: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x5b29d440b9ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b29d440d04c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d440d04c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d440d04c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5b29d440ac7c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5b29d440ac7c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5b29d440ac7c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5b29d4406ece: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x5b29d400e29f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x5b29d4089df3: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x5b29d409bd4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b29d415759f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d415759f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d415759f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d415759f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41a70d6: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5b29d41b9bc5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e730d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d40153a8: winter_verifier::verify (verifier/src/lib.rs:102:24)",
"0x5b29d43d29e9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d43d29e9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d43d29e9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d43d29e9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5b29d43d2e2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d43d2df7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d43d2fce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d43d54c9: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x5b29d415a4ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d415a4ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d415a4ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d415a4ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bcd3d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b75f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e721d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d4022ff2: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x5b29d4099dec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b29d4164e94: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d4164e94: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d4164e94: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d4164e94: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5b29d41bb5da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b9ec4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e6c5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d404c46e: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x5b29d406fe36: <winterfell::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (winterfell/src/main.rs:133:9)",
"0x5b29d4015330: winter_verifier::verify (verifier/src/lib.rs:98:38)",
"0x5b29d4172a22: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d4172a22: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d4172a22: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5b29d4003238: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x5b29d40fce23: winter_prover::Prover::generate_proof (prover/src/lib.rs:423:33)",
"0x5b29d440aadc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x5b29d4409d6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x5b29d4409ae8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x5b29d4409ae8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x5b29d4409124: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5b29d4406d43: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x5b29d3fe389d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x5b29d4099b4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b29d40f8012: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d40f8012: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d40f8012: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5b29d41aab05: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5b29d41aab05: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5b29d41aab05: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5b29d3ff8b95: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x5b29d40f9010: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:354:9)",
"0x5b29d4035a9c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:51:13)",
"0x5b29d40ddae7: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5b29d4077e2f: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x5b29d4247338: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x5b29d4007d08: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x5b29d42f39e9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5b29d42f39e9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5b29d42f39e9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5b29d41140af: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x5b29d3ff2a26: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5b29d4146714: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5b29d40a8edc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b29d416b25f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d416b25f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d416b25f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d416b25f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41a818b: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5b29d41b88d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e656d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d40fc7f7: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:36)",
"0x5b29d409d23c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b29d4157bd9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d4157bd9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d4157bd9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d4157bd9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bc00a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b9c44: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e6c2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d40054b2: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x5b29d41d67a8: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:216:31)",
"0x5b29d41f4d36: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5b29d4212bd0: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5b29d41e0f66: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5b29d41e88f6: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5b29d40f84c4: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d40f84c4: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d40f84c4: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5b29d41a8bf6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5b29d40700ad: <winterfell::WorkAir as winter_air::air::Air>::new (winterfell/src/main.rs:151:23)",
"0x5b29d41d7f36: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:226:17)",
"0x5b29d41f219e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5b29d3fef4f5: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x5b29d411c55c: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x5b29d41ca129: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x5b29d411bb36: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x5b29d411f296: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x5b29d40f8bcf: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:369:9)",
"0x5b29d40c86d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b29d40db7c8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b29d419a67e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b29d4094216: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x5b29d40779fe: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x5b29d4138b6c: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x5b29d4256b73: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x5b29d440bea0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b29d440c0d9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b29d440c3d2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b29d440d159: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x5b29d3ff132d: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x5b29d4044c84: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d4044c84: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d4044c84: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5b29d41a8c56: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5b29d407ca4c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x5b29d407f3c0: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x5b29d40840bd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x5b29d403b30f: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x5b29d403a506: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x5b29d410eacc: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:701:36)",
"0x5b29d4090b7f: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x5b29d401550b: winter_verifier::verify (verifier/src/lib.rs:109:19)",
"0x5b29d3fe388c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x5b29d4124511: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d4124511: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d4124511: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5b29d41a8c80: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5b29d413e1ce: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x5b29d4015038: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:216:32)",
"0x5b29d41f4e5f: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5b29d40a306c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b29d4123f38: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d4123f38: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d4123f38: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5b29d41aa7c5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5b29d41aa7c5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5b29d41aa7c5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5b29d3ff08e2: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x5b29d4036973: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:33)",
"0x5b29d42a6840: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b29d42a6aa9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b29d42b6111: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b29d4046999: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x5b29d4016845: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x5b29d40d1fe1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b29d40db0d8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b29d419967d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b29d40fa3d4: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:541:17)",
"0x5b29d41f8d85: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x5b29d41f8e16: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5b29d4011edf: winter_verifier::perform_verification (verifier/src/lib.rs:228:13)",
"0x5b29d408b222: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x5b29d41d4c5a: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x5b29d42486a7: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x5b29d412b889: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x5b29d4122485: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5b29d4111efa: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x5b29d4048b8e: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x5b29d413fd0d: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x5b29d409e49c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b29d415ab4f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d415ab4f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d415ab4f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d415ab4f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41a603e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5b29d41ba035: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e70ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d406f74e: winterfell::main (winterfell/src/main.rs:65:26)",
"0x5b29d407caaf: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x5b29d41710a6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5b29d4146d01: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x5b29d3ff1461: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x5b29d408803f: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x5b29d411680b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5b29d4114a1d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5b29d4288c2a: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5b29d4267c7d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5b29d426a613: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5b29d407b237: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5b29d440c108: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x5b29d440c4ca: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x5b29d440c4ca: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x5b29d440c26e: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x5b29d440c26e: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x5b29d440c35d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x5b29d3fbdd82: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5b29d3fbdd82: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b29d3fbdd82: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d3fbdd82: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d3fbdd82: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d3fbdd82: std::io::buffered::bufwriter::BufWriter<W>::with_capacity (io/buffered/bufwriter.rs:115:33)",
"0x5b29d3fbdd82: std::io::buffered::linewriter::LineWriter<W>::with_capacity (io/buffered/linewriter.rs:109:29)",
"0x5b29d3fbdd82: std::io::buffered::linewriter::LineWriter<W>::new (io/buffered/linewriter.rs:89:9)",
"0x5b29d3fbdd82: std::io::stdio::stdout::{{closure}} (src/io/stdio.rs:618:62)",
"0x5b29d3fbdd82: std::sync::once_lock::OnceLock<T>::get_or_init::{{closure}} (src/sync/once_lock.rs:250:50)",
"0x5b29d3fbdd82: std::sync::once_lock::OnceLock<T>::initialize::{{closure}} (src/sync/once_lock.rs:376:19)",
"0x5b29d3fbdd82: std::sync::once::Once::call_once_force::{{closure}} (src/sync/once.rs:208:40)",
"0x5b29d3fbdd82: std::sys_common::once::futex::Once::call (sys_common/once/futex.rs:124:21)",
"0x5b29d3fbceca: std::sync::once::Once::call_once_force (src/sync/once.rs:208:9)",
"0x5b29d3fbceca: std::sync::once_lock::OnceLock<T>::initialize (src/sync/once_lock.rs:375:9)",
"0x5b29d44271c5: std::sync::once_lock::OnceLock<T>::get_or_try_init (src/sync/once_lock.rs:298:9)",
"0x5b29d44271c5: std::sync::once_lock::OnceLock<T>::get_or_init (src/sync/once_lock.rs:250:15)",
"0x5b29d44271c5: std::io::stdio::stdout (src/io/stdio.rs:618:14)",
"0x5b29d44271c5: std::io::stdio::print_to (src/io/stdio.rs:1020:21)",
"0x5b29d44271c5: std::io::stdio::_print (src/io/stdio.rs:1097:5)",
"0x5b29d406f03a: winterfell::main (winterfell/src/main.rs:36:5)",
"0x5b29d401677b: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x5b29d40194b0: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x5b29d40ff217: winter_prover::Prover::generate_proof (prover/src/lib.rs:603:29)",
"0x5b29d40a1b7c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b29d415b19f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d415b19f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d415b19f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d415b19f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bc54d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b9355: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e6ddd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d40371b1: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x5b29d43d248b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5b29d43d1e51: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5b29d43cb54b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5b29d43c5c41: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5b29d43c62c7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5b29d43d595b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5b29d4173b95: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d4173b95: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d4173b95: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d4044785: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5b29d4152b50: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x5b29d4145970: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x5b29d3fefd37: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x5b29d3ff8b7f: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x5b29d4169abf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d4169abf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d4169abf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d4169abf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bce7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b9925: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e65dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d3fe5788: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:228:23)",
"0x5b29d41670ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d41670ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d41670ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d41670ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bb44d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b7625: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e613d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d3fefd28: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x5b29d416e9dd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d416e9dd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d416e9dd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d416e9dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bbc7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b8ff4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e686a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d414567b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x5b29d407d2b7: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x5b29d4117b91: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x5b29d40fba42: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:512:13)",
"0x5b29d40886b2: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x5b29d41710e6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5b29d40166db: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x5b29d412445b: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5b29d412445b: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5b29d412445b: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5b29d40399d6: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x5b29d4038e23: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x5b29d410d6ee: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:669:26)",
"0x5b29d4144cf0: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x5b29d40117a8: winter_verifier::perform_verification (verifier/src/lib.rs:306:42)",
"0x5b29d3ff08f5: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x5b29d3ff0750: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5b29d41a9df5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5b29d41a9df5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5b29d41a9df5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5b29d4156033: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d4156033: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d4156033: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d4156033: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bc9ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b9545: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e6fdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d40fc6db: winter_prover::Prover::generate_proof (prover/src/lib.rs:293:23)",
"0x5b29d42464f9: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x5b29d404437b: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x5b29d43c301a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x5b29d404dcc7: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x5b29d4010fc9: winter_verifier::perform_verification (verifier/src/lib.rs:266:61)",
"0x5b29d40b8611: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b29d40db288: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b29d4199c0b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b29d40493c9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x5b29d409fc1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b29d3ff03e2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d3ff03e2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d3ff03e2: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5b29d400324b: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x5b29d4083c29: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x5b29d4163a3f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d4163a3f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d4163a3f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d4163a3f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bcb1d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b7bb7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e59bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d4023df7: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x5b29d4078ec7: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x5b29d408a003: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x5b29d408b210: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x5b29d40a20bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b29d41536af: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d41536af: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d41536af: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d41536af: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41a8705: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5b29d41b950a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e5b3d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d400c891: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x5b29d40a79ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b29d4173a55: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d4173a55: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d4173a55: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d40fc877: winter_prover::Prover::generate_proof (prover/src/lib.rs:306:39)",
"0x5b29d42eef36: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d42eef36: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d42eef36: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d4046517: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x5b29d415d4cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d415d4cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d415d4cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d415d4cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bc0dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b93d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e5a6d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d40fbcd2: winter_prover::Prover::generate_proof (prover/src/lib.rs:210:38)",
"0x5b29d3fe88cd: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x5b29d3fe7036: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5b29d41d7c48: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:300:57)",
"0x5b29d40b3c01: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b29d40db408: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b29d419dc54: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b29d4100285: winter_prover::Prover::generate_proof (prover/src/lib.rs:418:17)",
"0x5b29d414d55d: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:243:25)",
"0x5b29d406fd94: winterfell::build_do_work_trace (winterfell/src/main.rs:91:5)",
"0x5b29d410f60b: winterfell::main::{{closure}} (winterfell/src/main.rs:30:23)",
"0x5b29d409f44a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b29d416d4f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d416d4f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d416d4f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d416d4f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bb9da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b8bc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e5eba: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d410cfcf: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:644:36)",
"0x5b29d40dda57: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5b29d40384bd: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x5b29d410eeb8: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:716:26)",
"0x5b29d40fd931: winter_prover::Prover::generate_proof (prover/src/lib.rs:482:37)",
"0x5b29d4044428: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x5b29d40fc132: winter_prover::Prover::generate_proof (prover/src/lib.rs:262:22)",
"0x5b29d407021b: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:175:9)",
"0x5b29d4246b89: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x5b29d40fe6b8: winter_prover::Prover::generate_proof (prover/src/lib.rs:558:13)",
"0x5b29d416505d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d416505d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d416505d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d416505d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bbdda: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b8de4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e61ca: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d41457eb: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x5b29d40108e5: winter_verifier::perform_verification (verifier/src/lib.rs:185:13)",
"0x5b29d4070330: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:177:13)",
"0x5b29d40c1a31: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b29d40db048: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b29d419e55e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b29d40123b2: winter_verifier::perform_verification (verifier/src/lib.rs:179:9)",
"0x5b29d4007a93: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x5b29d43d00f0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b29d43c4669: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b29d43c3e51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b29d43c3950: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x5b29d4083e24: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x5b29d414e1b0: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:140:51)",
"0x5b29d41ef476: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5b29d3fedfc1: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5b29d401e6fe: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x5b29d40fa1b5: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:547:13)",
"0x5b29d43c2c69: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5b29d43bfc1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b29d43bcdb6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d43bcdb6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d43bcdb6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d4083b68: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x5b29d4162ecd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d4162ecd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d4162ecd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d4162ecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bc09a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b7544: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e673a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d414550b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x5b29d4085d52: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x5b29d41d44e2: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x5b29d400dc98: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x5b29d409c52a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b29d4154949: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d4154949: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d4154949: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d4154949: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bc96a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b8874: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e6b8a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d401940e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x5b29d41aa2d9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5b29d41aa2d9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5b29d41aa2d9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5b29d404eabb: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x5b29d4000237: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x5b29d4037a29: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x5b29d41f51d6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5b29d40be8d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b29d40db318: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b29d419c12d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b29d4005af2: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x5b29d4231ac5: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5b29d407b7dc: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x5b29d40878d8: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x5b29d4154f8f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d4154f8f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d4154f8f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d4154f8f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bc06d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b7f75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e579d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d40053a8: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x5b29d413e1b0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x5b29d416dd2f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d416dd2f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d416dd2f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d416dd2f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bb56d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b8125: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e698d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d4255d29: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x5b29d3ff8106: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x5b29d4034ac9: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:290:18)",
"0x5b29d403388e: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:173:30)",
"0x5b29d415e95f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d415e95f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d415e95f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d415e95f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bca4d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b8e15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e6f5d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d425c7af: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x5b29d415fb04: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d415fb04: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d415fb04: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d415fb04: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5b29d41bceaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b8d64: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e70da: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d4048e8d: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x5b29d409a32c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b29d3ff2aea: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d3ff2aea: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d3ff2aea: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5b29d41a8ca6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5b29d4089508: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x5b29d40fbf02: winter_prover::Prover::generate_proof (prover/src/lib.rs:233:27)",
"0x5b29d411572b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5b29d4114f9d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5b29d428869a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5b29d4275f7b: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5b29d42801a9: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5b29d427a416: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5b29d40f375a: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x5b29d41d7852: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:503:32)",
"0x5b29d41f4dc6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5b29d421293a: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5b29d41dce27: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5b29d41e7a22: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5b29d40daa21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b29d40dae08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b29d419d42e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b29d4146f07: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x5b29d41733c5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d41733c5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d41733c5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d40fc8cd: winter_prover::Prover::generate_proof (prover/src/lib.rs:308:37)",
"0x5b29d409b03c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b29d415d909: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d415d909: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d415d909: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d415d909: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bce3a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b8934: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e5a2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d4010ba2: winter_verifier::perform_verification (verifier/src/lib.rs:214:41)",
"0x5b29d43d212b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5b29d43d2061: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5b29d43cb46b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5b29d43c5b71: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5b29d43c6307: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5b29d43d590b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5b29d4145370: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x5b29d424414c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x5b29d400de0c: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x5b29d40892db: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x5b29d40ecd5a: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:170:36)",
"0x5b29d40eb34f: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:55:17)",
"0x5b29d40114f7: winter_verifier::perform_verification (verifier/src/lib.rs:298:27)",
"0x5b29d404adac: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x5b29d4117d4a: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x5b29d4003314: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x5b29d407cdbc: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x5b29d404c547: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x5b29d414c3a7: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x5b29d4152997: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x5b29d424ad94: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x5b29d425695d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x5b29d40a5fac: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b29d415b8df: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d415b8df: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d415b8df: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d415b8df: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41a6b4e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5b29d41b9415: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e72ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d40184f7: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x5b29d41444ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x5b29d4159ecf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d4159ecf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d4159ecf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d4159ecf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bcd5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b9da7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e6edd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d406f0e6: winterfell::main (winterfell/src/main.rs:38:27)",
"0x5b29d408b2d3: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x5b29d4080afb: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x5b29d4085bc6: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x5b29d400024c: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x5b29d4085e92: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x5b29d4085b2c: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x5b29d40feb02: winter_prover::Prover::generate_proof (prover/src/lib.rs:571:9)",
"0x5b29d4117db3: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x5b29d43c32c6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x5b29d42566ca: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x5b29d425f5e9: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x5b29d3ff8cba: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x5b29d41d8e16: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:26:25)",
"0x5b29d3fe56e8: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:227:28)",
"0x5b29d40a0e6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b29d415bb29: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d415bb29: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d415bb29: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d415bb29: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bbcaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41ba084: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e619a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d408924b: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x5b29d40d82a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b29d40dba98: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b29d419b91b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b29d407d0fa: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x5b29d401941d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x5b29d43d22db: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5b29d43d1fb1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5b29d43cb2ab: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5b29d43c7f3e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5b29d43c9400: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5b29d43c8bf8: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5b29d40ffe30: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:13)",
"0x5b29d404607a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x5b29d3ff1f63: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x5b29d4146c15: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5b29d404fc4b: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x5b29d3ff2126: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x5b29d4048f66: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x5b29d416cd1f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d416cd1f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d416cd1f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d416cd1f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bb61d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b74f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e634d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d40067f7: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x5b29d416a40d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d416a40d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d416a40d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d416a40d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bbe4a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b96e4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e5d1a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d413fba1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x5b29d40e018f: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x5b29d408093d: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x5b29d4090b3e: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x5b29d4011636: winter_verifier::perform_verification (verifier/src/lib.rs:305:9)",
"0x5b29d40ffe70: winter_prover::Prover::generate_proof (prover/src/lib.rs:449:13)",
"0x5b29d40368b2: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:28)",
"0x5b29d4022eb1: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x5b29d40bd511: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b29d40dba08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b29d419940e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b29d4080c69: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x5b29d41d92cb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:64:9)",
"0x5b29d4011fcc: winter_verifier::perform_verification (verifier/src/lib.rs:225:43)",
"0x5b29d4255e04: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x5b29d4011c03: winter_verifier::perform_verification (verifier/src/lib.rs:323:5)",
"0x5b29d41295c3: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x5b29d409a5cc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b29d415daff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d415daff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d415daff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d415daff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bb4ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b8337: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e6e8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d406eedf: winterfell::main (winterfell/src/main.rs:28:26)",
"0x5b29d40061bf: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x5b29d4003ac4: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x5b29d4007f9d: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x5b29d41573a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d41573a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d41573a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d41573a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bc48a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b7fc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e6a3a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d40fbd8f: winter_prover::Prover::generate_proof (prover/src/lib.rs:214:39)",
"0x5b29d40a917c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b29d416beef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d416beef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d416beef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d416beef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bc27d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b7c65: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41c89bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d40fc033: winter_prover::Prover::generate_proof (prover/src/lib.rs:248:41)",
"0x5b29d40d5b21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b29d40db498: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b29d419d7ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b29d408edb7: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x5b29d411bbae: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x5b29d40fd4d0: winter_prover::Prover::generate_proof (prover/src/lib.rs:452:35)",
"0x5b29d4090d26: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x5b29d41d8f8c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:40:30)",
"0x5b29d409da1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b29d41739b5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d41739b5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d41739b5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d40fc909: winter_prover::Prover::generate_proof (prover/src/lib.rs:309:32)",
"0x5b29d40942b9: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x5b29d415869a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d415869a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d415869a: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d415869a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5b29d41bb4cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b9a1a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d4243f4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d407d243: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x5b29d40a6ccc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b29d4173c35: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d4173c35: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d4173c35: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d40fc88e: winter_prover::Prover::generate_proof (prover/src/lib.rs:307:44)",
"0x5b29d400dd9a: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x5b29d401603b: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:102:85)",
"0x5b29d41f2a6e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5b29d40a6f6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b29d416c22b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d416c22b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d416c22b: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d416c22b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5b29d41bcaad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b9955: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d40dd16d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d411d618: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x5b29d40ea028: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:83:31)",
"0x5b29d41f07af: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5b29d40062ce: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x5b29d40d0c21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b29d40dadd8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b29d419c6ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b29d40168ec: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x5b29d41dbb0a: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x5b29d41f27a8: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5b29d4077114: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x5b29d41290d2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x5b29d40da041: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b29d40db018: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b29d41998be: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b29d40ece9d: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:175:17)",
"0x5b29d401f2d7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x5b29d407c259: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x5b29d407d739: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x5b29d40809b6: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x5b29d40a03fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b29d415fedf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d415fedf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d415fedf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d415fedf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bc88d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b80c5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e59dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d410d08b: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:648:34)",
"0x5b29d403d081: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x5b29d403be86: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5b29d410d12f: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:655:31)",
"0x5b29d404aeb4: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x5b29d415c58d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d415c58d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d415c58d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d415c58d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bbd7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b7d34: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e630a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d4145733: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x5b29d40bf7a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b29d40db108: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b29d419bdae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b29d40121eb: winter_verifier::perform_verification (verifier/src/lib.rs:184:9)",
"0x5b29d41290f5: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x5b29d414676e: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x5b29d401e6df: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x5b29d41388a2: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x5b29d415f3bf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d415f3bf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d415f3bf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d415f3bf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bc6cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b9e45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e652d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d401e4ab: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x5b29d411707b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5b29d411428d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5b29d42882ea: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5b29d4263009: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5b29d41cca75: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5b29d4043598: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5b29d4128cbe: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x5b29d40ffe8b: winter_prover::Prover::generate_proof (prover/src/lib.rs:450:13)",
"0x5b29d40fb978: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:517:13)",
"0x5b29d3fef388: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x5b29d409d77c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b29d4161bf2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d4161bf2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d4161bf2: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d4161bf2: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5b29d41bcb7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b7c35: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e58cd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d411ba6a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x5b29d409ad9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b29d4163e5f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d4163e5f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d4163e5f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d4163e5f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bb3cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b8e87: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e5e8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d40eabcd: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:51:26)",
"0x5b29d4005440: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x5b29d41eddb6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5b29d3fedb11: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5b29d4009adb: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x5b29d411409a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x5b29d42631e9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5b29d41cd15b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5b29d40436eb: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5b29d428155d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x5b29d4287a25: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x5b29d427a86e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x5b29d4145d54: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x5b29d409f6dc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b29d416144f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d416144f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d416144f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d416144f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bc04d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b6f75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e741d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d40fddcf: winter_prover::Prover::generate_proof (prover/src/lib.rs:501:51)",
"0x5b29d43d263b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5b29d43d1f01: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5b29d43cb38b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5b29d43c4e3d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5b29d43d0748: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5b29d43d40a7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5b29d407f499: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x5b29d43c804e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5b29d43c99ec: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5b29d43c855a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5b29d41534b9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d41534b9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d41534b9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d41534b9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bb8ea: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b84f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e639a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d40e9fe8: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:83:9)",
"0x5b29d4164b9d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d4164b9d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d4164b9d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d4164b9d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bb2aa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b8394: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e6b5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d41455c3: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x5b29d414d131: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x5b29d4121853: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x5b29d41d4832: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x5b29d401e3b7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x5b29d404931c: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x5b29d4094e4c: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x5b29d4145f37: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x5b29d4005eae: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x5b29d4009a1c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x5b29d4145ad4: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x5b29d40892f2: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x5b29d42e80b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b29d42ead69: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b29d42f2322: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b29d404665f: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x5b29d4016f56: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x5b29d41f3eb6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5b29d4218fbd: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5b29d42565ed: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x5b29d4038d9a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x5b29d40fc511: winter_prover::Prover::generate_proof (prover/src/lib.rs:274:13)",
"0x5b29d4115a8b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5b29d4114e3d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5b29d428878a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5b29d42632a9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5b29d41cbbc8: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5b29d41ca195: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x5b29d415670f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d415670f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d415670f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d415670f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bb27d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b9a55: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e58ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d4256ac4: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x5b29d4038e5c: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x5b29d416186f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d416186f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d416186f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d416186f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bc61d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b7285: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e5c1d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d40fbeb3: winter_prover::Prover::generate_proof (prover/src/lib.rs:222:20)",
"0x5b29d4246b9b: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x5b29d415a2ef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d415a2ef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d415a2ef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d415a2ef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bc4cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b8d15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e57dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d40168d5: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x5b29d40335e4: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:156:33)",
"0x5b29d4036e25: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:128:17)",
"0x5b29d4231c6e: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5b29d404c356: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x5b29d415718f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d415718f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d415718f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d415718f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bbccd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b8cd7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e650d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d41dbaa0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x5b29d4146e5f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x5b29d403358a: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:155:31)",
"0x5b29d40903b5: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x5b29d4138bbd: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x5b29d414e9a5: winter_prover::trace::Trace::validate (src/trace/mod.rs:179:13)",
"0x5b29d413882f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x5b29d3fe5a3f: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:230:34)",
"0x5b29d41ee026: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5b29d42143a7: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5b29d43c4e9d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5b29d43d042b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5b29d43d41e3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5b29d4138921: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x5b29d4244472: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x5b29d408099f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x5b29d41f8d72: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x5b29d41557f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d41557f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d41557f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d41557f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bb34a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b73a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e713a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d410cf12: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:640:42)",
"0x5b29d4156b59: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d4156b59: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d4156b59: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d4156b59: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bb6ba: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b99a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e5eea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d40fde8c: winter_prover::Prover::generate_proof (prover/src/lib.rs:505:52)",
"0x5b29d425ede9: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x5b29d40111ac: winter_verifier::perform_verification (verifier/src/lib.rs:275:24)",
"0x5b29d40a720c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b29d4160e49: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d4160e49: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d4160e49: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d4160e49: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bb93a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b87f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e601a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d4010c5f: winter_verifier::perform_verification (verifier/src/lib.rs:218:40)",
"0x5b29d409e1fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b29d4160622: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d4160622: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d4160622: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d4160622: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5b29d41bbdaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b7484: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41d48ea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d4143d67: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x5b29d416fe6f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d416fe6f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d416fe6f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d416fe6f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bbecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b7825: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e6afd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d4256c5a: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x5b29d41d82f8: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:651:17)",
"0x5b29d4166acf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d4166acf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d4166acf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d4166acf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bba5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b8c45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e6e4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d3fe51cf: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:283:9)",
"0x5b29d413fe73: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x5b29d4255d9d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x5b29d4154539: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b29d4154539: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b29d4154539: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b29d4154539: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b29d41bbb7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b29d41b9b14: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b29d41e744a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b29d40fc4ea: winter_prover::Prover::generate_proof (prover/src/lib.rs:272:43)",
"0x5b29d4038572: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x5b29d400d41f: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x5b29d400ba15: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)"
]
}