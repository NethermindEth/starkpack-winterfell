{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell",
"pid": 66477,
"tg": 26571948,
"te": 30457036,
"pps": [
{
"tb": 32,
"tbk": 1,
"tl": 2547747,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7
]
},
{
"tb": 102400,
"tbk": 32,
"tl": 70279,
"mb": 102400,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
16,
17,
18
]
},
{
"tb": 3200,
"tbk": 1,
"tl": 2474,
"mb": 3200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
19,
20,
21,
22,
23,
24,
25
]
},
{
"tb": 56,
"tbk": 1,
"tl": 2348,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
28,
29,
30
]
},
{
"tb": 480,
"tbk": 4,
"tl": 197,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
31,
32
]
},
{
"tb": 96,
"tbk": 1,
"tl": 30,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
33,
34,
35,
36,
37,
38,
39
]
},
{
"tb": 3145728,
"tbk": 3,
"tl": 280379,
"mb": 3145728,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
40,
41,
42,
43,
44,
45,
46,
47
]
},
{
"tb": 216,
"tbk": 1,
"tl": 30340078,
"mb": 216,
"mbk": 1,
"gb": 216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
48,
49,
50,
51,
52,
53,
54,
55,
56
]
},
{
"tb": 4800,
"tbk": 1,
"tl": 26548875,
"mb": 4800,
"mbk": 1,
"gb": 4800,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
57,
58,
59,
60,
61,
62,
63,
64,
65
]
},
{
"tb": 512,
"tbk": 1,
"tl": 93400,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
33,
34,
66,
67,
68,
69,
7
]
},
{
"tb": 48,
"tbk": 1,
"tl": 93149,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
57,
70,
71,
72,
44,
45,
46,
73,
74,
7
]
},
{
"tb": 96,
"tbk": 1,
"tl": 21,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
33,
34,
35,
36,
37,
75,
76
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1942,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
77,
78,
79,
80,
81,
82,
83,
84,
85,
86
]
},
{
"tb": 512,
"tbk": 1,
"tl": 24,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
87,
88,
89,
90,
91,
92,
93
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 167,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
40,
41,
42,
94,
95,
7
]
},
{
"tb": 24,
"tbk": 1,
"tl": 160,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
57,
96,
97,
98,
99,
100,
101,
102,
103
]
},
{
"tb": 1088,
"tbk": 2,
"tl": 28,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
104,
105,
106,
107,
108,
109
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 3870,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
87,
88,
89,
110,
111,
112,
113
]
},
{
"tb": 32,
"tbk": 1,
"tl": 95,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
114,
115,
116,
117,
118,
119,
120
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1593,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
33,
34,
35,
36,
37,
121,
122
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 21887087,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
87,
88,
89,
90,
123,
124,
125
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1275231,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
126,
127,
128,
129,
130,
131,
132,
133,
134
]
},
{
"tb": 19520,
"tbk": 111,
"tl": 552933,
"mb": 19520,
"mbk": 111,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
135,
136,
137,
138,
139,
140,
141,
142
]
},
{
"tb": 224,
"tbk": 1,
"tl": 7299,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
33,
34,
143,
144,
145,
146,
147
]
},
{
"tb": 512,
"tbk": 1,
"tl": 733,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
87,
88,
89,
148,
39,
149,
30
]
},
{
"tb": 1152,
"tbk": 4,
"tl": 142,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
33,
34,
150,
151,
152,
153,
154
]
},
{
"tb": 32,
"tbk": 1,
"tl": 349428,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
19,
20,
21,
22,
155,
156,
157
]
},
{
"tb": 288,
"tbk": 1,
"tl": 18552,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
33,
34,
158,
159,
160,
161,
162
]
},
{
"tb": 512,
"tbk": 1,
"tl": 11,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
163,
164,
165,
166,
167,
168,
169,
170
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
171,
172,
173,
174,
175,
176,
177,
178,
179,
180
]
},
{
"tb": 15488,
"tbk": 4,
"tl": 595,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
87,
88,
89,
90,
181,
182,
183
]
},
{
"tb": 32,
"tbk": 1,
"tl": 169999,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
19,
20,
21,
22,
184,
185,
7
]
},
{
"tb": 24,
"tbk": 1,
"tl": 973777,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
186,
187,
188,
189,
190,
7
]
},
{
"tb": 48,
"tbk": 2,
"tl": 71,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 50926,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
197,
122,
7
]
},
{
"tb": 64,
"tbk": 1,
"tl": 6187,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
33,
34,
198,
199,
200,
201,
202
]
},
{
"tb": 4800,
"tbk": 1,
"tl": 30448351,
"mb": 4800,
"mbk": 1,
"gb": 4800,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
57,
203,
204,
205,
206,
207,
208,
209,
210
]
},
{
"tb": 48,
"tbk": 1,
"tl": 30347117,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
211,
212,
213,
214,
215,
216,
217,
7
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 648886,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
114,
115,
116,
117,
118,
119,
218
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 3023,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
135,
219,
220,
221,
222,
223,
224,
225,
226
]
},
{
"tb": 32,
"tbk": 1,
"tl": 68,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
227,
228,
229,
230,
231,
232,
233,
234,
235
]
},
{
"tb": 24,
"tbk": 1,
"tl": 3785065,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
236,
237,
238,
239,
240,
7,
241
]
},
{
"tb": 8,
"tbk": 1,
"tl": 26513159,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
242,
243,
244,
245,
246,
247,
248,
249,
250
]
},
{
"tb": 320,
"tbk": 2,
"tl": 1947297,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
33,
34,
251,
252,
253,
254,
255
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1066992,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
256,
257
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 1753208,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
135,
136,
137,
138,
258,
259,
260,
261
]
},
{
"tb": 16,
"tbk": 1,
"tl": 57,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
262,
263,
264,
265,
266,
267,
268,
269,
7,
241
]
},
{
"tb": 12256,
"tbk": 32,
"tl": 77292,
"mb": 12256,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
135,
136,
137,
138,
139,
140,
270,
271
]
},
{
"tb": 24,
"tbk": 1,
"tl": 114,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
186,
187,
188,
272,
273,
149
]
},
{
"tb": 3304,
"tbk": 17,
"tl": 485,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
77,
78,
274,
275,
276,
277,
278,
279,
280,
281,
282
]
},
{
"tb": 512,
"tbk": 1,
"tl": 738,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
87,
88,
89,
283,
39,
149,
30
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1220,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
77,
78,
274,
275,
276,
284,
285,
286,
287,
288,
289
]
},
{
"tb": 920,
"tbk": 4,
"tl": 1097,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
77,
78,
290,
291,
292,
293,
281,
294,
295
]
},
{
"tb": 77504,
"tbk": 1422,
"tl": 1120470,
"mb": 16832,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
33,
34,
296,
297,
298,
299,
300,
301,
302
]
},
{
"tb": 48,
"tbk": 2,
"tl": 106,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
303,
192,
193,
194,
195,
196
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
33,
304,
305,
306,
307,
308,
309,
310,
311,
312,
29
]
},
{
"tb": 3456,
"tbk": 12,
"tl": 4215,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
77,
313,
314,
315,
316,
317,
318
]
},
{
"tb": 32,
"tbk": 1,
"tl": 973765,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
319,
188,
189
]
},
{
"tb": 160,
"tbk": 1,
"tl": 8370,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
135,
136,
137,
138,
139,
320,
321,
29
]
},
{
"tb": 32,
"tbk": 1,
"tl": 105,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
319,
188,
272
]
},
{
"tb": 3200,
"tbk": 1,
"tl": 101959,
"mb": 3200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
19,
20,
21,
22,
322,
323,
324
]
},
{
"tb": 96,
"tbk": 1,
"tl": 10612,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
325,
326,
327,
328,
329
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 794100,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
87,
88,
89,
90,
123,
124,
330
]
},
{
"tb": 102432,
"tbk": 33,
"tl": 66257,
"mb": 102400,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
40,
41,
42,
43,
44,
45,
46,
331
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 624051,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
87,
88,
89,
90,
332,
333,
334
]
},
{
"tb": 3872,
"tbk": 4,
"tl": 21234,
"mb": 3872,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
135,
335,
336,
337,
338,
339,
142,
147
]
},
{
"tb": 6401,
"tbk": 1,
"tl": 73,
"mb": 6401,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
171,
172,
173,
174,
340,
341,
342,
343,
344,
345
]
},
{
"tb": 8128,
"tbk": 7,
"tl": 6212,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
33,
34,
198,
199,
200,
346,
202
]
},
{
"tb": 512,
"tbk": 1,
"tl": 30,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
87,
88,
89,
347,
348,
149,
30
]
},
{
"tb": 512,
"tbk": 1,
"tl": 16,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
87,
88,
89,
90,
181,
349,
39
]
},
{
"tb": 80,
"tbk": 1,
"tl": 30448369,
"mb": 80,
"mbk": 1,
"gb": 80,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
350,
351,
352,
353,
354,
355,
356,
357,
358
]
},
{
"tb": 599040,
"tbk": 4,
"tl": 66221,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
87,
88,
89,
90,
332,
359,
360
]
},
{
"tb": 8128,
"tbk": 7,
"tl": 782234,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
33,
34,
198,
199,
200,
346,
361
]
},
{
"tb": 64,
"tbk": 1,
"tl": 8442,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
362,
363,
364,
365,
366,
367,
368,
369
]
},
{
"tb": 480,
"tbk": 4,
"tl": 6166,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
370,
371
]
},
{
"tb": 15488,
"tbk": 121,
"tl": 103,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
372,
373,
374,
375,
376,
377,
378,
379
]
},
{
"tb": 64,
"tbk": 1,
"tl": 30340061,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
362,
363,
364,
365,
366,
367,
380,
381
]
},
{
"tb": 5784,
"tbk": 38,
"tl": 767,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
77,
78,
274,
275,
276,
277,
278,
279,
280,
281,
294
]
},
{
"tb": 17399,
"tbk": 11,
"tl": 1039974,
"mb": 8704,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
33,
34,
296,
382,
383,
384,
385
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 354138,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
87,
88,
89,
90,
386,
387,
388
]
},
{
"tb": 16,
"tbk": 1,
"tl": 73,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
389,
390,
391,
392,
273,
149
]
},
{
"tb": 480,
"tbk": 4,
"tl": 7938,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
370,
393
]
},
{
"tb": 16,
"tbk": 1,
"tl": 30345283,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
394,
395,
396,
397,
398,
399,
400,
401
]
},
{
"tb": 16320,
"tbk": 8,
"tl": 34,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
33,
34,
198,
199,
200,
402,
403
]
},
{
"tb": 16,
"tbk": 1,
"tl": 393586,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
77,
78,
290,
291,
292,
404,
405,
406,
7
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 9576,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
407,
408,
409,
410,
411
]
},
{
"tb": 512,
"tbk": 1,
"tl": 16,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
87,
88,
89,
412,
348,
149,
30
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 648947,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
114,
115,
116,
117,
118,
119,
413
]
},
{
"tb": 6432,
"tbk": 3,
"tl": 2897435,
"mb": 6432,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 3328,
"tbk": 32,
"tl": 448,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
77,
422,
423,
424,
425,
426,
427
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1645,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
428,
329
]
},
{
"tb": 72,
"tbk": 3,
"tl": 62,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
429,
430,
431,
432,
433,
434,
435,
436,
437
]
},
{
"tb": 2097184,
"tbk": 3,
"tl": 38162,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
87,
88,
89,
90,
438,
439,
440
]
},
{
"tb": 15488,
"tbk": 121,
"tl": 118,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
87,
88,
89,
110,
441,
142,
147
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2270,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
57,
442,
443,
444,
445,
446,
447,
448,
449
]
},
{
"tb": 6072,
"tbk": 11,
"tl": 3775,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
450,
451,
452,
453,
454,
455
]
},
{
"tb": 216,
"tbk": 1,
"tl": 8451,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
48,
456,
457,
458,
459,
460,
461,
462,
463
]
},
{
"tb": 15488,
"tbk": 4,
"tl": 1568,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
114,
115,
116,
117,
118,
119,
464
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1950,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
77,
78,
465,
466,
467,
468,
469,
470,
471,
472
]
},
{
"tb": 128,
"tbk": 1,
"tl": 7957,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
473,
474,
475
]
},
{
"tb": 80,
"tbk": 1,
"tl": 6182,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
87,
88,
89,
476,
477,
149,
30
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 108121,
"mb": 1198080,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
135,
136,
137,
138,
258,
478,
479,
162
]
},
{
"tb": 576,
"tbk": 2,
"tl": 47,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
480,
481,
482,
483,
484,
485,
486,
487,
488
]
},
{
"tb": 15488,
"tbk": 4,
"tl": 2416,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
489,
490,
491,
492,
493,
494,
495,
7
]
},
{
"tb": 256,
"tbk": 2,
"tl": 291,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
33,
34,
496,
497,
498,
499,
500
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 1701651,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
135,
136,
137,
138,
258,
501,
502,
503
]
},
{
"tb": 15488,
"tbk": 4,
"tl": 520,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
114,
115,
116,
117,
118,
119,
504
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
171,
172,
173,
174,
175,
176,
177,
178,
179,
505
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1067019,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
506,
507,
508,
509,
510,
511,
512,
513,
514,
406
]
},
{
"tb": 64,
"tbk": 1,
"tl": 109,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
362,
515,
516,
517,
518,
519,
520,
521,
188,
272
]
},
{
"tb": 96,
"tbk": 1,
"tl": 6451,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
33,
34,
522,
523,
524,
525,
149
]
},
{
"tb": 16,
"tbk": 1,
"tl": 105,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
389,
390,
391,
526,
527,
190
]
},
{
"tb": 2760,
"tbk": 4,
"tl": 20697,
"mb": 2760,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
528,
529,
530,
531,
532,
141,
142,
147
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2300,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
533,
534,
535,
536,
537,
538,
539,
540,
541
]
},
{
"tb": 16,
"tbk": 1,
"tl": 6,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
389,
542,
543,
185,
7,
241
]
},
{
"tb": 64,
"tbk": 1,
"tl": 3,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
544,
545,
505,
217,
7,
241
]
},
{
"tb": 102400,
"tbk": 1,
"tl": 10803,
"mb": 102400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
171,
546,
547,
548,
549,
329,
550,
551
]
},
{
"tb": 3304,
"tbk": 17,
"tl": 477,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
77,
78,
274,
275,
276,
277,
278,
279,
280,
281,
552
]
},
{
"tb": 96,
"tbk": 1,
"tl": 14,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
553,
554,
555,
556,
557,
558,
559,
560,
561
]
},
{
"tb": 256,
"tbk": 1,
"tl": 592,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
77,
78,
290,
291,
292,
293,
281,
552,
562
]
},
{
"tb": 72,
"tbk": 3,
"tl": 279466,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
506,
507,
508,
509,
510,
511,
512,
513,
563,
564,
565,
566
]
},
{
"tb": 1048576,
"tbk": 2,
"tl": 4348134,
"mb": 1048576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
567,
568,
569
]
},
{
"tb": 104857600,
"tbk": 200,
"tl": 5054100434,
"mb": 104857600,
"mbk": 200,
"gb": 104857600,
"gbk": 200,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
40,
41,
42,
570,
571,
572
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1940,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
135,
335,
336,
337,
338,
573,
574,
122
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1031668,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
262,
575,
576,
577,
578,
579,
580,
581,
582
]
},
{
"tb": 102400,
"tbk": 1,
"tl": 10708,
"mb": 102400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
171,
546,
547,
548,
583,
329,
550,
551
]
},
{
"tb": 576,
"tbk": 4,
"tl": 1551,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
19,
20,
21,
22,
584,
183,
288
]
},
{
"tb": 1248,
"tbk": 12,
"tl": 303,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
77,
422,
423,
424,
585,
586,
587
]
},
{
"tb": 4792320,
"tbk": 4,
"tl": 109812,
"mb": 4792320,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
87,
88,
89,
90,
588,
589,
162
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3025,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
528,
529,
530,
531,
532,
590,
113,
591
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1275220,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
592,
593,
594,
595,
596,
597
]
},
{
"tb": 99200,
"tbk": 387,
"tl": 191504,
"mb": 16128,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
135,
598,
599,
600,
601,
602,
603,
604,
605
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 30339065,
"mb": 1048576,
"mbk": 1,
"gb": 1048576,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
87,
88,
89,
90,
91,
606,
607
]
},
{
"tb": 512,
"tbk": 1,
"tl": 47,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
608,
609,
610,
611,
612,
613,
614,
615
]
},
{
"tb": 104857600,
"tbk": 200,
"tl": 6089071208,
"mb": 104857600,
"mbk": 200,
"gb": 104857600,
"gbk": 200,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
87,
88,
89,
90,
616,
617,
618
]
},
{
"tb": 64,
"tbk": 1,
"tl": 177,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
33,
34,
198,
199,
200,
619,
620
]
},
{
"tb": 16,
"tbk": 1,
"tl": 30339942,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
621,
622,
623,
624,
625,
626,
627,
628,
629
]
},
{
"tb": 48,
"tbk": 2,
"tl": 2134003,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
506,
507,
508,
509,
510,
511,
512,
513,
630,
631
]
},
{
"tb": 72,
"tbk": 1,
"tl": 11434,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
632,
551,
7,
241
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 6479,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
33,
34,
633,
634,
635,
636,
637
]
},
{
"tb": 32,
"tbk": 1,
"tl": 69,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
171,
172,
173,
174,
340,
341,
342,
638,
344,
345
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 3496,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
33,
34,
633,
634,
635,
636,
639
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2491,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
528,
529,
530,
531,
532,
270,
271,
28
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 5760763,
"mb": 8388608,
"mbk": 1,
"gb": 8388608,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
135,
136,
137,
138,
258,
640,
641,
642
]
},
{
"tb": 2864,
"tbk": 12,
"tl": 1179,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
77,
78,
643,
644,
645,
646,
647,
648,
649,
650
]
},
{
"tb": 96,
"tbk": 1,
"tl": 30347208,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
651,
652,
653,
654,
655,
656,
657,
658,
659
]
},
{
"tb": 102400,
"tbk": 1,
"tl": 4246,
"mb": 102400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
87,
88,
89,
110,
111,
660,
271
]
},
{
"tb": 96,
"tbk": 1,
"tl": 10,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
33,
34,
35,
36,
37,
661,
29
]
},
{
"tb": 96,
"tbk": 1,
"tl": 15,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
662,
543,
185,
7,
241
]
},
{
"tb": 838860800,
"tbk": 1,
"tl": 2063878,
"mb": 838860800,
"mbk": 1,
"gb": 838860800,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
40,
41,
42,
663,
664,
665
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1935,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
77,
78,
666,
667,
668,
669,
670,
671,
672,
673
]
},
{
"tb": 128,
"tbk": 1,
"tl": 11,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
40,
41,
42,
674,
495,
7
]
},
{
"tb": 16,
"tbk": 1,
"tl": 30347186,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
33,
304,
305,
306,
307,
308,
309,
310,
311,
675,
676
]
},
{
"tb": 80,
"tbk": 1,
"tl": 973522,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
677,
678,
679,
680,
681,
682,
683,
684,
685
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2556,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
686,
29,
30
]
},
{
"tb": 96,
"tbk": 1,
"tl": 2134,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
33,
34,
687,
688,
689,
690,
550
]
},
{
"tb": 123904,
"tbk": 4,
"tl": 1583,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
114,
115,
116,
117,
118,
119,
691
]
},
{
"tb": 15488,
"tbk": 4,
"tl": 23609,
"mb": 15488,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
87,
88,
89,
692,
142,
147,
29
]
},
{
"tb": 64,
"tbk": 1,
"tl": 6445,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
33,
34,
198,
199,
200,
619,
693
]
},
{
"tb": 6400,
"tbk": 2,
"tl": 519445,
"mb": 3200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
114,
115,
116,
117,
118,
119,
694
]
},
{
"tb": 96,
"tbk": 1,
"tl": 33,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
662,
391,
526,
527,
190,
7
]
},
{
"tb": 3304,
"tbk": 17,
"tl": 70,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
77,
78,
274,
275,
276,
277,
278,
279,
695,
574,
122
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
389,
390,
543,
185,
7,
241
]
},
{
"tb": 63000,
"tbk": 37,
"tl": 53063,
"mb": 31552,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
407,
408,
409,
410,
696
]
},
{
"tb": 6400,
"tbk": 1,
"tl": 6476,
"mb": 6400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
40,
41,
42,
94,
697,
29
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
698,
699,
30
]
},
{
"tb": 160,
"tbk": 1,
"tl": 6424,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
700,
701,
702,
703,
704,
705,
706,
707,
708
]
},
{
"tb": 8,
"tbk": 1,
"tl": 580,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
77,
78,
709,
710,
711,
712,
713,
714,
715,
716
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1214,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
717,
288,
289
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2480,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
718,
719,
720,
721,
722,
723,
724,
725,
726
]
},
{
"tb": 896,
"tbk": 6,
"tl": 8475,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
33,
34,
198,
199,
200,
727,
728
]
},
{
"tb": 32,
"tbk": 1,
"tl": 8378,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
135,
136,
137,
138,
139,
729,
321,
29
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2457,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
730,
731,
732,
733,
734,
735,
736,
737,
738
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 30339894,
"mb": 262144,
"mbk": 1,
"gb": 262144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
87,
88,
89,
90,
91,
739,
740
]
},
{
"tb": 96,
"tbk": 1,
"tl": 782214,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
33,
34,
35,
36,
37,
741,
361
]
},
{
"tb": 838860800,
"tbk": 25,
"tl": 286763495,
"mb": 838860800,
"mbk": 25,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
489,
490,
491,
492,
742,
743,
744,
745
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2138,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
57,
70,
71,
72,
44,
45,
46,
331,
746,
550
]
},
{
"tb": 6400,
"tbk": 2,
"tl": 519454,
"mb": 3200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
114,
115,
116,
117,
118,
119,
747
]
},
{
"tb": 1936,
"tbk": 4,
"tl": 2713,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
748,
749,
750,
751,
752,
753,
754,
755
]
},
{
"tb": 2097152,
"tbk": 2,
"tl": 391779,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
756,
757,
758,
759,
760,
761,
762,
763
]
},
{
"tb": 3840,
"tbk": 16,
"tl": 2328,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
33,
34,
198,
199,
200,
764,
765
]
},
{
"tb": 3304,
"tbk": 17,
"tl": 72,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
77,
78,
274,
275,
276,
277,
278,
279,
695,
32,
550
]
},
{
"tb": 40,
"tbk": 1,
"tl": 23951590,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
766,
767,
768,
769,
770,
771,
772,
773,
774
]
},
{
"tb": 192,
"tbk": 1,
"tl": 16186,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
775,
776,
777,
778,
779,
780,
495,
7,
241
]
},
{
"tb": 256,
"tbk": 1,
"tl": 608,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
77,
78,
290,
291,
292,
293,
281,
282,
781
]
},
{
"tb": 2097152,
"tbk": 2,
"tl": 185978,
"mb": 2097152,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
40,
41,
42,
43,
44,
45,
46,
73
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4071,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
33,
34,
782,
783,
784,
785,
271
]
},
{
"tb": 24,
"tbk": 1,
"tl": 8,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
57,
70,
71,
72,
44,
45,
46,
331,
786,
217
]
},
{
"tb": 8,
"tbk": 1,
"tl": 156,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
77,
78,
787,
788,
789,
790,
791,
792,
793,
794
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2174926,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
57,
795,
796,
797,
798,
799,
800,
801,
802
]
},
{
"tb": 2097152,
"tbk": 65536,
"tl": 38189,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
40,
41,
42,
803,
804,
805
]
},
{
"tb": 32,
"tbk": 1,
"tl": 3111,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
806,
76,
7,
241
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 8854,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
171,
546,
547,
548,
807,
808,
122,
7
]
},
{
"tb": 16,
"tbk": 1,
"tl": 30448486,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
809,
810,
811,
812,
813,
814,
815,
816
]
},
{
"tb": 96,
"tbk": 1,
"tl": 21,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
662,
391,
392,
273,
149,
30
]
},
{
"tb": 32,
"tbk": 2,
"tl": 973909,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
817,
818,
819,
820,
821,
822,
823,
824
]
},
{
"tb": 2304,
"tbk": 12,
"tl": 4310,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
77,
825,
826,
827,
828,
829,
830
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 30353806,
"mb": 1024,
"mbk": 1,
"gb": 1024,
"gbk": 1,
"eb": 1024,
"ebk": 1,
"fs": [
831,
832,
833,
834,
835,
836,
837,
838,
839,
840,
841,
842,
843,
844,
845,
846,
847,
848,
849,
850,
851
]
},
{
"tb": 24,
"tbk": 1,
"tl": 3785054,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
57,
852,
853,
854,
855,
7,
241
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3597,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
856,
76,
7,
241
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 33956,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
87,
88,
89,
90,
91,
92,
857
]
},
{
"tb": 2880,
"tbk": 24,
"tl": 2106,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
858,
281
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 154506,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
859,
860,
7
]
},
{
"tb": 64,
"tbk": 1,
"tl": 973772,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
362,
515,
516,
517,
518,
519,
520,
521,
188,
189
]
},
{
"tb": 599040,
"tbk": 4,
"tl": 74843,
"mb": 589824,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
87,
88,
89,
90,
861,
862,
162
]
},
{
"tb": 91656,
"tbk": 201,
"tl": 50905,
"mb": 24624,
"mbk": 54,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
863,
864,
865,
866,
867,
868
]
},
{
"tb": 240,
"tbk": 2,
"tl": 1066998,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
869,
406,
7,
241
]
},
{
"tb": 2760,
"tbk": 4,
"tl": 3201,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
528,
529,
530,
531,
870,
500,
494,
495
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 154088,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
87,
88,
89,
90,
91,
92,
871
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 2518,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
135,
872,
873,
874,
875,
876,
877,
878,
879
]
},
{
"tb": 12696,
"tbk": 23,
"tl": 5034,
"mb": 3864,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
450,
451,
452,
880,
881,
882
]
},
{
"tb": 968,
"tbk": 4,
"tl": 3794,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
77,
78,
274,
275,
276,
284,
285,
286,
883,
884,
288
]
},
{
"tb": 480,
"tbk": 4,
"tl": 193,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
31,
574
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 133264,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
40,
41,
42,
94,
885,
76
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1067015,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
40,
41,
42,
886,
514,
406
]
},
{
"tb": 512,
"tbk": 1,
"tl": 16,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
87,
88,
89,
90,
181,
887,
348
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1955,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
528,
529,
530,
531,
870,
32,
550,
551
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 2561708,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
87,
88,
89,
90,
91,
92,
888
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 7769,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
407,
408,
409,
410,
889
]
},
{
"tb": 16,
"tbk": 1,
"tl": 108,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
389,
542,
391,
526,
527,
190
]
},
{
"tb": 384,
"tbk": 1,
"tl": 973667,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
890,
891,
892,
893,
894,
895,
896,
897,
898
]
},
{
"tb": 4800,
"tbk": 1,
"tl": 3442365,
"mb": 4800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
57,
70,
71,
72,
44,
45,
46,
899,
900,
901
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1950,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
135,
335,
336,
337,
338,
573,
32,
550
]
},
{
"tb": 308819,
"tbk": 7,
"tl": 8531,
"mb": 205318,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
33,
34,
296,
382,
383,
384,
902
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1945,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
528,
529,
530,
531,
870,
574,
122,
7
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
171,
172,
173,
174,
175,
176,
177,
178,
903,
180
]
},
{
"tb": 32,
"tbk": 1,
"tl": 129,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
40,
41,
42,
904,
905,
906
]
},
{
"tb": 624,
"tbk": 2,
"tl": 22658086,
"mb": 600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
907,
908,
909,
910,
911,
912,
913,
914,
915
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1923,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
77,
78,
916,
917,
918,
919,
920,
921,
922,
923
]
},
{
"tb": 160,
"tbk": 1,
"tl": 6468,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
33,
34,
924,
925,
926,
927,
29
]
},
{
"tb": 384,
"tbk": 2,
"tl": 69,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
928,
929,
930,
931,
932,
933,
934,
935,
936
]
},
{
"tb": 512,
"tbk": 1,
"tl": 3896,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
87,
88,
89,
937,
938,
149,
30
]
},
{
"tb": 128,
"tbk": 2,
"tl": 1947070,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
33,
34,
939,
940,
941,
942,
943
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
544,
545,
180,
30
]
},
{
"tb": 96,
"tbk": 1,
"tl": 26,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
33,
34,
35,
36,
37,
944,
39
]
},
{
"tb": 15488,
"tbk": 4,
"tl": 2295,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
489,
945,
946,
947,
948,
949,
950,
951,
952
]
},
{
"tb": 16,
"tbk": 1,
"tl": 92531,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
77,
78,
274,
275,
276,
277,
278,
279,
953,
74,
7
]
},
{
"tb": 16,
"tbk": 1,
"tl": 75,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
389,
542,
391,
392,
273,
149
]
},
{
"tb": 64,
"tbk": 1,
"tl": 782209,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
33,
34,
198,
199,
200,
201,
361
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 393570,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
87,
88,
89,
90,
91,
92,
954
]
},
{
"tb": 256,
"tbk": 1,
"tl": 10,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
77,
78,
274,
275,
276,
284,
285,
286,
955,
495,
7
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4722,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
956,
957,
958,
959,
960,
961,
962,
963
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
171,
172,
173,
174,
175,
176,
177,
178,
903,
505
]
},
{
"tb": 1968,
"tbk": 2,
"tl": 54,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
964,
965,
966,
967,
968,
969
]
},
{
"tb": 102400,
"tbk": 1,
"tl": 2927,
"mb": 102400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
87,
88,
89,
110,
111,
970,
271
]
},
{
"tb": 16,
"tbk": 1,
"tl": 93158,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
40,
41,
42,
886,
563,
564,
565,
566
]
},
{
"tb": 3872,
"tbk": 4,
"tl": 3187,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
135,
335,
336,
337,
338,
573,
500,
494
]
},
{
"tb": 2097184,
"tbk": 3,
"tl": 37474,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
87,
88,
89,
90,
181,
971,
439
]
},
{
"tb": 838860800,
"tbk": 1,
"tl": 6153959,
"mb": 838860800,
"mbk": 1,
"gb": 838860800,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
489,
490,
491,
492,
742,
972,
973,
974
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 99493,
"mb": 1198080,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
135,
136,
137,
138,
258,
501,
502,
975
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2547741,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
976,
7
]
},
{
"tb": 96,
"tbk": 1,
"tl": 7295,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
33,
34,
35,
36,
37,
977,
147
]
},
{
"tb": 512,
"tbk": 1,
"tl": 21,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
40,
41,
42,
978,
39,
149
]
},
{
"tb": 32,
"tbk": 1,
"tl": 132,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
40,
41,
42,
979,
905,
906
]
},
{
"tb": 24,
"tbk": 1,
"tl": 3785060,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
980,
981,
982,
983,
984,
7,
241
]
},
{
"tb": 5242880,
"tbk": 5,
"tl": 5164630,
"mb": 5242880,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
87,
88,
89,
90,
985,
986,
987
]
},
{
"tb": 6400,
"tbk": 1,
"tl": 29,
"mb": 6400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
87,
88,
89,
110,
988,
989,
29
]
},
{
"tb": 32,
"tbk": 1,
"tl": 18,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
87,
88,
89,
110,
990,
989,
29
]
},
{
"tb": 6144,
"tbk": 32,
"tl": 11765,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
77,
825,
826,
827,
991,
992,
993
]
},
{
"tb": 96,
"tbk": 1,
"tl": 6192,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
33,
34,
35,
36,
37,
741,
202
]
},
{
"tb": 24,
"tbk": 1,
"tl": 26549764,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
994,
995,
996,
997,
998,
999,
1000,
1001,
1002
]
},
{
"tb": 2400,
"tbk": 12,
"tl": 210,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
77,
1003,
1004,
1005,
1006,
1007,
1008
]
},
{
"tb": 128,
"tbk": 1,
"tl": 7586,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
87,
88,
89,
110,
1009,
1010,
29
]
},
{
"tb": 32,
"tbk": 1,
"tl": 153,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
698,
1011,
1012,
1013,
1014,
1015
]
},
{
"tb": 2736,
"tbk": 6,
"tl": 2291,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
863,
864,
865,
1016,
1017,
1018
]
},
{
"tb": 48,
"tbk": 2,
"tl": 1947305,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
506,
507,
508,
509,
510,
511,
512,
513,
1019,
255
]
},
{
"tb": 192,
"tbk": 1,
"tl": 6436,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
33,
34,
1020,
1021,
1022,
1023,
149
]
},
{
"tb": 48,
"tbk": 1,
"tl": 349433,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
19,
20,
21,
22,
1024,
156,
157
]
},
{
"tb": 104857600,
"tbk": 200,
"tl": 685127031,
"mb": 104857600,
"mbk": 200,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
40,
41,
42,
43,
44,
45,
46,
899
]
},
{
"tb": 128,
"tbk": 1,
"tl": 3890,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
1025,
1026,
1027,
1028,
1029,
1030,
1031,
1032
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 3871388,
"mb": 8388608,
"mbk": 1,
"gb": 8388608,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
135,
136,
137,
138,
258,
501,
502,
1033
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 2640079,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
114,
115,
116,
117,
118,
119,
1034
]
},
{
"tb": 6400,
"tbk": 1,
"tl": 6428,
"mb": 6400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
40,
41,
42,
1035,
1036,
1037
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3442373,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046
]
},
{
"tb": 5784,
"tbk": 38,
"tl": 125,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
77,
78,
274,
275,
276,
277,
278,
279,
695,
500,
494
]
},
{
"tb": 33554432,
"tbk": 1,
"tl": 2535348,
"mb": 33554432,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
114,
115,
116,
117,
118,
119,
1047
]
},
{
"tb": 8,
"tbk": 1,
"tl": 23951419,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
242,
1048,
1049,
1050,
1051,
1052,
1053,
1054,
1055
]
},
{
"tb": 256,
"tbk": 4,
"tl": 64254,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
87,
88,
89,
90,
91,
92,
1056
]
},
{
"tb": 3200,
"tbk": 1,
"tl": 2469,
"mb": 3200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
19,
20,
21,
22,
1057,
24,
25
]
},
{
"tb": 72,
"tbk": 1,
"tl": 3822613,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
1058,
1059,
1060,
1061,
1062,
1063,
1064,
1065,
1066
]
},
{
"tb": 120,
"tbk": 2,
"tl": 2099979,
"mb": 120,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
57,
1067,
1068,
1069,
1070,
1071,
1072,
1073,
1074
]
},
{
"tb": 96,
"tbk": 1,
"tl": 2547758,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
33,
34,
35,
36,
37,
1075,
7
]
},
{
"tb": 838860800,
"tbk": 262144,
"tl": 973584,
"mb": 3200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
1076,
1077,
641
]
},
{
"tb": 144,
"tbk": 1,
"tl": 93169,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
553,
1078,
1079,
1080,
564,
565,
566,
1081,
74,
7
]
},
{
"tb": 64,
"tbk": 1,
"tl": 6441,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
33,
34,
198,
199,
200,
1082,
693
]
},
{
"tb": 12256,
"tbk": 32,
"tl": 94062,
"mb": 12256,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
135,
136,
137,
138,
139,
140,
590,
113
]
},
{
"tb": 32,
"tbk": 1,
"tl": 69,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
227,
1083,
1084,
1085,
1086,
1087,
1088,
1089,
1090
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 460,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
31,
500
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1929,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
77,
78,
1091,
1092,
1093,
1094,
1095,
1096,
1097,
1098
]
},
{
"tb": 64,
"tbk": 1,
"tl": 152,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
33,
34,
198,
199,
200,
1082,
620
]
},
{
"tb": 72,
"tbk": 1,
"tl": 93568,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
57,
70,
71,
72,
44,
45,
46,
47,
74,
7
]
},
{
"tb": 24,
"tbk": 1,
"tl": 3785049,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
994,
1099,
1100,
1101,
1102,
7,
241
]
}
],
"ftbl": [
"[root]",
"0x5aaa93276819: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5aaa932752e9: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5aaa93184840: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5aaa93184aa9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5aaa93194111: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5aaa92fdde70: winter_prover::Prover::generate_proof (prover/src/lib.rs:449:13)",
"0x5aaa92fed2ee: winter_prover::Prover::prove (prover/src/lib.rs:175:37)",
"0x5aaa930b23b9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5aaa92f844ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aaa93001e08: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa93001e08: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa93001e08: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5aaa9300245b: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5aaa9300245b: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5aaa9300245b: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5aaa92ef4f56: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x5aaa930d1eb6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5aaa930f6fbd: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5aaa93002511: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa93002511: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa93002511: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5aaa93086c80: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5aaa9301c1b0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x5aaa92ef3038: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:216:32)",
"0x5aaa930d2e5f: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5aaa930b1847: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x5aaa9301de73: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x5aaa93023ad4: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x5aaa92ef350b: winter_verifier::verify (verifier/src/lib.rs:109:19)",
"0x5aaa92f4d822: winterfell::main (winterfell/src/main.rs:71:11)",
"0x5aaa92f5b2b7: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x5aaa92ef477b: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x5aaa932eaf79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5aaa932e9709: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5aaa92f99281: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5aaa92fb9a38: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5aaa9307a33e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5aaa92efd2d7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x5aaa92eefa15: winter_verifier::perform_verification (verifier/src/lib.rs:311:25)",
"0x5aaa93087b85: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5aaa93087b85: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5aaa93087b85: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5aaa93050d83: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5aaa93087d25: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5aaa93087d25: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5aaa93087d25: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5aaa92ee1238: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x5aaa92f79d4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aaa9303f86f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa9303f86f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa9303f86f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa9303f86f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa9309a61d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa93095285: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c3c1d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92fd9eb3: winter_prover::Prover::generate_proof (prover/src/lib.rs:222:20)",
"0x5aaa92f7a7bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aaa93047abf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa93047abf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa93047abf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa93047abf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa9309ae7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa93097925: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c45dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92ec3788: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:228:23)",
"0x5aaa92f91c01: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5aaa92fb9408: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5aaa9307bc54: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5aaa92fde285: winter_prover::Prover::generate_proof (prover/src/lib.rs:418:17)",
"0x5aaa93050a22: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa93050a22: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa93050a22: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5aaa92ee12c5: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x5aaa92fdae23: winter_prover::Prover::generate_proof (prover/src/lib.rs:423:33)",
"0x5aaa930075c3: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x5aaa92fdc02d: winter_prover::Prover::generate_proof (prover/src/lib.rs:524:9)",
"0x5aaa932ada99: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5aaa932adc0a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aaa93042b9d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa93042b9d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa93042b9d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa93042b9d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa930992aa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa93096394: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c4b5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa930235c3: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x5aaa930517d5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa930517d5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa930517d5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa92fbbae7: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5aaa92f55e2f: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x5aaa93125338: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x5aaa92f63d52: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x5aaa9304f0a6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5aaa92fdb4d0: winter_prover::Prover::generate_proof (prover/src/lib.rs:452:35)",
"0x5aaa930353a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa930353a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa930353a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa930353a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa9309a48a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa93095fc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c4a3a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92fd9d8f: winter_prover::Prover::generate_proof (prover/src/lib.rs:214:39)",
"0x5aaa92ff507b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5aaa92ff228d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5aaa931662ea: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5aaa93141009: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5aaa930aaa75: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5aaa92f21598: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5aaa93000485: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5aaa92fefefa: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x5aaa92f2a356: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x5aaa9302a3a7: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x5aaa932e8adc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x5aaa932e7d6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x5aaa932e7ae8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x5aaa932e7ae8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x5aaa932e7124: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5aaa932e4d43: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x5aaa930b6f8c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:40:30)",
"0x5aaa92ff5dca: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x5aaa92fdd30a: winter_prover::Prover::generate_proof (prover/src/lib.rs:608:34)",
"0x5aaa92f1930f: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x5aaa92f18506: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x5aaa930b62f8: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:651:17)",
"0x5aaa92f7d6dc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aaa9303f44f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa9303f44f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa9303f44f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa9303f44f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa9309a04d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa93094f75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c541d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92fdbdcf: winter_prover::Prover::generate_proof (prover/src/lib.rs:501:51)",
"0x5aaa92f77dec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aaa93051b95: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa93051b95: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa93051b95: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa92f22785: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5aaa92f2bcc7: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x5aaa92f6ee35: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x5aaa92f72040: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x5aaa92fa66d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5aaa92fb97c8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5aaa9307867e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5aaa92f72216: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x5aaa93024104: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x5aaa92efc6fe: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x5aaa92ef35da: winter_verifier::verify (verifier/src/lib.rs:111:21)",
"0x5aaa92fb3b21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5aaa92fb9498: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5aaa9307b7ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5aaa92f6cdb7: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x5aaa92ff9bae: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x5aaa92f115e4: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:156:33)",
"0x5aaa92f14e25: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:128:17)",
"0x5aaa9310fc6e: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5aaa92f9b511: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5aaa92fb9a08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5aaa9307740e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5aaa92f5ec69: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x5aaa92f63bc6: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x5aaa930384ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa930384ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa930384ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa930384ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa9309ad3d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa930955f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c521d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92f00ff2: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x5aaa9327562a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aaa9327832c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa9327832c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa9327832c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5aaa9324769c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5aaa9324769c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5aaa9324769c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5aaa92eec084: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x5aaa92eebd9a: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x5aaa92ef31dd: winter_verifier::verify (verifier/src/lib.rs:96:32)",
"0x5aaa92f559fe: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x5aaa93016b6c: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x5aaa93134b73: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x5aaa9302c9a5: winter_prover::trace::Trace::validate (src/trace/mod.rs:179:13)",
"0x5aaa92fde578: winter_prover::Prover::generate_proof (prover/src/lib.rs:379:17)",
"0x5aaa92ecdd37: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x5aaa92ed6b7f: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x5aaa92fd7010: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:354:9)",
"0x5aaa92f13a9c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:51:13)",
"0x5aaa92fde1b5: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:21)",
"0x5aaa92ecd4f5: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x5aaa92ffa55c: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x5aaa930a8129: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x5aaa92ff9b36: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x5aaa92ffd296: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x5aaa92fd6bcf: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:369:9)",
"0x5aaa92ff5db3: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x5aaa92faffe1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5aaa92fb90d8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5aaa9307767d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5aaa92fd81b5: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:547:13)",
"0x5aaa92eeefc9: winter_verifier::perform_verification (verifier/src/lib.rs:266:61)",
"0x5aaa9304c36f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa9304c36f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa9304c36f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa9304c36f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa9309989d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa93097895: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c4bdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa9302bfe2: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:140:32)",
"0x5aaa92f7832c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aaa92ed0aea: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa92ed0aea: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa92ed0aea: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5aaa93086ca6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5aaa92f67508: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x5aaa92fd9f02: winter_prover::Prover::generate_proof (prover/src/lib.rs:233:27)",
"0x5aaa930070f5: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x5aaa93042e94: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa93042e94: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa93042e94: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa93042e94: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5aaa930995da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa93097ec4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c4c5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92f2a46e: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x5aaa92f7c49c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aaa9303b4cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa9303b4cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa9303b4cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa9303b4cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa9309a0dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa930973d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c3a6d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92fd9cd2: winter_prover::Prover::generate_proof (prover/src/lib.rs:210:38)",
"0x5aaa92f859ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aaa93051a55: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa93051a55: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa93051a55: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa92fda877: winter_prover::Prover::generate_proof (prover/src/lib.rs:306:39)",
"0x5aaa92f4d27c: winterfell::main (winterfell/src/main.rs:54:17)",
"0x5aaa92f7d44a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aaa93032539: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa93032539: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa93032539: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa93032539: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa93099b7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa93097b14: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c544a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92fda4ea: winter_prover::Prover::generate_proof (prover/src/lib.rs:272:43)",
"0x5aaa92fb8041: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5aaa92fb9018: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5aaa930778be: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5aaa92fcae9d: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:175:17)",
"0x5aaa92fc934f: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:55:17)",
"0x5aaa92eeb41f: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x5aaa92ee9a15: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x5aaa92fbba57: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5aaa92f164bd: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x5aaa92feceb8: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:716:26)",
"0x5aaa92fdb931: winter_prover::Prover::generate_proof (prover/src/lib.rs:482:37)",
"0x5aaa92f8130c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aaa93050328: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa93050328: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa93050328: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5aaa93088205: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5aaa93088205: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5aaa93088205: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5aaa92fdbea3: winter_prover::Prover::generate_proof (prover/src/lib.rs:510:39)",
"0x5aaa92f26f66: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x5aaa9301dd0d: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x5aaa930b6e16: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:26:25)",
"0x5aaa92eeffcc: winter_verifier::perform_verification (verifier/src/lib.rs:225:43)",
"0x5aaa932a161c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa932a161c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa932a161c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5aaa930882d9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5aaa930882d9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5aaa930882d9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5aaa92f2cabb: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x5aaa92f5b46d: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x5aaa930224ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x5aaa92efc6df: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x5aaa932a15cc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5aaa932a15cc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5aaa932a15cc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5aaa93133d9d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x5aaa9313d5e9: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x5aaa92eefc03: winter_verifier::perform_verification (verifier/src/lib.rs:323:5)",
"0x5aaa93051646: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa93051646: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa93051646: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa92f2c882: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x5aaa9301b2d4: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x5aaa9313478d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x5aaa932e9ea0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5aaa932ea108: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x5aaa932ea4ca: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x5aaa932ea4ca: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x5aaa932ea26e: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x5aaa932ea26e: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x5aaa932ea35d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x5aaa92ecd388: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x5aaa932e99ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aaa932eb04c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa932eb04c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa932eb04c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5aaa932e8c7c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5aaa932e8c7c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5aaa932e8c7c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5aaa932e4ece: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x5aaa93023370: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x5aaa932b048b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5aaa932afe51: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5aaa932a954b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5aaa932a3c41: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5aaa932a42c7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5aaa932b395b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5aaa92ed6cba: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x5aaa93030b50: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x5aaa93023970: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x5aaa9302b55d: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:243:25)",
"0x5aaa92f4dd94: winterfell::build_do_work_trace (winterfell/src/main.rs:91:5)",
"0x5aaa92fed60b: winterfell::main::{{closure}} (winterfell/src/main.rs:30:23)",
"0x5aaa931c60b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5aaa931c8d69: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5aaa931d0322: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5aaa92f2465f: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x5aaa92ef4845: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x5aaa92fecacc: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:701:36)",
"0x5aaa9304f0e6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5aaa92f56ec7: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x5aaa92ee3eae: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x5aaa92ee7a1c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x5aaa92f22c84: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa92f22c84: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa92f22c84: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5aaa93086c56: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5aaa92f6eb3e: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x5aaa931d19e9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5aaa931d19e9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5aaa931d19e9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5aaa92ff209a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x5aaa92ed0a26: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5aaa93024714: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5aaa92fd83d4: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:541:17)",
"0x5aaa92f00ca0: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x5aaa92eefabc: winter_verifier::perform_verification (verifier/src/lib.rs:317:25)",
"0x5aaa92efc3b7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x5aaa92f785cc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aaa9303baff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa9303baff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa9303baff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa9303baff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa930994ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa93096337: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c4e8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92f4cedf: winterfell::main (winterfell/src/main.rs:28:26)",
"0x5aaa92f68003: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x5aaa92f69210: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x5aaa92f661b6: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x5aaa92f77b4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aaa92fd64c4: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa92fd64c4: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa92fd64c4: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5aaa93086bf6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5aaa92f4e0ad: <winterfell::WorkAir as winter_air::air::Air>::new (winterfell/src/main.rs:151:23)",
"0x5aaa92ef403b: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:102:85)",
"0x5aaa930d0a6e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5aaa92f597dc: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x5aaa92eef4f7: winter_verifier::perform_verification (verifier/src/lib.rs:298:27)",
"0x5aaa9303c95f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa9303c95f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa9303c95f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa9303c95f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa9309aa4d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa93096e15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c4f5d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa9313a7af: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x5aaa930b5f36: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:226:17)",
"0x5aaa930d019e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5aaa932ea0d9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5aaa932ea3d2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5aaa932eb159: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x5aaa92ecf32d: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x5aaa930b2c5a: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x5aaa931266a7: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x5aaa93009889: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x5aaa92f53245: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x5aaa92f4e330: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:177:13)",
"0x5aaa92fd6b72: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:371:13)",
"0x5aaa930b72cb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:64:9)",
"0x5aaa92f658d8: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x5aaa93037ecf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa93037ecf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa93037ecf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa93037ecf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa9309ad5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa93097da7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c4edd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92f4d0e6: winterfell::main (winterfell/src/main.rs:38:27)",
"0x5aaa92ecf461: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x5aaa92f6603f: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x5aaa92ee7a78: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x5aaa92f14be1: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:135:9)",
"0x5aaa92fde266: winter_prover::Prover::generate_proof (prover/src/lib.rs:417:21)",
"0x5aaa93273700: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5aaa93273939: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5aaa93273132: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5aaa92f2c17c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x5aaa92f2431d: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x5aaa92f00cb7: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x5aaa930070d2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x5aaa93044acf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa93044acf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa93044acf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa93044acf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa93099a5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa93096c45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c4e4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92ec31cf: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:283:9)",
"0x5aaa932b02db: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5aaa932affb1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5aaa932a92ab: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5aaa932a5f3e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5aaa932a7400: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5aaa932a6bf8: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5aaa92f24999: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x5aaa92f7b23c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aaa93035bd9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa93035bd9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa93035bd9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa93035bd9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa9309a00a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa93097c44: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c4c2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92ee34b2: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x5aaa92ee41bf: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x5aaa92ee1ac4: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x5aaa92ee5f9d: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x5aaa92f6ed26: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x5aaa930382ef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa930382ef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa930382ef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa930382ef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa9309a4cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa93096d15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c37dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92ef48d5: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x5aaa92ff480b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5aaa92ff2a1d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5aaa93166c2a: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5aaa93145c7d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5aaa93148613: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5aaa92f59237: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5aaa9303559f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa9303559f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa9303559f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa9303559f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa930850d6: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5aaa93097bc5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c530d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92ef33a8: winter_verifier::verify (verifier/src/lib.rs:102:24)",
"0x5aaa930168a2: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x5aaa93040ecd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa93040ecd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa93040ecd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa93040ecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa9309a09a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa93095544: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c473a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa9302350b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x5aaa92f63e92: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x5aaa92f63b2c: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x5aaa92fdcb02: winter_prover::Prover::generate_proof (prover/src/lib.rs:571:9)",
"0x5aaa9313cde9: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x5aaa92eef1ac: winter_verifier::perform_verification (verifier/src/lib.rs:275:24)",
"0x5aaa93122472: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x5aaa92f5e99f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x5aaa92f7b77c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aaa9303fbf2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa9303fbf2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa9303fbf2: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa9303fbf2: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5aaa9309ab7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa93095c35: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c38cd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92ff9a6a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x5aaa92f7e69c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aaa93051af5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa93051af5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa93051af5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa92f5d499: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x5aaa92f620bd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x5aaa92fdd19c: winter_prover::Prover::generate_proof (prover/src/lib.rs:600:25)",
"0x5aaa92fb62a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5aaa92fb9a98: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5aaa9307991b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5aaa92f5b0fa: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x5aaa92f5d3c0: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x5aaa92f5a259: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x5aaa92f5b739: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x5aaa92f16572: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x5aaa93016bbd: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x5aaa92f672db: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x5aaa92f8106c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aaa93001f38: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa93001f38: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa93001f38: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5aaa930887c5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5aaa930887c5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5aaa930887c5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5aaa92ece8e2: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x5aaa92f14973: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:33)",
"0x5aaa92fd6012: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa92fd6012: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa92fd6012: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5aaa93088b05: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5aaa93088b05: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5aaa93088b05: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5aaa92ed6b95: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x5aaa92f9fa31: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5aaa92fb9048: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5aaa9307c55e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5aaa92ef03b2: winter_verifier::perform_verification (verifier/src/lib.rs:179:9)",
"0x5aaa92fc8adf: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:41:22)",
"0x5aaa92f13b39: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:36)",
"0x5aaa92f83a6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aaa93051875: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa93051875: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa93051875: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa92f2ba4c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x5aaa92f7a52a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aaa93032949: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa93032949: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa93032949: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa93032949: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa9309a96a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa93096874: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c4b8a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92ef740e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x5aaa92f4e247: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:176:13)",
"0x5aaa9302c518: winter_prover::trace::Trace::validate (src/trace/mod.rs:123:26)",
"0x5aaa9312214c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x5aaa92eebe0c: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x5aaa931ccf36: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa931ccf36: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa931ccf36: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa92f2407a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x5aaa92ef74b0: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x5aaa92fdd217: winter_prover::Prover::generate_proof (prover/src/lib.rs:603:29)",
"0x5aaa93022cf0: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x5aaa92f7dc1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aaa930314b9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa930314b9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa930314b9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa930314b9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa930998ea: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa930964f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c439a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92fc7fe8: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:83:9)",
"0x5aaa92eef7a8: winter_verifier::perform_verification (verifier/src/lib.rs:306:42)",
"0x5aaa92ece750: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5aaa93087df5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5aaa93087df5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5aaa93087df5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5aaa930b9b0a: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x5aaa930d07a8: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5aaa92f55114: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x5aaa92ec3a3f: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:230:34)",
"0x5aaa930cc026: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5aaa930f23a7: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5aaa92f5aa4c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x5aaa92ff5b91: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x5aaa93034b59: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa93034b59: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa93034b59: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa93034b59: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa930996ba: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa930979a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c3eea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92fdbe8c: winter_prover::Prover::generate_proof (prover/src/lib.rs:505:52)",
"0x5aaa92f24517: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x5aaa93016921: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x5aaa932a2e9d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5aaa932ae42b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5aaa932b21e3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5aaa92fbe18f: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x5aaa92f5e93d: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x5aaa92f2a547: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x5aaa93023d54: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x5aaa92fd175a: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x5aaa930b5852: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:503:32)",
"0x5aaa930d2dc6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5aaa930f093a: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5aaa930bae27: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5aaa930c5a22: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5aaa9303669a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa9303669a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa9303669a: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa9303669a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5aaa930994cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa93097a1a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa93121f4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92f5b243: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x5aaa92f22428: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x5aaa92fda132: winter_prover::Prover::generate_proof (prover/src/lib.rs:262:22)",
"0x5aaa9303d3bf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa9303d3bf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa9303d3bf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa9303d3bf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa9309a6cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa93097e45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c452d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92efc4ab: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x5aaa9302c1b0: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:140:51)",
"0x5aaa930cd476: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5aaa92ecbfc1: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5aaa92fd9a42: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:512:13)",
"0x5aaa92f666b2: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x5aaa92f8717c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aaa93049eef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa93049eef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa93049eef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa93049eef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa9309a27d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa93095c65: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930a69bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92fda033: winter_prover::Prover::generate_proof (prover/src/lib.rs:248:41)",
"0x5aaa92fc8028: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:83:31)",
"0x5aaa930ce7af: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5aaa92ef741d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x5aaa932ae0f0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5aaa932a2669: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5aaa932a1e51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5aaa932a1950: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x5aaa931345ed: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x5aaa92ff20af: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x5aaa92f61e24: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x5aaa92f16d9a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x5aaa92feb6ee: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:669:26)",
"0x5aaa92fda511: winter_prover::Prover::generate_proof (prover/src/lib.rs:274:13)",
"0x5aaa932b09e9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa932b09e9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa932b09e9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa932b09e9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5aaa932b0e2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa932b0df7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa932b0fce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa932b34c9: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x5aaa92f7ee6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aaa93039b29: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa93039b29: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa93039b29: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa93039b29: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa93099caa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa93098084: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c419a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92f6724b: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x5aaa92f2731c: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x5aaa93024e5f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x5aaa92f4e21b: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:175:9)",
"0x5aaa92f1b081: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x5aaa92f19e86: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5aaa92feb12f: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:655:31)",
"0x5aaa9304c9dd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa9304c9dd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa9304c9dd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa9304c9dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa93099c7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa93096ff4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c486a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa9302367b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x5aaa92f61c29: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x5aaa92eec29f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x5aaa92f67df3: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x5aaa92f800bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aaa930316af: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa930316af: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa930316af: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa930316af: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa93086705: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5aaa9309750a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c3b3d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92eea891: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x5aaa9302476e: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x5aaa92faec21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5aaa92fb8dd8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5aaa9307a6ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5aaa92ef48ec: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x5aaa9301682f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x5aaa92f6eb7f: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x5aaa92eee8e5: winter_verifier::perform_verification (verifier/src/lib.rs:185:13)",
"0x5aaa92ec189d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x5aaa92f5adbc: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x5aaa92f6e3b5: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x5aaa93024d01: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x5aaa92f4de36: <winterfell::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (winterfell/src/main.rs:133:9)",
"0x5aaa92ef3330: winter_verifier::verify (verifier/src/lib.rs:98:38)",
"0x5aaa92f7c1fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aaa9303e622: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa9303e622: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa9303e622: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa9303e622: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5aaa93099daa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa93095484: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930b28ea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa93021d67: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x5aaa9304840d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa9304840d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa9304840d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa9304840d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa93099e4a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa930976e4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c3d1a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa9301dba1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x5aaa93133e04: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x5aaa92f7903c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aaa9303b909: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa9303b909: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa9303b909: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa9303b909: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa9309ae3a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa93096934: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c3a2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92eeeba2: winter_verifier::perform_verification (verifier/src/lib.rs:214:41)",
"0x5aaa930b24e2: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x5aaa92eebc98: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x5aaa93030997: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x5aaa92f8520c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aaa9303ee49: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa9303ee49: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa9303ee49: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa9303ee49: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa9309993a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa930967f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c401a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92eeec5f: winter_verifier::perform_verification (verifier/src/lib.rs:218:40)",
"0x5aaa931244f9: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x5aaa92f2237b: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x5aaa92fd8350: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:543:13)",
"0x5aaa92fbbc07: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5aaa92ede237: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x5aaa92f15a29: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x5aaa930d31d6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5aaa92ef46db: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x5aaa92ec188c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x5aaa9304de6f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa9304de6f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa9304de6f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa9304de6f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa93099ecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa93095825: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c4afd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa93134c5a: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x5aaa9304ad1f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa9304ad1f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa9304ad1f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa9304ad1f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa9309961d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa930954f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c434d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92ee47f7: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x5aaa93128d94: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x5aaa9313495d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x5aaa92f7e3fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aaa9303dedf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa9303dedf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa9303dedf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa9303dedf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa9309a88d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa930960c5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c39dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92feb08b: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:648:34)",
"0x5aaa932a0c69: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5aaa9329dc1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aaa9329adb6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa9329adb6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa9329adb6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa92f61b68: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x5aaa92eef636: winter_verifier::perform_verification (verifier/src/lib.rs:305:9)",
"0x5aaa92f96611: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5aaa92fb9288: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5aaa93077c0b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5aaa92f273c9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x5aaa92f672f2: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x5aaa93034033: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa93034033: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa93034033: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa93034033: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa9309a9ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa93097545: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c4fdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92fda6db: winter_prover::Prover::generate_proof (prover/src/lib.rs:293:23)",
"0x5aaa9303518f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa9303518f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa9303518f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa9303518f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa93099ccd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa93096cd7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c450d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa930b9aa0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x5aaa92ed6106: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x5aaa92f12ac9: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:290:18)",
"0x5aaa92f1188e: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:173:30)",
"0x5aaa930074ab: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x5aaa92f28dac: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x5aaa92ff5d4a: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x5aaa93037ac3: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa93037ac3: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa93037ac3: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa93037ac3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa93099bd4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa9309629a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c4654: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92f4cd51: winterfell::main (winterfell/src/main.rs:22:32)",
"0x5aaa930450ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa930450ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa930450ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa930450ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa9309944d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa93095625: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c413d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92ecdd28: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x5aaa932b063b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5aaa932aff01: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5aaa932a938b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5aaa932a2e3d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5aaa932ae748: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5aaa932b20a7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5aaa92e9bd82: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5aaa92e9bd82: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aaa92e9bd82: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa92e9bd82: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa92e9bd82: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa92e9bd82: std::io::buffered::bufwriter::BufWriter<W>::with_capacity (io/buffered/bufwriter.rs:115:33)",
"0x5aaa92e9bd82: std::io::buffered::linewriter::LineWriter<W>::with_capacity (io/buffered/linewriter.rs:109:29)",
"0x5aaa92e9bd82: std::io::buffered::linewriter::LineWriter<W>::new (io/buffered/linewriter.rs:89:9)",
"0x5aaa92e9bd82: std::io::stdio::stdout::{{closure}} (src/io/stdio.rs:618:62)",
"0x5aaa92e9bd82: std::sync::once_lock::OnceLock<T>::get_or_init::{{closure}} (src/sync/once_lock.rs:250:50)",
"0x5aaa92e9bd82: std::sync::once_lock::OnceLock<T>::initialize::{{closure}} (src/sync/once_lock.rs:376:19)",
"0x5aaa92e9bd82: std::sync::once::Once::call_once_force::{{closure}} (src/sync/once.rs:208:40)",
"0x5aaa92e9bd82: std::sys_common::once::futex::Once::call (sys_common/once/futex.rs:124:21)",
"0x5aaa92e9aeca: std::sync::once::Once::call_once_force (src/sync/once.rs:208:9)",
"0x5aaa92e9aeca: std::sync::once_lock::OnceLock<T>::initialize (src/sync/once_lock.rs:375:9)",
"0x5aaa933051c5: std::sync::once_lock::OnceLock<T>::get_or_try_init (src/sync/once_lock.rs:298:9)",
"0x5aaa933051c5: std::sync::once_lock::OnceLock<T>::get_or_init (src/sync/once_lock.rs:250:15)",
"0x5aaa933051c5: std::io::stdio::stdout (src/io/stdio.rs:618:14)",
"0x5aaa933051c5: std::io::stdio::print_to (src/io/stdio.rs:1020:21)",
"0x5aaa933051c5: std::io::stdio::_print (src/io/stdio.rs:1097:5)",
"0x5aaa92f4d03a: winterfell::main (winterfell/src/main.rs:36:5)",
"0x5aaa930513c5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa930513c5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa930513c5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa92fda8cd: winter_prover::Prover::generate_proof (prover/src/lib.rs:308:37)",
"0x5aaa93007347: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x5aaa92ee5d08: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x5aaa92f2dc4b: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x5aaa93124b89: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x5aaa92fdc6b8: winter_prover::Prover::generate_proof (prover/src/lib.rs:558:13)",
"0x5aaa92f692d3: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x5aaa92f5eafb: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x5aaa92ff372b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5aaa92ff2f9d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5aaa9316669a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5aaa93153f7b: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5aaa9315e1a9: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5aaa93158416: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5aaa92f148b2: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:28)",
"0x5aaa92f5aaaf: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x5aaa93124b9b: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x5aaa9303db04: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa9303db04: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa9303db04: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa9303db04: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5aaa9309aeaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa93096d64: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c50da: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92f26e8d: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x5aaa9315f55d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x5aaa93165a25: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x5aaa9315886e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x5aaa932a12c6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x5aaa931346ca: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x5aaa93006cbe: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x5aaa92ece8f5: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x5aaa92f00eb1: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x5aaa92ec36e8: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:227:28)",
"0x5aaa92f28eb4: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x5aaa92f78d9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aaa93041e5f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa93041e5f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa93041e5f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa93041e5f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa930993cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa93096e87: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c3e8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92fc8bcd: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:51:26)",
"0x5aaa92ec68cd: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x5aaa92ec5036: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5aaa930b5c48: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:300:57)",
"0x5aaa932a101a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x5aaa92eebdce: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x5aaa930d6d85: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x5aaa930d6e16: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5aaa92eefedf: winter_verifier::perform_verification (verifier/src/lib.rs:228:13)",
"0x5aaa92f7fb7c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aaa9303919f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa9303919f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa9303919f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa9303919f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa9309a54d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa93097355: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c4ddd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92f151b1: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x5aaa9304305d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa9304305d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa9304305d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa9304305d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa93099dda: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa93096de4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c41ca: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa930237eb: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x5aaa92fb8a21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5aaa92fb8e08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5aaa9307b42e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5aaa93024f07: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x5aaa92f84f6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aaa9304a22b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa9304a22b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa9304a22b: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa9304a22b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5aaa9309aaad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa93097955: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa92fbb16d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92ffb618: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x5aaa92ef97be: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x5aaa92eefb34: winter_verifier::perform_verification (verifier/src/lib.rs:319:28)",
"0x5aaa92f9c8d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5aaa92fb9318: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5aaa9307a12d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5aaa92ee3af2: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x5aaa9310fac5: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5aaa92efd325: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x5aaa9303470f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa9303470f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa9303470f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa9303470f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa9309927d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa93097a55: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c38ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa93134ac4: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x5aaa92ee1314: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x5aaa92ee7adb: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x5aaa92f61c0e: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x5aaa93041a3f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa93041a3f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa93041a3f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa93041a3f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa9309ab1d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa93095bb7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c39bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92f01df7: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x5aaa92ff3a8b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5aaa92ff2e3d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5aaa9316678a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5aaa931412a9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5aaa930a9bc8: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5aaa930a8195: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x5aaa92f26b8e: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x5aaa92ee42ce: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x5aaa92f199bd: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x5aaa92f15c90: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x5aaa92f18614: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x5aaa92f5e9b6: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x5aaa92fdde8b: winter_prover::Prover::generate_proof (prover/src/lib.rs:450:13)",
"0x5aaa92f722b9: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x5aaa92efc21f: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x5aaa930d6d72: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x5aaa92f84ccc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aaa93051c35: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa93051c35: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa93051c35: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa92fda88e: winter_prover::Prover::generate_proof (prover/src/lib.rs:307:44)",
"0x5aaa92ee3440: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x5aaa930cbdb6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5aaa92ecbb11: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5aaa92ecff63: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x5aaa93024c15: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5aaa92ed0126: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x5aaa932a604e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5aaa932a79ec: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5aaa932a655a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5aaa92f7ba1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aaa930337f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa930337f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa930337f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa930337f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa9309934a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa930953a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c513a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92feaf12: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:640:42)",
"0x5aaa932b012b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5aaa932b0061: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5aaa932a946b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5aaa932a3b71: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5aaa932a4307: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5aaa932b390b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5aaa92f72e4c: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x5aaa93023f37: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x5aaa930b47a8: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:216:31)",
"0x5aaa930d2d36: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5aaa930f0bd0: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5aaa930bef66: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5aaa930c68f6: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5aaa931411e9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5aaa930ab15b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5aaa92f216eb: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5aaa92fcad5a: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:170:36)",
"0x5aaa92f9d7a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5aaa92fb9108: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5aaa93079dae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5aaa92ef01eb: winter_verifier::perform_verification (verifier/src/lib.rs:184:9)",
"0x5aaa92f1158a: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:155:31)",
"0x5aaa9304bd2f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa9304bd2f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa9304bd2f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa9304bd2f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa9309956d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa93096125: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c498d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa93133d29: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x5aaa92f16e5c: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x5aaa92ee5a93: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x5aaa9302b131: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x5aaa92fff853: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x5aaa930b2832: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x5aaa92f86edc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aaa9304925f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa9304925f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa9304925f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa9304925f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa9308618b: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5aaa930968d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c456d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92fda7f7: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:36)",
"0x5aaa92ede24c: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x5aaa9304b4f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa9304b4f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa9304b4f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa9304b4f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa930999da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa93096bc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c3eba: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92feafcf: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:644:36)",
"0x5aaa92f69222: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x5aaa9301c1ce: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x5aaa92f83fac: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5aaa930398df: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa930398df: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa930398df: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa930398df: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa93084b4e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5aaa93097415: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c52ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92ef64f7: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x5aaa93032f8f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa93032f8f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa93032f8f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa93032f8f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa9309a06d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa93095f75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c379d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92ee33a8: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x5aaa92fdde30: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:13)",
"0x5aaa92f179d6: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x5aaa92f16e23: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x5aaa92ece3e2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa92ece3e2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa92ece3e2: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5aaa92ee124b: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x5aaa92fd9978: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:517:13)",
"0x5aaa93038b4f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa93038b4f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa93038b4f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa93038b4f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa9308403e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5aaa93098035: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c50ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa92f4d74e: winterfell::main (winterfell/src/main.rs:65:26)",
"0x5aaa9303a58d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa9303a58d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa9303a58d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa9303a58d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5aaa93099d7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5aaa93095d34: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5aaa930c430a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5aaa93023733: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x5aaa930519b5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5aaa930519b5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5aaa930519b5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5aaa92fda909: winter_prover::Prover::generate_proof (prover/src/lib.rs:309:32)"
]
}