{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell",
"pid": 67024,
"tg": 21541316,
"te": 23956612,
"pps": [
{
"tb": 104857600,
"tbk": 800,
"tl": 19148611499,
"mb": 104857600,
"mbk": 800,
"gb": 104857600,
"gbk": 800,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9
]
},
{
"tb": 480,
"tbk": 4,
"tl": 183,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
15,
16
]
},
{
"tb": 1196032,
"tbk": 3,
"tl": 31190,
"mb": 1196032,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
17,
18,
19
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 2248089,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
20,
21,
22
]
},
{
"tb": 8,
"tbk": 1,
"tl": 24,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
25,
26,
27,
28,
29,
30,
31,
32
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2323,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
33,
34,
35,
36,
37,
38,
39,
40
]
},
{
"tb": 1440,
"tbk": 12,
"tl": 310,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
15,
41
]
},
{
"tb": 128,
"tbk": 1,
"tl": 10204,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
42,
43,
44,
45,
46,
47,
48,
49
]
},
{
"tb": 72,
"tbk": 3,
"tl": 67,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
50,
51,
52,
53,
54,
55,
56,
57,
58
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2725,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
59,
60,
61,
62,
63,
64,
65,
66,
67
]
},
{
"tb": 64,
"tbk": 1,
"tl": 390374,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
68,
69,
70,
71,
72,
73,
74
]
},
{
"tb": 72,
"tbk": 3,
"tl": 67127,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
76,
77,
78,
79,
80,
81,
82,
83,
84,
85,
86
]
},
{
"tb": 1920,
"tbk": 10,
"tl": 3431,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
87,
88,
89,
90,
91,
92
]
},
{
"tb": 256,
"tbk": 1,
"tl": 508,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
68,
69,
70,
93,
94,
95,
96
]
},
{
"tb": 409632,
"tbk": 33,
"tl": 79494,
"mb": 409600,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
100,
101,
102,
103,
104,
105,
106,
107
]
},
{
"tb": 216,
"tbk": 1,
"tl": 23795019,
"mb": 216,
"mbk": 1,
"gb": 216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
108,
109,
110,
111,
112,
113,
114,
115,
116
]
},
{
"tb": 2888,
"tbk": 15,
"tl": 65,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
117,
118,
119,
120,
121,
122,
123,
16,
124
]
},
{
"tb": 256,
"tbk": 1,
"tl": 526,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
68,
69,
70,
93,
94,
125,
126
]
},
{
"tb": 10592,
"tbk": 32,
"tl": 72019,
"mb": 10592,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
42,
43,
44,
45,
46,
127,
38,
39
]
},
{
"tb": 24,
"tbk": 1,
"tl": 592068,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
76,
77,
78,
79,
80,
81,
82,
128,
73
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 390365,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
20,
21,
129
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2823,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
130,
131,
132,
133,
134,
135,
136,
137
]
},
{
"tb": 80,
"tbk": 1,
"tl": 569443,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
138,
139,
140,
141,
142,
143,
144,
145,
146
]
},
{
"tb": 12800,
"tbk": 1,
"tl": 4481,
"mb": 12800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
147,
148,
149,
150,
151,
152,
153
]
},
{
"tb": 32,
"tbk": 1,
"tl": 10211,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
42,
43,
44,
45,
46,
154,
48,
49
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2799,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
155,
156,
157,
158,
159,
160,
161,
162
]
},
{
"tb": 1152,
"tbk": 4,
"tl": 146,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
163,
164,
165,
166,
167,
168,
169
]
},
{
"tb": 144,
"tbk": 1,
"tl": 20895,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
170,
171,
172,
173,
174,
175,
176,
74,
177
]
},
{
"tb": 56,
"tbk": 1,
"tl": 2185,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
178,
179,
40,
49,
180
]
},
{
"tb": 11520,
"tbk": 3,
"tl": 21626,
"mb": 11520,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
181,
182,
183,
49
]
},
{
"tb": 512,
"tbk": 1,
"tl": 22,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
100,
101,
102,
184,
185,
186
]
},
{
"tb": 11520,
"tbk": 90,
"tl": 95,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
187,
188,
182,
183
]
},
{
"tb": 512,
"tbk": 1,
"tl": 28,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
189,
190,
186,
180
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 78552,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
191,
192,
193
]
},
{
"tb": 512,
"tbk": 1,
"tl": 2846,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
194,
195,
186,
180
]
},
{
"tb": 1088,
"tbk": 2,
"tl": 29,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
196,
197,
198,
199,
200,
201
]
},
{
"tb": 216,
"tbk": 1,
"tl": 10277,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
108,
202,
203,
204,
205,
206,
207,
208,
209
]
},
{
"tb": 512,
"tbk": 1,
"tl": 9,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
210,
211,
212,
213,
214,
215,
216,
217
]
},
{
"tb": 192,
"tbk": 2,
"tl": 7400,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
163,
164,
218,
219,
220,
221,
222
]
},
{
"tb": 1440,
"tbk": 12,
"tl": 4470,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
163,
164,
223,
224,
225,
226,
227
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 14380,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
228,
229,
230,
231,
232,
233,
124,
74
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
178,
234,
235,
236,
237,
74,
177
]
},
{
"tb": 128,
"tbk": 1,
"tl": 5924,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
163,
164,
238,
239,
240,
241,
39
]
},
{
"tb": 512,
"tbk": 1,
"tl": 2793,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
242,
185,
186,
180
]
},
{
"tb": 11520,
"tbk": 90,
"tl": 80,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
243,
244,
245,
246,
247,
248,
249,
250
]
},
{
"tb": 256,
"tbk": 1,
"tl": 569740,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
251,
252,
253,
254,
255,
256,
257,
258,
259,
260
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1523694,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
261,
74
]
},
{
"tb": 96,
"tbk": 1,
"tl": 20,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
178,
262,
263,
264,
265,
186,
180
]
},
{
"tb": 72,
"tbk": 1,
"tl": 2381874,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
266,
267,
268,
269,
270,
271,
272,
273,
274
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 635831,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
275,
276,
277,
278,
279,
280,
281
]
},
{
"tb": 24,
"tbk": 1,
"tl": 2332684,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
282,
283,
284,
285,
286,
74,
177
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 23794638,
"mb": 262144,
"mbk": 1,
"gb": 262144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
20,
287,
288
]
},
{
"tb": 12800,
"tbk": 1,
"tl": 130706,
"mb": 12800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
147,
148,
149,
150,
289,
290,
291
]
},
{
"tb": 64,
"tbk": 1,
"tl": 664381,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
163,
164,
218,
219,
220,
292,
293
]
},
{
"tb": 786432,
"tbk": 3,
"tl": 67461,
"mb": 786432,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
100,
101,
102,
103,
104,
105,
106,
294
]
},
{
"tb": 16,
"tbk": 1,
"tl": 23794896,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
295,
296,
297,
298,
299,
300,
301,
302,
303
]
},
{
"tb": 59888,
"tbk": 1111,
"tl": 835573,
"mb": 12864,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
163,
164,
304,
305,
306,
307,
308,
309,
310
]
},
{
"tb": 16,
"tbk": 1,
"tl": 6,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
178,
234,
311,
236,
237,
74,
177
]
},
{
"tb": 192,
"tbk": 1,
"tl": 7391,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
163,
164,
312,
313,
314,
315,
186
]
},
{
"tb": 96,
"tbk": 1,
"tl": 2559,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
163,
164,
316,
317,
318,
319,
320
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 43,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
20,
21,
321
]
},
{
"tb": 2888,
"tbk": 15,
"tl": 68,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
117,
118,
119,
120,
121,
122,
123,
322,
320
]
},
{
"tb": 432,
"tbk": 3,
"tl": 1129,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
147,
148,
149,
150,
323,
324,
325
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 23794851,
"mb": 65536,
"mbk": 1,
"gb": 65536,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
20,
326,
327
]
},
{
"tb": 256,
"tbk": 1,
"tl": 7114,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
328,
329,
330,
331,
332,
333
]
},
{
"tb": 16,
"tbk": 1,
"tl": 23804959,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
334,
335,
336,
337,
338,
339,
340,
341
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 2395054,
"mb": 2097152,
"mbk": 1,
"gb": 2097152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
42,
43,
44,
45,
342,
343,
344,
345
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 23815310,
"mb": 1024,
"mbk": 1,
"gb": 1024,
"gbk": 1,
"eb": 1024,
"ebk": 1,
"fs": [
346,
347,
348,
349,
350,
351,
352,
353,
354,
355,
356,
357,
358,
359,
360,
361,
362,
363,
364,
365,
366
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 1545356,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
275,
276,
277,
278,
279,
280,
367
]
},
{
"tb": 16,
"tbk": 1,
"tl": 592064,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
100,
101,
102,
368,
128,
73
]
},
{
"tb": 11520,
"tbk": 3,
"tl": 1676,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
369,
370,
371,
372,
373,
374,
375,
376,
377
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 14929,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
378,
379,
380,
381,
382
]
},
{
"tb": 48,
"tbk": 2,
"tl": 1139230,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
76,
77,
78,
79,
80,
81,
82,
383,
384
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
178,
385,
386,
180
]
},
{
"tb": 3960,
"tbk": 27,
"tl": 62,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
117,
118,
119,
120,
121,
122,
123,
41,
387
]
},
{
"tb": 25600,
"tbk": 1,
"tl": 61,
"mb": 25600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
187,
388,
389,
49
]
},
{
"tb": 1040,
"tbk": 10,
"tl": 229,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
390,
391,
392,
393,
394,
395
]
},
{
"tb": 71136,
"tbk": 156,
"tl": 35037,
"mb": 20976,
"mbk": 46,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
396,
397,
398,
399,
400,
401
]
},
{
"tb": 96,
"tbk": 1,
"tl": 11,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
163,
164,
402,
403,
404,
405,
406
]
},
{
"tb": 299008,
"tbk": 3,
"tl": 28659,
"mb": 299008,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
42,
43,
44,
45,
342,
343,
344,
407
]
},
{
"tb": 104857600,
"tbk": 800,
"tl": 1816210019,
"mb": 104857600,
"mbk": 800,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
100,
101,
102,
103,
104,
105,
106,
408
]
},
{
"tb": 24,
"tbk": 1,
"tl": 115,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
178,
409,
410,
259,
411,
265,
186
]
},
{
"tb": 128,
"tbk": 1,
"tl": 96,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
275,
276,
277,
278,
279,
280,
412
]
},
{
"tb": 240,
"tbk": 2,
"tl": 592048,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
178,
413,
73,
74,
177
]
},
{
"tb": 2883584,
"tbk": 11,
"tl": 6472878,
"mb": 2883584,
"mbk": 11,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
414,
415,
416
]
},
{
"tb": 64,
"tbk": 1,
"tl": 6985,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
163,
164,
218,
219,
220,
292,
417
]
},
{
"tb": 32,
"tbk": 2,
"tl": 569880,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
418,
419,
420,
421,
422,
423,
424,
425
]
},
{
"tb": 16,
"tbk": 1,
"tl": 727196,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
426,
427,
428,
429,
430,
431,
432,
433,
434
]
},
{
"tb": 32704,
"tbk": 9,
"tl": 664454,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
163,
164,
218,
219,
220,
435,
293
]
},
{
"tb": 96,
"tbk": 1,
"tl": 16019,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
436,
437,
438,
439,
440
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1116,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
328,
329,
330,
441,
325,
442
]
},
{
"tb": 1440,
"tbk": 3,
"tl": 1744,
"mb": 1008,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
443,
444,
445,
446,
447,
448,
449,
450
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 1342051,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
42,
43,
44,
45,
342,
343,
344,
451
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 13265,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
378,
379,
380,
381,
452
]
},
{
"tb": 512,
"tbk": 1,
"tl": 17,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
453,
190,
186,
180
]
},
{
"tb": 409600,
"tbk": 1,
"tl": 16757,
"mb": 409600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
228,
229,
230,
231,
454,
440,
320,
455
]
},
{
"tb": 2416,
"tbk": 10,
"tl": 1010,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
456,
457,
458,
459,
460,
461,
462,
463
]
},
{
"tb": 2288,
"tbk": 22,
"tl": 291,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
390,
391,
392,
464,
465,
466
]
},
{
"tb": 16,
"tbk": 1,
"tl": 74,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
178,
234,
311,
263,
264,
265,
186
]
},
{
"tb": 96,
"tbk": 1,
"tl": 12,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
178,
262,
236,
237,
74,
177
]
},
{
"tb": 16,
"tbk": 1,
"tl": 23807769,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
163,
467,
468,
469,
470,
471,
472,
473,
474,
475,
476
]
},
{
"tb": 264,
"tbk": 2,
"tl": 1176611,
"mb": 264,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
59,
477,
478,
479,
480,
481,
482,
483,
484
]
},
{
"tb": 11520,
"tbk": 3,
"tl": 1683,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
369,
485,
486,
487,
488,
387,
176,
74
]
},
{
"tb": 144,
"tbk": 1,
"tl": 22388,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
489,
490,
491,
492,
84,
85,
86,
493,
494,
74
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2065,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
495,
440
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 18361674,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
496,
497,
498
]
},
{
"tb": 64,
"tbk": 1,
"tl": 21726,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
117,
118,
119,
120,
121,
122,
499,
494,
74
]
},
{
"tb": 8,
"tbk": 1,
"tl": 21411897,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
500,
501,
502,
503,
504,
505,
506,
507,
508
]
},
{
"tb": 192,
"tbk": 2,
"tl": 180,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
163,
164,
218,
219,
220,
221,
509
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 28544,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
100,
101,
102,
510,
511,
406
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
178,
512,
513,
514,
180
]
},
{
"tb": 4968,
"tbk": 9,
"tl": 2899,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
515,
516,
517,
518,
519,
520
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1122,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
117,
118,
119,
521,
522,
523,
524,
325,
442
]
},
{
"tb": 1440,
"tbk": 12,
"tl": 2468,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
163,
164,
223,
224,
225,
226,
525
]
},
{
"tb": 48,
"tbk": 1,
"tl": 4445,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
526,
527,
528,
529,
530,
531,
532,
533,
534
]
},
{
"tb": 32,
"tbk": 1,
"tl": 131,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
100,
101,
102,
535,
536,
537
]
},
{
"tb": 256,
"tbk": 3,
"tl": 1138916,
"mb": 192,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
163,
164,
538,
539,
540,
541,
542
]
},
{
"tb": 16,
"tbk": 1,
"tl": 113,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
178,
234,
311,
263,
543,
544,
545
]
},
{
"tb": 409600,
"tbk": 1,
"tl": 6621,
"mb": 409600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
187,
546,
547,
39
]
},
{
"tb": 160,
"tbk": 1,
"tl": 7425,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
163,
164,
548,
549,
550,
551,
49
]
},
{
"tb": 149504,
"tbk": 3,
"tl": 16398,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
552,
553,
554
]
},
{
"tb": 19200,
"tbk": 1,
"tl": 2290858,
"mb": 19200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
59,
555,
556,
557,
104,
105,
106,
408,
558,
559
]
},
{
"tb": 288,
"tbk": 1,
"tl": 9741,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
163,
164,
560,
561,
562,
563,
19
]
},
{
"tb": 8832,
"tbk": 16,
"tl": 3235,
"mb": 2760,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
515,
516,
517,
564,
565,
566
]
},
{
"tb": 524320,
"tbk": 3,
"tl": 9245,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
567,
568,
569
]
},
{
"tb": 299008,
"tbk": 3,
"tl": 30755,
"mb": 299008,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
42,
43,
44,
45,
342,
570,
571,
19
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2290867,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
572,
573,
574,
575,
576,
577,
578,
579,
580
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2810,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
581,
582,
583,
584,
585,
586,
587,
588
]
},
{
"tb": 2000,
"tbk": 10,
"tl": 151,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
589,
590,
591,
592,
593,
594
]
},
{
"tb": 96,
"tbk": 1,
"tl": 27,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
163,
164,
402,
403,
404,
595,
185
]
},
{
"tb": 838860800,
"tbk": 1,
"tl": 801848,
"mb": 838860800,
"mbk": 1,
"gb": 838860800,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
100,
101,
102,
596,
597,
598
]
},
{
"tb": 256,
"tbk": 1,
"tl": 23795009,
"mb": 256,
"mbk": 1,
"gb": 256,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
251,
599,
600,
601,
602,
603,
604,
605
]
},
{
"tb": 320,
"tbk": 2,
"tl": 1139222,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
163,
164,
606,
607,
608,
609,
384
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 635803,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
275,
276,
277,
278,
279,
280,
610
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
178,
512,
513,
611,
612,
74,
177
]
},
{
"tb": 896,
"tbk": 6,
"tl": 10303,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
163,
164,
218,
219,
220,
613,
614
]
},
{
"tb": 25600,
"tbk": 1,
"tl": 7384,
"mb": 25600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
100,
101,
102,
615,
616,
617
]
},
{
"tb": 256,
"tbk": 1,
"tl": 10269,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
251,
599,
600,
601,
602,
603,
618,
619
]
},
{
"tb": 576,
"tbk": 2,
"tl": 47,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
620,
621,
622,
623,
624,
625,
626,
627,
628
]
},
{
"tb": 48,
"tbk": 2,
"tl": 1184104,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
76,
77,
78,
79,
80,
81,
82,
629,
630
]
},
{
"tb": 256,
"tbk": 1,
"tl": 110,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
251,
252,
253,
254,
255,
256,
257,
258,
259,
411
]
},
{
"tb": 69623,
"tbk": 13,
"tl": 741038,
"mb": 34816,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
163,
164,
304,
631,
632,
633,
634
]
},
{
"tb": 512,
"tbk": 1,
"tl": 15,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
635,
636,
190
]
},
{
"tb": 79360,
"tbk": 323,
"tl": 174020,
"mb": 15616,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
42,
637,
638,
639,
640,
641,
642,
643,
644
]
},
{
"tb": 32,
"tbk": 1,
"tl": 97,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
228,
645,
646,
647,
648,
649,
650,
651,
652,
653
]
},
{
"tb": 128,
"tbk": 1,
"tl": 216616,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
147,
148,
149,
150,
654,
237,
74
]
},
{
"tb": 256,
"tbk": 2,
"tl": 455,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
163,
164,
655,
656,
657,
658,
41
]
},
{
"tb": 11520,
"tbk": 3,
"tl": 1142,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
275,
276,
277,
278,
279,
280,
659
]
},
{
"tb": 72,
"tbk": 1,
"tl": 17423,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
178,
660,
455,
74,
177
]
},
{
"tb": 25632,
"tbk": 3,
"tl": 2817849,
"mb": 25632,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
661,
662,
663,
664,
665,
666,
667,
668
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1523690,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
669,
74
]
},
{
"tb": 72,
"tbk": 1,
"tl": 22517,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
59,
555,
556,
557,
104,
105,
106,
294,
494,
74
]
},
{
"tb": 256,
"tbk": 1,
"tl": 10,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
117,
118,
119,
521,
522,
523,
670,
176,
74
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 34,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
100,
101,
102,
510,
671,
74
]
},
{
"tb": 39090,
"tbk": 28,
"tl": 56596,
"mb": 19584,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
378,
379,
380,
381,
672
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 45522,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
328,
329,
330,
673,
124,
74
]
},
{
"tb": 4608,
"tbk": 24,
"tl": 7677,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
87,
88,
89,
674,
675,
676
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2364,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
42,
677,
678,
679,
680,
681,
322,
320
]
},
{
"tb": 96,
"tbk": 1,
"tl": 7408,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
163,
164,
682,
683,
684,
685,
186
]
},
{
"tb": 2400,
"tbk": 20,
"tl": 1643,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
686,
94
]
},
{
"tb": 2880,
"tbk": 10,
"tl": 3348,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
687,
688,
689,
690,
691,
692
]
},
{
"tb": 25601,
"tbk": 1,
"tl": 103,
"mb": 25601,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
228,
645,
646,
647,
648,
649,
650,
693,
652,
653
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2563,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
59,
555,
556,
557,
104,
105,
106,
107,
694,
320
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2369,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
33,
34,
35,
36,
695,
322,
320,
455
]
},
{
"tb": 128,
"tbk": 1,
"tl": 2838,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
696,
697,
698,
699,
700,
701,
702,
703
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 2382,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
42,
704,
705,
706,
707,
708,
709,
710,
711
]
},
{
"tb": 96,
"tbk": 1,
"tl": 12,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
489,
712,
713,
714,
715,
716,
717,
718,
719
]
},
{
"tb": 65472,
"tbk": 10,
"tl": 76,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
163,
164,
218,
219,
220,
720,
721
]
},
{
"tb": 2097152,
"tbk": 16384,
"tl": 14890,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
100,
101,
102,
722,
723,
724
]
},
{
"tb": 512,
"tbk": 1,
"tl": 5720,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
725,
726,
727,
728,
729,
730,
731,
732
]
},
{
"tb": 11520,
"tbk": 3,
"tl": 436,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
635,
733,
324
]
},
{
"tb": 409600,
"tbk": 1,
"tl": 3849,
"mb": 409600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
187,
546,
734,
39
]
},
{
"tb": 512,
"tbk": 1,
"tl": 2788,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
735,
185,
186,
180
]
},
{
"tb": 2097152,
"tbk": 8,
"tl": 176644,
"mb": 2097152,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
100,
101,
102,
103,
104,
105,
106,
736
]
},
{
"tb": 480,
"tbk": 4,
"tl": 7097,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
737,
738
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1423,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
163,
164,
402,
403,
404,
739,
124
]
},
{
"tb": 48,
"tbk": 1,
"tl": 123696,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
147,
148,
149,
150,
740,
741,
742
]
},
{
"tb": 524320,
"tbk": 3,
"tl": 9274,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
635,
743,
568
]
},
{
"tb": 2888,
"tbk": 15,
"tl": 409,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
117,
118,
119,
120,
121,
122,
744,
94,
125
]
},
{
"tb": 2088,
"tbk": 3,
"tl": 19475,
"mb": 2088,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
33,
34,
35,
36,
37,
745,
182,
183
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1240238,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
178,
746,
747,
748,
749,
750,
751
]
},
{
"tb": 96,
"tbk": 1,
"tl": 9,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
163,
164,
402,
403,
404,
752,
49
]
},
{
"tb": 480,
"tbk": 4,
"tl": 6965,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
737,
753
]
},
{
"tb": 92160,
"tbk": 3,
"tl": 1154,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
275,
276,
277,
278,
279,
280,
754
]
},
{
"tb": 11520,
"tbk": 3,
"tl": 376,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
275,
276,
277,
278,
279,
280,
755
]
},
{
"tb": 8,
"tbk": 1,
"tl": 19163775,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
500,
756,
757,
758,
759,
760,
761,
762,
763
]
},
{
"tb": 384,
"tbk": 1,
"tl": 569629,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
764,
765,
766,
767,
768,
769,
770,
771,
772
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 1520892,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
275,
276,
277,
278,
279,
280,
773
]
},
{
"tb": 64,
"tbk": 1,
"tl": 159,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
163,
164,
218,
219,
220,
774,
509
]
},
{
"tb": 32704,
"tbk": 9,
"tl": 7056,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
163,
164,
218,
219,
220,
435,
417
]
},
{
"tb": 512,
"tbk": 1,
"tl": 46,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
775,
776,
777,
778,
779,
780,
781,
782
]
},
{
"tb": 16,
"tbk": 1,
"tl": 111,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
178,
234,
235,
263,
543,
544,
545
]
},
{
"tb": 128,
"tbk": 1,
"tl": 105,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
328,
329,
330,
783,
259,
411
]
},
{
"tb": 128,
"tbk": 1,
"tl": 569732,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
328,
329,
330,
783,
259,
260
]
},
{
"tb": 1968,
"tbk": 2,
"tl": 56,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
784,
785,
786,
787,
788,
789
]
},
{
"tb": 25600,
"tbk": 1,
"tl": 7434,
"mb": 25600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
100,
101,
102,
510,
790,
49
]
},
{
"tb": 32,
"tbk": 1,
"tl": 77,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
791,
792,
793,
794,
795,
796,
797,
798,
799
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 1354853,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
42,
43,
44,
45,
342,
800,
801,
802
]
},
{
"tb": 838860800,
"tbk": 65536,
"tl": 425032,
"mb": 12800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
328,
329,
330,
803,
804,
805
]
},
{
"tb": 838860800,
"tbk": 1,
"tl": 3514488,
"mb": 838860800,
"mbk": 1,
"gb": 838860800,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
369,
485,
486,
487,
806,
807,
808,
809
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 445706,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
552,
810,
811
]
},
{
"tb": 224,
"tbk": 1,
"tl": 8047,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
163,
164,
812,
813,
814,
815,
183
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1435355,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
59,
816,
817,
818,
819,
820,
821,
822,
823
]
},
{
"tb": 96,
"tbk": 1,
"tl": 8043,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
163,
164,
402,
403,
404,
824,
183
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2804,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
825,
826,
827,
828,
829,
830,
831,
832
]
},
{
"tb": 96,
"tbk": 2,
"tl": 592043,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
833,
834
]
},
{
"tb": 192,
"tbk": 3,
"tl": 15990,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
20,
21,
835
]
},
{
"tb": 149504,
"tbk": 3,
"tl": 18611,
"mb": 147456,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
836,
837,
19
]
},
{
"tb": 480,
"tbk": 4,
"tl": 188,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
15,
322
]
},
{
"tb": 128,
"tbk": 1,
"tl": 134,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
100,
101,
102,
838,
536,
537
]
},
{
"tb": 409600,
"tbk": 32,
"tl": 84446,
"mb": 409600,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
328,
329,
330,
839,
840,
841
]
},
{
"tb": 2888,
"tbk": 15,
"tl": 403,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
117,
118,
119,
120,
121,
122,
744,
94,
95
]
},
{
"tb": 48,
"tbk": 2,
"tl": 108,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
178,
842,
843,
844,
845,
846,
847
]
},
{
"tb": 19200,
"tbk": 1,
"tl": 23946044,
"mb": 19200,
"mbk": 1,
"gb": 19200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
59,
848,
849,
850,
851,
852,
853,
854,
855
]
},
{
"tb": 192,
"tbk": 1,
"tl": 22371,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
59,
555,
556,
557,
104,
105,
106,
736,
494,
74
]
},
{
"tb": 128,
"tbk": 1,
"tl": 123691,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
147,
148,
149,
150,
856,
741,
742
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1770,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
33,
34,
35,
36,
695,
16,
124,
74
]
},
{
"tb": 48,
"tbk": 1,
"tl": 908,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
178,
857,
406,
74,
177
]
},
{
"tb": 19200,
"tbk": 1,
"tl": 21459754,
"mb": 19200,
"mbk": 1,
"gb": 19200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
59,
858,
859,
860,
861,
862,
863,
864,
865
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2759,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
33,
34,
35,
36,
37,
866,
867,
868
]
},
{
"tb": 2880,
"tbk": 3,
"tl": 19884,
"mb": 2880,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
42,
677,
678,
679,
680,
869,
182,
183
]
},
{
"tb": 96,
"tbk": 1,
"tl": 31,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
163,
164,
402,
403,
404,
870,
185
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1240248,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
871,
872,
873,
874,
875,
876,
877,
878,
879
]
},
{
"tb": 24,
"tbk": 1,
"tl": 2332679,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
880,
881,
882,
883,
884,
74,
177
]
},
{
"tb": 1230227,
"tbk": 7,
"tl": 10374,
"mb": 819654,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
163,
164,
304,
631,
632,
633,
885
]
},
{
"tb": 25600,
"tbk": 2,
"tl": 340334,
"mb": 12800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
275,
276,
277,
278,
279,
280,
886
]
},
{
"tb": 24,
"tbk": 1,
"tl": 133,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
59,
887,
888,
889,
890,
891,
892,
893,
894
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
228,
645,
646,
647,
895,
896,
897,
898,
899,
611
]
},
{
"tb": 24,
"tbk": 1,
"tl": 2332657,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
900,
901,
902,
903,
904,
74,
177
]
},
{
"tb": 96,
"tbk": 1,
"tl": 35,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
178,
262,
263,
543,
544,
545,
74
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 5656,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
187,
546,
905,
867
]
},
{
"tb": 13152,
"tbk": 86,
"tl": 547382,
"mb": 13152,
"mbk": 86,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
42,
43,
44,
45,
46,
127,
745,
182
]
},
{
"tb": 80,
"tbk": 1,
"tl": 23946073,
"mb": 80,
"mbk": 1,
"gb": 80,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
906,
907,
908,
909,
910,
911,
912,
913,
914
]
},
{
"tb": 2088,
"tbk": 3,
"tl": 2247,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
33,
34,
35,
36,
695,
41,
387,
176
]
},
{
"tb": 104857600,
"tbk": 800,
"tl": 16265838746,
"mb": 104857600,
"mbk": 800,
"gb": 104857600,
"gbk": 800,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
100,
101,
102,
915,
916,
917
]
},
{
"tb": 512,
"tbk": 1,
"tl": 16,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
635,
918,
185
]
},
{
"tb": 384,
"tbk": 2,
"tl": 72,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
919,
920,
921,
922,
923,
924,
925,
926,
927
]
},
{
"tb": 16,
"tbk": 1,
"tl": 22378,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
100,
101,
102,
368,
83,
84,
85,
86
]
},
{
"tb": 32,
"tbk": 1,
"tl": 794,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
178,
928,
406,
74,
177
]
},
{
"tb": 256,
"tbk": 1,
"tl": 10,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
100,
101,
102,
929,
176,
74
]
},
{
"tb": 24,
"tbk": 1,
"tl": 569745,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
178,
409,
410,
259,
260,
545,
74
]
},
{
"tb": 64,
"tbk": 1,
"tl": 7396,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
163,
164,
218,
219,
220,
774,
222
]
},
{
"tb": 262144,
"tbk": 2,
"tl": 2870295,
"mb": 262144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
328,
329,
330,
930,
931,
932
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 7421,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
20,
21,
933
]
},
{
"tb": 25600,
"tbk": 2,
"tl": 340327,
"mb": 12800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
275,
276,
277,
278,
279,
280,
934
]
},
{
"tb": 32,
"tbk": 1,
"tl": 47,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
791,
935,
936,
937,
938,
939,
940,
941,
942
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 33888,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
328,
329,
330,
943,
944,
74
]
},
{
"tb": 2280,
"tbk": 5,
"tl": 1794,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
396,
397,
398,
945,
946,
947
]
},
{
"tb": 2880,
"tbk": 12,
"tl": 1701,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
163,
164,
218,
219,
220,
948,
949
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 168764,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
496,
497,
950
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2756,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
951,
952,
953,
954,
955,
956,
957,
958,
959
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1664,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
960,
961,
962,
963,
964,
965,
966,
967
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
228,
645,
646,
647,
895,
896,
897,
898,
968,
611
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
228,
645,
646,
647,
895,
896,
897,
898,
899,
514
]
},
{
"tb": 40,
"tbk": 1,
"tl": 19163817,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
969,
970,
971,
972,
973,
974,
975,
976,
977
]
},
{
"tb": 48,
"tbk": 1,
"tl": 4486,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
978,
979,
980,
981,
982,
983,
984,
985,
986
]
},
{
"tb": 696,
"tbk": 3,
"tl": 768,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
68,
69,
70,
93,
94,
987,
988
]
},
{
"tb": 2424,
"tbk": 2,
"tl": 18524689,
"mb": 2400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
989,
990,
991,
992,
993,
994,
995,
996,
997
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
163,
467,
468,
469,
470,
471,
472,
473,
474,
998,
49
]
},
{
"tb": 3960,
"tbk": 27,
"tl": 525,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
117,
118,
119,
120,
121,
122,
744,
94,
987
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 2760,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
42,
999,
1000,
1001,
1002,
1003,
1004,
1005,
1006
]
},
{
"tb": 32,
"tbk": 1,
"tl": 19,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
187,
1007,
389,
49
]
},
{
"tb": 16,
"tbk": 1,
"tl": 72,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
178,
234,
235,
263,
264,
265,
186
]
},
{
"tb": 16,
"tbk": 1,
"tl": 23946212,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1008,
1009,
1010,
1011,
1012,
1013,
1014,
1015
]
},
{
"tb": 96,
"tbk": 1,
"tl": 23807779,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
1016,
1017,
1018,
1019,
1020,
1021,
1022,
1023,
1024
]
},
{
"tb": 64,
"tbk": 1,
"tl": 6980,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
1025,
1026,
186,
180
]
},
{
"tb": 160,
"tbk": 1,
"tl": 7379,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035
]
},
{
"tb": 512,
"tbk": 1,
"tl": 22484,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
163,
164,
1036,
1037,
1038,
1039,
74
]
},
{
"tb": 32,
"tbk": 1,
"tl": 4564,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
97,
98,
99,
328,
329,
330,
1040,
49,
180
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1766,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
42,
677,
678,
679,
680,
681,
16,
124
]
},
{
"tb": 24,
"tbk": 1,
"tl": 21459992,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
900,
1041,
1042,
1043,
1044,
1045,
1046,
1047,
1048
]
},
{
"tb": 2097152,
"tbk": 8,
"tl": 389910,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1049,
1050,
1051,
1052,
1053,
1054,
1055,
1056
]
},
{
"tb": 12800,
"tbk": 1,
"tl": 4473,
"mb": 12800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
147,
148,
149,
150,
1057,
152,
153
]
},
{
"tb": 32,
"tbk": 1,
"tl": 126,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
178,
385,
1058,
1059,
1060,
1061,
1062
]
},
{
"tb": 96,
"tbk": 1,
"tl": 1523700,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
163,
164,
402,
403,
404,
1063,
74
]
},
{
"tb": 24,
"tbk": 1,
"tl": 2332662,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
59,
1064,
1065,
1066,
1067,
74,
177
]
},
{
"tb": 16,
"tbk": 1,
"tl": 118,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
426,
1068,
1069,
1070,
1071,
1072,
1073,
1074,
74,
177
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 3061300,
"mb": 2097152,
"mbk": 1,
"gb": 2097152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
42,
43,
44,
45,
342,
1075,
805,
1076
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 33811,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
20,
21,
1077
]
},
{
"tb": 409600,
"tbk": 1,
"tl": 16387,
"mb": 409600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
228,
229,
230,
231,
1078,
440,
320,
455
]
},
{
"tb": 48,
"tbk": 2,
"tl": 72,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
178,
1079,
843,
844,
845,
846,
847
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
228,
645,
646,
647,
895,
896,
897,
898,
968,
514
]
},
{
"tb": 10592,
"tbk": 32,
"tl": 85989,
"mb": 10592,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
42,
43,
44,
45,
46,
127,
866,
867
]
},
{
"tb": 720,
"tbk": 3,
"tl": 2746,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
117,
118,
119,
521,
522,
523,
1080,
1081,
325
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2816,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
1082,
1083,
1084,
1085,
1086,
1087,
1088,
1089
]
},
{
"tb": 2880,
"tbk": 3,
"tl": 2236,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
42,
677,
678,
679,
680,
681,
41,
387
]
},
{
"tb": 256,
"tbk": 1,
"tl": 8341,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
187,
1090,
1091,
49
]
},
{
"tb": 838860800,
"tbk": 100,
"tl": 945339842,
"mb": 838860800,
"mbk": 100,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
369,
485,
486,
487,
806,
1092,
1093,
1094
]
},
{
"tb": 24,
"tbk": 1,
"tl": 9,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
59,
555,
556,
557,
104,
105,
106,
107,
1095,
612
]
},
{
"tb": 96,
"tbk": 1,
"tl": 664387,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
163,
164,
402,
403,
404,
1096,
293
]
},
{
"tb": 48,
"tbk": 1,
"tl": 23807694,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
1097,
1098,
1099,
1100,
1101,
1102,
612,
74
]
},
{
"tb": 96,
"tbk": 1,
"tl": 6989,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
163,
164,
402,
403,
404,
1096,
417
]
}
],
"ftbl": [
"[root]",
"0x5e58b37c13b9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5e58b36934ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e58b37607d5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b37607d5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b37607d5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b36caae7: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5e58b373b1b0: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:140:51)",
"0x5e58b37dc476: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5e58b35dafc1: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5e58b3985819: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5e58b39842e9: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5e58b3893840: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e58b3893aa9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e58b38a3111: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e58b366a2b7: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x5e58b3704b91: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x5e58b36cd18f: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x5e58b366d93d: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x5e58b3672bc6: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x5e58b3664e2f: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x5e58b3834338: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x5e58b35d26e8: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:227:28)",
"0x5e58b39bca99: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5e58b39bcc0a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e58b3743033: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b3743033: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b3743033: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b3743033: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a99ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a6545: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d3fdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b36e96db: winter_prover::Prover::generate_proof (prover/src/lib.rs:293:23)",
"0x5e58b3692a6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e58b3760875: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b3760875: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b3760875: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b363aa4c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x5e58b3635f66: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x5e58b372cd0d: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x5e58b3732ad4: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x5e58b366c3c0: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x5e58b3686dec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e58b3760b95: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b3760b95: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b3760b95: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b3631785: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5e58b373fb50: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x5e58b3732970: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x5e58b360250b: winter_verifier::verify (verifier/src/lib.rs:109:19)",
"0x5e58b368a23c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e58b3744bd9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b3744bd9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b3744bd9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b3744bd9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a900a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a6c44: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d3c2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b35f24b2: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x5e58b36897bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e58b37472ef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b37472ef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b37472ef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b37472ef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a94cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a5d15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d27dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b36038d5: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x5e58b3760646: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b3760646: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b3760646: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b35f6a78: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x5e58b3623be1: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:135:9)",
"0x5e58b36ed266: winter_prover::Prover::generate_proof (prover/src/lib.rs:417:21)",
"0x5e58b36fc2ee: winter_prover::Prover::prove (prover/src/lib.rs:175:37)",
"0x5e58b369006c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e58b3710f38: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b3710f38: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b3710f38: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5e58b37977c5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5e58b37977c5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5e58b37977c5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5e58b35dd8e2: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x5e58b35dd750: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5e58b3796df5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5e58b3796df5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5e58b3796df5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5e58b39bf63b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5e58b39bef01: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5e58b39b838b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5e58b39b1e3d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5e58b39bd748: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5e58b39c10a7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5e58b363b882: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x5e58b366a46d: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x5e58b3731cf0: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x5e58b35fe7a8: winter_verifier::perform_verification (verifier/src/lib.rs:306:42)",
"0x5e58b3710e08: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b3710e08: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b3710e08: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5e58b3796b85: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5e58b3796b85: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5e58b3796b85: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5e58b375fd83: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5e58b3796d25: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5e58b3796d25: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5e58b3796d25: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5e58b375e0e6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5e58b3688d4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e58b374e86f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b374e86f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b374e86f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b374e86f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a961d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a4285: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d2c1d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b36e8eb3: winter_prover::Prover::generate_proof (prover/src/lib.rs:222:20)",
"0x5e58b39b061c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b39b061c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b39b061c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5e58b37972d9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5e58b37972d9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5e58b37972d9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5e58b3669dbc: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x5e58b36ec30a: winter_prover::Prover::generate_proof (prover/src/lib.rs:608:34)",
"0x5e58b37314ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x5e58b35fe636: winter_verifier::perform_verification (verifier/src/lib.rs:305:9)",
"0x5e58b363acc7: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x5e58b3623973: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:33)",
"0x5e58b35f6adb: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x5e58b374fecd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b374fecd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b374fecd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b374fecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a909a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a4544: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d373a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b373250b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x5e58b368f0bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e58b37406af: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b37406af: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b37406af: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b37406af: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b3795705: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5e58b37a650a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d2b3d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b35f9891: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x5e58b3711511: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b3711511: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b3711511: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5e58b3795c80: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5e58b372b1b0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x5e58b3602038: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:216:32)",
"0x5e58b37e1e5f: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5e58b373f997: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x5e58b375205d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b375205d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b375205d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b375205d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a8dda: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a5de4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d31ca: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b37327eb: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x5e58b39f9f79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5e58b39f8709: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5e58b36c2b21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e58b36c8498: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e58b378a7ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e58b367bdb7: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x5e58b3708bae: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x5e58b39afc69: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5e58b39acc1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e58b39a9db6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b39a9db6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b39a9db6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b3670b68: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x5e58b36ec19c: winter_prover::Prover::generate_proof (prover/src/lib.rs:600:25)",
"0x5e58b365c27c: winterfell::main (winterfell/src/main.rs:54:17)",
"0x5e58b37c0847: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x5e58b372ce73: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x5e58b365c822: winterfell::main (winterfell/src/main.rs:71:11)",
"0x5e58b367db7f: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x5e58b3681040: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x5e58b3733104: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x5e58b360b21f: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x5e58b35fea15: winter_verifier::perform_verification (verifier/src/lib.rs:311:25)",
"0x5e58b36025da: winter_verifier::verify (verifier/src/lib.rs:111:21)",
"0x5e58b370f485: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5e58b367dd26: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x5e58b360fca0: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x5e58b35feabc: winter_verifier::perform_verification (verifier/src/lib.rs:317:25)",
"0x5e58b37c1c5a: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x5e58b38356a7: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x5e58b3718889: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x5e58b36087be: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x5e58b35feb34: winter_verifier::perform_verification (verifier/src/lib.rs:319:28)",
"0x5e58b370407b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5e58b370128d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5e58b38752ea: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5e58b3850009: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5e58b37b9a75: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5e58b3630598: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5e58b374459f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b374459f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b374459f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b374459f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37940d6: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5e58b37a6bc5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d430d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b36023a8: winter_verifier::verify (verifier/src/lib.rs:102:24)",
"0x5e58b37474ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b37474ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b37474ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b37474ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a9d3d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a45f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d421d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b360fff2: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x5e58b36befe1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e58b36c80d8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e58b378667d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e58b36e8a42: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:512:13)",
"0x5e58b35fd8e5: winter_verifier::perform_verification (verifier/src/lib.rs:185:13)",
"0x5e58b39bd0f0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e58b39b1669: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e58b39b0e51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e58b39b0950: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x5e58b38435ed: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x5e58b398462a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e58b38dbf36: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b38dbf36: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b38dbf36: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b3637dac: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x5e58b3704d4a: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x5e58b3662245: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x5e58b365d330: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:177:13)",
"0x5e58b373b518: winter_prover::trace::Trace::validate (src/trace/mod.rs:123:26)",
"0x5e58b36ed578: winter_prover::Prover::generate_proof (prover/src/lib.rs:379:17)",
"0x5e58b36a5611: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e58b36c8288: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e58b3786c0b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e58b36363c9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x5e58b360b6df: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x5e58b374b95f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b374b95f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b374b95f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b374b95f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a9a4d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a5e15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d3f5d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b38497af: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x5e58b3686b4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e58b36e5012: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b36e5012: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b36e5012: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5e58b3797b05: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5e58b3797b05: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5e58b3797b05: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5e58b35e5b95: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x5e58b36e6010: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:354:9)",
"0x5e58b3622a9c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:51:13)",
"0x5e58b36ece70: winter_prover::Prover::generate_proof (prover/src/lib.rs:449:13)",
"0x5e58b365d21b: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:175:9)",
"0x5e58b36e5b72: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:371:13)",
"0x5e58b37c62cb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:64:9)",
"0x5e58b35fefcc: winter_verifier::perform_verification (verifier/src/lib.rs:225:43)",
"0x5e58b3692fac: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e58b37488df: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b37488df: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b37488df: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b37488df: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b3793b4e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5e58b37a6415: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d42ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b36054f7: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x5e58b39f7adc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x5e58b39f6d6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x5e58b39f6ae8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x5e58b39f6ae8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x5e58b39f6124: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5e58b39f3d43: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x5e58b37160d2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x5e58b36949ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e58b3760a55: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b3760a55: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b3760a55: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b36e9877: winter_prover::Prover::generate_proof (prover/src/lib.rs:306:39)",
"0x5e58b3631428: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x5e58b36e9132: winter_prover::Prover::generate_proof (prover/src/lib.rs:262:22)",
"0x5e58b373a55d: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:243:25)",
"0x5e58b365cd94: winterfell::build_do_work_trace (winterfell/src/main.rs:91:5)",
"0x5e58b36fc60b: winterfell::main::{{closure}} (winterfell/src/main.rs:30:23)",
"0x5e58b36e71b5: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:547:13)",
"0x5e58b36751b6: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x5e58b35f0238: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x5e58b369617c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e58b3758eef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b3758eef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b3758eef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b3758eef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a927d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a4c65: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37b59bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b36e9033: winter_prover::Prover::generate_proof (prover/src/lib.rs:248:41)",
"0x5e58b39f8ea0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e58b39f9108: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x5e58b39f94ca: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x5e58b39f94ca: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x5e58b39f926e: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x5e58b39f926e: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x5e58b39f935d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x5e58b365d247: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:176:13)",
"0x5e58b36ac7a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e58b36c8108: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e58b3788dae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e58b35ff1eb: winter_verifier::perform_verification (verifier/src/lib.rs:184:9)",
"0x5e58b36bdc21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e58b36c7dd8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e58b37896ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e58b36038ec: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x5e58b36064b0: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x5e58b3672d52: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x5e58b360377b: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x5e58b3725921: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x5e58b3843b73: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x5e58b384c5e9: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x5e58b38334f9: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x5e58b363137b: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x5e58b371145b: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5e58b371145b: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5e58b371145b: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5e58b3672e92: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x5e58b3672b2c: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x5e58b36ebb02: winter_prover::Prover::generate_proof (prover/src/lib.rs:571:9)",
"0x5e58b3746ecf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b3746ecf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b3746ecf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b3746ecf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a9d5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a6da7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d3edd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b365c0e6: winterfell::main (winterfell/src/main.rs:38:27)",
"0x5e58b36caa57: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5e58b3669259: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x5e58b366a739: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x5e58b3625e5c: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x5e58b35aad82: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5e58b35aad82: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e58b35aad82: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b35aad82: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b35aad82: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b35aad82: std::io::buffered::bufwriter::BufWriter<W>::with_capacity (io/buffered/bufwriter.rs:115:33)",
"0x5e58b35aad82: std::io::buffered::linewriter::LineWriter<W>::with_capacity (io/buffered/linewriter.rs:109:29)",
"0x5e58b35aad82: std::io::buffered::linewriter::LineWriter<W>::new (io/buffered/linewriter.rs:89:9)",
"0x5e58b35aad82: std::io::stdio::stdout::{{closure}} (src/io/stdio.rs:618:62)",
"0x5e58b35aad82: std::sync::once_lock::OnceLock<T>::get_or_init::{{closure}} (src/sync/once_lock.rs:250:50)",
"0x5e58b35aad82: std::sync::once_lock::OnceLock<T>::initialize::{{closure}} (src/sync/once_lock.rs:376:19)",
"0x5e58b35aad82: std::sync::once::Once::call_once_force::{{closure}} (src/sync/once.rs:208:40)",
"0x5e58b35aad82: std::sys_common::once::futex::Once::call (sys_common/once/futex.rs:124:21)",
"0x5e58b35a9eca: std::sync::once::Once::call_once_force (src/sync/once.rs:208:9)",
"0x5e58b35a9eca: std::sync::once_lock::OnceLock<T>::initialize (src/sync/once_lock.rs:375:9)",
"0x5e58b3a141c5: std::sync::once_lock::OnceLock<T>::get_or_try_init (src/sync/once_lock.rs:298:9)",
"0x5e58b3a141c5: std::sync::once_lock::OnceLock<T>::get_or_init (src/sync/once_lock.rs:250:15)",
"0x5e58b3a141c5: std::io::stdio::stdout (src/io/stdio.rs:618:14)",
"0x5e58b3a141c5: std::io::stdio::print_to (src/io/stdio.rs:1020:21)",
"0x5e58b3a141c5: std::io::stdio::_print (src/io/stdio.rs:1097:5)",
"0x5e58b365c03a: winterfell::main (winterfell/src/main.rs:36:5)",
"0x5e58b35f4a93: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x5e58b35dd8f5: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x5e58b368d69c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e58b374370f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b374370f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b374370f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b374370f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a827d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a6a55: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d28ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b3843ac4: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x5e58b3982700: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e58b3982939: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e58b3982132: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e58b363b17c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x5e58b363331d: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x5e58b36d9d5a: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:170:36)",
"0x5e58b36d834f: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:55:17)",
"0x5e58b365ce36: <winterfell::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (winterfell/src/main.rs:133:9)",
"0x5e58b3602330: winter_verifier::verify (verifier/src/lib.rs:98:38)",
"0x5e58b36710bd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x5e58b35def63: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x5e58b3733c15: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5e58b39bf2db: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5e58b39befb1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5e58b39b82ab: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5e58b39b1e9d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5e58b39bd42b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5e58b39c11e3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5e58b370272b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5e58b3701f9d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5e58b387569a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5e58b3862f7b: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5e58b386d1a9: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5e58b3867416: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5e58b36a8281: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e58b36c8a38: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e58b378933e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e58b37165c3: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x5e58b36eb02d: winter_prover::Prover::generate_proof (prover/src/lib.rs:524:9)",
"0x5e58b366d9b6: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x5e58b35d58cd: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x5e58b35dcd37: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x5e58b35e5b7f: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x5e58b37c5e16: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:26:25)",
"0x5e58b37c5f8c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:40:30)",
"0x5e58b36238b2: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:28)",
"0x5e58b35f2440: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x5e58b37dadb6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5e58b35dab11: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5e58b35fdfc9: winter_verifier::perform_verification (verifier/src/lib.rs:266:61)",
"0x5e58b37540ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b37540ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b37540ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b37540ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a844d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a4625: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d313d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b35dcd28: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x5e58b369030c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e58b3743b59: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b3743b59: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b3743b59: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b3743b59: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a86ba: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a69a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d2eea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b36eae8c: winter_prover::Prover::generate_proof (prover/src/lib.rs:505:52)",
"0x5e58b36e73d4: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:541:17)",
"0x5e58b38d50b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e58b38d7d69: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e58b38df322: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e58b363365f: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x5e58b3603845: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x5e58b3842e04: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x5e58b35fec03: winter_verifier::perform_verification (verifier/src/lib.rs:323:5)",
"0x5e58b375ce6f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b375ce6f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b375ce6f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b375ce6f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a8ecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a4825: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d3afd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b3843c5a: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x5e58b3625572: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x5e58b3637eb4: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x5e58b360fcb7: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x5e58b363307a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x5e58b36ec217: winter_prover::Prover::generate_proof (prover/src/lib.rs:603:29)",
"0x5e58b39bf9e9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b39bf9e9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b39bf9e9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b39bf9e9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5e58b39bfe2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b39bfdf7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b39bffce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b39c24c9: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x5e58b39b4f3e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5e58b39b6400: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5e58b39b5bf8: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5e58b39f89ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e58b39fa04c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b39fa04c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b39fa04c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5e58b39f7c7c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5e58b39f7c7c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5e58b39f7c7c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5e58b39f3ece: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x5e58b35fb29f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x5e58b3676df3: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x5e58b3741f8f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b3741f8f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b3741f8f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b3741f8f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a906d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a4f75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d279d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b35f23a8: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x5e58b3760af5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b3760af5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b3760af5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b366c499: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x5e58b368cc1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e58b35dd3e2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b35dd3e2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b35dd3e2: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5e58b35f024b: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x5e58b36e9e23: winter_prover::Prover::generate_proof (prover/src/lib.rs:423:33)",
"0x5e58b3633999: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x5e58b362830f: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x5e58b3627506: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x5e58b37c52f8: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:651:17)",
"0x5e58b35f0314: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x5e58b368c44a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e58b3741539: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b3741539: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b3741539: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b3741539: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a8b7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a6b14: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d444a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b36e94ea: winter_prover::Prover::generate_proof (prover/src/lib.rs:272:43)",
"0x5e58b36756b2: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x5e58b375e0a6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5e58b3715cbe: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x5e58b383114c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x5e58b35fae0c: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x5e58b36021dd: winter_verifier::verify (verifier/src/lib.rs:96:32)",
"0x5e58b370380b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5e58b3701a1d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5e58b3875c2a: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5e58b3854c7d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5e58b3857613: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5e58b3668237: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5e58b39b05cc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5e58b39b05cc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5e58b39b05cc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5e58b3842d9d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x5e58b3670e24: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x5e58b369420c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e58b374de49: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b374de49: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b374de49: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b374de49: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a893a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a57f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d301a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b35fdc5f: winter_verifier::perform_verification (verifier/src/lib.rs:218:40)",
"0x5e58b37e5d85: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x5e58b37e5e16: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5e58b35feedf: winter_verifier::perform_verification (verifier/src/lib.rs:228:13)",
"0x5e58b36ab8d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e58b36c8318: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e58b378912d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e58b35f2af2: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x5e58b381eac5: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5e58b36d7adf: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:41:22)",
"0x5e58b3622b39: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:36)",
"0x5e58b36ed1b5: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:21)",
"0x5e58b36feefa: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x5e58b363631c: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x5e58b36c7a21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e58b36c7e08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e58b378a42e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e58b3733f07: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x5e58b3665ec7: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x5e58b3677003: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x5e58b3678210: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x5e58b375fa22: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b375fa22: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b375fa22: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5e58b35d4036: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5e58b37c4c48: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:300:57)",
"0x5e58b36aa511: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e58b36c8a08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e58b378640e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e58b366dc69: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x5e58b386e55d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x5e58b3874a25: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x5e58b386786e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x5e58b35f31bf: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x5e58b35f0ac4: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x5e58b35f4f9d: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x5e58b3831472: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x5e58b366d99f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x5e58b3695edc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e58b375825f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b375825f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b375825f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b375825f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b379518b: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5e58b37a58d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d356d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b36e97f7: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:36)",
"0x5e58b375b9dd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b375b9dd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b375b9dd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b375b9dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a8c7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a5ff4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d386a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b373267b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x5e58b39bf12b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5e58b39bf061: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5e58b39b846b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5e58b39b2b71: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5e58b39b3307: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5e58b39c290b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5e58b360c325: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x5e58b362a081: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x5e58b3628e86: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5e58b36fa12f: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:655:31)",
"0x5e58b36e54c4: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b36e54c4: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b36e54c4: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5e58b3795bf6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5e58b365d0ad: <winterfell::WorkAir as winter_air::air::Air>::new (winterfell/src/main.rs:151:23)",
"0x5e58b37c4f36: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:226:17)",
"0x5e58b37df19e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5e58b36c7041: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e58b36c8018: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e58b37868be: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e58b36d9e9d: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:175:17)",
"0x5e58b37160f5: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x5e58b36762db: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x5e58b36e8f02: winter_prover::Prover::generate_proof (prover/src/lib.rs:233:27)",
"0x5e58b37c14e2: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x5e58b35fac98: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x5e58b373a131: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x5e58b370e853: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x5e58b37c1832: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x5e58b360303b: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:102:85)",
"0x5e58b37dfa6e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5e58b368a77c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e58b374ebf2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b374ebf2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b374ebf2: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b374ebf2: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5e58b37a9b7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a4c35: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d28cd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b3708a6a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x5e58b36d7028: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:83:31)",
"0x5e58b37dd7af: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5e58b39f90d9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e58b39f93d2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e58b39fa159: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x5e58b35de32d: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x5e58b36649fe: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x5e58b360feb1: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x5e58b374569a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b374569a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b374569a: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b374569a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5e58b37a84cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a6a1a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b3830f4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b366a243: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x5e58b398732c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b398732c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b398732c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5e58b38e09e9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5e58b38e09e9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5e58b38e09e9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5e58b37010af: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x5e58b35dfa26: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5e58b3733714: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5e58b373b9a5: winter_prover::trace::Trace::validate (src/trace/mod.rs:179:13)",
"0x5e58b36c52a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e58b36c8a98: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e58b378891b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e58b366a0fa: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x5e58b37258a2: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x5e58b360641d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x5e58b3753acf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b3753acf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b3753acf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b3753acf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a8a5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a5c45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d3e4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b35d21cf: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:283:9)",
"0x5e58b36ece8b: winter_prover::Prover::generate_proof (prover/src/lib.rs:450:13)",
"0x5e58b3670c0e: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x5e58b36ea4d0: winter_prover::Prover::generate_proof (prover/src/lib.rs:452:35)",
"0x5e58b367d3b5: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x5e58b3704db3: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x5e58b39b504e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5e58b39b69ec: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5e58b39b555a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5e58b3631c84: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b3631c84: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b3631c84: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5e58b3795c56: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5e58b3669a4c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x5e58b36aea31: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e58b36c8048: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e58b378b55e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e58b35ff3b2: winter_verifier::perform_verification (verifier/src/lib.rs:179:9)",
"0x5e58b363cc4b: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x5e58b39bf48b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5e58b39bee51: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5e58b39b854b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5e58b39b2c41: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5e58b39b32c7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5e58b39c295b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5e58b370109a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x5e58b36036db: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x5e58b3669aaf: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x5e58b375ad2f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b375ad2f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b375ad2f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b375ad2f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a856d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a5125: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d398d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b3842d29: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x5e58b374cb04: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b374cb04: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b374cb04: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b374cb04: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5e58b37a9eaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a5d64: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d40da: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b3635e8d: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x5e58b37404b9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b37404b9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b37404b9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b37404b9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a88ea: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a54f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d339a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b36d6fe8: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:83:9)",
"0x5e58b35de461: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x5e58b367503f: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x5e58b35e5106: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x5e58b3621ac9: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:290:18)",
"0x5e58b362088e: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:173:30)",
"0x5e58b3750a3f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b3750a3f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b3750a3f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b3750a3f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a9b1d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a4bb7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d29bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b3610df7: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x5e58b3725b6c: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x5e58b3635b8e: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x5e58b360b6fe: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x5e58b35f02c5: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x5e58b36687dc: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x5e58b36748d8: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x5e58b3704dca: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x5e58b362058a: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:155:31)",
"0x5e58b3623e25: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:128:17)",
"0x5e58b381ec6e: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5e58b35f32ce: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x5e58b363babb: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x5e58b367de35: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x5e58b36e075a: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x5e58b37c4852: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:503:32)",
"0x5e58b37e1dc6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5e58b37ff93a: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5e58b37c9e27: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5e58b37d4a22: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5e58b3733e5f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x5e58b35fe4f7: winter_verifier::perform_verification (verifier/src/lib.rs:298:27)",
"0x5e58b372582f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x5e58b3725bbd: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x5e58b375a4f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b375a4f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b375a4f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b375a4f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a89da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a5bc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d2eba: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b36f9fcf: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:644:36)",
"0x5e58b3687d9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e58b3750e5f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b3750e5f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b3750e5f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b3750e5f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a83cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a5e87: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d2e8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b36d7bcd: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:51:26)",
"0x5e58b35ed24c: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x5e58b36e8978: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:517:13)",
"0x5e58b374c3bf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b374c3bf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b374c3bf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b374c3bf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a96cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a6e45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d352d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b360b4ab: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x5e58b35e5cba: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x5e58b3702a8b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5e58b3701e3d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5e58b387578a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5e58b38502a9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5e58b37b8bc8: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5e58b37b7195: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x5e58b3733d01: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x5e58b368b49c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e58b3747b4f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b3747b4f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b3747b4f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b3747b4f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b379303e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5e58b37a7035: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d40ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b365c74e: winterfell::main (winterfell/src/main.rs:65:26)",
"0x5e58b36254bd: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x5e58b36fbeb8: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:716:26)",
"0x5e58b36ea931: winter_prover::Prover::generate_proof (prover/src/lib.rs:482:37)",
"0x5e58b36269d6: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x5e58b3625e23: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x5e58b36fa6ee: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:669:26)",
"0x5e58b36cac07: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5e58b36289bd: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x5e58b3624c90: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x5e58b3627614: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x5e58b35f2eae: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x5e58b35f6a1c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x5e58b36b56d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e58b36c87c8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e58b378767e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e58b3681216: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x5e58b374418f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b374418f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b374418f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b374418f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a8ccd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a5cd7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d350d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b37c8aa0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x5e58b36812b9: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x5e58b374958d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b374958d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b374958d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b374958d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a8d7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a4d34: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d330a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b3732733: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x5e58b35fa41f: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x5e58b35f8a15: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x5e58b3678222: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x5e58b36782d3: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x5e58b366dafb: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x5e58b37e5d72: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x5e58b3603f56: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x5e58b37e0eb6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5e58b3805fbd: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5e58b35dc388: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x5e58b370955c: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x5e58b37b7129: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x5e58b3708b36: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x5e58b370c296: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x5e58b36e5bcf: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:369:9)",
"0x5e58b375b36f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b375b36f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b375b36f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b375b36f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a889d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a6895: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d3bdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b373afe2: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:140:32)",
"0x5e58b36205e4: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:156:33)",
"0x5e58b3716347: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x5e58b3756abf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b3756abf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b3756abf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b3756abf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a9e7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a6925: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d35dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b35d2788: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:228:23)",
"0x5e58b3639547: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x5e58b37393a7: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x5e58b3732d54: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x5e58b367db3e: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x5e58b360c2d7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x5e58b368c6dc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e58b374e44f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b374e44f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b374e44f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b374e44f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a904d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a3f75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d441d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b36eadcf: winter_prover::Prover::generate_proof (prover/src/lib.rs:501:51)",
"0x5e58b3693ccc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e58b3760c35: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b3760c35: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b3760c35: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b36e988e: winter_prover::Prover::generate_proof (prover/src/lib.rs:307:44)",
"0x5e58b39b001a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x5e58b35d088c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x5e58b37443a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b37443a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b37443a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b37443a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a948a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a4fc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d3a3a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b36e8d8f: winter_prover::Prover::generate_proof (prover/src/lib.rs:214:39)",
"0x5e58b395669c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5e58b395669c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5e58b395669c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5e58b35fb084: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x5e58b35fadce: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x5e58b368aa1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e58b37609b5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b37609b5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b37609b5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b36e9909: winter_prover::Prover::generate_proof (prover/src/lib.rs:309:32)",
"0x5e58b3639356: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x5e58b36875cc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e58b374aaff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b374aaff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b374aaff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b374aaff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a84ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a5337: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d3e8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b365bedf: winterfell::main (winterfell/src/main.rs:28:26)",
"0x5e58b35d2a3f: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:230:34)",
"0x5e58b37db026: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5e58b38013a7: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5e58b360b3b7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x5e58b3693f6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e58b375922b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b375922b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b375922b: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b375922b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5e58b37a9aad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a6955: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b36ca16d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b370a618: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x5e58b37164ab: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x5e58b3670c29: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x5e58b37c8b0a: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x5e58b37df7a8: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5e58b3664114: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x5e58b35f4d08: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x5e58b35d089d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x5e58b374a4cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b374a4cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b374a4cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b374a4cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a90dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a63d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d2a6d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b36e8cd2: winter_prover::Prover::generate_proof (prover/src/lib.rs:210:38)",
"0x5e58b3833b89: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x5e58b36eb6b8: winter_prover::Prover::generate_proof (prover/src/lib.rs:558:13)",
"0x5e58b38501e9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5e58b37ba15b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5e58b36306eb: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5e58b3837d94: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x5e58b384395d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x5e58b36fbacc: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:701:36)",
"0x5e58b368952a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e58b3741949: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b3741949: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b3741949: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b3741949: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a996a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a5874: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d3b8a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b360640e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x5e58b375740d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b375740d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b375740d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b375740d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a8e4a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a66e4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d2d1a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b372cba1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x5e58b35fad9a: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x5e58b368d3fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e58b374cedf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b374cedf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b374cedf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b374cedf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a988d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a50c5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d29dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b36fa08b: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:648:34)",
"0x5e58b368803c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e58b374a909: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b374a909: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b374a909: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b374a909: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a9e3a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a5934: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d2a2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b35fdba2: winter_verifier::perform_verification (verifier/src/lib.rs:214:41)",
"0x5e58b372a2d4: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x5e58b384378d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x5e58b368eb7c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e58b374819f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b374819f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b374819f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b374819f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a954d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a6355: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d3ddd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b36241b1: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x5e58b3732370: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x5e58b3751e94: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b3751e94: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b3751e94: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b3751e94: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5e58b37a85da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a6ec4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d3c5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b363946e: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x5e58b35df126: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x5e58b3746ac3: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b3746ac3: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b3746ac3: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b3746ac3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a8bd4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a529a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d3654: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b365bd51: winterfell::main (winterfell/src/main.rs:22:32)",
"0x5e58b368de6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e58b3748b29: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b3748b29: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b3748b29: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b3748b29: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a8caa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a7084: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d319a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b367624b: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x5e58b384bde9: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x5e58b35fe1ac: winter_verifier::perform_verification (verifier/src/lib.rs:275:24)",
"0x5e58b368b1fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e58b374d622: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b374d622: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b374d622: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b374d622: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5e58b37a8daa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a4484: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37c18ea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b3730d67: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x5e58b36a0c01: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e58b36c8408: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e58b378ac54: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e58b36ed285: winter_prover::Prover::generate_proof (prover/src/lib.rs:418:17)",
"0x5e58b373376e: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x5e58b37427f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b37427f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b37427f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b37427f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a834a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a43a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d413a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b36f9f12: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:640:42)",
"0x5e58b3759d1f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b3759d1f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b3759d1f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b3759d1f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a861d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a44f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d334d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b35f37f7: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x5e58b372b1ce: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x5e58b37c37a8: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:216:31)",
"0x5e58b37e1d36: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5e58b37ffbd0: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5e58b37cdf66: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5e58b37d58f6: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5e58b36ece30: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:13)",
"0x5e58b37603c5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b37603c5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b37603c5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b36e98cd: winter_prover::Prover::generate_proof (prover/src/lib.rs:308:37)",
"0x5e58b375f328: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b375f328: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b375f328: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5e58b3797205: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5e58b3797205: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5e58b3797205: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5e58b36eaea3: winter_prover::Prover::generate_proof (prover/src/lib.rs:510:39)",
"0x5e58b3625d9a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x5e58b36e9511: winter_prover::Prover::generate_proof (prover/src/lib.rs:274:13)",
"0x5e58b3833b9b: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x5e58b3633517: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x5e58b35dc4f5: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x5e58b39b02c6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x5e58b38436ca: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x5e58b3751b9d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b3751b9d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b3751b9d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e58b3751b9d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e58b37a82aa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e58b37a5394: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e58b37d3b5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e58b37325c3: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x5e58b3681e4c: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x5e58b3732f37: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x5e58b35ed237: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x5e58b3624a29: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x5e58b37e21d6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5e58b36762f2: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x5e58b36e7350: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:543:13)",
"0x5e58b368732c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e58b35dfaea: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e58b35dfaea: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e58b35dfaea: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5e58b3795ca6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5e58b3676508: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)"
]
}