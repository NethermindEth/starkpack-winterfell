{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell",
"pid": 67803,
"tg": 15315499,
"te": 17462786,
"pps": [
{
"tb": 409600,
"tbk": 2,
"tl": 310711,
"mb": 204800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7
]
},
{
"tb": 8,
"tbk": 1,
"tl": 13828,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
16,
17
]
},
{
"tb": 256,
"tbk": 1,
"tl": 356,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
20,
21,
22,
23,
24,
25,
26
]
},
{
"tb": 256,
"tbk": 1,
"tl": 336,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
20,
21,
22,
23,
24,
27,
28
]
},
{
"tb": 72,
"tbk": 1,
"tl": 45079,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
29,
30,
31,
32,
33
]
},
{
"tb": 6553600,
"tbk": 1,
"tl": 28579,
"mb": 6553600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
38,
39,
40,
41
]
},
{
"tb": 838860800,
"tbk": 1,
"tl": 2790257,
"mb": 838860800,
"mbk": 1,
"gb": 838860800,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
42,
43,
44,
45,
46,
47,
48,
49
]
},
{
"tb": 7168,
"tbk": 2,
"tl": 1046,
"mb": 3968,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
42,
50,
51,
52,
53,
54,
55,
56,
57
]
},
{
"tb": 49152,
"tbk": 3,
"tl": 6335,
"mb": 49152,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
58,
59,
60,
61,
62,
63,
64,
65,
66,
67,
68
]
},
{
"tb": 128,
"tbk": 1,
"tl": 8,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
58,
59,
60,
61,
62,
63,
69,
70,
32
]
},
{
"tb": 8,
"tbk": 1,
"tl": 24,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
71,
72,
73,
74,
75,
76,
77,
78
]
},
{
"tb": 73728,
"tbk": 2,
"tl": 3844,
"mb": 73728,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
79,
80,
81,
82
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1142,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
83,
84,
85,
86,
87,
88,
89,
32
]
},
{
"tb": 204800,
"tbk": 1,
"tl": 48590,
"mb": 204800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
90,
91,
92,
93,
94,
95,
96
]
},
{
"tb": 512,
"tbk": 1,
"tl": 960,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
58,
59,
60,
97,
98,
99,
100,
101,
102
]
},
{
"tb": 768,
"tbk": 1,
"tl": 13077,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
103,
104,
105,
106,
65,
66,
67,
107,
108,
109
]
},
{
"tb": 6304,
"tbk": 32,
"tl": 180402,
"mb": 6304,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
110,
111,
112,
113,
114,
115,
116,
41
]
},
{
"tb": 838860800,
"tbk": 4096,
"tl": 240906,
"mb": 204800,
"mbk": 1,
"gb": 204800,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
58,
59,
60,
97,
98,
99,
117,
118,
119
]
},
{
"tb": 7168,
"tbk": 56,
"tl": 46,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
120,
121,
122,
123,
124,
125,
126,
127
]
},
{
"tb": 128,
"tbk": 1,
"tl": 16172,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
58,
59,
60,
97,
98,
99,
128,
129,
130
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 832,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
133,
134,
135,
136,
89
]
},
{
"tb": 32,
"tbk": 1,
"tl": 74854,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
110,
111,
112,
113,
114,
137,
138,
139
]
},
{
"tb": 19662035,
"tbk": 7,
"tl": 75086,
"mb": 13107590,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
140,
141,
142,
143,
144
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 1283551,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
145
]
},
{
"tb": 32800,
"tbk": 3,
"tl": 597,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
79,
146,
147,
148
]
},
{
"tb": 448,
"tbk": 2,
"tl": 1572,
"mb": 248,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
149,
150,
151,
152,
153,
154,
155,
156,
101
]
},
{
"tb": 256,
"tbk": 1,
"tl": 14,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
149,
150,
151,
152,
153,
154,
157,
70,
32
]
},
{
"tb": 16,
"tbk": 1,
"tl": 17199494,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
158,
159,
160,
161,
162,
163,
164,
165,
166
]
},
{
"tb": 48,
"tbk": 1,
"tl": 48597,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
167,
168,
169,
170,
171,
172,
173,
174,
175
]
},
{
"tb": 32,
"tbk": 1,
"tl": 65,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
29,
176,
177,
32,
33
]
},
{
"tb": 1114103,
"tbk": 17,
"tl": 688866,
"mb": 557056,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
140,
141,
142,
143,
178
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 4108,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
79,
179,
180,
181
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
182,
183,
184,
185,
186,
187,
188,
189,
190,
139
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 30973,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
191,
192,
193,
194,
195,
196,
197,
89,
32
]
},
{
"tb": 1200,
"tbk": 2,
"tl": 892,
"mb": 744,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
83,
84,
85,
86,
87,
198,
199,
70
]
},
{
"tb": 96,
"tbk": 1,
"tl": 1282199,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
133,
134,
135,
200,
32
]
},
{
"tb": 1816,
"tbk": 11,
"tl": 247,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
149,
150,
151,
201,
202,
203,
204,
24,
27
]
},
{
"tb": 8,
"tbk": 1,
"tl": 23004,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
205,
206,
207,
208,
209,
210,
211,
212
]
},
{
"tb": 16,
"tbk": 1,
"tl": 102,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
29,
213,
214,
215,
216,
217,
218
]
},
{
"tb": 48,
"tbk": 1,
"tl": 88,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
29,
219,
177,
32,
33
]
},
{
"tb": 2097152,
"tbk": 1024,
"tl": 7120,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
58,
59,
60,
61,
62,
63,
220,
221,
222
]
},
{
"tb": 4032,
"tbk": 6,
"tl": 50349,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
223,
224,
225,
226,
227
]
},
{
"tb": 128,
"tbk": 1,
"tl": 51663,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
38,
228,
229,
139
]
},
{
"tb": 2097152,
"tbk": 128,
"tl": 378404,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
230,
231,
232,
233,
234,
235,
236,
237
]
},
{
"tb": 17382,
"tbk": 10,
"tl": 30445,
"mb": 8704,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
191,
238,
239,
240,
241,
242,
243
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1978317,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
244,
245,
246,
247,
248,
32,
33
]
},
{
"tb": 80,
"tbk": 1,
"tl": 17386401,
"mb": 80,
"mbk": 1,
"gb": 80,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
249,
250,
251,
252,
253,
254,
255,
256,
257
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
191,
192,
258,
259,
260,
261,
262,
263,
264,
265,
266
]
},
{
"tb": 1824,
"tbk": 4,
"tl": 1009,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
267,
268,
269,
270,
271,
272
]
},
{
"tb": 512,
"tbk": 1,
"tl": 21,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
79,
273,
274,
275
]
},
{
"tb": 524224,
"tbk": 13,
"tl": 47767,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
223,
224,
225,
276,
277
]
},
{
"tb": 576,
"tbk": 2,
"tl": 45,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
278,
279,
280,
281,
282,
283,
284,
285,
286
]
},
{
"tb": 1816,
"tbk": 11,
"tl": 30,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
149,
150,
151,
201,
202,
203,
287,
288,
109
]
},
{
"tb": 18432,
"tbk": 2,
"tl": 3659,
"mb": 18432,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
110,
111,
112,
113,
289,
290,
291,
292
]
},
{
"tb": 512,
"tbk": 1,
"tl": 44080,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
293,
275,
294,
295
]
},
{
"tb": 96,
"tbk": 1,
"tl": 11,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
29,
296,
297,
298,
32,
33
]
},
{
"tb": 480,
"tbk": 4,
"tl": 134,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
191,
238,
299,
300,
301,
302,
88
]
},
{
"tb": 1816,
"tbk": 11,
"tl": 30,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
149,
150,
151,
201,
202,
203,
287,
88,
89
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
29,
303,
304,
266,
305,
32,
33
]
},
{
"tb": 409600,
"tbk": 1,
"tl": 699,
"mb": 409600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
38,
306,
307,
139
]
},
{
"tb": 512,
"tbk": 1,
"tl": 2101,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
308,
309,
310,
311,
32
]
},
{
"tb": 307200,
"tbk": 1,
"tl": 17386375,
"mb": 307200,
"mbk": 1,
"gb": 307200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
103,
312,
313,
314,
315,
316,
317,
318,
319
]
},
{
"tb": 48,
"tbk": 1,
"tl": 48163,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
320,
321,
322,
323,
324,
325,
326,
327,
328
]
},
{
"tb": 64,
"tbk": 1,
"tl": 149,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
223,
224,
225,
329,
330
]
},
{
"tb": 29696,
"tbk": 168,
"tl": 440739,
"mb": 7680,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
110,
331,
332,
333,
334,
335,
336,
337,
338
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 6464,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
110,
339,
340,
341,
342,
343,
344,
345,
346
]
},
{
"tb": 2016,
"tbk": 6,
"tl": 437878,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
191,
238,
299,
300,
301,
347,
348
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1454,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
149,
150,
151,
201,
202,
203,
349,
350,
32
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
191,
192,
258,
259,
260,
261,
262,
263,
264,
265,
351
]
},
{
"tb": 38304,
"tbk": 84,
"tl": 13135,
"mb": 13680,
"mbk": 30,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
267,
268,
269,
352,
353,
354
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1978308,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
355,
356,
357,
358,
359,
32,
33
]
},
{
"tb": 72,
"tbk": 3,
"tl": 74,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
360,
361,
362,
363,
364,
365,
366,
367,
368
]
},
{
"tb": 288,
"tbk": 1,
"tl": 16385,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
369,
370,
371,
372,
82
]
},
{
"tb": 512,
"tbk": 1,
"tl": 12,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
373,
374,
375,
376,
377,
378,
379,
380
]
},
{
"tb": 204800,
"tbk": 1,
"tl": 119036,
"mb": 204800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
90,
91,
92,
93,
381,
382,
383
]
},
{
"tb": 216,
"tbk": 1,
"tl": 74929,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
384,
385,
386,
387,
388,
389,
390,
391,
392
]
},
{
"tb": 8192,
"tbk": 1,
"tl": 626774,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
393
]
},
{
"tb": 104857600,
"tbk": 12800,
"tl": 25561071370,
"mb": 104857600,
"mbk": 12800,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
58,
59,
60,
61,
62,
63,
64,
65,
66,
67,
394
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 50160,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
38,
39,
395,
396
]
},
{
"tb": 409600,
"tbk": 1,
"tl": 50410,
"mb": 409600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
58,
59,
60,
61,
62,
63,
397,
398,
139
]
},
{
"tb": 2304,
"tbk": 8,
"tl": 2198,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
191,
192,
258,
259,
260,
261,
262,
263,
264,
405,
266
]
},
{
"tb": 64,
"tbk": 1,
"tl": 46751,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
223,
224,
225,
406,
277
]
},
{
"tb": 96,
"tbk": 1,
"tl": 46822,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
407,
408,
409,
410,
411,
412,
70,
32,
33
]
},
{
"tb": 8,
"tbk": 1,
"tl": 24475,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
413,
414,
415,
416,
417,
418,
419,
420
]
},
{
"tb": 524224,
"tbk": 13,
"tl": 636013,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
223,
224,
225,
276,
421
]
},
{
"tb": 104857600,
"tbk": 12800,
"tl": 184125590335,
"mb": 104857600,
"mbk": 12800,
"gb": 104857600,
"gbk": 12800,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
58,
59,
60,
61,
62,
63,
422,
423,
424
]
},
{
"tb": 1536,
"tbk": 8,
"tl": 2271,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
425,
426,
427,
428,
429,
430
]
},
{
"tb": 24,
"tbk": 1,
"tl": 161,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
103,
431,
432,
433,
434,
435,
436,
437,
438
]
},
{
"tb": 16,
"tbk": 1,
"tl": 75,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
29,
213,
214,
215,
439,
440,
294
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 5973,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
110,
441,
442,
443,
444,
445,
446,
447,
448
]
},
{
"tb": 8,
"tbk": 1,
"tl": 13469754,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
449,
450,
451,
452,
453,
454,
455,
456,
457
]
},
{
"tb": 8,
"tbk": 1,
"tl": 24503,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
458,
459,
460,
461,
462,
463,
464,
465
]
},
{
"tb": 96,
"tbk": 1,
"tl": 50374,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
466,
467,
468,
469,
294
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 2066485,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
110,
111,
112,
113,
289,
290,
291,
470
]
},
{
"tb": 1816,
"tbk": 11,
"tl": 253,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
149,
150,
151,
201,
202,
203,
204,
24,
25
]
},
{
"tb": 7168,
"tbk": 2,
"tl": 719,
"mb": 3968,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
471
]
},
{
"tb": 960,
"tbk": 8,
"tl": 1064,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
472,
473,
474,
475,
476
]
},
{
"tb": 1600,
"tbk": 8,
"tl": 140,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
477,
478,
479,
480,
481,
482
]
},
{
"tb": 16384,
"tbk": 2,
"tl": 2523270,
"mb": 16384,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
58,
59,
60,
97,
98,
99,
483,
484,
485
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 17280456,
"mb": 1024,
"mbk": 1,
"gb": 1024,
"gbk": 1,
"eb": 1024,
"ebk": 1,
"fs": [
486,
487,
488,
489,
490,
491,
492,
493,
494,
495,
496,
497,
498,
499,
500,
501,
502,
503,
504,
505,
506
]
},
{
"tb": 32800,
"tbk": 3,
"tl": 595,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
79,
273,
507,
147
]
},
{
"tb": 838860800,
"tbk": 1600,
"tl": 10724973299,
"mb": 838860800,
"mbk": 1600,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
42,
43,
44,
45,
46,
508,
509,
510
]
},
{
"tb": 10828,
"tbk": 16,
"tl": 91794,
"mb": 5440,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
191,
238,
239,
240,
241,
242,
511
]
},
{
"tb": 160,
"tbk": 1,
"tl": 50393,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
512,
513,
514,
515,
139
]
},
{
"tb": 480,
"tbk": 4,
"tl": 46729,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
191,
238,
299,
300,
301,
516,
517
]
},
{
"tb": 1048512,
"tbk": 14,
"tl": 681,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
223,
224,
225,
518,
519
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1652,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
520,
521,
294,
295
]
},
{
"tb": 56,
"tbk": 1,
"tl": 5574,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
29,
522,
523,
139,
295
]
},
{
"tb": 64,
"tbk": 1,
"tl": 50332,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
223,
224,
225,
329,
227
]
},
{
"tb": 204800,
"tbk": 1,
"tl": 48522,
"mb": 204800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
90,
91,
92,
93,
524,
95,
96
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1261656,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
103,
525,
526,
527,
528,
529,
530,
531,
532
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 22,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
58,
59,
60,
61,
62,
63,
397,
533,
32
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 1654,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
79,
534,
535,
536
]
},
{
"tb": 512,
"tbk": 1,
"tl": 34,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
537,
538,
294,
295
]
},
{
"tb": 4224,
"tbk": 22,
"tl": 6202,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
425,
426,
427,
539,
540,
541
]
},
{
"tb": 48,
"tbk": 1,
"tl": 17229842,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
542,
543,
544,
545,
546,
547,
305,
32
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 435949,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
548,
549,
550,
551,
552,
553,
554,
555,
556,
557
]
},
{
"tb": 24,
"tbk": 1,
"tl": 435955,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
29,
558,
559,
556,
557,
218,
32
]
},
{
"tb": 96,
"tbk": 1,
"tl": 11,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
133,
134,
135,
560,
177
]
},
{
"tb": 48,
"tbk": 1,
"tl": 46745,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
561,
562,
294,
295
]
},
{
"tb": 160,
"tbk": 1,
"tl": 50306,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
563,
564,
565,
566,
567,
568,
569,
570,
571
]
},
{
"tb": 1824,
"tbk": 8,
"tl": 785,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
572,
573,
574,
575,
576,
577,
578,
579
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 17199463,
"mb": 16384,
"mbk": 1,
"gb": 16384,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
79,
534,
580,
581
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 129,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
582
]
},
{
"tb": 3864,
"tbk": 7,
"tl": 973,
"mb": 1656,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
583,
584,
585,
586,
587,
588
]
},
{
"tb": 16,
"tbk": 1,
"tl": 17387570,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
589,
590,
591,
592,
593,
594,
595,
596
]
},
{
"tb": 96,
"tbk": 1,
"tl": 635012,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
133,
134,
135,
597,
421
]
},
{
"tb": 32,
"tbk": 1,
"tl": 84,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
598,
599,
600,
601,
602,
603,
604,
605,
606
]
},
{
"tb": 216,
"tbk": 1,
"tl": 17199623,
"mb": 216,
"mbk": 1,
"gb": 216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
384,
607,
608,
609,
610,
611,
612,
613,
614
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 139,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
58,
59,
60,
97,
98,
99,
615,
556,
616
]
},
{
"tb": 16,
"tbk": 1,
"tl": 17205424,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
617,
618,
619,
620,
621,
622,
623,
624
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 2322534,
"mb": 131072,
"mbk": 1,
"gb": 131072,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
110,
111,
112,
113,
289,
625,
119,
626
]
},
{
"tb": 34048,
"tbk": 557,
"tl": 849872,
"mb": 8640,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
140,
627,
628,
629,
630,
631,
632
]
},
{
"tb": 16,
"tbk": 1,
"tl": 437857,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
58,
59,
60,
61,
62,
63,
633,
634,
635
]
},
{
"tb": 288,
"tbk": 2,
"tl": 711,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
90,
91,
92,
93,
636,
637,
101
]
},
{
"tb": 896,
"tbk": 2,
"tl": 688,
"mb": 896,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
638,
639,
640,
641,
642,
643,
644,
645
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 13087625,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
79,
646,
647,
648
]
},
{
"tb": 32,
"tbk": 1,
"tl": 48723,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
58,
59,
60,
97,
98,
99,
649,
139,
295
]
},
{
"tb": 96,
"tbk": 1,
"tl": 34,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
133,
134,
135,
650,
275
]
},
{
"tb": 7168,
"tbk": 56,
"tl": 65,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
38,
651,
652,
653
]
},
{
"tb": 96,
"tbk": 1,
"tl": 74845,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
110,
111,
112,
113,
114,
654,
138,
139
]
},
{
"tb": 3864,
"tbk": 7,
"tl": 1459,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
583,
584,
585,
655,
656,
657
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 379016,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
20,
21,
22,
658,
659,
635,
32
]
},
{
"tb": 96,
"tbk": 1,
"tl": 51381,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
133,
134,
135,
660,
653
]
},
{
"tb": 96,
"tbk": 1,
"tl": 11,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
661,
662,
663,
664,
665,
666,
667,
668,
669
]
},
{
"tb": 96,
"tbk": 1,
"tl": 46757,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
133,
134,
135,
597,
277
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 1666,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
58,
59,
60,
97,
98,
99,
670,
671,
32
]
},
{
"tb": 24,
"tbk": 1,
"tl": 7,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
103,
104,
105,
106,
65,
66,
67,
107,
672,
305
]
},
{
"tb": 16,
"tbk": 1,
"tl": 658121,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
673,
674,
675,
676,
677,
678,
679,
680,
681
]
},
{
"tb": 38424,
"tbk": 2,
"tl": 13094186,
"mb": 38400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
682,
683,
684,
685,
686,
687,
688,
689,
690
]
},
{
"tb": 384,
"tbk": 2,
"tl": 69,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
691,
692,
693,
694,
695,
696,
697,
698,
699
]
},
{
"tb": 8192,
"tbk": 1,
"tl": 379007,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
79,
534,
535,
700
]
},
{
"tb": 72,
"tbk": 1,
"tl": 2122,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
103,
104,
105,
106,
65,
66,
67,
68,
350,
32
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
191,
192,
258,
259,
260,
261,
262,
263,
264,
405,
351
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 74920,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
548,
701,
702,
703,
704,
705,
706,
707
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 382401,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
79,
708,
709,
710
]
},
{
"tb": 896,
"tbk": 6,
"tl": 74979,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
223,
224,
225,
711,
712
]
},
{
"tb": 6553600,
"tbk": 1,
"tl": 37745,
"mb": 6553600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
191,
192,
193,
194,
195,
713,
714,
109,
31
]
},
{
"tb": 409601,
"tbk": 1,
"tl": 768,
"mb": 409601,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
191,
192,
258,
259,
260,
715,
716,
717,
718,
719,
720
]
},
{
"tb": 307200,
"tbk": 1,
"tl": 15219898,
"mb": 307200,
"mbk": 1,
"gb": 307200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
103,
721,
722,
723,
724,
725,
726,
727,
728
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 17199611,
"mb": 4096,
"mbk": 1,
"gb": 4096,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
548,
701,
702,
703,
704,
705,
729,
730
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2042764,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
731,
732,
733,
734,
735,
736,
737,
738,
739
]
},
{
"tb": 7168,
"tbk": 2,
"tl": 586,
"mb": 3968,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
42,
43,
44,
45,
740,
199,
70,
32
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 26703,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
58,
59,
60,
97,
98,
99,
741,
89,
32
]
},
{
"tb": 32,
"tbk": 1,
"tl": 100,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
598,
742,
743,
744,
745,
746,
747,
748,
749
]
},
{
"tb": 6553632,
"tbk": 33,
"tl": 407524,
"mb": 6553600,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
58,
59,
60,
61,
62,
63,
64,
65,
66,
67,
107
]
},
{
"tb": 1968,
"tbk": 2,
"tl": 53,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
750,
751,
752,
753,
754,
755
]
},
{
"tb": 48,
"tbk": 2,
"tl": 69,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
29,
756,
757,
758,
759,
760,
761
]
},
{
"tb": 192,
"tbk": 1,
"tl": 50327,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
762,
763,
764,
765,
294
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 148,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
548,
549,
550,
551,
552,
553,
554,
555,
556,
616
]
},
{
"tb": 17382,
"tbk": 10,
"tl": 31517,
"mb": 8704,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
191,
238,
239,
240,
241,
242,
766
]
},
{
"tb": 1496,
"tbk": 13,
"tl": 172,
"mb": 248,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
149,
150,
151,
201,
202,
203,
204,
24,
767
]
},
{
"tb": 8,
"tbk": 1,
"tl": 24487,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
768,
769,
770,
771,
772,
773,
774,
775
]
},
{
"tb": 2097152,
"tbk": 128,
"tl": 225042,
"mb": 2097152,
"mbk": 128,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
58,
59,
60,
61,
62,
63,
64,
65,
66,
67,
776
]
},
{
"tb": 512,
"tbk": 1,
"tl": 20,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
777,
538,
294,
295
]
},
{
"tb": 32,
"tbk": 1,
"tl": 12090,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
191,
238,
299,
300,
301,
778,
714
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
29,
779,
780,
295
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2093,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
58,
59,
60,
61,
62,
63,
633,
781,
782,
783,
784
]
},
{
"tb": 1792,
"tbk": 2,
"tl": 888,
"mb": 992,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
110,
785,
786,
787,
788,
789,
198,
199
]
},
{
"tb": 838860800,
"tbk": 1,
"tl": 381882,
"mb": 838860800,
"mbk": 1,
"gb": 838860800,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
58,
59,
60,
61,
62,
63,
790,
791,
792
]
},
{
"tb": 480,
"tbk": 4,
"tl": 16152,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
191,
238,
299,
300,
301,
516,
793
]
},
{
"tb": 9216,
"tbk": 2,
"tl": 1234,
"mb": 9216,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
79,
794,
795,
82
]
},
{
"tb": 512,
"tbk": 1,
"tl": 18,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
79,
273,
796,
538
]
},
{
"tb": 768,
"tbk": 1,
"tl": 5976,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
83,
84,
85,
86,
797,
798,
396,
799
]
},
{
"tb": 512,
"tbk": 1,
"tl": 58,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
800,
801,
802,
803,
804,
805,
806,
807
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 257896,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
90,
91,
92,
93,
808,
298,
32
]
},
{
"tb": 6553600,
"tbk": 1,
"tl": 62587,
"mb": 6553600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
38,
39,
809,
41
]
},
{
"tb": 6553600,
"tbk": 32,
"tl": 430052,
"mb": 6553600,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
58,
59,
60,
97,
98,
99,
810,
811,
812
]
},
{
"tb": 16,
"tbk": 1,
"tl": 975,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
673,
813,
814,
815,
816,
817,
818,
819,
32,
33
]
},
{
"tb": 8,
"tbk": 1,
"tl": 24481,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
820,
821,
822,
823,
824,
825,
826,
827
]
},
{
"tb": 1920,
"tbk": 8,
"tl": 1064,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
223,
224,
225,
828,
829
]
},
{
"tb": 7168,
"tbk": 2,
"tl": 272,
"mb": 3968,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
79,
273,
830,
637
]
},
{
"tb": 640,
"tbk": 5,
"tl": 755,
"mb": 640,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
831,
832,
833,
834,
198
]
},
{
"tb": 8192,
"tbk": 1,
"tl": 359,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
79,
534,
535,
835
]
},
{
"tb": 384,
"tbk": 1,
"tl": 435844,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
836,
837,
838,
839,
840,
841,
842,
843,
844
]
},
{
"tb": 1200,
"tbk": 2,
"tl": 100983,
"mb": 1200,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
83,
84,
85,
86,
797,
845,
652,
653
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1978312,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
103,
846,
847,
848,
849,
32,
33
]
},
{
"tb": 24,
"tbk": 1,
"tl": 153,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
29,
558,
559,
556,
616,
440,
294
]
},
{
"tb": 4320,
"tbk": 49,
"tl": 2468002,
"mb": 4320,
"mbk": 49,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
110,
111,
112,
113,
114,
115,
845,
652
]
},
{
"tb": 64,
"tbk": 1,
"tl": 635005,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
223,
224,
225,
406,
421
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1246186,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
850,
851,
852,
853,
854,
855,
856,
857,
858
]
},
{
"tb": 768,
"tbk": 1,
"tl": 12353,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
83,
84,
85,
86,
87,
288,
109,
31
]
},
{
"tb": 6304,
"tbk": 32,
"tl": 188999,
"mb": 6304,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
110,
111,
112,
113,
114,
115,
798,
396
]
},
{
"tb": 16,
"tbk": 1,
"tl": 17229905,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
131,
182,
183,
184,
185,
186,
187,
188,
189,
859,
860
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 1275139,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
110,
111,
112,
113,
289,
861,
862,
863
]
},
{
"tb": 72,
"tbk": 3,
"tl": 6272,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
864,
865,
866,
867,
868,
869,
870,
871,
781,
782,
783,
784
]
},
{
"tb": 96,
"tbk": 1,
"tl": 17229919,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
872,
873,
874,
875,
876,
877,
878,
879,
880
]
},
{
"tb": 1088,
"tbk": 2,
"tl": 31,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
881,
882,
883,
884,
885,
886
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 1665054,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
79,
534,
535,
887
]
},
{
"tb": 72,
"tbk": 1,
"tl": 2064538,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
888,
889,
890,
891,
892,
893,
894,
895,
896
]
},
{
"tb": 512,
"tbk": 1,
"tl": 25,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
79,
534,
535,
897
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
29,
303,
304,
351,
295
]
},
{
"tb": 512,
"tbk": 1,
"tl": 28,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
58,
59,
60,
61,
62,
63,
898,
275,
294
]
},
{
"tb": 96,
"tbk": 1,
"tl": 32,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
29,
296,
215,
216,
217,
218,
32
]
},
{
"tb": 3072,
"tbk": 1,
"tl": 2128,
"mb": 3072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
103,
104,
105,
106,
65,
66,
67,
776,
350,
32
]
},
{
"tb": 80,
"tbk": 1,
"tl": 435237,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
899,
900,
901,
902,
903,
904,
905,
906,
907
]
},
{
"tb": 144,
"tbk": 1,
"tl": 2103,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
661,
908,
909,
910,
782,
783,
784,
911,
350,
32
]
},
{
"tb": 1152,
"tbk": 4,
"tl": 139,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
912,
913,
914,
915,
916
]
},
{
"tb": 320,
"tbk": 2,
"tl": 871655,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
917,
918,
919,
920,
921
]
},
{
"tb": 96,
"tbk": 1,
"tl": 13072,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
922,
923,
924,
925,
109
]
},
{
"tb": 128,
"tbk": 1,
"tl": 51964,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
926,
927,
928,
929,
41
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 878,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
191,
238,
299,
300,
301,
930,
24
]
},
{
"tb": 7168,
"tbk": 2,
"tl": 102330,
"mb": 7168,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
931,
652,
653,
139
]
},
{
"tb": 480,
"tbk": 4,
"tl": 135,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
191,
238,
299,
300,
301,
302,
288
]
},
{
"tb": 48,
"tbk": 2,
"tl": 875691,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
864,
865,
866,
867,
868,
869,
870,
871,
932,
933
]
},
{
"tb": 57344,
"tbk": 2,
"tl": 728,
"mb": 31744,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
934
]
},
{
"tb": 16,
"tbk": 1,
"tl": 77,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
29,
213,
935,
215,
439,
440,
294
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 17199482,
"mb": 4096,
"mbk": 1,
"gb": 4096,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
79,
534,
936,
937
]
},
{
"tb": 4032,
"tbk": 6,
"tl": 183,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
223,
224,
225,
226,
330
]
},
{
"tb": 7168,
"tbk": 2,
"tl": 234,
"mb": 3968,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
938
]
},
{
"tb": 16,
"tbk": 1,
"tl": 104,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
29,
213,
935,
215,
216,
217,
218
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 1281880,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
939
]
},
{
"tb": 96,
"tbk": 1,
"tl": 10,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
133,
134,
135,
940,
139
]
},
{
"tb": 96,
"tbk": 1,
"tl": 22,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
29,
296,
215,
439,
440,
294,
295
]
},
{
"tb": 6553600,
"tbk": 1,
"tl": 43375,
"mb": 6553600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
191,
192,
193,
194,
195,
941,
714,
109,
31
]
},
{
"tb": 768,
"tbk": 1,
"tl": 13792,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
103,
942,
943,
944,
945,
946,
947,
948,
949
]
},
{
"tb": 32,
"tbk": 1,
"tl": 28,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
38,
950,
307,
139
]
},
{
"tb": 8,
"tbk": 1,
"tl": 24493,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
951,
952,
953,
954,
955,
956,
957,
958
]
},
{
"tb": 409600,
"tbk": 1,
"tl": 50318,
"mb": 409600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
58,
59,
60,
61,
62,
63,
959,
960,
961
]
},
{
"tb": 8192,
"tbk": 1,
"tl": 8200,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
58,
59,
60,
61,
62,
63,
397,
962,
177
]
},
{
"tb": 16,
"tbk": 1,
"tl": 6,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
29,
213,
935,
297,
298,
32,
33
]
},
{
"tb": 18432,
"tbk": 2,
"tl": 3805,
"mb": 18432,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
110,
111,
112,
113,
289,
963,
964,
82
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 173,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
58,
59,
60,
61,
62,
63,
965,
966,
967
]
},
{
"tb": 32,
"tbk": 1,
"tl": 154,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
29,
779,
968,
969,
970,
971,
972
]
},
{
"tb": 832,
"tbk": 8,
"tl": 207,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
973,
974,
975,
976,
977,
978
]
},
{
"tb": 24,
"tbk": 1,
"tl": 437860,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
864,
865,
866,
867,
868,
869,
870,
871,
634,
635
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1282192,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
191,
238,
299,
300,
301,
979,
32
]
},
{
"tb": 96,
"tbk": 1,
"tl": 32075,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
191,
238,
980,
981,
982,
983,
714
]
},
{
"tb": 768,
"tbk": 1,
"tl": 5711,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
83,
84,
85,
86,
797,
116,
41,
523
]
},
{
"tb": 4096,
"tbk": 7,
"tl": 870510,
"mb": 2112,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
984,
985,
986,
987,
988
]
},
{
"tb": 512,
"tbk": 1,
"tl": 44075,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
989,
275,
294,
295
]
},
{
"tb": 960,
"tbk": 8,
"tl": 147,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
191,
238,
299,
300,
301,
302,
198
]
},
{
"tb": 8,
"tbk": 1,
"tl": 15134834,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
449,
990,
991,
992,
993,
994,
995,
996,
997
]
},
{
"tb": 128,
"tbk": 1,
"tl": 1643,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
998,
999,
1000,
1001,
1002,
1003,
1004,
1005
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 1274392,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
110,
111,
112,
113,
289,
290,
291,
1006
]
},
{
"tb": 40,
"tbk": 1,
"tl": 13469793,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
1007,
1008,
1009,
1010,
1011,
1012,
1013,
1014,
1015
]
},
{
"tb": 9216,
"tbk": 2,
"tl": 1058,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
79,
708,
1016,
1017
]
},
{
"tb": 48,
"tbk": 2,
"tl": 103,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
29,
1018,
757,
758,
759,
760,
761
]
},
{
"tb": 96,
"tbk": 1,
"tl": 39,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
133,
134,
135,
1019,
275
]
},
{
"tb": 307200,
"tbk": 1,
"tl": 2042751,
"mb": 307200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
103,
104,
105,
106,
65,
66,
67,
394,
1020,
1021
]
},
{
"tb": 240,
"tbk": 2,
"tl": 437843,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
29,
1022,
635,
32,
33
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
29,
213,
214,
297,
298,
32,
33
]
},
{
"tb": 32,
"tbk": 2,
"tl": 436127,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
1030
]
},
{
"tb": 48,
"tbk": 2,
"tl": 871663,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
864,
865,
866,
867,
868,
869,
870,
871,
1031,
921
]
},
{
"tb": 3144,
"tbk": 2,
"tl": 875309,
"mb": 3144,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
103,
1032,
1033,
1034,
1035,
1036,
1037,
1038,
1039
]
},
{
"tb": 409632,
"tbk": 3,
"tl": 2820481,
"mb": 409632,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
1047
]
},
{
"tb": 256,
"tbk": 1,
"tl": 967,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
149,
150,
151,
152,
153,
154,
1048,
101,
102
]
},
{
"tb": 960,
"tbk": 8,
"tl": 2249,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
472,
473,
474,
475,
1049
]
},
{
"tb": 32,
"tbk": 1,
"tl": 735,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
191,
192,
258,
259,
260,
715,
716,
717,
1050,
719,
720
]
},
{
"tb": 1792,
"tbk": 2,
"tl": 101240,
"mb": 1792,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
110,
785,
786,
787,
788,
1051,
652,
653
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1978322,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
1052,
1053,
1054,
1055,
1056,
32,
33
]
},
{
"tb": 2080,
"tbk": 20,
"tl": 302,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
973,
974,
975,
1057,
1058,
1059
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1139,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
110,
785,
786,
787,
788,
789,
88,
89
]
},
{
"tb": 512,
"tbk": 1,
"tl": 45816,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
1060,
1061,
1062,
1063,
1064,
1065,
1066,
1067
]
},
{
"tb": 409600,
"tbk": 2,
"tl": 310744,
"mb": 204800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
1068
]
},
{
"tb": 128,
"tbk": 2,
"tl": 1023,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
79,
534,
535,
1069
]
},
{
"tb": 400,
"tbk": 2,
"tl": 321,
"mb": 248,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
20,
21,
22,
23,
24,
767,
1070
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 435939,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
58,
59,
60,
97,
98,
99,
615,
556,
557
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1282187,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
191,
238,
299,
300,
301,
1071,
32
]
},
{
"tb": 104857600,
"tbk": 12800,
"tl": 222099692801,
"mb": 104857600,
"mbk": 12800,
"gb": 104857600,
"gbk": 12800,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
79,
1072,
1073,
1074
]
},
{
"tb": 24,
"tbk": 1,
"tl": 15219936,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
355,
1075,
1076,
1077,
1078,
1079,
1080,
1081,
1082
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 12348,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
110,
785,
786,
787,
788,
789,
288,
109
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 52762,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
90,
91,
92,
93,
1083,
1084,
1085
]
},
{
"tb": 48,
"tbk": 1,
"tl": 52768,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
90,
91,
92,
93,
1086,
1084,
1085
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 6952,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
79,
646,
647,
1087
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1246176,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
29,
1088,
1089,
1090,
1091,
1092,
1093
]
},
{
"tb": 8192,
"tbk": 1,
"tl": 626797,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
1094
]
},
{
"tb": 2146304,
"tbk": 131,
"tl": 57323582,
"mb": 2146304,
"mbk": 131,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
79,
1095,
1096,
1097
]
},
{
"tb": 1496,
"tbk": 13,
"tl": 34,
"mb": 248,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
149,
150,
151,
201,
202,
203,
287,
198,
199
]
},
{
"tb": 32,
"tbk": 1,
"tl": 169,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
58,
59,
60,
61,
62,
63,
1098,
966,
967
]
},
{
"tb": 224,
"tbk": 1,
"tl": 51385,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
1099,
1100,
1101,
1102,
653
]
}
],
"ftbl": [
"[root]",
"0x567570176adc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x567570175d6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x567570175ae8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x567570175ae8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x567570175124: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x567570172d43: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x56756fd4f89d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x56756ff403b9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x56756fe0852a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56756fec0949: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fec0949: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fec0949: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fec0949: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff2896a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff24874: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff52b8a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fd8540e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x56757013ba99: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x56757013bc0a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56756fedf646: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fedf646: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fedf646: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fdba882: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x56756fde946d: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x56756feb04ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x56756fd7d636: winter_verifier::perform_verification (verifier/src/lib.rs:305:9)",
"0x56756feb0cf0: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x56756fd7d7a8: winter_verifier::perform_verification (verifier/src/lib.rs:306:42)",
"0x56756ff3f847: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x56756fd8541d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x56756fe6b217: winter_prover::Prover::generate_proof (prover/src/lib.rs:603:29)",
"0x56756fe7b2ee: winter_prover::Prover::prove (prover/src/lib.rs:175:37)",
"0x56756fddb27c: winterfell::main (winterfell/src/main.rs:54:17)",
"0x56756fe124ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56756fedf7d5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fedf7d5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fedf7d5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fe8e485: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x56756fe7defa: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x56756fdb4b8e: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x56756feabd0d: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x56756fe0c69c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56756fedfaf5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fedfaf5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fedfaf5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fe49c07: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x56756fda79bd: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x56756fda3c90: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x56756fda6614: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x56756fec270f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fec270f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fec270f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fec270f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff2727d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff25a55: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff518ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756ffc2ac4: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x56756fe8fe08: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fe8fe08: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fe8fe08: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x56756ff15b85: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x56756ff15b85: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x56756ff15b85: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x56756feded83: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x56756ff15d25: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x56756ff15d25: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x56756ff15d25: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x56756fd6f238: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x56756fdefc29: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x56756fe6b19c: winter_prover::Prover::generate_proof (prover/src/lib.rs:600:25)",
"0x56756fec2033: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fec2033: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fec2033: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fec2033: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff289ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff25545: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff52fdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fe686db: winter_prover::Prover::generate_proof (prover/src/lib.rs:293:23)",
"0x56756fe49ae7: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x56756fe4c18f: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x56756fdec93d: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x56756fdf1bc6: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x56756fe11a6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56756fedf875: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fedf875: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fedf875: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fde8aaf: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x56756fe83b91: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x56756fe6b30a: winter_prover::Prover::generate_proof (prover/src/lib.rs:608:34)",
"0x56756fe90511: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fe90511: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fe90511: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x56756ff14c80: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x56756feaa1b0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x56756fd81038: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:216:32)",
"0x56756ff60e5f: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x56756fe9045b: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x56756fe9045b: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x56756fe9045b: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x56756ffc1e04: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x56756ffcb5e9: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x56756fd7dc03: winter_verifier::perform_verification (verifier/src/lib.rs:323:5)",
"0x56756fe087bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56756fedea22: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fedea22: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fedea22: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x56756fedd0e6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x56756fd826db: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x56756fd854b0: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x56756fe05dec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56756fedfb95: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fedfb95: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fedfb95: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fdb0785: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x56756fdb9cc7: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x56756fdb4f66: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x56756fda59d6: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x56756fda4e23: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x56756fe796ee: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:669:26)",
"0x56756feca95f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756feca95f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756feca95f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756feca95f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff28a4d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff24e15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff52f5d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756ffc87af: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x56756fdf1e92: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x56756fdf1b2c: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x56756fe6ab02: winter_prover::Prover::generate_proof (prover/src/lib.rs:571:9)",
"0x567570178f79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x567570177709: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x56756fe27281: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x56756fe47a38: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x56756ff0833e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x56756fe83dca: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x56756febe997: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x56756feb1970: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x56756fd8150b: winter_verifier::verify (verifier/src/lib.rs:109:19)",
"0x567570177ea0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5675701780d9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5675701783d2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x567570179159: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x56757012f01a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x56756fd73a93: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x56756fd721bf: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x56756fd6fac4: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x56756fd73f9d: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x56757012f61c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56757012f61c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56757012f61c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x56757012f5cc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x56757012f5cc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x56757012f5cc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x56757012f2c6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x56756ffc26ca: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x56756fdefc0e: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x56756fe1517c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56756fed7eef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fed7eef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fed7eef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fed7eef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff2827d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff23c65: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff349bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fe68033: winter_prover::Prover::generate_proof (prover/src/lib.rs:248:41)",
"0x56756fe0703c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56756fec9909: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fec9909: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fec9909: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fec9909: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff28e3a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff24934: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff51a2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fd7cba2: winter_verifier::perform_verification (verifier/src/lib.rs:214:41)",
"0x56756fe954ab: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x56756fe6a02d: winter_prover::Prover::generate_proof (prover/src/lib.rs:524:9)",
"0x56756fd5d32d: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x56756ff40c5a: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x56756ffb46a7: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x56756fe97889: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x5675701779ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56757017904c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56757017904c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56757017904c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x567570176c7c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x567570176c7c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x567570176c7c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x567570172ece: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x56756feb1370: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x567570104819: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x56757010362a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56757005af36: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56757005af36: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56757005af36: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fdb6dac: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x56756fe83d4a: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x56756fdeb3c0: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x56756fdf00bd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x56756fe6be30: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:13)",
"0x56756ff162d9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x56756ff162d9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x56756ff162d9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x56756fdbaabb: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x56756fed640d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fed640d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fed640d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fed640d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff27e4a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff256e4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff51d1a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756feabba1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x56756fde1245: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x56756fddc330: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:177:13)",
"0x56756fe64b72: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:371:13)",
"0x56756fe56adf: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:41:22)",
"0x56756fda1b39: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:36)",
"0x56756fe6c1b5: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:21)",
"0x56756fe95347: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x56756fd64106: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x56756fda0ac9: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:290:18)",
"0x56756fd9f88e: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:173:30)",
"0x56756fe3dfe1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x56756fe470d8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x56756ff0567d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x56756fe67a42: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:512:13)",
"0x56756fd7c8e5: winter_verifier::perform_verification (verifier/src/lib.rs:185:13)",
"0x56756fe00e4c: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x56756feb1f37: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x56756fed8d1f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fed8d1f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fed8d1f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fed8d1f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff2761d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff234f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff5234d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fd727f7: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x5675701032e9: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x567570101700: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x567570101939: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x567570101132: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x56756fdba17c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x56756fdb6eb4: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x56756fe12ccc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56756fedfc35: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fedfc35: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fedfc35: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fe6888e: winter_prover::Prover::generate_proof (prover/src/lib.rs:307:44)",
"0x56756fe065cc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56756fec9aff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fec9aff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fec9aff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fec9aff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff274ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff24337: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff52e8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fddaedf: winterfell::main (winterfell/src/main.rs:28:26)",
"0x56757010632c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56757010632c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56757010632c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5675700d569c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5675700d569c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5675700d569c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x56756fd7a084: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x56756fd79d9a: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x56756fdf52db: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x56756fe8172b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x56756fe80f9d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x56756fff469a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x56756ffcf1e9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x56756ff3915b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x56756fdaf6eb: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x56756fde39fe: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x56756fd8a3b7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x56756fd7da15: winter_verifier::perform_verification (verifier/src/lib.rs:311:25)",
"0x56756fe663d4: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:541:17)",
"0x56756fd7cfc9: winter_verifier::perform_verification (verifier/src/lib.rs:266:61)",
"0x56756fe0977c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56756fecdbf2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fecdbf2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fecdbf2: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fecdbf2: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x56756ff28b7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff23c35: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff518cd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fe87a6a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x56756fde8dbc: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x56756fd8277b: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x56756fe49a57: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x56756fde8259: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x56756fde9739: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x56756fdec9b6: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x56756fd8a6df: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x56756fd815da: winter_verifier::verify (verifier/src/lib.rs:111:21)",
"0x56756fddb822: winterfell::main (winterfell/src/main.rs:71:11)",
"0x56756fddc21b: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:175:9)",
"0x56756feba518: winter_prover::trace::Trace::validate (src/trace/mod.rs:123:26)",
"0x56756fe6c578: winter_prover::Prover::generate_proof (prover/src/lib.rs:379:17)",
"0x567570012840: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x567570012aa9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x567570022111: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x56756fde92b7: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x56756ffb014c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x56756fd79e0c: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x56756fe67f02: winter_prover::Prover::generate_proof (prover/src/lib.rs:233:27)",
"0x56756fd5df63: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x56756feb2c15: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x56756fe1fc01: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x56756fe47408: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x56756ff09c54: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x56756fe6c285: winter_prover::Prover::generate_proof (prover/src/lib.rs:418:17)",
"0x56756feda36f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756feda36f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756feda36f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756feda36f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff2789d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff25895: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff52bdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756feb9fe2: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:140:32)",
"0x56756fe1320c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56756fecce49: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fecce49: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fecce49: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fecce49: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff2793a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff247f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff5201a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fd7cc5f: winter_verifier::perform_verification (verifier/src/lib.rs:218:40)",
"0x56756fe67978: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:517:13)",
"0x56756fdf46b2: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x56756fec469a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fec469a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fec469a: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fec469a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x56756ff274cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff25a1a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ffaff4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fde9243: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x56756fecbb04: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fecbb04: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fecbb04: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fecbb04: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x56756ff28eaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff24d64: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff530da: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fdb4e8d: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x56756fd7941f: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x56756fd77a15: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x56756fd6f314: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x56756fe68e23: winter_prover::Prover::generate_proof (prover/src/lib.rs:423:33)",
"0x56756fd811dd: winter_verifier::verify (verifier/src/lib.rs:96:32)",
"0x56756ffe1f7b: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x56756ffec1a9: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x56756ffe6416: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x56756fe09a1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56756fedf9b5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fedf9b5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fedf9b5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fe68909: winter_prover::Prover::generate_proof (prover/src/lib.rs:309:32)",
"0x56756fe0923c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56756fec3bd9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fec3bd9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fec3bd9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fec3bd9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff2800a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff25c44: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff52c2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fd714b2: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x56756fe29511: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x56756fe47a08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x56756ff0540e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x56756fdecc69: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x56756fec64ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fec64ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fec64ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fec64ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff28d3d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff235f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff5321d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fd8eff2: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x56756feb955d: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:243:25)",
"0x56756fddbd94: winterfell::build_do_work_trace (winterfell/src/main.rs:91:5)",
"0x56756fe7b60b: winterfell::main::{{closure}} (winterfell/src/main.rs:30:23)",
"0x56756fe07d4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56756fec359f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fec359f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fec359f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fec359f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff130d6: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x56756ff25bc5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff5330d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fd813a8: winter_verifier::verify (verifier/src/lib.rs:102:24)",
"0x56756fe950f5: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x56756fd548cd: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x56756fdb8356: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x56756feb83a7: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x56756fedd0a6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x56756feb2d01: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x56757013e48b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x56757013de51: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x56757013754b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x567570131c41: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5675701322c7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x56757014195b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x56756fd79dce: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x56756fe661b5: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:547:13)",
"0x56757012ec69: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x56757012bc1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x567570128db6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x567570128db6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x567570128db6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fdefb68: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x56756fed105d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fed105d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fed105d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fed105d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff27dda: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff24de4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff521ca: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756feb17eb: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x56756fdf41b6: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x56756fd51a3f: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:230:34)",
"0x56756ff5a026: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x56756ff803a7: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x56757013e63b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x56757013df01: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x56757013738b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x567570130e3d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x56757013c748: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5675701400a7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x56756fec33a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fec33a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fec33a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fec33a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff2848a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff23fc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff52a3a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fe67d8f: winter_prover::Prover::generate_proof (prover/src/lib.rs:214:39)",
"0x56756ff452cb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:64:9)",
"0x56756fd7dfcc: winter_verifier::perform_verification (verifier/src/lib.rs:225:43)",
"0x56756fed0e94: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fed0e94: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fed0e94: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fed0e94: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x56756ff275da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff25ec4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff52c5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fdb846e: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x56756fe0b44a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56756fed94f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fed94f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fed94f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fed94f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff279da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff24bc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff51eba: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fe78fcf: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:644:36)",
"0x56756feceecd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756feceecd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756feceecd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756feceecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff2809a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff23544: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff5273a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756feb150b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x56756fe2da31: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x56756fe47048: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x56756ff0a55e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x56756fd7e3b2: winter_verifier::perform_verification (verifier/src/lib.rs:179:9)",
"0x56756fda4e5c: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x56756fea48a2: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x56757013c0f0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x567570130669: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x56757012fe51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x56757012f950: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x56756fdefe24: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x56757013e12b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x56757013e061: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x56757013746b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x567570131b71: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x567570132307: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x56757014190b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x56756ff47b0a: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x56756ff5e7a8: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x56756fde3114: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x56756fd29d82: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x56756fd29d82: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56756fd29d82: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fd29d82: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fd29d82: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fd29d82: std::io::buffered::bufwriter::BufWriter<W>::with_capacity (io/buffered/bufwriter.rs:115:33)",
"0x56756fd29d82: std::io::buffered::linewriter::LineWriter<W>::with_capacity (io/buffered/linewriter.rs:109:29)",
"0x56756fd29d82: std::io::buffered::linewriter::LineWriter<W>::new (io/buffered/linewriter.rs:89:9)",
"0x56756fd29d82: std::io::stdio::stdout::{{closure}} (src/io/stdio.rs:618:62)",
"0x56756fd29d82: std::sync::once_lock::OnceLock<T>::get_or_init::{{closure}} (src/sync/once_lock.rs:250:50)",
"0x56756fd29d82: std::sync::once_lock::OnceLock<T>::initialize::{{closure}} (src/sync/once_lock.rs:376:19)",
"0x56756fd29d82: std::sync::once::Once::call_once_force::{{closure}} (src/sync/once.rs:208:40)",
"0x56756fd29d82: std::sys_common::once::futex::Once::call (sys_common/once/futex.rs:124:21)",
"0x56756fd28eca: std::sync::once::Once::call_once_force (src/sync/once.rs:208:9)",
"0x56756fd28eca: std::sync::once_lock::OnceLock<T>::initialize (src/sync/once_lock.rs:375:9)",
"0x5675701931c5: std::sync::once_lock::OnceLock<T>::get_or_try_init (src/sync/once_lock.rs:298:9)",
"0x5675701931c5: std::sync::once_lock::OnceLock<T>::get_or_init (src/sync/once_lock.rs:250:15)",
"0x5675701931c5: std::io::stdio::stdout (src/io/stdio.rs:618:14)",
"0x5675701931c5: std::io::stdio::print_to (src/io/stdio.rs:1020:21)",
"0x5675701931c5: std::io::stdio::_print (src/io/stdio.rs:1097:5)",
"0x56756fddb03a: winterfell::main (winterfell/src/main.rs:36:5)",
"0x56756fd722ce: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x56756fd6c237: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x56756fda3a29: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x56756ff611d6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x56756fdfc3b5: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x56756fe46a21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x56756fe46e08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x56756ff0942e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x56756feb2f07: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x56756fde77dc: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x56756fd7d4f7: winter_verifier::perform_verification (verifier/src/lib.rs:298:27)",
"0x56756fd5d461: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x56756fdf403f: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x56756fd877be: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x56756fd7db34: winter_verifier::perform_verification (verifier/src/lib.rs:319:28)",
"0x56756feabe73: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x56756feb1ad4: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x56756feaa1ce: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x56756fec318f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fec318f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fec318f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fec318f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff27ccd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff24cd7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff5250d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756ff47aa0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x56756fe694d0: winter_prover::Prover::generate_proof (prover/src/lib.rs:452:35)",
"0x56756fde3e2f: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x56756ffb3338: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x56756ffb2b9b: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x56756fd8eca0: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x56756fd7dabc: winter_verifier::perform_verification (verifier/src/lib.rs:317:25)",
"0x56757013404e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5675701359ec: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x56757013455a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x56756fe0632c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56756fd5eaea: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fd5eaea: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fd5eaea: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x56756ff14ca6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x56756fdf5508: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x56756fe05b4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56756fe64012: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fe64012: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fe64012: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x56756ff16b05: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x56756ff16b05: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x56756ff16b05: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x56756fd64b95: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x56756fe65010: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:354:9)",
"0x56756fda1a9c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:51:13)",
"0x56756fd5bd37: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x56756fd64b7f: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x56756fe955c3: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x56756ffcade9: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x56756fd7d1ac: winter_verifier::perform_verification (verifier/src/lib.rs:275:24)",
"0x56756fe0a1fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56756fecc622: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fecc622: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fecc622: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fecc622: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x56756ff27daa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff23484: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff408ea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756feafd67: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x56757013e9e9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56757013e9e9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56757013e9e9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56757013e9e9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x56757013ee2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56757013edf7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56757013efce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5675701414c9: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x56756fdb0428: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x56756fe68132: winter_prover::Prover::generate_proof (prover/src/lib.rs:262:22)",
"0x56756ff44f8c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:40:30)",
"0x56756fe8280b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x56756fe80a1d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x56756fff4c2a: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x56756ffed55d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x56756fff3a25: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x56756ffe686e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x56756fec5ac3: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fec5ac3: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fec5ac3: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fec5ac3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff27bd4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff2429a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff52654: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fddad51: winterfell::main (winterfell/src/main.rs:22:32)",
"0x56756fe66350: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:543:13)",
"0x56756fe0a49c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56756fec94cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fec94cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fec94cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fec94cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff280dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff253d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff51a6d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fe67cd2: winter_prover::Prover::generate_proof (prover/src/lib.rs:210:38)",
"0x56756fecd86f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fecd86f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fecd86f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fecd86f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff2861d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff23285: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff51c1d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fe67eb3: winter_prover::Prover::generate_proof (prover/src/lib.rs:222:20)",
"0x56756fd64cba: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x56756ff44e16: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:26:25)",
"0x56756fec5ecf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fec5ecf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fec5ecf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fec5ecf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff28d5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff25da7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff52edd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fddb0e6: winterfell::main (winterfell/src/main.rs:38:27)",
"0x56756fda4d9a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x56756fe68511: winter_prover::Prover::generate_proof (prover/src/lib.rs:274:13)",
"0x567570178108: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x5675701784ca: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x5675701784ca: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x56757017826e: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x56757017826e: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x56757017835d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x56756fd5c8f5: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x56756fda2973: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:33)",
"0x56756fe6c266: winter_prover::Prover::generate_proof (prover/src/lib.rs:417:21)",
"0x56756fea4921: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x56756ffc2b73: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x56756fedbe6f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fedbe6f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fedbe6f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fedbe6f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff27ecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff23825: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff52afd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756ffc2c5a: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x56756fda730f: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x56756fda6506: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x56756ff442f8: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:651:17)",
"0x56756feb276e: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x56756fd8b325: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x56756fdfcd26: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x56756fe00040: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x56756feb2104: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x56756febeb50: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x56756ffd3c7d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x56756ffd6613: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x56756fde7237: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x56756fd75a78: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x56756fda2be1: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:135:9)",
"0x56756fe002b9: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x56756fe0bc1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56756febf4b9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756febf4b9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756febf4b9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756febf4b9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff278ea: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff244f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff5239a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fe55fe8: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:83:9)",
"0x56756ffb2b89: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x56756fe6a6b8: winter_prover::Prover::generate_proof (prover/src/lib.rs:558:13)",
"0x56756fdf52f2: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x56756fe0f30c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56756fec2b59: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fec2b59: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fec2b59: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fec2b59: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff276ba: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff259a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff51eea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fe69e8c: winter_prover::Prover::generate_proof (prover/src/lib.rs:505:52)",
"0x56756fe0db7c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56756fec719f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fec719f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fec719f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fec719f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff2854d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff25355: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff52ddd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fda31b1: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x56756fe12f6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56756fed822b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fed822b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fed822b: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fed822b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x56756ff28aad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff25955: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756fe4916d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fe89618: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x56756fd75adb: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x56756fe644c4: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fe644c4: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fe644c4: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x56756ff14bf6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x56756fddc0ad: <winterfell::WorkAir as winter_air::air::Air>::new (winterfell/src/main.rs:151:23)",
"0x56756fd8203b: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:102:85)",
"0x56756ff5ea6e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x56756fde4ec7: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x56756fd71eae: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x56756fd75a1c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x56756ff404e2: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x56756fd79c98: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x56756fdb2517: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x56756fd82845: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x56757005f9e9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x56757005f9e9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x56757005f9e9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x56756fe8009a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x56756fd5ea26: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x56756feb2714: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x56756fed5abf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fed5abf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fed5abf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fed5abf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff28e7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff25925: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff525dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fd51788: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:228:23)",
"0x56756ff43f36: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:226:17)",
"0x56756ff5e19e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x56756fe14edc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56756fed725f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fed725f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fed725f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fed725f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff1418b: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x56756ff248d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff5256d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fe687f7: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:36)",
"0x56756fdeb499: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x56756fe83db3: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x56756fec6b4f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fec6b4f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fec6b4f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fec6b4f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff1203e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x56756ff26035: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff530ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fddb74e: winterfell::main (winterfell/src/main.rs:65:26)",
"0x56756fe81a8b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x56756fe80e3d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x56756fff478a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x56756ffcf2a9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x56756ff37bc8: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x56756ff36195: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x56756fd5b4f5: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x56756fe8855c: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x56756ff36129: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x56756fe87b36: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x56756fe8b296: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x56756fe64bcf: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:369:9)",
"0x56756fe2b7a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x56756fe47108: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x56756ff07dae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x56756fd7e1eb: winter_verifier::perform_verification (verifier/src/lib.rs:184:9)",
"0x56756fdb231d: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x56756fea92d4: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x56756feda9dd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756feda9dd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756feda9dd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756feda9dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff27c7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff24ff4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff5286a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756feb167b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x56756fd6f2c5: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x56756fd8ecb7: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x56756fdb2999: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x56756fddbe36: <winterfell::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (winterfell/src/main.rs:133:9)",
"0x56756fd81330: winter_verifier::verify (verifier/src/lib.rs:98:38)",
"0x56756fd5c750: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x56756ff15df5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x56756ff15df5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x56756ff15df5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x56756fdb0c84: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fdb0c84: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fdb0c84: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x56756ff14c56: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x56756fde8a4c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x56756fda9081: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x56756fda7e86: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x56756fe7912f: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:655:31)",
"0x56756fdf38d8: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x56756fdf72d3: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x56756fdecafb: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x56756fd8eeb1: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x56756fdb9a4c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x56756fdb8547: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x56756feb1d54: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x56756fecb3bf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fecb3bf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fecb3bf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fecb3bf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff286cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff25e45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff5252d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fd8a4ab: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x56756feba9a5: winter_prover::trace::Trace::validate (src/trace/mod.rs:179:13)",
"0x56756fdb531c: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x56756fd82f56: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x56756ff5feb6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x56756ff84fbd: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x56756fede328: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fede328: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fede328: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x56756ff16205: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x56756ff16205: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x56756ff16205: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x56756fe69ea3: winter_prover::Prover::generate_proof (prover/src/lib.rs:510:39)",
"0x56756fec858d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fec858d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fec858d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fec858d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff27d7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff23d34: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff5230a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756feb1733: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x56756ffb6d94: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x56756ffc295d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x56756fea4b6c: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x56756fe442a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x56756fe47a98: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x56756ff0791b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x56756fde90fa: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x56756fd73d08: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x56756fe06d9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56756fecfe5f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fecfe5f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fecfe5f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fecfe5f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff273cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff24e87: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff51e8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fe56bcd: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:51:26)",
"0x56756fdfce35: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x56756fedf3c5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fedf3c5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fedf3c5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fe688cd: winter_prover::Prover::generate_proof (prover/src/lib.rs:308:37)",
"0x56756fe0b6dc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56756fecd44f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fecd44f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fecd44f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fecd44f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff2804d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff22f75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff5341d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fe69dcf: winter_prover::Prover::generate_proof (prover/src/lib.rs:501:51)",
"0x56756fd7a29f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x56756fdf5df3: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x56756fda44bd: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x56756fe7aeb8: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:716:26)",
"0x56756fe69931: winter_prover::Prover::generate_proof (prover/src/lib.rs:482:37)",
"0x56756fe0f06c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56756fe8ff38: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fe8ff38: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fe8ff38: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x56756ff167c5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x56756ff167c5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x56756ff167c5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x56756fd5c8e2: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x56756fe0ce6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56756fec7b29: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fec7b29: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fec7b29: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fec7b29: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff27caa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff26084: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff5219a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fdf524b: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x56756fe8307b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x56756fe8028d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x56756fff42ea: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x56756ffcf009: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x56756ff38a75: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x56756fdaf598: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x56756fd516e8: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:227:28)",
"0x56756fe11fac: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56756fec78df: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fec78df: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fec78df: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fec78df: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff12b4e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x56756ff25415: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff532ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fd844f7: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x56756fdf1d52: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x56756fd8a21f: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x56756fe0e0bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56756febf6af: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756febf6af: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756febf6af: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756febf6af: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff14705: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x56756ff2550a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff51b3d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fd78891: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x56756fd5c3e2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fd5c3e2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fd5c3e2: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x56756fd6f24b: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x56756fe41b21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x56756fe47498: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x56756ff097ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x56756fdfadb7: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x56756fe87bae: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x56756fe46041: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x56756fe47018: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x56756ff058be: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x56756fe58e9d: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:175:17)",
"0x56756fe5734f: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:55:17)",
"0x56756fe3cc21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x56756fe46dd8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x56756ff086ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x56756fd828ec: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x56756fe24611: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x56756fe47288: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x56756ff05c0b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x56756fdb53c9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x56756fdbbc4b: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x56756fdfcb7f: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x56756fe56028: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:83:31)",
"0x56756ff5c7af: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x56756fea482f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x56756fddc247: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:176:13)",
"0x56756ffb24f9: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x56756fdb037b: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x56756fea4bbd: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x56756fd6c24c: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x56756feb2e5f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x56756fdb207a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x56756fec62ef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fec62ef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fec62ef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fec62ef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff284cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff24d15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff517dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fd828d5: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x56756fd5e126: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x56756fed0b9d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fed0b9d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fed0b9d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fed0b9d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff272aa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff24394: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff52b5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756feb15c3: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x56756feb9131: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x56756fe8d853: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x56756ff40832: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x56756fe94cbe: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x56756ffb0472: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x56756fdec99f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x56756ff64d72: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x56756ff64e16: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x56756fd7dedf: winter_verifier::perform_verification (verifier/src/lib.rs:228:13)",
"0x56756ff427a8: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:216:31)",
"0x56756ff60d36: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x56756ff7ebd0: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x56756ff4cf66: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x56756ff548f6: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x56757013e2db: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x56757013dfb1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5675701372ab: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x567570130e9d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x56757013c42b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5675701401e3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x56756fe6be70: winter_prover::Prover::generate_proof (prover/src/lib.rs:449:13)",
"0x5675700540b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x567570056d69: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x56757005e322: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x56756fdb265f: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x56756fe2a8d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x56756fe47318: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x56756ff0812d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x56756fd71af2: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x56756ff9dac5: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x56756fd8a6fe: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x56756fec0539: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fec0539: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fec0539: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fec0539: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff27b7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff25b14: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff5344a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fe684ea: winter_prover::Prover::generate_proof (prover/src/lib.rs:272:43)",
"0x56756fed9d2f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fed9d2f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fed9d2f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fed9d2f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff2756d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff24125: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff5298d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756ffc1d29: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x56756fda4572: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x56756fe0c3fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56756fecbedf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fecbedf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fecbedf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fecbedf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff2888d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff240c5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff519dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fe7908b: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:648:34)",
"0x56756fdf6003: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x56756fdf7210: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x56756fd5b388: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x56756fd8b2d7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x56756fd53036: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x56756ff43c48: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:300:57)",
"0x56756fda28b2: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:28)",
"0x56756fed30ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fed30ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fed30ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fed30ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff2744d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff23625: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff5213d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fd5bd28: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x56756fe58d5a: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:170:36)",
"0x56756fec0f8f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fec0f8f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fec0f8f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fec0f8f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff2806d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff23f75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff5179d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fd713a8: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x56756fed2acf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fed2acf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fed2acf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fed2acf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff27a5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff24c45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff52e4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fd511cf: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:283:9)",
"0x56756ffc1d9d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x56756ffc25ed: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x56756fe800af: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x56756fdfcb3e: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x56756fe139ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56756fedfa55: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fedfa55: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fedfa55: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fe68877: winter_prover::Prover::generate_proof (prover/src/lib.rs:306:39)",
"0x567570133f3e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x567570135400: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x567570134bf8: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x56756fecfa3f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fecfa3f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fecfa3f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fecfa3f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff28b1d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff23bb7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff519bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fd8fdf7: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x56756fd4f88c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x56756fdf7222: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x56756ffc278d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x56756fe6be8b: winter_prover::Prover::generate_proof (prover/src/lib.rs:450:13)",
"0x56756feba1b0: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:140:51)",
"0x56756ff5b476: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x56756fd59fc1: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x56756fec17f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56756fec17f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56756fec17f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56756fec17f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56756ff2734a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56756ff233a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56756ff5313a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56756fe78f12: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:640:42)",
"0x56756fd9f5e4: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:156:33)",
"0x56756fda2e25: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:128:17)",
"0x56756ff9dc6e: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x56756fd9f58a: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:155:31)",
"0x56756fe7aacc: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:701:36)",
"0x56756fe5f75a: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x56756ff43852: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:503:32)",
"0x56756ff60dc6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x56756ff7e93a: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x56756ff48e27: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x56756ff53a22: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x56756fe950d2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x56756fd71440: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x56756ff59db6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x56756fd59b11: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x56756ff64d85: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x56756fe346d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x56756fe477c8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x56756ff0667e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x56756fe00216: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)"
]
}