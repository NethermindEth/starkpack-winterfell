{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell",
"pid": 67610,
"tg": 16854990,
"te": 18915192,
"pps": [
{
"tb": 16,
"tbk": 1,
"tl": 3254,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10,
11,
12,
13
]
},
{
"tb": 72,
"tbk": 3,
"tl": 9754,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
15,
16,
17,
18,
19,
20,
21,
10,
11,
12,
13
]
},
{
"tb": 72,
"tbk": 1,
"tl": 24945,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
23,
24,
25,
26
]
},
{
"tb": 472,
"tbk": 2,
"tl": 1672,
"mb": 248,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
29,
30,
31,
32,
33,
34,
35,
36,
37
]
},
{
"tb": 32,
"tbk": 1,
"tl": 39664,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
42,
43,
44,
45
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1951878,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
46,
47,
48,
49,
50,
25,
26
]
},
{
"tb": 80,
"tbk": 1,
"tl": 443836,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
51,
52,
53,
54,
55,
56,
57,
58,
59
]
},
{
"tb": 512,
"tbk": 1,
"tl": 2850,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
29,
30,
31,
60,
61,
62,
63,
64,
25
]
},
{
"tb": 36864,
"tbk": 2,
"tl": 5122,
"mb": 36864,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
65,
66,
67,
68
]
},
{
"tb": 153600,
"tbk": 1,
"tl": 18874653,
"mb": 153600,
"mbk": 1,
"gb": 153600,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
69,
70,
71,
72,
73,
74,
75,
76,
77
]
},
{
"tb": 3276832,
"tbk": 33,
"tl": 231259,
"mb": 3276800,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
78,
79,
80,
81,
82
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 1292033,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
83,
84,
85,
86,
87,
88,
89
]
},
{
"tb": 512,
"tbk": 1,
"tl": 3262,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
90,
91,
92,
93,
94,
95,
25
]
},
{
"tb": 153600,
"tbk": 1,
"tl": 1994270,
"mb": 153600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
69,
96,
97,
98,
79,
80,
81,
99,
100,
101
]
},
{
"tb": 8,
"tbk": 1,
"tl": 7845,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
102,
103,
104,
105,
106,
107,
108,
109,
110
]
},
{
"tb": 17382,
"tbk": 10,
"tl": 17406,
"mb": 8704,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
111,
112,
113,
114,
115,
116,
117
]
},
{
"tb": 224,
"tbk": 1,
"tl": 27474,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
90,
91,
118,
119,
120,
121,
122
]
},
{
"tb": 524224,
"tbk": 13,
"tl": 338,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
90,
91,
123,
124,
125,
126,
127
]
},
{
"tb": 96,
"tbk": 1,
"tl": 10,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
90,
91,
128,
129,
130,
131,
45
]
},
{
"tb": 160,
"tbk": 1,
"tl": 26774,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
90,
91,
132,
133,
134,
135,
45
]
},
{
"tb": 2097152,
"tbk": 64,
"tl": 194826,
"mb": 2097152,
"mbk": 64,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
78,
79,
80,
81,
136
]
},
{
"tb": 16,
"tbk": 1,
"tl": 662869,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
137,
138,
139,
140,
141,
142,
143,
144,
145
]
},
{
"tb": 1872,
"tbk": 18,
"tl": 248,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
146,
147,
148,
149,
150,
151
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 4059,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
152,
153,
154,
155,
156,
157,
158,
159
]
},
{
"tb": 8192,
"tbk": 1,
"tl": 1781471,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
160,
161,
162,
163,
164,
165,
166
]
},
{
"tb": 384,
"tbk": 2,
"tl": 71,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
167,
168,
169,
170,
171,
172,
173,
174,
175
]
},
{
"tb": 160,
"tbk": 1,
"tl": 26709,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
176,
177,
178,
179,
180,
181,
182,
183,
184
]
},
{
"tb": 24,
"tbk": 1,
"tl": 134,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
185,
186,
187,
188,
189,
190
]
},
{
"tb": 248,
"tbk": 1,
"tl": 344,
"mb": 248,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
191,
192,
193,
194,
195,
196,
197
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 3642,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
198,
199,
200,
201,
202,
25
]
},
{
"tb": 7552,
"tbk": 2,
"tl": 285,
"mb": 3968,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
160,
161,
162,
163,
203,
204,
205
]
},
{
"tb": 480,
"tbk": 4,
"tl": 140,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
111,
112,
206,
207,
208,
209,
210
]
},
{
"tb": 4416,
"tbk": 8,
"tl": 1093,
"mb": 1656,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
211,
212,
213,
214,
215,
216
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 39724,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
217,
218,
219,
220,
221,
222,
223,
224
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
111,
225,
226,
227,
228,
229,
230,
231,
232,
233,
234
]
},
{
"tb": 16,
"tbk": 1,
"tl": 130,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
235,
236,
237,
238,
239,
240
]
},
{
"tb": 24,
"tbk": 1,
"tl": 159,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
69,
241,
242,
243,
244,
245,
246,
247,
248
]
},
{
"tb": 1984,
"tbk": 5,
"tl": 26740,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
90,
91,
123,
124,
125,
249,
250
]
},
{
"tb": 16,
"tbk": 1,
"tl": 18738475,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
90,
251,
252,
253,
254,
255,
256,
257,
258,
259,
260
]
},
{
"tb": 9831635,
"tbk": 7,
"tl": 39835,
"mb": 6553990,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
90,
91,
261,
262,
263,
264,
265
]
},
{
"tb": 960,
"tbk": 8,
"tl": 2459,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
90,
91,
266,
267,
268,
269,
270
]
},
{
"tb": 2304,
"tbk": 8,
"tl": 2267,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
271,
272,
273,
274,
275,
276
]
},
{
"tb": 1912,
"tbk": 12,
"tl": 255,
"mb": 248,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
29,
30,
31,
60,
61,
62,
277,
195,
278
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 214872,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
279,
280,
281,
282,
283,
284,
25
]
},
{
"tb": 8,
"tbk": 1,
"tl": 16,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
285,
286,
287,
288,
289,
290,
291,
292
]
},
{
"tb": 1784,
"tbk": 15,
"tl": 216,
"mb": 232,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
29,
30,
31,
60,
61,
62,
277,
195,
293
]
},
{
"tb": 1968,
"tbk": 2,
"tl": 56,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
294,
295,
296,
297,
298,
299
]
},
{
"tb": 204800,
"tbk": 1,
"tl": 26716,
"mb": 204800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
300,
301,
302
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
303,
304,
234,
305,
25,
26
]
},
{
"tb": 24,
"tbk": 1,
"tl": 447396,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
15,
16,
17,
18,
19,
20,
21,
306,
307
]
},
{
"tb": 6688,
"tbk": 31,
"tl": 112158,
"mb": 6688,
"mbk": 31,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
42,
308,
309,
310
]
},
{
"tb": 48,
"tbk": 1,
"tl": 54603,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
279,
280,
281,
282,
311,
312,
313
]
},
{
"tb": 2097152,
"tbk": 2048,
"tl": 7448,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
314,
315,
316
]
},
{
"tb": 32,
"tbk": 1,
"tl": 68,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
317,
318,
319,
320,
321,
322,
323,
324,
325
]
},
{
"tb": 576,
"tbk": 2,
"tl": 70,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
326,
327,
328,
329,
330,
331,
332,
333,
334
]
},
{
"tb": 262080,
"tbk": 12,
"tl": 644729,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
90,
91,
123,
124,
125,
335,
336
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
111,
225,
226,
227,
228,
229,
230,
231,
232,
233,
337
]
},
{
"tb": 256,
"tbk": 1,
"tl": 9,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
338,
339,
25
]
},
{
"tb": 3276800,
"tbk": 1,
"tl": 32383,
"mb": 3276800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
160,
161,
162,
340,
341,
342,
310
]
},
{
"tb": 288,
"tbk": 2,
"tl": 741,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
279,
280,
281,
282,
343,
205,
37
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 26109,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
160,
161,
162,
340,
341,
344,
345
]
},
{
"tb": 72,
"tbk": 3,
"tl": 68,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
346,
347,
348,
349,
350,
351,
352,
353,
354
]
},
{
"tb": 838860800,
"tbk": 800,
"tl": 5988868627,
"mb": 838860800,
"mbk": 800,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
355,
356,
357,
358,
359,
360,
361,
362
]
},
{
"tb": 16,
"tbk": 1,
"tl": 74,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
235,
236,
237,
363,
189,
190
]
},
{
"tb": 3276800,
"tbk": 1,
"tl": 15300,
"mb": 3276800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
160,
161,
162,
340,
341,
364,
310
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 18722623,
"mb": 2048,
"mbk": 1,
"gb": 2048,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
217,
218,
219,
220,
221,
222,
365,
366
]
},
{
"tb": 1152,
"tbk": 4,
"tl": 191,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
90,
91,
367,
368,
369,
370,
371
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 1273247,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
65,
372,
373,
374
]
},
{
"tb": 204800,
"tbk": 1,
"tl": 26785,
"mb": 204800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
375,
376,
45
]
},
{
"tb": 838860800,
"tbk": 8192,
"tl": 254292,
"mb": 102400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
198,
199,
200,
377,
378,
379
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 54598,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
279,
280,
281,
282,
380,
312,
313
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 3958,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
381,
382,
383,
384,
385,
386,
387,
388
]
},
{
"tb": 96,
"tbk": 1,
"tl": 26756,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
90,
91,
389,
390,
391,
392,
190
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 2017538,
"mb": 262144,
"mbk": 1,
"gb": 262144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
65,
66,
67,
393
]
},
{
"tb": 8,
"tbk": 1,
"tl": 12910,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
394,
395,
396,
397,
398,
399,
400,
401
]
},
{
"tb": 96,
"tbk": 1,
"tl": 24830,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
90,
91,
128,
129,
130,
402,
403
]
},
{
"tb": 256,
"tbk": 1,
"tl": 10,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
29,
30,
31,
32,
33,
34,
404,
339,
25
]
},
{
"tb": 3864,
"tbk": 7,
"tl": 1569,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
211,
212,
213,
405,
406,
407
]
},
{
"tb": 512,
"tbk": 1,
"tl": 20,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
160,
161,
162,
163,
203,
408,
409
]
},
{
"tb": 1984,
"tbk": 5,
"tl": 205,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
90,
91,
123,
124,
125,
249,
410
]
},
{
"tb": 838860800,
"tbk": 1,
"tl": 2911611,
"mb": 838860800,
"mbk": 1,
"gb": 838860800,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
355,
356,
357,
358,
359,
411,
412,
413
]
},
{
"tb": 8,
"tbk": 1,
"tl": 11745,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1994281,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
422,
423,
424,
425,
426,
427,
428,
429,
430
]
},
{
"tb": 72,
"tbk": 1,
"tl": 3286,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
69,
96,
97,
98,
79,
80,
81,
431,
64,
25
]
},
{
"tb": 48,
"tbk": 2,
"tl": 131,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
432,
433,
434,
435,
436,
437
]
},
{
"tb": 13004,
"tbk": 17,
"tl": 51675,
"mb": 6528,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
111,
112,
113,
114,
115,
116,
438
]
},
{
"tb": 204832,
"tbk": 3,
"tl": 2827661,
"mb": 204832,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
439,
440,
441,
442,
443,
444,
445,
446
]
},
{
"tb": 96,
"tbk": 1,
"tl": 10,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
90,
91,
128,
129,
130,
447,
448
]
},
{
"tb": 1888,
"tbk": 2,
"tl": 1020,
"mb": 992,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
449,
450,
451,
452,
453,
454,
455
]
},
{
"tb": 384,
"tbk": 2,
"tl": 963,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
90,
91,
456,
457,
458,
459,
210
]
},
{
"tb": 1888,
"tbk": 2,
"tl": 53226,
"mb": 1888,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
449,
450,
451,
452,
460,
461,
122
]
},
{
"tb": 56,
"tbk": 1,
"tl": 3555,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
462,
463,
45,
464
]
},
{
"tb": 432,
"tbk": 2,
"tl": 369,
"mb": 232,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
191,
192,
193,
194,
195,
293,
465
]
},
{
"tb": 262080,
"tbk": 12,
"tl": 25343,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
90,
91,
123,
124,
125,
335,
403
]
},
{
"tb": 36864,
"tbk": 2,
"tl": 5392,
"mb": 36864,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
65,
466,
467,
468
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1951868,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
469,
470,
471,
472,
473,
25,
26
]
},
{
"tb": 944,
"tbk": 2,
"tl": 799,
"mb": 944,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
474,
475,
476,
477,
478,
479,
480,
481
]
},
{
"tb": 744,
"tbk": 1,
"tl": 1155,
"mb": 744,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
482,
483,
484,
485,
486,
210,
487,
25
]
},
{
"tb": 16,
"tbk": 1,
"tl": 447393,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
306,
307
]
},
{
"tb": 65568,
"tbk": 3,
"tl": 1245,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
160,
161,
162,
163,
488,
489,
490
]
},
{
"tb": 32,
"tbk": 1,
"tl": 351,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
111,
225,
226,
227,
228,
491,
492,
493,
494,
495,
496
]
},
{
"tb": 72,
"tbk": 1,
"tl": 2014887,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
497,
498,
499,
500,
501,
502,
503,
504,
505
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
111,
225,
226,
227,
228,
229,
230,
231,
232,
506,
234
]
},
{
"tb": 36128,
"tbk": 615,
"tl": 771657,
"mb": 8768,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
90,
91,
261,
507,
508,
509,
510,
511,
512
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
235,
236,
513,
284,
25,
26
]
},
{
"tb": 1088,
"tbk": 2,
"tl": 31,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
514,
515,
516,
517,
518,
519
]
},
{
"tb": 960,
"tbk": 8,
"tl": 178,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
111,
112,
206,
207,
208,
209,
454
]
},
{
"tb": 3276800,
"tbk": 1,
"tl": 23832,
"mb": 3276800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
111,
225,
520,
521,
522,
523,
524,
525,
24
]
},
{
"tb": 512,
"tbk": 1,
"tl": 11,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
526,
527,
528,
529,
530,
531,
532,
533
]
},
{
"tb": 744,
"tbk": 1,
"tl": 6998,
"mb": 744,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
482,
483,
484,
485,
486,
534,
525,
24
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 129,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
217,
535,
536,
537,
538,
539,
540,
541,
187,
188
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 27448,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
198,
199,
200,
542,
487,
25
]
},
{
"tb": 2097152,
"tbk": 64,
"tl": 382131,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
543,
544,
545,
546,
547,
548,
549,
550
]
},
{
"tb": 248,
"tbk": 1,
"tl": 357,
"mb": 248,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
191,
192,
193,
194,
195,
278,
551
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 636087,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
83,
84,
85,
86,
87,
88,
552
]
},
{
"tb": 216,
"tbk": 1,
"tl": 39732,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
553,
554,
555,
556,
557,
558,
559,
560,
561
]
},
{
"tb": 512,
"tbk": 1,
"tl": 22039,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
160,
161,
162,
562,
409,
190,
464
]
},
{
"tb": 256,
"tbk": 1,
"tl": 971,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
29,
30,
31,
32,
33,
34,
563,
37,
564
]
},
{
"tb": 24,
"tbk": 1,
"tl": 444339,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
185,
186,
187,
565,
240,
25
]
},
{
"tb": 1536,
"tbk": 8,
"tl": 2336,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
566,
567,
568,
569,
570,
571
]
},
{
"tb": 104857600,
"tbk": 6400,
"tl": 12543388422,
"mb": 104857600,
"mbk": 6400,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
78,
79,
80,
81,
99
]
},
{
"tb": 1912,
"tbk": 12,
"tl": 41,
"mb": 248,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
29,
30,
31,
60,
61,
62,
572,
534,
525
]
},
{
"tb": 32,
"tbk": 2,
"tl": 444491,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
573,
574,
575,
576,
577,
578,
579,
580
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 18765377,
"mb": 1024,
"mbk": 1,
"gb": 1024,
"gbk": 1,
"eb": 1024,
"ebk": 1,
"fs": [
581,
582,
583,
584,
585,
586,
587,
588,
589,
590,
591,
592,
593,
594,
595,
596,
597,
598,
599,
600,
601
]
},
{
"tb": 32,
"tbk": 1,
"tl": 53,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
317,
602,
603,
604,
605,
606,
607,
608,
609
]
},
{
"tb": 32,
"tbk": 1,
"tl": 124,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
610,
448,
25,
26
]
},
{
"tb": 96,
"tbk": 1,
"tl": 7402,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
90,
91,
611,
612,
613,
614,
525
]
},
{
"tb": 3276800,
"tbk": 1,
"tl": 20897,
"mb": 3276800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
111,
225,
520,
521,
522,
615,
524,
525,
24
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 389190,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
160,
161,
162,
163,
616,
617,
618
]
},
{
"tb": 104857600,
"tbk": 6400,
"tl": 101615673294,
"mb": 104857600,
"mbk": 6400,
"gb": 104857600,
"gbk": 6400,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
619,
620,
621
]
},
{
"tb": 32,
"tbk": 1,
"tl": 152,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
622,
623,
624,
625,
626,
627
]
},
{
"tb": 96,
"tbk": 1,
"tl": 1289262,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
90,
91,
128,
129,
130,
628,
25
]
},
{
"tb": 256,
"tbk": 1,
"tl": 10301,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
198,
199,
200,
629,
630,
631
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 44,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
160,
161,
162,
163,
164,
165,
632
]
},
{
"tb": 744,
"tbk": 1,
"tl": 3961,
"mb": 744,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
482,
483,
484,
485,
633,
634,
345,
635
]
},
{
"tb": 16,
"tbk": 1,
"tl": 18722486,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
636,
637,
638,
639,
640,
641,
642,
643,
644
]
},
{
"tb": 7552,
"tbk": 59,
"tl": 55,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
160,
161,
162,
340,
645,
461,
122
]
},
{
"tb": 5376,
"tbk": 53,
"tl": 1399223,
"mb": 5376,
"mbk": 53,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
42,
308,
646,
461
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
111,
225,
226,
227,
228,
229,
230,
231,
232,
506,
337
]
},
{
"tb": 128,
"tbk": 1,
"tl": 1757,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
647,
648,
649,
650,
651,
652,
653,
654
]
},
{
"tb": 96,
"tbk": 1,
"tl": 21,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
655,
237,
363,
189,
190,
464
]
},
{
"tb": 7552,
"tbk": 2,
"tl": 750,
"mb": 3968,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
83,
84,
85,
86,
87,
88,
656
]
},
{
"tb": 60416,
"tbk": 2,
"tl": 758,
"mb": 31744,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
83,
84,
85,
86,
87,
88,
657
]
},
{
"tb": 768,
"tbk": 1,
"tl": 7406,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
69,
96,
97,
98,
79,
80,
81,
82,
658,
525
]
},
{
"tb": 204800,
"tbk": 1,
"tl": 363,
"mb": 204800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
160,
161,
162,
340,
659,
660,
45
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1245487,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
661,
662,
663,
664,
665,
666,
667,
668,
669
]
},
{
"tb": 2195456,
"tbk": 67,
"tl": 29960296,
"mb": 2195456,
"mbk": 67,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
160,
161,
162,
163,
670,
671,
672
]
},
{
"tb": 65568,
"tbk": 3,
"tl": 1220,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
160,
161,
162,
163,
203,
673,
489
]
},
{
"tb": 96,
"tbk": 1,
"tl": 27469,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
90,
91,
128,
129,
130,
674,
122
]
},
{
"tb": 1296,
"tbk": 2,
"tl": 1026,
"mb": 696,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
482,
483,
484,
485,
486,
454,
455,
339
]
},
{
"tb": 64,
"tbk": 1,
"tl": 24825,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
90,
91,
123,
124,
125,
675,
403
]
},
{
"tb": 512,
"tbk": 1,
"tl": 20,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
160,
161,
162,
676,
677,
190,
464
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 16847,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
111,
225,
520,
521,
522,
678,
679,
487,
25
]
},
{
"tb": 17382,
"tbk": 10,
"tl": 16330,
"mb": 8704,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
111,
112,
113,
114,
115,
116,
680
]
},
{
"tb": 480,
"tbk": 4,
"tl": 10282,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
111,
112,
206,
207,
208,
681,
682
]
},
{
"tb": 48,
"tbk": 1,
"tl": 18738380,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
683,
684,
685,
686,
687,
688,
305,
25
]
},
{
"tb": 48,
"tbk": 2,
"tl": 888378,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
15,
16,
17,
18,
19,
20,
21,
689,
690
]
},
{
"tb": 7552,
"tbk": 59,
"tl": 49,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
691,
692,
693,
694,
695,
696,
697,
698
]
},
{
"tb": 96,
"tbk": 1,
"tl": 18738486,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
699,
700,
701,
702,
703,
704,
705,
706,
707
]
},
{
"tb": 192,
"tbk": 1,
"tl": 26725,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
90,
91,
708,
709,
710,
711,
190
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 113,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
83,
84,
85,
86,
87,
88,
712
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 444324,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
198,
199,
200,
713,
187,
565
]
},
{
"tb": 153600,
"tbk": 1,
"tl": 16769279,
"mb": 153600,
"mbk": 1,
"gb": 153600,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
69,
714,
715,
716,
717,
718,
719,
720,
721
]
},
{
"tb": 64,
"tbk": 1,
"tl": 178,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
90,
91,
123,
124,
125,
722,
410
]
},
{
"tb": 48,
"tbk": 2,
"tl": 96,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
723,
433,
434,
435,
436,
437
]
},
{
"tb": 144,
"tbk": 1,
"tl": 3265,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
724,
725,
726,
727,
11,
12,
13,
728,
64,
25
]
},
{
"tb": 8,
"tbk": 1,
"tl": 14925926,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
729,
730,
731,
732,
733,
734,
735,
736,
737
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1269959,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
69,
738,
739,
740,
741,
742,
743,
744,
745
]
},
{
"tb": 64,
"tbk": 1,
"tl": 644217,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
90,
91,
123,
124,
125,
675,
336
]
},
{
"tb": 48,
"tbk": 1,
"tl": 153,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
746,
448,
25,
26
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1151,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
449,
450,
451,
452,
453,
210,
487
]
},
{
"tb": 480,
"tbk": 4,
"tl": 24804,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
111,
112,
206,
207,
208,
681,
747
]
},
{
"tb": 7552,
"tbk": 2,
"tl": 1100,
"mb": 3968,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
355,
748,
749,
750,
751,
752,
753,
754,
755
]
},
{
"tb": 8,
"tbk": 1,
"tl": 16707426,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
729,
756,
757,
758,
759,
760,
761,
762,
763
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 23,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
375,
764,
25
]
},
{
"tb": 256,
"tbk": 1,
"tl": 27736,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
160,
161,
162,
340,
765,
766,
45
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 636065,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
83,
84,
85,
86,
87,
88,
767
]
},
{
"tb": 40,
"tbk": 1,
"tl": 14925955,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
768,
769,
770,
771,
772,
773,
774,
775,
776
]
},
{
"tb": 1600,
"tbk": 8,
"tl": 128,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
777,
778,
779,
780,
781,
782
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 3629,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
160,
161,
162,
163,
164,
165,
783
]
},
{
"tb": 96,
"tbk": 1,
"tl": 39,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
90,
91,
128,
129,
130,
784,
409
]
},
{
"tb": 832,
"tbk": 8,
"tl": 192,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
146,
147,
148,
785,
786,
787
]
},
{
"tb": 4224,
"tbk": 22,
"tl": 6374,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
566,
567,
568,
788,
789,
790
]
},
{
"tb": 98304,
"tbk": 3,
"tl": 9824,
"mb": 98304,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
78,
79,
80,
81,
431
]
},
{
"tb": 96,
"tbk": 1,
"tl": 26813,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
791,
792,
793,
794,
795,
796,
339,
25,
26
]
},
{
"tb": 744,
"tbk": 1,
"tl": 3688,
"mb": 744,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
482,
483,
484,
485,
633,
309,
310,
463
]
},
{
"tb": 6688,
"tbk": 31,
"tl": 120691,
"mb": 6688,
"mbk": 31,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
42,
308,
634,
345
]
},
{
"tb": 768,
"tbk": 5,
"tl": 1503,
"mb": 384,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
90,
91,
456,
457,
458,
459,
454
]
},
{
"tb": 512,
"tbk": 1,
"tl": 22034,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
160,
161,
162,
797,
409,
190,
464
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 8587,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
160,
161,
162,
163,
798,
799,
800
]
},
{
"tb": 102400,
"tbk": 1,
"tl": 24842,
"mb": 102400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
279,
280,
281,
282,
801,
802,
803
]
},
{
"tb": 48,
"tbk": 1,
"tl": 24882,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
804,
805,
806,
807,
808,
809,
810,
811,
812
]
},
{
"tb": 8,
"tbk": 1,
"tl": 12922,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
813,
814,
815,
816,
817,
818,
819,
820
]
},
{
"tb": 8,
"tbk": 1,
"tl": 12904,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
821,
822,
823,
824,
825,
826,
827,
828
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1951882,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
829,
830,
831,
832,
833,
25,
26
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 6994,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
449,
450,
451,
452,
453,
534,
525
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 861,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
90,
91,
128,
129,
130,
834,
487
]
},
{
"tb": 24,
"tbk": 1,
"tl": 16769327,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
469,
835,
836,
837,
838,
839,
840,
841,
842
]
},
{
"tb": 216,
"tbk": 1,
"tl": 18722633,
"mb": 216,
"mbk": 1,
"gb": 216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
553,
843,
844,
845,
846,
847,
848,
849,
850
]
},
{
"tb": 992,
"tbk": 5,
"tl": 447390,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
111,
112,
206,
207,
208,
851,
852
]
},
{
"tb": 1912,
"tbk": 12,
"tl": 252,
"mb": 248,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
29,
30,
31,
60,
61,
62,
277,
195,
196
]
},
{
"tb": 480,
"tbk": 4,
"tl": 160,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
111,
112,
206,
207,
208,
209,
534
]
},
{
"tb": 1536,
"tbk": 1,
"tl": 3265,
"mb": 1536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
69,
96,
97,
98,
79,
80,
81,
136,
64,
25
]
},
{
"tb": 32,
"tbk": 1,
"tl": 150,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
853,
854,
855
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
303,
304,
337,
464
]
},
{
"tb": 18432,
"tbk": 2,
"tl": 2342,
"mb": 18432,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
160,
161,
162,
163,
856,
857,
468
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 444332,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
217,
535,
536,
537,
538,
539,
540,
541,
187,
565
]
},
{
"tb": 384,
"tbk": 1,
"tl": 444226,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
858,
859,
860,
861,
862,
863,
864,
865,
866
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 382464,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
160,
161,
162,
163,
164,
165,
867
]
},
{
"tb": 768,
"tbk": 1,
"tl": 7813,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
69,
868,
869,
870,
871,
872,
873,
874,
875
]
},
{
"tb": 35456,
"tbk": 187,
"tl": 254365,
"mb": 8448,
"mbk": 30,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
876,
877,
878,
879,
880,
881,
882,
883
]
},
{
"tb": 512,
"tbk": 1,
"tl": 964,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
198,
199,
200,
884,
37,
564
]
},
{
"tb": 80,
"tbk": 1,
"tl": 18874682,
"mb": 80,
"mbk": 1,
"gb": 80,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
885,
886,
887,
888,
889,
890,
891,
892,
893
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 8123,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
375,
894,
448
]
},
{
"tb": 7552,
"tbk": 2,
"tl": 692,
"mb": 3968,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
355,
356,
357,
358,
895,
455,
339,
25
]
},
{
"tb": 1856,
"tbk": 8,
"tl": 802,
"mb": 248,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
896,
897,
898,
899,
900,
901,
902,
903
]
},
{
"tb": 1824,
"tbk": 4,
"tl": 1064,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
904,
905,
906,
907,
908,
909
]
},
{
"tb": 896,
"tbk": 6,
"tl": 39765,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
90,
91,
123,
124,
125,
910,
911
]
},
{
"tb": 320,
"tbk": 2,
"tl": 888369,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
90,
91,
912,
913,
914,
915,
690
]
},
{
"tb": 204801,
"tbk": 1,
"tl": 367,
"mb": 204801,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
111,
225,
226,
227,
228,
491,
492,
493,
916,
495,
496
]
},
{
"tb": 96,
"tbk": 1,
"tl": 644224,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
90,
91,
128,
129,
130,
402,
336
]
},
{
"tb": 7552,
"tbk": 2,
"tl": 246,
"mb": 3968,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
83,
84,
85,
86,
87,
88,
917
]
},
{
"tb": 16,
"tbk": 1,
"tl": 132,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
235,
918,
237,
238,
239,
240
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 18722443,
"mb": 32768,
"mbk": 1,
"gb": 32768,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
160,
161,
162,
163,
164,
919,
920
]
},
{
"tb": 19224,
"tbk": 2,
"tl": 14525089,
"mb": 19200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
921,
922,
923,
924,
925,
926,
927,
928,
929
]
},
{
"tb": 96,
"tbk": 1,
"tl": 13,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
724,
930,
931,
932,
933,
934,
935,
936,
937
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1770,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
160,
161,
162,
938,
939,
190,
464
]
},
{
"tb": 240,
"tbk": 2,
"tl": 447375,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
940,
307,
25,
26
]
},
{
"tb": 1784,
"tbk": 15,
"tl": 35,
"mb": 232,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
29,
30,
31,
60,
61,
62,
572,
454,
455
]
},
{
"tb": 32,
"tbk": 1,
"tl": 6705,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
111,
112,
206,
207,
208,
941,
524
]
},
{
"tb": 147456,
"tbk": 2,
"tl": 5456,
"mb": 147456,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
160,
161,
162,
163,
942,
943,
468
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 15927,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
160,
161,
162,
163,
944,
945,
946
]
},
{
"tb": 16,
"tbk": 1,
"tl": 503,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
137,
947,
948,
949,
950,
951,
952,
953,
25,
26
]
},
{
"tb": 1912,
"tbk": 12,
"tl": 39,
"mb": 248,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
29,
30,
31,
60,
61,
62,
572,
210,
487
]
},
{
"tb": 128,
"tbk": 1,
"tl": 27044,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
90,
91,
954,
955,
956,
957,
310
]
},
{
"tb": 288,
"tbk": 1,
"tl": 10668,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
90,
91,
958,
959,
960,
961,
468
]
},
{
"tb": 24,
"tbk": 1,
"tl": 10,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
69,
96,
97,
98,
79,
80,
81,
82,
962,
305
]
},
{
"tb": 512,
"tbk": 1,
"tl": 34,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
160,
161,
162,
963,
677,
190,
464
]
},
{
"tb": 96,
"tbk": 1,
"tl": 12,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
655,
513,
284,
25,
26
]
},
{
"tb": 32,
"tbk": 1,
"tl": 24986,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
198,
199,
200,
964,
45,
464
]
},
{
"tb": 8192,
"tbk": 1,
"tl": 18722474,
"mb": 8192,
"mbk": 1,
"gb": 8192,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
160,
161,
162,
163,
164,
965,
966
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 2302431,
"mb": 262144,
"mbk": 1,
"gb": 262144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
65,
967,
379,
968
]
},
{
"tb": 64,
"tbk": 1,
"tl": 26729,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
90,
91,
123,
124,
125,
722,
250
]
},
{
"tb": 512,
"tbk": 1,
"tl": 382473,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
191,
192,
193,
969,
970,
307,
25
]
},
{
"tb": 102400,
"tbk": 1,
"tl": 24876,
"mb": 102400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
279,
280,
281,
282,
971,
802,
803
]
},
{
"tb": 16,
"tbk": 1,
"tl": 76,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
235,
918,
237,
363,
189,
190
]
},
{
"tb": 512,
"tbk": 1,
"tl": 18,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
160,
161,
162,
163,
203,
972,
677
]
},
{
"tb": 384,
"tbk": 2,
"tl": 6768,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
90,
91,
456,
457,
458,
459,
534
]
},
{
"tb": 102400,
"tbk": 1,
"tl": 113720,
"mb": 102400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
279,
280,
281,
282,
973,
974,
975
]
},
{
"tb": 32,
"tbk": 1,
"tl": 21,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
160,
161,
162,
340,
976,
660,
45
]
},
{
"tb": 16,
"tbk": 1,
"tl": 18725572,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
977,
978,
979,
980,
981,
982,
983,
984
]
},
{
"tb": 2048,
"tbk": 6,
"tl": 887705,
"mb": 1088,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
90,
91,
985,
986,
987,
988,
989
]
},
{
"tb": 960,
"tbk": 8,
"tl": 1174,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
90,
91,
266,
267,
268,
269,
990
]
},
{
"tb": 8,
"tbk": 1,
"tl": 12916,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
991,
992,
993,
994,
995,
996,
997,
998
]
},
{
"tb": 1920,
"tbk": 8,
"tl": 1117,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
90,
91,
123,
124,
125,
999,
1000
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 153,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
1001,
854,
855
]
},
{
"tb": 8,
"tbk": 1,
"tl": 12932,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
1002,
1003,
1004,
1005,
1006,
1007,
1008,
1009
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 1288798,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
83,
84,
85,
86,
87,
88,
1010
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 823,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
160,
161,
162,
163,
164,
165,
1011
]
},
{
"tb": 48,
"tbk": 1,
"tl": 24819,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
160,
161,
162,
1012,
1013,
190,
464
]
},
{
"tb": 96,
"tbk": 1,
"tl": 32,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
655,
237,
238,
239,
240,
25
]
},
{
"tb": 16,
"tbk": 1,
"tl": 18875340,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1014,
1015,
1016,
1017,
1018,
1019,
1020,
1021
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1289250,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
111,
112,
206,
207,
208,
1022,
25
]
},
{
"tb": 48,
"tbk": 1,
"tl": 24663,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
1030,
1031
]
},
{
"tb": 1608,
"tbk": 2,
"tl": 893891,
"mb": 1608,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
69,
1032,
1033,
1034,
1035,
1036,
1037,
1038,
1039
]
},
{
"tb": 48,
"tbk": 2,
"tl": 894761,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
14,
15,
16,
17,
18,
19,
20,
21,
1040,
1041
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1289256,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
111,
112,
206,
207,
208,
1042,
25
]
},
{
"tb": 557047,
"tbk": 16,
"tl": 679495,
"mb": 278528,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
90,
91,
261,
262,
263,
264,
1043
]
},
{
"tb": 1296,
"tbk": 2,
"tl": 52967,
"mb": 1296,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
482,
483,
484,
485,
633,
646,
461,
122
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 14509894,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
160,
161,
162,
163,
944,
945,
1044
]
},
{
"tb": 96,
"tbk": 1,
"tl": 33,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
90,
91,
128,
129,
130,
1045,
409
]
},
{
"tb": 96,
"tbk": 1,
"tl": 17967,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
111,
112,
1046,
1047,
1048,
1049,
524
]
},
{
"tb": 512,
"tbk": 1,
"tl": 58,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1050,
1051,
1052,
1053,
1054,
1055,
1056,
1057
]
},
{
"tb": 128,
"tbk": 2,
"tl": 1976,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
160,
161,
162,
163,
164,
165,
1058
]
},
{
"tb": 204800,
"tbk": 2,
"tl": 269499,
"mb": 102400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
83,
84,
85,
86,
87,
88,
1059
]
},
{
"tb": 104857600,
"tbk": 6400,
"tl": 120670577689,
"mb": 104857600,
"mbk": 6400,
"gb": 104857600,
"gbk": 6400,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
160,
161,
162,
163,
1060,
1061,
1062
]
},
{
"tb": 838860800,
"tbk": 1,
"tl": 415763,
"mb": 838860800,
"mbk": 1,
"gb": 838860800,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
1063,
1064,
1065
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1951872,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
69,
1066,
1067,
1068,
1069,
25,
26
]
},
{
"tb": 16,
"tbk": 1,
"tl": 6,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
235,
918,
513,
284,
25,
26
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1245478,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
1070,
1071,
1072,
1073,
1074,
1075
]
},
{
"tb": 18432,
"tbk": 2,
"tl": 2035,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
160,
161,
162,
163,
616,
1076,
1077
]
},
{
"tb": 41040,
"tbk": 90,
"tl": 14402,
"mb": 13680,
"mbk": 30,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
904,
905,
906,
1078,
1079,
1080
]
},
{
"tb": 512,
"tbk": 1,
"tl": 27,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
1081,
409,
190
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
622,
1082,
464
]
},
{
"tb": 7552,
"tbk": 2,
"tl": 54368,
"mb": 7552,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
160,
161,
162,
1083,
461,
122,
45
]
},
{
"tb": 512,
"tbk": 1,
"tl": 23899,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1084,
1085,
1086,
1087,
1088,
1089,
1090,
1091
]
},
{
"tb": 32768,
"tbk": 2,
"tl": 2539852,
"mb": 32768,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
198,
199,
200,
1092,
1093,
1094
]
},
{
"tb": 3276800,
"tbk": 32,
"tl": 243530,
"mb": 3276800,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
198,
199,
200,
1095,
1096,
1097
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 941,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
111,
112,
206,
207,
208,
1098,
195
]
},
{
"tb": 16,
"tbk": 1,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
90,
251,
252,
253,
254,
255,
256,
257,
258,
1099,
45
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 1271651,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
65,
66,
67,
1100
]
},
{
"tb": 96,
"tbk": 1,
"tl": 39656,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
38,
39,
40,
41,
42,
1101,
44,
45
]
},
{
"tb": 204800,
"tbk": 2,
"tl": 269517,
"mb": 102400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
83,
84,
85,
86,
87,
88,
1102
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 123,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
198,
199,
200,
713,
187,
188
]
}
],
"ftbl": [
"[root]",
"0x5786e29f63b9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5786e28c84ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5786e2945e08: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e2945e08: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e2945e08: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5786e29cbb85: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5786e29cbb85: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5786e29cbb85: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5786e28128f5: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x5786e2812750: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5786e29cbdf5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5786e29cbdf5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5786e29cbdf5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5786e28c506c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5786e2945f38: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e2945f38: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e2945f38: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5786e29cc7c5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5786e29cc7c5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5786e29cc7c5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5786e28128e2: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x5786e29f5847: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x5786e283b41d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x5786e2921217: winter_prover::Prover::generate_proof (prover/src/lib.rs:603:29)",
"0x5786e29312ee: winter_prover::Prover::prove (prover/src/lib.rs:175:37)",
"0x5786e289127c: winterfell::main (winterfell/src/main.rs:54:17)",
"0x5786e2bf1a99: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5786e2bf1c0a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5786e2be561c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e2be561c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e2be561c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5786e2be55cc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5786e2be55cc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5786e2be55cc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5786e2be52c6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x5786e2a786ca: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x5786e2a815e9: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x5786e28bbdec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5786e2995b95: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e2995b95: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e2995b95: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e2866785: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5786e2974997: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x5786e2967970: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x5786e283750b: winter_verifier::verify (verifier/src/lib.rs:109:19)",
"0x5786e28c8ccc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5786e2995c35: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e2995c35: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e2995c35: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e291e88e: winter_prover::Prover::generate_proof (prover/src/lib.rs:307:44)",
"0x5786e28c40bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5786e29756af: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e29756af: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e29756af: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e29756af: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29ca705: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5786e29db50a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a07b3d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e282e891: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x5786e29cc2d9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5786e29cc2d9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5786e29cc2d9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5786e2825314: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x5786e291ee23: winter_prover::Prover::generate_proof (prover/src/lib.rs:423:33)",
"0x5786e28ffa57: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5786e289e259: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x5786e289f739: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x5786e28a29b6: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x5786e28be7bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5786e299036f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e299036f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e299036f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e299036f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29dd89d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29db895: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a08bdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e296ffe2: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:140:32)",
"0x5786e2994d83: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5786e29cbd25: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5786e29cbd25: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5786e29cbd25: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5786e29930e6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5786e2c2cadc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x5786e2c2bd6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x5786e2c2bae8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x5786e2c2bae8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x5786e2c2b124: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5786e2c28d43: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x5786e2829a93: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x5786e2c2ef79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5786e2c2d709: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5786e28d5c01: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5786e28fd408: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5786e29bfc54: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5786e2922285: winter_prover::Prover::generate_proof (prover/src/lib.rs:418:17)",
"0x5786e2994a22: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e2994a22: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e2994a22: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5786e280a8cd: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x5786e2809036: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5786e29f9c48: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:300:57)",
"0x5786e28be52a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5786e2976949: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e2976949: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e2976949: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e2976949: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29de96a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29da874: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a08b8a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e283b40e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x5786e2bba819: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5786e2bb92e9: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5786e2bb7700: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5786e2bb7939: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5786e2bb7132: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5786e287017c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x5786e286831d: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x5786e28ea6d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5786e28fd7c8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5786e29bc67e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5786e28b6216: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x5786e2968104: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x5786e28f3fe1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5786e28fd0d8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5786e29bb67d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5786e2813461: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x5786e28aa03f: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x5786e28dd281: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5786e28fda38: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5786e29be33e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5786e2968e5f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x5786e28fca21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5786e28fce08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5786e29bf42e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5786e2968f07: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x5786e28252c5: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x5786e28c530c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5786e2978b59: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e2978b59: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e2978b59: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e2978b59: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29dd6ba: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29db9a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a07eea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e291fe8c: winter_prover::Prover::generate_proof (prover/src/lib.rs:505:52)",
"0x5786e2bf42db: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5786e2bf3fb1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5786e2bed2ab: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5786e2be9f3e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5786e2beb400: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5786e2beabf8: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5786e2981b04: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e2981b04: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e2981b04: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e2981b04: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5786e29deeaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29dad64: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a090da: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e286ae8d: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x5786e29957d5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e29957d5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e29957d5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e28ffae7: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5786e2899e2f: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x5786e2a69338: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x5786e28076e8: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:227:28)",
"0x5786e28c8f6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5786e298e22b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e298e22b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e298e22b: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e298e22b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5786e29deaad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29db955: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e28ff16d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e293f618: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x5786e28c01fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5786e2982622: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e2982622: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e2982622: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e2982622: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5786e29dddaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29d9484: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e29f68ea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e2965d67: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x5786e2811d37: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x5786e281ab7f: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x5786e291b010: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:354:9)",
"0x5786e29fae16: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:26:25)",
"0x5786e2833fcc: winter_verifier::perform_verification (verifier/src/lib.rs:225:43)",
"0x5786e28375da: winter_verifier::verify (verifier/src/lib.rs:111:21)",
"0x5786e2995646: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e2995646: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e2995646: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e2870882: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x5786e289f46d: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x5786e2966cf0: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x5786e28337a8: winter_verifier::perform_verification (verifier/src/lib.rs:306:42)",
"0x5786e294645b: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5786e294645b: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5786e294645b: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5786e2a68b89: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x5786e29206b8: winter_prover::Prover::generate_proof (prover/src/lib.rs:558:13)",
"0x5786e28999fe: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x5786e295ab6c: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x5786e2a78b73: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x5786e2ac8840: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5786e2ac8aa9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5786e2ad8111: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5786e289f2b7: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x5786e2939b91: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x5786e293880b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5786e2936a1d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5786e2aaac2a: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5786e2aa355d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x5786e2aa9a25: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x5786e2a9c86e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x5786e28bbb4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5786e291a4c4: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e291a4c4: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e291a4c4: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5786e29cabf6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5786e28920ad: <winterfell::WorkAir as winter_air::air::Air>::new (winterfell/src/main.rs:151:23)",
"0x5786e283803b: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:102:85)",
"0x5786e2a14a6e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5786e2bb962a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5786e2bbc32c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e2bbc32c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e2bbc32c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5786e2b8b69c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5786e2b8b69c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5786e2b8b69c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5786e2830084: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x5786e282fd9a: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x5786e28ab2db: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x5786e2897245: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x5786e2892330: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:177:13)",
"0x5786e291ab72: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:371:13)",
"0x5786e290cadf: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:41:22)",
"0x5786e2857b39: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:36)",
"0x5786e29221b5: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:21)",
"0x5786e29793a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e29793a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e29793a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e29793a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29de48a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29d9fc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a08a3a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e291dd8f: winter_prover::Prover::generate_proof (prover/src/lib.rs:214:39)",
"0x5786e291da42: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:512:13)",
"0x5786e28328e5: winter_verifier::perform_verification (verifier/src/lib.rs:185:13)",
"0x5786e2c2d9ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5786e2c2f04c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e2c2f04c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e2c2f04c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5786e2c2cc7c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5786e2c2cc7c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5786e2c2cc7c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5786e2c28ece: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x5786e283029f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x5786e28abdf3: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x5786e2c2dea0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5786e2c2e0d9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5786e2c2e3d2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5786e2c2f159: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x5786e2be501a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x5786e2bf20f0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5786e2be6669: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5786e2be5e51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5786e2be5950: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x5786e2a785ed: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x5786e2bf448b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5786e2bf3e51: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5786e2bed54b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5786e2be7c41: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5786e2be82c7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5786e2bf795b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5786e2870abb: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x5786e29664ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x5786e2946511: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e2946511: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e2946511: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5786e29cac80: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5786e29709a5: winter_prover::trace::Trace::validate (src/trace/mod.rs:179:13)",
"0x5786e2922578: winter_prover::Prover::generate_proof (prover/src/lib.rs:379:17)",
"0x5786e2978033: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e2978033: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e2978033: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e2978033: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29de9ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29db545: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a08fdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e291e6db: winter_prover::Prover::generate_proof (prover/src/lib.rs:293:23)",
"0x5786e295f2d4: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x5786e2937a8b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5786e2936e3d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5786e2aaa78a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5786e2a852a9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5786e29edbc8: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5786e29ec195: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x5786e296f131: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x5786e2943853: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x5786e29f6832: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x5786e2a6614c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x5786e282fe0c: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x5786e291df02: winter_prover::Prover::generate_proof (prover/src/lib.rs:233:27)",
"0x5786e2858973: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:33)",
"0x5786e2922266: winter_prover::Prover::generate_proof (prover/src/lib.rs:417:21)",
"0x5786e286fcc7: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x5786e286af66: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x5786e2961d0d: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x5786e285558a: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:155:31)",
"0x5786e2858e25: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:128:17)",
"0x5786e2a53c6e: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5786e281a106: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x5786e2856ac9: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:290:18)",
"0x5786e285588e: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:173:30)",
"0x5786e28c049c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5786e297cb4f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e297cb4f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e297cb4f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e297cb4f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29c803e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5786e29dc035: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a090ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e289174e: winterfell::main (winterfell/src/main.rs:65:26)",
"0x5786e28bf77c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5786e2983bf2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e2983bf2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e2983bf2: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e2983bf2: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5786e29deb7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29d9c35: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a078cd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e293da6a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x5786e291c3d4: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:541:17)",
"0x5786e28aa1b6: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x5786e28371dd: winter_verifier::verify (verifier/src/lib.rs:96:32)",
"0x5786e28a5c29: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x5786e292119c: winter_prover::Prover::generate_proof (prover/src/lib.rs:600:25)",
"0x5786e2944485: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5786e2933efa: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x5786e286b31c: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x5786e295a921: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x5786e286e356: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x5786e296e3a7: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x5786e28bf23c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5786e2979bd9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e2979bd9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e2979bd9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e2979bd9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29de00a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29dbc44: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a08c2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e28274b2: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x5786e28c269c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5786e2995af5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e2995af5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e2995af5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e28ffc07: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5786e2822237: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x5786e2859a29: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x5786e2a171d6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5786e29fb2cb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:64:9)",
"0x5786e286ab8e: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x5786e29f9f36: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:226:17)",
"0x5786e2a1419e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5786e28f7b21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5786e28fd498: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5786e29bf7ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5786e28b0db7: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x5786e293dbae: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x5786e285a4bd: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x5786e2930eb8: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:716:26)",
"0x5786e291f931: winter_prover::Prover::generate_proof (prover/src/lib.rs:482:37)",
"0x5786e29930a6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5786e2968d01: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x5786e285b9d6: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x5786e285ae23: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x5786e292f6ee: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:669:26)",
"0x5786e28555e4: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:156:33)",
"0x5786e2986e94: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e2986e94: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e2986e94: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e2986e94: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5786e29dd5da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29dbec4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a08c5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e286e46e: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x5786e28e3a31: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5786e28fd048: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5786e29c055e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5786e28343b2: winter_verifier::perform_verification (verifier/src/lib.rs:179:9)",
"0x5786e285ae5c: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x5786e297e58d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e297e58d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e297e58d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e297e58d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29ddd7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29d9d34: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a0830a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e2967733: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x5786e291c350: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:543:13)",
"0x5786e2832fc9: winter_verifier::perform_verification (verifier/src/lib.rs:266:61)",
"0x5786e28a5c0e: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x5786e2a89c7d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5786e2a8c613: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5786e289d237: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5786e28403b7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x5786e2833a15: winter_verifier::perform_verification (verifier/src/lib.rs:311:25)",
"0x5786e28aa6b2: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x5786e285d9bd: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x5786e2859c90: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x5786e285c614: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x5786e298c40d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e298c40d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e298c40d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e298c40d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29dde4a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29db6e4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a07d1a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e2961ba1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x5786e28caedc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5786e298d25f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e298d25f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e298d25f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e298d25f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29ca18b: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5786e29da8d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a0856d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e291e7f7: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:36)",
"0x5786e2825238: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x5786e2811388: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x5786e293e55c: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x5786e29ec129: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x5786e293db36: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x5786e2941296: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x5786e291abcf: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:369:9)",
"0x5786e28b23b5: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x5786e2988acf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e2988acf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e2988acf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e2988acf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29dda5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29dac45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a08e4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e28071cf: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:283:9)",
"0x5786e294b5c3: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x5786e292002d: winter_prover::Prover::generate_proof (prover/src/lib.rs:524:9)",
"0x5786e2866c84: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e2866c84: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e2866c84: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5786e29cac56: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5786e289ea4c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x5786e28a13c0: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x5786e28a60bd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x5786e28fa2a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5786e28fda98: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5786e29bd91b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5786e289f0fa: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x5786e28b2b3e: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x5786e28b6040: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x5786e2961e73: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x5786e2967ad4: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x5786e2891822: winterfell::main (winterfell/src/main.rs:71:11)",
"0x5786e2a7878d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x5786e2a66472: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x5786e28a299f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x5786e28a7bc6: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x5786e28bfa1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5786e29959b5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e29959b5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e29959b5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e291e909: winter_prover::Prover::generate_proof (prover/src/lib.rs:309:32)",
"0x5786e2991e6f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e2991e6f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e2991e6f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e2991e6f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29ddecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29d9825: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a08afd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e2a78c5a: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x5786e28c7a6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5786e2995875: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e2995875: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e2995875: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e289eaaf: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x5786e292130a: winter_prover::Prover::generate_proof (prover/src/lib.rs:608:34)",
"0x5786e28281bf: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x5786e2825ac4: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x5786e2829f9d: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x5786e2b159e9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5786e2b159e9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5786e2b159e9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5786e29360af: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x5786e2814a26: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5786e2968714: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5786e28c7fac: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5786e297d8df: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e297d8df: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e297d8df: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e297d8df: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29c8b4e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5786e29db415: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a092ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e283a4f7: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x5786e282fdce: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x5786e2c2e108: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x5786e2c2e4ca: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x5786e2c2e4ca: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x5786e2c2e26e: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x5786e2c2e26e: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x5786e2c2e35d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x5786e2970518: winter_prover::trace::Trace::validate (src/trace/mod.rs:123:26)",
"0x5786e293907b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5786e293628d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5786e2aaa2ea: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5786e2a85009: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5786e29eea75: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5786e2865598: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5786e2b10f36: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e2b10f36: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e2b10f36: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e286807a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x5786e2838845: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x5786e283b4b0: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x5786e297c4ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e297c4ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e297c4ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e297c4ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29ded3d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29d95f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a0921d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e2844ff2: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x5786e283877b: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x5786e291a012: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e291a012: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e291a012: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5786e29ccb05: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5786e29ccb05: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5786e29ccb05: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5786e281ab95: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x5786e2939db3: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x5786e298ed1f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e298ed1f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e298ed1f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e298ed1f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29dd61d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29d94f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a0834d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e28287f7: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x5786e2833636: winter_verifier::perform_verification (verifier/src/lib.rs:305:9)",
"0x5786e294b0d2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x5786e28bdd4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5786e297959f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e297959f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e297959f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e297959f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29c90d6: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5786e29dbbc5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a0930d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e28373a8: winter_verifier::verify (verifier/src/lib.rs:102:24)",
"0x5786e28406df: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x5786e2a77d9d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x5786e2833c03: winter_verifier::perform_verification (verifier/src/lib.rs:323:5)",
"0x5786e2857a9c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:51:13)",
"0x5786e2bf463b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5786e2bf3f01: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5786e2bed38b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5786e2be6e3d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5786e2bf2748: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5786e2bf60a7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5786e289edbc: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x5786e29890ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e29890ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e29890ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e29890ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29dd44d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29d9625: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a0813d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e2811d28: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x5786e27dfd82: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5786e27dfd82: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5786e27dfd82: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e27dfd82: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e27dfd82: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e27dfd82: std::io::buffered::bufwriter::BufWriter<W>::with_capacity (io/buffered/bufwriter.rs:115:33)",
"0x5786e27dfd82: std::io::buffered::linewriter::LineWriter<W>::with_capacity (io/buffered/linewriter.rs:109:29)",
"0x5786e27dfd82: std::io::buffered::linewriter::LineWriter<W>::new (io/buffered/linewriter.rs:89:9)",
"0x5786e27dfd82: std::io::stdio::stdout::{{closure}} (src/io/stdio.rs:618:62)",
"0x5786e27dfd82: std::sync::once_lock::OnceLock<T>::get_or_init::{{closure}} (src/sync/once_lock.rs:250:50)",
"0x5786e27dfd82: std::sync::once_lock::OnceLock<T>::initialize::{{closure}} (src/sync/once_lock.rs:376:19)",
"0x5786e27dfd82: std::sync::once::Once::call_once_force::{{closure}} (src/sync/once.rs:208:40)",
"0x5786e27dfd82: std::sys_common::once::futex::Once::call (sys_common/once/futex.rs:124:21)",
"0x5786e27deeca: std::sync::once::Once::call_once_force (src/sync/once.rs:208:9)",
"0x5786e27deeca: std::sync::once_lock::OnceLock<T>::initialize (src/sync/once_lock.rs:375:9)",
"0x5786e2c491c5: std::sync::once_lock::OnceLock<T>::get_or_try_init (src/sync/once_lock.rs:298:9)",
"0x5786e2c491c5: std::sync::once_lock::OnceLock<T>::get_or_init (src/sync/once_lock.rs:250:15)",
"0x5786e2c491c5: std::io::stdio::stdout (src/io/stdio.rs:618:14)",
"0x5786e2c491c5: std::io::stdio::print_to (src/io/stdio.rs:1020:21)",
"0x5786e2c491c5: std::io::stdio::_print (src/io/stdio.rs:1097:5)",
"0x5786e289103a: winterfell::main (winterfell/src/main.rs:36:5)",
"0x5786e297f4cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e297f4cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e297f4cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e297f4cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29de0dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29db3d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a07a6d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e291dcd2: winter_prover::Prover::generate_proof (prover/src/lib.rs:210:38)",
"0x5786e294b4ab: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x5786e28f2c21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5786e28fcdd8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5786e29be6ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5786e28388ec: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x5786e2868517: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x5786e289aec7: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x5786e2827eae: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x5786e282ba1c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x5786e2807a3f: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:230:34)",
"0x5786e2a10026: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5786e2a363a7: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5786e2891e36: <winterfell::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (winterfell/src/main.rs:133:9)",
"0x5786e29f87a8: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:216:31)",
"0x5786e2a16d36: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5786e2a34bd0: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5786e2a02f66: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5786e2a0a8f6: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5786e2921e30: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:13)",
"0x5786e28a7e92: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x5786e28a7b2c: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x5786e2920b02: winter_prover::Prover::generate_proof (prover/src/lib.rs:571:9)",
"0x5786e28a7d52: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x5786e286fa4c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x5786e286e547: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x5786e2967d54: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x5786e28cb17c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5786e298deef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e298deef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e298deef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e298deef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29de27d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29d9c65: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e29ea9bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e291e033: winter_prover::Prover::generate_proof (prover/src/lib.rs:248:41)",
"0x5786e28b2d26: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x5786e28b2e35: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x5786e298fd2f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e298fd2f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e298fd2f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e298fd2f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29dd56d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29da125: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a0898d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e2a77d29: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x5786e289221b: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:175:9)",
"0x5786e295a8a2: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x5786e295a82f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x5786e28386db: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x5786e2813f63: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x5786e2968c15: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5786e28c16dc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5786e298344f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e298344f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e298344f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e298344f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29de04d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29d8f75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a0941d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e291fdcf: winter_prover::Prover::generate_proof (prover/src/lib.rs:501:51)",
"0x5786e2827440: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x5786e2a0fdb6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5786e280fb11: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5786e28282ce: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x5786e28b62b9: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x5786e291c1b5: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:547:13)",
"0x5786e2844cb7: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x5786e2833abc: winter_verifier::perform_verification (verifier/src/lib.rs:317:25)",
"0x5786e286cdac: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x5786e2939d4a: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x5786e286ceb4: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x5786e289d7dc: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x5786e28a98d8: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x5786e28bc32c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5786e2814aea: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e2814aea: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e2814aea: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5786e29caca6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5786e28ab508: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x5786e290ed5a: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:170:36)",
"0x5786e290d34f: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:55:17)",
"0x5786e298095f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e298095f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e298095f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e298095f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29dea4d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29dae15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a08f5d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e2a7e7af: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x5786e28c2e6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5786e297db29: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e297db29: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e297db29: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e297db29: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29ddcaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29dc084: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a0819a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e28ab24b: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x5786e28e17a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5786e28fd108: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5786e29bddae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5786e28341eb: winter_verifier::perform_verification (verifier/src/lib.rs:184:9)",
"0x5786e29faf8c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:40:30)",
"0x5786e281acba: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x5786e298babf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e298babf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e298babf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e298babf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29dee7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29db925: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a085dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e2807788: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:228:23)",
"0x5786e291d978: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:517:13)",
"0x5786e28114f5: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x5786e28c1c1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5786e28123e2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e28123e2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e28123e2: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5786e282524b: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x5786e28c144a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5786e298f4f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e298f4f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e298f4f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e298f4f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29dd9da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29dabc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a07eba: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e292efcf: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:644:36)",
"0x5786e297918f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e297918f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e297918f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e297918f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29ddccd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29dacd7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a0850d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e29fdaa0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x5786e294b347: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x5786e28334f7: winter_verifier::perform_verification (verifier/src/lib.rs:298:27)",
"0x5786e297870f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e297870f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e297870f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e297870f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29dd27d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29dba55: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a078ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e2a78ac4: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x5786e2976539: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e2976539: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e2976539: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e2976539: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29ddb7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29dbb14: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a0944a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e291e4ea: winter_prover::Prover::generate_proof (prover/src/lib.rs:272:43)",
"0x5786e291f4d0: winter_prover::Prover::generate_proof (prover/src/lib.rs:452:35)",
"0x5786e28b6e4c: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x5786e2967f37: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x5786e294b0f5: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x5786e28c23fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5786e2981edf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e2981edf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e2981edf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e2981edf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29de88d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29da0c5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a079dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e292f08b: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:648:34)",
"0x5786e2bf412b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5786e2bf4061: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5786e2bed46b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5786e2be7b71: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5786e2be8307: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5786e2bf790b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5786e2a68b9b: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x5786e28412d7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x5786e2be6e9d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5786e2bf242b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5786e2bf61e3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5786e2bea04e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5786e2beb9ec: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5786e2bea55a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5786e2be4c69: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5786e2be1c1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5786e2bdedb6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e2bdedb6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e2bdedb6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e28a5b68: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x5786e28406fe: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x5786e29f6c5a: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x5786e2a6a6a7: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x5786e294d889: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x5786e29601ce: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x5786e2837038: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:216:32)",
"0x5786e2a16e5f: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5786e28bd03c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5786e297f909: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e297f909: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e297f909: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e297f909: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29dee3a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29da934: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a07a2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e2832ba2: winter_verifier::perform_verification (verifier/src/lib.rs:214:41)",
"0x5786e2986b9d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e2986b9d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e2986b9d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e2986b9d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29dd2aa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29da394: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a08b5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e29675c3: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x5786e298705d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e298705d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e298705d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e298705d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29dddda: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29dade4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a081ca: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e29677eb: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x5786e28c99ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5786e2995a55: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e2995a55: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e2995a55: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e291e877: winter_prover::Prover::generate_proof (prover/src/lib.rs:306:39)",
"0x5786e2939dca: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x5786e29777f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e29777f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e29777f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e29777f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29dd34a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29d93a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a0913a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e292ef12: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:640:42)",
"0x5786e298386f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e298386f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e298386f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e298386f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29de61d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29d9285: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a07c1d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e291deb3: winter_prover::Prover::generate_proof (prover/src/lib.rs:222:20)",
"0x5786e282f41f: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x5786e282da15: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x5786e2a1ad85: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x5786e2a1ae16: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5786e2833edf: winter_verifier::perform_verification (verifier/src/lib.rs:228:13)",
"0x5786e28ad2d3: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x5786e28a2afb: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x5786e28bcd9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5786e2985e5f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e2985e5f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e2985e5f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e2985e5f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29dd3cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29dae87: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a07e8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e290cbcd: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:51:26)",
"0x5786e282badb: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x5786e297c2ef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e297c2ef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e297c2ef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e297c2ef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29de4cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29dad15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a077dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e28388d5: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x5786e297a69a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e297a69a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e297a69a: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e297a69a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5786e29dd4cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29dba1a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a65f4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e289f243: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x5786e2a77e04: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x5786e28bc5cc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5786e297faff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e297faff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e297faff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e297faff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29dd4ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29da337: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a08e8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e2890edf: winterfell::main (winterfell/src/main.rs:28:26)",
"0x5786e294acbe: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x5786e28a1499: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x5786e2bf49e9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e2bf49e9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e2bf49e9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e2bf49e9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5786e2bf4e2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e2bf4df7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2bf4fce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e2bf74c9: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x5786e293772b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5786e2936f9d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5786e2aaa69a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5786e2a851e9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5786e29ef15b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5786e28656eb: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5786e29f64e2: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x5786e282fc98: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x5786e28fc041: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5786e28fd018: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5786e29bb8be: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5786e290ee9d: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:175:17)",
"0x5786e293609a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x5786e295abbd: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x5786e2892247: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:176:13)",
"0x5786e2866428: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x5786e291e132: winter_prover::Prover::generate_proof (prover/src/lib.rs:262:22)",
"0x5786e28c3b7c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5786e297d19f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e297d19f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e297d19f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e297d19f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29de54d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29db355: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a08ddd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e28591b1: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x5786e29754b9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e29754b9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e29754b9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e29754b9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29dd8ea: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29da4f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a0839a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e290bfe8: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:83:9)",
"0x5786e283d7be: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x5786e2833b34: winter_verifier::perform_verification (verifier/src/lib.rs:319:28)",
"0x5786e28588b2: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:28)",
"0x5786e2868999: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x5786e290218f: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x5786e28a293d: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x5786e285d30f: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x5786e285c506: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x5786e2930acc: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:701:36)",
"0x5786e2994328: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e2994328: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e2994328: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5786e29cc205: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5786e29cc205: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5786e29cc205: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5786e291fea3: winter_prover::Prover::generate_proof (prover/src/lib.rs:510:39)",
"0x5786e28da611: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5786e28fd288: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5786e29bbc0b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5786e286b3c9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x5786e28df511: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5786e28fda08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5786e29bb40e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5786e28a2c69: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x5786e28ab2f2: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x5786e2844ca0: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x5786e296876e: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x5786e2a684f9: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x5786e286637b: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x5786e285ad9a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x5786e291e511: winter_prover::Prover::generate_proof (prover/src/lib.rs:274:13)",
"0x5786e282ba78: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x5786e2858be1: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:135:9)",
"0x5786e29601b0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x5786e2844eb1: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x5786e296f55d: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:243:25)",
"0x5786e2891d94: winterfell::build_do_work_trace (winterfell/src/main.rs:91:5)",
"0x5786e293160b: winterfell::main::{{closure}} (winterfell/src/main.rs:30:23)",
"0x5786e2814126: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x5786e297becf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e297becf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e297becf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e297becf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29ded5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29dbda7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a08edd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e28910e6: winterfell::main (winterfell/src/main.rs:38:27)",
"0x5786e28e08d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5786e28fd318: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5786e29be12d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5786e2827af2: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x5786e2a53ac5: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5786e28a5e24: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x5786e29909dd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e29909dd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e29909dd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e29909dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29ddc7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29daff4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a0886a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e296767b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x5786e2a6cd94: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x5786e2a7895d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x5786e2a1ad72: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x5786e2984ecd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e2984ecd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e2984ecd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e2984ecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29de09a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29d9544: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a0873a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e296750b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x5786e282224c: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x5786e2829d08: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x5786e2a80de9: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x5786e28331ac: winter_verifier::perform_verification (verifier/src/lib.rs:275:24)",
"0x5786e297bac3: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e297bac3: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e297bac3: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e297bac3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29ddbd4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29da29a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a08654: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e2890d51: winterfell::main (winterfell/src/main.rs:22:32)",
"0x5786e2921e8b: winter_prover::Prover::generate_proof (prover/src/lib.rs:450:13)",
"0x5786e28c920c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5786e2982e49: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e2982e49: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e2982e49: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e2982e49: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29dd93a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29da7f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a0801a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e2832c5f: winter_verifier::perform_verification (verifier/src/lib.rs:218:40)",
"0x5786e2976f8f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e2976f8f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e2976f8f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e2976f8f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29de06d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29d9f75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a0779d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e28273a8: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x5786e290c028: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:83:31)",
"0x5786e2a127af: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5786e2921e70: winter_prover::Prover::generate_proof (prover/src/lib.rs:449:13)",
"0x5786e281332d: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x5786e29fa2f8: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:651:17)",
"0x5786e2841325: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x5786e2b0a0b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5786e2b0cd69: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5786e2b14322: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5786e286865f: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x5786e29813bf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e29813bf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e29813bf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e29813bf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29de6cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29dbe45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a0852d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e28404ab: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x5786e28ad222: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x5786e280589d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x5786e29701b0: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:140:51)",
"0x5786e2a11476: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5786e280ffc1: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5786e285f081: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x5786e285de86: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5786e292f12f: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:655:31)",
"0x5786e29953c5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e29953c5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e29953c5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e291e8cd: winter_prover::Prover::generate_proof (prover/src/lib.rs:308:37)",
"0x5786e291575a: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x5786e29f9852: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:503:32)",
"0x5786e2a16dc6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5786e2a3493a: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5786e29fee27: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5786e2a09a22: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5786e28ac003: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x5786e28ad210: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x5786e2a97f7b: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5786e2aa21a9: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5786e2a9c416: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5786e284021f: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x5786e2837330: winter_verifier::verify (verifier/src/lib.rs:98:38)",
"0x5786e28b2b7f: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x5786e2985a3f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5786e2985a3f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5786e2985a3f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5786e2985a3f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5786e29deb1d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5786e29d9bb7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5786e2a079bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5786e2845df7: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x5786e29fdb0a: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x5786e2a147a8: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5786e2899114: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x5786e2838f56: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x5786e2a15eb6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5786e2a3afbd: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5786e2871c4b: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x5786e2967370: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x5786e285a572: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x5786e2974b50: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x5786e280588c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)"
]
}