{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell",
"pid": 67420,
"tg": 18237207,
"te": 20301549,
"pps": [
{
"tb": 96,
"tbk": 1,
"tl": 1305718,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7
]
},
{
"tb": 256,
"tbk": 1,
"tl": 434,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
16
]
},
{
"tb": 72,
"tbk": 3,
"tl": 65,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
19,
20,
21,
22,
23,
24,
25,
26
]
},
{
"tb": 1920,
"tbk": 8,
"tl": 1151,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
27,
28,
29,
30,
31
]
},
{
"tb": 32,
"tbk": 1,
"tl": 143,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
34,
35,
36,
37,
38
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1042,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
39,
40,
41,
42,
43,
44,
45,
46,
47
]
},
{
"tb": 96,
"tbk": 1,
"tl": 11,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
48,
49,
50,
7,
51
]
},
{
"tb": 2293760,
"tbk": 35,
"tl": 16228340,
"mb": 2293760,
"mbk": 35,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
53,
54,
55,
56,
57,
58,
59
]
},
{
"tb": 51200,
"tbk": 1,
"tl": 13254,
"mb": 51200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
60,
61,
62,
63,
64,
65,
66
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 4263,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
67,
68,
69,
70,
71,
72,
73,
74
]
},
{
"tb": 24,
"tbk": 1,
"tl": 150,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
75,
76,
77,
78,
79,
80,
81,
82,
83
]
},
{
"tb": 2000,
"tbk": 8,
"tl": 852,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
84,
85,
86,
87,
88,
89,
90,
91
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
92,
93,
94,
95
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 380627,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
53,
54,
55,
56,
96,
97,
98
]
},
{
"tb": 7808,
"tbk": 61,
"tl": 59,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
53,
54,
55,
99,
100,
101,
102
]
},
{
"tb": 512,
"tbk": 1,
"tl": 118,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
104,
105,
106,
107,
108,
109
]
},
{
"tb": 16,
"tbk": 1,
"tl": 106,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
110,
111,
112,
113,
114,
115
]
},
{
"tb": 1638400,
"tbk": 1,
"tl": 14268,
"mb": 1638400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
117,
118,
119,
120,
121,
122,
74,
123
]
},
{
"tb": 480,
"tbk": 4,
"tl": 464014,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
124,
125,
126,
127,
128,
129
]
},
{
"tb": 16,
"tbk": 1,
"tl": 20134323,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
130,
131,
132,
133,
134,
135,
136,
137
]
},
{
"tb": 102432,
"tbk": 3,
"tl": 2804263,
"mb": 102432,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
138,
139,
140,
141,
142,
143,
144,
145
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1079,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
146,
147
]
},
{
"tb": 160,
"tbk": 1,
"tl": 15250,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
148,
149,
150,
151,
152,
153,
154,
155,
156
]
},
{
"tb": 16,
"tbk": 1,
"tl": 20279117,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
157,
158,
159,
160,
161,
162,
163,
164
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 394211,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
53,
54,
55,
56,
165,
166,
167
]
},
{
"tb": 131104,
"tbk": 3,
"tl": 2329,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
53,
54,
55,
56,
168,
169,
170
]
},
{
"tb": 96,
"tbk": 1,
"tl": 641174,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
171,
172
]
},
{
"tb": 48,
"tbk": 1,
"tl": 14176,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
53,
54,
55,
173,
174,
175,
95
]
},
{
"tb": 840,
"tbk": 2,
"tl": 926312,
"mb": 840,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
75,
176,
177,
178,
179,
180,
181,
182,
183
]
},
{
"tb": 512,
"tbk": 1,
"tl": 5603,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
184,
185,
186,
187,
7
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 1310965,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
104,
105,
106,
107,
108,
188
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 20132581,
"mb": 16384,
"mbk": 1,
"gb": 16384,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
53,
54,
55,
56,
96,
189,
190
]
},
{
"tb": 768,
"tbk": 1,
"tl": 4551,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
75,
191,
192,
193,
194,
195,
196,
197,
198,
74
]
},
{
"tb": 36864,
"tbk": 2,
"tl": 4595,
"mb": 36864,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
53,
54,
55,
56,
199,
200,
201
]
},
{
"tb": 96,
"tbk": 1,
"tl": 32,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
202,
203
]
},
{
"tb": 6072,
"tbk": 11,
"tl": 1802,
"mb": 2208,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
204,
205,
206,
207,
208,
209
]
},
{
"tb": 16,
"tbk": 1,
"tl": 20132593,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
17,
210,
211,
212,
213,
214,
215,
216,
217,
218
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 10160,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
219,
220,
221,
222,
223,
224,
225,
226,
227
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1935,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
53,
54,
55,
228,
229,
175,
95
]
},
{
"tb": 1464,
"tbk": 2,
"tl": 1348,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
230,
231,
232,
233,
234,
235,
236,
237
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
238,
239,
240,
241,
242,
243,
244,
245,
246,
247
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1988367,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
75,
248,
249,
250,
251,
7,
51
]
},
{
"tb": 7808,
"tbk": 2,
"tl": 774,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
104,
105,
106,
107,
108,
252
]
},
{
"tb": 256,
"tbk": 1,
"tl": 380635,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
253,
254,
255,
7
]
},
{
"tb": 480,
"tbk": 4,
"tl": 156,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
124,
125,
126,
127,
256,
73
]
},
{
"tb": 24,
"tbk": 1,
"tl": 464029,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
257,
258,
259,
260,
261,
262,
263,
264,
265,
255
]
},
{
"tb": 17382,
"tbk": 10,
"tl": 9439,
"mb": 8704,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
124,
266,
267,
268,
269,
270
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 7450,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
53,
54,
55,
56,
96,
97,
271
]
},
{
"tb": 1952,
"tbk": 2,
"tl": 1340,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
67,
68,
69,
70,
71,
72,
235,
236
]
},
{
"tb": 16,
"tbk": 1,
"tl": 662963,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
272,
273,
274,
275,
276,
277,
278,
279,
280
]
},
{
"tb": 262080,
"tbk": 12,
"tl": 194,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
27,
28,
29,
281,
282
]
},
{
"tb": 36864,
"tbk": 2,
"tl": 4019,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
53,
54,
55,
56,
165,
283,
284
]
},
{
"tb": 102400,
"tbk": 2,
"tl": 282324,
"mb": 51200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
104,
105,
106,
107,
108,
285
]
},
{
"tb": 16,
"tbk": 1,
"tl": 20141252,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
238,
239,
240,
241,
242,
243,
244,
245,
286,
287
]
},
{
"tb": 65536,
"tbk": 2,
"tl": 2558595,
"mb": 65536,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
219,
220,
221,
288,
289,
290,
291,
292,
293
]
},
{
"tb": 96,
"tbk": 1,
"tl": 38,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
294,
203
]
},
{
"tb": 8,
"tbk": 1,
"tl": 6940,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
295,
296,
297,
298,
299,
300,
301,
302
]
},
{
"tb": 16,
"tbk": 1,
"tl": 5594,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
219,
220,
221,
222,
223,
224,
303,
304,
305,
306,
307
]
},
{
"tb": 62464,
"tbk": 2,
"tl": 783,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
104,
105,
106,
107,
108,
308
]
},
{
"tb": 8,
"tbk": 1,
"tl": 6954,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
309,
310,
311,
312,
313,
314,
315,
316
]
},
{
"tb": 24,
"tbk": 1,
"tl": 137,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
317,
318,
319,
320,
321,
175
]
},
{
"tb": 4224,
"tbk": 22,
"tl": 7232,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
322,
323,
324,
325,
326,
327
]
},
{
"tb": 1638400,
"tbk": 1,
"tl": 12786,
"mb": 1638400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
117,
118,
119,
120,
328,
122,
74,
123
]
},
{
"tb": 8,
"tbk": 1,
"tl": 6933,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
329,
330,
331,
332,
333,
334,
335,
336
]
},
{
"tb": 8,
"tbk": 1,
"tl": 6927,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
337,
338,
339,
340,
341,
342,
343,
344
]
},
{
"tb": 96,
"tbk": 1,
"tl": 15816,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
345,
102
]
},
{
"tb": 1968,
"tbk": 2,
"tl": 55,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
346,
347,
348,
349,
350,
351
]
},
{
"tb": 40,
"tbk": 1,
"tl": 16143328,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
17,
352,
353,
354,
355,
356,
357,
358,
359,
360
]
},
{
"tb": 576,
"tbk": 2,
"tl": 58,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
361,
362,
363,
364,
365,
366,
367,
368,
369
]
},
{
"tb": 96,
"tbk": 1,
"tl": 9,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
370,
227
]
},
{
"tb": 256,
"tbk": 1,
"tl": 426,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
371,
372
]
},
{
"tb": 1638400,
"tbk": 32,
"tl": 149297,
"mb": 1638400,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
219,
220,
221,
288,
289,
290,
373,
374,
375
]
},
{
"tb": 960,
"tbk": 8,
"tl": 200,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
124,
125,
126,
127,
256,
235
]
},
{
"tb": 96,
"tbk": 1,
"tl": 37,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
48,
112,
113,
114,
115,
7
]
},
{
"tb": 320,
"tbk": 2,
"tl": 916921,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
376,
377,
378,
379,
380
]
},
{
"tb": 17382,
"tbk": 10,
"tl": 10761,
"mb": 8704,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
124,
266,
267,
268,
269,
381
]
},
{
"tb": 102400,
"tbk": 1,
"tl": 240,
"mb": 102400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
53,
54,
55,
99,
382,
383,
247
]
},
{
"tb": 488,
"tbk": 2,
"tl": 1817,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
39,
40,
41,
42,
43,
44,
384,
385,
46
]
},
{
"tb": 1464,
"tbk": 2,
"tl": 29508,
"mb": 1464,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
230,
231,
232,
233,
386,
387,
101,
102
]
},
{
"tb": 960,
"tbk": 4,
"tl": 15275,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
27,
28,
29,
388,
389
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 20132696,
"mb": 1024,
"mbk": 1,
"gb": 1024,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
17,
390,
391,
392,
393,
394,
395,
396,
397
]
},
{
"tb": 278519,
"tbk": 15,
"tl": 672479,
"mb": 139264,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
398,
399,
400,
401,
402
]
},
{
"tb": 131104,
"tbk": 3,
"tl": 2302,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
53,
54,
55,
56,
403,
404,
169
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3140,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
230,
231,
232,
233,
386,
405,
406,
407
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1988372,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
408,
409,
410,
411,
412,
7,
51
]
},
{
"tb": 96,
"tbk": 1,
"tl": 4545,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
413,
414,
415,
416,
74
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 1952548,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
53,
54,
55,
56,
96,
97,
417
]
},
{
"tb": 256,
"tbk": 1,
"tl": 5313,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
39,
40,
41,
418,
419,
420,
421,
422,
7
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1305712,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
124,
125,
126,
127,
423,
7
]
},
{
"tb": 832,
"tbk": 8,
"tl": 207,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
424,
425,
426,
427,
428,
429
]
},
{
"tb": 64,
"tbk": 1,
"tl": 641169,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
27,
28,
29,
430,
172
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 83,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
53,
54,
55,
56,
96,
97,
431
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 23,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
219,
220,
221,
222,
223,
224,
225,
432,
7
]
},
{
"tb": 2304,
"tbk": 8,
"tl": 2581,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
433,
434,
435,
436,
437,
438
]
},
{
"tb": 512,
"tbk": 1,
"tl": 16099,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
53,
54,
55,
99,
439,
440,
247
]
},
{
"tb": 96,
"tbk": 1,
"tl": 10,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
441,
442,
443,
444,
445,
446,
447,
448,
449
]
},
{
"tb": 7808,
"tbk": 2,
"tl": 296,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
53,
54,
55,
56,
403,
450,
451
]
},
{
"tb": 48,
"tbk": 1,
"tl": 20141190,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
17,
452,
453,
454,
455,
456,
457,
458,
7
]
},
{
"tb": 838860800,
"tbk": 16384,
"tl": 262998,
"mb": 51200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
219,
220,
221,
288,
289,
290,
459,
460,
461
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1234868,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
462,
463,
464,
465,
466,
467
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
117,
468,
469,
470,
471,
472,
473,
474,
475,
476
]
},
{
"tb": 288,
"tbk": 1,
"tl": 8525,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
477,
478,
479,
480,
201
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 14312,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
53,
54,
55,
99,
481,
482,
406
]
},
{
"tb": 52864,
"tbk": 241,
"tl": 203151,
"mb": 11776,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
67,
483,
484,
485,
486,
487,
488,
489,
490
]
},
{
"tb": 224,
"tbk": 1,
"tl": 15820,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
491,
492,
493,
494,
102
]
},
{
"tb": 26060,
"tbk": 19,
"tl": 32019,
"mb": 13056,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
124,
266,
267,
268,
269,
495
]
},
{
"tb": 32,
"tbk": 1,
"tl": 78,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
496,
497,
498,
499,
500,
501,
502,
503,
504
]
},
{
"tb": 128,
"tbk": 1,
"tl": 14858,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
505,
506,
507,
508,
509
]
},
{
"tb": 96,
"tbk": 1,
"tl": 15287,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
510,
511,
512,
513,
175
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 20156704,
"mb": 1024,
"mbk": 1,
"gb": 1024,
"gbk": 1,
"eb": 1024,
"ebk": 1,
"fs": [
514,
515,
516,
517,
518,
519,
520,
521,
522,
523,
524,
525,
526,
527,
528,
529,
530,
531,
532,
533,
534
]
},
{
"tb": 8,
"tbk": 1,
"tl": 16143301,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
17,
535,
536,
537,
538,
539,
540,
541,
542,
543
]
},
{
"tb": 512,
"tbk": 1,
"tl": 34,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
53,
54,
55,
544,
545,
175,
95
]
},
{
"tb": 288,
"tbk": 2,
"tl": 766,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
60,
61,
62,
63,
546,
451,
46
]
},
{
"tb": 7808,
"tbk": 2,
"tl": 256,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
104,
105,
106,
107,
108,
547
]
},
{
"tb": 56,
"tbk": 1,
"tl": 2643,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
548,
549,
247,
95
]
},
{
"tb": 32,
"tbk": 1,
"tl": 151,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
219,
220,
221,
222,
223,
224,
550,
551,
552
]
},
{
"tb": 8384,
"tbk": 32,
"tl": 86630,
"mb": 8384,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
67,
553,
554,
555,
556,
557,
558,
509
]
},
{
"tb": 1638400,
"tbk": 1,
"tl": 8580,
"mb": 1638400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
53,
54,
55,
99,
481,
559,
509
]
},
{
"tb": 128,
"tbk": 2,
"tl": 3914,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
53,
54,
55,
56,
96,
97,
560
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 1304944,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
104,
105,
106,
107,
108,
561
]
},
{
"tb": 8,
"tbk": 1,
"tl": 4818,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
562,
563,
564,
565,
566,
567,
568,
569,
570
]
},
{
"tb": 838860800,
"tbk": 400,
"tl": 3250698600,
"mb": 838860800,
"mbk": 400,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
571,
572,
573,
574,
575,
576,
577,
578
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 630999,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
104,
105,
106,
107,
108,
579
]
},
{
"tb": 7584,
"tbk": 61,
"tl": 895124,
"mb": 7584,
"mbk": 61,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
67,
553,
554,
555,
556,
557,
387,
101
]
},
{
"tb": 480,
"tbk": 4,
"tl": 14162,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
124,
125,
126,
127,
580,
581
]
},
{
"tb": 1536,
"tbk": 8,
"tl": 2649,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
322,
323,
324,
582,
583,
584
]
},
{
"tb": 960,
"tbk": 8,
"tl": 2703,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
585,
586,
587,
588,
589
]
},
{
"tb": 64,
"tbk": 1,
"tl": 15268,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
27,
28,
29,
590,
389
]
},
{
"tb": 7808,
"tbk": 61,
"tl": 51,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
591,
592,
593,
594,
595,
596,
597,
598
]
},
{
"tb": 48,
"tbk": 2,
"tl": 83,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
599,
600,
601,
602,
603,
604
]
},
{
"tb": 48,
"tbk": 2,
"tl": 916930,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
257,
258,
259,
260,
261,
262,
263,
264,
605,
380
]
},
{
"tb": 2336,
"tbk": 13,
"tl": 317,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
39,
40,
41,
418,
419,
420,
606,
14,
371
]
},
{
"tb": 72,
"tbk": 3,
"tl": 16776,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
257,
258,
259,
260,
261,
262,
263,
264,
304,
305,
306,
307
]
},
{
"tb": 80,
"tbk": 1,
"tl": 458238,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
607,
608,
609,
610,
611,
612,
613,
614,
615
]
},
{
"tb": 512,
"tbk": 1,
"tl": 63986,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
60,
61,
62,
63,
616,
617,
618
]
},
{
"tb": 102400,
"tbk": 1,
"tl": 15314,
"mb": 102400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
219,
220,
221,
222,
223,
224,
225,
619,
247
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 1200,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
124,
125,
126,
127,
620,
14
]
},
{
"tb": 512,
"tbk": 1,
"tl": 127,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
219,
220,
221,
288,
289,
290,
621,
319,
320
]
},
{
"tb": 384,
"tbk": 2,
"tl": 71,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
622,
623,
624,
625,
626,
627,
628,
629,
630
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 20132502,
"mb": 65536,
"mbk": 1,
"gb": 65536,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
53,
54,
55,
56,
96,
631,
632
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 132,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
390,
633,
634,
635,
636,
637,
638,
639,
319,
320
]
},
{
"tb": 102400,
"tbk": 1,
"tl": 15255,
"mb": 102400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
219,
220,
221,
222,
223,
224,
640,
641,
642
]
},
{
"tb": 1824,
"tbk": 4,
"tl": 1327,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
643,
644,
645,
646,
647,
648
]
},
{
"tb": 48,
"tbk": 1,
"tl": 13142,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
649,
650,
651,
652,
653,
654,
655,
656,
657
]
},
{
"tb": 488,
"tbk": 2,
"tl": 471,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
658,
659
]
},
{
"tb": 72,
"tbk": 1,
"tl": 5628,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
75,
191,
192,
193,
194,
195,
196,
660,
422,
7
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 3138,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
67,
661,
662,
663,
664,
665,
666,
667,
668
]
},
{
"tb": 512,
"tbk": 1,
"tl": 11,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
669,
670,
671,
672,
673,
674,
675,
676
]
},
{
"tb": 104857600,
"tbk": 3200,
"tl": 6342129111,
"mb": 104857600,
"mbk": 3200,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
219,
220,
221,
222,
223,
224,
677,
194,
195,
196,
678
]
},
{
"tb": 160,
"tbk": 1,
"tl": 15304,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
679,
680,
681,
682,
247
]
},
{
"tb": 4416,
"tbk": 8,
"tl": 2058,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
204,
205,
206,
683,
684,
685
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2008496,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
686,
687,
688,
689,
690,
691,
692,
693,
694
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
695,
95
]
},
{
"tb": 216,
"tbk": 1,
"tl": 22309,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
696,
697,
698,
699,
700,
701,
702,
703,
704
]
},
{
"tb": 512,
"tbk": 1,
"tl": 155,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
219,
220,
221,
222,
223,
224,
705,
551,
552
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 1268395,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
67,
553,
554,
555,
706,
707,
708,
709
]
},
{
"tb": 102400,
"tbk": 2,
"tl": 282336,
"mb": 51200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
104,
105,
106,
107,
108,
710
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1391,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
67,
68,
69,
70,
71,
72,
711,
147
]
},
{
"tb": 96,
"tbk": 1,
"tl": 11295,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
124,
712,
713,
714,
715,
122
]
},
{
"tb": 96,
"tbk": 1,
"tl": 22211,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
67,
553,
554,
555,
556,
716,
717,
247
]
},
{
"tb": 16,
"tbk": 1,
"tl": 109,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
110,
718,
112,
113,
114,
115
]
},
{
"tb": 72,
"tbk": 1,
"tl": 2036410,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
719,
720,
721,
722,
723,
724,
725,
726,
727
]
},
{
"tb": 2336,
"tbk": 13,
"tl": 45,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
39,
40,
41,
418,
419,
420,
728,
73,
74
]
},
{
"tb": 16,
"tbk": 1,
"tl": 88,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
110,
111,
112,
729,
321,
175
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1988362,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
730,
731,
732,
733,
734,
7,
51
]
},
{
"tb": 512,
"tbk": 1,
"tl": 19,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
53,
54,
55,
56,
403,
735,
203
]
},
{
"tb": 1152,
"tbk": 4,
"tl": 165,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
736,
737,
738,
739,
740
]
},
{
"tb": 838860800,
"tbk": 1,
"tl": 451515,
"mb": 838860800,
"mbk": 1,
"gb": 838860800,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
219,
220,
221,
222,
223,
224,
741,
742,
743
]
},
{
"tb": 73728,
"tbk": 2,
"tl": 8876,
"mb": 73728,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
67,
553,
554,
555,
706,
744,
745,
201
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1035,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
219,
220,
221,
288,
289,
290,
746,
46,
47
]
},
{
"tb": 76800,
"tbk": 1,
"tl": 20278715,
"mb": 76800,
"mbk": 1,
"gb": 76800,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
17,
75,
747,
748,
749,
750,
751,
752,
753,
754
]
},
{
"tb": 2336,
"tbk": 13,
"tl": 45,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
39,
40,
41,
418,
419,
420,
728,
711,
147
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
117,
468,
469,
470,
471,
472,
473,
474,
475,
94
]
},
{
"tb": 42240,
"tbk": 791,
"tl": 731824,
"mb": 9024,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
398,
755,
756,
757,
758,
759,
760
]
},
{
"tb": 131008,
"tbk": 11,
"tl": 14452,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
27,
28,
29,
761,
762
]
},
{
"tb": 838860800,
"tbk": 1,
"tl": 2988156,
"mb": 838860800,
"mbk": 1,
"gb": 838860800,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
17,
571,
572,
573,
574,
575,
763,
764,
765
]
},
{
"tb": 7808,
"tbk": 2,
"tl": 977,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
571,
572,
573,
574,
766,
236,
237,
7
]
},
{
"tb": 384,
"tbk": 1,
"tl": 458478,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
767,
768,
769,
770,
771,
772,
773,
774,
775
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 17788,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
53,
54,
55,
56,
776,
777,
778
]
},
{
"tb": 768,
"tbk": 1,
"tl": 5597,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
75,
191,
192,
193,
194,
195,
196,
779,
422,
7
]
},
{
"tb": 2352,
"tbk": 17,
"tl": 26,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
39,
40,
41,
418,
419,
420,
728,
235,
236
]
},
{
"tb": 2097152,
"tbk": 32,
"tl": 380378,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
780,
781,
782,
783,
784,
785,
786,
787
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 34203,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
53,
54,
55,
56,
788,
789,
790
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1279356,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
75,
791,
792,
793,
794,
795,
796,
797,
798
]
},
{
"tb": 768,
"tbk": 1,
"tl": 4786,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
75,
799,
800,
801,
802,
803,
804,
805,
806
]
},
{
"tb": 64,
"tbk": 1,
"tl": 14181,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
27,
28,
29,
430,
762
]
},
{
"tb": 512,
"tbk": 1,
"tl": 26,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
219,
220,
221,
222,
223,
224,
807,
203,
175
]
},
{
"tb": 48,
"tbk": 2,
"tl": 117,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
808,
600,
601,
602,
603,
604
]
},
{
"tb": 32,
"tbk": 1,
"tl": 3995,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
124,
125,
126,
127,
809,
122
]
},
{
"tb": 512,
"tbk": 1,
"tl": 218317,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
60,
61,
62,
63,
810,
50,
7
]
},
{
"tb": 32,
"tbk": 1,
"tl": 22219,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
67,
553,
554,
555,
556,
811,
717,
247
]
},
{
"tb": 48,
"tbk": 2,
"tl": 928028,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
257,
258,
259,
260,
261,
262,
263,
264,
812,
813
]
},
{
"tb": 96,
"tbk": 1,
"tl": 20141265,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
17,
814,
815,
816,
817,
818,
819,
820,
821,
822
]
},
{
"tb": 512,
"tbk": 1,
"tl": 13088,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
823,
824,
825,
826,
827,
828,
829,
830
]
},
{
"tb": 960,
"tbk": 8,
"tl": 1499,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
585,
586,
587,
588,
831
]
},
{
"tb": 2336,
"tbk": 13,
"tl": 319,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
39,
40,
41,
418,
419,
420,
606,
14,
15
]
},
{
"tb": 8,
"tbk": 1,
"tl": 15,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
832,
833,
834,
835,
836,
837,
838,
839
]
},
{
"tb": 32,
"tbk": 1,
"tl": 212,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
840,
227,
7,
51
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 22276,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
390,
391,
392,
393,
394,
395,
841,
842
]
},
{
"tb": 24,
"tbk": 1,
"tl": 7,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
75,
191,
192,
193,
194,
195,
196,
197,
843,
458
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
110,
111,
49,
50,
7,
51
]
},
{
"tb": 960,
"tbk": 4,
"tl": 193,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
27,
28,
29,
388,
844
]
},
{
"tb": 96,
"tbk": 1,
"tl": 17300,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
845,
846,
847,
848,
849,
850,
237,
7,
51
]
},
{
"tb": 8384,
"tbk": 32,
"tl": 98266,
"mb": 8384,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
67,
553,
554,
555,
556,
557,
405,
406
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2779,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
230,
231,
232,
233,
386,
558,
509,
549
]
},
{
"tb": 32,
"tbk": 1,
"tl": 90,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
496,
851,
852,
853,
854,
855,
856,
857,
858
]
},
{
"tb": 1952,
"tbk": 2,
"tl": 29777,
"mb": 1952,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
67,
68,
69,
70,
71,
859,
101,
102
]
},
{
"tb": 51200,
"tbk": 1,
"tl": 13236,
"mb": 51200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
60,
61,
62,
63,
860,
65,
66
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 9971,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
117,
118,
119,
120,
861,
862,
147,
7
]
},
{
"tb": 96,
"tbk": 1,
"tl": 21,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
48,
112,
729,
321,
175,
95
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
92,
93,
476,
458,
7,
51
]
},
{
"tb": 96,
"tbk": 1,
"tl": 9,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
863,
247
]
},
{
"tb": 1088,
"tbk": 2,
"tl": 31,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
864,
865,
866,
867,
868,
869
]
},
{
"tb": 51200,
"tbk": 1,
"tl": 116931,
"mb": 51200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
60,
61,
62,
63,
870,
871,
872
]
},
{
"tb": 144,
"tbk": 1,
"tl": 5603,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
441,
873,
874,
875,
305,
306,
307,
876,
422,
7
]
},
{
"tb": 16,
"tbk": 1,
"tl": 294,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
272,
877,
878,
879,
880,
881,
882,
883,
7,
51
]
},
{
"tb": 512,
"tbk": 1,
"tl": 17,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
53,
54,
55,
56,
403,
884,
545
]
},
{
"tb": 16,
"tbk": 1,
"tl": 90,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
110,
718,
112,
729,
321,
175
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 34513,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
219,
220,
221,
288,
289,
290,
885,
147,
7
]
},
{
"tb": 768,
"tbk": 1,
"tl": 4267,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
230,
231,
232,
233,
234,
73,
74,
123
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1234878,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
886,
887,
888,
889,
890,
891,
892,
893,
894
]
},
{
"tb": 9624,
"tbk": 2,
"tl": 15724276,
"mb": 9600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
895,
896,
897,
898,
899,
900,
901,
902,
903
]
},
{
"tb": 1600,
"tbk": 8,
"tl": 145,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
904,
905,
906,
907,
908,
909
]
},
{
"tb": 8,
"tbk": 1,
"tl": 5937,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
910,
911,
912,
913,
914,
915,
916,
917
]
},
{
"tb": 32,
"tbk": 2,
"tl": 458748,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
918,
919,
920,
921,
922,
923,
924,
925
]
},
{
"tb": 512,
"tbk": 1,
"tl": 11063,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
53,
54,
55,
926,
203,
175,
95
]
},
{
"tb": 72,
"tbk": 1,
"tl": 15065,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
927,
123,
7,
51
]
},
{
"tb": 76800,
"tbk": 1,
"tl": 18142693,
"mb": 76800,
"mbk": 1,
"gb": 76800,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
17,
75,
928,
929,
930,
931,
932,
933,
934,
935
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 7472,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
219,
220,
221,
288,
289,
290,
936,
937,
7
]
},
{
"tb": 48,
"tbk": 1,
"tl": 13260,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
938,
939,
940,
941,
942,
943,
944,
945,
946
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1305708,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
124,
125,
126,
127,
947,
7
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 630980,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
104,
105,
106,
107,
108,
948
]
},
{
"tb": 80,
"tbk": 1,
"tl": 20278740,
"mb": 80,
"mbk": 1,
"gb": 80,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
17,
949,
950,
951,
952,
953,
954,
955,
956,
957
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 15691532,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
53,
54,
55,
56,
788,
789,
958
]
},
{
"tb": 2288,
"tbk": 22,
"tl": 311,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
424,
425,
426,
959,
960,
961
]
},
{
"tb": 73728,
"tbk": 2,
"tl": 8313,
"mb": 73728,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
67,
553,
554,
555,
706,
707,
708,
962
]
},
{
"tb": 16,
"tbk": 1,
"tl": 464026,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
219,
220,
221,
222,
223,
224,
303,
265,
255
]
},
{
"tb": 256,
"tbk": 1,
"tl": 10,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
39,
40,
41,
42,
43,
44,
963,
237,
7
]
},
{
"tb": 32,
"tbk": 1,
"tl": 20,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
53,
54,
55,
99,
964,
383,
247
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 458584,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
390,
633,
634,
635,
636,
637,
638,
639,
319,
965
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 2363420,
"mb": 524288,
"mbk": 1,
"gb": 524288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
17,
67,
553,
554,
555,
706,
966,
461,
967
]
},
{
"tb": 128,
"tbk": 1,
"tl": 1926,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
968,
969,
970,
971,
972,
973,
974,
975
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1988378,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
976,
977,
978,
979,
980,
7,
51
]
},
{
"tb": 32,
"tbk": 1,
"tl": 13352,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
219,
220,
221,
288,
289,
290,
981,
247,
95
]
},
{
"tb": 2097152,
"tbk": 32,
"tl": 174394,
"mb": 2097152,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
219,
220,
221,
222,
223,
224,
677,
194,
195,
196,
779
]
},
{
"tb": 216,
"tbk": 1,
"tl": 20132709,
"mb": 216,
"mbk": 1,
"gb": 216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
17,
696,
982,
983,
984,
985,
986,
987,
988,
989
]
},
{
"tb": 131008,
"tbk": 11,
"tl": 641429,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
27,
28,
29,
761,
172
]
},
{
"tb": 8,
"tbk": 1,
"tl": 6946,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
990,
991,
992,
993,
994,
995,
996,
997
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 1665,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
53,
54,
55,
56,
96,
97,
998
]
},
{
"tb": 512,
"tbk": 1,
"tl": 7842,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
219,
220,
221,
288,
289,
290,
999,
1000,
1001
]
},
{
"tb": 16,
"tbk": 1,
"tl": 6,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
110,
718,
49,
50,
7,
51
]
},
{
"tb": 64,
"tbk": 1,
"tl": 168,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
27,
28,
29,
590,
844
]
},
{
"tb": 48,
"tbk": 1,
"tl": 63991,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
60,
61,
62,
63,
1002,
617,
618
]
},
{
"tb": 1638432,
"tbk": 33,
"tl": 141931,
"mb": 1638400,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
219,
220,
221,
222,
223,
224,
677,
194,
195,
196,
197
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
117,
468,
469,
470,
471,
472,
473,
474,
1003,
476
]
},
{
"tb": 4916435,
"tbk": 7,
"tl": 22394,
"mb": 3277190,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
398,
399,
400,
401,
1004
]
},
{
"tb": 104857600,
"tbk": 3200,
"tl": 54918963987,
"mb": 104857600,
"mbk": 3200,
"gb": 104857600,
"gbk": 3200,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
219,
220,
221,
222,
223,
224,
1005,
1006,
1007
]
},
{
"tb": 512,
"tbk": 1,
"tl": 11068,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
53,
54,
55,
1008,
203,
175,
95
]
},
{
"tb": 896,
"tbk": 6,
"tl": 22330,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
27,
28,
29,
1009,
1010
]
},
{
"tb": 240,
"tbk": 2,
"tl": 464012,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
1011,
255,
7,
51
]
},
{
"tb": 96,
"tbk": 1,
"tl": 14186,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
171,
762
]
},
{
"tb": 976,
"tbk": 2,
"tl": 899,
"mb": 976,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
1012,
1013,
1014,
1015,
1016,
1017,
1018,
1019
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 2968,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
67,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027
]
},
{
"tb": 48,
"tbk": 1,
"tl": 248,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
1028,
227,
7,
51
]
},
{
"tb": 24,
"tbk": 1,
"tl": 18142769,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
17,
730,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036
]
},
{
"tb": 512,
"tbk": 1,
"tl": 20,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
53,
54,
55,
1037,
545,
175,
95
]
},
{
"tb": 196608,
"tbk": 3,
"tl": 16848,
"mb": 196608,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
219,
220,
221,
222,
223,
224,
677,
194,
195,
196,
660
]
},
{
"tb": 480,
"tbk": 4,
"tl": 156,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
124,
125,
126,
127,
256,
711
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 1271441,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
67,
553,
554,
555,
706,
1038,
1039,
1040
]
},
{
"tb": 1024,
"tbk": 5,
"tl": 916506,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1041,
1042,
1043,
1044,
1045
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1395,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
230,
231,
232,
233,
234,
711,
147,
7
]
},
{
"tb": 512,
"tbk": 1,
"tl": 10,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
219,
220,
221,
222,
223,
224,
1046,
237,
7
]
},
{
"tb": 76800,
"tbk": 1,
"tl": 2008486,
"mb": 76800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
75,
191,
192,
193,
194,
195,
196,
678,
1047,
1048
]
},
{
"tb": 512,
"tbk": 1,
"tl": 55,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
1049,
1050,
1051,
1052,
1053,
1054,
1055,
1056
]
},
{
"tb": 7808,
"tbk": 2,
"tl": 1134,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
571,
1057,
1058,
1059,
1060,
1061,
1062,
1063,
1064
]
},
{
"tb": 8,
"tbk": 1,
"tl": 18095878,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
17,
535,
1065,
1066,
1067,
1068,
1069,
1070,
1071,
1072
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
117,
468,
469,
470,
471,
472,
473,
474,
1003,
94
]
},
{
"tb": 7808,
"tbk": 2,
"tl": 30955,
"mb": 7808,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
53,
54,
55,
1073,
101,
102,
247
]
},
{
"tb": 192,
"tbk": 1,
"tl": 15263,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1074,
1075,
1076,
1077,
175
]
},
{
"tb": 2097152,
"tbk": 4096,
"tl": 8456,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
219,
220,
221,
222,
223,
224,
1078,
1079,
1080
]
},
{
"tb": 24,
"tbk": 1,
"tl": 458593,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
317,
318,
319,
965,
115,
7
]
},
{
"tb": 294912,
"tbk": 2,
"tl": 8990,
"mb": 294912,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
53,
54,
55,
56,
1081,
1082,
201
]
},
{
"tb": 1638400,
"tbk": 1,
"tl": 17498,
"mb": 1638400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
53,
54,
55,
99,
481,
1083,
509
]
},
{
"tb": 2352,
"tbk": 17,
"tl": 299,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
39,
40,
41,
418,
419,
420,
606,
14,
658
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 2040446,
"mb": 524288,
"mbk": 1,
"gb": 524288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
17,
67,
553,
554,
555,
706,
707,
708,
1084
]
},
{
"tb": 104857600,
"tbk": 3200,
"tl": 64844024500,
"mb": 104857600,
"mbk": 3200,
"gb": 104857600,
"gbk": 3200,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
53,
54,
55,
56,
1085,
1086,
1087
]
},
{
"tb": 51072,
"tbk": 112,
"tl": 21337,
"mb": 16872,
"mbk": 37,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
643,
644,
645,
1088,
1089,
1090
]
},
{
"tb": 32,
"tbk": 1,
"tl": 229,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
117,
468,
469,
470,
1091,
1092,
1093,
1094,
1095,
1096
]
},
{
"tb": 480,
"tbk": 4,
"tl": 7823,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
124,
125,
126,
127,
580,
1097
]
},
{
"tb": 512,
"tbk": 1,
"tl": 458577,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
52,
219,
220,
221,
288,
289,
290,
621,
319,
965
]
},
{
"tb": 102401,
"tbk": 1,
"tl": 239,
"mb": 102401,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
116,
117,
468,
469,
470,
1091,
1092,
1093,
1098,
1095,
1096
]
}
],
"ftbl": [
"[root]",
"0x62395e342f79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x62395e341709: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x62395dff1281: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x62395e011a38: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x62395e0d233e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x62395e035e30: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:13)",
"0x62395e0452ee: winter_prover::Prover::prove (prover/src/lib.rs:175:37)",
"0x62395e305a99: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x62395e305c0a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62395e0a9646: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e0a9646: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e0a9646: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395df84882: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x62395dfb346d: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x62395e07a4ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x62395df47636: winter_verifier::perform_verification (verifier/src/lib.rs:305:9)",
"0x62395e10a3b9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x62395dfd323c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62395e08dbd9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e08dbd9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e08dbd9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e08dbd9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f200a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0efc44: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11cc2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395df3b4b2: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x62395e007fe1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x62395e0110d8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x62395e0cf67d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x62395e180d94: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x62395e18c95d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x62395e109847: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x62395dfa5e36: <winterfell::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (winterfell/src/main.rs:133:9)",
"0x62395e10c7a8: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:216:31)",
"0x62395e12ad36: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x62395e148bd0: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x62395e116f66: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x62395e11e8f6: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x62395e2f961c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e2f961c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e2f961c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x62395e2f95cc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x62395e2f95cc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x62395e2f95cc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x62395e18bd9d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x62395e1955e9: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x62395df47c03: winter_verifier::perform_verification (verifier/src/lib.rs:323:5)",
"0x62395dfa621b: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:175:9)",
"0x62395e084518: winter_prover::trace::Trace::validate (src/trace/mod.rs:123:26)",
"0x62395e036578: winter_prover::Prover::generate_proof (prover/src/lib.rs:379:17)",
"0x62395dfa527c: winterfell::main (winterfell/src/main.rs:54:17)",
"0x62395dfdc4ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62395e0a97d5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e0a97d5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e0a97d5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e013ae7: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x62395df3b440: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x62395e123db6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x62395df23b11: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x62395e05a511: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e05a511: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e05a511: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x62395e0dec80: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x62395e0741b0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x62395df4b038: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:216:32)",
"0x62395e12ae5f: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x62395dfcfdec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62395df7ac84: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395df7ac84: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395df7ac84: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x62395e0dec56: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x62395dfb2a4c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x62395df4c77b: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x62395df4f4b0: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x62395dfd27bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62395e08d3a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e08d3a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e08d3a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e08d3a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f248a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0edfc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11ca3a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395e031d8f: winter_prover::Prover::generate_proof (prover/src/lib.rs:214:39)",
"0x62395e3089e9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e3089e9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e3089e9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e3089e9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x62395e308e2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e308df7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e308fce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395e30b4c9: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x62395e17a14c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x62395df43e0c: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x62395df4b1dd: winter_verifier::verify (verifier/src/lib.rs:96:32)",
"0x62395dfa5822: winterfell::main (winterfell/src/main.rs:71:11)",
"0x62395dfade2f: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x62395e17d338: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x62395df3fadb: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x62395e058485: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x62395dfc6d26: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x62395dfca040: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x62395e07c104: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x62395e340adc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x62395e33fd6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x62395e33fae8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x62395e33fae8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x62395e33f124: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x62395e33cd43: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x62395e10ef8c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:40:30)",
"0x62395dfab245: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x62395dfa6330: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:177:13)",
"0x62395e02eb72: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:371:13)",
"0x62395e020adf: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:41:22)",
"0x62395df6bb39: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:36)",
"0x62395e0361b5: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:21)",
"0x62395e2ce819: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x62395e2cd62a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62395e224f36: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e224f36: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e224f36: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395df7c07a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x62395df4c845: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x62395e035217: winter_prover::Prover::generate_proof (prover/src/lib.rs:603:29)",
"0x62395e2cd2e9: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x62395e1dc840: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x62395e1dcaa9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x62395e1ec111: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x62395df4341f: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x62395df41a15: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x62395e08fecf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e08fecf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e08fecf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e08fecf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f2d5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0efda7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11cedd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395dfa50e6: winterfell::main (winterfell/src/main.rs:38:27)",
"0x62395e09cacf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e09cacf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e09cacf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e09cacf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f1a5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0eec45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11ce4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395df1b1cf: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:283:9)",
"0x62395e04ddca: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x62395e03530a: winter_prover::Prover::generate_proof (prover/src/lib.rs:608:34)",
"0x62395dfd41fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62395e096622: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e096622: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e096622: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e096622: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x62395e0f1daa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0ed484: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e10a8ea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395e079d67: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x62395e08fac3: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e08fac3: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e08fac3: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e08fac3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f1bd4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0ee29a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11c654: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395dfa4d51: winterfell::main (winterfell/src/main.rs:22:32)",
"0x62395dfaeec7: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x62395df3beae: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x62395df3fa1c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x62395df3c1bf: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x62395df39ac4: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x62395df3df9d: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x62395e030350: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:543:13)",
"0x62395dfbe1b6: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x62395e194de9: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x62395df471ac: winter_verifier::perform_verification (verifier/src/lib.rs:275:24)",
"0x62395df4b5da: winter_verifier::verify (verifier/src/lib.rs:111:21)",
"0x62395e08af8f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e08af8f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e08af8f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e08af8f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f206d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0edf75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11b79d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395df3b3a8: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x62395dfe9c01: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x62395e011408: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x62395e0d3c54: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x62395e036285: winter_prover::Prover::generate_proof (prover/src/lib.rs:418:17)",
"0x62395df3da93: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x62395e17c4f9: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x62395df7a37b: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x62395e0a8a22: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e0a8a22: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e0a8a22: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x62395e0dfd25: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x62395e0dfd25: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x62395e0dfd25: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x62395e0a70e6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x62395df4c6db: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x62395dfc12d3: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x62395dfb6afb: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x62395dfbbbc6: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x62395df55325: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x62395df47a15: winter_verifier::perform_verification (verifier/src/lib.rs:311:25)",
"0x62395e04c80b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x62395e04aa1d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x62395e1bec2a: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x62395e1b755d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x62395e1bda25: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x62395e1b086e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x62395dfdf17c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62395e0a1eef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e0a1eef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e0a1eef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e0a1eef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f227d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0edc65: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e0fe9bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395e032033: winter_prover::Prover::generate_proof (prover/src/lib.rs:248:41)",
"0x62395e059e08: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e059e08: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e059e08: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x62395e0dfb85: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x62395e0dfb85: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x62395e0dfb85: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x62395e0a70a6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x62395e05ecbe: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x62395e03402d: winter_prover::Prover::generate_proof (prover/src/lib.rs:524:9)",
"0x62395df517be: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x62395df47b34: winter_verifier::perform_verification (verifier/src/lib.rs:319:28)",
"0x62395dfdba6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62395e0a9875: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e0a9875: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e0a9875: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395dfb2aaf: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x62395dfb53c0: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x62395dfba0bd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x62395e03519c: winter_prover::Prover::generate_proof (prover/src/lib.rs:600:25)",
"0x62395e3419ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62395e34304c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e34304c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e34304c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x62395e340c7c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x62395e340c7c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x62395e340c7c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x62395e33cece: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x62395e07b370: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x62395df4b50b: winter_verifier::verify (verifier/src/lib.rs:109:19)",
"0x62395e0a93c5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e0a93c5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e0a93c5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e0328cd: winter_prover::Prover::generate_proof (prover/src/lib.rs:308:37)",
"0x62395e06e8a2: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x62395df3fa78: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x62395df6cbe1: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:135:9)",
"0x62395e036266: winter_prover::Prover::generate_proof (prover/src/lib.rs:417:21)",
"0x62395dfb32b7: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x62395dfd906c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62395e059f38: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e059f38: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e059f38: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x62395e0e07c5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x62395e0e07c5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x62395e0e07c5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x62395df268e2: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x62395df6c973: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:33)",
"0x62395e2cb700: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x62395e2cb939: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x62395e2cb132: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x62395df8417c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x62395df80eb4: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x62395e17cb9b: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x62395dfd930c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62395e08cb59: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e08cb59: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e08cb59: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e08cb59: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f16ba: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0ef9a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11beea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395e033e8c: winter_prover::Prover::generate_proof (prover/src/lib.rs:505:52)",
"0x62395df27461: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x62395dfbe03f: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x62395dfc0003: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x62395dfc1210: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x62395df1989d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x62395df4429f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x62395dfbfdf3: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x62395e05a45b: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x62395e05a45b: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x62395e05a45b: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x62395e111b0a: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x62395e1287a8: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x62395dfad114: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x62395df552d7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x62395e0a49dd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e0a49dd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e0a49dd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e0a49dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f1c7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0eeff4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11c86a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395e07b67b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x62395df268f5: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x62395df26750: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x62395e0dfdf5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x62395e0dfdf5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x62395e0dfdf5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x62395e06e82f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x62395e098ecd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e098ecd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e098ecd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e098ecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f209a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0ed544: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11c73a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395e07b50b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x62395df25d37: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x62395df2eb7f: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x62395e02f010: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:354:9)",
"0x62395e10ee16: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:26:25)",
"0x62395df47fcc: winter_verifier::perform_verification (verifier/src/lib.rs:225:43)",
"0x62395e30863b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x62395e307f01: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x62395e30138b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x62395e2fe04e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x62395e2ff9ec: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x62395e2fe55a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x62395df7c517: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x62395e09258d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e09258d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e09258d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e09258d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f1d7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0edd34: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11c30a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395e07b733: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x62395e09b05d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e09b05d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e09b05d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e09b05d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f1dda: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0eede4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11c1ca: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395e07b7eb: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x62395dfca2b9: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x62395e04ba8b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x62395e04ae3d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x62395e1be78a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x62395e1992a9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x62395e101bc8: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x62395e100195: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x62395dfd63fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62395e095edf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e095edf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e095edf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e095edf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f288d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0ee0c5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11b9dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395e04308b: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:648:34)",
"0x62395dfd377c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62395e097bf2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e097bf2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e097bf2: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e097bf2: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x62395e0f2b7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0edc35: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11b8cd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395e051a6a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x62395e05f5c3: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x62395e07acf0: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x62395df477a8: winter_verifier::perform_verification (verifier/src/lib.rs:306:42)",
"0x62395df4cf56: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x62395e129eb6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x62395e14efbd: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x62395e010041: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x62395e011018: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x62395e0cf8be: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x62395e022e9d: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:175:17)",
"0x62395e02134f: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:55:17)",
"0x62395df7c31d: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x62395df27f63: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x62395e07cc15: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x62395e2f92c6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x62395e18c6ca: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x62395df83a4c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x62395dfc6e35: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x62395e031a42: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:512:13)",
"0x62395df468e5: winter_verifier::perform_verification (verifier/src/lib.rs:185:13)",
"0x62395dfcfb4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62395e02e4c4: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e02e4c4: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e02e4c4: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x62395e0debf6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x62395dfa60ad: <winterfell::WorkAir as winter_air::air::Air>::new (winterfell/src/main.rs:151:23)",
"0x62395e10df36: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:226:17)",
"0x62395e12819e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x62395e341ea0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x62395e3420d9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x62395e3423d2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x62395e343159: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x62395df2732d: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x62395dfad9fe: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x62395df3c2ce: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x62395df82547: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x62395e0823a7: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x62395e07bd54: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x62395dfdcccc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62395e0a9c35: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e0a9c35: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e0a9c35: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e03288e: winter_prover::Prover::generate_proof (prover/src/lib.rs:307:44)",
"0x62395e006c21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x62395e010dd8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x62395e0d26ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x62395df4c8ec: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x62395df1b6e8: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:227:28)",
"0x62395e0e02d9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x62395e0e02d9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x62395e0e02d9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x62395df39314: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x62395e032e23: winter_prover::Prover::generate_proof (prover/src/lib.rs:423:33)",
"0x62395e035e70: winter_prover::Prover::generate_proof (prover/src/lib.rs:449:13)",
"0x62395e3082db: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x62395e307fb1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x62395e3012ab: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x62395e2fae9d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x62395e30642b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x62395e30a1e3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x62395e0301b5: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:547:13)",
"0x62395dfbbd52: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x62395e0334d0: winter_prover::Prover::generate_proof (prover/src/lib.rs:452:35)",
"0x62395e30848b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x62395e307e51: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x62395e30154b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x62395e2fbc41: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x62395e2fc2c7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x62395e30b95b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x62395dfcae4c: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x62395e07bf37: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x62395dfd5c1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62395e0894b9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e0894b9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e0894b9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e0894b9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f18ea: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0ee4f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11c39a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395e01ffe8: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:83:9)",
"0x62395e06eb6c: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x62395e18cb73: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x62395dfd032c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62395df28aea: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395df28aea: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395df28aea: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x62395e0deca6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x62395dfbf508: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x62395e031f02: winter_prover::Prover::generate_proof (prover/src/lib.rs:233:27)",
"0x62395df6f9d6: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x62395df6ee23: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x62395e0436ee: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:669:26)",
"0x62395e02975a: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x62395e10d852: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:503:32)",
"0x62395e12adc6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x62395e14893a: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x62395e112e27: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x62395e11da22: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x62395e2d032c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e2d032c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e2d032c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x62395e29f69c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x62395e29f69c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x62395e29f69c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x62395df44084: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x62395df43dce: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x62395dfbf2db: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x62395dff3511: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x62395e011a08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x62395e0cf40e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x62395dfb6c69: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x62395e047efa: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x62395df82356: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x62395e08e69a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e08e69a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e08e69a: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e08e69a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x62395e0f14cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0efa1a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e179f4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395dfb3243: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x62395dffe6d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x62395e0117c8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x62395e0d067e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x62395dfca216: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x62395dfc63b5: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x62395dfd449c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62395e0934cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e0934cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e0934cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e0934cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f20dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0ef3d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11ba6d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395e031cd2: winter_prover::Prover::generate_proof (prover/src/lib.rs:210:38)",
"0x62395dfee611: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x62395e011288: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x62395e0cfc0b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x62395df7f3c9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x62395e075d0d: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x62395dff7a31: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x62395e011048: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x62395e0d455e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x62395df483b2: winter_verifier::perform_verification (verifier/src/lib.rs:179:9)",
"0x62395def3d82: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x62395def3d82: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62395def3d82: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395def3d82: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395def3d82: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395def3d82: std::io::buffered::bufwriter::BufWriter<W>::with_capacity (io/buffered/bufwriter.rs:115:33)",
"0x62395def3d82: std::io::buffered::linewriter::LineWriter<W>::with_capacity (io/buffered/linewriter.rs:109:29)",
"0x62395def3d82: std::io::buffered::linewriter::LineWriter<W>::new (io/buffered/linewriter.rs:89:9)",
"0x62395def3d82: std::io::stdio::stdout::{{closure}} (src/io/stdio.rs:618:62)",
"0x62395def3d82: std::sync::once_lock::OnceLock<T>::get_or_init::{{closure}} (src/sync/once_lock.rs:250:50)",
"0x62395def3d82: std::sync::once_lock::OnceLock<T>::initialize::{{closure}} (src/sync/once_lock.rs:376:19)",
"0x62395def3d82: std::sync::once::Once::call_once_force::{{closure}} (src/sync/once.rs:208:40)",
"0x62395def3d82: std::sys_common::once::futex::Once::call (sys_common/once/futex.rs:124:21)",
"0x62395def2eca: std::sync::once::Once::call_once_force (src/sync/once.rs:208:9)",
"0x62395def2eca: std::sync::once_lock::OnceLock<T>::initialize (src/sync/once_lock.rs:375:9)",
"0x62395e35d1c5: std::sync::once_lock::OnceLock<T>::get_or_try_init (src/sync/once_lock.rs:298:9)",
"0x62395e35d1c5: std::sync::once_lock::OnceLock<T>::get_or_init (src/sync/once_lock.rs:250:15)",
"0x62395e35d1c5: std::io::stdio::stdout (src/io/stdio.rs:618:14)",
"0x62395e35d1c5: std::io::stdio::print_to (src/io/stdio.rs:1020:21)",
"0x62395e35d1c5: std::io::stdio::_print (src/io/stdio.rs:1097:5)",
"0x62395dfa503a: winterfell::main (winterfell/src/main.rs:36:5)",
"0x62395dfd544a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62395e0a34f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e0a34f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e0a34f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e0a34f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f19da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0eebc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11beba: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395e042fcf: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:644:36)",
"0x62395df58ca0: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x62395df47abc: winter_verifier::perform_verification (verifier/src/lib.rs:317:25)",
"0x62395e06e921: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x62395e06ebbd: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x62395e075e73: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x62395e07bad4: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x62395e12ed85: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x62395e12ee16: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x62395df47edf: winter_verifier::perform_verification (verifier/src/lib.rs:228:13)",
"0x62395e0a9b95: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e0a9b95: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e0a9b95: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395df7a785: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x62395df83cc7: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x62395df7ef66: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x62395df7eb8e: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x62395dfc1222: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x62395df3624c: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x62395dfd252a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62395e08a949: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e08a949: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e08a949: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e08a949: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f296a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0ee874: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11cb8a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395df4f40e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x62395dfd669c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62395e0a9af5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e0a9af5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e0a9af5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e013c07: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x62395df36237: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x62395df6da29: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x62395e12b1d6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x62395e05f0d2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x62395dfb17dc: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x62395df474f7: winter_verifier::perform_verification (verifier/src/lib.rs:298:27)",
"0x62395e2fae3d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x62395e306748: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x62395e30a0a7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x62395e3060f0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x62395e2fa669: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x62395e2f9e51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x62395e2f9950: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x62395e18c5ed: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x62395e031978: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:517:13)",
"0x62395e09495f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e09495f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e09495f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e09495f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f2a4d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0eee15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11cf5d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395e1927af: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x62395df254f5: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x62395e05255c: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x62395e100129: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x62395e051b36: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x62395e055296: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x62395e02ebcf: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:369:9)",
"0x62395e022d5a: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:170:36)",
"0x62395df84abb: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x62395dfd80bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62395e0896af: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e0896af: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e0896af: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e0896af: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0de705: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x62395e0ef50a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11bb3d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395df42891: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x62395df695e4: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:156:33)",
"0x62395df6ce25: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:128:17)",
"0x62395e167c6e: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x62395e07cd01: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x62395df85c4b: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x62395df2ecba: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x62395dfdcf6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62395e0a222b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e0a222b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e0a222b: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e0a222b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x62395e0f2aad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0ef955: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e01316d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395e053618: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x62395df7a428: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x62395e032132: winter_prover::Prover::generate_proof (prover/src/lib.rs:262:22)",
"0x62395e02e012: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e02e012: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e02e012: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x62395e0e0b05: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x62395e0e0b05: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x62395e0e0b05: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x62395df2eb95: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x62395e083131: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x62395e057853: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x62395e10a832: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x62395e04b72b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x62395e04af9d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x62395e1be69a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x62395e1991e9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x62395e10315b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x62395df796eb: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x62395dfdd20c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62395e096e49: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e096e49: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e096e49: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e096e49: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f193a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0ee7f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11c01a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395df46c5f: winter_verifier::perform_verification (verifier/src/lib.rs:218:40)",
"0x62395e0732d4: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x62395e18c78d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x62395df39238: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x62395e09ae94: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e09ae94: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e09ae94: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e09ae94: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x62395e0f15da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0efec4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11cc5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395df8246e: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x62395e0904ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e0904ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e0904ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e0904ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f2d3d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0ed5f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11d21d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395df58ff2: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x62395e0a8d83: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x62395df1e8cd: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x62395e010a21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x62395e010e08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x62395e0d342e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x62395e07cf07: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x62395e19dc7d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x62395e1a0613: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x62395dfb1237: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x62395dfdeedc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62395e0a125f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e0a125f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e0a125f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e0a125f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0de18b: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x62395e0ee8d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11c56d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395e0327f7: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:36)",
"0x62395df4b330: winter_verifier::verify (verifier/src/lib.rs:98:38)",
"0x62395dfd1d4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62395e08d59f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e08d59f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e08d59f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e08d59f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0dd0d6: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x62395e0efbc5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11d30d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395df4b3a8: winter_verifier::verify (verifier/src/lib.rs:102:24)",
"0x62395e12ed72: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x62395e013a57: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x62395dfb2259: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x62395dfb3739: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x62395df6e572: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x62395df1988c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x62395e04db91: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x62395e21e0b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x62395e220d69: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x62395e228322: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x62395df7c65f: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x62395e088b50: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x62395e07b970: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x62395dfa6247: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:176:13)",
"0x62395dfdbfac: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62395e0918df: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e0918df: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e0918df: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e0918df: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0dcb4e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x62395e0ef415: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11d2ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395df4e4f7: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x62395dfb2dbc: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x62395e10f2cb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:64:9)",
"0x62395dfd3a1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62395e0a99b5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e0a99b5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e0a99b5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e032909: winter_prover::Prover::generate_proof (prover/src/lib.rs:309:32)",
"0x62395df543b7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x62395e00bb21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x62395e011498: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x62395e0d37ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x62395dfc4db7: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x62395e051bae: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x62395df73081: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x62395df71e86: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x62395e04312f: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:655:31)",
"0x62395e17a472: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x62395dfb699f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x62395e18be04: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x62395e0a436f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e0a436f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e0a436f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e0a436f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f189d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0ef895: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11cbdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395e083fe2: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:140:32)",
"0x62395e342108: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x62395e3424ca: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x62395e3424ca: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x62395e34226e: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x62395e34226e: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x62395e34235d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x62395e0303d4: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:541:17)",
"0x62395df46fc9: winter_verifier::perform_verification (verifier/src/lib.rs:266:61)",
"0x62395df719bd: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x62395df6dc90: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x62395df70614: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x62395dfb5499: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x62395dfd0d9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62395e099e5f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e099e5f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e099e5f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e099e5f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f13cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0eee87: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11be8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395e020bcd: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:51:26)",
"0x62395e10ac5a: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x62395e17e6a7: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x62395e061889: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x62395df392c5: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x62395e0a2d1f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e0a2d1f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e0a2d1f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e0a2d1f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f161d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0ed4f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11c34d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395df3c7f7: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x62395df7130f: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x62395df70506: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x62395e044acc: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:701:36)",
"0x62395e08d18f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e08d18f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e08d18f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e08d18f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f1ccd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0eecd7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11c50d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395e111aa0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x62395e0902ef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e0902ef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e0902ef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e0902ef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f24cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0eed15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11b7dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395df4c8d5: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x62395df5421f: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x62395df25388: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x62395df7c999: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x62395e0849a5: winter_prover::trace::Trace::validate (src/trace/mod.rs:179:13)",
"0x62395e088997: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x62395e020028: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:83:31)",
"0x62395e1267af: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x62395dfd6e6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62395e091b29: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e091b29: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e091b29: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e091b29: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f1caa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0f0084: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11c19a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395dfbf24b: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x62395e099a3f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e099a3f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e099a3f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e099a3f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f2b1d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0edbb7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11b9bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395df59df7: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x62395dfb9e24: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x62395e08c033: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e08c033: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e08c033: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e08c033: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f29ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0ef545: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11cfdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395e0326db: winter_prover::Prover::generate_proof (prover/src/lib.rs:293:23)",
"0x62395e05f4ab: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x62395df4c03b: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:102:85)",
"0x62395e128a6e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x62395dfbf2f2: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x62395dfbe6b2: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x62395e2f8c69: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x62395e2f5c1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62395e2f2db6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e2f2db6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e2f2db6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395dfb9b68: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x62395e090b4f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e090b4f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e090b4f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e090b4f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0dc03e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x62395e0f0035: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11d0ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395dfa574e: winterfell::main (winterfell/src/main.rs:65:26)",
"0x62395dfc6b3e: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x62395e0741ce: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x62395df80dac: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x62395e04dd4a: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x62395e07ce5f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x62395e04d07b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x62395e04a28d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x62395e1be2ea: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x62395e199009: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x62395e102a75: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x62395df79598: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x62395e08355d: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:243:25)",
"0x62395dfa5d94: winterfell::build_do_work_trace (winterfell/src/main.rs:91:5)",
"0x62395e04560b: winterfell::main::{{closure}} (winterfell/src/main.rs:30:23)",
"0x62395df263e2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395df263e2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395df263e2: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x62395df3924b: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x62395e0a8328: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e0a8328: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e0a8328: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x62395e0e0205: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x62395e0e0205: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x62395e0e0205: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x62395e033ea3: winter_prover::Prover::generate_proof (prover/src/lib.rs:510:39)",
"0x62395df58eb1: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x62395e04ddb3: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x62395dfd56dc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62395e09744f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e09744f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e09744f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e09744f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f204d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0ecf75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11d41d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395e033dcf: winter_prover::Prover::generate_proof (prover/src/lib.rs:501:51)",
"0x62395dfd7b7c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62395e09119f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e09119f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e09119f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e09119f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f254d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0ef355: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11cddd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395df6d1b1: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x62395e30812b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x62395e308061: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x62395e30146b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x62395e2fbb71: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x62395e2fc307: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x62395e30b90b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x62395e0a040d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e0a040d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e0a040d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e0a040d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f1e4a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0ef6e4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11bd1a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395e075ba1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x62395e09d0ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e09d0ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e09d0ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e09d0ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f144d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0ed625: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11c13d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395df25d28: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x62395df546fe: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x62395df4f41d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x62395e09fabf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e09fabf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e09fabf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e09fabf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f2e7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0ef925: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11c5dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395df1b788: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:228:23)",
"0x62395e17cb89: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x62395e0346b8: winter_prover::Prover::generate_proof (prover/src/lib.rs:558:13)",
"0x62395dfd103c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62395e093909: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e093909: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e093909: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e093909: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f2e3a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0ee934: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11ba2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395df46ba2: winter_verifier::perform_verification (verifier/src/lib.rs:214:41)",
"0x62395e035e8b: winter_prover::Prover::generate_proof (prover/src/lib.rs:450:13)",
"0x62395e05f0f5: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x62395dfd05cc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62395e093aff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e093aff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e093aff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e093aff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f14ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0ee337: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11ce8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395dfa4edf: winterfell::main (winterfell/src/main.rs:28:26)",
"0x62395e10e2f8: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:651:17)",
"0x62395e2fdf3e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x62395e2ff400: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x62395e2febf8: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x62395dfb69b6: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x62395dfb9c0e: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x62395df28126: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x62395df6ba9c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:51:13)",
"0x62395df6ed9a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x62395e032511: winter_prover::Prover::generate_proof (prover/src/lib.rs:274:13)",
"0x62395e0a3d2f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e0a3d2f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e0a3d2f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e0a3d2f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f156d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0ee125: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11c98d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395e18bd29: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x62395dfdd9ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x62395e0a9a55: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e0a9a55: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e0a9a55: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e032877: winter_prover::Prover::generate_proof (prover/src/lib.rs:306:39)",
"0x62395e07c76e: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x62395e09786f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e09786f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e09786f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e09786f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f261d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0ed285: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11bc1d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395e031eb3: winter_prover::Prover::generate_proof (prover/src/lib.rs:222:20)",
"0x62395e09ab9d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e09ab9d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e09ab9d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e09ab9d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f12aa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0ee394: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11cb5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395e07b5c3: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x62395df3dd08: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x62395dfbbe92: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x62395dfbbb2c: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x62395e034b02: winter_prover::Prover::generate_proof (prover/src/lib.rs:571:9)",
"0x62395df6958a: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:155:31)",
"0x62395df43d9a: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x62395e2f901a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x62395df1ba3f: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:230:34)",
"0x62395e124026: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x62395e14a3a7: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x62395df546df: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x62395e10a4e2: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x62395df43c98: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x62395df6c8b2: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:28)",
"0x62395e0a5e6f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e0a5e6f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e0a5e6f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e0a5e6f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f1ecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0ed825: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11cafd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395e18cc5a: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x62395e095b04: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e095b04: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e095b04: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e095b04: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x62395e0f2eaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0eed64: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11d0da: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395df7ee8d: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x62395e05f347: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x62395e08b7f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e08b7f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e08b7f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e08b7f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f134a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0ed3a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11d13a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395e042f12: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:640:42)",
"0x62395df58cb7: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x62395df6e4bd: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x62395e044eb8: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:716:26)",
"0x62395e033931: winter_prover::Prover::generate_proof (prover/src/lib.rs:482:37)",
"0x62395dff48d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x62395e011318: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x62395e0d212d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x62395df3baf2: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x62395e167ac5: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x62395dfb9c29: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x62395df1d036: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x62395e10dc48: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:300:57)",
"0x62395e0953bf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e0953bf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e0953bf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e0953bf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f26cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0efe45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11c52d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395df544ab: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x62395e08c70f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e08c70f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e08c70f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e08c70f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f127d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0efa55: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11b8ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395e18cac4: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x62395e08a539: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x62395e08a539: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x62395e08a539: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x62395e08a539: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x62395e0f1b7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x62395e0efb14: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x62395e11d44a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x62395e0324ea: winter_prover::Prover::generate_proof (prover/src/lib.rs:272:43)",
"0x62395dfc6b7f: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x62395dff57a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x62395e011108: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x62395e0d1dae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x62395df481eb: winter_verifier::perform_verification (verifier/src/lib.rs:184:9)",
"0x62395df2e106: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x62395df6aac9: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:290:18)",
"0x62395df6988e: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:173:30)",
"0x62395e01618f: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x62395dfb693d: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x62395df7f31c: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x62395df6ee5c: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x62395e0841b0: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:140:51)",
"0x62395e125476: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x62395df23fc1: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x62395e1abf7b: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x62395e1b61a9: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x62395e1b0416: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x62395e2299e9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x62395e2299e9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x62395e2299e9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x62395e04a0af: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x62395df28a26: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x62395e07c714: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x62395dfbd8d8: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x62395e04a09a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)"
]
}