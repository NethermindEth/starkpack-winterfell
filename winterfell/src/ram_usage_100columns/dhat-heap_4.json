{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell",
"pid": 67229,
"tg": 19919010,
"te": 22065396,
"pps": [
{
"tb": 96,
"tbk": 1,
"tl": 13,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10
]
},
{
"tb": 712,
"tbk": 3,
"tl": 2622,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
13,
14,
15,
16,
17,
18,
19,
20,
21
]
},
{
"tb": 838860800,
"tbk": 200,
"tl": 1781609723,
"mb": 838860800,
"mbk": 200,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
22,
23,
24,
25,
26,
27,
28,
29
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 6975,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
30,
31,
32,
33,
34,
35,
36
]
},
{
"tb": 2592,
"tbk": 14,
"tl": 56,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
13,
14,
15,
37,
38,
39,
40,
41,
42
]
},
{
"tb": 96,
"tbk": 1,
"tl": 10124,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
45,
46,
47,
48,
49
]
},
{
"tb": 11392,
"tbk": 3,
"tl": 1684,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
22,
50,
51,
52,
53,
54,
55,
56,
57
]
},
{
"tb": 216,
"tbk": 1,
"tl": 21925308,
"mb": 216,
"mbk": 1,
"gb": 216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
58,
59,
60,
61,
62,
63,
64,
65,
66
]
},
{
"tb": 512,
"tbk": 1,
"tl": 21925294,
"mb": 512,
"mbk": 1,
"gb": 512,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
67,
68,
69,
70,
71,
72,
73,
74
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 15932,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
76,
77,
78,
79,
80,
81,
82,
83,
84
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3237,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
85,
86,
87,
88,
89,
90,
91,
92,
93
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 37740,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
94,
95,
96,
97,
98,
99,
100
]
},
{
"tb": 8,
"tbk": 1,
"tl": 21,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
101,
102,
103,
104,
105,
106,
107,
108
]
},
{
"tb": 32,
"tbk": 2,
"tl": 518394,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
109,
110,
111,
112,
113,
114,
115,
116
]
},
{
"tb": 104857600,
"tbk": 1600,
"tl": 3284414763,
"mb": 104857600,
"mbk": 1600,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
76,
77,
78,
79,
80,
81,
117,
118,
119,
120,
121
]
},
{
"tb": 160,
"tbk": 1,
"tl": 10089,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
122,
123,
124,
125,
126,
127,
128,
129,
130
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 1414694,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
133,
134,
135,
136,
137
]
},
{
"tb": 1424,
"tbk": 3,
"tl": 1617,
"mb": 1008,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
138,
139,
140,
141,
142,
143,
144,
145
]
},
{
"tb": 32,
"tbk": 1,
"tl": 7417,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
76,
77,
78,
146,
147,
148,
149,
150,
151
]
},
{
"tb": 2592,
"tbk": 14,
"tl": 356,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
13,
14,
15,
37,
38,
39,
152,
153,
154
]
},
{
"tb": 51200,
"tbk": 2,
"tl": 237895,
"mb": 25600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
133,
134,
135,
136,
155
]
},
{
"tb": 256,
"tbk": 1,
"tl": 148405,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
156,
157,
158,
159,
160,
161,
162
]
},
{
"tb": 512,
"tbk": 1,
"tl": 2708,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
94,
95,
96,
163,
164,
49,
151
]
},
{
"tb": 448,
"tbk": 3,
"tl": 172,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
165,
166,
167,
168,
169
]
},
{
"tb": 2097152,
"tbk": 8192,
"tl": 11965,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
76,
77,
78,
79,
80,
81,
170,
171,
172
]
},
{
"tb": 128,
"tbk": 1,
"tl": 7132,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
76,
77,
78,
146,
147,
148,
173,
174,
175
]
},
{
"tb": 128,
"tbk": 1,
"tl": 399502,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
176,
177,
178,
179,
180,
181,
162
]
},
{
"tb": 51200,
"tbk": 1,
"tl": 10153,
"mb": 51200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
76,
77,
78,
79,
80,
81,
82,
182,
150
]
},
{
"tb": 512,
"tbk": 1,
"tl": 28,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
94,
95,
96,
183,
184,
49,
151
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
185,
186,
187,
188,
189,
162,
190
]
},
{
"tb": 256,
"tbk": 1,
"tl": 113,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
76,
77,
78,
146,
147,
148,
191,
192,
193
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 646168,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
133,
134,
135,
136,
194
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1265270,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
195,
196,
197,
198,
199,
200,
201,
202,
203
]
},
{
"tb": 51200,
"tbk": 2,
"tl": 237885,
"mb": 25600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
133,
134,
135,
136,
204
]
},
{
"tb": 24,
"tbk": 1,
"tl": 518253,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
185,
205,
206,
192,
207,
208,
162
]
},
{
"tb": 384,
"tbk": 2,
"tl": 72,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
209,
210,
211,
212,
213,
214,
215,
216,
217
]
},
{
"tb": 2400,
"tbk": 20,
"tl": 1440,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
30,
31,
218,
219,
220,
221,
153
]
},
{
"tb": 48,
"tbk": 1,
"tl": 7334,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
222,
223,
224,
225,
226,
227,
228,
229,
230
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
30,
231,
232,
233,
234,
235,
236,
237,
238,
239,
240
]
},
{
"tb": 144,
"tbk": 1,
"tl": 11240,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
241,
242,
243,
244,
245,
246,
247,
248,
162
]
},
{
"tb": 2384,
"tbk": 10,
"tl": 1009,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
249,
250,
251,
252,
253,
254,
255,
256
]
},
{
"tb": 8,
"tbk": 1,
"tl": 4226,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
257,
258,
259,
260,
261,
262,
263,
264
]
},
{
"tb": 16,
"tbk": 1,
"tl": 107,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
185,
265,
266,
267,
268,
269,
208
]
},
{
"tb": 8,
"tbk": 1,
"tl": 4234,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
270,
271,
272,
273,
274,
275,
276,
277
]
},
{
"tb": 512,
"tbk": 1,
"tl": 5466,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
94,
95,
96,
278,
279,
49,
151
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1595,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
280,
281,
282,
283,
284,
285,
286,
162
]
},
{
"tb": 104857600,
"tbk": 1600,
"tl": 30060390562,
"mb": 104857600,
"mbk": 1600,
"gb": 104857600,
"gbk": 1600,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
76,
77,
78,
79,
80,
81,
287,
288,
289
]
},
{
"tb": 64,
"tbk": 1,
"tl": 150,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
165,
166,
167,
290,
169
]
},
{
"tb": 1088,
"tbk": 2,
"tl": 31,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
291,
292,
293,
294,
295,
296
]
},
{
"tb": 2880,
"tbk": 12,
"tl": 1708,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
165,
166,
167,
297,
298
]
},
{
"tb": 80,
"tbk": 1,
"tl": 517956,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
299,
300,
301,
302,
303,
304,
305,
306,
307
]
},
{
"tb": 72,
"tbk": 3,
"tl": 33679,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
308,
309,
310,
311,
312,
313,
314,
315,
316,
244,
245,
246
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2962,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
280,
281,
282,
283,
317,
318,
319,
320
]
},
{
"tb": 8,
"tbk": 1,
"tl": 17700316,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
321,
322,
323,
324,
325,
326,
327,
328,
329
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 21940666,
"mb": 1024,
"mbk": 1,
"gb": 1024,
"gbk": 1,
"eb": 1024,
"ebk": 1,
"fs": [
330,
331,
332,
333,
334,
335,
336,
337,
338,
339,
340,
341,
342,
343,
344,
345,
346,
347,
348,
349,
350
]
},
{
"tb": 32,
"tbk": 1,
"tl": 140,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
30,
231,
232,
233,
234,
351,
352,
353,
354,
355,
356
]
},
{
"tb": 512,
"tbk": 4,
"tl": 1035941,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
357,
358,
359,
360,
361
]
},
{
"tb": 2280,
"tbk": 5,
"tl": 1594,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
362,
363,
364,
365,
366,
367
]
},
{
"tb": 2592,
"tbk": 14,
"tl": 379,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
13,
14,
15,
37,
38,
39,
152,
153,
368
]
},
{
"tb": 512,
"tbk": 1,
"tl": 16,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
94,
95,
96,
369,
184,
49,
151
]
},
{
"tb": 128,
"tbk": 1,
"tl": 2701,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
370,
371,
372,
373,
374,
375,
376,
377
]
},
{
"tb": 40,
"tbk": 1,
"tl": 17700352,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
378,
379,
380,
381,
382,
383,
384,
385,
386
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 2568872,
"mb": 1048576,
"mbk": 1,
"gb": 1048576,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
387,
388,
389,
390,
391,
392,
393,
394
]
},
{
"tb": 3352,
"tbk": 24,
"tl": 418,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
13,
14,
15,
37,
38,
39,
152,
153,
395
]
},
{
"tb": 96,
"tbk": 1,
"tl": 9457,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
396,
397,
398,
399,
400
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 6524,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
30,
231,
401,
402,
403,
404,
405,
286,
162
]
},
{
"tb": 3352,
"tbk": 24,
"tl": 41,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
13,
14,
15,
37,
38,
39,
40,
406,
407
]
},
{
"tb": 65472,
"tbk": 10,
"tl": 9586,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
165,
166,
167,
408,
400
]
},
{
"tb": 11392,
"tbk": 3,
"tl": 1417,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
22,
23,
24,
25,
409,
407,
410,
162
]
},
{
"tb": 216,
"tbk": 1,
"tl": 14398,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
58,
411,
412,
413,
414,
415,
416,
417,
418
]
},
{
"tb": 74752,
"tbk": 3,
"tl": 8213,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
94,
95,
96,
97,
419,
420,
421
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3052,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
85,
422,
423,
424,
118,
119,
120,
425,
426,
42
]
},
{
"tb": 7728,
"tbk": 14,
"tl": 2561,
"mb": 2760,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
427,
428,
429,
430,
431,
432
]
},
{
"tb": 72,
"tbk": 3,
"tl": 64,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
433,
434,
435,
436,
437,
438,
439,
440,
441
]
},
{
"tb": 2040,
"tbk": 3,
"tl": 27956,
"mb": 2040,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
280,
281,
282,
283,
317,
442,
443,
444
]
},
{
"tb": 64,
"tbk": 1,
"tl": 9444,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
94,
95,
96,
445,
446,
49,
151
]
},
{
"tb": 32,
"tbk": 1,
"tl": 64,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
447,
448,
449,
450,
451,
452,
453,
454,
455
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
185,
456,
457,
151
]
},
{
"tb": 819232,
"tbk": 33,
"tl": 95039,
"mb": 819200,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
76,
77,
78,
79,
80,
81,
117,
118,
119,
120,
425
]
},
{
"tb": 80,
"tbk": 1,
"tl": 22050617,
"mb": 80,
"mbk": 1,
"gb": 80,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
458,
459,
460,
461,
462,
463,
464,
465,
466
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 399491,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
94,
95,
96,
97,
467,
468,
469
]
},
{
"tb": 819200,
"tbk": 1,
"tl": 5498,
"mb": 819200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
94,
95,
96,
470,
471,
472,
473
]
},
{
"tb": 96,
"tbk": 1,
"tl": 11,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
396,
397,
398,
474,
84
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 8529,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
94,
95,
96,
470,
471,
475,
319
]
},
{
"tb": 2848,
"tbk": 3,
"tl": 28360,
"mb": 2848,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
387,
476,
477,
478,
479,
480,
443,
444
]
},
{
"tb": 4968,
"tbk": 9,
"tl": 2526,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
427,
428,
429,
481,
482,
483
]
},
{
"tb": 48,
"tbk": 1,
"tl": 89463,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
156,
157,
158,
159,
484,
485,
486
]
},
{
"tb": 24,
"tbk": 1,
"tl": 2081821,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
487,
488,
489,
490,
491,
162,
190
]
},
{
"tb": 8,
"tbk": 1,
"tl": 3065,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
492,
493,
494,
495,
496,
497,
498,
499
]
},
{
"tb": 9408,
"tbk": 32,
"tl": 79867,
"mb": 9408,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
387,
388,
389,
390,
500,
501,
502,
473
]
},
{
"tb": 16,
"tbk": 1,
"tl": 22050895,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
503,
504,
505,
506,
507,
508,
509,
510
]
},
{
"tb": 128,
"tbk": 1,
"tl": 10974,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
13,
14,
15,
37,
38,
39,
511,
248,
162
]
},
{
"tb": 11392,
"tbk": 3,
"tl": 376,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
133,
134,
135,
136,
512
]
},
{
"tb": 320,
"tbk": 2,
"tl": 1036253,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
513,
514,
515,
516,
517
]
},
{
"tb": 2490368,
"tbk": 19,
"tl": 10036724,
"mb": 2490368,
"mbk": 19,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
94,
95,
96,
97,
518,
519,
520
]
},
{
"tb": 1040,
"tbk": 10,
"tl": 244,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
521,
522,
523,
524,
525,
526
]
},
{
"tb": 480,
"tbk": 4,
"tl": 169,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
30,
31,
218,
219,
220,
527,
41
]
},
{
"tb": 224,
"tbk": 1,
"tl": 10809,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
528,
529,
530,
531,
444
]
},
{
"tb": 512,
"tbk": 1,
"tl": 11250,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
532,
533,
534,
535,
162
]
},
{
"tb": 11392,
"tbk": 3,
"tl": 437,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
94,
95,
96,
97,
536,
537,
538
]
},
{
"tb": 448,
"tbk": 3,
"tl": 10115,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
165,
166,
167,
168,
539
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1403776,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
30,
31,
218,
219,
220,
540,
162
]
},
{
"tb": 16,
"tbk": 1,
"tl": 529342,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
76,
77,
78,
79,
80,
81,
541,
542,
181
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 16275,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
76,
77,
78,
146,
147,
148,
543,
544,
162
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1403780,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
30,
31,
218,
219,
220,
545,
162
]
},
{
"tb": 48,
"tbk": 1,
"tl": 472,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
185,
546,
84,
162,
190
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 2100768,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
94,
95,
96,
97,
467,
468,
547
]
},
{
"tb": 2459027,
"tbk": 7,
"tl": 14484,
"mb": 1638854,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
548,
549,
550,
551,
552
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1112,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
13,
14,
15,
16,
17,
18,
553,
21,
554
]
},
{
"tb": 598016,
"tbk": 3,
"tl": 18515,
"mb": 598016,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
94,
95,
96,
97,
555,
556,
557
]
},
{
"tb": 96,
"tbk": 1,
"tl": 13,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
185,
558,
559,
161,
162,
190
]
},
{
"tb": 8,
"tbk": 1,
"tl": 3269,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
560,
561,
562,
563,
564,
565,
566,
567,
568
]
},
{
"tb": 8,
"tbk": 1,
"tl": 4214,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
569,
570,
571,
572,
573,
574,
575,
576
]
},
{
"tb": 2097152,
"tbk": 16,
"tl": 399180,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
577,
578,
579,
580,
581,
582,
583,
584
]
},
{
"tb": 128,
"tbk": 1,
"tl": 9,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
76,
77,
78,
79,
80,
81,
585,
410,
162
]
},
{
"tb": 512,
"tbk": 1,
"tl": 22,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
76,
77,
78,
79,
80,
81,
586,
279,
49
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 16241,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
94,
95,
96,
97,
467,
468,
587
]
},
{
"tb": 1440,
"tbk": 12,
"tl": 265,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
30,
31,
218,
219,
220,
527,
406
]
},
{
"tb": 51201,
"tbk": 1,
"tl": 147,
"mb": 51201,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
30,
231,
232,
233,
234,
351,
352,
353,
588,
355,
356
]
},
{
"tb": 54864,
"tbk": 961,
"tl": 758856,
"mb": 12736,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
548,
589,
590,
591,
592,
593,
594
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2075233,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
595,
596,
597,
598,
599,
600,
601,
602,
603
]
},
{
"tb": 32,
"tbk": 1,
"tl": 138,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
76,
77,
78,
79,
80,
81,
604,
605,
606
]
},
{
"tb": 16,
"tbk": 1,
"tl": 79,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
185,
265,
266,
267,
607,
608,
49
]
},
{
"tb": 11392,
"tbk": 89,
"tl": 84,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
94,
95,
96,
470,
609,
443,
444
]
},
{
"tb": 96,
"tbk": 1,
"tl": 10805,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
396,
397,
398,
610,
444
]
},
{
"tb": 8,
"tbk": 1,
"tl": 4220,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
611,
612,
613,
614,
615,
616,
617,
618
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 76339,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
94,
95,
96,
97,
619,
620,
621
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 29,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
76,
77,
78,
79,
80,
81,
82,
622,
162
]
},
{
"tb": 838860800,
"tbk": 1,
"tl": 576048,
"mb": 838860800,
"mbk": 1,
"gb": 838860800,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
76,
77,
78,
79,
80,
81,
623,
624,
625
]
},
{
"tb": 24,
"tbk": 1,
"tl": 19841644,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
626,
627,
628,
629,
630,
631,
632,
633,
634
]
},
{
"tb": 48,
"tbk": 1,
"tl": 21930311,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
635,
636,
637,
638,
639,
640,
189,
162
]
},
{
"tb": 72,
"tbk": 1,
"tl": 11280,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
85,
422,
423,
424,
118,
119,
120,
641,
248,
162
]
},
{
"tb": 149504,
"tbk": 3,
"tl": 18283,
"mb": 149504,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
387,
388,
389,
390,
391,
642,
643,
557
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 1402242,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
133,
134,
135,
136,
644
]
},
{
"tb": 96,
"tbk": 1,
"tl": 3048,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
645,
646,
647,
648,
42
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 39084,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
76,
77,
78,
146,
147,
148,
649,
286,
162
]
},
{
"tb": 56,
"tbk": 1,
"tl": 2432,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
185,
650,
651,
150,
151
]
},
{
"tb": 480,
"tbk": 4,
"tl": 9428,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
30,
31,
218,
219,
220,
652,
653
]
},
{
"tb": 96,
"tbk": 1,
"tl": 27,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
396,
397,
398,
654,
279
]
},
{
"tb": 16,
"tbk": 1,
"tl": 21926196,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
655,
656,
657,
658,
659,
660,
661,
662
]
},
{
"tb": 480,
"tbk": 4,
"tl": 7113,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
30,
31,
218,
219,
220,
652,
663
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
185,
265,
664,
559,
161,
162,
190
]
},
{
"tb": 38400,
"tbk": 1,
"tl": 2075223,
"mb": 38400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
85,
422,
423,
424,
118,
119,
120,
121,
665,
666
]
},
{
"tb": 160,
"tbk": 1,
"tl": 10141,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
667,
668,
669,
670,
150
]
},
{
"tb": 512,
"tbk": 1,
"tl": 14391,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
67,
68,
69,
70,
71,
72,
671,
672
]
},
{
"tb": 256,
"tbk": 1,
"tl": 89459,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
156,
157,
158,
159,
673,
485,
486
]
},
{
"tb": 24,
"tbk": 1,
"tl": 122,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
185,
205,
206,
192,
193,
608,
49
]
},
{
"tb": 24,
"tbk": 1,
"tl": 2081816,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
85,
674,
675,
676,
677,
162,
190
]
},
{
"tb": 576,
"tbk": 2,
"tl": 45,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
678,
679,
680,
681,
682,
683,
684,
685,
686
]
},
{
"tb": 128,
"tbk": 1,
"tl": 11090,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
94,
95,
96,
470,
687,
688,
150
]
},
{
"tb": 512,
"tbk": 1,
"tl": 16,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
94,
95,
96,
97,
536,
689,
279
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1265260,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
185,
690,
691,
692,
693,
694,
695
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 2668,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
387,
696,
697,
698,
699,
700,
701,
702,
703
]
},
{
"tb": 896,
"tbk": 6,
"tl": 14419,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
165,
166,
167,
704,
705
]
},
{
"tb": 96,
"tbk": 1,
"tl": 8028,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
30,
31,
706,
707,
708,
709,
710
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 1327367,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
387,
388,
389,
390,
391,
711,
712,
713
]
},
{
"tb": 16,
"tbk": 1,
"tl": 21930379,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
43,
714,
715,
716,
717,
718,
719,
720,
721,
722,
723
]
},
{
"tb": 2040,
"tbk": 3,
"tl": 1923,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
280,
281,
282,
283,
284,
406,
407,
410
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2836,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
387,
476,
477,
478,
479,
724,
41,
42
]
},
{
"tb": 131008,
"tbk": 11,
"tl": 120,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
165,
166,
167,
725,
726
]
},
{
"tb": 128,
"tbk": 1,
"tl": 453,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
727,
728,
729,
730,
406
]
},
{
"tb": 512,
"tbk": 1,
"tl": 24,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
94,
95,
96,
97,
467,
468,
731
]
},
{
"tb": 256,
"tbk": 1,
"tl": 103,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
133,
134,
135,
136,
732
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1357483,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
85,
733,
734,
735,
736,
737,
738,
739,
740
]
},
{
"tb": 16,
"tbk": 1,
"tl": 21925175,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
741,
742,
743,
744,
745,
746,
747,
748,
749
]
},
{
"tb": 2880,
"tbk": 10,
"tl": 3120,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
750,
751,
752,
753,
754,
755
]
},
{
"tb": 48,
"tbk": 2,
"tl": 71,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
185,
756,
757,
758,
759,
760,
761
]
},
{
"tb": 680,
"tbk": 3,
"tl": 646,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
176,
177,
178,
762,
153,
395,
763
]
},
{
"tb": 104857600,
"tbk": 1600,
"tl": 35274124709,
"mb": 104857600,
"mbk": 1600,
"gb": 104857600,
"gbk": 1600,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
94,
95,
96,
97,
764,
765,
766
]
},
{
"tb": 256,
"tbk": 1,
"tl": 518240,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
76,
77,
78,
146,
147,
148,
191,
192,
207
]
},
{
"tb": 28210,
"tbk": 26,
"tl": 34345,
"mb": 14144,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
30,
31,
32,
33,
34,
35,
767
]
},
{
"tb": 51200,
"tbk": 1,
"tl": 103,
"mb": 51200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
94,
95,
96,
470,
768,
769,
150
]
},
{
"tb": 24,
"tbk": 1,
"tl": 2081826,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
770,
771,
772,
773,
774,
162,
190
]
},
{
"tb": 48,
"tbk": 2,
"tl": 1036261,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
308,
309,
310,
311,
312,
313,
314,
315,
775,
517
]
},
{
"tb": 149504,
"tbk": 3,
"tl": 17236,
"mb": 149504,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
387,
388,
389,
390,
391,
776,
777,
778
]
},
{
"tb": 819200,
"tbk": 1,
"tl": 10221,
"mb": 819200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
94,
95,
96,
470,
471,
779,
473
]
},
{
"tb": 64,
"tbk": 1,
"tl": 9452,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
165,
166,
167,
780,
400
]
},
{
"tb": 48,
"tbk": 2,
"tl": 1058662,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
308,
309,
310,
311,
312,
313,
314,
315,
781,
782
]
},
{
"tb": 91136,
"tbk": 3,
"tl": 1170,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
133,
134,
135,
136,
783
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
30,
231,
232,
233,
234,
235,
236,
237,
238,
784,
188
]
},
{
"tb": 48,
"tbk": 2,
"tl": 106,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
185,
785,
757,
758,
759,
760,
761
]
},
{
"tb": 1440,
"tbk": 12,
"tl": 4219,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
786,
787,
788,
789,
790
]
},
{
"tb": 1440,
"tbk": 12,
"tl": 2139,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
786,
787,
788,
789,
791
]
},
{
"tb": 96,
"tbk": 1,
"tl": 32,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
396,
397,
398,
792,
279
]
},
{
"tb": 192,
"tbk": 3,
"tl": 8006,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
94,
95,
96,
97,
467,
468,
793
]
},
{
"tb": 1920,
"tbk": 10,
"tl": 3202,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
794,
795,
796,
797,
798,
799
]
},
{
"tb": 256,
"tbk": 1,
"tl": 498,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
176,
177,
178,
762,
153,
368,
800
]
},
{
"tb": 256,
"tbk": 1,
"tl": 141,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
76,
77,
78,
79,
80,
81,
801,
605,
606
]
},
{
"tb": 24,
"tbk": 1,
"tl": 529345,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
308,
309,
310,
311,
312,
313,
314,
315,
542,
181
]
},
{
"tb": 16,
"tbk": 1,
"tl": 696930,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
802,
803,
804,
805,
806,
807,
808,
809,
810
]
},
{
"tb": 512,
"tbk": 1,
"tl": 518248,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
67,
811,
812,
813,
814,
815,
816,
817,
192,
207
]
},
{
"tb": 16,
"tbk": 1,
"tl": 6,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
185,
265,
266,
559,
161,
162,
190
]
},
{
"tb": 512,
"tbk": 1,
"tl": 118,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
67,
811,
812,
813,
814,
815,
816,
817,
192,
193
]
},
{
"tb": 69504,
"tbk": 294,
"tl": 174741,
"mb": 14592,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
387,
818,
819,
820,
821,
822,
823,
824,
825
]
},
{
"tb": 32,
"tbk": 1,
"tl": 22,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
94,
95,
96,
470,
826,
769,
150
]
},
{
"tb": 512,
"tbk": 1,
"tl": 5462,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
94,
95,
96,
827,
279,
49,
151
]
},
{
"tb": 11392,
"tbk": 3,
"tl": 1158,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
133,
134,
135,
136,
828
]
},
{
"tb": 96,
"tbk": 1,
"tl": 1403786,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
396,
397,
398,
829,
162
]
},
{
"tb": 1968,
"tbk": 2,
"tl": 55,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
830,
831,
832,
833,
834,
835
]
},
{
"tb": 96,
"tbk": 1,
"tl": 21930400,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
836,
837,
838,
839,
840,
841,
842,
843,
844
]
},
{
"tb": 262176,
"tbk": 3,
"tl": 4767,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
94,
95,
96,
97,
845,
846,
847
]
},
{
"tb": 2097152,
"tbk": 16,
"tl": 177651,
"mb": 2097152,
"mbk": 16,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
76,
77,
78,
79,
80,
81,
117,
118,
119,
120,
848
]
},
{
"tb": 384,
"tbk": 1,
"tl": 518144,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
849,
850,
851,
852,
853,
854,
855,
856,
857
]
},
{
"tb": 65472,
"tbk": 10,
"tl": 662270,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
165,
166,
167,
408,
858
]
},
{
"tb": 16,
"tbk": 1,
"tl": 11229,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
76,
77,
78,
79,
80,
81,
541,
316,
244,
245,
246
]
},
{
"tb": 262176,
"tbk": 3,
"tl": 4742,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
94,
95,
96,
97,
536,
859,
846
]
},
{
"tb": 256,
"tbk": 1,
"tl": 10,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
13,
14,
15,
16,
17,
18,
860,
410,
162
]
},
{
"tb": 96,
"tbk": 1,
"tl": 662136,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
396,
397,
398,
399,
858
]
},
{
"tb": 819200,
"tbk": 32,
"tl": 100447,
"mb": 819200,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
76,
77,
78,
146,
147,
148,
861,
862,
863
]
},
{
"tb": 9408,
"tbk": 32,
"tl": 92603,
"mb": 9408,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
387,
388,
389,
390,
500,
501,
318,
319
]
},
{
"tb": 288,
"tbk": 1,
"tl": 8511,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
864,
865,
866,
867,
557
]
},
{
"tb": 192,
"tbk": 1,
"tl": 10105,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
868,
869,
870,
871,
49
]
},
{
"tb": 25600,
"tbk": 1,
"tl": 7316,
"mb": 25600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
156,
157,
158,
159,
872,
873,
874
]
},
{
"tb": 512,
"tbk": 1,
"tl": 47,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
875,
876,
877,
878,
879,
880,
881,
882
]
},
{
"tb": 11392,
"tbk": 89,
"tl": 73,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
883,
884,
885,
886,
887,
888,
889,
890
]
},
{
"tb": 131072,
"tbk": 2,
"tl": 2714748,
"mb": 131072,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
76,
77,
78,
146,
147,
148,
891,
892,
893
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1590,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
387,
476,
477,
478,
479,
724,
285,
286
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1222,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
396,
397,
398,
894,
286
]
},
{
"tb": 1152,
"tbk": 4,
"tl": 141,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
895,
896,
897,
898,
899
]
},
{
"tb": 24,
"tbk": 1,
"tl": 2081811,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
626,
900,
901,
902,
903,
162,
190
]
},
{
"tb": 74752,
"tbk": 3,
"tl": 9380,
"mb": 73728,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
94,
95,
96,
97,
904,
905,
557
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2558,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
30,
31,
218,
219,
220,
906,
710
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 2961,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
387,
907,
908,
909,
910,
911,
912,
913,
914
]
},
{
"tb": 32,
"tbk": 1,
"tl": 409,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
185,
915,
84,
162,
190
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2841,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
280,
281,
282,
283,
284,
41,
42,
916
]
},
{
"tb": 384,
"tbk": 1,
"tl": 11221,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
85,
422,
423,
424,
118,
119,
120,
848,
248,
162
]
},
{
"tb": 512,
"tbk": 1,
"tl": 9,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
917,
918,
919,
920,
921,
922,
923,
924
]
},
{
"tb": 838860800,
"tbk": 1,
"tl": 3174817,
"mb": 838860800,
"mbk": 1,
"gb": 838860800,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
22,
23,
24,
25,
26,
925,
926,
927
]
},
{
"tb": 24,
"tbk": 1,
"tl": 10,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
85,
422,
423,
424,
118,
119,
120,
425,
928,
189
]
},
{
"tb": 11392,
"tbk": 3,
"tl": 30104,
"mb": 11392,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
94,
95,
96,
929,
443,
444,
150
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 428455,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
94,
95,
96,
97,
419,
930,
931
]
},
{
"tb": 2592,
"tbk": 14,
"tl": 60,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
13,
14,
15,
37,
38,
39,
40,
285,
286
]
},
{
"tb": 64,
"tbk": 1,
"tl": 662130,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
165,
166,
167,
780,
858
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 21925163,
"mb": 32768,
"mbk": 1,
"gb": 32768,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
94,
95,
96,
97,
467,
932,
933
]
},
{
"tb": 48,
"tbk": 1,
"tl": 7264,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
934,
935,
936,
937,
938,
939,
940,
941,
942
]
},
{
"tb": 96,
"tbk": 1,
"tl": 23,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
185,
558,
267,
607,
608,
49,
151
]
},
{
"tb": 432,
"tbk": 3,
"tl": 1145,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
156,
157,
158,
159,
943,
538,
21
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 5457,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
30,
31,
32,
33,
34,
35,
944
]
},
{
"tb": 32,
"tbk": 1,
"tl": 14336,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
387,
388,
389,
390,
500,
945,
946,
150
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
714,
715,
716,
717,
718,
719,
720,
721,
947,
150
]
},
{
"tb": 8,
"tbk": 1,
"tl": 4208,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
948,
949,
950,
951,
952,
953,
954,
955
]
},
{
"tb": 240,
"tbk": 2,
"tl": 529326,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
185,
956,
181,
162,
190
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 2131110,
"mb": 1048576,
"mbk": 1,
"gb": 1048576,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
387,
388,
389,
390,
391,
776,
777,
957
]
},
{
"tb": 51200,
"tbk": 1,
"tl": 10096,
"mb": 51200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
76,
77,
78,
79,
80,
81,
958,
959,
960
]
},
{
"tb": 512,
"tbk": 1,
"tl": 15,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
94,
95,
96,
97,
536,
961,
184
]
},
{
"tb": 512,
"tbk": 1,
"tl": 8256,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
962,
963,
964,
965,
966,
967,
968,
969
]
},
{
"tb": 139255,
"tbk": 14,
"tl": 703107,
"mb": 69632,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
548,
549,
550,
551,
970
]
},
{
"tb": 10752,
"tbk": 82,
"tl": 752043,
"mb": 10752,
"mbk": 82,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
387,
388,
389,
390,
500,
501,
442,
443
]
},
{
"tb": 456,
"tbk": 2,
"tl": 1055021,
"mb": 456,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
85,
971,
972,
973,
974,
975,
976,
977,
978
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
185,
186,
187,
240,
151
]
},
{
"tb": 51232,
"tbk": 3,
"tl": 2870944,
"mb": 51232,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
979,
980,
981,
982,
983,
984,
985,
986
]
},
{
"tb": 8,
"tbk": 1,
"tl": 19801119,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
321,
987,
988,
989,
990,
991,
992,
993,
994
]
},
{
"tb": 96,
"tbk": 1,
"tl": 31,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
185,
558,
267,
268,
269,
208,
162
]
},
{
"tb": 393216,
"tbk": 3,
"tl": 33791,
"mb": 393216,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
76,
77,
78,
79,
80,
81,
117,
118,
119,
120,
641
]
},
{
"tb": 819200,
"tbk": 1,
"tl": 8744,
"mb": 819200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
30,
231,
401,
402,
403,
995,
710,
42,
916
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
30,
231,
232,
233,
234,
235,
236,
237,
238,
239,
188
]
},
{
"tb": 144,
"tbk": 1,
"tl": 13246,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
996,
997,
998,
999,
1000,
1001,
410,
162,
190
]
},
{
"tb": 838860800,
"tbk": 32768,
"tl": 312935,
"mb": 25600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
76,
77,
78,
146,
147,
148,
1002,
1003,
393
]
},
{
"tb": 24,
"tbk": 1,
"tl": 156,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
85,
1004,
1005,
1006,
1007,
1008,
1009,
1010,
1011
]
},
{
"tb": 72,
"tbk": 1,
"tl": 10131,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
185,
1012,
916,
162,
190
]
},
{
"tb": 128,
"tbk": 1,
"tl": 14328,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
387,
388,
389,
390,
500,
1013,
946,
150
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
30,
231,
232,
233,
234,
235,
236,
237,
238,
784,
240
]
},
{
"tb": 64,
"tbk": 1,
"tl": 10109,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
165,
166,
167,
290,
539
]
},
{
"tb": 4824,
"tbk": 2,
"tl": 17197334,
"mb": 4800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1014,
1015,
1016,
1017,
1018,
1019,
1020,
1021,
1022
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 1321040,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
387,
388,
389,
390,
391,
776,
777,
1023
]
},
{
"tb": 25600,
"tbk": 1,
"tl": 7327,
"mb": 25600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
156,
157,
158,
159,
1024,
873,
874
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 21925054,
"mb": 131072,
"mbk": 1,
"gb": 131072,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
94,
95,
96,
97,
467,
1025,
1026
]
},
{
"tb": 38400,
"tbk": 1,
"tl": 22050598,
"mb": 38400,
"mbk": 1,
"gb": 38400,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
85,
1027,
1028,
1029,
1030,
1031,
1032,
1033,
1034
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 17123991,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
94,
95,
96,
97,
619,
620,
1035
]
},
{
"tb": 2704,
"tbk": 26,
"tl": 352,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
521,
522,
523,
1036,
1037,
1038
]
},
{
"tb": 16,
"tbk": 1,
"tl": 181,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
802,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
162,
190
]
},
{
"tb": 2000,
"tbk": 10,
"tl": 167,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
1046,
1047,
1048,
1049,
1050,
1051
]
},
{
"tb": 16,
"tbk": 1,
"tl": 76,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
185,
265,
664,
267,
607,
608,
49
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2566,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
280,
281,
282,
283,
317,
502,
473,
651
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 3578,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
94,
95,
96,
97,
467,
468,
1052
]
},
{
"tb": 25600,
"tbk": 1,
"tl": 116577,
"mb": 25600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
156,
157,
158,
159,
1053,
1054,
1055
]
},
{
"tb": 96,
"tbk": 1,
"tl": 9,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
396,
397,
398,
1056,
150
]
},
{
"tb": 16,
"tbk": 1,
"tl": 105,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
185,
265,
664,
267,
268,
269,
208
]
},
{
"tb": 32,
"tbk": 1,
"tl": 149,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
185,
456,
1057,
1058,
1059,
1060,
1061
]
},
{
"tb": 32,
"tbk": 1,
"tl": 65,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
447,
1062,
1063,
1064,
1065,
1066,
1067,
1068,
1069
]
},
{
"tb": 819200,
"tbk": 1,
"tl": 9444,
"mb": 819200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
30,
231,
401,
402,
403,
1070,
710,
42,
916
]
},
{
"tb": 62928,
"tbk": 138,
"tl": 28501,
"mb": 19152,
"mbk": 42,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
362,
363,
364,
1071,
1072,
1073
]
},
{
"tb": 256,
"tbk": 1,
"tl": 456,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
176,
177,
178,
762,
153,
154,
1074
]
},
{
"tb": 2848,
"tbk": 3,
"tl": 1914,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
387,
476,
477,
478,
479,
724,
406,
407
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1106,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
76,
77,
78,
146,
147,
148,
1075,
21,
554
]
},
{
"tb": 72,
"tbk": 1,
"tl": 2123512,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1076,
1077,
1078,
1079,
1080,
1081,
1082,
1083,
1084
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 646192,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
131,
132,
133,
134,
135,
136,
1085
]
},
{
"tb": 128,
"tbk": 1,
"tl": 8884,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
43,
44,
1086,
1087,
1088,
1089,
473
]
},
{
"tb": 4992,
"tbk": 26,
"tl": 8508,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
794,
795,
796,
1090,
1091,
1092
]
},
{
"tb": 480,
"tbk": 4,
"tl": 181,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
30,
31,
218,
219,
220,
527,
285
]
},
{
"tb": 224,
"tbk": 3,
"tl": 529323,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
30,
31,
218,
219,
220,
1093,
1094
]
},
{
"tb": 38400,
"tbk": 1,
"tl": 19841516,
"mb": 38400,
"mbk": 1,
"gb": 38400,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
85,
1095,
1096,
1097,
1098,
1099,
1100,
1101,
1102
]
}
],
"ftbl": [
"[root]",
"0x5c3195c053b9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5c3195ad0c1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c3195b844b9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b844b9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b844b9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b844b9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195bec8ea: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195be94f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c1739a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195b1afe8: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:83:9)",
"0x5c3195e00a99: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5c3195e00c0a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c3195df461c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195df461c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195df461c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5c3195df45cc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5c3195df45cc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5c3195df45cc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5c3195df42c6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x5c3195c876ca: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x5c3195c905e9: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x5c3195ad169c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c3195ba4af5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195ba4af5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195ba4af5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b0ec07: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5c3195a31237: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x5c3195a68a29: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x5c3195c261d6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5c3195dc9819: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5c3195dc82e9: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5c3195dc6700: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5c3195dc6939: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5c3195dc6132: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5c3195a7f17c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x5c3195a7731d: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x5c3195bdb2d9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5c3195bdb2d9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5c3195bdb2d9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5c3195aaddbc: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x5c3195a4777b: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x5c3195a4a4b0: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x5c3195e3df79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5c3195e3c709: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5c3195af2a31: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5c3195b0c048: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5c3195bcf55e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5c3195a433b2: winter_verifier::perform_verification (verifier/src/lib.rs:179:9)",
"0x5c3195a465da: winter_verifier::verify (verifier/src/lib.rs:111:21)",
"0x5c3195b8770f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b8770f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b8770f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b8770f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195bec27d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195beaa55: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c168ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195c87ac4: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x5c3195accd4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c3195b9286f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b9286f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b9286f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b9286f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195bed61d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195be8285: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c16c1d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195b2ceb3: winter_prover::Prover::generate_proof (prover/src/lib.rs:222:20)",
"0x5c3195acab4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c3195b294c4: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b294c4: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b294c4: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5c3195bd9bf6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5c3195aa10ad: <winterfell::WorkAir as winter_air::air::Air>::new (winterfell/src/main.rs:151:23)",
"0x5c3195c08f36: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:226:17)",
"0x5c3195c2319e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5c3195ad74ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c3195b54e08: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b54e08: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b54e08: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5c3195bdab85: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5c3195bdab85: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5c3195bdab85: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5c3195ba20a6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5c3195b59cbe: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x5c3195b2f02d: winter_prover::Prover::generate_proof (prover/src/lib.rs:524:9)",
"0x5c3195acd7bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c3195b8b2ef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b8b2ef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b8b2ef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b8b2ef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195bed4cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195be9d15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c167dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195a478d5: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x5c3195ba47d5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195ba47d5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195ba47d5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b0eae7: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5c3195c05c5a: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x5c3195c796a7: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x5c3195b5c889: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x5c3195b87033: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b87033: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b87033: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b87033: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195bed9ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195bea545: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c17fdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195b2d6db: winter_prover::Prover::generate_proof (prover/src/lib.rs:293:23)",
"0x5c3195b980ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b980ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b980ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b980ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195bec44d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195be8625: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c1713d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195a20d28: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x5c3195ba3d83: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5c3195bdad25: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5c3195bdad25: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5c3195bdad25: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5c3195a198cd: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x5c3195acf1fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c3195b91622: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b91622: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b91622: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b91622: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5c3195becdaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195be8484: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c058ea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195b74d67: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x5c3195e3badc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x5c3195e3ad6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x5c3195e3aae8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x5c3195e3aae8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x5c3195e3a124: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5c3195e37d43: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x5c3195a38a93: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x5c3195ba0e6f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195ba0e6f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195ba0e6f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195ba0e6f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195bececd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195be8825: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c17afd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195c87c5a: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x5c3195b5545b: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5c3195b5545b: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5c3195b5545b: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5c3195b7776e: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x5c3195a4650b: winter_verifier::verify (verifier/src/lib.rs:109:19)",
"0x5c3195aa0822: winterfell::main (winterfell/src/main.rs:71:11)",
"0x5c3195a7fabb: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x5c3195aae46d: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x5c3195b75cf0: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x5c3195a1488c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x5c3195b55511: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b55511: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b55511: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5c3195bd9c80: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5c3195b7f9a5: winter_prover::trace::Trace::validate (src/trace/mod.rs:179:13)",
"0x5c3195b31578: winter_prover::Prover::generate_proof (prover/src/lib.rs:379:17)",
"0x5c3195b402ee: winter_prover::Prover::prove (prover/src/lib.rs:175:37)",
"0x5c3195a4c7be: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x5c3195a42b34: winter_verifier::perform_verification (verifier/src/lib.rs:319:28)",
"0x5c3195b02fe1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5c3195b0c0d8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5c3195bca67d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5c3195b2ca42: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:512:13)",
"0x5c3195ab96b2: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x5c3195a29106: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x5c3195a65ac9: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:290:18)",
"0x5c3195a6488e: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:173:30)",
"0x5c3195ab6e92: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x5c3195ab6b2c: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x5c3195b2fb02: winter_prover::Prover::generate_proof (prover/src/lib.rs:571:9)",
"0x5c3195ba4646: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195ba4646: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195ba4646: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195a3aa78: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x5c3195a67be1: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:135:9)",
"0x5c3195b31266: winter_prover::Prover::generate_proof (prover/src/lib.rs:417:21)",
"0x5c3195b77d01: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x5c3195a53ca0: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x5c3195a42abc: winter_verifier::perform_verification (verifier/src/lib.rs:317:25)",
"0x5c3195c04847: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x5c3195c7514c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x5c3195a3ee0c: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x5c3195aba2db: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x5c3195b2cf02: winter_prover::Prover::generate_proof (prover/src/lib.rs:233:27)",
"0x5c3195aa027c: winterfell::main (winterfell/src/main.rs:54:17)",
"0x5c3195a29cba: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x5c3195b2a010: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:354:9)",
"0x5c3195c09e16: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:26:25)",
"0x5c3195b5a0f5: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x5c3195ad06dc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c3195b9244f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b9244f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b9244f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b9244f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195bed04d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195be7f75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c1841d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195b2edcf: winter_prover::Prover::generate_proof (prover/src/lib.rs:501:51)",
"0x5c3195a1489d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x5c3195a20d37: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x5c3195a29b7f: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x5c3195a66a9c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:51:13)",
"0x5c3195b311b5: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:21)",
"0x5c3195ad7f6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c3195b9d22b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b9d22b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b9d22b: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b9d22b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5c3195bedaad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195bea955: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195b0e16d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195b4e618: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x5c3195cd7840: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5c3195cd7aa9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5c3195ce7111: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5c3195a80c4b: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x5c3195acc03c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c3195b8e909: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b8e909: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b8e909: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b8e909: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195bede3a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195be9934: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c16a2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195a41ba2: winter_verifier::perform_verification (verifier/src/lib.rs:214:41)",
"0x5c3195dc862a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c3195dcb32c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195dcb32c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195dcb32c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5c3195d9a69c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5c3195d9a69c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5c3195d9a69c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5c3195a3f084: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x5c3195a3ed9a: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x5c3195a461dd: winter_verifier::verify (verifier/src/lib.rs:96:32)",
"0x5c3195a213e2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195a213e2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195a213e2: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5c3195bdadf5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5c3195bdadf5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5c3195bdadf5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5c3195a3424b: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x5c3195b2de23: winter_prover::Prover::generate_proof (prover/src/lib.rs:423:33)",
"0x5c3195e039e9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195e039e9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195e039e9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195e039e9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5c3195e03e2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195e03df7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195e03fce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195e064c9: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x5c3195b95b9d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b95b9d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b95b9d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b95b9d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195bec2aa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195be9394: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c17b5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195b765c3: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x5c3195aa6245: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x5c3195aa1247: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:176:13)",
"0x5c3195b29b72: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:371:13)",
"0x5c3195b1badf: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:41:22)",
"0x5c3195a66b39: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:36)",
"0x5c3195b93ecd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b93ecd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b93ecd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b93ecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195bed09a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195be8544: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c1773a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195b7650b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x5c3195a4f6df: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x5c3195a42a15: winter_verifier::perform_verification (verifier/src/lib.rs:311:25)",
"0x5c3195ad6a6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c3195ba4875: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195ba4875: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195ba4875: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195aadaaf: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x5c3195b48b91: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x5c3195b3030a: winter_prover::Prover::generate_proof (prover/src/lib.rs:608:34)",
"0x5c3195a16a3f: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:230:34)",
"0x5c3195c1f026: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5c3195c453a7: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5c3195b2c978: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:517:13)",
"0x5c3195b4807b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5c3195b4528d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5c3195cb92ea: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5c3195c94009: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5c3195bfda75: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5c3195a74598: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5c3195c7bd94: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x5c3195c8795d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x5c3195ad30bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c3195b846af: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b846af: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b846af: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b846af: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195bd9705: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5c3195bea50a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c16b3d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195a3d891: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x5c3195ad406c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c3195b54f38: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b54f38: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b54f38: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5c3195bdb7c5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5c3195bdb7c5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5c3195bdb7c5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5c3195a218e2: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x5c3195a21750: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5c3195a7ea4c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x5c3195a7d547: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x5c3195b7d3a7: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x5c3195b76d54: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x5c3195ad044a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c3195b9e4f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b9e4f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b9e4f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b9e4f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195bec9da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195be9bc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c16eba: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195b3dfcf: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:644:36)",
"0x5c31959eed82: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5c31959eed82: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c31959eed82: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c31959eed82: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c31959eed82: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c31959eed82: std::io::buffered::bufwriter::BufWriter<W>::with_capacity (io/buffered/bufwriter.rs:115:33)",
"0x5c31959eed82: std::io::buffered::linewriter::LineWriter<W>::with_capacity (io/buffered/linewriter.rs:109:29)",
"0x5c31959eed82: std::io::buffered::linewriter::LineWriter<W>::new (io/buffered/linewriter.rs:89:9)",
"0x5c31959eed82: std::io::stdio::stdout::{{closure}} (src/io/stdio.rs:618:62)",
"0x5c31959eed82: std::sync::once_lock::OnceLock<T>::get_or_init::{{closure}} (src/sync/once_lock.rs:250:50)",
"0x5c31959eed82: std::sync::once_lock::OnceLock<T>::initialize::{{closure}} (src/sync/once_lock.rs:376:19)",
"0x5c31959eed82: std::sync::once::Once::call_once_force::{{closure}} (src/sync/once.rs:208:40)",
"0x5c31959eed82: std::sys_common::once::futex::Once::call (sys_common/once/futex.rs:124:21)",
"0x5c31959edeca: std::sync::once::Once::call_once_force (src/sync/once.rs:208:9)",
"0x5c31959edeca: std::sync::once_lock::OnceLock<T>::initialize (src/sync/once_lock.rs:375:9)",
"0x5c3195e581c5: std::sync::once_lock::OnceLock<T>::get_or_try_init (src/sync/once_lock.rs:298:9)",
"0x5c3195e581c5: std::sync::once_lock::OnceLock<T>::get_or_init (src/sync/once_lock.rs:250:15)",
"0x5c3195e581c5: std::io::stdio::stdout (src/io/stdio.rs:618:14)",
"0x5c3195e581c5: std::io::stdio::print_to (src/io/stdio.rs:1020:21)",
"0x5c3195e581c5: std::io::stdio::_print (src/io/stdio.rs:1097:5)",
"0x5c3195aa003a: winterfell::main (winterfell/src/main.rs:36:5)",
"0x5c3195d249e9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5c3195d249e9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5c3195d249e9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5c3195b450af: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x5c3195a23a26: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5c3195b77714: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5c3195aef8d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5c3195b0c318: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5c3195bcd12d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5c3195a36af2: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x5c3195c62ac5: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5c3195b4672b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5c3195b45f9d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5c3195cb969a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5c3195c941e9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5c3195bfe15b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5c3195a746eb: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5c3195b754ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x5c3195a53cb7: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x5c3195b9ed2f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b9ed2f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b9ed2f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b9ed2f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195bec56d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195be9125: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c1798d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195c86d29: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x5c3195ad13fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c3195b90edf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b90edf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b90edf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b90edf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195bed88d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195be90c5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c169dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195b3e08b: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:648:34)",
"0x5c3195acadec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c3195ba4b95: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195ba4b95: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195ba4b95: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b0ea57: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5c3195a69d9a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x5c3195b3e6ee: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:669:26)",
"0x5c3195b2d511: winter_prover::Prover::generate_proof (prover/src/lib.rs:274:13)",
"0x5c3195b6e2d4: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x5c3195aec281: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5c3195b0ca38: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5c3195bcd33e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5c3195b2b350: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:543:13)",
"0x5c3195a41fc9: winter_verifier::perform_verification (verifier/src/lib.rs:266:61)",
"0x5c3195d1ff36: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195d1ff36: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195d1ff36: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195a7bdac: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x5c3195b48d4a: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x5c3195ab03c0: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x5c3195ab50bd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x5c3195b2b3d4: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:541:17)",
"0x5c3195ab0499: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x5c3195b3019c: winter_prover::Prover::generate_proof (prover/src/lib.rs:600:25)",
"0x5c3195b8859f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b8859f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b8859f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b8859f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195bd80d6: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5c3195beabc5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c1830d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195a463a8: winter_verifier::verify (verifier/src/lib.rs:102:24)",
"0x5c3195aa9ec7: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x5c3195abb003: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x5c3195abc210: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x5c3195ba3a22: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195ba3a22: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195ba3a22: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5c3195ba20e6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5c3195a476db: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x5c3195b4780b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5c3195b45a1d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5c3195cb9c2a: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5c3195cb255d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x5c3195cb8a25: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x5c3195cab86e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x5c3195ace23c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c3195b88bd9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b88bd9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b88bd9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b88bd9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195bed00a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195beac44: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c17c2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195a364b2: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x5c3195ac1e35: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x5c3195ac5040: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x5c3195b77104: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x5c3195c8fde9: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x5c3195a421ac: winter_verifier::perform_verification (verifier/src/lib.rs:275:24)",
"0x5c3195acf49c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c3195b8bb4f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b8bb4f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b8bb4f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b8bb4f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195bd703e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5c3195beb035: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c180ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195aa074e: winterfell::main (winterfell/src/main.rs:65:26)",
"0x5c3195aa0e36: <winterfell::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (winterfell/src/main.rs:133:9)",
"0x5c3195a46330: winter_verifier::verify (verifier/src/lib.rs:98:38)",
"0x5c3195acb5cc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c3195b8eaff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b8eaff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b8eaff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b8eaff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195bec4ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195be9337: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c17e8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195a9fedf: winterfell::main (winterfell/src/main.rs:28:26)",
"0x5c3195aa8e2f: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x5c3195c78338: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x5c3195a3aadb: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x5c3195b53485: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5c3195b42efa: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x5c3195a79b8e: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x5c3195b70d0d: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x5c3195b5a5c3: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x5c3195a7d356: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x5c3195a75c84: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195a75c84: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195a75c84: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5c3195bd9c56: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5c3195ac1b3e: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x5c3195c98c7d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5c3195c9b613: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5c3195aac237: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5c3195a6458a: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:155:31)",
"0x5c3195a67e25: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:128:17)",
"0x5c3195c62c6e: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5c3195ad7ccc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c3195ba4c35: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195ba4c35: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195ba4c35: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b2d88e: winter_prover::Prover::generate_proof (prover/src/lib.rs:307:44)",
"0x5c3195b9b40d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b9b40d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b9b40d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b9b40d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195bece4a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195bea6e4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c16d1a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195b70ba1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x5c3195a75785: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5c3195a7ecc7: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x5c3195a79f66: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x5c3195b8aac3: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b8aac3: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b8aac3: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b8aac3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195becbd4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195be929a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c17654: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195a9fd51: winterfell::main (winterfell/src/main.rs:22:32)",
"0x5c3195a34314: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x5c3195b69bbd: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x5c3195b0b041: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5c3195b0c018: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5c3195bca8be: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5c3195b1de9d: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:175:17)",
"0x5c3195b1c34f: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:55:17)",
"0x5c3195a36440: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x5c3195c1edb6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5c3195a1eb11: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5c3195e032db: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5c3195e02fb1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5c3195dfc2ab: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5c3195df5e9d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5c3195e0142b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5c3195e051e3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5c3195aae2b7: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x5c3195af96d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5c3195b0c7c8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5c3195bcb67e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5c3195ac5216: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x5c3195ae4c01: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5c3195b0c408: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5c3195bcec54: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5c3195b31285: winter_prover::Prover::generate_proof (prover/src/lib.rs:418:17)",
"0x5c3195aa89fe: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x5c3195b69b6c: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x5c3195c87b73: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x5c3195a418e5: winter_verifier::perform_verification (verifier/src/lib.rs:185:13)",
"0x5c3195b30e8b: winter_prover::Prover::generate_proof (prover/src/lib.rs:450:13)",
"0x5c3195a218f5: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x5c3195a67973: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:33)",
"0x5c3195c77b89: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x5c3195b2f6b8: winter_prover::Prover::generate_proof (prover/src/lib.rs:558:13)",
"0x5c3195b30e70: winter_prover::Prover::generate_proof (prover/src/lib.rs:449:13)",
"0x5c3195b5a347: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x5c3195a166e8: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:227:28)",
"0x5c3195e3cea0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5c3195e3d0d9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5c3195e3d3d2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5c3195e3e159: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x5c3195df401a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x5c3195c86d9d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x5c3195a42c03: winter_verifier::perform_verification (verifier/src/lib.rs:323:5)",
"0x5c3195b1118f: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x5c3195ab193d: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x5c3195ab6bc6: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x5c3195aa121b: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:175:9)",
"0x5c3195b7f518: winter_prover::trace::Trace::validate (src/trace/mod.rs:123:26)",
"0x5c3195acd52a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c3195b85949: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b85949: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b85949: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b85949: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195bed96a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195be9874: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c17b8a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195a4a40e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x5c3195b8d58d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b8d58d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b8d58d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b8d58d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195becd7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195be8d34: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c1730a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195b76733: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x5c3195b9dd1f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b9dd1f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b9dd1f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b9dd1f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195bec61d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195be84f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c1734d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195a377f7: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x5c3195ab4c29: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x5c3195a4f21f: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x5c3195c77b9b: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x5c3195b4509a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x5c3195e3d108: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x5c3195e3d4ca: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x5c3195e3d4ca: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x5c3195e3d26e: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x5c3195e3d26e: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x5c3195e3d35d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x5c3195ad9edc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c3195b9c25f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b9c25f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b9c25f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b9c25f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195bd918b: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5c3195be98d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c1756d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195b2d7f7: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:36)",
"0x5c3195c29d85: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x5c3195c29e16: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5c3195a42edf: winter_verifier::perform_verification (verifier/src/lib.rs:228:13)",
"0x5c3195c0a2cb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:64:9)",
"0x5c3195a42fcc: winter_verifier::perform_verification (verifier/src/lib.rs:225:43)",
"0x5c3195ac1d26: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x5c3195ac52b9: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x5c3195b9f9dd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b9f9dd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b9f9dd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b9f9dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195becc7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195be9ff4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c1786a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195b7667b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x5c3195a6c30f: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x5c3195a6b506: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x5c3195b3facc: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:701:36)",
"0x5c3195b2e4d0: winter_prover::Prover::generate_proof (prover/src/lib.rs:452:35)",
"0x5c3195a6e081: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x5c3195a6ce86: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5c3195b3e12f: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:655:31)",
"0x5c3195acea1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c3195b867f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b867f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b867f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b867f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195bec34a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195be83a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c1813a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195b3df12: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:640:42)",
"0x5c3195acb32c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c3195a23aea: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195a23aea: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195a23aea: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5c3195bd9ca6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5c3195aba508: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x5c3195a34238: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x5c3195c75472: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x5c3195ab199f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x5c3195a3124c: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x5c3195b01c21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5c3195b0bdd8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5c3195bcd6ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5c3195a478ec: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x5c3195b48db3: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x5c3195b70e73: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x5c3195b76ad4: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x5c3195aac7dc: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x5c3195a424f7: winter_verifier::perform_verification (verifier/src/lib.rs:298:27)",
"0x5c3195a50325: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x5c3195b8aecf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b8aecf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b8aecf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b8aecf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195bedd5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195beada7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c17edd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195aa00e6: winterfell::main (winterfell/src/main.rs:38:27)",
"0x5c3195ab88d8: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x5c3195aa1330: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:177:13)",
"0x5c3195a18036: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5c3195c08c48: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:300:57)",
"0x5c3195b0ba21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5c3195b0be08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5c3195bce42e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5c3195b77f07: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x5c3195a4703b: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:102:85)",
"0x5c3195c23a6e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5c3195a645e4: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:156:33)",
"0x5c3195ba43c5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195ba43c5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195ba43c5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b2d8cd: winter_prover::Prover::generate_proof (prover/src/lib.rs:308:37)",
"0x5c3195ace77c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c3195b92bf2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b92bf2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b92bf2: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b92bf2: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5c3195bedb7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195be8c35: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c168cd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195b4ca6a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x5c3195ac5e4c: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x5c3195b76f37: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x5c3195a4f3b7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x5c3195b2475a: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x5c3195c08852: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:503:32)",
"0x5c3195c25dc6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5c3195c4393a: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5c3195c0de27: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5c3195c18a22: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5c3195b90b04: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b90b04: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b90b04: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b90b04: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5c3195bedeaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195be9d64: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c180da: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195a79e8d: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x5c3195c054e2: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x5c3195a3ec98: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x5c3195d190b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5c3195d1bd69: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5c3195d23322: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5c3195a7765f: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x5c3195a47845: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x5c3195a694bd: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x5c3195b3feb8: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:716:26)",
"0x5c3195b2e931: winter_prover::Prover::generate_proof (prover/src/lib.rs:482:37)",
"0x5c3195e3c9ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c3195e3e04c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195e3e04c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195e3e04c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5c3195e3bc7c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5c3195e3bc7c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5c3195e3bc7c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5c3195e37ece: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x5c3195a3f29f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x5c3195abadf3: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x5c3195aada4c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x5c3195a22461: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x5c3195ab903f: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x5c3195b092a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5c3195b0ca98: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5c3195bcc91b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5c3195aae0fa: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x5c3195ab6d52: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x5c3195c09f8c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:40:30)",
"0x5c3195b8818f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b8818f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b8818f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b8818f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195becccd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195be9cd7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c1750d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195c0caa0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x5c3195ada17c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c3195b9ceef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b9ceef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b9ceef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b9ceef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195bed27d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195be8c65: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195bf99bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195b2d033: winter_prover::Prover::generate_proof (prover/src/lib.rs:248:41)",
"0x5c3195e0348b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5c3195e02e51: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5c3195dfc54b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5c3195df6c41: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5c3195df72c7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5c3195e0695b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5c3195a204f5: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x5c3195b4d55c: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x5c3195bfb129: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x5c3195b4cb36: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x5c3195b50296: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x5c3195b29bcf: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:369:9)",
"0x5c3195a7f882: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x5c3195c8778d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x5c3195b7f1b0: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:140:51)",
"0x5c3195c20476: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5c3195a1efc1: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5c3195ac13b5: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x5c3195a22f63: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x5c3195b77c15: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5c3195ad89ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c3195ba4a55: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195ba4a55: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195ba4a55: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b2d877: winter_prover::Prover::generate_proof (prover/src/lib.rs:306:39)",
"0x5c3195b1dd5a: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:170:36)",
"0x5c3195aad259: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x5c3195aae739: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x5c3195ab19b6: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x5c3195a7a31c: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x5c3195b2b1b5: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:547:13)",
"0x5c3195b1b028: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:83:31)",
"0x5c3195c217af: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5c3195b6982f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x5c3195a3edce: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x5c3195a20388: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x5c3195e010f0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5c3195df5669: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5c3195df4e51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5c3195df4950: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x5c3195c875ed: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x5c3195ab4e24: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x5c3195a502d7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x5c3195abc222: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x5c3195e0363b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5c3195e02f01: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5c3195dfc38b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5c3195df5e3d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5c3195e01748: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5c3195e050a7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5c3195a42636: winter_verifier::perform_verification (verifier/src/lib.rs:305:9)",
"0x5c3195c29d72: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x5c3195ad430c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c3195b87b59: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b87b59: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b87b59: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b87b59: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195bec6ba: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195bea9a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c16eea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195b2ee8c: winter_prover::Prover::generate_proof (prover/src/lib.rs:505:52)",
"0x5c3195b29012: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b29012: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b29012: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5c3195bdbb05: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5c3195bdbb05: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5c3195bdbb05: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5c3195a29b95: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x5c3195b8969a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b8969a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b8969a: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b8969a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5c3195bec4cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195beaa1a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c74f4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195aae243: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x5c3195a23126: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x5c3195a4f6fe: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x5c3195b698a2: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x5c3195b30e30: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:13)",
"0x5c3195b46a8b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5c3195b45e3d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5c3195cb978a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5c3195c942a9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5c3195bfcbc8: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5c3195bfb195: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x5c3195ad1e6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c3195b8cb29: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b8cb29: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b8cb29: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b8cb29: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195beccaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195beb084: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c1719a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195aba24b: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x5c3195a371bf: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x5c3195a34ac4: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x5c3195a38f9d: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x5c3195a342c5: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x5c3195acbd9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c3195b94e5f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b94e5f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b94e5f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b94e5f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195bec3cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195be9e87: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c16e8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195b1bbcd: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:51:26)",
"0x5c3195ab91b6: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x5c3195a372ce: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x5c3195ab4c0e: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x5c3195a47f56: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x5c3195c24eb6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5c3195c49fbd: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5c3195aee511: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5c3195b0ca08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5c3195bca40e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5c3195ab1c69: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x5c3195af07a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5c3195b0c108: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5c3195bccdae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5c3195a431eb: winter_verifier::perform_verification (verifier/src/lib.rs:184:9)",
"0x5c3195b6f1ce: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x5c3195a46038: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:216:32)",
"0x5c3195c25e5f: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5c3195b903bf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b903bf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b903bf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b903bf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195bed6cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195beae45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c1752d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195a4f4ab: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x5c3195b8f95f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b8f95f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b8f95f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b8f95f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195beda4d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195be9e15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c17f5d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195c8d7af: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x5c3195c0cb0a: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x5c3195c237a8: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5c3195aa8114: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x5c3195b48dca: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x5c3195b06b21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5c3195b0c498: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5c3195bce7ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5c3195abfdb7: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x5c3195b4cbae: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x5c3195ba49b5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195ba49b5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195ba49b5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b2d909: winter_prover::Prover::generate_proof (prover/src/lib.rs:309:32)",
"0x5c3195abc2d3: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x5c3195ab1afb: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x5c3195a77999: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x5c3195b95e94: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b95e94: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b95e94: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b95e94: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5c3195bec5da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195beaec4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c17c5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195a7d46e: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x5c3195b5a4ab: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x5c3195b30217: winter_prover::Prover::generate_proof (prover/src/lib.rs:603:29)",
"0x5c3195b8b4ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b8b4ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b8b4ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b8b4ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195bedd3d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195be85f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c1821d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195a53ff2: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x5c3195a6c9bd: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x5c3195a68c90: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x5c3195a6b614: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x5c3195aba2f2: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x5c3195ac1b7f: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x5c3195a36eae: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x5c3195a3aa1c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x5c3195c774f9: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x5c3195a7537b: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x5c3195ad820c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c3195b91e49: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b91e49: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b91e49: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b91e49: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195bec93a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195be97f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c1701a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195a41c5f: winter_verifier::perform_verification (verifier/src/lib.rs:218:40)",
"0x5c3195b69921: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x5c3195a7beb4: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x5c3195b83997: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x5c3195b76970: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x5c3195b76370: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x5c3195b9605d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b9605d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b9605d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b9605d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195becdda: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195be9de4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c171ca: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195b767eb: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x5c3195a678b2: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:28)",
"0x5c3195a69e5c: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x5c3195b7e131: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x5c3195b52853: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x5c3195c05832: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x5c3195a53eb1: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x5c3195b94a3f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b94a3f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b94a3f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b94a3f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195bedb1d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195be8bb7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c169bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195a54df7: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x5c3195a2232d: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x5c3195b85f8f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b85f8f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b85f8f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b85f8f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195bed06d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195be8f75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c1679d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195a363a8: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x5c3195b97acf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b97acf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b97acf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b97acf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195beca5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195be9c45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c17e4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195a161cf: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:283:9)",
"0x5c3195b85539: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b85539: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b85539: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b85539: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195becb7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195beab14: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c1844a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195b2d4ea: winter_prover::Prover::generate_proof (prover/src/lib.rs:272:43)",
"0x5c3195a77517: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x5c3195df3c69: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5c3195df0c1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c3195deddb6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195deddb6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195deddb6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195ab4b68: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x5c3195a6a9d6: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x5c3195a69e23: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x5c3195b883a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b883a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b883a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b883a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195bed48a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195be8fc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c17a3a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195b2cd8f: winter_prover::Prover::generate_proof (prover/src/lib.rs:214:39)",
"0x5c3195a4a41d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x5c3195b83b50: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x5c3195ad2b7c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c3195b8c19f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b8c19f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b8c19f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b8c19f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195bed54d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195bea355: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c17ddd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195a681b1: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x5c3195a69572: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x5c3195b6f1b0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x5c3195a75428: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x5c3195b2d132: winter_prover::Prover::generate_proof (prover/src/lib.rs:262:22)",
"0x5c3195b9f36f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b9f36f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b9f36f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b9f36f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195bec89d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195bea895: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c17bdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195b7efe2: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:140:32)",
"0x5c3195c092f8: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:651:17)",
"0x5c3195df8f3e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5c3195dfa400: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5c3195df9bf8: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5c3195ba3328: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195ba3328: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195ba3328: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5c3195bdb205: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5c3195bdb205: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5c3195bdb205: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5c3195b2eea3: winter_prover::Prover::generate_proof (prover/src/lib.rs:510:39)",
"0x5c3195e0312b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5c3195e03061: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5c3195dfc46b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5c3195df6b71: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5c3195df7307: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5c3195e0690b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5c3195a38d08: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x5c3195b7e55d: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:243:25)",
"0x5c3195aa0d94: winterfell::build_do_work_trace (winterfell/src/main.rs:91:5)",
"0x5c3195b4060b: winterfell::main::{{closure}} (winterfell/src/main.rs:30:23)",
"0x5c3195b77e5f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x5c3195c077a8: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:216:31)",
"0x5c3195c25d36: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5c3195c43bd0: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5c3195c11f66: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5c3195c198f6: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5c3195b8e4cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b8e4cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b8e4cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b8e4cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195bed0dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195bea3d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c16a6d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195b2ccd2: winter_prover::Prover::generate_proof (prover/src/lib.rs:210:38)",
"0x5c3195a7707a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x5c3195ca6f7b: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5c3195cb11a9: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5c3195cab416: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5c3195a427a8: winter_verifier::perform_verification (verifier/src/lib.rs:306:42)",
"0x5c3195c86e04: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x5c3195ad6fac: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5c3195b8c8df: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b8c8df: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b8c8df: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b8c8df: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195bd7b4e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5c3195bea415: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c182ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195a494f7: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x5c3195b5a0d2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x5c3195ae9611: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5c3195b0c288: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5c3195bcac0b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5c3195a7a3c9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x5c3195df904e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5c3195dfa9ec: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5c3195df955a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5c3195a3e41f: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x5c3195a3ca15: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x5c3195b9aabf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5c3195b9aabf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5c3195b9aabf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5c3195b9aabf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5c3195bede7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5c3195bea925: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5c3195c175dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5c3195a16788: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:228:23)"
]
}