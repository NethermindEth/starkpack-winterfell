{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell",
"pid": 66762,
"tg": 23695156,
"te": 26670800,
"pps": [
{
"tb": 131072,
"tbk": 1,
"tl": 26531891,
"mb": 131072,
"mbk": 1,
"gb": 131072,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9
]
},
{
"tb": 96,
"tbk": 1,
"tl": 31,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
15,
16
]
},
{
"tb": 768,
"tbk": 1,
"tl": 1838,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
18,
19,
20,
21,
22,
23,
24
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1772,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
26,
27,
24,
28
]
},
{
"tb": 160,
"tbk": 1,
"tl": 6307,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
29,
30,
31,
32,
33,
34,
35,
36,
37
]
},
{
"tb": 72,
"tbk": 1,
"tl": 12246,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
38,
39,
24,
28
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 8322,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
42,
43,
44,
45,
46
]
},
{
"tb": 480,
"tbk": 4,
"tl": 5992,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
47,
48,
49,
50,
51
]
},
{
"tb": 299008,
"tbk": 3,
"tl": 38158,
"mb": 294912,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
52,
53,
54
]
},
{
"tb": 96,
"tbk": 1,
"tl": 6018,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
55,
56
]
},
{
"tb": 16,
"tbk": 1,
"tl": 74,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 94208,
"tbk": 3,
"tl": 1180,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69
]
},
{
"tb": 64,
"tbk": 1,
"tl": 186,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
70,
71,
72,
73,
74
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 19919557,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
75,
76,
77
]
},
{
"tb": 2944,
"tbk": 3,
"tl": 16348,
"mb": 2944,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
78,
79,
80,
81,
82,
83,
84,
85
]
},
{
"tb": 24,
"tbk": 1,
"tl": 23631153,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
86,
87,
88,
89,
90,
91,
92,
93,
94
]
},
{
"tb": 24,
"tbk": 1,
"tl": 804403,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
95,
96,
97,
98,
99,
100,
101,
102,
103,
104
]
},
{
"tb": 2000,
"tbk": 10,
"tl": 196,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
105,
106,
107,
108,
109,
110,
111
]
},
{
"tb": 89088,
"tbk": 349,
"tl": 183679,
"mb": 16384,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
78,
112,
113,
114,
115,
116,
117,
118,
119
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 1863026,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
120
]
},
{
"tb": 3160,
"tbk": 16,
"tl": 74,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
105,
121,
122,
123,
124,
125,
126,
127,
128,
22,
23
]
},
{
"tb": 736,
"tbk": 3,
"tl": 2928,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
105,
121,
122,
123,
124,
129,
130,
131,
132,
133,
134
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 85,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
135,
136,
137,
138,
139,
140,
141,
142,
24
]
},
{
"tb": 524288,
"tbk": 2,
"tl": 3375214,
"mb": 524288,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
135,
136,
137,
143,
144,
145,
146,
147,
148
]
},
{
"tb": 144,
"tbk": 1,
"tl": 48596,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
149,
150,
151,
152,
153,
154,
155,
156,
157,
24
]
},
{
"tb": 64,
"tbk": 1,
"tl": 700409,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
70,
71,
72,
158,
159
]
},
{
"tb": 2880,
"tbk": 10,
"tl": 3815,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
105,
160,
161,
162,
163,
164,
165
]
},
{
"tb": 8,
"tbk": 1,
"tl": 953,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
105,
121,
166,
167,
168,
169,
170,
171,
172,
173
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2356,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
18,
19,
20,
174,
175,
176,
177
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2386,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
178,
179,
180,
181,
182,
183,
184,
185,
186,
187
]
},
{
"tb": 2184,
"tbk": 3,
"tl": 15930,
"mb": 2184,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
18,
19,
20,
174,
188,
84,
85
]
},
{
"tb": 11776,
"tbk": 3,
"tl": 1168,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
189
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 2394,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
78,
190,
191,
192,
193,
194,
195,
196,
197
]
},
{
"tb": 1088,
"tbk": 2,
"tl": 34,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
198,
199,
200,
201,
202,
203
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
204,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 48,
"tbk": 1,
"tl": 26539610,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
214,
215,
216,
217,
218,
219,
220,
24
]
},
{
"tb": 1048608,
"tbk": 3,
"tl": 20053,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
221,
222,
223
]
},
{
"tb": 64,
"tbk": 1,
"tl": 106,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
135,
136,
137,
143,
144,
145,
224,
225,
226
]
},
{
"tb": 896,
"tbk": 6,
"tl": 8524,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
70,
71,
72,
227,
228
]
},
{
"tb": 512,
"tbk": 1,
"tl": 7282,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
229,
230,
231,
232
]
},
{
"tb": 12800,
"tbk": 1,
"tl": 39,
"mb": 12800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
229,
233,
234,
232
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3205,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
235,
236,
237,
238,
239,
240,
241,
242,
243
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1166,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
105,
121,
122,
123,
124,
129,
130,
131,
244,
134,
245
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1688029,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
178,
246,
247,
248,
249,
250,
251,
252,
253
]
},
{
"tb": 32,
"tbk": 1,
"tl": 3282,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
135,
136,
137,
143,
144,
145,
254,
232,
255
]
},
{
"tb": 2097152,
"tbk": 4,
"tl": 193262,
"mb": 2097152,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
135,
136,
137,
138,
139,
140,
256,
182,
183,
184,
257
]
},
{
"tb": 32,
"tbk": 1,
"tl": 19,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
229,
258,
234,
232
]
},
{
"tb": 11680,
"tbk": 32,
"tl": 72974,
"mb": 11680,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
78,
259,
260,
261,
262,
263,
175,
176
]
},
{
"tb": 384,
"tbk": 1,
"tl": 755702,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
264,
265,
266,
267,
268,
269,
270,
271,
272
]
},
{
"tb": 48,
"tbk": 2,
"tl": 106,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
273,
274,
275,
276,
277,
278
]
},
{
"tb": 480,
"tbk": 4,
"tl": 205,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
47,
48,
49,
279,
280
]
},
{
"tb": 512,
"tbk": 1,
"tl": 14,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
281,
282,
283
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
204,
205,
206,
207,
208,
209,
210,
211,
212,
284
]
},
{
"tb": 64,
"tbk": 1,
"tl": 97,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
285
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
286,
287,
288,
289,
290,
291,
292,
293,
294,
232
]
},
{
"tb": 32,
"tbk": 1,
"tl": 8431,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
78,
259,
260,
261,
262,
295,
296,
232
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1160,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
135,
136,
137,
143,
144,
145,
297,
134,
245
]
},
{
"tb": 4656,
"tbk": 30,
"tl": 631,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
105,
121,
122,
123,
124,
125,
126,
127,
298,
299,
300
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
301,
302,
284,
255
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 1461872,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
78,
259,
260,
261,
303,
304,
305,
306
]
},
{
"tb": 32,
"tbk": 1,
"tl": 61,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
307,
308,
309,
310,
311,
312,
313,
314,
315
]
},
{
"tb": 512,
"tbk": 1,
"tl": 7490,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
135,
136,
137,
143,
144,
145,
316,
317,
318
]
},
{
"tb": 80712,
"tbk": 177,
"tl": 44386,
"mb": 22800,
"mbk": 50,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
319,
320,
321,
322,
323,
324
]
},
{
"tb": 128,
"tbk": 1,
"tl": 26532086,
"mb": 128,
"mbk": 1,
"gb": 128,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
325,
326,
327,
328,
329,
330,
331,
332
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 381231,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
75,
76,
333
]
},
{
"tb": 43442,
"tbk": 29,
"tl": 41745,
"mb": 21760,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
42,
43,
44,
45,
334
]
},
{
"tb": 15872,
"tbk": 91,
"tl": 474603,
"mb": 15872,
"mbk": 91,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
78,
259,
260,
261,
262,
263,
188,
84
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 544367,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
335,
336,
337
]
},
{
"tb": 480,
"tbk": 4,
"tl": 194,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
47,
48,
49,
279,
22
]
},
{
"tb": 24,
"tbk": 1,
"tl": 116,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
338,
339,
225,
226,
61,
62
]
},
{
"tb": 5376,
"tbk": 28,
"tl": 10887,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
105,
340,
341,
342,
343,
344,
345
]
},
{
"tb": 168,
"tbk": 2,
"tl": 1591539,
"mb": 168,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
178,
346,
347,
348,
349,
350,
351,
352,
353
]
},
{
"tb": 32,
"tbk": 1,
"tl": 47900,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
105,
121,
122,
123,
124,
125,
126,
127,
354,
157,
24
]
},
{
"tb": 224,
"tbk": 1,
"tl": 6989,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
355,
356,
357,
358,
85
]
},
{
"tb": 16,
"tbk": 1,
"tl": 804400,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
135,
136,
137,
138,
139,
140,
359,
103,
104
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 168234,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
360,
361,
362
]
},
{
"tb": 2280,
"tbk": 5,
"tl": 2074,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
319,
320,
321,
363,
364,
365
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 61009,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
135,
136,
137,
138,
139,
140,
141,
366,
27
]
},
{
"tb": 128,
"tbk": 1,
"tl": 337,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
367,
368,
369,
370,
371
]
},
{
"tb": 192,
"tbk": 1,
"tl": 6320,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
372,
373,
374,
375,
62
]
},
{
"tb": 2097152,
"tbk": 32768,
"tl": 24100,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
135,
136,
137,
138,
139,
140,
376,
377,
378
]
},
{
"tb": 204800,
"tbk": 1,
"tl": 4965,
"mb": 204800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
229,
379,
380,
176
]
},
{
"tb": 24,
"tbk": 1,
"tl": 159,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
178,
381,
382,
383,
384,
385,
386,
387,
388
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 2961617,
"mb": 4194304,
"mbk": 1,
"gb": 4194304,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
78,
259,
260,
261,
303,
304,
305,
389
]
},
{
"tb": 16,
"tbk": 1,
"tl": 114,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
57,
390,
59,
391,
392,
393
]
},
{
"tb": 192,
"tbk": 3,
"tl": 32860,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
394,
395
]
},
{
"tb": 1224,
"tbk": 2,
"tl": 20289246,
"mb": 1200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2751172,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
405,
406,
407,
408,
409,
410,
411,
412,
413
]
},
{
"tb": 615827,
"tbk": 7,
"tl": 8567,
"mb": 410054,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
414,
415,
416,
417,
418
]
},
{
"tb": 16,
"tbk": 1,
"tl": 26537596,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
419,
420,
421,
422,
423,
424,
425,
426
]
},
{
"tb": 838860800,
"tbk": 50,
"tl": 515147848,
"mb": 838860800,
"mbk": 50,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
427,
428,
429,
430,
431,
432,
433,
434
]
},
{
"tb": 128,
"tbk": 1,
"tl": 8423,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
78,
259,
260,
261,
262,
435,
296,
232
]
},
{
"tb": 34807,
"tbk": 12,
"tl": 834446,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
414,
415,
416,
417,
436
]
},
{
"tb": 32,
"tbk": 1,
"tl": 151,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
437,
438,
439,
440,
441,
442
]
},
{
"tb": 96,
"tbk": 1,
"tl": 11203,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
443,
444,
445,
446,
447
]
},
{
"tb": 12800,
"tbk": 1,
"tl": 6311,
"mb": 12800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
135,
136,
137,
138,
139,
140,
448,
449,
450
]
},
{
"tb": 65296,
"tbk": 1265,
"tl": 904871,
"mb": 13120,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
414,
451,
452,
453,
454,
455,
456
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 639348,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
457
]
},
{
"tb": 512,
"tbk": 1,
"tl": 28,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
458,
283,
62,
255
]
},
{
"tb": 5520,
"tbk": 10,
"tl": 3435,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
459,
460,
461,
462,
463,
464
]
},
{
"tb": 512,
"tbk": 1,
"tl": 16,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
281,
465,
16
]
},
{
"tb": 320,
"tbk": 2,
"tl": 1511368,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
466,
467,
468,
469,
470
]
},
{
"tb": 2880,
"tbk": 12,
"tl": 1743,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
70,
71,
72,
471,
472
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1406,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
473,
16,
62,
255
]
},
{
"tb": 96,
"tbk": 1,
"tl": 2382,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
474,
475,
476,
477,
187
]
},
{
"tb": 4656,
"tbk": 30,
"tl": 77,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
105,
121,
122,
123,
124,
125,
126,
127,
128,
371,
478
]
},
{
"tb": 11776,
"tbk": 3,
"tl": 18126,
"mb": 11776,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
479,
84,
85,
232
]
},
{
"tb": 512,
"tbk": 1,
"tl": 3055,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
480,
481,
62,
255
]
},
{
"tb": 104857600,
"tbk": 400,
"tl": 8971675843,
"mb": 104857600,
"mbk": 400,
"gb": 104857600,
"gbk": 400,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
135,
136,
137,
138,
139,
140,
482,
483,
484
]
},
{
"tb": 12832,
"tbk": 3,
"tl": 2841294,
"mb": 12832,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
485,
486,
487,
488,
489,
490,
491,
492
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1869134,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
47,
48,
49,
493,
24
]
},
{
"tb": 48,
"tbk": 2,
"tl": 1608770,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
95,
96,
97,
98,
99,
100,
101,
102,
494,
495
]
},
{
"tb": 24,
"tbk": 1,
"tl": 2897535,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
496,
497,
498,
499,
500,
24,
28
]
},
{
"tb": 6400,
"tbk": 1,
"tl": 3194,
"mb": 6400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
501,
502,
503,
504,
505,
506,
507
]
},
{
"tb": 2097152,
"tbk": 4,
"tl": 420558,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
508,
509,
510,
511,
512,
513,
514,
515
]
},
{
"tb": 24,
"tbk": 1,
"tl": 2897540,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
516,
517,
518,
519,
520,
24,
28
]
},
{
"tb": 838860800,
"tbk": 131072,
"tl": 640365,
"mb": 6400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
135,
136,
137,
143,
144,
145,
521,
522,
523
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 1487752,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
78,
259,
260,
261,
303,
524,
525,
526
]
},
{
"tb": 144,
"tbk": 1,
"tl": 16244,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
527,
528,
529,
530,
531,
532,
533,
24,
28
]
},
{
"tb": 96,
"tbk": 1,
"tl": 9,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
534,
232
]
},
{
"tb": 838860800,
"tbk": 1,
"tl": 4476617,
"mb": 838860800,
"mbk": 1,
"gb": 838860800,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
427,
428,
429,
430,
431,
535,
536,
537
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 9381,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
204,
538,
539,
540,
541,
542,
23,
24
]
},
{
"tb": 128,
"tbk": 1,
"tl": 8489,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
325,
326,
327,
328,
329,
330,
543,
544
]
},
{
"tb": 16,
"tbk": 1,
"tl": 26539687,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
10,
286,
287,
288,
289,
290,
291,
292,
293,
545,
546
]
},
{
"tb": 1572864,
"tbk": 3,
"tl": 146282,
"mb": 1572864,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
135,
136,
137,
138,
139,
140,
256,
182,
183,
184,
547
]
},
{
"tb": 256,
"tbk": 1,
"tl": 581,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
105,
121,
548,
549,
550,
551,
299,
552,
553
]
},
{
"tb": 11776,
"tbk": 92,
"tl": 75,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
554,
555,
556,
557,
558,
559,
560,
561
]
},
{
"tb": 16,
"tbk": 1,
"tl": 48585,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
135,
136,
137,
138,
139,
140,
359,
562,
153,
154,
155
]
},
{
"tb": 288,
"tbk": 1,
"tl": 12791,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
563,
564,
565,
566,
54
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 10092,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
42,
43,
44,
45,
567
]
},
{
"tb": 24,
"tbk": 1,
"tl": 2897525,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
86,
568,
569,
570,
571,
24,
28
]
},
{
"tb": 11776,
"tbk": 92,
"tl": 91,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
229,
572,
84,
85
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2190,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
78,
79,
80,
81,
82,
573,
280,
187
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2098,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
105,
121,
574,
575,
576,
577,
578,
579,
580,
581
]
},
{
"tb": 72,
"tbk": 3,
"tl": 69,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
582,
583,
584,
585,
586,
587,
588,
589,
590
]
},
{
"tb": 96,
"tbk": 1,
"tl": 6335,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
591,
592,
593,
594,
62
]
},
{
"tb": 11776,
"tbk": 3,
"tl": 2077,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
427,
428,
429,
430,
595,
478,
533,
24
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1251609,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
596,
597,
598,
599,
600,
601,
602,
603,
604
]
},
{
"tb": 8,
"tbk": 1,
"tl": 23593264,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
605,
606,
607,
608,
609,
610,
611,
612,
613
]
},
{
"tb": 598016,
"tbk": 3,
"tl": 52265,
"mb": 598016,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
78,
259,
260,
261,
303,
304,
305,
614
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
437,
615,
255
]
},
{
"tb": 64,
"tbk": 1,
"tl": 211118,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
501,
502,
503,
504,
616,
617,
618
]
},
{
"tb": 512,
"tbk": 1,
"tl": 9,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
619,
620,
621,
622,
623,
624,
625,
626
]
},
{
"tb": 204800,
"tbk": 1,
"tl": 11576,
"mb": 204800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
204,
538,
539,
540,
627,
447,
187,
39
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2109,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
105,
121,
628,
629,
630,
631,
632,
633,
634,
635
]
},
{
"tb": 16,
"tbk": 1,
"tl": 76,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
57,
390,
59,
60,
61,
62
]
},
{
"tb": 240,
"tbk": 2,
"tl": 804382,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
636,
104,
24,
28
]
},
{
"tb": 3160,
"tbk": 16,
"tl": 477,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
105,
121,
122,
123,
124,
125,
126,
127,
298,
299,
637
]
},
{
"tb": 1968,
"tbk": 2,
"tl": 55,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
638,
639,
640,
641,
642,
643
]
},
{
"tb": 16320,
"tbk": 8,
"tl": 700452,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
70,
71,
72,
644,
159
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2876,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
18,
19,
20,
174,
645,
646,
647
]
},
{
"tb": 11776,
"tbk": 3,
"tl": 388,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
648
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 26531436,
"mb": 524288,
"mbk": 1,
"gb": 524288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
649,
650
]
},
{
"tb": 838860800,
"tbk": 1,
"tl": 1267667,
"mb": 838860800,
"mbk": 1,
"gb": 838860800,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
135,
136,
137,
138,
139,
140,
651,
652,
653
]
},
{
"tb": 16,
"tbk": 1,
"tl": 112,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
57,
58,
59,
391,
392,
393
]
},
{
"tb": 96,
"tbk": 1,
"tl": 14,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
654,
27
]
},
{
"tb": 56,
"tbk": 1,
"tl": 2213,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
655,
177,
232,
255
]
},
{
"tb": 1440,
"tbk": 12,
"tl": 4819,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
656,
657,
658,
659,
660
]
},
{
"tb": 80,
"tbk": 1,
"tl": 26662068,
"mb": 80,
"mbk": 1,
"gb": 80,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
661,
662,
663,
664,
665,
666,
667,
668,
669
]
},
{
"tb": 72,
"tbk": 1,
"tl": 2936620,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
670,
671,
672,
673,
674,
675,
676,
677,
678
]
},
{
"tb": 64,
"tbk": 1,
"tl": 755807,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
135,
136,
137,
143,
144,
145,
224,
225,
679
]
},
{
"tb": 2184,
"tbk": 3,
"tl": 2713,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
18,
19,
20,
21,
371,
478,
533
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 1833,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
78,
79,
80,
81,
82,
573,
22,
23
]
},
{
"tb": 32,
"tbk": 1,
"tl": 59,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
307,
680,
681,
682,
683,
684,
685,
686,
687
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1251599,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
688,
689,
690,
691,
692,
693
]
},
{
"tb": 11040,
"tbk": 20,
"tl": 4281,
"mb": 3312,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
459,
460,
461,
694,
695,
696
]
},
{
"tb": 576,
"tbk": 2,
"tl": 46,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
697,
698,
699,
700,
701,
702,
703,
704,
705
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 421576,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
394,
706
]
},
{
"tb": 16,
"tbk": 1,
"tl": 26662189,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
707,
708,
709,
710,
711,
712,
713,
714
]
},
{
"tb": 1048608,
"tbk": 3,
"tl": 19896,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
281,
715,
222
]
},
{
"tb": 64,
"tbk": 1,
"tl": 223684,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
501,
502,
503,
504,
716,
717,
24
]
},
{
"tb": 2912,
"tbk": 28,
"tl": 430,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
105,
718,
719,
720,
721,
722,
723
]
},
{
"tb": 128,
"tbk": 2,
"tl": 1511099,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
724,
725,
726,
727,
728
]
},
{
"tb": 512,
"tbk": 1,
"tl": 22,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
135,
136,
137,
138,
139,
140,
729,
16,
62
]
},
{
"tb": 9600,
"tbk": 1,
"tl": 23630683,
"mb": 9600,
"mbk": 1,
"gb": 9600,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
178,
730,
731,
732,
733,
734,
735,
736,
737
]
},
{
"tb": 32,
"tbk": 1,
"tl": 131,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
135,
136,
137,
138,
139,
140,
738,
739,
740
]
},
{
"tb": 11776,
"tbk": 3,
"tl": 1718,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
427,
741,
742,
743,
744,
745,
746,
747,
748
]
},
{
"tb": 204800,
"tbk": 1,
"tl": 11390,
"mb": 204800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
204,
538,
539,
540,
749,
447,
187,
39
]
},
{
"tb": 104857600,
"tbk": 400,
"tl": 10662969110,
"mb": 104857600,
"mbk": 400,
"gb": 104857600,
"gbk": 400,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
750,
751,
752
]
},
{
"tb": 216,
"tbk": 1,
"tl": 26532100,
"mb": 216,
"mbk": 1,
"gb": 216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
753,
754,
755,
756,
757,
758,
759,
760,
761
]
},
{
"tb": 96,
"tbk": 1,
"tl": 1869142,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
762,
24
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 4391,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
229,
379,
763,
646
]
},
{
"tb": 96,
"tbk": 1,
"tl": 6984,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
764,
85
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1869127,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
47,
48,
49,
765,
24
]
},
{
"tb": 6400,
"tbk": 1,
"tl": 3199,
"mb": 6400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
501,
502,
503,
504,
766,
506,
507
]
},
{
"tb": 96,
"tbk": 1,
"tl": 12,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
767,
768,
717,
24,
28
]
},
{
"tb": 204800,
"tbk": 1,
"tl": 3166,
"mb": 204800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
229,
379,
769,
176
]
},
{
"tb": 3670016,
"tbk": 7,
"tl": 5542588,
"mb": 3670016,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
770,
771,
772
]
},
{
"tb": 96,
"tbk": 1,
"tl": 26539701,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
773,
774,
775,
776,
777,
778,
779,
780,
781
]
},
{
"tb": 12800,
"tbk": 2,
"tl": 434834,
"mb": 6400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
782
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 2405557,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
394,
783
]
},
{
"tb": 2392064,
"tbk": 3,
"tl": 57587,
"mb": 2392064,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
784,
785,
54
]
},
{
"tb": 1040,
"tbk": 10,
"tl": 271,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
105,
718,
719,
720,
786,
787,
788
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 4082222,
"mb": 4194304,
"mbk": 1,
"gb": 4194304,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
78,
259,
260,
261,
303,
789,
523,
790
]
},
{
"tb": 512,
"tbk": 1,
"tl": 48743,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
791,
792,
793,
794,
24
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
301,
302,
213,
220,
24,
28
]
},
{
"tb": 2480,
"tbk": 10,
"tl": 1071,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
105,
121,
795,
796,
797,
798,
799,
800,
801,
802
]
},
{
"tb": 16,
"tbk": 1,
"tl": 26531951,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
803,
804,
805,
806,
807,
808,
809,
810,
811
]
},
{
"tb": 32,
"tbk": 2,
"tl": 755957,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
812,
813,
814,
815,
816,
817,
818,
819
]
},
{
"tb": 32704,
"tbk": 9,
"tl": 49,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
70,
71,
72,
820,
821
]
},
{
"tb": 216,
"tbk": 1,
"tl": 8498,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
753,
822,
823,
824,
825,
826,
827,
828,
829
]
},
{
"tb": 64,
"tbk": 1,
"tl": 163,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
70,
71,
72,
830,
74
]
},
{
"tb": 11680,
"tbk": 32,
"tl": 89582,
"mb": 11680,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
78,
259,
260,
261,
262,
263,
645,
646
]
},
{
"tb": 256,
"tbk": 1,
"tl": 605,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
105,
121,
548,
549,
550,
551,
299,
637,
831
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4550,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
832,
833,
834,
835,
836,
837,
838,
839
]
},
{
"tb": 24,
"tbk": 1,
"tl": 755820,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
338,
339,
225,
679,
393,
24
]
},
{
"tb": 2400,
"tbk": 20,
"tl": 1917,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
47,
48,
49,
840,
299
]
},
{
"tb": 96,
"tbk": 1,
"tl": 27,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
841,
16
]
},
{
"tb": 204832,
"tbk": 33,
"tl": 74145,
"mb": 204800,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
135,
136,
137,
138,
139,
140,
256,
182,
183,
184,
185
]
},
{
"tb": 12801,
"tbk": 1,
"tl": 84,
"mb": 12801,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
204,
205,
206,
207,
842,
843,
844,
845,
846,
847
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2103,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
105,
121,
848,
849,
850,
851,
852,
853,
854,
855
]
},
{
"tb": 3160,
"tbk": 16,
"tl": 467,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
105,
121,
122,
123,
124,
125,
126,
127,
298,
299,
552
]
},
{
"tb": 11776,
"tbk": 3,
"tl": 449,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
281,
856,
857
]
},
{
"tb": 12800,
"tbk": 2,
"tl": 434823,
"mb": 6400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
858
]
},
{
"tb": 96,
"tbk": 1,
"tl": 38,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
767,
59,
391,
392,
393,
24
]
},
{
"tb": 1440,
"tbk": 12,
"tl": 2956,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
656,
657,
658,
659,
859
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 639390,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
860
]
},
{
"tb": 64,
"tbk": 1,
"tl": 6008,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
861,
862,
62,
255
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4614,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
863,
864,
865,
866,
176
]
},
{
"tb": 9600,
"tbk": 1,
"tl": 2751162,
"mb": 9600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
178,
179,
180,
181,
182,
183,
184,
867,
868,
869
]
},
{
"tb": 48,
"tbk": 1,
"tl": 211123,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
501,
502,
503,
504,
870,
617,
618
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 73139,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
394,
871
]
},
{
"tb": 24,
"tbk": 1,
"tl": 2897530,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
178,
872,
873,
874,
875,
24,
28
]
},
{
"tb": 2944,
"tbk": 3,
"tl": 2701,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
78,
79,
80,
81,
82,
573,
371,
478
]
},
{
"tb": 128,
"tbk": 1,
"tl": 755814,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
325,
876,
877,
878,
879,
880,
881,
882,
225,
679
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 47394,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
135,
136,
137,
143,
144,
145,
883,
23,
24
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3176,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
884,
885,
886,
887,
888,
889,
890,
891,
892
]
},
{
"tb": 32,
"tbk": 1,
"tl": 804377,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
47,
48,
49,
893,
894
]
},
{
"tb": 432,
"tbk": 3,
"tl": 1155,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
501,
502,
503,
504,
895,
857,
134
]
},
{
"tb": 512,
"tbk": 1,
"tl": 46,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
896,
897,
898,
899,
900,
901,
902,
903
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1411,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
904,
16,
62,
255
]
},
{
"tb": 48,
"tbk": 2,
"tl": 71,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
905,
274,
275,
276,
277,
278
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2195,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
18,
19,
20,
21,
280,
187,
39
]
},
{
"tb": 1440,
"tbk": 12,
"tl": 355,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
47,
48,
49,
279,
371
]
},
{
"tb": 1920,
"tbk": 10,
"tl": 3900,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
105,
340,
341,
342,
906,
907,
908
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 26546161,
"mb": 1024,
"mbk": 1,
"gb": 1024,
"gbk": 1,
"eb": 1024,
"ebk": 1,
"fs": [
909,
910,
911,
912,
913,
914,
915,
916,
917,
918,
919,
920,
921,
922,
923,
924,
925,
926,
927,
928,
929
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 1916909,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
930
]
},
{
"tb": 8,
"tbk": 1,
"tl": 19,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
105,
121,
931,
932,
933,
934,
935,
936,
937,
938
]
},
{
"tb": 299008,
"tbk": 3,
"tl": 33669,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
335,
939,
940
]
},
{
"tb": 256,
"tbk": 1,
"tl": 11,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
105,
121,
122,
123,
124,
129,
130,
131,
941,
533,
24
]
},
{
"tb": 24,
"tbk": 1,
"tl": 10,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
178,
179,
180,
181,
182,
183,
184,
185,
942,
220
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1482,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
943,
23
]
},
{
"tb": 104857600,
"tbk": 400,
"tl": 1093517508,
"mb": 104857600,
"mbk": 400,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
135,
136,
137,
138,
139,
140,
256,
182,
183,
184,
867
]
},
{
"tb": 72,
"tbk": 1,
"tl": 48831,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
178,
179,
180,
181,
182,
183,
184,
547,
157,
24
]
},
{
"tb": 2048,
"tbk": 1,
"tl": 84,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
394,
944
]
},
{
"tb": 16,
"tbk": 1,
"tl": 6,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
57,
390,
768,
717,
24,
28
]
},
{
"tb": 32,
"tbk": 1,
"tl": 421595,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
105,
121,
548,
549,
550,
945,
946,
104,
24
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1554,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
947,
27,
24,
28
]
},
{
"tb": 24,
"tbk": 2,
"tl": 2,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
204,
205,
206,
207,
208,
209,
210,
211,
948,
213
]
},
{
"tb": 8,
"tbk": 1,
"tl": 21187674,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
605,
949,
950,
951,
952,
953,
954,
955,
956
]
},
{
"tb": 1152,
"tbk": 4,
"tl": 142,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
957,
958,
959,
960,
961
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2528,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
178,
962,
963,
964,
965,
966,
967,
968,
969
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2118,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
105,
121,
970,
971,
972,
973,
974,
975,
976,
977
]
},
{
"tb": 512,
"tbk": 1,
"tl": 11,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
135,
136,
137,
138,
139,
140,
978,
533,
24
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1870,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
47,
48,
49,
979,
447
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 2874,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
78,
980,
981,
982,
983,
984,
985,
986,
987
]
},
{
"tb": 32,
"tbk": 1,
"tl": 79,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
204,
205,
206,
207,
842,
843,
844,
988,
846,
847
]
},
{
"tb": 96,
"tbk": 1,
"tl": 12,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
149,
989,
990,
991,
992,
993,
994,
995,
996
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 17156,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
394,
997
]
},
{
"tb": 64,
"tbk": 1,
"tl": 134,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
135,
136,
137,
138,
139,
140,
998,
739,
740
]
},
{
"tb": 6400,
"tbk": 1,
"tl": 121005,
"mb": 6400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
501,
502,
503,
504,
999,
1000,
1001
]
},
{
"tb": 80,
"tbk": 1,
"tl": 755534,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1002,
1003,
1004,
1005,
1006,
1007,
1008,
1009,
1010
]
},
{
"tb": 64,
"tbk": 1,
"tl": 6324,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
70,
71,
72,
830,
1011
]
},
{
"tb": 48,
"tbk": 2,
"tl": 1511377,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
95,
96,
97,
98,
99,
100,
101,
102,
1012,
470
]
},
{
"tb": 64,
"tbk": 1,
"tl": 6013,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
70,
71,
72,
158,
56
]
},
{
"tb": 64,
"tbk": 1,
"tl": 6329,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
70,
71,
72,
73,
1011
]
},
{
"tb": 512,
"tbk": 1,
"tl": 17,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
1013,
283,
62,
255
]
},
{
"tb": 16,
"tbk": 1,
"tl": 825619,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1014,
1015,
1016,
1017,
1018,
1019,
1020,
1021,
1022
]
},
{
"tb": 12800,
"tbk": 1,
"tl": 6361,
"mb": 12800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
135,
136,
137,
138,
139,
140,
141,
1023,
232
]
},
{
"tb": 96,
"tbk": 1,
"tl": 21,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
767,
59,
60,
61,
62,
255
]
},
{
"tb": 16320,
"tbk": 8,
"tl": 6054,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
70,
71,
72,
644,
56
]
},
{
"tb": 160,
"tbk": 1,
"tl": 6352,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
1024,
1025,
1026,
1027,
232
]
},
{
"tb": 96,
"tbk": 1,
"tl": 700415,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
55,
159
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2092,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
105,
121,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035
]
},
{
"tb": 72,
"tbk": 3,
"tl": 145748,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
95,
96,
97,
98,
99,
100,
101,
102,
562,
153,
154,
155
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
204,
205,
206,
207,
208,
209,
210,
211,
948,
284
]
},
{
"tb": 128,
"tbk": 1,
"tl": 111,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
325,
876,
877,
878,
879,
880,
881,
882,
225,
226
]
},
{
"tb": 384,
"tbk": 2,
"tl": 71,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044
]
},
{
"tb": 40,
"tbk": 1,
"tl": 21187712,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
1045,
1046,
1047,
1048,
1049,
1050,
1051,
1052,
1053
]
},
{
"tb": 16,
"tbk": 1,
"tl": 80,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1014,
1054,
1055,
1056,
1057,
1058,
1059,
1060,
24,
28
]
},
{
"tb": 204800,
"tbk": 32,
"tl": 78317,
"mb": 204800,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
135,
136,
137,
143,
144,
145,
1061,
1062,
1063
]
},
{
"tb": 728,
"tbk": 3,
"tl": 889,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
105,
121,
548,
549,
550,
551,
299,
300,
1064
]
},
{
"tb": 480,
"tbk": 4,
"tl": 7470,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
40,
41,
47,
48,
49,
50,
1065
]
},
{
"tb": 1472,
"tbk": 3,
"tl": 1911,
"mb": 1008,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1066,
1067,
1068,
1069,
1070,
1071,
1072,
1073
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 73275,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
135,
136,
137,
143,
144,
145,
1074,
1075,
24
]
},
{
"tb": 598016,
"tbk": 3,
"tl": 56671,
"mb": 598016,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
78,
259,
260,
261,
303,
1076,
1077,
54
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2560,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1078,
1079,
1080,
1081,
1082,
1083,
1084,
1085,
1086
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
25,
57,
58,
768,
717,
24,
28
]
},
{
"tb": 9600,
"tbk": 1,
"tl": 26662040,
"mb": 9600,
"mbk": 1,
"gb": 9600,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
178,
1087,
1088,
1089,
1090,
1091,
1092,
1093,
1094
]
},
{
"tb": 96,
"tbk": 1,
"tl": 48577,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
178,
179,
180,
181,
182,
183,
184,
257,
157,
24
]
},
{
"tb": 3160,
"tbk": 16,
"tl": 80,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
105,
121,
122,
123,
124,
125,
126,
127,
128,
280,
187
]
},
{
"tb": 128,
"tbk": 1,
"tl": 3048,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1095,
1096,
1097,
1098,
1099,
1100,
1101,
1102
]
}
],
"ftbl": [
"[root]",
"0x58e466fed3b9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x58e466ebf4ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58e466f8c7d5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f8c7d5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f8c7d5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466ef6ae7: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x58e466e90e2f: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x58e46705f4f9: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x58e466e5d37b: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x58e467225f79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x58e467224709: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x58e466ed4281: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x58e466ef4a38: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x58e466fb533e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x58e466e382d7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x58e466e2aa15: winter_verifier::perform_verification (verifier/src/lib.rs:311:25)",
"0x58e466ebea6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58e466f8c875: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f8c875: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f8c875: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466e95aaf: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x58e466f30b91: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x58e466f1830a: winter_prover::Prover::generate_proof (prover/src/lib.rs:608:34)",
"0x58e466f282ee: winter_prover::Prover::prove (prover/src/lib.rs:175:37)",
"0x58e466fec847: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x58e466f42347: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x58e466f1702d: winter_prover::Prover::generate_proof (prover/src/lib.rs:524:9)",
"0x58e466e8827c: winterfell::main (winterfell/src/main.rs:54:17)",
"0x58e466eb71fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58e466f79622: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f79622: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f79622: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f79622: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x58e466fd4daa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd0484: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466fed8ea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466f5cd67: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x58e466e3241d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x58e466f18217: winter_prover::Prover::generate_proof (prover/src/lib.rs:603:29)",
"0x58e4671b1819: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x58e4671b02e9: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x58e4671ae700: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x58e4671ae939: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x58e4671ae132: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x58e466e6717c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x58e466e63eb4: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x58e4670bf840: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x58e4670bfaa9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x58e4670cf111: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x58e466e947dc: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x58e466e2a4f7: winter_verifier::perform_verification (verifier/src/lib.rs:298:27)",
"0x58e466ea42d3: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x58e466e99afb: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x58e466e9ebc6: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x58e466f13350: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:543:13)",
"0x58e466e29fc9: winter_verifier::perform_verification (verifier/src/lib.rs:266:61)",
"0x58e466e8e245: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x58e466e89330: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:177:13)",
"0x58e466f11b72: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:371:13)",
"0x58e466ff22cb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:64:9)",
"0x58e466e2afcc: winter_verifier::perform_verification (verifier/src/lib.rs:225:43)",
"0x58e466e2e5da: winter_verifier::verify (verifier/src/lib.rs:111:21)",
"0x58e467223adc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x58e467222d6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x58e467222ae8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x58e467222ae8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x58e467222124: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x58e46721fd43: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x58e466f5182f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x58e466eeafe1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x58e466ef40d8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x58e466fb267d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x58e466f14a42: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:512:13)",
"0x58e466ea16b2: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x58e466e5430f: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x58e466e53506: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x58e466ff12f8: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:651:17)",
"0x58e466eb2dec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58e466e5dc84: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466e5dc84: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466e5dc84: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x58e466fc1c56: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x58e466ea9b3e: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x58e466ead040: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x58e466f5f104: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x58e466eb6a1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58e466f6e7f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f6e7f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f6e7f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f6e7f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd434a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd03a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e46700013a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466f25f12: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:640:42)",
"0x58e466ebc06c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58e466f3cf38: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f3cf38: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f3cf38: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x58e466fc37c5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x58e466fc37c5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x58e466fc37c5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x58e466e098e2: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x58e466e4f973: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:33)",
"0x58e466f19266: winter_prover::Prover::generate_proof (prover/src/lib.rs:417:21)",
"0x58e4671e8a99: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x58e4671eb12b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x58e4671eb061: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x58e4671e446b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x58e4671deb71: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x58e4671df307: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x58e4671ee90b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x58e466f7169a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f7169a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f7169a: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f7169a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x58e466fd44cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd2a1a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e46705cf4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466e96243: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x58e466e1924c: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x58e4671e8c0a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58e4671dc61c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e4671dc61c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e4671dc61c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x58e466fc32d9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x58e466fc32d9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x58e466fc32d9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x58e466e95dbc: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x58e4671dc5cc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x58e4671dc5cc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x58e4671dc5cc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x58e4671dc2c6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x58e46706f6ca: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x58e4670785e9: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x58e466f3ce08: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f3ce08: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f3ce08: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x58e466fc2b85: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x58e466fc2b85: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x58e466fc2b85: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x58e466f8a0a6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x58e466f164d0: winter_prover::Prover::generate_proof (prover/src/lib.rs:452:35)",
"0x58e466f3d45b: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x58e466f3d45b: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x58e466f3d45b: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x58e466ff4b0a: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x58e46700b7a8: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x58e466e90114: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x58e466eb8c1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58e466e093e2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466e093e2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466e093e2: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x58e466fc2df5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x58e466fc2df5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x58e466fc2df5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x58e466e1c24b: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x58e466f15e23: winter_prover::Prover::generate_proof (prover/src/lib.rs:423:33)",
"0x58e466f131b5: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:547:13)",
"0x58e466ea11b6: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x58e4671eb48b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x58e4671eae51: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x58e4671e454b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x58e4671dec41: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x58e4671df2c7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x58e4671ee95b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x58e466f8340d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f8340d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f8340d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f8340d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd4e4a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd26e4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466ffed1a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466f58ba1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x58e466e66a4c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x58e466e61f66: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x58e466f58d0d: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x58e466f5ead4: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x58e466eb57bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58e466f8ba22: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f8ba22: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f8ba22: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x58e466fc2d25: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x58e466fc2d25: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x58e466fc2d25: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x58e466f8a0e6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x58e466e2f6db: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x58e466e324b0: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x58e466ea9e35: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x58e466f518a2: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x58e466f78b04: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f78b04: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f78b04: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f78b04: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x58e466fd5eaa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd1d64: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e4670000da: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466e61e8d: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x58e466f3007b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x58e466f2d28d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x58e4670a12ea: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x58e46707c009: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x58e466fe5a75: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x58e466e5c598: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x58e4671b062a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58e4671b332c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e4671b332c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e4671b332c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x58e46718269c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x58e46718269c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x58e46718269c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x58e466e27084: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x58e466e26dce: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x58e466ea22db: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x58e466eb332c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58e466e0baea: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466e0baea: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466e0baea: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x58e466fc1ca6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x58e466ea2508: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x58e466f14f02: winter_prover::Prover::generate_proof (prover/src/lib.rs:233:27)",
"0x58e466e1f1bf: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x58e466e1cac4: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x58e466e20f9d: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x58e466e11cba: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x58e466f12010: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:354:9)",
"0x58e466ff1e16: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:26:25)",
"0x58e466fed4e2: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x58e466e26c98: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x58e466f3b485: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x58e466eade4c: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x58e466f5ef37: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x58e466e2e50b: winter_verifier::verify (verifier/src/lib.rs:109:19)",
"0x58e466e0af63: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x58e466f5fc15: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x58e466eb403c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58e466f76909: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f76909: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f76909: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f76909: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd5e3a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd1934: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466ffea2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466e29ba2: winter_verifier::perform_verification (verifier/src/lib.rs:214:41)",
"0x58e46706ed9d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x58e466e2ac03: winter_verifier::perform_verification (verifier/src/lib.rs:323:5)",
"0x58e466f7018f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f7018f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f7018f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f7018f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd4ccd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd1cd7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466fff50d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466ff4aa0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x58e466f5f76e: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x58e466e88822: winterfell::main (winterfell/src/main.rs:71:11)",
"0x58e466f8bd83: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x58e466e1c2c5: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x58e466e0b126: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x58e466f8cb95: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f8cb95: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f8cb95: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466e5d785: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x58e466e66cc7: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x58e466eb3d9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58e466f7ce5f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f7ce5f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f7ce5f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f7ce5f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd43cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd1e87: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466ffee8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466f03bcd: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:51:26)",
"0x58e466e08388: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x58e466f3555c: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x58e466fe3129: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x58e466f34b36: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x58e466f38296: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x58e466f11bcf: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:369:9)",
"0x58e466e962b7: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x58e466e2f77b: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x58e466e909fe: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x58e466e3beb1: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x58e466e2aabc: winter_verifier::perform_verification (verifier/src/lib.rs:317:25)",
"0x58e466e2e1dd: winter_verifier::verify (verifier/src/lib.rs:96:32)",
"0x58e466ff1f8c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:40:30)",
"0x58e4672249ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58e46722604c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e46722604c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e46722604c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x58e467223c7c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x58e467223c7c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x58e467223c7c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x58e46721fece: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x58e466f5e370: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x58e466f6b997: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x58e466f5e970: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x58e46706ee04: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x58e466e67abb: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x58e466e9646d: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x58e466f562d4: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x58e46705d14c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x58e466e26e0c: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x58e466ef6a57: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x58e466e95259: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x58e466e96739: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x58e466e51572: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x58e466eb749c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58e466f73b4f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f73b4f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f73b4f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f73b4f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fbf03e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x58e466fd3035: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e4670000ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466e8874e: winterfell::main (winterfell/src/main.rs:65:26)",
"0x58e466e9ee92: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x58e466e9eb2c: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x58e466f17b02: winter_prover::Prover::generate_proof (prover/src/lib.rs:571:9)",
"0x58e466f2e72b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x58e466f2df9d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x58e4670a169a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x58e46708ef7b: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x58e4670991a9: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x58e467093416: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x58e466eb2b4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58e466f114c4: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f114c4: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f114c4: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x58e466fc1bf6: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x58e466e890ad: <winterfell::WorkAir as winter_air::air::Air>::new (winterfell/src/main.rs:151:23)",
"0x58e466ff0f36: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:226:17)",
"0x58e46700b19e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x58e466f27acc: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:701:36)",
"0x58e466ea93b5: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x58e466e91ec7: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x58e466e1eeae: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x58e466e22a1c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x58e466e08d37: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x58e466e11b7f: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x58e4671eb63b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x58e4671eaf01: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x58e4671e438b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x58e4671e104e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x58e4671e29ec: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x58e4671e155a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x58e466f6df8f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f6df8f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f6df8f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f6df8f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd506d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd0f75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466ffe79d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466e1e3a8: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x58e466e1c314: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x58e466ee16d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x58e466ef47c8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x58e466fb367e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x58e466ead216: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x58e466e098f5: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x58e466fedc5a: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x58e4670616a7: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x58e466f44889: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x58e46707c1e9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x58e466fe615b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x58e466e5c6eb: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x58e466f41cbe: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x58e466ef12a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x58e466ef4a98: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x58e466fb491b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x58e466e960fa: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x58e466e983c0: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x58e466ed87a1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x58e466ef4108: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x58e466fb4dae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x58e466e2b1eb: winter_verifier::perform_verification (verifier/src/lib.rs:184:9)",
"0x58e466e11106: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x58e466e4dac9: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:290:18)",
"0x58e466e4c88e: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:173:30)",
"0x58e466f2aefa: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x58e466e6231c: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x58e466f703a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f703a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f703a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f703a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd548a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd0fc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466fffa3a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466f14d8f: winter_prover::Prover::generate_proof (prover/src/lib.rs:214:39)",
"0x58e466e51e5c: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x58e466e89247: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:176:13)",
"0x58e466f03adf: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:41:22)",
"0x58e466e4eb39: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:36)",
"0x58e466f191b5: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:21)",
"0x58e467060338: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x58e466ea4222: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x58e466ebab7c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58e466f7419f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f7419f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f7419f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f7419f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd554d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd2355: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466fffddd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466e501b1: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x58e466ec1edc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58e466f8425f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f8425f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f8425f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f8425f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fc118b: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x58e466fd18d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466fff56d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466f157f7: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:36)",
"0x58e467224ea0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x58e4672250d9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x58e4672253d2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x58e467226159: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x58e4671dc01a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x58e466f72ecf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f72ecf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f72ecf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f72ecf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd5d5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd2da7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466fffedd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466e880e6: winterfell::main (winterfell/src/main.rs:38:27)",
"0x58e466eb969c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58e466f8caf5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f8caf5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f8caf5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466ef6c07: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x58e466e19237: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x58e466e50a29: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x58e46700e1d6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x58e466f6bb50: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x58e466e0a32d: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x58e466e88e36: <winterfell::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (winterfell/src/main.rs:133:9)",
"0x58e466fef7a8: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:216:31)",
"0x58e46700dd36: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x58e46702bbd0: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x58e466ff9f66: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x58e4670018f6: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x58e4671010b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x58e467103d69: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x58e46710b322: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x58e466e5f65f: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x58e466e2f845: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x58e466f66131: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x58e466f3a853: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x58e466fed832: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x58e467225108: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x58e4672254ca: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x58e4672254ca: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x58e46722526e: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x58e46722526e: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x58e46722535d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x58e466f420f5: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x58e466e3bca0: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x58e466f2f80b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x58e466f2da1d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x58e4670a1c2a: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x58e467080c7d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x58e467083613: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x58e466e94237: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x58e466e373b7: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x58e466ef3041: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x58e466ef4018: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x58e466fb28be: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x58e466f05e9d: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:175:17)",
"0x58e466f0434f: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:55:17)",
"0x58e467063d94: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x58e46706f95d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x58e466e376fe: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x58e466ee9c21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x58e466ef3dd8: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x58e466fb56ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x58e466e2f8ec: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x58e466e9d0bd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x58e466ea9b7f: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x58e466e347be: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x58e466e2ab34: winter_verifier::perform_verification (verifier/src/lib.rs:319:28)",
"0x58e466dfea3f: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:230:34)",
"0x58e467007026: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x58e46702d3a7: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x58e466f7facf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f7facf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f7facf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f7facf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd4a5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd1c45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466fffe4d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466dfe1cf: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:283:9)",
"0x58e466f18e70: winter_prover::Prover::generate_proof (prover/src/lib.rs:449:13)",
"0x58e466f03028: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:83:31)",
"0x58e4670097af: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x58e466ebfccc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58e466f8cc35: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f8cc35: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f8cc35: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f1588e: winter_prover::Prover::generate_proof (prover/src/lib.rs:307:44)",
"0x58e466f3d511: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f3d511: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f3d511: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x58e466fc1c80: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x58e466f571ce: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x58e466e2e038: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:216:32)",
"0x58e46700de5f: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x58e466f85d1f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f85d1f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f85d1f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f85d1f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd461d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd04f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466fff34d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466e1f7f7: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x58e466ec09ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58e466f8ca55: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f8ca55: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f8ca55: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f15877: winter_prover::Prover::generate_proof (prover/src/lib.rs:306:39)",
"0x58e466e529d6: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x58e466e51e23: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x58e466f266ee: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:669:26)",
"0x58e466e514bd: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x58e466f27eb8: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:716:26)",
"0x58e466f16931: winter_prover::Prover::generate_proof (prover/src/lib.rs:482:37)",
"0x58e4671dbc69: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x58e4671d8c1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58e4671d5db6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e4671d5db6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e4671d5db6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466e9cb68: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x58e466f1819c: winter_prover::Prover::generate_proof (prover/src/lib.rs:600:25)",
"0x58e466f5fe5f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x58e466e549bd: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x58e466e50c90: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x58e466e53614: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x58e467107f36: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e467107f36: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e467107f36: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466e63dac: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x58e466f30d4a: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x58e466e2f03b: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:102:85)",
"0x58e46700ba6e: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x58e466e2729f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x58e466ea2df3: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x58e466e1c238: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x58e466f8c646: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f8c646: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f8c646: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466e67882: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x58e466f5dcf0: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x58e466e2a7a8: winter_verifier::perform_verification (verifier/src/lib.rs:306:42)",
"0x58e466f7795f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f7795f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f7795f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f7795f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd5a4d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd1e15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466ffff5d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e4670757af: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x58e466e09750: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x58e466ed6511: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x58e466ef4a08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x58e466fb240e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x58e466e99c69: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x58e466e5f31d: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x58e466f8c9b5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f8c9b5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f8c9b5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f15909: winter_prover::Prover::generate_proof (prover/src/lib.rs:309:32)",
"0x58e466ea9d26: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x58e466e95a4c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x58e466f7558d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f7558d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f7558d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f7558d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd4d7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd0d34: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466fff30a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466f5e733: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x58e466eb623c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58e466f70bd9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f70bd9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f70bd9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f70bd9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd500a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd2c44: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466fffc2a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466e1e4b2: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x58e466edaa31: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x58e466ef4048: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x58e466fb755e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x58e466e2b3b2: winter_verifier::perform_verification (verifier/src/lib.rs:179:9)",
"0x58e466e98499: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x58e466eb86dc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58e466f7a44f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f7a44f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f7a44f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f7a44f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd504d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fcff75: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e46700041d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466f16dcf: winter_prover::Prover::generate_proof (prover/src/lib.rs:501:51)",
"0x58e466eb844a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58e466f6d539: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f6d539: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f6d539: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f6d539: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd4b7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd2b14: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e46700044a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466f154ea: winter_prover::Prover::generate_proof (prover/src/lib.rs:272:43)",
"0x58e466e999b6: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x58e466e2e330: winter_verifier::verify (verifier/src/lib.rs:98:38)",
"0x58e466e4c5e4: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:156:33)",
"0x58e466e4fe25: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:128:17)",
"0x58e46704ac6e: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x58e466f734ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f734ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f734ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f734ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd5d3d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd05f5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e46700021d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466e3bff2: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x58e466e5f07a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x58e466f7db9d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f7db9d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f7db9d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f7db9d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd42aa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd1394: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466fffb5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466f5e5c3: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x58e466e4f8b2: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:94:28)",
"0x58e466f5d4ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x58e466f2ea8b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x58e466f2de3d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x58e4670a178a: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x58e46707c2a9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x58e466fe4bc8: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x58e466fe3195: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x58e466f133d4: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:541:17)",
"0x58e466e65547: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x58e466f653a7: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x58e466f5ed54: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x58e466f51bbd: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x58e466e5d428: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x58e466f15132: winter_prover::Prover::generate_proof (prover/src/lib.rs:262:22)",
"0x58e466e56081: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x58e466e54e86: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x58e466f2612f: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:655:31)",
"0x58e466f425c3: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x58e466f58e73: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x58e4671e90f0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x58e4671dd669: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x58e4671dce51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x58e4671dc950: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x58e46706f5ed: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x58e466eb35cc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58e466f76aff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f76aff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f76aff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f76aff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd44ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd1337: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466fffe8d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466e87edf: winterfell::main (winterfell/src/main.rs:28:26)",
"0x58e466ebefac: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58e466f748df: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f748df: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f748df: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f748df: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fbfb4e: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x58e466fd2415: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e4670002ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466e314f7: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x58e466e4ea9c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:51:13)",
"0x58e466f764cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f764cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f764cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f764cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd50dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd23d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466ffea6d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466f14cd2: winter_prover::Prover::generate_proof (prover/src/lib.rs:210:38)",
"0x58e466f0c75a: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x58e466ff0852: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:503:32)",
"0x58e46700ddc6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x58e46702b93a: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x58e466ff5e27: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x58e467000a22: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x58e46709a55d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x58e4670a0a25: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x58e46709386e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x58e466eb677c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58e466f7abf2: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f7abf2: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f7abf2: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f7abf2: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x58e466fd5b7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd0c35: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466ffe8cd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466f34a6a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x58e466e22adb: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x58e466f72ac3: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f72ac3: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f72ac3: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f72ac3: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd4bd4: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd129a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466fff654: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466e87d51: winterfell::main (winterfell/src/main.rs:22:32)",
"0x58e466e1f2ce: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x58e466f679a5: winter_prover::trace::Trace::validate (src/trace/mod.rs:179:13)",
"0x58e466f19578: winter_prover::Prover::generate_proof (prover/src/lib.rs:379:17)",
"0x58e4671eb2db: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x58e4671eafb1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x58e4671e42ab: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x58e4671e0f3e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x58e4671e2400: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x58e4671e1bf8: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x58e466ed78d1: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x58e466ef4318: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x58e466fb512d: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x58e466e1eaf2: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x58e46704aac5: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x58e466e3721f: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x58e466f82abf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f82abf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f82abf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f82abf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd5e7d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd2925: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466fff5dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466dfe788: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:228:23)",
"0x58e467011d85: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x58e467011e16: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x58e466e2aedf: winter_verifier::perform_verification (verifier/src/lib.rs:228:13)",
"0x58e466f6f70f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f6f70f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f6f70f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f6f70f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd427d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd2a55: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466ffe8ad: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e46706fac4: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x58e466e5f517: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x58e466f671b0: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:140:51)",
"0x58e467008476: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x58e466e06fc1: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x58e466eb4d4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58e466f7a86f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f7a86f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f7a86f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f7a86f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd561d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd0285: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466ffec1d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466f14eb3: winter_prover::Prover::generate_proof (prover/src/lib.rs:222:20)",
"0x58e466f18e30: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:13)",
"0x58e466e65356: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x58e466ead2b9: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x58e466f18e8b: winter_prover::Prover::generate_proof (prover/src/lib.rs:450:13)",
"0x58e466f571b0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x58e466e8921b: <winterfell::WorkAir as winter_air::air::Air>::get_assertions (winterfell/src/main.rs:175:9)",
"0x58e466f67518: winter_prover::trace::Trace::validate (src/trace/mod.rs:123:26)",
"0x58e466e61b8e: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x58e466e1e440: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x58e467006db6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x58e466e06b11: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x58e466eb9e6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58e466f74b29: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f74b29: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f74b29: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f74b29: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd4caa: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd3084: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466fff19a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466ea224b: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x58e466dfc88c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x58e466dfe6e8: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:227:28)",
"0x58e466ef918f: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x58e466e9993d: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x58e4671dde9d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x58e4671e942b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x58e4671ed1e3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x58e466e51d9a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x58e466f15511: winter_prover::Prover::generate_proof (prover/src/lib.rs:274:13)",
"0x58e466eccc01: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x58e466ef4408: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x58e466fb6c54: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x58e466f19285: winter_prover::Prover::generate_proof (prover/src/lib.rs:418:17)",
"0x58e4671eb9e9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e4671eb9e9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e4671eb9e9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e4671eb9e9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x58e4671ebe2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e4671ebdf7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e4671ebfce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e4671ee4c9: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x58e466ec217c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58e466f84eef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f84eef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f84eef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f84eef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd527d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd0c65: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466fe19bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466f15033: winter_prover::Prover::generate_proof (prover/src/lib.rs:248:41)",
"0x58e466f800ff: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f800ff: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f800ff: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f800ff: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd444d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd0625: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466fff13d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466e08d28: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x58e466e0a461: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x58e466ea103f: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x58e466f7059f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f7059f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f7059f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f7059f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fc00d6: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x58e466fd2bc5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e46700030d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466e2e3a8: winter_verifier::verify (verifier/src/lib.rs:102:24)",
"0x58e466f14978: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:517:13)",
"0x58e466e2a636: winter_verifier::perform_verification (verifier/src/lib.rs:305:9)",
"0x58e466f7ca3f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f7ca3f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f7ca3f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f7ca3f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd5b1d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd0bb7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466ffe9bd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466e3cdf7: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x58e466e68c4b: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x58e466e38325: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x58e46710c9e9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x58e46710c9e9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x58e46710c9e9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x58e466f2d09a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x58e466e0ba26: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x58e466f5f714: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x58e466f879dd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f879dd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f879dd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f879dd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd4c7a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd1ff4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466fff86a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466f5e67b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x58e466f51b6c: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x58e46706fb73: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x58e466dfc89d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x58e466e9ce24: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x58e466f420d2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x58e467077de9: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x58e466e2a1ac: winter_verifier::perform_verification (verifier/src/lib.rs:275:24)",
"0x58e466ed1611: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x58e466ef4288: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x58e466fb2c0b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x58e466e623c9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x58e466e018cd: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x58e466e00036: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x58e466ff0c48: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:300:57)",
"0x58e466e4c58a: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:155:31)",
"0x58e46705fb9b: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x58e466f8c3c5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f8c3c5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f8c3c5: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f158cd: winter_prover::Prover::generate_proof (prover/src/lib.rs:308:37)",
"0x58e466f11012: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f11012: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f11012: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x58e466fc3b05: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x58e466fc3b05: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x58e466fc3b05: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x58e466e11b95: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x58e466f30db3: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x58e466ec020c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58e466f79e49: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f79e49: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f79e49: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f79e49: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd493a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd17f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466fff01a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466e29c5f: winter_verifier::perform_verification (verifier/src/lib.rs:218:40)",
"0x58e466e2641f: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x58e466e24a15: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x58e466f51921: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x58e466f783bf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f783bf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f783bf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f783bf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd56cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd2e45: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466fff52d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466e374ab: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x58e466e376df: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x58e466e084f5: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x58e4671dde3d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x58e4671e9748: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x58e4671ed0a7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x58e466dd6d82: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x58e466dd6d82: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58e466dd6d82: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466dd6d82: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466dd6d82: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466dd6d82: std::io::buffered::bufwriter::BufWriter<W>::with_capacity (io/buffered/bufwriter.rs:115:33)",
"0x58e466dd6d82: std::io::buffered::linewriter::LineWriter<W>::with_capacity (io/buffered/linewriter.rs:109:29)",
"0x58e466dd6d82: std::io::buffered::linewriter::LineWriter<W>::new (io/buffered/linewriter.rs:89:9)",
"0x58e466dd6d82: std::io::stdio::stdout::{{closure}} (src/io/stdio.rs:618:62)",
"0x58e466dd6d82: std::sync::once_lock::OnceLock<T>::get_or_init::{{closure}} (src/sync/once_lock.rs:250:50)",
"0x58e466dd6d82: std::sync::once_lock::OnceLock<T>::initialize::{{closure}} (src/sync/once_lock.rs:376:19)",
"0x58e466dd6d82: std::sync::once::Once::call_once_force::{{closure}} (src/sync/once.rs:208:40)",
"0x58e466dd6d82: std::sys_common::once::futex::Once::call (sys_common/once/futex.rs:124:21)",
"0x58e466dd5eca: std::sync::once::Once::call_once_force (src/sync/once.rs:208:9)",
"0x58e466dd5eca: std::sync::once_lock::OnceLock<T>::initialize (src/sync/once_lock.rs:375:9)",
"0x58e4672401c5: std::sync::once_lock::OnceLock<T>::get_or_try_init (src/sync/once_lock.rs:298:9)",
"0x58e4672401c5: std::sync::once_lock::OnceLock<T>::get_or_init (src/sync/once_lock.rs:250:15)",
"0x58e4672401c5: std::io::stdio::stdout (src/io/stdio.rs:618:14)",
"0x58e4672401c5: std::io::stdio::print_to (src/io/stdio.rs:1020:21)",
"0x58e4672401c5: std::io::stdio::_print (src/io/stdio.rs:1097:5)",
"0x58e466e8803a: winterfell::main (winterfell/src/main.rs:36:5)",
"0x58e466e20a93: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x58e466f6f033: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f6f033: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f6f033: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f6f033: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd59ad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd2545: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466ffffdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466f156db: winter_prover::Prover::generate_proof (prover/src/lib.rs:293:23)",
"0x58e466ea3003: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x58e466ea4210: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x58e466e9cc0e: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x58e466ea22f2: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x58e466f30dca: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x58e466e9ed52: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x58e466e22a78: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x58e466e4fbe1: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:135:9)",
"0x58e466f424ab: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x58e466e26d9a: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x58e466f864f9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f864f9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f864f9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f864f9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd49da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd1bc4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466ffeeba: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466f25fcf: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:644:36)",
"0x58e466eeeb21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x58e466ef4498: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x58e466fb67ae: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x58e466ea7db7: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x58e466f34bae: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x58e466f732ef: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f732ef: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f732ef: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f732ef: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd54cd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd1d15: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466ffe7dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466e2f8d5: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x58e466f7becd: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f7becd: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f7becd: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f7becd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd509a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd0544: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466fff73a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466f5e50b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x58e466e9cc29: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x58e466e5f999: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x58e466f7de94: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f7de94: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f7de94: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f7de94: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x58e466fd45da: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd2ec4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466fffc5a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466e6546e: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x58e466f2d0af: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x58e466f6c4b9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f6c4b9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f6c4b9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f6c4b9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd48ea: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd14f4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466fff39a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466f02fe8: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:83:9)",
"0x58e466e20d08: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x58e467011d72: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x58e466f6655d: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:243:25)",
"0x58e466e88d94: winterfell::build_do_work_trace (winterfell/src/main.rs:91:5)",
"0x58e466f2860b: winterfell::main::{{closure}} (winterfell/src/main.rs:30:23)",
"0x58e466ebb0bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58e466f6c6af: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f6c6af: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f6c6af: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f6c6af: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fc1705: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x58e466fd250a: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466ffeb3d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466e25891: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x58e466e298e5: winter_verifier::perform_verification (verifier/src/lib.rs:185:13)",
"0x58e466f05d5a: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:170:36)",
"0x58e466e3bcb7: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x58e466ebc30c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58e466f6fb59: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f6fb59: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f6fb59: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f6fb59: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd46ba: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd29a4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466ffeeea: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466f16e8c: winter_prover::Prover::generate_proof (prover/src/lib.rs:505:52)",
"0x58e466f5fd01: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x58e466ef3a21: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x58e466ef3e08: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x58e466fb642e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x58e466f5ff07: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x58e466f7e05d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f7e05d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f7e05d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f7e05d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd4dda: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd1de4: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466fff1ca: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466f5e7eb: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x58e466ebff6c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58e466f8522b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f8522b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f8522b: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f8522b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x58e466fd5aad: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd2955: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466ef616d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466f36618: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x58e466eb93fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58e466f78edf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f78edf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f78edf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f78edf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd588d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd10c5: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466ffe9dd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466f2608b: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:648:34)",
"0x58e466f8b328: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f8b328: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f8b328: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x58e466fc3205: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x58e466fc3205: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x58e466fc3205: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x58e466f16ea3: winter_prover::Prover::generate_proof (prover/src/lib.rs:510:39)",
"0x58e466e2ff56: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x58e46700ceb6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x58e467031fbd: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x58e46706f78d: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x58e466ea08d8: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x58e466f88e6f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f88e6f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f88e6f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f88e6f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd4ecd: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd0825: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466fffafd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e46706fc5a: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x58e46705fb89: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x58e466f176b8: winter_prover::Prover::generate_proof (prover/src/lib.rs:558:13)",
"0x58e46705d472: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x58e466e9999f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x58e466eb552a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58e466f6d949: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f6d949: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f6d949: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f6d949: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd596a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd1874: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466fffb8a: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466e3240e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x58e466f8736f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f8736f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f8736f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f8736f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd489d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd2895: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466fffbdd: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e466f66fe2: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:140:32)",
"0x58e466f86d2f: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58e466f86d2f: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58e466f86d2f: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58e466f86d2f: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58e466fd456d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58e466fd1125: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58e466fff98d: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58e46706ed29: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)"
]
}