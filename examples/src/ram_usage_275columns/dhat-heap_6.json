{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell do-work -n 6 -l 65536",
"pid": 29329,
"tg": 492449158,
"te": 531015601,
"pps": [
{
"tb": 97920,
"tbk": 48,
"tl": 65832613,
"mb": 49152,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7
]
},
{
"tb": 288,
"tbk": 1,
"tl": 9075,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
16,
17
]
},
{
"tb": 52800,
"tbk": 12,
"tl": 7728297,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
20,
21,
22,
23,
24
]
},
{
"tb": 144,
"tbk": 1,
"tl": 491046078,
"mb": 144,
"mbk": 1,
"gb": 144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
25,
26,
27,
28,
29,
30,
31,
32,
33
]
},
{
"tb": 25166016,
"tbk": 18,
"tl": 451861,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
38,
39,
40,
41
]
},
{
"tb": 144,
"tbk": 1,
"tl": 37806844,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
25,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 39600,
"tbk": 6,
"tl": 2831990455,
"mb": 39600,
"mbk": 6,
"gb": 39600,
"gbk": 6,
"eb": 0,
"ebk": 0,
"fs": [
8,
49,
50,
51,
52,
53,
54,
55,
56,
57
]
},
{
"tb": 1152,
"tbk": 2,
"tl": 19116,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
58,
59,
60,
61,
62
]
},
{
"tb": 256,
"tbk": 1,
"tl": 638,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71
]
},
{
"tb": 240,
"tbk": 1,
"tl": 445328651,
"mb": 240,
"mbk": 1,
"gb": 240,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
72,
73,
74,
75,
76,
77,
78,
79,
80
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4143,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
81,
82,
83,
84,
85,
86,
87,
88
]
},
{
"tb": 1000,
"tbk": 4,
"tl": 4031,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99
]
},
{
"tb": 16000,
"tbk": 4,
"tl": 2379,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
100,
101,
102,
103,
104,
105,
106,
107,
108
]
},
{
"tb": 128000,
"tbk": 4,
"tl": 1626,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
20,
21,
22,
23,
109
]
},
{
"tb": 576,
"tbk": 6,
"tl": 88,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
110,
111,
112,
113,
114,
115,
116,
117,
118
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 4221,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
119,
120,
121,
122,
123
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 533,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
124,
125,
126,
127,
128,
129,
130
]
},
{
"tb": 25166016,
"tbk": 18,
"tl": 453568,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
38,
131,
132,
40
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
133,
134,
135,
136,
137,
46,
47
]
},
{
"tb": 6291456,
"tbk": 6,
"tl": 10690062,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
20,
21,
22,
23,
138
]
},
{
"tb": 192,
"tbk": 6,
"tl": 4,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
133,
139,
140,
141,
142
]
},
{
"tb": 2400,
"tbk": 12,
"tl": 220,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
89,
143,
144,
145,
146,
147,
148
]
},
{
"tb": 576,
"tbk": 12,
"tl": 73313940,
"mb": 576,
"mbk": 12,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
49,
149,
150,
151,
152,
153,
154,
155,
156
]
},
{
"tb": 13472,
"tbk": 32,
"tl": 120991,
"mb": 13472,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
157,
158,
159,
160,
161,
162,
163,
164
]
},
{
"tb": 48,
"tbk": 1,
"tl": 5222,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
165,
166,
167,
168,
169,
170,
171,
172
]
},
{
"tb": 6291456,
"tbk": 6,
"tl": 37433623,
"mb": 6291456,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
20,
21,
22,
23,
173
]
},
{
"tb": 768,
"tbk": 12,
"tl": 18796108,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
174,
175,
176,
177,
178
]
},
{
"tb": 432,
"tbk": 1,
"tl": 38385816,
"mb": 432,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
179,
180,
181,
182,
183,
184,
185,
186,
187
]
},
{
"tb": 11534336000,
"tbk": 2621440,
"tl": 43150909,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
188,
189,
190,
191,
192,
193,
194,
195,
196
]
},
{
"tb": 512,
"tbk": 1,
"tl": 36,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
188,
189,
190,
197,
198,
199,
200,
201,
202
]
},
{
"tb": 16000,
"tbk": 4,
"tl": 1610,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
20,
21,
22,
23,
203
]
},
{
"tb": 140992,
"tbk": 38,
"tl": 24141,
"mb": 140800,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
188,
189,
190,
197,
198,
199,
204,
205,
206,
207,
208
]
},
{
"tb": 22720,
"tbk": 119,
"tl": 1444466,
"mb": 22720,
"mbk": 119,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
157,
158,
159,
160,
161,
162,
209,
210
]
},
{
"tb": 39600,
"tbk": 6,
"tl": 3180657645,
"mb": 39600,
"mbk": 6,
"gb": 39600,
"gbk": 6,
"eb": 0,
"ebk": 0,
"fs": [
8,
49,
211,
212,
213,
214,
215,
216,
217,
218
]
},
{
"tb": 576,
"tbk": 6,
"tl": 89,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
133,
219,
220,
221,
46,
47,
48
]
},
{
"tb": 288,
"tbk": 2,
"tl": 23950990,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
222,
223,
224,
225,
46
]
},
{
"tb": 96,
"tbk": 6,
"tl": 475,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
188,
189,
190,
191,
192,
193,
226,
227,
228
]
},
{
"tb": 6616,
"tbk": 42,
"tl": 147,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
229,
230,
231,
232,
233,
234,
235,
130,
236
]
},
{
"tb": 144,
"tbk": 1,
"tl": 1284912,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
110,
237,
238,
239,
240,
241,
242,
243,
244,
46
]
},
{
"tb": 144,
"tbk": 1,
"tl": 37806854,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
245,
246,
247,
248,
249,
46,
47,
48
]
},
{
"tb": 288,
"tbk": 6,
"tl": 99974578,
"mb": 288,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
133,
250,
251,
252,
253,
254,
255
]
},
{
"tb": 96,
"tbk": 6,
"tl": 667,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
133,
256,
257,
258,
259,
260,
261
]
},
{
"tb": 768,
"tbk": 1,
"tl": 4435,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
262,
263,
264,
265,
266,
267,
268,
269
]
},
{
"tb": 52800,
"tbk": 6,
"tl": 80425,
"mb": 52800,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
188,
189,
190,
197,
198,
199,
270,
271,
272
]
},
{
"tb": 4000,
"tbk": 4,
"tl": 3855,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
157,
273,
274,
275,
276,
277,
130,
236
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 203404,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
157,
158,
159,
160,
278,
279,
280,
281
]
},
{
"tb": 96,
"tbk": 2,
"tl": 3178,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
124,
125,
126,
127,
128,
282,
283
]
},
{
"tb": 256,
"tbk": 1,
"tl": 12664,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
188,
189,
190,
191,
192,
193,
284,
285,
286
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 45,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
38,
287,
288,
289
]
},
{
"tb": 192,
"tbk": 6,
"tl": 1469,
"mb": 192,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
133,
139,
290,
291,
292,
293,
294
]
},
{
"tb": 1920,
"tbk": 8,
"tl": 18869,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
295,
296
]
},
{
"tb": 6528,
"tbk": 12,
"tl": 143,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
297,
298,
299,
300,
301,
302
]
},
{
"tb": 96,
"tbk": 6,
"tl": 114765,
"mb": 96,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
303,
304,
305,
306,
307,
308,
309,
310,
311,
312
]
},
{
"tb": 576,
"tbk": 6,
"tl": 192,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
133,
219,
258,
259,
260,
261,
46
]
},
{
"tb": 2097152,
"tbk": 2,
"tl": 45685761,
"mb": 2097152,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
188,
189,
190,
191,
192,
193,
313,
314,
315
]
},
{
"tb": 24,
"tbk": 2,
"tl": 2,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
303,
304,
305,
306,
307,
308,
309,
316,
317,
136
]
},
{
"tb": 432,
"tbk": 18,
"tl": 375,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
318,
319,
320,
321,
322,
323,
324,
325,
326
]
},
{
"tb": 288,
"tbk": 12,
"tl": 73750786,
"mb": 288,
"mbk": 12,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
327,
328,
329,
330,
331,
332,
333,
334,
335,
336
]
},
{
"tb": 96,
"tbk": 6,
"tl": 329,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
133,
256,
337,
258,
338,
339,
202
]
},
{
"tb": 13248,
"tbk": 24,
"tl": 6160,
"mb": 3864,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
340,
341,
342,
343,
344,
345
]
},
{
"tb": 144,
"tbk": 6,
"tl": 9399621,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
133,
346,
347,
227,
348,
261,
46
]
},
{
"tb": 384,
"tbk": 2,
"tl": 11550,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
349,
350,
351,
352,
164
]
},
{
"tb": 2304,
"tbk": 12,
"tl": 4784,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
89,
353,
354,
355,
356,
357,
358
]
},
{
"tb": 48,
"tbk": 1,
"tl": 5229,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
359,
360,
361,
362,
363,
364,
365,
366
]
},
{
"tb": 40,
"tbk": 1,
"tl": 6,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
367,
368,
369,
370,
371,
372,
373,
374,
375
]
},
{
"tb": 480,
"tbk": 4,
"tl": 12144,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
124,
125,
126,
127,
128,
376,
377
]
},
{
"tb": 52832,
"tbk": 13,
"tl": 205554386,
"mb": 52832,
"mbk": 13,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
378,
379,
380,
381,
382,
383,
384,
385
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1284890,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
49,
386,
387,
388,
205,
206,
207,
389,
244,
46
]
},
{
"tb": 96,
"tbk": 2,
"tl": 23950982,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
124,
125,
126,
127,
128,
390,
46
]
},
{
"tb": 256,
"tbk": 4,
"tl": 127793,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
38,
287,
288,
391
]
},
{
"tb": 768,
"tbk": 1,
"tl": 5146,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
49,
386,
387,
388,
205,
206,
207,
208,
392,
393
]
},
{
"tb": 13505,
"tbk": 1,
"tl": 19041,
"mb": 13505,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
303,
304,
305,
306,
307,
308,
309,
310,
394,
395
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3858,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
262,
263,
264,
265,
266,
163,
164,
396
]
},
{
"tb": 288,
"tbk": 1,
"tl": 33460,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
397,
398,
399,
400,
281
]
},
{
"tb": 384,
"tbk": 6,
"tl": 80719,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
401,
402
]
},
{
"tb": 6291456,
"tbk": 6,
"tl": 2387385,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
38,
287,
288,
403
]
},
{
"tb": 844800,
"tbk": 1,
"tl": 19101,
"mb": 844800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
303,
304,
305,
306,
307,
308,
309,
310,
404,
405
]
},
{
"tb": 3608,
"tbk": 18,
"tl": 81,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
229,
230,
231,
232,
233,
234,
235,
406,
407
]
},
{
"tb": 192,
"tbk": 6,
"tl": 112859,
"mb": 192,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
133,
408,
409,
410,
411,
412,
413
]
},
{
"tb": 480,
"tbk": 2,
"tl": 13397,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
414,
415,
416,
417,
418,
419,
420,
421,
422
]
},
{
"tb": 480,
"tbk": 4,
"tl": 209,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
124,
125,
126,
127,
128,
129,
423
]
},
{
"tb": 39600,
"tbk": 6,
"tl": 224115018,
"mb": 39600,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
49,
386,
387,
388,
205,
206,
207,
424,
425,
426
]
},
{
"tb": 2348810240,
"tbk": 1,
"tl": 62681893,
"mb": 2348810240,
"mbk": 1,
"gb": 2348810240,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
188,
189,
190,
197,
198,
199,
427,
428,
429
]
},
{
"tb": 1730150400,
"tbk": 1650,
"tl": 772604535010,
"mb": 1730150400,
"mbk": 1650,
"gb": 1730150400,
"gbk": 1650,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
188,
189,
190,
197,
198,
199,
430,
431,
432
]
},
{
"tb": 11808,
"tbk": 12,
"tl": 310,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
433,
434,
435,
436,
437,
438
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 323636,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
188,
189,
190,
191,
192,
193,
439,
440,
46
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2073,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
262,
263,
264,
265,
441,
406,
407,
46
]
},
{
"tb": 144,
"tbk": 6,
"tl": 528,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
133,
346,
347,
227,
228,
339,
202
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 731681,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
38,
442,
443,
444
]
},
{
"tb": 256,
"tbk": 1,
"tl": 668,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
445,
446
]
},
{
"tb": 192,
"tbk": 6,
"tl": 609,
"mb": 192,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
447,
448,
449,
450
]
},
{
"tb": 48,
"tbk": 6,
"tl": 2387526,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
451,
452,
453,
46
]
},
{
"tb": 192,
"tbk": 1,
"tl": 118,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
454,
455,
456,
457,
458,
459,
460,
461,
462
]
},
{
"tb": 224,
"tbk": 1,
"tl": 19108,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
303,
304,
305,
306,
307,
308,
309,
310,
463,
464
]
},
{
"tb": 576,
"tbk": 2,
"tl": 18994,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
465,
466,
467,
468,
62
]
},
{
"tb": 12582912,
"tbk": 6,
"tl": 2365977,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
469,
470,
471,
472,
473,
474,
475,
476
]
},
{
"tb": 256,
"tbk": 1,
"tl": 35,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
89,
90,
91,
92,
93,
94,
95,
96,
477,
478,
46
]
},
{
"tb": 512,
"tbk": 1,
"tl": 58,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
479,
480,
481,
482,
483,
484,
485,
486
]
},
{
"tb": 576,
"tbk": 2,
"tl": 13440,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
487,
488,
489,
490,
202
]
},
{
"tb": 20971200,
"tbk": 80,
"tl": 80522,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
491,
46
]
},
{
"tb": 32,
"tbk": 1,
"tl": 18726,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
157,
158,
159,
160,
161,
492,
493,
450
]
},
{
"tb": 50331648,
"tbk": 24,
"tl": 145372821,
"mb": 50331648,
"mbk": 24,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
38,
494,
495,
496
]
},
{
"tb": 4608,
"tbk": 6,
"tl": 33697,
"mb": 4608,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
49,
497,
498,
499,
500,
501,
502,
503,
504
]
},
{
"tb": 96,
"tbk": 1,
"tl": 321,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
505,
506,
507,
508,
509,
510,
511,
512,
46,
47
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1284899,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
188,
189,
190,
197,
198,
199,
513,
514,
240,
241,
242
]
},
{
"tb": 72,
"tbk": 1,
"tl": 1285663,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
49,
386,
387,
388,
205,
206,
207,
515,
244,
46
]
},
{
"tb": 844800,
"tbk": 1,
"tl": 88053,
"mb": 844800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
303,
516,
517,
518,
519,
283,
393,
520
]
},
{
"tb": 288,
"tbk": 12,
"tl": 399,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
133,
521,
522,
523,
524,
525,
526
]
},
{
"tb": 9584640,
"tbk": 4,
"tl": 206910,
"mb": 9584640,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
38,
527,
528,
281
]
},
{
"tb": 105088,
"tbk": 408,
"tl": 264876,
"mb": 16128,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
157,
529,
530,
531,
532,
533,
534,
535,
536
]
},
{
"tb": 64,
"tbk": 1,
"tl": 4,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
537,
538,
539,
540,
541,
542,
543,
544,
545
]
},
{
"tb": 12582912,
"tbk": 6,
"tl": 146527737,
"mb": 12582912,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
20,
21,
22,
23,
546
]
},
{
"tb": 192,
"tbk": 6,
"tl": 3173284021,
"mb": 192,
"mbk": 6,
"gb": 192,
"gbk": 6,
"eb": 0,
"ebk": 0,
"fs": [
133,
408,
547,
548,
549,
550,
551
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3551,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
262,
263,
264,
265,
441,
423,
393,
520
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
303,
304,
305,
306,
307,
308,
309,
316,
317,
552
]
},
{
"tb": 288,
"tbk": 2,
"tl": 994,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
222,
223,
224,
553,
201
]
},
{
"tb": 192,
"tbk": 6,
"tl": 38173,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
133,
554,
555,
46,
47,
48
]
},
{
"tb": 52800,
"tbk": 6,
"tl": 150,
"mb": 8800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
447,
556,
449,
450
]
},
{
"tb": 96,
"tbk": 6,
"tl": 43,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
133,
256,
337,
220,
221,
46,
47
]
},
{
"tb": 2537165,
"tbk": 9,
"tl": 19526,
"mb": 1690408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
557,
558,
559,
560,
561
]
},
{
"tb": 1440,
"tbk": 12,
"tl": 36875374,
"mb": 1152,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
133,
562,
453,
46,
47,
48
]
},
{
"tb": 48,
"tbk": 1,
"tl": 6050,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
563,
564,
565,
566,
567,
568,
569,
570,
571
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 528878452,
"mb": 2097152,
"mbk": 1,
"gb": 2097152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
38,
287,
572,
573
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 21783316,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
157,
158,
159,
160,
278,
574,
575,
576
]
},
{
"tb": 96,
"tbk": 6,
"tl": 9399520,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
188,
189,
190,
191,
192,
193,
226,
227,
348
]
},
{
"tb": 144,
"tbk": 1,
"tl": 37806860,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
577,
578,
579,
580,
581,
46,
47,
48
]
},
{
"tb": 256,
"tbk": 1,
"tl": 13,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
188,
189,
190,
197,
198,
199,
582,
478,
46
]
},
{
"tb": 46137344000,
"tbk": 2621440,
"tl": 51286570,
"mb": 48400,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
583,
584,
585,
586,
587,
588,
195,
196
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 528880442,
"mb": 524288,
"mbk": 1,
"gb": 524288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
38,
287,
589,
590
]
},
{
"tb": 96,
"tbk": 6,
"tl": 3173670848,
"mb": 96,
"mbk": 6,
"gb": 96,
"gbk": 6,
"eb": 0,
"ebk": 0,
"fs": [
1,
303,
304,
305,
306,
307,
308,
309,
591,
592,
593
]
},
{
"tb": 480,
"tbk": 6,
"tl": 9397969,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
594,
595,
596,
597,
598,
599,
600,
601,
602
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 281553,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
188,
189,
190,
197,
198,
199,
603,
604,
555
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 1723630,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
38,
605,
606,
607
]
},
{
"tb": 192,
"tbk": 12,
"tl": 9400264,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
608,
609,
610,
611,
612,
613,
614,
615
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1284286,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
229,
230,
231,
232,
233,
234,
616,
244,
46
]
},
{
"tb": 1296,
"tbk": 1,
"tl": 528880713,
"mb": 1296,
"mbk": 1,
"gb": 1296,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
617,
618,
619,
620,
621,
622,
623,
624,
625
]
},
{
"tb": 2816000,
"tbk": 160,
"tl": 138505,
"mb": 866800,
"mbk": 33,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
583,
584,
585,
586,
587,
626,
627,
628
]
},
{
"tb": 512,
"tbk": 1,
"tl": 30,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
629,
630,
202,
141
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 38488272,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
157,
158,
159,
160,
278,
574,
575,
631
]
},
{
"tb": 288,
"tbk": 1,
"tl": 9186,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
632,
633,
634,
635,
636,
637,
638,
639,
640
]
},
{
"tb": 192,
"tbk": 1,
"tl": 161,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
454,
641,
642,
643,
644,
645,
646,
647,
648
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
303,
304,
305,
306,
307,
308,
309,
316,
649,
552
]
},
{
"tb": 2880,
"tbk": 4,
"tl": 49113,
"mb": 2880,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
262,
263,
264,
265,
266,
209,
210,
650
]
},
{
"tb": 256,
"tbk": 1,
"tl": 18946,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
303,
304,
305,
306,
307,
308,
309,
310,
651,
652
]
},
{
"tb": 40,
"tbk": 1,
"tl": 4702,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
367,
368,
369,
370,
371,
372,
373,
374,
653
]
},
{
"tb": 288,
"tbk": 6,
"tl": 4217038,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
654,
655,
656,
657,
658,
659,
660
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 100717891,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
157,
158,
159,
160,
278,
661,
196,
662
]
},
{
"tb": 196224,
"tbk": 54,
"tl": 166,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
663,
664
]
},
{
"tb": 96,
"tbk": 6,
"tl": 16,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
133,
256,
257,
220,
221,
46,
47
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 85445,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
557,
558,
559,
665,
666
]
},
{
"tb": 13690208256,
"tbk": 204,
"tl": 6926191846,
"mb": 2281701376,
"mbk": 34,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
100,
667,
668,
669,
670,
671,
672,
673
]
},
{
"tb": 2736,
"tbk": 6,
"tl": 2525,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
674,
675,
676,
677,
678,
679
]
},
{
"tb": 16000,
"tbk": 4,
"tl": 542,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
20,
21,
22,
23,
680
]
},
{
"tb": 288,
"tbk": 2,
"tl": 86613,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
681,
682,
683,
684,
283
]
},
{
"tb": 6912,
"tbk": 24,
"tl": 809,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
685,
686,
687,
688,
689
]
},
{
"tb": 34603008000,
"tbk": 2621440,
"tl": 20324250,
"mb": 22000,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
188,
189,
190,
197,
198,
199,
603,
690,
195
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
133,
134,
135,
552,
141,
142
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 3989,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
157,
691,
692,
693,
694,
695,
696,
697,
698
]
},
{
"tb": 144,
"tbk": 1,
"tl": 20911133,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
699,
700,
701,
702,
703,
704,
705,
706,
707
]
},
{
"tb": 65176,
"tbk": 38,
"tl": 372176,
"mb": 32640,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
557,
558,
559,
665,
708
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1285,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
89,
90,
91,
92,
93,
94,
95,
96,
709,
99,
710
]
},
{
"tb": 2304,
"tbk": 6,
"tl": 9398866,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
711,
712,
713,
714,
715,
716,
717,
718,
719
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 84450,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
303,
516,
517,
518,
720,
721,
407,
46
]
},
{
"tb": 384,
"tbk": 6,
"tl": 80742,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
722,
402
]
},
{
"tb": 192,
"tbk": 6,
"tl": 114046,
"mb": 192,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
303,
304,
305,
306,
307,
308,
309,
310,
723,
724
]
},
{
"tb": 48,
"tbk": 1,
"tl": 5243,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
725,
726,
727,
728,
729,
730,
731,
732
]
},
{
"tb": 3072,
"tbk": 6,
"tl": 20803,
"mb": 3072,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
733,
201,
202,
141
]
},
{
"tb": 512,
"tbk": 1,
"tl": 18,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
38,
131,
734,
201
]
},
{
"tb": 2304,
"tbk": 12,
"tl": 413,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
735,
736,
737,
738,
739,
740,
741,
742,
743
]
},
{
"tb": 192,
"tbk": 6,
"tl": 36875329,
"mb": 192,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
124,
125,
126,
127,
128,
744,
745
]
},
{
"tb": 288,
"tbk": 2,
"tl": 13492,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
746,
747,
748,
749,
202
]
},
{
"tb": 50331648,
"tbk": 6,
"tl": 382646087,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
38,
605,
606,
750
]
},
{
"tb": 96,
"tbk": 1,
"tl": 11480969,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
505,
751,
752,
753,
754,
755,
756,
757,
758
]
},
{
"tb": 14092861440,
"tbk": 6,
"tl": 1571086323,
"mb": 14092861440,
"mbk": 6,
"gb": 14092861440,
"gbk": 6,
"eb": 0,
"ebk": 0,
"fs": [
8,
100,
667,
668,
669,
670,
759,
760,
761
]
},
{
"tb": 224,
"tbk": 1,
"tl": 14573,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
762,
763,
764,
765,
650
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 3547,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
157,
273,
274,
275,
276,
277,
423,
393
]
},
{
"tb": 48,
"tbk": 1,
"tl": 5254,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
766,
767,
768,
769,
770,
771,
772,
773
]
},
{
"tb": 6291456,
"tbk": 3,
"tl": 3856378,
"mb": 6291456,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
188,
189,
190,
197,
198,
199,
204,
205,
206,
207,
515
]
},
{
"tb": 96,
"tbk": 1,
"tl": 528880477,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
774,
775,
776,
777,
778,
779,
780,
781,
782
]
},
{
"tb": 52800,
"tbk": 6,
"tl": 81674,
"mb": 52800,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
188,
189,
190,
197,
198,
199,
603,
783,
450
]
},
{
"tb": 512,
"tbk": 1,
"tl": 16,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
38,
131,
784,
630
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 148583,
"mb": 1179648,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
38,
785,
786,
281
]
},
{
"tb": 144,
"tbk": 1,
"tl": 37806849,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
49,
787,
788,
789,
790,
46,
47,
48
]
},
{
"tb": 288,
"tbk": 6,
"tl": 44071,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
133,
791,
555,
46,
47,
48
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1677,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
222,
223,
224,
792,
407
]
},
{
"tb": 480,
"tbk": 2,
"tl": 13558,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
793,
794,
795,
796,
450
]
},
{
"tb": 576,
"tbk": 6,
"tl": 89,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
133,
219,
258,
338,
339,
202,
141
]
},
{
"tb": 48,
"tbk": 1,
"tl": 27,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
797,
798,
799,
800,
801,
802,
803,
804
]
},
{
"tb": 3072,
"tbk": 6,
"tl": 20839,
"mb": 3072,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
805,
201,
202,
141
]
},
{
"tb": 52800,
"tbk": 12,
"tl": 7728365,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
20,
21,
22,
23,
806
]
},
{
"tb": 3456,
"tbk": 12,
"tl": 266,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
807,
808,
809,
810,
811,
812,
813,
814,
815
]
},
{
"tb": 288,
"tbk": 1,
"tl": 528945030,
"mb": 288,
"mbk": 1,
"gb": 288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
816,
817,
818,
819,
820,
821,
137,
46
]
},
{
"tb": 64,
"tbk": 1,
"tl": 10971917,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
822,
7
]
},
{
"tb": 96,
"tbk": 6,
"tl": 4217008,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
654,
655,
656,
657,
823,
659,
660
]
},
{
"tb": 5064,
"tbk": 7,
"tl": 384208588,
"mb": 840,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
824,
825,
826,
827,
828,
829,
830,
831,
832
]
},
{
"tb": 13472,
"tbk": 32,
"tl": 139495,
"mb": 13472,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
157,
158,
159,
160,
161,
162,
267,
268
]
},
{
"tb": 256,
"tbk": 1,
"tl": 14858,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
447,
833,
834,
450
]
},
{
"tb": 64,
"tbk": 1,
"tl": 12166,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
822,
835
]
},
{
"tb": 96,
"tbk": 6,
"tl": 315,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
133,
256,
257,
258,
338,
339,
202
]
},
{
"tb": 1730150400,
"tbk": 1650,
"tl": 61560541698,
"mb": 1730150400,
"mbk": 1650,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
188,
189,
190,
197,
198,
199,
204,
205,
206,
207,
424
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 186033,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
157,
158,
159,
160,
278,
574,
575,
836
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 6903,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
119,
120,
121,
122,
837
]
},
{
"tb": 100776,
"tbk": 221,
"tl": 60700,
"mb": 26448,
"mbk": 58,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
674,
675,
676,
838,
839,
840
]
},
{
"tb": 512,
"tbk": 4,
"tl": 946,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
841,
842,
843,
844,
130
]
},
{
"tb": 144,
"tbk": 6,
"tl": 36875490,
"mb": 144,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
327,
328,
329,
330,
331,
332,
333,
334,
845,
453
]
},
{
"tb": 2880,
"tbk": 24,
"tl": 2339,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
124,
125,
126,
127,
128,
846,
69
]
},
{
"tb": 1296,
"tbk": 1,
"tl": 18837,
"mb": 1296,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
617,
847,
848,
849,
850,
851,
852,
853,
854
]
},
{
"tb": 576,
"tbk": 4,
"tl": 1592,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
654,
655,
656,
657,
855,
856,
99
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2069,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
157,
273,
274,
275,
276,
277,
406,
407
]
},
{
"tb": 192,
"tbk": 1,
"tl": 96439,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
857,
858,
859,
860,
861,
862,
478,
46,
47
]
},
{
"tb": 844800,
"tbk": 6,
"tl": 521623,
"mb": 844800,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
303,
516,
517,
518,
863,
283,
393,
520
]
},
{
"tb": 192,
"tbk": 6,
"tl": 9399567,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
864,
865,
866,
867,
868,
869,
870,
871,
227,
348
]
},
{
"tb": 41943040,
"tbk": 524288,
"tl": 55696574,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
872,
873,
874,
875,
876,
877,
878,
879,
880
]
},
{
"tb": 96,
"tbk": 6,
"tl": 441,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
20,
21,
22,
23,
881
]
},
{
"tb": 22844,
"tbk": 4,
"tl": 75845,
"mb": 22844,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
303,
304,
305,
306,
307,
308,
309,
310,
882,
883
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 83413,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
557,
558,
559,
665,
884
]
},
{
"tb": 2306867200,
"tbk": 524288,
"tl": 12284054,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
188,
189,
190,
191,
192,
193,
885,
195,
196
]
},
{
"tb": 3328,
"tbk": 32,
"tl": 462,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
89,
886,
887,
888,
889,
890,
891
]
},
{
"tb": 160,
"tbk": 1,
"tl": 18712,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
157,
158,
159,
160,
161,
892,
493,
450
]
},
{
"tb": 80,
"tbk": 1,
"tl": 12161,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
893,
894,
202,
141
]
},
{
"tb": 16000,
"tbk": 4,
"tl": 628,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
38,
131,
895,
856
]
},
{
"tb": 144,
"tbk": 1,
"tl": 40,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
49,
386,
387,
388,
205,
206,
207,
208,
896,
137
]
},
{
"tb": 1730150400,
"tbk": 1650,
"tl": 874670550717,
"mb": 1730150400,
"mbk": 1650,
"gb": 1730150400,
"gbk": 1650,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
38,
897,
898,
899
]
},
{
"tb": 24,
"tbk": 1,
"tl": 19050,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
900,
901,
405,
62
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4151,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
902,
903,
202,
141
]
},
{
"tb": 96,
"tbk": 6,
"tl": 3511156,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
654,
655,
656,
657,
904,
221,
46
]
},
{
"tb": 48,
"tbk": 1,
"tl": 445328593,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
905,
906,
907,
908,
909,
910,
911,
912,
913
]
},
{
"tb": 26400,
"tbk": 6,
"tl": 54787,
"mb": 26400,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
654,
655,
656,
657,
914,
915,
916
]
},
{
"tb": 576,
"tbk": 1,
"tl": 528945172,
"mb": 576,
"mbk": 1,
"gb": 576,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
917,
918,
919,
920,
921,
922,
923,
924,
925
]
},
{
"tb": 52806,
"tbk": 6,
"tl": 114073,
"mb": 52806,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
303,
304,
305,
306,
307,
308,
309,
310,
926,
724
]
},
{
"tb": 192,
"tbk": 6,
"tl": 606,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
188,
189,
190,
197,
198,
199,
927,
928,
929
]
},
{
"tb": 2880,
"tbk": 4,
"tl": 3870,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
262,
263,
264,
265,
441,
130,
236,
478
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 322990,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
38,
287,
288,
930
]
},
{
"tb": 192,
"tbk": 6,
"tl": 501,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
864,
865,
866,
867,
868,
869,
870,
871,
227,
228
]
},
{
"tb": 480,
"tbk": 1,
"tl": 530995717,
"mb": 480,
"mbk": 1,
"gb": 480,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
931,
932,
933,
934,
935,
936,
937,
938,
939
]
},
{
"tb": 288,
"tbk": 1,
"tl": 37588291,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
940,
941,
942,
943,
944,
945,
946,
947,
948
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 131081,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
38,
949,
950,
951
]
},
{
"tb": 12582912,
"tbk": 6,
"tl": 5180662,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
38,
949,
952,
953
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 10870,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
447,
954,
955,
268
]
},
{
"tb": 16000,
"tbk": 4,
"tl": 52158,
"mb": 16000,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
956,
210,
650,
450
]
},
{
"tb": 2000,
"tbk": 4,
"tl": 2899,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
957,
958,
959,
960,
961,
962,
963,
964
]
},
{
"tb": 384,
"tbk": 6,
"tl": 1065,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
722,
965
]
},
{
"tb": 288,
"tbk": 2,
"tl": 12239,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
222,
223,
224,
966,
835
]
},
{
"tb": 844800,
"tbk": 6,
"tl": 73950,
"mb": 844800,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
447,
954,
967,
164
]
},
{
"tb": 512,
"tbk": 1,
"tl": 10,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
968,
969,
970,
971,
972,
973,
974,
975
]
},
{
"tb": 48,
"tbk": 1,
"tl": 22844612,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
49,
976,
977,
978,
979,
980,
981,
982,
983
]
},
{
"tb": 96,
"tbk": 1,
"tl": 14569,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
222,
223,
224,
984,
650
]
},
{
"tb": 96,
"tbk": 6,
"tl": 686,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
133,
256,
337,
258,
259,
260,
261
]
},
{
"tb": 288,
"tbk": 2,
"tl": 1775619,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
222,
223,
224,
985,
555
]
},
{
"tb": 6291456,
"tbk": 6,
"tl": 436303,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
38,
287,
288,
986
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 21885921,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
157,
158,
159,
160,
278,
987,
988,
989
]
},
{
"tb": 1536,
"tbk": 2,
"tl": 2696525,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
990,
991,
992,
993,
46
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 153288,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
188,
189,
190,
197,
198,
199,
603,
994,
46
]
},
{
"tb": 288,
"tbk": 2,
"tl": 10971994,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
222,
223,
224,
966,
7
]
},
{
"tb": 6528,
"tbk": 34,
"tl": 13122,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
89,
353,
354,
355,
995,
996,
997
]
},
{
"tb": 469762048,
"tbk": 7,
"tl": 37943587,
"mb": 67108864,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
20,
21,
22,
23,
998
]
},
{
"tb": 13505,
"tbk": 1,
"tl": 19061,
"mb": 13505,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
303,
304,
305,
306,
307,
308,
309,
310,
999,
405
]
},
{
"tb": 72,
"tbk": 3,
"tl": 3854692,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
327,
328,
329,
330,
331,
332,
333,
334,
514,
240,
241,
242
]
},
{
"tb": 704000,
"tbk": 160,
"tl": 811,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
188,
189,
190,
197,
198,
199,
603,
1000,
627
]
},
{
"tb": 2944,
"tbk": 12,
"tl": 1274,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
89,
90,
1001,
1002,
1003,
1004,
1005,
1006,
1007,
1008
]
},
{
"tb": 3608,
"tbk": 18,
"tl": 517,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
229,
230,
231,
232,
233,
234,
1009,
69,
70
]
},
{
"tb": 72,
"tbk": 1,
"tl": 90858,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
133,
1010,
520,
46,
47,
48
]
},
{
"tb": 97920,
"tbk": 48,
"tl": 74087,
"mb": 49152,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
835
]
},
{
"tb": 288,
"tbk": 12,
"tl": 606,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
133,
1011,
522,
523,
524,
525,
526
]
},
{
"tb": 6616,
"tbk": 42,
"tl": 871,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
229,
230,
231,
232,
233,
234,
1009,
69,
1012
]
},
{
"tb": 3840,
"tbk": 16,
"tl": 2413,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
1013,
1014
]
},
{
"tb": 192,
"tbk": 1,
"tl": 18985,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
857,
858,
859,
860,
861,
1015,
1016,
652,
62
]
},
{
"tb": 72,
"tbk": 1,
"tl": 19106,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
857,
1017,
1018,
1019,
1020,
1021,
62
]
},
{
"tb": 512,
"tbk": 1,
"tl": 17,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
1022,
630,
202,
141
]
},
{
"tb": 6072,
"tbk": 11,
"tl": 4250,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
340,
341,
342,
1023,
1024,
1025
]
},
{
"tb": 12582912,
"tbk": 786432,
"tl": 529421,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
188,
189,
190,
197,
198,
199,
1026,
1027,
1028
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 19046,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
303,
304,
305,
306,
307,
308,
309,
310,
1029,
395
]
},
{
"tb": 288,
"tbk": 2,
"tl": 42,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
222,
223,
224,
1030,
450
]
},
{
"tb": 1920,
"tbk": 12,
"tl": 18797508,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1031,
1032,
1033,
1034,
1035
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 1284883,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
188,
189,
190,
197,
198,
199,
204,
205,
206,
207,
389
]
},
{
"tb": 480,
"tbk": 4,
"tl": 12617,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
124,
125,
126,
127,
128,
376,
1036
]
},
{
"tb": 4000,
"tbk": 4,
"tl": 49692,
"mb": 4000,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
157,
273,
274,
275,
276,
1037,
210,
650
]
},
{
"tb": 26400,
"tbk": 6,
"tl": 2039406,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
654,
655,
656,
657,
1038,
1039,
1040
]
},
{
"tb": 26400,
"tbk": 6,
"tl": 54816,
"mb": 26400,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
654,
655,
656,
657,
1041,
915,
916
]
},
{
"tb": 96,
"tbk": 6,
"tl": 629,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
188,
189,
190,
197,
198,
199,
1042,
928,
929
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1279,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
188,
189,
190,
191,
192,
193,
1043,
99,
710
]
},
{
"tb": 1248,
"tbk": 12,
"tl": 314,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
89,
886,
887,
888,
1044,
1045,
1046
]
},
{
"tb": 288,
"tbk": 12,
"tl": 18797560,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
327,
328,
329,
330,
331,
332,
333,
334,
1047,
1035
]
},
{
"tb": 16000,
"tbk": 4,
"tl": 2993,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
100,
667,
668,
669,
1048,
236,
478,
46
]
},
{
"tb": 48,
"tbk": 1,
"tl": 5236,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
1049,
1050,
1051,
1052,
1053,
1054,
1055,
1056
]
},
{
"tb": 3456,
"tbk": 12,
"tl": 4655,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
89,
1057,
1058,
1059,
1060,
1061,
1062
]
},
{
"tb": 208842,
"tbk": 72,
"tl": 69388946,
"mb": 104448,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
557,
558,
559,
560,
1063
]
},
{
"tb": 56,
"tbk": 1,
"tl": 3709,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
133,
1064,
396,
450,
141,
142
]
},
{
"tb": 32,
"tbk": 1,
"tl": 9345,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
188,
189,
190,
191,
192,
193,
1065,
450,
141
]
},
{
"tb": 96,
"tbk": 6,
"tl": 36875470,
"mb": 96,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
188,
189,
190,
197,
198,
199,
513,
845,
453
]
},
{
"tb": 480,
"tbk": 4,
"tl": 231,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
124,
125,
126,
127,
128,
129,
406
]
},
{
"tb": 3608,
"tbk": 18,
"tl": 526,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
229,
230,
231,
232,
233,
234,
1009,
69,
445
]
},
{
"tb": 48,
"tbk": 1,
"tl": 490486512,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
905,
1066,
1067,
1068,
1069,
1070,
1071,
1072,
1073
]
},
{
"tb": 288,
"tbk": 2,
"tl": 991,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
222,
223,
224,
1074,
201
]
},
{
"tb": 83632,
"tbk": 1609,
"tl": 69912191,
"mb": 17120,
"mbk": 13,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
557,
1075,
1076,
1077,
1078,
1079,
1080
]
},
{
"tb": 96,
"tbk": 2,
"tl": 23950980,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
124,
125,
126,
127,
128,
1081,
46
]
},
{
"tb": 16,
"tbk": 1,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
303,
304,
305,
306,
307,
308,
309,
591,
1082,
450
]
},
{
"tb": 52806,
"tbk": 6,
"tl": 163,
"mb": 8801,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
124,
1083,
1084,
1085,
1086,
1087,
1088,
1089,
1090,
1091,
1092
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
303,
304,
305,
306,
307,
308,
309,
316,
649,
136
]
},
{
"tb": 960,
"tbk": 4,
"tl": 1227,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
1012,
1093
]
},
{
"tb": 16000,
"tbk": 125,
"tl": 105,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
1094,
1095,
1096,
1097,
1098,
1099,
1100,
1101
]
},
{
"tb": 512,
"tbk": 1,
"tl": 10565,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
1102,
1103,
1104,
1105,
1106,
1107,
1108,
1109
]
},
{
"tb": 3145728,
"tbk": 6,
"tl": 45157797,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
38,
287,
288,
1110
]
},
{
"tb": 16000,
"tbk": 125,
"tl": 136,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
447,
1111,
210,
650
]
},
{
"tb": 3608,
"tbk": 18,
"tl": 77,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
229,
230,
231,
232,
233,
234,
235,
423,
393
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 53632,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
188,
189,
190,
191,
192,
193,
1112,
407,
46
]
},
{
"tb": 288,
"tbk": 2,
"tl": 5284,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1113,
1114,
1115,
1116,
393
]
},
{
"tb": 844800,
"tbk": 1,
"tl": 7312,
"mb": 844800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
447,
954,
1117,
164
]
},
{
"tb": 192,
"tbk": 6,
"tl": 138,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
124,
1083,
1084,
1085,
1086,
1087,
1088,
1089,
1118,
1091,
1092
]
},
{
"tb": 144,
"tbk": 1,
"tl": 303,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
49,
1119,
1120,
1121,
1122,
1123,
1124,
1125,
1126
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 4433,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
157,
1127,
1128,
1129,
1130,
1131,
1132,
1133,
1134
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3601,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
1135,
1136,
1137,
1138,
1139,
1140,
1141,
1142
]
},
{
"tb": 844800,
"tbk": 192,
"tl": 1063468,
"mb": 844800,
"mbk": 192,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
188,
189,
190,
191,
192,
193,
1143,
1144,
1145
]
},
{
"tb": 384,
"tbk": 6,
"tl": 1023,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
401,
965
]
},
{
"tb": 16000,
"tbk": 4,
"tl": 75859,
"mb": 16000,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
303,
304,
305,
306,
307,
308,
309,
310,
1146,
883
]
}
],
"ftbl": [
"[root]",
"0x648e809f1b79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x648e809f0319: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x648e80582122: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x648e8058f6b9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x648e80763d91: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x648e806b22c9: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:534:17)",
"0x648e80514428: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x648e8048a4a9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x648e80554dbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e806c33c1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806c33c1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806c33c1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806c33c1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e807989db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e8078bd06: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803ddeab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e805a5d9f: winter_verifier::perform_verification (verifier/src/lib.rs:216:40)",
"0x648e809ef6cc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x648e809edd9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x648e809eecf8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x648e809eecf8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x648e809eb964: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x648e809ebc13: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x648e8085a01d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x648e8055290c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e806daf91: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806daf91: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806daf91: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806daf91: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e80795edb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e8078f626: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803db4ab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e80640ba6: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:630:42)",
"0x648e805530ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e8070b736: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e8070b736: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e8070b736: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e80497e7b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x648e80607be1: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x648e80604fbc: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x648e8060a211: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x648e8070b466: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e8070b466: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e8070b466: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e8062c051: winter_prover::Prover::generate_proof (prover/src/lib.rs:301:32)",
"0x648e8064ccd4: winter_prover::Prover::prove (prover/src/lib.rs:171:37)",
"0x648e8040e2b2: <examples::do_work::DoWorkExample<H> as examples::Example>::prove (src/do_work/mod.rs:108:9)",
"0x648e80266d4d: winterfell::main (examples/src/main.rs:49:17)",
"0x648e8054f9fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e806e9f37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806e9f37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806e9f37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806e9f37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e807992be: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e807922d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803dc4de: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e806012c4: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:198:23)",
"0x648e80993012: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x648e809941a9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x648e80995878: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x648e8098bc1a: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:13)",
"0x648e802678fd: winterfell::main (examples/src/main.rs:80:24)",
"0x648e80973899: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x648e808e00aa: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e808bb656: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e808bb656: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e808bb656: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e80594d1c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x648e807a1b5e: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x648e8045fd3c: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x648e805a698e: winter_verifier::perform_verification (verifier/src/lib.rs:303:42)",
"0x648e80557f9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e806d5d37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806d5d37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806d5d37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806d5d37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e8079726e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e8078a6a7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803dcdde: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e80640d43: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:638:34)",
"0x648e806d1777: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806d1777: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806d1777: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806d1777: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e807962de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e80792697: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803deb8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e8067f131: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x648e8099f739: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x648e8099d8ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e80999b6c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e80999b6c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e80999b6c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x648e8099962c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x648e8099962c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x648e8099962c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x648e809996b6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x648e8067fb2b: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x648e806af73c: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x648e80557a5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e806c69a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806c69a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806c69a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806c69a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e8079871e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e8078b517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803dd37e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e8067ff51: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x648e8085108f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x648e80556a9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e806f0111: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806f0111: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806f0111: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806f0111: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e807959fb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e8078ecc6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803dd86b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e8052da5c: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:82:9)",
"0x648e8099dda0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x648e809995f9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x648e809985a1: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x648e80998eb0: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x648e80870e9d: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x648e80985799: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x648e80980b39: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x648e808e3830: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x648e808e5899: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x648e808c0451: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x648e8079ff53: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x648e8085e274: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x648e8048bf42: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x648e80607d04: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x648e80489937: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x648e8085982c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x648e80661b58: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x648e80517a03: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x648e8062b656: winter_prover::Prover::generate_proof (prover/src/lib.rs:228:27)",
"0x648e807d2312: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x648e8060fd16: <examples::do_work::air::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (src/do_work/air.rs:13:9)",
"0x648e805af718: winter_verifier::verify (verifier/src/lib.rs:97:38)",
"0x648e8040ed99: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:118:9)",
"0x648e802679d5: winterfell::main (examples/src/main.rs:83:11)",
"0x648e809ab81b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x648e809ab541: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x648e809a7d7b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x648e809a23a1: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x648e809a2b37: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x648e8099d6db: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x648e806c9317: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806c9317: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806c9317: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806c9317: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e8079706e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e80792587: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803db47e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e80606c6a: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x648e8054da9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e8070b916: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e8070b916: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e8070b916: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e8065f7e9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x648e80590f24: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x648e807e4152: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x648e80451583: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x648e806eb9d1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806eb9d1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806eb9d1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806eb9d1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e80797cfb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e80790026: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803de64b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e80463c9f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x648e807d22ef: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x648e80562982: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x648e8058ec39: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x648e80767a51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x648e806076c9: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x648e8050b30d: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x648e8054e7bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e806fbb27: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806fbb27: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806fbb27: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806fbb27: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e80774b76: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x648e8078eba7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803ddd6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e8066cd5b: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x648e8043041c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e8043041c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e8043041c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x648e8043093c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x648e8043093c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x648e8043093c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x648e807b33df: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:226:50)",
"0x648e807b0903: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x648e806413dd: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:659:26)",
"0x648e8077b939: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x648e8077b939: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x648e8077b939: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x648e807a6693: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x648e805a6c0f: winter_verifier::perform_verification (verifier/src/lib.rs:308:25)",
"0x648e805af9d2: winter_verifier::verify (verifier/src/lib.rs:110:21)",
"0x648e80851103: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x648e8070abc3: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x648e8077c1f9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x648e8077c1f9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x648e8077c1f9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x648e80709067: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x648e8053c04d: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x648e8054339c: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x648e806df787: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806df787: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806df787: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806df787: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e8079667e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e8078d807: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803df71e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e8048f33a: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:132:32)",
"0x648e8061008f: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:60:9)",
"0x648e804910ab: winter_prover::trace::Trace::validate (src/trace/mod.rs:122:26)",
"0x648e8062ff21: winter_prover::Prover::generate_proof (prover/src/lib.rs:370:17)",
"0x648e8057b972: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x648e8058fa19: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x648e80765402: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x648e8062f7ad: winter_prover::Prover::generate_proof (prover/src/lib.rs:438:13)",
"0x648e80878983: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x648e806b1c22: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:348:9)",
"0x648e8082464a: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:25:25)",
"0x648e808f16ac: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e808f16ac: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e808f16ac: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x648e808c24a9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x648e808c24a9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x648e808c24a9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x648e8079fa2c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x648e80871152: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x648e807f50c6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e807f50c6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e807f50c6: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x648e8077c039: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x648e8077c039: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x648e8077c039: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x648e80604ca3: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x648e8062c583: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:33)",
"0x648e805577bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e8070b876: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e8070b876: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e8070b876: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e8062bfc9: winter_prover::Prover::generate_proof (prover/src/lib.rs:299:44)",
"0x648e80671a92: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x648e804484c6: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:493:32)",
"0x648e803fe09a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x648e804cb2a2: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x648e803c9c9b: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x648e803e6906: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x648e807c8e95: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x648e8061012c: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:62:13)",
"0x648e806b1985: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:364:13)",
"0x648e8052e670: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:40:22)",
"0x648e8082a6e7: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:13)",
"0x648e8062fb32: winter_prover::Prover::generate_proof (prover/src/lib.rs:403:21)",
"0x648e80551e8c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e8070b966: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e8070b966: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e8070b966: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e80590c9d: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x648e807ecca7: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x648e8047877b: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x648e8046423c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x648e80479e22: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x648e8050f5c4: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x648e8082fd04: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x648e8065ff58: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e8065ff58: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e8065ff58: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x648e8077ac17: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x648e8079f698: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x648e80497fbb: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x648e804951f6: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x648e80864c8f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x648e808721b2: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x648e807da10a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x648e80665bd9: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x648e80874c0e: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x648e80872104: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x648e8062e38b: winter_prover::Prover::generate_proof (prover/src/lib.rs:561:9)",
"0x648e8048c393: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x648e8065c018: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x648e80874ab6: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x648e80441b09: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:211:31)",
"0x648e803f8d3a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x648e804e90a8: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x648e803c23ba: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x648e803e263a: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x648e8085a95b: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x648e806619cc: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x648e807cc02b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x648e807cb681: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x648e805df12b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x648e805b48bd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x648e8047df89: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x648e80659a00: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x648e809f05ca: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e809f1bbc: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e809f1bbc: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e809f1bbc: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x648e809f27fc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x648e809f27fc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x648e809f27fc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x648e809efe2c: <winter_utils::serde::byte_reader::SliceReader as winter_utils::serde::byte_reader::ByteReader>::read_vec (src/serde/byte_reader.rs:151:22)",
"0x648e80995118: <winter_air::proof::context::Context as winter_utils::serde::Deserializable>::read_from (src/proof/context.rs:184:35)",
"0x648e8098abf7: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:27)",
"0x648e8048b9cb: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x648e803f832c: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x648e80661954: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x648e80661df4: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x648e80661ad6: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x648e80549e5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e806f5771: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806f5771: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806f5771: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806f5771: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e807960cb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e8078f9c6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803dc0cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e80606e5a: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x648e80552e4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e804302ec: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e804302ec: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e804302ec: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x648e8077cf19: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x648e8077cf19: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x648e8077cf19: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x648e807f55d6: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x648e8052dbd9: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:82:31)",
"0x648e80403553: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x648e806100bd: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:61:13)",
"0x648e80824b4c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:63:9)",
"0x648e805a7247: winter_verifier::perform_verification (verifier/src/lib.rs:223:43)",
"0x648e807cbccb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x648e807cb471: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x648e805dff0b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x648e805d8451: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x648e805de77d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x648e805d210e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x648e807f49a3: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x648e8087882c: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x648e8082a63b: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:50:13)",
"0x648e8058bf22: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x648e8058efc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x648e80768aaf: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x648e807e45d9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x648e809abb7b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x648e809ab5f1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x648e809a7bbb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x648e809a166d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x648e8099c538: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x648e8099add7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x648e806cb911: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806cb911: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806cb911: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806cb911: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e80796f1b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e80792516: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803dc20b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e80463bd7: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x648e8054ff3a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e806c115e: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806c115e: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806c115e: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806c115e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x648e8079721e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e8078c957: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e8082376e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e807a6755: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:144:35)",
"0x648e806624f8: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x648e805a66c1: winter_verifier::perform_verification (verifier/src/lib.rs:295:27)",
"0x648e806c47e7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806c47e7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806c47e7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806c47e7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e8079873e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e8078e7f7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803df32e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e80600d13: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:253:9)",
"0x648e8070a856: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e8070a856: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e8070a856: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x648e80604d29: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x648e8062f7ed: winter_prover::Prover::generate_proof (prover/src/lib.rs:439:13)",
"0x648e807ef51a: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x648e80665a53: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x648e8066fcb4: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x648e8098fa1e: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:168:21)",
"0x648e8098ae38: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:176:34)",
"0x648e80463fa8: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x648e80586152: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x648e8058f389: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x648e80767ff2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x648e80864f89: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x648e806b8bb8: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:510:13)",
"0x648e805a59d9: winter_verifier::perform_verification (verifier/src/lib.rs:183:13)",
"0x648e8060b83e: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x648e8098fd02: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:348:22)",
"0x648e8098ae53: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:174:32)",
"0x648e8087c495: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x648e8062ebc5: winter_prover::Prover::generate_proof (prover/src/lib.rs:598:34)",
"0x648e8060fe42: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::new (src/do_work/air.rs:35:23)",
"0x648e805b08d1: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:101:85)",
"0x648e80401432: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x648e8051dc0a: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:107:27)",
"0x648e8043abff: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x648e8051b9a4: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:113:9)",
"0x648e8054d2bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e80705ffe: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e80705ffe: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e80705ffe: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e80705ffe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x648e8079743b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e8078eb76: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e8083010b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e8045d01c: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x648e80665b07: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x648e806047be: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x648e80602f17: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x648e804425ac: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:293:57)",
"0x648e807b74a2: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x648e807b6147: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x648e80640df7: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:645:31)",
"0x648e80601723: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:200:34)",
"0x648e803f0b0a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x648e804c41bf: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x648e807ccdab: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x648e807cb7e1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x648e805df4eb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x648e805b479d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x648e8047d0fc: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x648e8047a911: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x648e8065b81d: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x648e8062df26: winter_prover::Prover::generate_proof (prover/src/lib.rs:548:13)",
"0x648e8079f6ff: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x648e807c0bc2: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x648e8065e240: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x648e807d4bb1: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x648e8045f2ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x648e805a6810: winter_verifier::perform_verification (verifier/src/lib.rs:302:9)",
"0x648e8042e909: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x648e807bf8ce: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x648e80465185: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x648e805af907: winter_verifier::verify (verifier/src/lib.rs:108:19)",
"0x648e8060b7d0: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x648e8082b819: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:129:9)",
"0x648e8062fbd3: winter_prover::Prover::generate_proof (prover/src/lib.rs:407:21)",
"0x648e8055751c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e80703907: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e80703907: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e80703907: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e80703907: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e80796fde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e80790627: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803db93e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e8040ed54: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:112:30)",
"0x648e809942bd: <winter_air::proof::commitments::Commitments as winter_utils::serde::Deserializable>::read_from (src/proof/commitments.rs:108:22)",
"0x648e8098abdc: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:167:27)",
"0x648e80993502: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x648e80994179: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x648e80995ae2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x648e8098b916: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:13)",
"0x648e806ce727: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806ce727: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806ce727: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806ce727: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e807985de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e8078e507: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803decfe: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e80608277: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x648e80870c77: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x648e8062ea4f: winter_prover::Prover::generate_proof (prover/src/lib.rs:590:25)",
"0x648e806d8187: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806d8187: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806d8187: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806d8187: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e8079929e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e8078de27: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803db7ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e807a695b: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x648e805707b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x648e8058ed89: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x648e80764f32: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x648e805a748c: winter_verifier::perform_verification (verifier/src/lib.rs:182:9)",
"0x648e8062f665: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:17)",
"0x648e8052b7fb: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x648e80463e38: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x648e80606db1: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x648e803f64aa: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x648e80836a05: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x648e806cc5b7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806cc5b7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806cc5b7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806cc5b7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e80795b0e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e8078da37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803dd2be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e80665c76: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x648e8055266c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e8070ae1c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e8070ae1c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e8070ae1c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x648e8077be79: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x648e8077be79: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x648e8077be79: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x648e8062d6be: winter_prover::Prover::generate_proof (prover/src/lib.rs:500:39)",
"0x648e807f55ed: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x648e807f5440: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x648e80604c8c: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x648e8070b556: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e8070b556: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e8070b556: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e807d9782: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x648e8062eace: winter_prover::Prover::generate_proof (prover/src/lib.rs:593:29)",
"0x648e807f441a: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x648e806bc5ae: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x648e8047a89d: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x648e806bbcce: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x648e806be6c6: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x648e806b19ea: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:362:9)",
"0x648e80498303: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x648e80864c25: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x648e806d9666: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806d9666: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806d9666: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806d9666: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x648e80795b6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e8078e5dc: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e8079d9be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e8079fedb: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x648e80378149: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x648e80376c19: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x648e80375030: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x648e80375298: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x648e80374b5a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x648e80374b5a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x648e802696a1: alloc::string::String::reserve (alloc/src/string.rs:1152:9)",
"0x648e802696a1: <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend (alloc/src/string.rs:2173:14)",
"0x648e8026977c: <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter (alloc/src/string.rs:2093:9)",
"0x648e80609ca7: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x648e80447bb0: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:221:17)",
"0x648e803f2922: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x648e808214dd: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::SpecFold>::spec_fold (iter/adapters/zip.rs:685:25)",
"0x648e8080dee7: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::fold (iter/adapters/zip.rs:249:9)",
"0x648e807f89b7: <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/zip.rs:103:9)",
"0x648e805af5a9: winter_verifier::verify (verifier/src/lib.rs:95:32)",
"0x648e807a7848: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x648e807d26ec: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x648e8062d868: winter_prover::Prover::generate_proof (prover/src/lib.rs:514:9)",
"0x648e807bf6fb: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x648e809f0ab0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x648e809f0ce9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x648e809f1f12: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x648e809f0d49: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x648e80996d7a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x648e8082b4c0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:28)",
"0x648e8054ab7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e806ecf11: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806ecf11: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806ecf11: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806ecf11: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e807973db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e8078cd46: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803dbacb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e8066fc0e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x648e80672eb0: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x648e8062b8ba: winter_prover::Prover::generate_proof (prover/src/lib.rs:257:22)",
"0x648e8079ee5d: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x648e807a2406: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x648e807ae866: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x648e8054c83c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e8070b786: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e8070b786: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e8070b786: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e8062bf85: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:39)",
"0x648e80870c96: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x648e8077aebb: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e8077aebb: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e8077aebb: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e8077aebb: <[V] as alloc::slice::Concat<T>>::concat (alloc/src/slice.rs:712:26)",
"0x648e8077acab: alloc::slice::<impl [T]>::concat (alloc/src/slice.rs:561:9)",
"0x648e807b3527: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:228:37)",
"0x648e8065b151: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x648e80672df3: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x648e809ebd9e: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x648e8066201f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x648e80519f5f: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x648e8055727c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e806c8557: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806c8557: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806c8557: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806c8557: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e8077679d: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x648e8079221c: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803de4ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e8060e82a: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x648e80709097: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x648e807d1ea2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x648e807b51ab: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x648e807b4696: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x648e806494e4: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:691:36)",
"0x648e806efee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806efee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806efee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806efee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e80795dde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e8078cc57: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803df47e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e807f4994: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x648e80604d84: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x648e8054d01c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e806db7f7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806db7f7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806db7f7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806db7f7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e80797b7e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e80791f39: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803dc0ee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e8062b603: winter_prover::Prover::generate_proof (prover/src/lib.rs:217:20)",
"0x648e80669199: winter_prover::trace::commitment::build_segment_queries::{{closure}}::{{closure}} (src/trace/commitment.rs:164:27)",
"0x648e804e7019: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x648e80667736: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:159:13)",
"0x648e807aa1a4: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x648e805a6cbe: winter_verifier::perform_verification (verifier/src/lib.rs:314:25)",
"0x648e807b0940: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x648e80549bbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e806d2991: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806d2991: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806d2991: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806d2991: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e8079837b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e8078ded6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803db78b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e805a5cd2: winter_verifier::perform_verification (verifier/src/lib.rs:212:41)",
"0x648e806fdf17: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806fdf17: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806fdf17: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806fdf17: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e80797b2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e8078d147: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803dca9e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e8062b416: winter_prover::Prover::generate_proof (prover/src/lib.rs:205:38)",
"0x648e80661b12: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x648e8046460c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x648e809908d2: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:215:25)",
"0x648e8098b15d: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:188:24)",
"0x648e807d1f64: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:142:33)",
"0x648e804309f5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e804309f5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e804309f5: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x648e8077abf4: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x648e80827f6c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:148:31)",
"0x648e8082b9e0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:122:17)",
"0x648e8050b436: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x648e807b0872: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x648e8062bc88: winter_prover::Prover::generate_proof (prover/src/lib.rs:268:13)",
"0x648e807be835: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x648e805141d0: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x648e80592564: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x648e807d9a51: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x648e8070bb46: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e8070bb46: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e8070bb46: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e80497d3b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x648e80856e2b: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x648e807ad76a: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x648e803f4c7a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x648e807cc6eb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x648e807cb891: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x648e805def4b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x648e805b49dd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x648e8047d83f: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x648e806596c3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x648e80851450: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x648e80569622: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x648e8058f839: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x648e80768252: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x648e807d9db8: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x648e80570ca2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x648e8058f539: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x648e80767b42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x648e8079affc: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x648e806bbd4a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x648e807b3476: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:228:38)",
"0x648e806f12f0: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806f12f0: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806f12f0: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806f12f0: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x648e807955bb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e80790da6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803dcdbb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e807e4075: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x648e8055823c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e806f5977: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806f5977: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806f5977: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806f5977: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e8079665e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e8078a517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803db60e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e8062d5d6: winter_prover::Prover::generate_proof (prover/src/lib.rs:491:51)",
"0x648e80537175: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x648e8067f1a5: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x648e805a6e15: winter_verifier::perform_verification (verifier/src/lib.rs:320:5)",
"0x648e8055140c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e806e0bc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806e0bc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806e0bc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806e0bc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e80796a9e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e80791c79: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803dc94e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e8052e77a: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:50:26)",
"0x648e807e88e0: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x648e8087c65e: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x648e806b8c93: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:505:13)",
"0x648e80994784: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:155:27)",
"0x648e8098b178: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:29)",
"0x648e806f7c51: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806f7c51: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806f7c51: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806f7c51: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e80795f6b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e80790a96: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803dd53b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e80463a47: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x648e807a6bf3: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x648e807a6853: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x648e8054f4bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e807024c8: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e807024c8: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e807024c8: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e807024c8: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x648e8079972e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e80790407: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e8087917e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e806bce5c: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x648e8060fb27: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x648e8060d8cd: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x648e80587022: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x648e8058f9e9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x648e80766842: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x648e805a7673: winter_verifier::perform_verification (verifier/src/lib.rs:177:9)",
"0x648e804488e9: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:641:17)",
"0x648e806c0c21: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806c0c21: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806c0c21: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806c0c21: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e807973ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e8078aac6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803df01b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e8062d6a3: winter_prover::Prover::generate_proof (prover/src/lib.rs:495:52)",
"0x648e807b5c77: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x648e807adc8c: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x648e807b47bc: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x648e8057c842: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x648e8058f419: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x648e80764ba2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x648e8054357e: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x648e806fd451: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806fd451: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806fd451: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806fd451: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e807967db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e8078b136: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803dc65b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e8046397f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x648e8054d55c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e806f71c7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806f71c7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806f71c7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806f71c7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e8079606e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e8078b2c7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e8052942e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e8062b79f: winter_prover::Prover::generate_proof (prover/src/lib.rs:243:41)",
"0x648e8046527d: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x648e807aa3d9: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x648e807ef5d7: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x648e80864e0b: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x648e8070bcd6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e8070bcd6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e8070bcd6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e8062c00d: winter_prover::Prover::generate_proof (prover/src/lib.rs:300:37)",
"0x648e807d2580: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x648e8087c6eb: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x648e8057e5e2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x648e8058f209: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x648e807690e2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x648e8046549b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x648e806f6637: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806f6637: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806f6637: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806f6637: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e80799ade: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e807924b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803dcd0e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e8062be32: winter_prover::Prover::generate_proof (prover/src/lib.rs:286:23)",
"0x648e807a6bd0: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x648e8085a00c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x648e80554b1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e806dd7cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806dd7cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806dd7cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806dd7cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x648e8079886e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e8078a947: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803dbe8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e806bbbf6: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x648e8054e51c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e807c02be: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e807c02be: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e807c02be: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x648e8077ab77: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x648e80517c58: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x648e806b208d: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:540:13)",
"0x648e80827fd0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:149:33)",
"0x648e8054bdbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e806ef127: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806ef127: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806ef127: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806ef127: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e8079601e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e8078c6b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803defae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e807ace38: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x648e80546fee: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x648e8046442b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x648e805a613b: winter_verifier::perform_verification (verifier/src/lib.rs:263:61)",
"0x648e80864caa: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x648e8067fa4e: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x648e805cad8f: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x648e805d6711: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x648e805d1caa: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x648e80573912: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x648e8058f119: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x648e8076494f: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x648e8079fd8a: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x648e8082b58d: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:33)",
"0x648e80596191: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x648e806dfee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806dfee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806dfee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806dfee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e8076fbcf: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x648e8078d849: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803dce5e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e805af784: winter_verifier::verify (verifier/src/lib.rs:101:24)",
"0x648e80851184: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x648e80680010: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x648e80991709: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x648e809924bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e80995776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e80995776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e80995776: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e80870bcd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x648e807d9c60: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x648e8054c2fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e80853776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e80853776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e80853776: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x648e8077c3b9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x648e8077c3b9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x648e8077c3b9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x648e80878846: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x648e805552fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e806d2135: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806d2135: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806d2135: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806d2135: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x648e8079610e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e8078b737: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803dbcce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e807b31b0: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:218:46)",
"0x648e808247eb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:39:30)",
"0x648e80990f46: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:365:21)",
"0x648e809903d6: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:146:27)",
"0x648e807e89fc: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x648e807b326a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x648e809abd2b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x648e809ab751: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x648e809a7adb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x648e809a476e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x648e809a6220: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x648e809a5428: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x648e8052b9d0: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x648e806abd61: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x648e805a633e: winter_verifier::perform_verification (verifier/src/lib.rs:272:24)",
"0x648e808513fb: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x648e80517a1e: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x648e8048f511: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:132:51)",
"0x648e803f1a1a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x648e80834da5: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x648e80991187: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x648e8098ffed: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:357:24)",
"0x648e807a3af6: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x648e805a6d3a: winter_verifier::perform_verification (verifier/src/lib.rs:316:28)",
"0x648e80491598: winter_prover::trace::Trace::validate (src/trace/mod.rs:177:13)",
"0x648e8055070a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e806e2781: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806e2781: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806e2781: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806e2781: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e80797dab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e8078c306: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803dc09b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e80640c73: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:634:36)",
"0x648e8044ecb0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x648e805ac869: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:214:32)",
"0x648e803f1603: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x648e80548c0c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e806eab31: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806eab31: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806eab31: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806eab31: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e807980ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e8078c5a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803dde5b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e80517967: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x648e809945bd: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:151:28)",
"0x648e8048023f: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x648e80480307: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x648e805a7156: winter_verifier::perform_verification (verifier/src/lib.rs:225:13)",
"0x648e8065b833: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x648e8055194c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e806c5ae7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806c5ae7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806c5ae7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806c5ae7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e8079753e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e80791d37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803ddd4e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e8064d619: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces (src/do_work/prover.rs:30:9)",
"0x648e8054991c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e806d3dc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806d3dc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806d3dc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806d3dc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e807756b3: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x648e8078abc9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803dd01e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e8062bf62: winter_prover::Prover::generate_proof (prover/src/lib.rs:291:36)",
"0x648e8048d47b: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x648e807ef42f: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x648e807ef504: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x648e806078b6: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x648e8060b76c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x648e807f64cb: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x648e807eca9a: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x648e8053bd7b: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x648e806d0227: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806d0227: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806d0227: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806d0227: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e8079623e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e8078dd47: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803debee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e8068010f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x648e80515484: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x648e806b2239: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:536:13)",
"0x648e807e4524: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x648e806e1877: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806e1877: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806e1877: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806e1877: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e8079670e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e80792317: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803deace: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e807aa532: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x648e806fe9a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806fe9a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806fe9a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806fe9a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e807993de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e807904c9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803deede: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e8048b5e0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x648e80543629: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x648e807d2810: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x648e80609f48: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x648e807ae7a5: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x648e806498e7: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:706:26)",
"0x648e8062d110: winter_prover::Prover::generate_proof (prover/src/lib.rs:472:37)",
"0x648e8057dc02: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x648e8058ecc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x648e80768d48: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x648e8062fbf6: winter_prover::Prover::generate_proof (prover/src/lib.rs:408:17)",
"0x648e8062cc77: winter_prover::Prover::generate_proof (prover/src/lib.rs:442:35)",
"0x648e809a487e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x648e809a5c4c: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x648e809a4d8a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x648e80856e40: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x648e8098fec9: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:352:21)",
"0x648e8066911b: winter_prover::trace::commitment::build_segment_queries::{{closure}}::{{closure}} (src/trace/commitment.rs:162:42)",
"0x648e8099e1a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e8099e1a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e8099e1a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e8099e1a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x648e8099e5ee: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e8099e5b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e8099f84e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e8099d299: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x648e80594f79: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x648e8066fc1d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x648e807f4299: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x648e8044b53c: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x648e80675a48: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x648e8067fdda: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x648e809902b9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x648e8099070b: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:211:22)",
"0x648e8099275c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e80995726: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e80995726: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e80995726: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e8098ad52: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:172:33)",
"0x648e807aa1bf: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x648e805b9d31: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x648e805bd477: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x648e805b21bb: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x648e80877cb7: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x648e80829a27: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:272:18)",
"0x648e80828297: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:166:30)",
"0x648e8098f862: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:164:22)",
"0x648e804653ef: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x648e80567392: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x648e8058ea59: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x648e80763b42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x648e805310d9: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:174:17)",
"0x648e8052ef30: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:54:17)",
"0x648e80512499: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x648e8053bd36: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x648e8048e87b: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:235:25)",
"0x648e80859a62: examples::do_work::prover::build_do_work_trace (src/do_work/prover.rs:65:5)",
"0x648e8064d668: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces::{{closure}} (src/do_work/prover.rs:32:27)",
"0x648e8044ec8d: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x648e8048022a: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x648e8067f214: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x648e809a16cd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x648e8099c84b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x648e8099af13: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x648e80530f72: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:169:36)",
"0x648e8085e35d: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x648e806c9541: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806c9541: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806c9541: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806c9541: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e8079790b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e8078d276: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803dd45b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e80463b0f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x648e809ab9cb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x648e809ab6a1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x648e809a7c9b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x648e809a2471: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x648e809a2af7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x648e8099d72b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x648e807be6ed: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x648e804516f1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x648e80464cae: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x648e806f5ba1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806f5ba1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806f5ba1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806f5ba1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e80798b3b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e807900b6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803dc6cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e8062bc5d: winter_prover::Prover::generate_proof (prover/src/lib.rs:266:43)",
"0x648e807a789e: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x648e809f0d18: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x648e809f200a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x648e809f200a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x648e809f1dae: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x648e809f1dae: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x648e809f1e9d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x648e8062f808: winter_prover::Prover::generate_proof (prover/src/lib.rs:440:13)",
"0x648e804637d0: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x648e80980e7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x648e808f157c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e808f157c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e808f157c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x648e808c1cc9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x648e808c1cc9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x648e808c1cc9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x648e806b0e2a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x648e807c01f6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x648e80464c48: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x648e8067fbf6: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x648e806e2107: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806e2107: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806e2107: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806e2107: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e807974fe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e807914b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803de86e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e806a7d8f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x648e806ca197: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806ca197: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806ca197: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806ca197: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e80798f6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e8078a599: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803ddc6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e807abe47: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x648e80601210: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:197:28)",
"0x648e8053bf3a: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x648e8087c6d0: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x648e8057d712: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x648e8058f149: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x648e80766122: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x648e80665c91: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x648e807e3d42: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x648e806b0e3f: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x648e806c6141: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806c6141: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806c6141: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806c6141: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e80798f9b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e8078d346: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803db88b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e8062b4e3: winter_prover::Prover::generate_proof (prover/src/lib.rs:209:39)",
"0x648e806f4f40: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806f4f40: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806f4f40: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806f4f40: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x648e8079714b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e8078e8a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803db27b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e807ecbca: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x648e806c76b1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x648e806c76b1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x648e806c76b1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x648e806c76b1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x648e8079571b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x648e8078ee16: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x648e803de23b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x648e80451409: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x648e80668078: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x648e8040161a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x648e804b9e45: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x648e80990dc4: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:361:22)"
]
}