{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell do-work -n 7 -l 65536",
"pid": 29668,
"tg": 554101839,
"te": 598652170,
"pps": [
{
"tb": 1024,
"tbk": 1,
"tl": 3964,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9
]
},
{
"tb": 985600,
"tbk": 224,
"tl": 1454759,
"mb": 985600,
"mbk": 224,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
13,
14,
15,
16,
17,
18,
19
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 7661,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
22,
23,
24,
25,
26
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
27,
28,
29,
30,
31,
32,
33,
34,
35,
36
]
},
{
"tb": 29360352,
"tbk": 21,
"tl": 528373,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
37,
38,
39,
40,
41,
42,
43
]
},
{
"tb": 512,
"tbk": 1,
"tl": 36,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
13,
44,
45,
46,
47,
48,
49
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 609,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
37,
38,
39,
40,
50,
51,
52
]
},
{
"tb": 56,
"tbk": 1,
"tl": 5717,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 550,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69
]
},
{
"tb": 336,
"tbk": 1,
"tl": 43500816,
"mb": 336,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
70,
71,
72,
73,
74,
75,
76,
77,
78
]
},
{
"tb": 6904,
"tbk": 42,
"tl": 157,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
53,
54,
79,
80,
81,
82,
83,
84,
85,
69,
86
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
89,
36,
90,
91,
92
]
},
{
"tb": 144,
"tbk": 1,
"tl": 1508261,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
93,
94,
95,
96,
97,
98,
99,
100,
101,
91
]
},
{
"tb": 72,
"tbk": 1,
"tl": 1509031,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
102,
103,
104,
105,
106,
107,
108,
109,
101,
91
]
},
{
"tb": 56,
"tbk": 1,
"tl": 5698,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
53,
54,
110,
111,
112,
113,
114,
115,
116,
117
]
},
{
"tb": 768,
"tbk": 1,
"tl": 4716,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
118,
119,
120,
121,
122,
123,
124,
125
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 736816,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
37,
38,
39,
40,
126,
127,
128
]
},
{
"tb": 112,
"tbk": 1,
"tl": 321,
"mb": 112,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
129,
130,
131,
132,
133,
134,
135,
136,
91,
92
]
},
{
"tb": 280,
"tbk": 1,
"tl": 498681796,
"mb": 280,
"mbk": 1,
"gb": 280,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
137,
138,
139,
140,
141,
142,
143,
144,
145
]
},
{
"tb": 112,
"tbk": 7,
"tl": 10877390,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
13,
14,
15,
16,
146,
147,
148
]
},
{
"tb": 3328,
"tbk": 32,
"tl": 466,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
150,
151,
152,
153,
154,
155
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
27,
28,
29,
30,
31,
32,
33,
34,
156,
157
]
},
{
"tb": 1536,
"tbk": 2,
"tl": 4472846,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
158,
159,
160,
161,
91
]
},
{
"tb": 768,
"tbk": 1,
"tl": 4144,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
118,
119,
120,
121,
122,
162,
163,
164
]
},
{
"tb": 224,
"tbk": 1,
"tl": 15798,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
165,
166,
167,
168,
169
]
},
{
"tb": 96,
"tbk": 2,
"tl": 27566818,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
170,
91
]
},
{
"tb": 112,
"tbk": 7,
"tl": 507,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
171,
172,
173,
174,
175,
176,
177
]
},
{
"tb": 256,
"tbk": 1,
"tl": 665,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
53,
54,
178,
179,
180,
181,
182,
183,
184
]
},
{
"tb": 224,
"tbk": 7,
"tl": 1560,
"mb": 224,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
185,
186,
187,
188,
189,
190
]
},
{
"tb": 2348810240,
"tbk": 1,
"tl": 51766165,
"mb": 2348810240,
"mbk": 1,
"gb": 2348810240,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
13,
44,
45,
46,
191,
192,
193
]
},
{
"tb": 672,
"tbk": 7,
"tl": 90,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
194,
195,
196,
91,
92,
197
]
},
{
"tb": 96,
"tbk": 2,
"tl": 3545,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
198,
199
]
},
{
"tb": 288,
"tbk": 2,
"tl": 2015,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
200,
201,
202,
203,
48
]
},
{
"tb": 288,
"tbk": 2,
"tl": 2012,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
200,
201,
202,
204,
48
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1261,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
13,
14,
15,
16,
205,
206,
207
]
},
{
"tb": 336,
"tbk": 7,
"tl": 51775,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
208,
209,
91,
92,
197
]
},
{
"tb": 256,
"tbk": 1,
"tl": 20604,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
27,
28,
29,
30,
31,
32,
33,
210,
211,
212
]
},
{
"tb": 112,
"tbk": 7,
"tl": 145872,
"mb": 112,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
27,
28,
29,
30,
31,
32,
33,
210,
213,
214
]
},
{
"tb": 7340032,
"tbk": 7,
"tl": 2791489,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
37,
38,
39,
40,
215,
216,
217
]
},
{
"tb": 1512,
"tbk": 1,
"tl": 596147927,
"mb": 1512,
"mbk": 1,
"gb": 1512,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
218,
219,
220,
221,
222,
223,
224,
225,
226
]
},
{
"tb": 62285414400,
"tbk": 3145728,
"tl": 43466574,
"mb": 57200,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
227,
228,
229,
230,
231,
232,
233,
234
]
},
{
"tb": 896,
"tbk": 6,
"tl": 2471,
"mb": 384,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
235,
236,
237,
238,
69
]
},
{
"tb": 72,
"tbk": 1,
"tl": 158689,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
239,
240,
91,
92,
197
]
},
{
"tb": 30800,
"tbk": 7,
"tl": 69283,
"mb": 30800,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
241,
242,
243,
244,
245,
246,
247
]
},
{
"tb": 992,
"tbk": 4,
"tl": 4400,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
248,
249,
250,
251,
252,
253,
254,
255,
256,
206
]
},
{
"tb": 56,
"tbk": 1,
"tl": 498681730,
"mb": 56,
"mbk": 1,
"gb": 56,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
257,
258,
259,
260,
261,
262,
263,
264,
265
]
},
{
"tb": 576,
"tbk": 2,
"tl": 14612,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
266,
267,
268,
269,
49
]
},
{
"tb": 168,
"tbk": 1,
"tl": 43497684,
"mb": 168,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
102,
270,
271,
272,
273,
91,
92,
197
]
},
{
"tb": 2688,
"tbk": 14,
"tl": 454,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
274,
275,
276,
277,
278,
279,
280,
281,
282
]
},
{
"tb": 448,
"tbk": 7,
"tl": 1111,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
283,
284,
285,
286,
287
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 525,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
171,
172,
173,
174,
175,
176,
288
]
},
{
"tb": 72,
"tbk": 3,
"tl": 4524690,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
290,
291,
292,
293,
294,
295,
296,
297,
97,
98,
99
]
},
{
"tb": 32,
"tbk": 1,
"tl": 10144,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
13,
14,
15,
16,
298,
299,
300
]
},
{
"tb": 224,
"tbk": 7,
"tl": 4173035221,
"mb": 224,
"mbk": 7,
"gb": 224,
"gbk": 7,
"eb": 0,
"ebk": 0,
"fs": [
87,
301,
302,
303,
304,
305,
306
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 95776472,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
307,
308,
309,
310,
311,
234,
312
]
},
{
"tb": 30800,
"tbk": 7,
"tl": 69317,
"mb": 30800,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
241,
242,
243,
244,
313,
246,
247
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
27,
28,
29,
30,
31,
32,
33,
34,
35,
157
]
},
{
"tb": 512,
"tbk": 1,
"tl": 31,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
37,
38,
39,
314,
315,
49,
300
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1266,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
248,
249,
250,
251,
252,
253,
254,
316,
206,
207
]
},
{
"tb": 224,
"tbk": 7,
"tl": 144591,
"mb": 224,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
27,
28,
29,
30,
31,
32,
33,
210,
317,
318
]
},
{
"tb": 985600,
"tbk": 7,
"tl": 92419,
"mb": 985600,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
37,
38,
39,
319,
320,
321,
163
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 47,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
37,
38,
39,
40,
215,
216,
322
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 4713,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
323,
324,
325,
326,
327,
328,
329,
330
]
},
{
"tb": 1512,
"tbk": 1,
"tl": 20482,
"mb": 1512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
218,
331,
332,
333,
334,
335,
336,
337,
338
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2218,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
339,
340
]
},
{
"tb": 288,
"tbk": 2,
"tl": 80,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
200,
201,
202,
341,
299
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
27,
28,
29,
30,
31,
32,
33,
34,
156,
36
]
},
{
"tb": 288,
"tbk": 2,
"tl": 14666,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
342,
343,
344,
345,
49
]
},
{
"tb": 448,
"tbk": 7,
"tl": 102347,
"mb": 448,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
283,
284,
285,
346,
347
]
},
{
"tb": 112,
"tbk": 7,
"tl": 4103325,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
241,
242,
243,
244,
348,
196,
91
]
},
{
"tb": 61600,
"tbk": 14,
"tl": 8927704,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
171,
172,
173,
174,
175,
176,
349
]
},
{
"tb": 61600,
"tbk": 7,
"tl": 103652,
"mb": 61600,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
13,
44,
45,
46,
350,
351,
299
]
},
{
"tb": 9584640,
"tbk": 4,
"tl": 211910,
"mb": 9584640,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
37,
38,
39,
40,
352,
353,
354
]
},
{
"tb": 3632,
"tbk": 18,
"tl": 523,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
53,
54,
79,
80,
81,
82,
83,
84,
355,
182,
356
]
},
{
"tb": 6904,
"tbk": 42,
"tl": 920,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
53,
54,
79,
80,
81,
82,
83,
84,
355,
182,
357
]
},
{
"tb": 58720256,
"tbk": 7,
"tl": 446914895,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
37,
38,
39,
40,
358,
359,
360
]
},
{
"tb": 56,
"tbk": 1,
"tl": 4004,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
53,
54,
361,
362,
363,
364,
365,
366,
367,
368
]
},
{
"tb": 504,
"tbk": 21,
"tl": 409,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
369,
370,
371,
372,
373,
374,
375,
376,
377
]
},
{
"tb": 288,
"tbk": 2,
"tl": 27567780,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
200,
201,
202,
378,
91
]
},
{
"tb": 56,
"tbk": 1,
"tl": 5690,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
53,
54,
379,
380,
381,
382,
383,
384,
385,
386
]
},
{
"tb": 5376,
"tbk": 7,
"tl": 46035,
"mb": 5376,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
102,
387,
388,
389,
390,
391,
392,
393,
394
]
},
{
"tb": 2880,
"tbk": 24,
"tl": 2387,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
395,
182
]
},
{
"tb": 3840,
"tbk": 16,
"tl": 2727,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
283,
284,
285,
396,
397
]
},
{
"tb": 336,
"tbk": 14,
"tl": 450,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
398,
399,
400,
401,
402,
403
]
},
{
"tb": 16441671680,
"tbk": 7,
"tl": 2019073112,
"mb": 16441671680,
"mbk": 7,
"gb": 16441671680,
"gbk": 7,
"eb": 0,
"ebk": 0,
"fs": [
1,
404,
405,
406,
407,
408,
409,
410,
411
]
},
{
"tb": 985600,
"tbk": 1,
"tl": 20787,
"mb": 985600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
27,
28,
29,
30,
31,
32,
33,
210,
412,
413
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 596147676,
"mb": 524288,
"mbk": 1,
"gb": 524288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
37,
38,
39,
40,
215,
414,
415
]
},
{
"tb": 168,
"tbk": 1,
"tl": 552569393,
"mb": 168,
"mbk": 1,
"gb": 168,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
416,
417,
418,
419,
420,
421,
422,
423,
424
]
},
{
"tb": 48,
"tbk": 1,
"tl": 26233241,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
102,
425,
426,
427,
428,
429,
430,
431,
432
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 20698,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
27,
28,
29,
30,
31,
32,
33,
210,
433,
434
]
},
{
"tb": 576,
"tbk": 4,
"tl": 1602,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
241,
242,
243,
244,
435,
52,
206
]
},
{
"tb": 224,
"tbk": 7,
"tl": 10877441,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
436,
437,
438,
439,
440,
441,
442,
443,
147,
148
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 326131,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
37,
38,
39,
40,
215,
216,
444
]
},
{
"tb": 32,
"tbk": 1,
"tl": 20360,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
307,
308,
309,
445,
446,
447,
299
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 2409,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
404,
448,
449,
450,
451,
452,
453,
454,
455
]
},
{
"tb": 2018508800,
"tbk": 1925,
"tl": 1150300874178,
"mb": 2018508800,
"mbk": 1925,
"gb": 2018508800,
"gbk": 1925,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
37,
38,
39,
40,
456,
457,
458
]
},
{
"tb": 288,
"tbk": 2,
"tl": 3547850,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
200,
201,
202,
459,
209
]
},
{
"tb": 256,
"tbk": 1,
"tl": 12,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
248,
249,
250,
251,
252,
253,
254,
460,
461,
91
]
},
{
"tb": 2959556,
"tbk": 9,
"tl": 21312,
"mb": 1972066,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
462,
463,
464,
465,
466
]
},
{
"tb": 30800,
"tbk": 7,
"tl": 2388147,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
241,
242,
243,
244,
467,
468,
469
]
},
{
"tb": 46200,
"tbk": 7,
"tl": 302135225,
"mb": 46200,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
102,
103,
104,
105,
106,
107,
108,
470,
471,
472
]
},
{
"tb": 112,
"tbk": 7,
"tl": 48938592,
"mb": 112,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
13,
44,
45,
46,
473,
474,
475
]
},
{
"tb": 58720256,
"tbk": 28,
"tl": 193267046,
"mb": 58720256,
"mbk": 28,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
37,
38,
39,
40,
476,
477,
478
]
},
{
"tb": 336,
"tbk": 7,
"tl": 4824266,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
241,
242,
243,
244,
479,
480,
481
]
},
{
"tb": 112,
"tbk": 7,
"tl": 44,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
482,
483,
195,
196,
91,
92
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3968,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
118,
119,
120,
121,
484,
8,
9,
240
]
},
{
"tb": 13601,
"tbk": 1,
"tl": 20708,
"mb": 13601,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
27,
28,
29,
30,
31,
32,
33,
210,
485,
413
]
},
{
"tb": 61600,
"tbk": 7,
"tl": 179,
"mb": 8800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
37,
38,
39,
319,
486,
487,
299
]
},
{
"tb": 112,
"tbk": 7,
"tl": 394,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
482,
483,
488,
489,
490,
49
]
},
{
"tb": 288,
"tbk": 2,
"tl": 13259,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
200,
201,
202,
491,
492
]
},
{
"tb": 2736,
"tbk": 6,
"tl": 2576,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
493,
494,
495,
496,
497,
498
]
},
{
"tb": 24027,
"tbk": 4,
"tl": 82455,
"mb": 24027,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
27,
28,
29,
30,
31,
32,
33,
210,
499,
500
]
},
{
"tb": 256,
"tbk": 1,
"tl": 16085,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
37,
38,
39,
319,
501,
502,
299
]
},
{
"tb": 2304,
"tbk": 12,
"tl": 4882,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
503,
504,
505,
506,
507,
508
]
},
{
"tb": 2240,
"tbk": 14,
"tl": 21753185,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
509,
510,
511,
512,
513
]
},
{
"tb": 896,
"tbk": 14,
"tl": 21751249,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
514,
515,
516,
517,
518
]
},
{
"tb": 15872,
"tbk": 124,
"tl": 127,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
37,
38,
39,
319,
519,
520,
169
]
},
{
"tb": 336,
"tbk": 14,
"tl": 687,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
521,
399,
400,
401,
402,
403
]
},
{
"tb": 61600,
"tbk": 7,
"tl": 101924,
"mb": 61600,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
13,
44,
45,
46,
522,
523,
524
]
},
{
"tb": 61632,
"tbk": 15,
"tl": 275438273,
"mb": 61632,
"mbk": 15,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
525,
526,
527,
528,
529,
530,
531,
532
]
},
{
"tb": 4032,
"tbk": 14,
"tl": 298,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
533,
534,
535,
536,
537,
538,
539,
540,
541
]
},
{
"tb": 224,
"tbk": 7,
"tl": 700,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
13,
44,
45,
46,
542,
543,
544
]
},
{
"tb": 7340032,
"tbk": 7,
"tl": 49754262,
"mb": 7340032,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
171,
172,
173,
174,
175,
176,
545
]
},
{
"tb": 560,
"tbk": 7,
"tl": 10875529,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
546,
547,
548,
549,
550,
551,
552,
553,
554
]
},
{
"tb": 6291456,
"tbk": 3,
"tl": 4526470,
"mb": 6291456,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
13,
44,
45,
46,
555,
106,
107,
108,
109
]
},
{
"tb": 672,
"tbk": 7,
"tl": 195,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
194,
488,
556,
557,
558,
91
]
},
{
"tb": 1248,
"tbk": 12,
"tl": 318,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
150,
151,
152,
559,
560,
561
]
},
{
"tb": 13568,
"tbk": 32,
"tl": 130099,
"mb": 13568,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
307,
308,
309,
445,
562,
162,
163
]
},
{
"tb": 85056,
"tbk": 1654,
"tl": 94596124,
"mb": 17152,
"mbk": 14,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
462,
563,
564,
565,
566,
567,
568
]
},
{
"tb": 560,
"tbk": 1,
"tl": 598630587,
"mb": 560,
"mbk": 1,
"gb": 560,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
569,
570,
571,
572,
573,
574,
575,
576,
577
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 283036,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
13,
44,
45,
46,
350,
578,
209
]
},
{
"tb": 168,
"tbk": 7,
"tl": 610,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
579,
580,
147,
581,
490,
49
]
},
{
"tb": 224,
"tbk": 7,
"tl": 48938447,
"mb": 224,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
582,
583
]
},
{
"tb": 2856,
"tbk": 4,
"tl": 4088,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
118,
119,
120,
121,
484,
69,
86,
461
]
},
{
"tb": 512,
"tbk": 1,
"tl": 18,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
37,
38,
39,
40,
50,
584,
48
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 1713721,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
37,
38,
39,
40,
358,
359,
585
]
},
{
"tb": 13568,
"tbk": 32,
"tl": 148522,
"mb": 13568,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
307,
308,
309,
445,
562,
123,
124
]
},
{
"tb": 512,
"tbk": 1,
"tl": 60,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
586,
587,
588,
589,
590,
591,
592,
593
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
27,
28,
29,
30,
31,
32,
33,
594,
595,
299
]
},
{
"tb": 256,
"tbk": 1,
"tl": 14028,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
13,
14,
15,
16,
596,
597,
598
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 185805,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
13,
44,
45,
46,
350,
599,
91
]
},
{
"tb": 256,
"tbk": 4,
"tl": 130305,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
37,
38,
39,
40,
215,
216,
600
]
},
{
"tb": 985600,
"tbk": 1,
"tl": 7997,
"mb": 985600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
37,
38,
39,
319,
320,
601,
163
]
},
{
"tb": 56,
"tbk": 1,
"tl": 7118,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
602,
603,
604,
605,
606,
607,
608,
609,
610
]
},
{
"tb": 112,
"tbk": 1,
"tl": 596147711,
"mb": 112,
"mbk": 1,
"gb": 112,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
611,
612,
613,
614,
615,
616,
617,
618,
619
]
},
{
"tb": 61607,
"tbk": 7,
"tl": 144620,
"mb": 61607,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
27,
28,
29,
30,
31,
32,
33,
210,
620,
318
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 3174,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
404,
405,
406,
407,
621,
86,
461,
91
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 11721,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
37,
38,
39,
319,
320,
622,
124
]
},
{
"tb": 336,
"tbk": 14,
"tl": 21753245,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
290,
291,
292,
293,
294,
295,
296,
623,
513
]
},
{
"tb": 3456,
"tbk": 12,
"tl": 4772,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
624,
625,
626,
627,
628,
629
]
},
{
"tb": 985600,
"tbk": 1,
"tl": 155194,
"mb": 985600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
27,
630,
631,
632,
633,
199,
9,
240
]
},
{
"tb": 168,
"tbk": 1,
"tl": 34,
"mb": 168,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
102,
103,
104,
105,
106,
107,
108,
634,
635,
90
]
},
{
"tb": 2400,
"tbk": 12,
"tl": 220,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
636,
637,
638,
639,
640,
641
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 25292311,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
307,
308,
309,
310,
642,
643,
644
]
},
{
"tb": 96,
"tbk": 1,
"tl": 15793,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
200,
201,
202,
645,
169
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 58006,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
13,
14,
15,
16,
646,
340,
91
]
},
{
"tb": 112,
"tbk": 7,
"tl": 374,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
482,
647,
488,
489,
490,
49
]
},
{
"tb": 336,
"tbk": 7,
"tl": 134461031,
"mb": 336,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
648,
649,
650,
651,
652,
653
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 150083,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
462,
463,
464,
654,
655
]
},
{
"tb": 108288,
"tbk": 416,
"tl": 284814,
"mb": 16384,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
656,
657,
658,
659,
660,
661,
662,
663
]
},
{
"tb": 64,
"tbk": 1,
"tl": 12714475,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
283,
284,
285,
664,
665
]
},
{
"tb": 50331648,
"tbk": 524288,
"tl": 44444942,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
666,
667,
668,
669,
670,
671,
672,
673,
674
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 4278,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
675,
676,
677,
678,
679,
680,
681,
682
]
},
{
"tb": 224,
"tbk": 7,
"tl": 44783,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
683,
209,
91,
92,
197
]
},
{
"tb": 2688,
"tbk": 7,
"tl": 10876720,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
684,
685,
686,
687,
688,
689,
690,
691,
692
]
},
{
"tb": 768,
"tbk": 1,
"tl": 5998,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
102,
103,
104,
105,
106,
107,
108,
634,
693,
9
]
},
{
"tb": 192,
"tbk": 1,
"tl": 20643,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
694,
695,
696,
697,
698,
699,
700,
212,
701
]
},
{
"tb": 6072,
"tbk": 11,
"tl": 4338,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
702,
703,
704,
705,
706,
707
]
},
{
"tb": 256,
"tbk": 1,
"tl": 644,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
53,
54,
178,
179,
180,
181,
182,
356,
708
]
},
{
"tb": 3632,
"tbk": 18,
"tl": 90,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
53,
54,
79,
80,
81,
82,
83,
84,
85,
339,
340
]
},
{
"tb": 288,
"tbk": 2,
"tl": 153602,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
709,
710,
711,
712,
199
]
},
{
"tb": 64,
"tbk": 1,
"tl": 13113,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
283,
284,
285,
664,
492
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 190774,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
307,
308,
309,
310,
713,
714,
715
]
},
{
"tb": 224,
"tbk": 14,
"tl": 10878229,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
716,
717,
718,
719,
720,
721,
722,
723
]
},
{
"tb": 576,
"tbk": 2,
"tl": 20648,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
724,
725,
726,
727,
701
]
},
{
"tb": 61600,
"tbk": 14,
"tl": 8927755,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
171,
172,
173,
174,
175,
176,
728
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2223,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
118,
119,
120,
121,
484,
339,
340,
91
]
},
{
"tb": 480,
"tbk": 4,
"tl": 232,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
339
]
},
{
"tb": 2306867200,
"tbk": 524288,
"tl": 6622282,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
13,
14,
15,
16,
729,
233,
234
]
},
{
"tb": 288,
"tbk": 2,
"tl": 6297,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
730,
731,
732,
733,
9
]
},
{
"tb": 160,
"tbk": 1,
"tl": 20345,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
307,
308,
309,
445,
734,
447,
299
]
},
{
"tb": 168,
"tbk": 1,
"tl": 273,
"mb": 168,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
102,
735,
736,
737,
738,
739,
740,
741,
742
]
},
{
"tb": 168,
"tbk": 1,
"tl": 43497696,
"mb": 168,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
743,
744,
745,
746,
747,
91,
92,
197
]
},
{
"tb": 2097152,
"tbk": 2,
"tl": 52463051,
"mb": 2097152,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
13,
14,
15,
16,
748,
749,
750
]
},
{
"tb": 952,
"tbk": 4,
"tl": 1274,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
53,
54,
178,
179,
180,
181,
182,
357,
751
]
},
{
"tb": 64,
"tbk": 1,
"tl": 5,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
752,
753,
754,
755,
756,
757,
758,
759,
760
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1813,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
200,
201,
202,
761,
340
]
},
{
"tb": 288,
"tbk": 2,
"tl": 12714621,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
200,
201,
202,
491,
665
]
},
{
"tb": 480,
"tbk": 2,
"tl": 14770,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
762,
763,
764,
765,
299
]
},
{
"tb": 504,
"tbk": 1,
"tl": 44359817,
"mb": 504,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
766,
767,
768,
769,
770,
771,
772,
773,
774
]
},
{
"tb": 13841203200,
"tbk": 3145728,
"tl": 30585465,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
13,
14,
15,
16,
775,
233,
234
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1508247,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
13,
44,
45,
46,
473,
297,
97,
98,
99
]
},
{
"tb": 46200,
"tbk": 7,
"tl": 4182959151,
"mb": 46200,
"mbk": 7,
"gb": 46200,
"gbk": 7,
"eb": 0,
"ebk": 0,
"fs": [
1,
102,
776,
777,
778,
779,
780,
781,
782,
783
]
},
{
"tb": 112,
"tbk": 7,
"tl": 4173578457,
"mb": 112,
"mbk": 7,
"gb": 112,
"gbk": 7,
"eb": 0,
"ebk": 0,
"fs": [
20,
27,
28,
29,
30,
31,
32,
33,
594,
784,
785
]
},
{
"tb": 168,
"tbk": 1,
"tl": 43497689,
"mb": 168,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
786,
787,
788,
789,
790,
91,
92,
197
]
},
{
"tb": 72,
"tbk": 1,
"tl": 20792,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
694,
791,
792,
793,
794,
795,
701
]
},
{
"tb": 96,
"tbk": 2,
"tl": 27566816,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
796,
91
]
},
{
"tb": 3968,
"tbk": 4,
"tl": 53535,
"mb": 3968,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
797,
520,
169
]
},
{
"tb": 48444211200,
"tbk": 3145728,
"tl": 16848891,
"mb": 26400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
13,
44,
45,
46,
350,
798,
233
]
},
{
"tb": 224,
"tbk": 7,
"tl": 850,
"mb": 224,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
37,
38,
39,
319,
799,
487,
299
]
},
{
"tb": 336,
"tbk": 14,
"tl": 97877016,
"mb": 336,
"mbk": 14,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
290,
291,
292,
293,
294,
295,
296,
800,
801
]
},
{
"tb": 48,
"tbk": 1,
"tl": 7,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
802,
803,
804,
805,
806,
807,
808,
809,
810
]
},
{
"tb": 56,
"tbk": 1,
"tl": 5682,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
53,
54,
811,
812,
813,
814,
815,
816,
817,
818
]
},
{
"tb": 168,
"tbk": 7,
"tl": 10877491,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
579,
580,
147,
148,
558,
91
]
},
{
"tb": 73880,
"tbk": 39,
"tl": 643691,
"mb": 36992,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
462,
463,
464,
654,
819
]
},
{
"tb": 256,
"tbk": 1,
"tl": 14,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
13,
44,
45,
46,
820,
461,
91
]
},
{
"tb": 844800,
"tbk": 192,
"tl": 1053,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
13,
44,
45,
46,
350,
821,
822
]
},
{
"tb": 56,
"tbk": 7,
"tl": 2791628,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
53,
54,
178,
179,
180,
823,
824,
475,
91
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 151207,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
27,
630,
631,
632,
825,
826,
340,
91
]
},
{
"tb": 56,
"tbk": 1,
"tl": 3991,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
827,
164,
299,
300,
828
]
},
{
"tb": 13601,
"tbk": 1,
"tl": 20693,
"mb": 13601,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
27,
28,
29,
30,
31,
32,
33,
210,
829,
434
]
},
{
"tb": 46200,
"tbk": 7,
"tl": 3706277504,
"mb": 46200,
"mbk": 7,
"gb": 46200,
"gbk": 7,
"eb": 0,
"ebk": 0,
"fs": [
1,
102,
830,
831,
832,
833,
834,
835,
836,
837
]
},
{
"tb": 3801600,
"tbk": 192,
"tl": 158583,
"mb": 1012000,
"mbk": 33,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
227,
228,
229,
230,
231,
838,
822,
839
]
},
{
"tb": 224,
"tbk": 7,
"tl": 578,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
436,
437,
438,
439,
440,
441,
442,
443,
147,
581
]
},
{
"tb": 1920,
"tbk": 8,
"tl": 20513,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
283,
284,
285,
840,
841
]
},
{
"tb": 336,
"tbk": 1,
"tl": 596225392,
"mb": 336,
"mbk": 1,
"gb": 336,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
842,
843,
844,
845,
846,
847,
90,
91
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 152254,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
462,
463,
464,
654,
848
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 152390,
"mb": 1179648,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
37,
38,
39,
40,
849,
850,
354
]
},
{
"tb": 56,
"tbk": 1,
"tl": 32,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
53,
54,
851,
852,
853,
854,
855,
856,
857,
858
]
},
{
"tb": 224,
"tbk": 7,
"tl": 143158,
"mb": 224,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
301,
859,
860,
861,
862,
863
]
},
{
"tb": 14680064,
"tbk": 7,
"tl": 195623724,
"mb": 14680064,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
171,
172,
173,
174,
175,
176,
864
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 326827,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
13,
14,
15,
16,
865,
866,
91
]
},
{
"tb": 3584,
"tbk": 7,
"tl": 27613,
"mb": 3584,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
37,
38,
39,
867,
48,
49,
300
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4514,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
868,
869,
870,
871,
872,
873,
874,
875
]
},
{
"tb": 672,
"tbk": 7,
"tl": 104,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
194,
488,
489,
490,
49,
300
]
},
{
"tb": 126976,
"tbk": 4,
"tl": 1636,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
171,
172,
173,
174,
175,
176,
876
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 4416,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
22,
23,
24,
25,
877
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 1508206,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
13,
44,
45,
46,
555,
106,
107,
108,
878
]
},
{
"tb": 56,
"tbk": 1,
"tl": 5706,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
53,
54,
879,
880,
881,
882,
883,
884,
885,
886
]
},
{
"tb": 14680064,
"tbk": 7,
"tl": 2766120,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
887,
888,
889,
890,
891,
892,
893,
894
]
},
{
"tb": 224,
"tbk": 1,
"tl": 20819,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
27,
28,
29,
30,
31,
32,
33,
210,
895,
896
]
},
{
"tb": 2018508800,
"tbk": 1925,
"tl": 1011950872434,
"mb": 2018508800,
"mbk": 1925,
"gb": 2018508800,
"gbk": 1925,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
13,
44,
45,
46,
897,
898,
899
]
},
{
"tb": 114240,
"tbk": 56,
"tl": 93336,
"mb": 57344,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
283,
284,
285,
900,
492
]
},
{
"tb": 512,
"tbk": 1,
"tl": 11511,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
901,
902,
903,
904,
905,
906,
907,
908
]
},
{
"tb": 1680,
"tbk": 14,
"tl": 48938489,
"mb": 1344,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
909,
475,
91,
92,
197
]
},
{
"tb": 23904,
"tbk": 119,
"tl": 1558862,
"mb": 23904,
"mbk": 119,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
307,
308,
309,
445,
562,
910,
520
]
},
{
"tb": 61607,
"tbk": 7,
"tl": 194,
"mb": 8801,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
911,
912,
913,
914,
915,
916,
917,
918,
919,
920
]
},
{
"tb": 25165440,
"tbk": 96,
"tl": 98490,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
283,
284,
285,
921,
91
]
},
{
"tb": 29360352,
"tbk": 21,
"tl": 528686,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
37,
38,
39,
40,
50,
922,
42
]
},
{
"tb": 985600,
"tbk": 7,
"tl": 1077077,
"mb": 985600,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
27,
630,
631,
632,
923,
199,
9,
240
]
},
{
"tb": 7340032,
"tbk": 7,
"tl": 509261,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
37,
38,
39,
40,
215,
216,
924
]
},
{
"tb": 3584,
"tbk": 7,
"tl": 27655,
"mb": 3584,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
37,
38,
39,
925,
48,
49,
300
]
},
{
"tb": 480,
"tbk": 2,
"tl": 14556,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
926,
927,
928,
929,
930,
931,
932,
933,
934
]
},
{
"tb": 512,
"tbk": 1,
"tl": 16,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
37,
38,
39,
40,
50,
935,
315
]
},
{
"tb": 336,
"tbk": 1,
"tl": 9962,
"mb": 336,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
936,
937,
938,
939,
940,
941,
942,
943,
944
]
},
{
"tb": 224,
"tbk": 7,
"tl": 165,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
911,
912,
913,
914,
915,
916,
917,
945,
919,
920
]
},
{
"tb": 112,
"tbk": 7,
"tl": 727,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
13,
44,
45,
46,
946,
543,
544
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 56316,
"mb": 15872,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
37,
38,
39,
947,
520,
169,
299
]
},
{
"tb": 224,
"tbk": 7,
"tl": 4,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
185,
948,
300,
828
]
},
{
"tb": 2856,
"tbk": 4,
"tl": 52958,
"mb": 2856,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
118,
119,
120,
121,
122,
910,
520,
169
]
},
{
"tb": 536870912,
"tbk": 8,
"tl": 44292819,
"mb": 67108864,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
171,
172,
173,
174,
175,
176,
949
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1507602,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
53,
54,
79,
80,
81,
82,
83,
84,
950,
101,
91
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 133642,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
37,
38,
39,
40,
951,
952,
953
]
},
{
"tb": 112,
"tbk": 7,
"tl": 547,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
13,
14,
15,
16,
146,
147,
581
]
},
{
"tb": 672,
"tbk": 14,
"tl": 97366993,
"mb": 672,
"mbk": 14,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
102,
954,
955,
956,
957,
958,
959,
960,
961
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 1620,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
171,
172,
173,
174,
175,
176,
962
]
},
{
"tb": 168,
"tbk": 1,
"tl": 24304425,
"mb": 168,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
963,
964,
965,
966,
967,
968,
969,
970,
971
]
},
{
"tb": 56,
"tbk": 1,
"tl": 551779161,
"mb": 56,
"mbk": 1,
"gb": 56,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
257,
972,
973,
974,
975,
976,
977,
978,
979
]
},
{
"tb": 168,
"tbk": 7,
"tl": 48938615,
"mb": 168,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
289,
290,
291,
292,
293,
294,
295,
296,
474,
475
]
},
{
"tb": 13776,
"tbk": 14,
"tl": 355,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
980,
981,
982,
983,
984,
985
]
},
{
"tb": 480,
"tbk": 4,
"tl": 13993,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
986,
987
]
},
{
"tb": 112,
"tbk": 7,
"tl": 718,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
482,
483,
488,
556,
557,
558
]
},
{
"tb": 3632,
"tbk": 18,
"tl": 93,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
53,
54,
79,
80,
81,
82,
83,
84,
85,
8,
9
]
},
{
"tb": 336,
"tbk": 1,
"tl": 9831,
"mb": 336,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
988,
989,
990,
991,
992,
993,
994,
995,
996
]
},
{
"tb": 3632,
"tbk": 18,
"tl": 530,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
53,
54,
79,
80,
81,
82,
83,
84,
355,
182,
183
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4526,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
37,
38,
39,
997,
998,
49,
300
]
},
{
"tb": 15872,
"tbk": 124,
"tl": 105,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
999,
1000,
1001,
1002,
1003,
1004,
1005,
1006
]
},
{
"tb": 2018508800,
"tbk": 1925,
"tl": 82984952315,
"mb": 2018508800,
"mbk": 1925,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
13,
44,
45,
46,
555,
106,
107,
108,
470
]
},
{
"tb": 224,
"tbk": 1,
"tl": 155,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1007,
1008,
1009,
1010,
1011,
1012,
1013,
1014,
1015
]
},
{
"tb": 14680064,
"tbk": 917504,
"tl": 506317,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
13,
44,
45,
46,
1016,
1017,
1018
]
},
{
"tb": 15971909632,
"tbk": 238,
"tl": 8097602967,
"mb": 2281701376,
"mbk": 34,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
404,
405,
406,
407,
408,
1019,
1020,
1021
]
},
{
"tb": 7340032,
"tbk": 7,
"tl": 12431099,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
171,
172,
173,
174,
175,
176,
1022
]
},
{
"tb": 103056,
"tbk": 226,
"tl": 62104,
"mb": 26448,
"mbk": 58,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
493,
494,
495,
1023,
1024,
1025
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 596145752,
"mb": 2097152,
"mbk": 1,
"gb": 2097152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
37,
38,
39,
40,
215,
1026,
1027
]
},
{
"tb": 672,
"tbk": 1,
"tl": 596225519,
"mb": 672,
"mbk": 1,
"gb": 672,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036
]
},
{
"tb": 2928,
"tbk": 12,
"tl": 1306,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
248,
1037,
1038,
1039,
1040,
1041,
1042,
1043,
1044
]
},
{
"tb": 480,
"tbk": 4,
"tl": 13088,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
986,
1045
]
},
{
"tb": 114240,
"tbk": 56,
"tl": 89002882,
"mb": 57344,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
283,
284,
285,
900,
665
]
},
{
"tb": 3670016,
"tbk": 7,
"tl": 53097266,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
37,
38,
39,
40,
215,
216,
1046
]
},
{
"tb": 288,
"tbk": 1,
"tl": 36117,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
1047,
1048,
1049,
1050,
354
]
},
{
"tb": 228928,
"tbk": 63,
"tl": 184,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
283,
284,
285,
1051,
1052
]
},
{
"tb": 24,
"tbk": 1,
"tl": 20704,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1053,
1054,
413,
701
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 82458,
"mb": 15872,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
27,
28,
29,
30,
31,
32,
33,
210,
1055,
500
]
},
{
"tb": 448,
"tbk": 7,
"tl": 102376,
"mb": 448,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
283,
284,
285,
286,
347
]
},
{
"tb": 512,
"tbk": 1,
"tl": 10,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
1056,
1057,
1058,
1059,
1060,
1061,
1062,
1063
]
},
{
"tb": 6528,
"tbk": 34,
"tl": 13787,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
503,
504,
505,
1064,
1065,
1066
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 44457779,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
307,
308,
309,
310,
713,
714,
1067
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
89,
157,
300,
828
]
},
{
"tb": 512,
"tbk": 1,
"tl": 17,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
37,
38,
39,
1068,
315,
49,
300
]
},
{
"tb": 384,
"tbk": 2,
"tl": 12684,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
1069,
1070,
1071,
1072,
163
]
},
{
"tb": 112,
"tbk": 7,
"tl": 4824232,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
241,
242,
243,
244,
1073,
480,
481
]
},
{
"tb": 112,
"tbk": 1,
"tl": 13231191,
"mb": 112,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
129,
1074,
1075,
1076,
1077,
1078,
1079,
1080,
1081
]
},
{
"tb": 112,
"tbk": 7,
"tl": 18,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
482,
647,
195,
196,
91,
92
]
},
{
"tb": 3968,
"tbk": 4,
"tl": 4072,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
69,
86
]
},
{
"tb": 480,
"tbk": 4,
"tl": 233,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
8
]
},
{
"tb": 7616,
"tbk": 14,
"tl": 160,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1082,
1083,
1084,
1085,
1086,
1087
]
},
{
"tb": 141024,
"tbk": 39,
"tl": 31152,
"mb": 140800,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
13,
44,
45,
46,
555,
106,
107,
108,
634
]
},
{
"tb": 192,
"tbk": 1,
"tl": 164465,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
694,
695,
696,
697,
698,
1088,
461,
91,
92
]
},
{
"tb": 168,
"tbk": 1,
"tl": 43497678,
"mb": 168,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
416,
1089,
1090,
1091,
1092,
91,
92,
197
]
},
{
"tb": 112,
"tbk": 7,
"tl": 697,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
482,
647,
488,
556,
557,
558
]
},
{
"tb": 5904,
"tbk": 8,
"tl": 448445384,
"mb": 840,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1093,
1094,
1095,
1096,
1097,
1098,
1099,
1100,
1101
]
},
{
"tb": 80,
"tbk": 1,
"tl": 13107,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
37,
38,
39,
1102,
1103,
49,
300
]
},
{
"tb": 448,
"tbk": 7,
"tl": 1070,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
283,
284,
285,
346,
287
]
},
{
"tb": 1152,
"tbk": 2,
"tl": 20832,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
1104,
1105,
1106,
1107,
701
]
},
{
"tb": 13800,
"tbk": 25,
"tl": 6304,
"mb": 3864,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
702,
703,
704,
1108,
1109,
1110
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 208370,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
307,
308,
309,
310,
1111,
1112,
354
]
},
{
"tb": 224,
"tbk": 1,
"tl": 119,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1007,
1113,
1114,
1115,
1116,
1117,
1118,
1119,
1120
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 25184598,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
307,
308,
309,
310,
713,
714,
1121
]
},
{
"tb": 8064,
"tbk": 28,
"tl": 920,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
1122,
1123,
1124,
1125,
1126
]
},
{
"tb": 672,
"tbk": 7,
"tl": 84,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
93,
1127,
1128,
1129,
1130,
1131,
1132,
1133,
1134
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1508214,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
102,
103,
104,
105,
106,
107,
108,
878,
101,
91
]
},
{
"tb": 1984,
"tbk": 4,
"tl": 3289,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
1135,
1136,
1137,
1138,
1139,
1140,
1141,
1142
]
},
{
"tb": 14680064,
"tbk": 7,
"tl": 6050841,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
37,
38,
39,
40,
951,
1143,
1144
]
},
{
"tb": 243649,
"tbk": 84,
"tl": 93672205,
"mb": 121856,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
20,
21,
462,
463,
464,
465,
1145
]
},
{
"tb": 48,
"tbk": 1,
"tl": 5521,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
802,
803,
804,
805,
806,
807,
808,
809,
1146
]
}
],
"ftbl": [
"[root]",
"0x5b0a8f5964a9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5b0a8f659a9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8f76bf58: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f76bf58: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f76bf58: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5b0a8f886c17: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5b0a8f8ab698: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x5b0a8f771b07: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x5b0a8f77bcb4: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x5b0a8f65f0ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8f53c41c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f53c41c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f53c41c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5b0a8f53c93c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5b0a8f53c93c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5b0a8f53c93c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5b0a8f774078: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x5b0a8f50d61a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5b0a8f5c5e45: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5b0a8fafdb79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5b0a8fafc319: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5b0a8faa9da0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b0a8faa55f9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b0a8faa45a1: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b0a8faa4eb0: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x5b0a8f78ba4e: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x5b0a8fafc5ca: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8fafdbbc: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8fafdbbc: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8fafdbbc: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5b0a8fafe7fc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5b0a8fafe7fc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5b0a8fafe7fc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5b0a8f76ddf4: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x5b0a8f76db12: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x5b0a8f623a03: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x5b0a8f817736: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f817736: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f817736: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f5a3e7b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5b0a8f713be1: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x5b0a8f710fbc: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x5b0a8f716211: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x5b0a8f887939: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5b0a8f887939: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5b0a8f887939: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5b0a8f8b2693: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x5b0a8f6b2c0f: winter_verifier::perform_verification (verifier/src/lib.rs:308:25)",
"0x5b0a8f6bb9d2: winter_verifier::verify (verifier/src/lib.rs:110:21)",
"0x5b0a8f597f42: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x5b0a8f95d3fb: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x5b0a8f78c010: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x5b0a8fa7f899: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5b0a8f9ec0aa: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8f809451: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f809451: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f809451: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f809451: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a27db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f897136: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4e865b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f56f97f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x5b0a8fa91799: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5b0a8fa8cb39: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5b0a8f9ef830: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b0a8f9f1899: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b0a8f9cc451: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b0a8f8abf53: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x5b0a8f96a274: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x5b0a8f65591c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8f7dfdc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f7dfdc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f7dfdc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f7dfdc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8816b3: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5b0a8f896bc9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4e901e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f737f62: winter_prover::Prover::generate_proof (prover/src/lib.rs:291:36)",
"0x5b0a8f9fd6ac: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f9fd6ac: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f9fd6ac: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5b0a8f9ce4a9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5b0a8f9ce4a9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5b0a8f9ce4a9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5b0a8f8aba2c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x5b0a8f97d152: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x5b0a8f595937: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x5b0a8f96582c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x5b0a8f76db58: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x5b0a8f737656: winter_prover::Prover::generate_proof (prover/src/lib.rs:228:27)",
"0x5b0a8f758cd4: winter_prover::Prover::prove (prover/src/lib.rs:171:37)",
"0x5b0a8f51a2b2: <examples::do_work::DoWorkExample<H> as examples::Example>::prove (src/do_work/mod.rs:108:9)",
"0x5b0a8f662a9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8f9010c6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f9010c6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f9010c6: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5b0a8f888039: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5b0a8f888039: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5b0a8f888039: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5b0a8f710ca3: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x5b0a8f738583: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:33)",
"0x5b0a8f65b9fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8f816856: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f816856: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f816856: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5b0a8f8881f9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5b0a8f8881f9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5b0a8f8881f9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5b0a8f710c8c: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x5b0a8f7d5541: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f7d5541: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f7d5541: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f7d5541: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a390b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f899276: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4e945b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f56fb0f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x5b0a8f65de8c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8f817966: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f817966: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f817966: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f69cc9d: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x5b0a8f8f8ca7: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x5b0a8f58477b: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x5b0a8f57023c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x5b0a8f8ccbc2: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x5b0a8f76a240: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x5b0a8f8e0bb1: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x5b0a8f65e66c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8f816e1c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f816e1c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f816e1c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5b0a8f887e79: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5b0a8f887e79: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5b0a8f887e79: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5b0a8f7396be: winter_prover::Prover::generate_proof (prover/src/lib.rs:500:39)",
"0x5b0a8f663f9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8f7e1d37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f7e1d37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f7e1d37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f7e1d37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a326e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f8966a7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4e8dde: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f74cd43: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:638:34)",
"0x5b0a8f984983: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x5b0a8f7bdc22: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:348:9)",
"0x5b0a8f93663b: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:50:13)",
"0x5b0a8faab739: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5b0a8fab7d2b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5b0a8fab7751: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5b0a8fab3adb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5b0a8fab076e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5b0a8fab2220: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5b0a8fab1428: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5b0a8f76dad6: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x5b0a8f6bb5a9: winter_verifier::verify (verifier/src/lib.rs:95:32)",
"0x5b0a8f689c02: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b0a8f69acc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b0a8f874d48: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b0a8f73bbf6: winter_prover::Prover::generate_proof (prover/src/lib.rs:408:17)",
"0x5b0a8f8f0152: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x5b0a8f55d583: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x5b0a8f56ffa8: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x5b0a8f688842: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b0a8f69b419: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b0a8f870ba2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b0a8f64f57e: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x5b0a8f57060c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x5b0a8f73b7ed: winter_prover::Prover::generate_proof (prover/src/lib.rs:439:13)",
"0x5b0a8fafb6cc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x5b0a8faf9d9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x5b0a8fafacf8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x5b0a8fafacf8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x5b0a8faf7964: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5b0a8faf7c13: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x5b0a8f9307eb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:39:30)",
"0x5b0a8f9c7656: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f9c7656: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f9c7656: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f6a0d1c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x5b0a8f8adb5e: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x5b0a8f56b2ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x5b0a8f6b2810: winter_verifier::perform_verification (verifier/src/lib.rs:302:9)",
"0x5b0a8f71bd16: <examples::do_work::air::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (src/do_work/air.rs:13:9)",
"0x5b0a8f54db09: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:211:31)",
"0x5b0a8f504d3a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5b0a8f5f50a8: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5b0a8f4ce3ba: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5b0a8f4ee63a: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5b0a8f8c34a2: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x5b0a8f8c2147: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5b0a8f74cdf7: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:645:31)",
"0x5b0a8f71c08f: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:60:9)",
"0x5b0a8f59d0ab: winter_prover::trace::Trace::validate (src/trace/mod.rs:122:26)",
"0x5b0a8f73bf21: winter_prover::Prover::generate_proof (prover/src/lib.rs:370:17)",
"0x5b0a8f372d4d: winterfell::main (examples/src/main.rs:49:17)",
"0x5b0a8f8e610a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x5b0a8f771bd9: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x5b0a8f687972: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b0a8f69ba19: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b0a8f871402: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b0a8f8b3848: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x5b0a8f8b389e: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x5b0a8f78b214: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x5b0a8f7bb73c: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x5b0a8f6b2e15: winter_verifier::perform_verification (verifier/src/lib.rs:320:5)",
"0x5b0a8f8de580: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x5b0a8f739868: winter_prover::Prover::generate_proof (prover/src/lib.rs:514:9)",
"0x5b0a8fafbe2c: <winter_utils::serde::byte_reader::SliceReader as winter_utils::serde::byte_reader::ByteReader>::read_vec (src/serde/byte_reader.rs:151:22)",
"0x5b0a8fa9c8d2: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:215:25)",
"0x5b0a8fa9715d: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:188:24)",
"0x5b0a8faa1118: <winter_air::proof::context::Context as winter_utils::serde::Deserializable>::read_from (src/proof/context.rs:184:35)",
"0x5b0a8fa96bf7: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:27)",
"0x5b0a8f598393: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x5b0a8f768018: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x5b0a8f71783e: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x5b0a8f65901c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8f7e77f7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f7e77f7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f7e77f7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f7e77f7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a3b7e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f89df39: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4e80ee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f737603: winter_prover::Prover::generate_proof (prover/src/lib.rs:217:20)",
"0x5b0a8f886ebb: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f886ebb: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f886ebb: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f886ebb: <[V] as alloc::slice::Concat<T>>::concat (alloc/src/slice.rs:712:26)",
"0x5b0a8f886cab: alloc::slice::<impl [T]>::concat (alloc/src/slice.rs:561:9)",
"0x5b0a8f8bf527: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:228:37)",
"0x5b0a8f8bc903: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x5b0a8f74d3dd: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:659:26)",
"0x5b0a8f67f912: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b0a8f69b119: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b0a8f87094f: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b0a8f8abd8a: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x5b0a8f77bc1d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x5b0a8f73aace: winter_prover::Prover::generate_proof (prover/src/lib.rs:593:29)",
"0x5b0a8f53c9f5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f53c9f5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f53c9f5: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5b0a8f886bf4: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5b0a8f55acb0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x5b0a8f6b8869: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:214:32)",
"0x5b0a8f4fd603: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5b0a8faa98ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8faa5b6c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8faa5b6c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8faa5b6c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5b0a8faa562c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5b0a8faa562c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5b0a8faa562c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5b0a8faa56b6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x5b0a8f78bb2b: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x5b0a8f65c70a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8f7ee781: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f7ee781: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f7ee781: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f7ee781: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a3dab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f898306: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4e809b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f74cc73: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:634:36)",
"0x5b0a8f67c7b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b0a8f69ad89: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b0a8f870f32: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b0a8f6b348c: winter_verifier::perform_verification (verifier/src/lib.rs:182:9)",
"0x5b0a8f817cd6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f817cd6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f817cd6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f73800d: winter_prover::Prover::generate_proof (prover/src/lib.rs:300:37)",
"0x5b0a8f65b4bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8f80e4c8: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f80e4c8: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f80e4c8: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f80e4c8: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5b0a8f8a572e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f89c407: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f98517e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f7c8e5c: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x5b0a8f68e122: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b0a8f69b6b9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b0a8f86fd91: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b0a8f7c4c93: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:505:13)",
"0x5b0a8f621484: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x5b0a8f95d450: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x5b0a8f65ee4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8f53c2ec: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f53c2ec: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f53c2ec: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5b0a8f888f19: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5b0a8f888f19: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5b0a8f888f19: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5b0a8f9015d6: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x5b0a8f901440: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5b0a8f570cae: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x5b0a8f6bb907: winter_verifier::verify (verifier/src/lib.rs:108:19)",
"0x5b0a8f51ad99: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:118:9)",
"0x5b0a8f71be42: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::new (src/do_work/air.rs:35:23)",
"0x5b0a8f553bb0: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:221:17)",
"0x5b0a8f4fe922: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5b0a8f92d4dd: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::SpecFold>::spec_fold (iter/adapters/zip.rs:685:25)",
"0x5b0a8f919ee7: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::fold (iter/adapters/zip.rs:249:9)",
"0x5b0a8f9049b7: <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/zip.rs:103:9)",
"0x5b0a8f817916: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f817916: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f817916: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f5a3fbb: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5b0a8f8bc872: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x5b0a8f737c88: winter_prover::Prover::generate_proof (prover/src/lib.rs:268:13)",
"0x5b0a8f55ac8d: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x5b0a8f8b61a4: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x5b0a8f6b2cbe: winter_verifier::perform_verification (verifier/src/lib.rs:314:25)",
"0x5b0a8f78b1a5: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x5b0a8faa0784: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:155:27)",
"0x5b0a8fa97178: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:29)",
"0x5b0a8f53a909: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5b0a8f9024cb: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x5b0a8f8f0524: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x5b0a8f980ab6: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x5b0a8f800f40: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f800f40: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f800f40: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f800f40: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5b0a8f8a314b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f89a8a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4e727b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f8f8bca: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x5b0a8f7ebee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f7ebee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f7ebee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f7ebee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f87bbcf: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5b0a8f899849: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4e8e5e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f6bb784: winter_verifier::verify (verifier/src/lib.rs:101:24)",
"0x5b0a8f988495: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x5b0a8f73abc5: winter_prover::Prover::generate_proof (prover/src/lib.rs:598:34)",
"0x5b0a8f5713ef: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x5b0a8f693022: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b0a8f69b9e9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b0a8f872842: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b0a8f6b3673: winter_verifier::perform_verification (verifier/src/lib.rs:177:9)",
"0x5b0a8f7c4bb8: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:510:13)",
"0x5b0a8f6b19d9: winter_verifier::perform_verification (verifier/src/lib.rs:183:13)",
"0x5b0a8f59d598: winter_prover::trace::Trace::validate (src/trace/mod.rs:177:13)",
"0x5b0a8f96601d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x5b0a8f815097: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5b0a8f57127d: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x5b0a8f5a4303: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x5b0a8f970c25: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x5b0a8f97e1b2: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x5b0a8f6a0f79: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x5b0a8f56bd3c: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x5b0a8f55753c: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x5b0a8f8c11ab: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x5b0a8f8c0696: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x5b0a8f5548e9: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:641:17)",
"0x5b0a8f7d36b1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f7d36b1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f7d36b1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f7d36b1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a171b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f89ae16: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4ea23b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f55d409: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x5b0a8f655e5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8f801771: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f801771: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f801771: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f801771: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a20cb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f89b9c6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4e80cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f712e5a: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x5b0a8f73b7ad: winter_prover::Prover::generate_proof (prover/src/lib.rs:438:13)",
"0x5b0a8f7d7911: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f7d7911: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f7d7911: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f7d7911: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a2f1b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f89e516: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4e820b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f56fbd7: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x5b0a8f7d85b7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f7d85b7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f7d85b7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f7d85b7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a1b0e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f899a37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4e92be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f771c76: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x5b0a8f6a2191: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x5b0a8f781a48: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x5b0a8f78bdda: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x5b0a8f90041a: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x5b0a8f7c85ae: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x5b0a8f58689d: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x5b0a8f7c7cce: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x5b0a8f7ca6c6: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x5b0a8f7bd9ea: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:362:9)",
"0x5b0a8f663a5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8f817b46: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f817b46: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f817b46: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f5a3d3b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5b0a8f8c1c77: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x5b0a8f8b9c8c: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x5b0a8f8c07bc: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x5b0a8fa9bd02: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:348:22)",
"0x5b0a8fa96e53: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:174:32)",
"0x5b0a8f767151: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x5b0a8f77edf3: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x5b0a8f65e90c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8f7e6f91: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f7e6f91: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f7e6f91: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f7e6f91: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a1edb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f89b626: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4e74ab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f74cba6: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:630:42)",
"0x5b0a8f80a9a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f80a9a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f80a9a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f80a9a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a53de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f89c4c9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4eaede: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f5975e0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x5b0a8fa9b862: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:164:22)",
"0x5b0a8fa96e38: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:176:34)",
"0x5b0a8f95d184: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x5b0a8f6582fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8f95f776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f95f776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f95f776: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5b0a8f8883b9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5b0a8f8883b9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5b0a8f8883b9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5b0a8f984846: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x5b0a8f767833: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x5b0a8f76b7e9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5b0a8f6377fb: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x5b0a8f56fe38: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x5b0a8f7d29a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f7d29a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f7d29a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f7d29a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a471e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f897517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4e937e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f78bf51: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x5b0a8f59b511: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:132:51)",
"0x5b0a8f4fda1a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5b0a8f940da5: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5b0a8f8de810: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x5b0a8f97cc77: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x5b0a8f73aa4f: winter_prover::Prover::generate_proof (prover/src/lib.rs:590:25)",
"0x5b0a8fafcab0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b0a8fafcce9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b0a8fafdf12: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b0a8fafcd49: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x5b0a8faa2d7a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x5b0a8f59a87b: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:235:25)",
"0x5b0a8f965a62: examples::do_work::prover::build_do_work_trace (src/do_work/prover.rs:65:5)",
"0x5b0a8f759668: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces::{{closure}} (src/do_work/prover.rs:32:27)",
"0x5b0a8f7107be: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x5b0a8f70ef17: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5b0a8f54e5ac: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:293:57)",
"0x5b0a8f9015ed: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x5b0a8f93758d: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:33)",
"0x5b0a8f73bbd3: winter_prover::Prover::generate_proof (prover/src/lib.rs:407:21)",
"0x5b0a8f712db1: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x5b0a8f5024aa: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5b0a8f942a05: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5b0a8f933f6c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:148:31)",
"0x5b0a8f9379e0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:122:17)",
"0x5b0a8f617436: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5b0a8f8d4e95: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x5b0a8f71c0bd: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:61:13)",
"0x5b0a8f8ab6ff: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x5b0a8fa9bec9: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:352:21)",
"0x5b0a8f8cb6fb: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x5b0a8f571185: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5b0a8f7bd985: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:364:13)",
"0x5b0a8f930b4c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:63:9)",
"0x5b0a8f6b3247: winter_verifier::perform_verification (verifier/src/lib.rs:223:43)",
"0x5b0a8f7be239: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:536:13)",
"0x5b0a8f6b213b: winter_verifier::perform_verification (verifier/src/lib.rs:263:61)",
"0x5b0a8f8d86eb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5b0a8f8d7891: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5b0a8f6eaf4b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5b0a8f6c09dd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5b0a8f58983f: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5b0a8f7656c3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5b0a8fa9cf46: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:365:21)",
"0x5b0a8fa9c3d6: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:146:27)",
"0x5b0a8f652fee: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x5b0a8f57042b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x5b0a8fab7b7b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5b0a8fab75f1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5b0a8fab3bbb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5b0a8faad66d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5b0a8faa8538: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5b0a8faa6dd7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5b0a8f673392: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b0a8f69aa59: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b0a8f86fb42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b0a8f63d0d9: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:174:17)",
"0x5b0a8f63af30: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:54:17)",
"0x5b0a8f66e982: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b0a8f69ac39: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b0a8f873a51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b0a8f7136c9: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x5b0a8f61730d: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5b0a8f647f3a: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x5b0a8f64f39c: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x5b0a8f900299: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x5b0a8f585e22: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x5b0a8f61b5c4: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x5b0a8f93bd04: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x5b0a8f7d07e7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f7d07e7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f7d07e7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f7d07e7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a473e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f89a7f7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4eb32e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f70cd13: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:253:9)",
"0x5b0a8f660b1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8f7e97cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f7e97cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f7e97cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f7e97cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5b0a8f8a486e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f896947: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4e7e8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f7c7bf6: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x5b0a8f58c23f: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x5b0a8f58c307: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5b0a8f6b3156: winter_verifier::perform_verification (verifier/src/lib.rs:225:13)",
"0x5b0a8f8de2ef: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x5b0a8f66327c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8f7d4557: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f7d4557: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f7d4557: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f7d4557: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f88279d: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5b0a8f89e21c: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4ea4ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f71a82a: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x5b0a8f816bc3: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5b0a8f63a670: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:40:22)",
"0x5b0a8f9366e7: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:13)",
"0x5b0a8f73bb32: winter_prover::Prover::generate_proof (prover/src/lib.rs:403:21)",
"0x5b0a8faad6cd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5b0a8faa884b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5b0a8faa6f13: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5b0a8f69cf24: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x5b0a8fafcd18: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x5b0a8fafe00a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x5b0a8fafe00a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x5b0a8fafddae: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x5b0a8fafddae: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x5b0a8fafde9d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x5b0a8f65d94c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8f7d1ae7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f7d1ae7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f7d1ae7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f7d1ae7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a353e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f89dd37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4e9d4e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f759619: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces (src/do_work/prover.rs:30:9)",
"0x5b0a8f8ddea2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x5b0a8f9009a3: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x5b0a8f98482c: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x5b0a8f93064a: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:25:25)",
"0x5b0a8f71bb27: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x5b0a8f7198cd: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x5b0a8f8b2853: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x5b0a8f7554e4: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:691:36)",
"0x5b0a8f7e4187: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f7e4187: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f7e4187: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f7e4187: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a529e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f899e27: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4e77ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f8b295b: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x5b0a8faf7d9e: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x5b0a8f56f7d0: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x5b0a8f980c0e: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x5b0a8f97e104: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x5b0a8f73a38b: winter_prover::Prover::generate_proof (prover/src/lib.rs:561:9)",
"0x5b0a8f738c77: winter_prover::Prover::generate_proof (prover/src/lib.rs:442:35)",
"0x5b0a8f8fb51a: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x5b0a8f8efd42: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x5b0a8f656b7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8f7f8f11: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f7f8f11: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f7f8f11: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f7f8f11: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a33db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f898d46: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4e7acb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f77bc0e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x5b0a8f65955c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8f8031c7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f8031c7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f8031c7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f8031c7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a206e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f8972c7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f63542e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f73779f: winter_prover::Prover::generate_proof (prover/src/lib.rs:243:41)",
"0x5b0a8faa05bd: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:151:28)",
"0x5b0a8f96a35d: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x5b0a8f8f8a9a: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x5b0a8f63cf72: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:169:36)",
"0x5b0a8fab79cb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5b0a8fab76a1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5b0a8fab3c9b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5b0a8faae471: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5b0a8faaeaf7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5b0a8faa972b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5b0a8f817556: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f817556: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f817556: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f8e5782: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x5b0a8f815067: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5b0a8f623a1e: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x5b0a8fab781b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5b0a8fab7541: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5b0a8fab3d7b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5b0a8faae3a1: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5b0a8faaeb37: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5b0a8faa96db: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5b0a8f8ba7a5: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x5b0a8f7558e7: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:706:26)",
"0x5b0a8f739110: winter_prover::Prover::generate_proof (prover/src/lib.rs:472:37)",
"0x5b0a8f64f629: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x5b0a8f9886d0: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x5b0a8f71c12c: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:62:13)",
"0x5b0a8f77da92: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x5b0a8f5544c6: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:493:32)",
"0x5b0a8f50a09a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5b0a8f5d72a2: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5b0a8f4d5c9b: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5b0a8f4f2906: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5b0a8f69e564: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x5b0a8f8f49fc: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x5b0a8f7e5666: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f7e5666: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f7e5666: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f7e5666: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5b0a8f8a1b6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f89a5dc: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f8a99be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f8abedb: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x5b0a8f7be08d: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:540:13)",
"0x5b0a8f620428: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x5b0a8f6612fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8f7de135: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f7de135: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f7de135: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f7de135: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5b0a8f8a210e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f897737: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4e7cce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f8bf1b0: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:218:46)",
"0x5b0a8f7fd2f0: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f7fd2f0: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f7fd2f0: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f7fd2f0: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5b0a8f8a15bb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f89cda6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4e8dbb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f8f0075: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x5b0a8f8de6ec: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x5b0a8f65d40c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8f7ecbc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f7ecbc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f7ecbc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f7ecbc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a2a9e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f89dc79: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4e894e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f63a77a: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:50:26)",
"0x5b0a8f771a53: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x5b0a8fa9d709: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5b0a8fa9e4bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8faa1776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8faa1776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8faa1776: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8fa9c2b9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5b0a8fa9c70b: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:211:22)",
"0x5b0a8f3738fd: winterfell::main (examples/src/main.rs:80:24)",
"0x5b0a8f8d7ccb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5b0a8f8d7471: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5b0a8f6ebf0b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5b0a8f6c5d31: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5b0a8f6c9477: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5b0a8f6be1bb: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5b0a8f6b298e: winter_verifier::perform_verification (verifier/src/lib.rs:303:42)",
"0x5b0a8f675622: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b0a8f69b839: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b0a8f874252: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b0a8f8e5db8: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x5b0a8f8aae5d: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x5b0a8f8ae406: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x5b0a8f970caa: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x5b0a8f7fbee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f7fbee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f7fbee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f7fbee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a1dde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f898c57: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4eb47e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f900994: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x5b0a8fa9f502: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b0a8faa0179: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b0a8faa1ae2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b0a8fa97916: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:13)",
"0x5b0a8f96600c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x5b0a8f8bf26a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x5b0a8f689712: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b0a8f69b149: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b0a8f872122: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b0a8f771c91: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x5b0a8f6379d0: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x5b0a8f7d2141: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f7d2141: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f7d2141: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f7d2141: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a4f9b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f899346: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4e788b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f7374e3: winter_prover::Prover::generate_proof (prover/src/lib.rs:209:39)",
"0x5b0a8f65883c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8f817786: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f817786: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f817786: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f737f85: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:39)",
"0x5b0a8f5979cb: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x5b0a8f50432c: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5b0a8f76d954: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x5b0a8f78bbf6: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x5b0a8f484149: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5b0a8f482c19: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5b0a8f481030: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b0a8f481298: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x5b0a8f480b5a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x5b0a8f480b5a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x5b0a8f3756a1: alloc::string::String::reserve (alloc/src/string.rs:1152:9)",
"0x5b0a8f3756a1: <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend (alloc/src/string.rs:2173:14)",
"0x5b0a8f37577c: <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter (alloc/src/string.rs:2093:9)",
"0x5b0a8f9886eb: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x5b0a8f68a5e2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b0a8f69b209: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b0a8f8750e2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b0a8f57149b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x5b0a8f65a7bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8f807b27: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f807b27: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f807b27: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f807b27: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f880b76: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5b0a8f89aba7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4e9d6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f778d5b: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x5b0a8f8bf3df: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:226:50)",
"0x5b0a8f7eb787: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f7eb787: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f7eb787: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f7eb787: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a267e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f899807: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4eb71e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f59b33a: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:132:32)",
"0x5b0a8f76e01f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x5b0a8f625f5f: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x5b0a8f6637bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8f817876: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f817876: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f817876: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f737fc9: winter_prover::Prover::generate_proof (prover/src/lib.rs:299:44)",
"0x5b0a8fa9e75c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8faa1726: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8faa1726: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8faa1726: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8fa96d52: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:172:33)",
"0x5b0a8f73b808: winter_prover::Prover::generate_proof (prover/src/lib.rs:440:13)",
"0x5b0a8f647d36: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x5b0a8f8bf476: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:228:38)",
"0x5b0a8f8cb8ce: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x5b0a8f639bd9: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:82:31)",
"0x5b0a8f50f553: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5b0a8f65bf3a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8f7cd15e: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f7cd15e: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f7cd15e: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f7cd15e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5b0a8f8a321e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f898957: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f92f76e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f8b2755: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:144:35)",
"0x5b0a8f7f79d1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f7f79d1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f7f79d1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f7f79d1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a3cfb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f89c026: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4ea64b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f56fc9f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x5b0a8f643175: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x5b0a8f97cc96: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x5b0a8f77511b: winter_prover::trace::commitment::build_segment_queries::{{closure}}::{{closure}} (src/trace/commitment.rs:162:42)",
"0x5b0a8f5f3019: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5b0a8f7177d0: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x5b0a8f937819: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:129:9)",
"0x5b0a8f8f48e0: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x5b0a8f98865e: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x5b0a8f55d6f1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x5b0a8f3739d5: winterfell::main (examples/src/main.rs:83:11)",
"0x5b0a8fa9ba1e: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:168:21)",
"0x5b0a8f7f5f37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f7f5f37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f7f5f37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f7f5f37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a52be: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f89e2d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4e84de: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f70d2c4: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:198:23)",
"0x5b0a8f775199: winter_prover::trace::commitment::build_segment_queries::{{closure}}::{{closure}} (src/trace/commitment.rs:164:27)",
"0x5b0a8f773736: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:159:13)",
"0x5b0a8f96695b: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x5b0a8f76d9cc: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x5b0a8f65a51c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8f8cc2be: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f8cc2be: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f8cc2be: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5b0a8f886b77: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5b0a8f623c58: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x5b0a8f8e5a51: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x5b0a8f8fb5d7: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x5b0a8f970e0b: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x5b0a8f802637: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f802637: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f802637: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f802637: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a5ade: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f89e4b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4e8d0e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f737e32: winter_prover::Prover::generate_proof (prover/src/lib.rs:286:23)",
"0x5b0a8f6bc8d1: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:101:85)",
"0x5b0a8f50d432: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5b0a8f629c0a: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:107:27)",
"0x5b0a8f546bff: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5b0a8f6279a4: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:113:9)",
"0x5b0a8f715ca7: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x5b0a8f76781d: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x5b0a8f739f26: winter_prover::Prover::generate_proof (prover/src/lib.rs:548:13)",
"0x5b0a8f8b2bf3: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x5b0a8f7dd777: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f7dd777: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f7dd777: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f7dd777: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a22de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f89e697: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4eab8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f78b131: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x5b0a8f95d08f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x5b0a8f97ce9d: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x5b0a8f710d29: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x5b0a8f803c51: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f803c51: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f803c51: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f803c51: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a1f6b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f89ca96: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4e953b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f56fa47: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x5b0a8f7da727: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f7da727: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f7da727: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f7da727: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a45de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f89a507: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4eacfe: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f714277: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x5b0a8faa02bd: <winter_air::proof::commitments::Commitments as winter_utils::serde::Deserializable>::read_from (src/proof/commitments.rs:108:22)",
"0x5b0a8fa96bdc: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:167:27)",
"0x5b0a8f70d723: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:200:34)",
"0x5b0a8f4fcb0a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5b0a8f5d01bf: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5b0a8f7be2c9: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:534:17)",
"0x5b0a8f7d6197: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f7d6197: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f7d6197: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f7d6197: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a4f6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f896599: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4e9c6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f8b7e47: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x5b0a8f9374c0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:28)",
"0x5b0a8f64804d: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x5b0a8fa8ce7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8f9fd57c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f9fd57c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f9fd57c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5b0a8f9cdcc9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5b0a8f9cdcc9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5b0a8f9cdcc9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5b0a8f7bce2a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x5b0a8f8cc1f6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5b0a8f570c48: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5b0a8f73b665: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:17)",
"0x5b0a8f713d04: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x5b0a8f8e5c60: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x5b0a8f715f48: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x5b0a8f8b2bd0: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x5b0a8f6592bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8f811ffe: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f811ffe: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f811ffe: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f811ffe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5b0a8f8a343b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f89ab76: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f93c10b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f56901c: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x5b0a8f8b63d9: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x5b0a8f655bbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8f7de991: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f7de991: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f7de991: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f7de991: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a437b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f899ed6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4e778b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f6b1cd2: winter_verifier::perform_verification (verifier/src/lib.rs:212:41)",
"0x5b0a8f7bce3f: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x5b0a8f58c22a: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x5b0a8f647d7b: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x5b0a8f6bb718: winter_verifier::verify (verifier/src/lib.rs:97:38)",
"0x5b0a8f962e40: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x5b0a8f710d84: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x5b0a8f59947b: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x5b0a8f8fb42f: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x5b0a8f8fb504: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x5b0a8f7d5317: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f7d5317: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f7d5317: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f7d5317: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a306e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f89e587: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4e747e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f712c6a: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x5b0a8f95d103: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x5b0a8f66423c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8f801977: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f801977: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f801977: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f801977: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a265e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f896517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4e760e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f7395d6: winter_prover::Prover::generate_proof (prover/src/lib.rs:491:51)",
"0x5b0a8f801ba1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f801ba1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f801ba1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f801ba1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a4b3b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f89c0b6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4e86cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f737c5d: winter_prover::Prover::generate_proof (prover/src/lib.rs:266:43)",
"0x5b0a8f8d8dab: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5b0a8f8d77e1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5b0a8f6eb4eb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5b0a8f6c079d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5b0a8f5890fc: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5b0a8f586911: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x5b0a8f76e4f8: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x5b0a8f61e499: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x5b0a8f660dbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8f7cf3c1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f7cf3c1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f7cf3c1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f7cf3c1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a49db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f897d06: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4e9eab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f6b1d9f: winter_verifier::perform_verification (verifier/src/lib.rs:216:40)",
"0x5b0a8f8afaf6: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x5b0a8f6b2d3a: winter_verifier::perform_verification (verifier/src/lib.rs:316:28)",
"0x5b0a8f7ee107: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f7ee107: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f7ee107: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f7ee107: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a34fe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f89d4b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4ea86e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f7b3d8f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x5b0a8f66351c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8f809f17: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f809f17: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f809f17: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f809f17: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a3b2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f899147: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4e8a9e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f737416: winter_prover::Prover::generate_proof (prover/src/lib.rs:205:38)",
"0x5b0a8f983cb7: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x5b0a8f935a27: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:272:18)",
"0x5b0a8f934297: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:166:30)",
"0x5b0a8f962e2b: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x5b0a8f8b976a: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x5b0a8f500c7a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5b0a8f8de312: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x5b0a8f6d6d8f: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5b0a8f6e2711: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5b0a8f6ddcaa: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5b0a8f77eeb0: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x5b0a8f7378ba: winter_prover::Prover::generate_proof (prover/src/lib.rs:257:22)",
"0x5b0a8f654c0c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8f7f6b31: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f7f6b31: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f7f6b31: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f7f6b31: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a40ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f8985a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4e9e5b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f623967: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x5b0a8faaa1a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8faaa1a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8faaa1a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8faaa1a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5b0a8faaa5ee: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8faaa5b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8faab84e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8faa9299: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x5b0a8f6b26c1: winter_verifier::perform_verification (verifier/src/lib.rs:295:27)",
"0x5b0a8f70d210: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:197:28)",
"0x5b0a8f692152: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b0a8f69b389: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b0a8f873ff2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b0a8f970f89: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x5b0a8f8ca835: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x5b0a8f6201d0: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x5b0a8fa9d187: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x5b0a8fa9bfed: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:357:24)",
"0x5b0a8fa9cdc4: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:361:22)",
"0x5b0a8f7ed877: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f7ed877: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f7ed877: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f7ed877: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a270e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f89e317: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4eaace: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f8b6532: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x5b0a8fab087e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5b0a8fab1c4c: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5b0a8fab0d8a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5b0a8f8bc940: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x5b0a8f8b61bf: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x5b0a8f697f22: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b0a8f69afc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b0a8f874aaf: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b0a8f8f05d9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x5b0a8f933fd0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:149:33)",
"0x5b0a8f7ccc21: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f7ccc21: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f7ccc21: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f7ccc21: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a33ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f896ac6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4eb01b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f7396a3: winter_prover::Prover::generate_proof (prover/src/lib.rs:495:52)",
"0x5b0a8f8d802b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5b0a8f8d7681: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5b0a8f6eb12b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5b0a8f6c08bd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5b0a8f589f89: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5b0a8f765a00: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5b0a8f97cbcd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x5b0a8f817466: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f817466: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f817466: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f738051: winter_prover::Prover::generate_proof (prover/src/lib.rs:301:32)",
"0x5b0a8f657dbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b0a8f7fb127: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f7fb127: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f7fb127: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f7fb127: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a201e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f8986b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4eafae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f8b8e38: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x5b0a8f7b7d61: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x5b0a8f6b233e: winter_verifier::perform_verification (verifier/src/lib.rs:272:24)",
"0x5b0a8fa9f012: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b0a8faa01a9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b0a8faa1878: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b0a8fa97c1a: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:13)",
"0x5b0a8f6e4451: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x5b0a8f6ea77d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x5b0a8f6de10e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x5b0a8f5a11f6: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x5b0a8f970c8f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x5b0a8f80f907: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f80f907: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f80f907: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f80f907: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a2fde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f89c627: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4e793e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f51ad54: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:112:30)",
"0x5b0a8f8ba866: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x5b0a8f67cca2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b0a8f69b539: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b0a8f873b42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b0a8f8a6ffc: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x5b0a8f7c7d4a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x5b0a8f7fc111: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f7fc111: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f7fc111: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f7fc111: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a19fb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f89acc6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4e986b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f639a5c: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:82:9)",
"0x5b0a8f7dc227: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b0a8f7dc227: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b0a8f7dc227: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b0a8f7dc227: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b0a8f8a223e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b0a8f899d47: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b0a8f4eabee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b0a8f78c10f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x5b0a8f7138b6: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x5b0a8f71776c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x5b0a8f8ca6ed: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x5b0a8f8ddf64: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:142:33)"
]
}