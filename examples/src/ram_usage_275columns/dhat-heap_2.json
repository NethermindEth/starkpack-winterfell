{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell do-work -n 2 -l 65536",
"pid": 28606,
"tg": 157367949,
"te": 172080414,
"pps": [
{
"tb": 6528,
"tbk": 34,
"tl": 13702,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3416,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
16
]
},
{
"tb": 192,
"tbk": 2,
"tl": 69,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
19,
20,
21,
22,
23
]
},
{
"tb": 96,
"tbk": 1,
"tl": 8242,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
26,
27,
28,
29,
30
]
},
{
"tb": 432,
"tbk": 1,
"tl": 10923,
"mb": 432,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
32,
33,
34,
35,
36,
37,
38,
39
]
},
{
"tb": 96,
"tbk": 1,
"tl": 1768016,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
40,
41,
42,
43,
44
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 133104,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
46,
47,
48,
49,
50,
51,
52
]
},
{
"tb": 13793,
"tbk": 1,
"tl": 11077,
"mb": 13793,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
53,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 192,
"tbk": 1,
"tl": 171333052,
"mb": 192,
"mbk": 1,
"gb": 192,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
63,
64,
65,
66,
67,
68,
69,
70,
71
]
},
{
"tb": 32,
"tbk": 2,
"tl": 3152972,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
72,
73,
74,
75,
76,
77,
78,
79,
80
]
},
{
"tb": 144,
"tbk": 1,
"tl": 14575003,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
81,
82,
83,
84,
85,
86,
87,
88,
89
]
},
{
"tb": 56,
"tbk": 1,
"tl": 2692,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
90,
91,
92,
93,
94
]
},
{
"tb": 1536,
"tbk": 2,
"tl": 6616,
"mb": 1536,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
95,
96,
97,
98,
99,
100,
101,
102,
103
]
},
{
"tb": 281600,
"tbk": 1,
"tl": 3878,
"mb": 281600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
46,
47,
48,
104,
105,
106,
107
]
},
{
"tb": 24,
"tbk": 1,
"tl": 397651,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
95,
108,
109,
110,
111,
112,
113,
114,
115,
23
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3090,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
95,
108,
109,
110,
111,
112,
113,
116,
117,
118
]
},
{
"tb": 32,
"tbk": 1,
"tl": 4336925,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
119,
120,
121,
122,
123,
124,
125,
126,
127
]
},
{
"tb": 72,
"tbk": 1,
"tl": 33853,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
128,
129,
23,
130,
131
]
},
{
"tb": 32,
"tbk": 1,
"tl": 9854019,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
132,
133,
134,
135,
136,
137,
23
]
},
{
"tb": 15232,
"tbk": 4,
"tl": 44088,
"mb": 15232,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
53,
54,
55,
56,
57,
58,
59,
60,
138,
139
]
},
{
"tb": 64,
"tbk": 2,
"tl": 5330034,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
132,
133,
134,
135,
136,
140,
141
]
},
{
"tb": 13760,
"tbk": 32,
"tl": 88364,
"mb": 13760,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
142,
143,
144,
145,
146,
147,
148,
107
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 6778,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
149,
150,
151,
152,
153
]
},
{
"tb": 8800,
"tbk": 2,
"tl": 734608,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
154,
155,
156,
157,
158,
159,
160
]
},
{
"tb": 4194304,
"tbk": 2,
"tl": 19897115,
"mb": 4194304,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
161,
162,
163,
164,
165,
166,
167
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2838,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
148,
107,
91
]
},
{
"tb": 96,
"tbk": 1,
"tl": 989,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
40,
41,
42,
168,
169
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
170,
171,
172,
93,
94
]
},
{
"tb": 72,
"tbk": 1,
"tl": 11097,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
173,
174,
175,
176,
177,
178,
179
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
53,
54,
55,
56,
57,
58,
59,
180,
181,
172
]
},
{
"tb": 4194304,
"tbk": 2,
"tl": 1714115,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
46,
47,
48,
49,
50,
182,
183
]
},
{
"tb": 1048576,
"tbk": 2,
"tl": 15253896,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
46,
47,
48,
49,
184,
185,
186
]
},
{
"tb": 480,
"tbk": 4,
"tl": 10372,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
132,
133,
134,
135,
136,
187,
188
]
},
{
"tb": 64,
"tbk": 2,
"tl": 223,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
189,
190,
191,
192,
193,
194,
195,
196,
79,
197
]
},
{
"tb": 96,
"tbk": 2,
"tl": 1438244,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
154,
155,
156,
157,
198,
199,
200
]
},
{
"tb": 160,
"tbk": 1,
"tl": 8300,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
201,
202,
203,
204,
92
]
},
{
"tb": 224,
"tbk": 1,
"tl": 11099,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
53,
54,
55,
56,
57,
58,
59,
60,
205,
206
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 27863649,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
142,
143,
144,
145,
207,
208,
209,
210
]
},
{
"tb": 3680,
"tbk": 18,
"tl": 524,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
221
]
},
{
"tb": 13760,
"tbk": 32,
"tl": 106949,
"mb": 13760,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
142,
143,
144,
145,
146,
147,
14,
15
]
},
{
"tb": 576,
"tbk": 4,
"tl": 1540,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
154,
155,
156,
157,
222,
223,
224
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 325307,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
46,
47,
48,
49,
184,
185,
225
]
},
{
"tb": 8800,
"tbk": 2,
"tl": 8071,
"mb": 8800,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
154,
155,
156,
157,
226,
227,
228
]
},
{
"tb": 2097152,
"tbk": 2,
"tl": 5315027,
"mb": 2097152,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
161,
162,
163,
164,
165,
166,
229
]
},
{
"tb": 2097152,
"tbk": 2,
"tl": 3545802,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
161,
162,
163,
164,
165,
166,
230
]
},
{
"tb": 896,
"tbk": 6,
"tl": 10958,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
231,
232,
233,
234,
235
]
},
{
"tb": 768,
"tbk": 4,
"tl": 151,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
236,
237,
238,
239,
240,
241,
242,
243,
244
]
},
{
"tb": 111488,
"tbk": 420,
"tl": 234439,
"mb": 16384,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
142,
245,
246,
247,
248,
249,
250,
251,
252
]
},
{
"tb": 96,
"tbk": 1,
"tl": 9854030,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
40,
41,
42,
253,
23
]
},
{
"tb": 69614,
"tbk": 24,
"tl": 8732076,
"mb": 34816,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
254,
255,
256,
257,
258
]
},
{
"tb": 32,
"tbk": 2,
"tl": 213,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
72,
73,
74,
75,
76,
77,
78,
79,
197
]
},
{
"tb": 480,
"tbk": 4,
"tl": 7677,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
132,
133,
134,
135,
136,
187,
259
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2129,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
142,
260,
261,
262,
263,
264,
265,
266
]
},
{
"tb": 32,
"tbk": 2,
"tl": 342666079,
"mb": 32,
"mbk": 2,
"gb": 32,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
24,
53,
54,
55,
56,
57,
58,
59,
267,
268,
269
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1024,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
270,
271,
272,
273,
274,
275,
276,
277,
278
]
},
{
"tb": 32,
"tbk": 2,
"tl": 1438234,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
154,
155,
156,
157,
279,
199,
200
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
53,
54,
55,
56,
57,
58,
59,
180,
280,
281
]
},
{
"tb": 2880,
"tbk": 24,
"tl": 2367,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
132,
133,
134,
135,
136,
282,
220
]
},
{
"tb": 80,
"tbk": 1,
"tl": 141473746,
"mb": 80,
"mbk": 1,
"gb": 80,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
283,
284,
285,
286,
287,
288,
289,
290,
291
]
},
{
"tb": 3456,
"tbk": 12,
"tl": 4730,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
292,
293,
294,
295,
296,
297
]
},
{
"tb": 846685,
"tbk": 8,
"tl": 11312,
"mb": 563776,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
254,
255,
256,
257,
298
]
},
{
"tb": 3808,
"tbk": 4,
"tl": 28245,
"mb": 3808,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
142,
260,
261,
262,
263,
299,
300,
301
]
},
{
"tb": 32,
"tbk": 1,
"tl": 171310411,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
302,
303,
304,
305,
306,
307,
308,
309,
310
]
},
{
"tb": 32,
"tbk": 2,
"tl": 149,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
311,
312,
19,
313,
314,
30
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 7823566,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
142,
143,
144,
145,
207,
315,
316,
317
]
},
{
"tb": 15232,
"tbk": 4,
"tl": 1557,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
161,
162,
163,
164,
165,
166,
318
]
},
{
"tb": 384,
"tbk": 1,
"tl": 11109,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
319,
320,
321,
322,
179
]
},
{
"tb": 128,
"tbk": 2,
"tl": 330,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
231,
232,
233,
323,
324
]
},
{
"tb": 13200,
"tbk": 2,
"tl": 306120381,
"mb": 13200,
"mbk": 2,
"gb": 13200,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
8,
95,
325,
326,
327,
328,
329,
330,
331,
332
]
},
{
"tb": 32,
"tbk": 1,
"tl": 127,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
119,
333,
334,
335,
336,
337,
338,
339,
23,
130
]
},
{
"tb": 3808,
"tbk": 4,
"tl": 3986,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
142,
260,
261,
262,
263,
264,
340,
341
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 11070,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
53,
54,
55,
56,
57,
58,
59,
60,
342,
343
]
},
{
"tb": 192,
"tbk": 2,
"tl": 30,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
344,
345,
23,
130,
131
]
},
{
"tb": 48,
"tbk": 2,
"tl": 3152998,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
346,
347,
79,
80,
22,
23
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1281,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
72,
73,
74,
75,
76,
77,
348,
224,
349
]
},
{
"tb": 64,
"tbk": 2,
"tl": 264,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
72,
73,
74,
350,
351,
352,
353,
354,
355
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2134,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
356,
265,
266,
23
]
},
{
"tb": 480,
"tbk": 4,
"tl": 222,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
132,
133,
134,
135,
136,
357,
265
]
},
{
"tb": 13200,
"tbk": 2,
"tl": 27474206,
"mb": 13200,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
95,
108,
109,
110,
111,
112,
113,
358,
359,
360
]
},
{
"tb": 192,
"tbk": 1,
"tl": 39478,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
173,
361,
362,
363,
364,
365,
366,
23,
130
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 14681575,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
142,
143,
144,
145,
207,
315,
316,
367
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 29023,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
254,
255,
256,
368,
369
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4081,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
370,
371,
372,
373,
374,
375,
376,
377
]
},
{
"tb": 128,
"tbk": 1,
"tl": 5936,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
378,
379,
380,
381,
107
]
},
{
"tb": 17600,
"tbk": 4,
"tl": 2613770,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
161,
162,
163,
164,
165,
166,
382
]
},
{
"tb": 64,
"tbk": 2,
"tl": 2,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
383,
384,
93,
94
]
},
{
"tb": 32,
"tbk": 2,
"tl": 14,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
311,
385,
344,
345,
23,
130
]
},
{
"tb": 576716800,
"tbk": 550,
"tl": 82089642129,
"mb": 576716800,
"mbk": 550,
"gb": 576716800,
"gbk": 550,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
72,
73,
74,
350,
351,
352,
386,
387,
388
]
},
{
"tb": 256,
"tbk": 1,
"tl": 9395,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
46,
47,
48,
104,
389,
390,
92
]
},
{
"tb": 2736,
"tbk": 4,
"tl": 27709,
"mb": 2736,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
391,
300,
301
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 171308286,
"mb": 2097152,
"mbk": 1,
"gb": 2097152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
46,
47,
48,
49,
184,
392,
393
]
},
{
"tb": 72,
"tbk": 1,
"tl": 398454,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
95,
108,
109,
110,
111,
112,
113,
394,
115,
23
]
},
{
"tb": 1248,
"tbk": 12,
"tl": 312,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
395,
396,
397,
398,
399,
400
]
},
{
"tb": 96,
"tbk": 1,
"tl": 32320,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
401,
402,
403,
404,
405
]
},
{
"tb": 8800,
"tbk": 2,
"tl": 8081,
"mb": 8800,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
154,
155,
156,
157,
406,
227,
228
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 738015,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
46,
47,
48,
49,
407,
408,
409
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 150934,
"mb": 1179648,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
46,
47,
48,
49,
410,
411,
412
]
},
{
"tb": 16,
"tbk": 1,
"tl": 141473698,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
413,
414,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1738,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
40,
41,
42,
422,
266
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 7922901,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
142,
143,
144,
145,
207,
423,
424,
425
]
},
{
"tb": 65408,
"tbk": 18,
"tl": 72,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
231,
232,
233,
426,
427
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 188206,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
142,
143,
144,
145,
207,
315,
316,
428
]
},
{
"tb": 192,
"tbk": 1,
"tl": 11041,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
173,
361,
362,
363,
364,
429,
430,
431,
179
]
},
{
"tb": 2097152,
"tbk": 2,
"tl": 789322,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
46,
47,
48,
49,
184,
185,
432
]
},
{
"tb": 576716800,
"tbk": 550,
"tl": 7531237597,
"mb": 576716800,
"mbk": 550,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
72,
73,
74,
350,
351,
352,
433,
111,
112,
113,
358
]
},
{
"tb": 2097152,
"tbk": 2,
"tl": 17750294,
"mb": 2097152,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
72,
73,
74,
75,
76,
77,
434,
435,
436
]
},
{
"tb": 64,
"tbk": 2,
"tl": 21822,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
437,
438,
439,
440,
441,
442
]
},
{
"tb": 15232,
"tbk": 4,
"tl": 30614,
"mb": 15232,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
46,
47,
48,
443,
300,
301,
92
]
},
{
"tb": 48,
"tbk": 2,
"tl": 5330091,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
444,
445,
446,
447,
448,
449,
450,
451,
452,
453
]
},
{
"tb": 16777216,
"tbk": 2,
"tl": 127830564,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
46,
47,
48,
49,
454,
455,
456
]
},
{
"tb": 64,
"tbk": 1,
"tl": 3826465,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
231,
232,
233,
457,
458
]
},
{
"tb": 160,
"tbk": 1,
"tl": 172068884,
"mb": 160,
"mbk": 1,
"gb": 160,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
459,
460,
461,
462,
463,
464,
465,
466,
467
]
},
{
"tb": 2348810240,
"tbk": 1,
"tl": 13642611,
"mb": 2348810240,
"mbk": 1,
"gb": 2348810240,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
72,
73,
74,
350,
351,
352,
468,
469,
470
]
},
{
"tb": 4613734400,
"tbk": 524288,
"tl": 2898356,
"mb": 8800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
471,
472,
473,
474,
475,
476,
477,
209
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 280520,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
72,
73,
74,
350,
351,
352,
478,
479,
44
]
},
{
"tb": 256,
"tbk": 4,
"tl": 129993,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
46,
47,
48,
49,
184,
185,
480
]
},
{
"tb": 140800,
"tbk": 32,
"tl": 167,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
72,
73,
74,
350,
351,
352,
478,
481,
482
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2595,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
142,
260,
261,
262,
263,
264,
483,
118
]
},
{
"tb": 17600,
"tbk": 2,
"tl": 16571,
"mb": 17600,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
72,
73,
74,
350,
351,
352,
478,
484,
92
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
53,
54,
55,
56,
57,
58,
59,
180,
280,
172
]
},
{
"tb": 32,
"tbk": 1,
"tl": 10837,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
142,
143,
144,
145,
146,
485,
486,
92
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3425,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
487,
488,
489,
490,
491,
492,
493,
494,
495
]
},
{
"tb": 2306867200,
"tbk": 524288,
"tl": 6895235,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
72,
73,
74,
75,
76,
77,
496,
477,
209
]
},
{
"tb": 281600,
"tbk": 64,
"tl": 206654,
"mb": 281600,
"mbk": 64,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
72,
73,
74,
75,
76,
77,
497,
498,
499
]
},
{
"tb": 1024,
"tbk": 2,
"tl": 2916,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
46,
47,
48,
500,
169,
30,
93
]
},
{
"tb": 512,
"tbk": 1,
"tl": 50,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
501,
502,
503,
504,
505,
506,
507,
508
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
170,
171,
281,
509,
23,
130
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4088,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
46,
47,
48,
510,
511,
30,
93
]
},
{
"tb": 48,
"tbk": 1,
"tl": 6936069,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
512,
513,
514,
515,
516,
517,
518,
519,
520
]
},
{
"tb": 64,
"tbk": 2,
"tl": 12491,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
521,
44,
23,
130,
131
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 20309,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
72,
73,
74,
350,
351,
352,
478,
522,
23
]
},
{
"tb": 24,
"tbk": 1,
"tl": 11074,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
523,
524,
62,
179
]
},
{
"tb": 48,
"tbk": 1,
"tl": 14373411,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
525,
526,
527,
528,
529,
23,
130,
131
]
},
{
"tb": 48,
"tbk": 2,
"tl": 233,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
346,
347,
79,
197,
314,
30
]
},
{
"tb": 3840,
"tbk": 16,
"tl": 2319,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
231,
232,
233,
530,
531
]
},
{
"tb": 48,
"tbk": 1,
"tl": 14373399,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
95,
532,
533,
534,
535,
23,
130,
131
]
},
{
"tb": 3680,
"tbk": 18,
"tl": 84,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
211,
212,
213,
214,
215,
216,
217,
218,
536,
483,
118
]
},
{
"tb": 96,
"tbk": 4,
"tl": 143,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
537,
538,
539,
540,
541,
542
]
},
{
"tb": 17600,
"tbk": 2,
"tl": 16399,
"mb": 17600,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
72,
73,
74,
350,
351,
352,
543,
544,
545
]
},
{
"tb": 512,
"tbk": 1,
"tl": 29,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
46,
47,
48,
546,
547,
30,
93
]
},
{
"tb": 15232,
"tbk": 4,
"tl": 2285,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
548,
549,
550,
551,
552,
553,
554,
555,
556
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2605,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
211,
212,
557,
558,
559,
560,
561,
562,
563,
564
]
},
{
"tb": 1024,
"tbk": 2,
"tl": 2925,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
46,
47,
48,
565,
169,
30,
93
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
53,
54,
55,
56,
57,
58,
59,
180,
181,
281
]
},
{
"tb": 64,
"tbk": 2,
"tl": 3152986,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
189,
190,
191,
192,
193,
194,
195,
196,
79,
80
]
},
{
"tb": 13800,
"tbk": 25,
"tl": 6295,
"mb": 3864,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
566,
567,
568,
569,
570,
571
]
},
{
"tb": 96,
"tbk": 1,
"tl": 994,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
40,
41,
42,
572,
169
]
},
{
"tb": 32640,
"tbk": 16,
"tl": 7653044,
"mb": 16384,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
231,
232,
233,
573,
458
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2597,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
211,
212,
574,
575,
576,
577,
578,
579,
580,
581
]
},
{
"tb": 15232,
"tbk": 4,
"tl": 508,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
161,
162,
163,
164,
165,
166,
582
]
},
{
"tb": 48,
"tbk": 1,
"tl": 42,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
95,
108,
109,
110,
111,
112,
113,
116,
583,
509
]
},
{
"tb": 512,
"tbk": 1,
"tl": 9,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
584,
585,
586,
587,
588,
589,
590,
591
]
},
{
"tb": 6291456,
"tbk": 3,
"tl": 1194737,
"mb": 6291456,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
72,
73,
74,
350,
351,
352,
433,
111,
112,
113,
394
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 2878,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
142,
592,
593,
594,
595,
596,
597,
598,
599
]
},
{
"tb": 121856,
"tbk": 4,
"tl": 1574,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
161,
162,
163,
164,
165,
166,
600
]
},
{
"tb": 512,
"tbk": 1,
"tl": 17,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
46,
47,
48,
601,
547,
30,
93
]
},
{
"tb": 512,
"tbk": 1,
"tl": 16,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
46,
47,
48,
49,
602,
603,
547
]
},
{
"tb": 768,
"tbk": 2,
"tl": 3152757,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
604,
605,
606,
607,
608,
609,
610,
611,
612
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 1723208,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
46,
47,
48,
49,
454,
455,
613
]
},
{
"tb": 128,
"tbk": 2,
"tl": 16445,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
231,
232,
233,
323,
614
]
},
{
"tb": 8388672,
"tbk": 6,
"tl": 151299,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
46,
47,
48,
49,
602,
615,
616
]
},
{
"tb": 4194240,
"tbk": 16,
"tl": 10912,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
231,
232,
233,
617,
23
]
},
{
"tb": 144,
"tbk": 6,
"tl": 131,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
618,
619,
620,
621,
622,
623,
624,
625,
626
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2590,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
211,
212,
627,
628,
629,
630,
631,
632,
633,
634
]
},
{
"tb": 96,
"tbk": 4,
"tl": 216,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
635,
538,
539,
540,
541,
542
]
},
{
"tb": 48,
"tbk": 1,
"tl": 14373393,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
636,
637,
638,
639,
640,
23,
130,
131
]
},
{
"tb": 96,
"tbk": 1,
"tl": 4056,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
641,
642,
643,
644,
645,
646,
647,
648,
649
]
},
{
"tb": 96,
"tbk": 1,
"tl": 13785739,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
650,
651,
652,
653,
654,
655,
656,
657,
658
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 551,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
132,
133,
134,
135,
136,
357,
340
]
},
{
"tb": 281600,
"tbk": 1,
"tl": 32706,
"mb": 281600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
53,
659,
660,
661,
662,
405,
118,
129
]
},
{
"tb": 64,
"tbk": 2,
"tl": 22099,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
53,
54,
55,
56,
57,
58,
59,
60,
663,
664
]
},
{
"tb": 96,
"tbk": 1,
"tl": 9099,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
40,
41,
42,
665,
301
]
},
{
"tb": 6072,
"tbk": 11,
"tl": 4307,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
566,
567,
568,
666,
667,
668
]
},
{
"tb": 32,
"tbk": 1,
"tl": 9854013,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
132,
133,
134,
135,
136,
669,
23
]
},
{
"tb": 32,
"tbk": 2,
"tl": 1175480,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
154,
155,
156,
157,
670,
345,
23
]
},
{
"tb": 3680,
"tbk": 18,
"tl": 520,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
671
]
},
{
"tb": 6768,
"tbk": 42,
"tl": 911,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
211,
212,
213,
214,
215,
216,
217,
218,
219,
220,
672
]
},
{
"tb": 64,
"tbk": 2,
"tl": 367,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
383,
673,
674,
675,
676,
677
]
},
{
"tb": 1904,
"tbk": 4,
"tl": 2834,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
678,
679,
680,
681,
682,
683,
684,
685
]
},
{
"tb": 192,
"tbk": 2,
"tl": 44,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
19,
313,
314,
30,
93
]
},
{
"tb": 256,
"tbk": 1,
"tl": 659,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
211,
212,
686,
687,
688,
689,
220,
221,
690
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1287,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
691,
692,
693,
694,
695,
696,
697,
698,
224,
349
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 30080,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
53,
659,
660,
661,
699,
700,
266,
23
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1986776,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
701,
702,
703,
704,
23
]
},
{
"tb": 2736,
"tbk": 6,
"tl": 2552,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
705,
706,
707,
708,
709,
710
]
},
{
"tb": 72,
"tbk": 3,
"tl": 1192978,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
444,
445,
446,
447,
448,
449,
450,
451,
711,
712,
713,
714
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 325962,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
72,
73,
74,
75,
76,
77,
715,
716,
23
]
},
{
"tb": 256,
"tbk": 1,
"tl": 638,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
211,
212,
686,
687,
688,
689,
220,
671,
717
]
},
{
"tb": 281600,
"tbk": 2,
"tl": 64766,
"mb": 281600,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
53,
659,
660,
661,
718,
405,
118,
129
]
},
{
"tb": 96,
"tbk": 4,
"tl": 6305457,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
444,
445,
446,
447,
448,
449,
450,
451,
719,
720
]
},
{
"tb": 16,
"tbk": 1,
"tl": 397662,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
72,
73,
74,
350,
351,
352,
721,
711,
712,
713,
714
]
},
{
"tb": 2304,
"tbk": 8,
"tl": 292,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
722,
723,
724,
725,
726
]
},
{
"tb": 2304,
"tbk": 12,
"tl": 4835,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
727,
728,
729
]
},
{
"tb": 8388672,
"tbk": 6,
"tl": 151162,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
46,
47,
48,
49,
730,
616,
731
]
},
{
"tb": 23520,
"tbk": 112,
"tl": 755402,
"mb": 23520,
"mbk": 112,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
142,
143,
144,
145,
146,
147,
391,
300
]
},
{
"tb": 128,
"tbk": 2,
"tl": 16453,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
231,
232,
233,
732,
614
]
},
{
"tb": 96,
"tbk": 1,
"tl": 4012,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
733,
734,
735,
736,
737,
738,
739,
740,
741
]
},
{
"tb": 512,
"tbk": 1,
"tl": 6119,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
742,
743,
744,
745,
746,
747,
748,
749
]
},
{
"tb": 64,
"tbk": 1,
"tl": 7699,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
231,
232,
233,
457,
750
]
},
{
"tb": 64,
"tbk": 4,
"tl": 3153269,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
751,
752,
753,
754,
755,
756,
757,
758
]
},
{
"tb": 432,
"tbk": 1,
"tl": 171310589,
"mb": 432,
"mbk": 1,
"gb": 432,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
759,
760,
761,
762,
763,
764,
765,
766
]
},
{
"tb": 96,
"tbk": 1,
"tl": 171332931,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
767,
768,
769,
770,
771,
772,
509,
23
]
},
{
"tb": 102144,
"tbk": 224,
"tl": 61912,
"mb": 26448,
"mbk": 58,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
705,
706,
707,
773,
774,
775
]
},
{
"tb": 96,
"tbk": 4,
"tl": 10660118,
"mb": 96,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
444,
445,
446,
447,
448,
449,
450,
451,
776,
777
]
},
{
"tb": 2097152,
"tbk": 2,
"tl": 144829,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
46,
47,
48,
49,
184,
185,
778
]
},
{
"tb": 281600,
"tbk": 1,
"tl": 11091,
"mb": 281600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
53,
54,
55,
56,
57,
58,
59,
60,
779,
62
]
},
{
"tb": 2176,
"tbk": 4,
"tl": 72,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
780,
781,
782,
783,
784,
785
]
},
{
"tb": 32,
"tbk": 2,
"tl": 231,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
311,
385,
19,
20,
21,
22
]
},
{
"tb": 96,
"tbk": 1,
"tl": 3240,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
786,
787,
788,
789,
118
]
},
{
"tb": 256,
"tbk": 1,
"tl": 11002,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
53,
54,
55,
56,
57,
58,
59,
60,
790,
431
]
},
{
"tb": 96,
"tbk": 1,
"tl": 7775,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
40,
41,
42,
791,
750
]
},
{
"tb": 256,
"tbk": 1,
"tl": 12,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
72,
73,
74,
350,
351,
352,
792,
366,
23
]
},
{
"tb": 160,
"tbk": 1,
"tl": 8199,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
793,
794,
795,
796,
797,
798,
799,
800,
801
]
},
{
"tb": 16,
"tbk": 1,
"tl": 156727688,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
413,
802,
803,
804,
805,
806,
807,
808,
809
]
},
{
"tb": 512,
"tbk": 1,
"tl": 18,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
46,
47,
48,
49,
602,
810,
169
]
},
{
"tb": 84816,
"tbk": 1644,
"tl": 8940115,
"mb": 16992,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
254,
811,
812,
813,
814,
815,
816
]
},
{
"tb": 17632,
"tbk": 5,
"tl": 26266068,
"mb": 17632,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
817,
818,
819,
820,
821,
822,
823,
824
]
},
{
"tb": 912,
"tbk": 4,
"tl": 1263,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
211,
212,
686,
687,
688,
689,
220,
672,
825
]
},
{
"tb": 16,
"tbk": 2,
"tl": 789370,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
211,
212,
686,
687,
688,
826,
827,
453,
23
]
},
{
"tb": 32,
"tbk": 2,
"tl": 6,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
311,
312,
344,
345,
23,
130
]
},
{
"tb": 9584640,
"tbk": 4,
"tl": 208798,
"mb": 9584640,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
46,
47,
48,
49,
828,
829,
412
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 55579,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
72,
73,
74,
75,
76,
77,
830,
266,
23
]
},
{
"tb": 64,
"tbk": 1,
"tl": 69,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
831,
832,
833,
834,
835,
836,
837,
838,
839
]
},
{
"tb": 281600,
"tbk": 2,
"tl": 12101,
"mb": 281600,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
46,
47,
48,
104,
105,
840,
107
]
},
{
"tb": 17600,
"tbk": 2,
"tl": 58,
"mb": 8800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
46,
47,
48,
104,
841,
842,
92
]
},
{
"tb": 32640,
"tbk": 16,
"tl": 15491,
"mb": 16384,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
231,
232,
233,
573,
750
]
},
{
"tb": 16,
"tbk": 1,
"tl": 22,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
211,
212,
843,
844,
845,
846,
847,
848,
849,
850
]
},
{
"tb": 32,
"tbk": 2,
"tl": 155,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
311,
385,
19,
313,
314,
30
]
},
{
"tb": 32,
"tbk": 2,
"tl": 225,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
311,
312,
19,
20,
21,
22
]
},
{
"tb": 2306867200,
"tbk": 524288,
"tl": 5051916,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
72,
73,
74,
75,
76,
77,
851,
477,
209
]
},
{
"tb": 8,
"tbk": 1,
"tl": 396957,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
211,
212,
213,
214,
215,
216,
217,
218,
852,
115,
23
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 44,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
46,
47,
48,
49,
184,
185,
853
]
},
{
"tb": 1152,
"tbk": 4,
"tl": 94,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
854,
855,
856,
857,
858,
859,
860,
861,
862
]
},
{
"tb": 48,
"tbk": 1,
"tl": 8876874,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
95,
863,
864,
865,
866,
867,
868,
869,
870
]
},
{
"tb": 33554432,
"tbk": 524288,
"tl": 9335393,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
871,
872,
873,
874,
875,
876,
877,
878,
879
]
},
{
"tb": 15232,
"tbk": 4,
"tl": 590,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
46,
47,
48,
49,
602,
880,
223
]
},
{
"tb": 64,
"tbk": 1,
"tl": 84,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
831,
881,
882,
883,
884,
885,
886,
887,
888
]
},
{
"tb": 201326592,
"tbk": 3,
"tl": 14419274,
"mb": 67108864,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
161,
162,
163,
164,
165,
166,
889
]
},
{
"tb": 4563402752,
"tbk": 68,
"tl": 2310630025,
"mb": 2281701376,
"mbk": 34,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
548,
890,
891,
892,
893,
894,
895,
896
]
},
{
"tb": 576716800,
"tbk": 550,
"tl": 94532640536,
"mb": 576716800,
"mbk": 550,
"gb": 576716800,
"gbk": 550,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
46,
47,
48,
49,
897,
898,
899
]
},
{
"tb": 3328,
"tbk": 32,
"tl": 460,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
395,
396,
397,
900,
901,
902
]
},
{
"tb": 6768,
"tbk": 42,
"tl": 176,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
211,
212,
213,
214,
215,
216,
217,
218,
536,
340,
341
]
},
{
"tb": 64,
"tbk": 2,
"tl": 47,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
132,
903,
904,
905,
906,
907,
908,
909,
910,
911,
912
]
},
{
"tb": 48,
"tbk": 1,
"tl": 156922725,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
636,
913,
914,
915,
916,
917,
918,
919,
920
]
},
{
"tb": 4194304,
"tbk": 262144,
"tl": 199368,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
72,
73,
74,
350,
351,
352,
921,
922,
923
]
},
{
"tb": 64,
"tbk": 1,
"tl": 5,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
924,
925,
926,
927,
928,
929,
930,
931,
932
]
},
{
"tb": 256,
"tbk": 4,
"tl": 6304945,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
933,
934,
935,
936,
937
]
},
{
"tb": 640,
"tbk": 4,
"tl": 6305439,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
938,
939,
940,
941,
720
]
},
{
"tb": 96,
"tbk": 1,
"tl": 3826558,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
40,
41,
42,
791,
458
]
},
{
"tb": 32,
"tbk": 2,
"tl": 196,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
161,
162,
163,
164,
165,
166,
942
]
},
{
"tb": 2736,
"tbk": 4,
"tl": 4000,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
356,
340,
341,
366
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1187,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
211,
212,
943,
944,
945,
946,
947,
948,
949,
950
]
},
{
"tb": 32,
"tbk": 2,
"tl": 22217,
"mb": 32,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
53,
54,
55,
56,
57,
58,
59,
60,
951,
952
]
},
{
"tb": 192,
"tbk": 1,
"tl": 11052,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
953,
954,
955,
956,
179
]
},
{
"tb": 13200,
"tbk": 2,
"tl": 343766437,
"mb": 13200,
"mbk": 2,
"gb": 13200,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
8,
95,
957,
958,
959,
960,
961,
962,
963,
964
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 5469,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
46,
47,
48,
104,
105,
965,
15
]
},
{
"tb": 48,
"tbk": 1,
"tl": 14373404,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
966,
967,
968,
969,
970,
23,
130,
131
]
},
{
"tb": 256,
"tbk": 1,
"tl": 36,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
691,
692,
693,
694,
695,
696,
697,
971,
366,
23
]
},
{
"tb": 2848,
"tbk": 12,
"tl": 1288,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
691,
972,
973,
974,
975,
976,
977,
978,
979
]
},
{
"tb": 16777216,
"tbk": 8,
"tl": 20611791,
"mb": 16777216,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
46,
47,
48,
49,
980,
981,
982
]
},
{
"tb": 64,
"tbk": 2,
"tl": 68,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
46,
47,
48,
104,
983,
842,
92
]
},
{
"tb": 15232,
"tbk": 119,
"tl": 99,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
984,
985,
986,
987,
988,
989,
990,
991
]
},
{
"tb": 96,
"tbk": 1,
"tl": 47,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
40,
41,
42,
992,
92
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2625,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
211,
212,
993,
994,
995,
996,
997,
998,
999,
1000
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 171310359,
"mb": 524288,
"mbk": 1,
"gb": 524288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
46,
47,
48,
49,
184,
1001,
1002
]
},
{
"tb": 480,
"tbk": 4,
"tl": 5330049,
"mb": 384,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
1003,
453,
23,
130,
131
]
},
{
"tb": 144,
"tbk": 1,
"tl": 397674,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
1004,
1005,
1006,
1007,
712,
713,
714,
1008,
115,
23
]
},
{
"tb": 288,
"tbk": 1,
"tl": 31362,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
1009,
1010,
1011,
1012,
412
]
},
{
"tb": 281600,
"tbk": 32,
"tl": 89552,
"mb": 281600,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
471,
472,
473,
474,
475,
1013,
482,
1014
]
},
{
"tb": 952,
"tbk": 4,
"tl": 3971,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
691,
692,
693,
694,
695,
696,
697,
1015,
1016,
224
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 397643,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
72,
73,
74,
350,
351,
352,
433,
111,
112,
113,
114
]
},
{
"tb": 256,
"tbk": 1,
"tl": 10418,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
72,
73,
74,
75,
76,
77,
1017,
1018,
1019
]
},
{
"tb": 2306867200,
"tbk": 524288,
"tl": 2796137,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
72,
73,
74,
350,
351,
352,
478,
1020,
477
]
},
{
"tb": 15232,
"tbk": 4,
"tl": 3071,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
548,
890,
891,
892,
1021,
341,
366,
23
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
53,
54,
55,
56,
57,
58,
59,
267,
1022,
92
]
},
{
"tb": 160,
"tbk": 2,
"tl": 3152443,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
1023,
1024,
1025,
1026,
1027,
1028,
1029,
1030,
1031
]
},
{
"tb": 160,
"tbk": 1,
"tl": 10827,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
142,
143,
144,
145,
146,
1032,
486,
92
]
},
{
"tb": 192,
"tbk": 2,
"tl": 29,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
1004,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040
]
},
{
"tb": 192,
"tbk": 1,
"tl": 8225,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
1041,
1042,
1043,
1044,
30
]
},
{
"tb": 32,
"tbk": 2,
"tl": 271,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
72,
73,
74,
350,
351,
352,
1045,
354,
355
]
},
{
"tb": 48,
"tbk": 1,
"tl": 201,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
95,
1046,
1047,
1048,
1049,
1050,
1051,
1052,
1053
]
},
{
"tb": 3936,
"tbk": 4,
"tl": 112,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
1054,
1055,
1056,
1057,
1058,
1059
]
},
{
"tb": 17602,
"tbk": 2,
"tl": 55,
"mb": 8801,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
132,
903,
904,
905,
906,
907,
908,
909,
1060,
911,
912
]
},
{
"tb": 17600,
"tbk": 4,
"tl": 2613786,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
161,
162,
163,
164,
165,
166,
1061
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2613,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
211,
212,
1062,
1063,
1064,
1065,
1066,
1067,
1068,
1069
]
},
{
"tb": 4697620480,
"tbk": 2,
"tl": 121664353,
"mb": 4697620480,
"mbk": 2,
"gb": 4697620480,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
8,
548,
890,
891,
892,
893,
1070,
1071,
1072
]
},
{
"tb": 32,
"tbk": 1,
"tl": 4,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
270,
271,
272,
273,
274,
275,
276,
277,
1073
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 205037,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
142,
143,
144,
145,
207,
1074,
1075,
412
]
},
{
"tb": 17602,
"tbk": 2,
"tl": 22108,
"mb": 17602,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
53,
54,
55,
56,
57,
58,
59,
60,
1076,
664
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 4349,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
149,
150,
151,
152,
1077
]
},
{
"tb": 140864,
"tbk": 34,
"tl": 6970,
"mb": 140800,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
72,
73,
74,
350,
351,
352,
433,
111,
112,
113,
116
]
},
{
"tb": 480,
"tbk": 4,
"tl": 222,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
132,
133,
134,
135,
136,
357,
483
]
},
{
"tb": 64,
"tbk": 2,
"tl": 342621131,
"mb": 64,
"mbk": 2,
"gb": 64,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
17,
437,
1078,
1079,
1080,
1081,
1082
]
},
{
"tb": 4194304,
"tbk": 2,
"tl": 782215,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
1083,
1084,
1085,
1086,
1087,
1088,
1089,
1090
]
},
{
"tb": 3680,
"tbk": 18,
"tl": 89,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
211,
212,
213,
214,
215,
216,
217,
218,
536,
265,
266
]
},
{
"tb": 32,
"tbk": 1,
"tl": 4156,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
72,
73,
74,
75,
76,
77,
1091,
92,
93
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2242,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
132,
133,
134,
135,
136,
1092,
405
]
},
{
"tb": 128,
"tbk": 2,
"tl": 340,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
231,
232,
233,
732,
324
]
},
{
"tb": 1704,
"tbk": 3,
"tl": 129482940,
"mb": 840,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
1093,
1094,
1095,
1096,
1097,
1098,
1099,
1100,
1101
]
},
{
"tb": 640,
"tbk": 4,
"tl": 1025,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
1102,
1103,
1104,
1105,
340
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 3414,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
142,
1106,
1107,
1108,
1109,
1110,
1111,
1112,
1113
]
},
{
"tb": 96,
"tbk": 2,
"tl": 14417,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
1114,
44,
23,
130,
131
]
},
{
"tb": 96,
"tbk": 2,
"tl": 12192974,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
1115,
1116,
1117,
1118,
1119,
1120
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2603,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
356,
483,
118,
129
]
},
{
"tb": 65176,
"tbk": 38,
"tl": 144119,
"mb": 32640,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
254,
255,
256,
368,
1121
]
},
{
"tb": 32,
"tbk": 2,
"tl": 5330084,
"mb": 32,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
72,
73,
74,
350,
351,
352,
721,
452,
453
]
},
{
"tb": 23638,
"tbk": 4,
"tl": 44072,
"mb": 23638,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
53,
54,
55,
56,
57,
58,
59,
60,
1122,
139
]
},
{
"tb": 224,
"tbk": 1,
"tl": 9104,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
1123,
1124,
1125,
1126,
301
]
},
{
"tb": 512,
"tbk": 1,
"tl": 33,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
72,
73,
74,
350,
351,
352,
1127,
169,
30
]
},
{
"tb": 15232,
"tbk": 119,
"tl": 113,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
46,
47,
48,
104,
1128,
300,
301
]
},
{
"tb": 80,
"tbk": 1,
"tl": 7694,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
45,
46,
47,
48,
1129,
1130,
30,
93
]
},
{
"tb": 192,
"tbk": 4,
"tl": 10515091,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
95,
1131,
1132,
1133,
1134,
1135,
1136,
1137,
1138
]
},
{
"tb": 2400,
"tbk": 12,
"tl": 216,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1139,
1140,
1141,
1142,
1143,
1144
]
},
{
"tb": 13793,
"tbk": 1,
"tl": 11066,
"mb": 13793,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
53,
54,
55,
56,
57,
58,
59,
60,
1145,
343
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 31089,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
254,
255,
256,
368,
1146
]
}
],
"ftbl": [
"[root]",
"0x596506dde739: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x596506deab7b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x596506dea5f1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x596506de6bbb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x596506de387e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x596506de4c4c: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x596506de3d8a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5965068c94a9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x596506990e8c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x596506b4a966: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b4a966: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b4a966: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5965069cfc9d: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x596506c2bca7: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x5965068b777b: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x5965068a323c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x5965068c8937: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x596506a4f08f: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:60:9)",
"0x596506af0985: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:364:13)",
"0x59650696d670: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:40:22)",
"0x596506c696e7: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:13)",
"0x596506a6eb32: winter_prover::Prover::generate_proof (prover/src/lib.rs:403:21)",
"0x596506a8bcd4: winter_prover::Prover::prove (prover/src/lib.rs:171:37)",
"0x596506e30b79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x596506e2f319: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5965069c6022: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5965069ce9e9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x596506ba5842: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5965069e6673: winter_verifier::perform_verification (verifier/src/lib.rs:177:9)",
"0x5965069ee9d2: winter_verifier::verify (verifier/src/lib.rs:110:21)",
"0x59650698c01c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x596506b1eee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b1eee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b1eee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b1eee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506baebcf: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x596506bcc849: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681be5e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5965069ee784: winter_verifier::verify (verifier/src/lib.rs:101:24)",
"0x5965069ba972: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5965069cea19: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x596506ba4402: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x596506c11810: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x596506a6c868: winter_prover::Prover::generate_proof (prover/src/lib.rs:514:9)",
"0x5965069920ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x596506b4a736: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b4a736: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b4a736: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5965068d6e7b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5965068cc47b: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x596506c2e42f: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x596506c2e504: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x596506e2f5ca: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x596506e30bbc: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506e30bbc: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506e30bbc: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x596506e317fc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x596506e317fc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x596506e317fc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x596506e2ee2c: <winter_utils::serde::byte_reader::SliceReader as winter_utils::serde::byte_reader::ByteReader>::read_vec (src/serde/byte_reader.rs:151:22)",
"0x596506dceec9: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:352:21)",
"0x596506dc9e53: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:174:32)",
"0x596506987c0c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x596506b29b31: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b29b31: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b29b31: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b29b31: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd70ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bcb5a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681ce5b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506956967: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x59650686f41c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59650686f41c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59650686f41c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x59650686f93c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x59650686f93c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x59650686f93c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x596506cb7983: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x596506af0c22: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:348:9)",
"0x596506c6963b: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:50:13)",
"0x59650698d7bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x596506b3ab27: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b3ab27: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b3ab27: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b3ab27: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bb3b76: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x596506bcdba7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681cd6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506aabd5b: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x5965068906f1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x5965068a2fa8: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x5965069ee907: winter_verifier::verify (verifier/src/lib.rs:108:19)",
"0x59650684dd99: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:118:9)",
"0x5965066a69d5: winterfell::main (examples/src/main.rs:83:11)",
"0x59650698e9fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x596506b0b5b7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b0b5b7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b0b5b7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b0b5b7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd4b0e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bcca37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681c2be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506aa4c76: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x59650686d909: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x596506c354cb: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x596506c22d42: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x596506890583: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x596506b49856: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b49856: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b49856: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x596506bbb1f9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x596506bbb1f9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x596506bbb1f9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x596506a43d29: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x596506a6b583: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:33)",
"0x596506b48067: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x596506aa4a53: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x596506aaecb4: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x59650699166c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x596506affc21: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506affc21: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506affc21: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506affc21: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd63ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bc9ac6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681e01b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506a6c6a3: winter_prover::Prover::generate_proof (prover/src/lib.rs:495:52)",
"0x596506aaec1d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x596506a6dace: winter_prover::Prover::generate_proof (prover/src/lib.rs:593:29)",
"0x59650684d2b2: <examples::do_work::DoWorkExample<H> as examples::Example>::prove (src/do_work/mod.rs:108:9)",
"0x5965066a5d4d: winterfell::main (examples/src/main.rs:49:17)",
"0x596506dc4799: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x596506dbfb39: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x596506d22830: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x596506d24899: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x596506cff451: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x596506a6e7ed: winter_prover::Prover::generate_proof (prover/src/lib.rs:439:13)",
"0x596506dcfdc4: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:361:22)",
"0x596506dcf3d6: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:146:27)",
"0x596506a4eb27: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x596506a4c8cd: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x59650698ca9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x596506b4a916: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b4a916: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b4a916: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506a9e7e9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5965069cff24: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x596506c23152: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x596506ddcda0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x596506dd85f9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x596506dd75a1: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x596506dd7eb0: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x596506abea4e: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x59650686f9f5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59650686f9f5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59650686f9f5: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x596506bb9bf4: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5965068cd87b: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:235:25)",
"0x596506c98a62: examples::do_work::prover::build_do_work_trace (src/do_work/prover.rs:65:5)",
"0x596506a8c668: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces::{{closure}} (src/do_work/prover.rs:32:27)",
"0x596506e2e6cc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x596506e2cd9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x596506e2dcf8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x596506e2dcf8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x596506e2a964: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x596506e2ac13: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x596506a48ca7: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x596506be689e: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x5965069e5c0f: winter_verifier::perform_verification (verifier/src/lib.rs:308:25)",
"0x596506c9882c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x596506aa0b58: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x5965069ee5a9: winter_verifier::verify (verifier/src/lib.rs:95:32)",
"0x596506dd0709: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x596506dd175c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x596506dd4726: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506dd4726: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506dd4726: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506dc9d52: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:172:33)",
"0x5965066a68fd: winterfell::main (examples/src/main.rs:80:24)",
"0x596506aa0df4: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x596506aa0b12: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x596506a468b6: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x596506a4a76c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x5965068cb393: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x596506a9b018: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x596506a40210: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:197:28)",
"0x596506aa14f8: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x596506951499: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x59650698b2fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x596506c92776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506c92776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506c92776: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x596506bbb3b9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x596506bbb3b9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x596506bbb3b9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x596506cb7846: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x596506c6364a: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:25:25)",
"0x596506c66f6c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:148:31)",
"0x596506c6a9e0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:122:17)",
"0x59650694a436: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5965069bd5e2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5965069ce209: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x596506ba80e2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5965068a449b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x596506dd32bd: <winter_air::proof::commitments::Commitments as winter_utils::serde::Deserializable>::read_from (src/proof/commitments.rs:108:22)",
"0x596506dc9bdc: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:167:27)",
"0x5965068d6fbb: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x596506bef872: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x596506a803dd: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:659:26)",
"0x596506a6ac88: winter_prover::Prover::generate_proof (prover/src/lib.rs:268:13)",
"0x596506db2899: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x596506d1f0aa: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x596506d306ac: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506d306ac: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506d306ac: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x596506d014a9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x596506d014a9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x596506d014a9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5965069d3f79: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x596506be0b5e: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x59650689e2ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x596506c90184: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x596506abf010: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x596506aee73c: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x596506a9a833: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x59650688dcb0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x5965069eb869: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:214:32)",
"0x596506830603: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x596506c112ef: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x596506c11312: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x5965069c1122: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5965069ce6b9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x596506ba2d91: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x596506c9995b: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x596506aa09cc: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x59650698e4bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x596506b414c8: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b414c8: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b414c8: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b414c8: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x596506bd872e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bcf407: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x596506cb817e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506afbe5c: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x596506b18666: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b18666: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b18666: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b18666: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x596506bd4b6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bcd5dc: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x596506bdc9be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506bdeedb: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x596506a6e7ad: winter_prover::Prover::generate_proof (prover/src/lib.rs:438:13)",
"0x596506e2fab0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x596506e2fce9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x596506e30f12: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x596506e2fd49: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x596506bfd6ed: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x5965069e56c1: winter_verifier::perform_verification (verifier/src/lib.rs:295:27)",
"0x596506a9ef58: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506a9ef58: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506a9ef58: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x596506bb9c17: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x596506bde698: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x596506cbb495: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x596506a6dbc5: winter_prover::Prover::generate_proof (prover/src/lib.rs:598:34)",
"0x596506e2ad9e: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x596506aa101f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x596506958f5f: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x59650698ef3a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x596506b0015e: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b0015e: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b0015e: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b0015e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x596506bd621e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bcb957: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x596506c6276e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506c10f64: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:142:33)",
"0x596506c66fd0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:149:33)",
"0x596506aa0ad6: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x596506956a03: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x5965069d5191: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x596506996f9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x596506b14d37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b14d37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b14d37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b14d37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd626e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bc96a7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681bdde: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506a7fd43: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:638:34)",
"0x596506dea9cb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x596506dea6a1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x596506de6c9b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x596506de1471: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x596506de1af7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x596506ddc72b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x596506dd5d7a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x59650697ad36: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x59650698239c: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x5965068a360c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x59650698c55c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x596506b361c7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b361c7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b361c7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b361c7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd506e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bca2c7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650696842e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506a6a79f: winter_prover::Prover::generate_proof (prover/src/lib.rs:243:41)",
"0x596506c07e95: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x596506a4f12c: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:62:13)",
"0x596506c63b4c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:63:9)",
"0x5965069e6247: winter_verifier::perform_verification (verifier/src/lib.rs:223:43)",
"0x596506bdde5d: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x596506be1406: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x596506bed866: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x596506c90103: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x596506dd2012: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x596506dd31a9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x596506dd4878: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x596506dcac1a: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:13)",
"0x596506af7bb8: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:510:13)",
"0x596506954484: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x596506b28f37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b28f37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b28f37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b28f37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd82be: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bd12d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681b4de: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506a402c4: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:198:23)",
"0x596506b49e1c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b49e1c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b49e1c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x596506bbae79: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x596506bbae79: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x596506bbae79: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x596506a6c6be: winter_prover::Prover::generate_proof (prover/src/lib.rs:500:39)",
"0x596506c9d274: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x596506cb0152: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x596506dce862: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:164:22)",
"0x596506dc9e38: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:176:34)",
"0x5965068d00ab: winter_prover::trace::Trace::validate (src/trace/mod.rs:122:26)",
"0x596506a6ef21: winter_prover::Prover::generate_proof (prover/src/lib.rs:370:17)",
"0x596506c339a3: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x596506cb782c: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x596506abe214: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x5965069e5e15: winter_verifier::perform_verification (verifier/src/lib.rs:320:5)",
"0x596506bba939: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x596506bba939: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x596506bba939: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5965068bf23f: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x5965068bf307: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5965069e6156: winter_verifier::perform_verification (verifier/src/lib.rs:225:13)",
"0x596506bde6ff: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x596506bdef53: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x596506a437be: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x596506a41f17: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5965068815ac: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:293:57)",
"0x596506dd14bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x596506dd4776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506dd4776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506dd4776: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506cafbcd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x596506a6da4f: winter_prover::Prover::generate_proof (prover/src/lib.rs:590:25)",
"0x596506bef940: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x5965069d1564: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x596506c279fc: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x596506b10777: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b10777: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b10777: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b10777: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd52de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bd1697: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681db8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506abe131: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x5965069caf22: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5965069cdfc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x596506ba7aaf: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x596506c235d9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x596506c9901d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x596506a4ed16: <examples::do_work::air::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (src/do_work/air.rs:13:9)",
"0x5965069ee718: winter_verifier::verify (verifier/src/lib.rs:97:38)",
"0x596506a4f0bd: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:61:13)",
"0x596506a40723: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:200:34)",
"0x59650682fb0a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5965069031bf: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x596506985fee: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x5965068a342b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x59650697b04d: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x596506ab1eb0: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x596506a6a8ba: winter_prover::Prover::generate_proof (prover/src/lib.rs:257:22)",
"0x596506a43c8c: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x596506dead2b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x596506dea751: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x596506de6adb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x596506de06cd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x596506ddb84b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x596506dd9f13: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5965069a8622: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5965069ce839: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x596506ba7252: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x596506c18db8: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x596506aa4bd9: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x59650688dc8d: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x596506bffbc2: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x596506a9d240: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x596506c13bb1: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x596506c2e5d7: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x596506ca3e0b: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x596506cb11b2: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x59650698f70a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x596506b21781: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b21781: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b21781: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b21781: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd6dab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bcb306: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681b09b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506a7fc73: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:634:36)",
"0x596506cbb6eb: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x596506bed7a5: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x596506a888e7: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:706:26)",
"0x596506a6c110: winter_prover::Prover::generate_proof (prover/src/lib.rs:472:37)",
"0x596506bfd835: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x5965069531d0: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x596506ca3caa: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x596506dcf2b9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x596506dcf70b: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:211:22)",
"0x596506dca15d: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:188:24)",
"0x596506a4a83e: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x596506b49bc3: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5965068ca9cb: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x59650683732c: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x596506aa0954: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x596506a4ee42: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::new (src/do_work/air.rs:35:23)",
"0x5965069ef8d1: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:101:85)",
"0x596506840432: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x59650695cc0a: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:107:27)",
"0x596506879bff: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x59650695a9a4: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:113:9)",
"0x59650697ad7b: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x596506991e4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59650686f2ec: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59650686f2ec: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59650686f2ec: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x596506bbbf19: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x596506bbbf19: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x596506bbbf19: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x596506c345d6: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x596506c6a58d: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:33)",
"0x596506a6ebd3: winter_prover::Prover::generate_proof (prover/src/lib.rs:407:21)",
"0x596506bf41ab: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x596506bf3696: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x5965068878e9: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:641:17)",
"0x596506af108d: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:540:13)",
"0x596506953428: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x59650699094c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x596506b04ae7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b04ae7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b04ae7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b04ae7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd653e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bd0d37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681cd4e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506a8c619: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces (src/do_work/prover.rs:30:9)",
"0x596506bf64a2: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x596506bf5147: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x596506a7fdf7: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:645:31)",
"0x596506bb9ebb: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506bb9ebb: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506bb9ebb: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506bb9ebb: <[V] as alloc::slice::Concat<T>>::concat (alloc/src/slice.rs:712:26)",
"0x596506bb9cab: alloc::slice::<impl [T]>::concat (alloc/src/slice.rs:561:9)",
"0x596506bf2527: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:228:37)",
"0x596506bef903: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x596506b48097: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x596506c10ea2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x596506c2e51a: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x596506aa811b: winter_prover::trace::commitment::build_segment_queries::{{closure}}::{{closure}} (src/trace/commitment.rs:162:42)",
"0x596506926019: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x596506aa4b07: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x5965068a427d: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x59650696a7fb: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x5965068a2e38: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x596506989b7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x596506b2bf11: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b2bf11: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b2bf11: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b2bf11: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd63db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bcbd46: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681aacb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506aaec0e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x596506bf226a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x596506aa7078: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x59650684061a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5965068f8e45: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x596506be5bf3: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x596506b17187: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b17187: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b17187: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b17187: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd829e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bcce27: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681a7ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506be595b: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x596506a6a656: winter_prover::Prover::generate_proof (prover/src/lib.rs:228:27)",
"0x596506be2af6: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x5965069e5d3a: winter_verifier::perform_verification (verifier/src/lib.rs:316:28)",
"0x59650699723c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x596506b34977: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b34977: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b34977: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b34977: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd565e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bc9517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681a60e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506a6c5d6: winter_prover::Prover::generate_proof (prover/src/lib.rs:491:51)",
"0x596506c116ec: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x596506a6bc77: winter_prover::Prover::generate_proof (prover/src/lib.rs:442:35)",
"0x596506dd0187: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x596506dcefed: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:357:24)",
"0x59650698b83c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x596506b4a786: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b4a786: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b4a786: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506a6af85: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:39)",
"0x596506ab4a48: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x596506abedda: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x596506b4acd6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b4acd6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b4acd6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506a6b00d: winter_prover::Prover::generate_proof (prover/src/lib.rs:300:37)",
"0x596506bdea2c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x596506c3341a: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x596506afb5ae: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x5965068b989d: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x596506afacce: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x596506afd6c6: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x596506af09ea: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:362:9)",
"0x5965068b8e22: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x59650694e5c4: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x596506c6ed04: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x596506be91a4: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x5965069e5cbe: winter_verifier::perform_verification (verifier/src/lib.rs:314:25)",
"0x596506996a5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x596506b059a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b059a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b059a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b059a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd771e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bca517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681c37e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506abef51: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x596506b08541: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b08541: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b08541: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b08541: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd690b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bcc276: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681c45b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5965068a2b0f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x596506be5bd0: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x596506c0accb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x596506c0a471: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x596506a1ef0b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x596506a17451: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x596506a1d77d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x596506a1110e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x596506be6848: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x596506af12c9: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:534:17)",
"0x596506b0a911: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b0a911: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b0a911: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b0a911: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd5f1b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bd1516: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681b20b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5965068a2bd7: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x596506c90450: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x596506956a1e: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x596506b20877: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b20877: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b20877: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b20877: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd570e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bd1317: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681dace: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506be9532: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x596506b302f0: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b302f0: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b302f0: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b302f0: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x596506bd45bb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bcfda6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681bdbb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506c23075: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x596506c9008f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x596506be91bf: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x5965068caf42: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x596506be93d9: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x59650699040c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x596506b1fbc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b1fbc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b1fbc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b1fbc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd5a9e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bd0c79: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681b94e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59650696d77a: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:50:26)",
"0x596506a884e4: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:691:36)",
"0x5965069e49d9: winter_verifier::perform_verification (verifier/src/lib.rs:183:13)",
"0x596506a46d04: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x596506a43fbc: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x596506a6e665: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:17)",
"0x596506988e5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x596506b34771: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b34771: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b34771: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b34771: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd50cb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bce9c6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681b0cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506a45e5a: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x596506b2a9d1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b2a9d1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b2a9d1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b2a9d1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd6cfb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bcf026: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681d64b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5965068a2c9f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x596506c33299: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x59650699190c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x596506b4a466: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b4a466: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b4a466: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506a6b051: winter_prover::Prover::generate_proof (prover/src/lib.rs:301:32)",
"0x596506988bbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x596506b11991: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b11991: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b11991: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b11991: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd737b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bcced6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681a78b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5965069e4cd2: winter_verifier::perform_verification (verifier/src/lib.rs:212:41)",
"0x59650698891c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x596506b12dc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b12dc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b12dc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b12dc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bb46b3: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x596506bc9bc9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681c01e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506a6af62: winter_prover::Prover::generate_proof (prover/src/lib.rs:291:36)",
"0x596506b4a556: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b4a556: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b4a556: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506c18782: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x596506dd3784: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:155:27)",
"0x596506dca178: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:29)",
"0x596506982629: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x5965069f8d31: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5965069fc477: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5965069f11bb: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x596506a6e808: winter_prover::Prover::generate_proof (prover/src/lib.rs:440:13)",
"0x5965068d0598: winter_prover::trace::Trace::validate (src/trace/mod.rs:177:13)",
"0x59650689ed3c: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x59650688a53c: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x596506880b09: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:211:31)",
"0x596506837d3a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5965069280a8: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5965068013ba: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x59650682163a: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x596506b0f227: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b0f227: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b0f227: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b0f227: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd523e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bccd47: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681dbee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506abf10f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x596506cfa656: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506cfa656: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506cfa656: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5965069d3d1c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x5965069e5810: winter_verifier::perform_verification (verifier/src/lib.rs:302:9)",
"0x596506ddc8ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x596506dd8b6c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506dd8b6c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506dd8b6c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x596506dd862c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x596506dd862c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x596506dd862c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x596506abe1a5: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x596506c278e0: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x596506cbb65e: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x5965069bcc02: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5965069cdcc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x596506ba7d48: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x596506a6ebf6: winter_prover::Prover::generate_proof (prover/src/lib.rs:408:17)",
"0x596506c0b6eb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x596506c0a891: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x596506a1df4b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5965069f39dd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5965068bc83f: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x596506a986c3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x596506c34440: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x596506bbb039: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x596506bbb039: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x596506bbb039: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x596506a9a81d: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x596506a6cf26: winter_prover::Prover::generate_proof (prover/src/lib.rs:548:13)",
"0x5965069e598e: winter_verifier::perform_verification (verifier/src/lib.rs:303:42)",
"0x596506c18c60: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x59650696ff72: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:169:36)",
"0x59650696df30: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:54:17)",
"0x596506c345ed: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x5965069afca2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5965069ce539: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x596506ba6b42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x596506bd9ffc: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x596506afad4a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x596506de066d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x596506ddb538: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x596506dd9dd7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x596506a46be1: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x596506a49211: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x596506af7c93: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:505:13)",
"0x596506993dbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x596506b023c1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b023c1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b023c1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b023c1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd79db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bcad06: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681ceab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5965069e4d9f: winter_verifier::perform_verification (verifier/src/lib.rs:216:40)",
"0x596506b09197: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b09197: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b09197: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b09197: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd7f6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bc9599: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681cc6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506beae47: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x5965069e513b: winter_verifier::perform_verification (verifier/src/lib.rs:263:61)",
"0x596506b2eee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b2eee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b2eee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b2eee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd4dde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bcbc57: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681e47e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506c33994: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x596506b1a7f7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b1a7f7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b1a7f7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b1a7f7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd6b7e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bd0f39: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681b0ee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506a6a603: winter_prover::Prover::generate_proof (prover/src/lib.rs:217:20)",
"0x59650698d51c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x596506bff2be: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506bff2be: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506bff2be: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x596506bb9b77: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x596506956c58: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x596506a09d8f: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x596506a15711: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x596506a10caa: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x59650696cbd9: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:82:31)",
"0x596506842553: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x596506a48f48: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x596506dced02: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:348:22)",
"0x596506c0b02b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x596506c0a681: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x596506a1e12b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5965069f38bd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5965068bcf89: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x596506a98a00: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5965069bc712: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5965069ce149: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x596506ba5122: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x596506aa4c91: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x596506dcf8d2: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:215:25)",
"0x596506af1239: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:536:13)",
"0x596506cafc96: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x59650698c2bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x596506b44ffe: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b44ffe: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b44ffe: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b44ffe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x596506bd643b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bcdb76: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x596506c6f10b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59650689c01c: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x596506b34ba1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b34ba1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b34ba1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b34ba1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd7b3b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bcf0b6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681b6cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506a6ac5d: winter_prover::Prover::generate_proof (prover/src/lib.rs:266:43)",
"0x596506be5853: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x596506e2fd18: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x596506e3100a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x596506e3100a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x596506e30dae: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x596506e30dae: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x596506e30e9d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x596506b037e7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b037e7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b037e7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b037e7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd773e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bcd7f7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681e32e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506a3fd13: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:253:9)",
"0x596506abebf6: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x596506a4a7d0: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x596506c6a819: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:129:9)",
"0x5965068d7303: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x596506ca3c25: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x596506cbb6d0: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x59650699651c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x596506b42907: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b42907: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b42907: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b42907: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd5fde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bcf627: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681a93e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59650684dd54: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:112:30)",
"0x596506c23524: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x596506bfe6fb: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x5965068a4185: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x596506b35637: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b35637: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b35637: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b35637: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd8ade: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bd14b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681bd0e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506a6ae32: winter_prover::Prover::generate_proof (prover/src/lib.rs:286:23)",
"0x596506bf23df: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:226:50)",
"0x596506a43d84: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x596506cb3ab6: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x596506993b1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x596506b1c7cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b1c7cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b1c7cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b1c7cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x596506bd786e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bc9947: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681ae8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506afabf6: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x596506b3d9a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b3d9a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b3d9a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b3d9a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd83de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bcf4c9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681dede: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5965068ca5e0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x5965069942fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x596506b11135: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b11135: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b11135: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b11135: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x596506bd510e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bca737: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681acce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506bf21b0: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:218:46)",
"0x596506c903fb: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x596506b3cf17: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b3cf17: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b3cf17: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b3cf17: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd6b2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bcc147: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681ba9e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506a6a416: winter_prover::Prover::generate_proof (prover/src/lib.rs:205:38)",
"0x596506c95e40: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x596506b4ab46: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b4ab46: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b4ab46: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5965068d6d3b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x596506c95e2b: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x596506bec76a: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x596506833c7a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5965068ce511: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:132:51)",
"0x596506830a1a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x596506c73da5: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x596506de376e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x596506de5220: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x596506de4428: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x596506dbfe7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x596506d3057c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506d3057c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506d3057c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x596506d00cc9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x596506d00cc9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x596506d00cc9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x596506aefe3f: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x596506bff1f6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5965068a3c48: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x596506b19f91: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b19f91: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b19f91: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b19f91: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd4edb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bce626: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681a4ab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506a7fba6: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:630:42)",
"0x596506cb6cb7: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x596506c68a27: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:272:18)",
"0x596506c67297: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:166:30)",
"0x5965067b7149: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5965067b5c19: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5965067b4030: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5965067b4298: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x5965067b3b5a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x5965067b3b5a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x5965066a86a1: alloc::string::String::reserve (alloc/src/string.rs:1152:9)",
"0x5965066a86a1: <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend (alloc/src/string.rs:2173:14)",
"0x5965066a877c: <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter (alloc/src/string.rs:2093:9)",
"0x5965069a1982: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5965069cdc39: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x596506ba6a51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x596506a466c9: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x59650694a30d: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5965069a6392: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5965069cda59: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x596506ba2b42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5965069700d9: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:174:17)",
"0x596506c637eb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:39:30)",
"0x596506b066b1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b066b1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b066b1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b066b1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd471b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bcde16: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681d23b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506890409: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x596506dd4118: <winter_air::proof::context::Context as winter_utils::serde::Deserializable>::read_from (src/proof/context.rs:184:35)",
"0x596506dc9bf7: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:27)",
"0x596506dd2502: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x596506dd3179: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x596506dd4ae2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x596506dca916: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:13)",
"0x596506b1e787: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b1e787: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b1e787: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b1e787: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd567e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bcc807: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681e71e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5965068ce33a: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:132:32)",
"0x596506c2ba9a: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x5965069967bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x596506b4a876: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b4a876: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b4a876: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506a6afc9: winter_prover::Prover::generate_proof (prover/src/lib.rs:299:44)",
"0x596506cafc77: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x596506ddd1a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506ddd1a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506ddd1a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506ddd1a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x596506ddd5ee: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506ddd5b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x596506dde84e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506ddc299: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x596506a45db1: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x5965068354aa: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x596506c75a05: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x596506bfe8ce: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x596506b21107: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b21107: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b21107: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b21107: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd64fe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bd04b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681d86e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506ae6d8f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x5965068a43ef: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x596506b3c451: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b3c451: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b3c451: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b3c451: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd57db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bca136: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681b65b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5965068a297f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x596506a9a151: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x596506ab1df3: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x596506c6a4c0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:28)",
"0x596506995a9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x596506c340c6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506c340c6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506c340c6: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x596506a43ca3: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x5965069c5152: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5965069ce389: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x596506ba6ff2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x596506ca3f89: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x596506aa8199: winter_prover::trace::commitment::build_segment_queries::{{closure}}::{{closure}} (src/trace/commitment.rs:164:27)",
"0x596506aa6736: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:159:13)",
"0x596506dd86b6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x596506abeb2b: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x596506cb3c0e: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x596506cb1104: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x596506a6d38b: winter_prover::Prover::generate_proof (prover/src/lib.rs:561:9)",
"0x596506bf2476: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:228:38)",
"0x596506c9d35d: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x5965068a27d0: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x59650699627c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x596506b07557: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b07557: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b07557: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b07557: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bb579d: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x596506bd121c: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681d4ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506a4d82a: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x59650696a9d0: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x596506b2f111: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b2f111: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b2f111: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b2f111: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd49fb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bcdcc6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681c86b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59650696ca5c: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:82:9)",
"0x5965069af7b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5965069cdd89: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x596506ba3f32: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5965069e648c: winter_verifier::perform_verification (verifier/src/lib.rs:182:9)",
"0x5965068bf22a: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x596506b05141: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b05141: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b05141: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b05141: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd7f9b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bcc346: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681a88b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506a6a4e3: winter_prover::Prover::generate_proof (prover/src/lib.rs:209:39)",
"0x596506c0bdab: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x596506c0a7e1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x596506a1e4eb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5965069f379d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5965068bc0fc: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5965068b9911: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x596506aefe2a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x596506c9900c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x596506b36c51: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b36c51: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b36c51: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b36c51: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd4f6b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bcfa96: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681c53b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5965068a2a47: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x596506bf4c77: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x596506becc8c: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x596506bf37bc: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x596506be5755: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:144:35)",
"0x5965068d41f6: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x596506ca3c8f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x596506dd35bd: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:151:28)",
"0x596506cafe9d: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x596506886bb0: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:221:17)",
"0x596506831922: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x596506c604dd: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::SpecFold>::spec_fold (iter/adapters/zip.rs:685:25)",
"0x596506c4cee7: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::fold (iter/adapters/zip.rs:249:9)",
"0x596506c379b7: <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/zip.rs:103:9)",
"0x596506b0d727: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b0d727: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b0d727: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b0d727: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd75de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bcd507: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681dcfe: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506a47277: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x5965068a3cae: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x596506c1910a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x59650698adbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x596506b2e127: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b2e127: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b2e127: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b2e127: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd501e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bcb6b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681dfae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506bebe38: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x5965069b2912: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5965069ce119: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x596506ba394f: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x596506bded8a: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x596506b33f40: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b33f40: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b33f40: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b33f40: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x596506bd614b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bcd8a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681a27b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506c2bbca: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x596506c11580: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x596506ab0a92: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x5965068874c6: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:493:32)",
"0x59650683d09a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x59650690a2a2: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x596506808c9b: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x596506825906: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x596506976175: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x596506dcff46: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:365:21)",
"0x5965069bb842: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5965069ce419: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x596506ba3ba2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x59650698257e: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x596506be5693: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x59650697af3a: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x596506aead61: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x5965069e533e: winter_verifier::perform_verification (verifier/src/lib.rs:272:24)",
"0x596506b08317: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x596506b08317: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x596506b08317: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x596506b08317: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x596506bd606e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x596506bd1587: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59650681a47e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x596506a45c6a: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x596506dea81b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x596506dea541: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x596506de6d7b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x596506de13a1: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x596506de1b37: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x596506ddc6db: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x596506dcea1e: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:168:21)",
"0x596506c18a51: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)"
]
}