{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell do-work -n 4 -l 65536",
"pid": 28891,
"tg": 315254238,
"te": 341782414,
"pps": [
{
"tb": 3904,
"tbk": 4,
"tl": 38962,
"mb": 3904,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 4138,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
10,
11,
12,
13,
14,
15,
16,
17
]
},
{
"tb": 128,
"tbk": 4,
"tl": 268,
"mb": 128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
22,
23,
24,
25
]
},
{
"tb": 896,
"tbk": 6,
"tl": 15502,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
28,
29,
30,
31,
32
]
},
{
"tb": 140928,
"tbk": 36,
"tl": 16984,
"mb": 140800,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
43
]
},
{
"tb": 64,
"tbk": 4,
"tl": 448,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
33,
34,
35,
36,
37,
38,
44,
45,
46
]
},
{
"tb": 1691359,
"tbk": 8,
"tl": 16008,
"mb": 1127092,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
47,
48,
49,
50,
51
]
},
{
"tb": 6291456,
"tbk": 3,
"tl": 2499585,
"mb": 6291456,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
52
]
},
{
"tb": 256,
"tbk": 4,
"tl": 129724,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
53,
54,
55,
56
]
},
{
"tb": 335544320,
"tbk": 5,
"tl": 26168861,
"mb": 67108864,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
57,
58,
59,
60,
61,
62,
63
]
},
{
"tb": 17600,
"tbk": 4,
"tl": 25965,
"mb": 17600,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
64,
65,
66,
67,
68,
69,
70
]
},
{
"tb": 96,
"tbk": 1,
"tl": 211,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
71,
72,
73,
74,
75,
76,
77,
78,
79
]
},
{
"tb": 960,
"tbk": 8,
"tl": 17464579,
"mb": 768,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
80,
81,
82,
83,
84,
85
]
},
{
"tb": 8,
"tbk": 1,
"tl": 831704,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
86,
87,
88,
89,
90,
91,
92,
93,
94,
95,
83
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 26471270,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
96,
97,
98,
99,
100,
101,
102
]
},
{
"tb": 33554432,
"tbk": 4,
"tl": 254562586,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
53,
103,
104,
105
]
},
{
"tb": 8388608,
"tbk": 524288,
"tl": 298724,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
33,
34,
35,
36,
37,
38,
106,
107,
108
]
},
{
"tb": 96,
"tbk": 1,
"tl": 17171646,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
109,
110,
111,
112,
83
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 206650,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
96,
97,
98,
99,
113,
114,
115
]
},
{
"tb": 192,
"tbk": 1,
"tl": 6445,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
116,
117,
118,
119,
120,
121,
122,
123,
124
]
},
{
"tb": 85456,
"tbk": 1665,
"tl": 32077066,
"mb": 17056,
"mbk": 11,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
47,
125,
126,
127,
128,
129,
130
]
},
{
"tb": 65280,
"tbk": 32,
"tl": 29403386,
"mb": 32768,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
28,
29,
30,
131,
132
]
},
{
"tb": 13760,
"tbk": 32,
"tl": 130074,
"mb": 13760,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
96,
97,
98,
133,
134,
135,
136
]
},
{
"tb": 64,
"tbk": 4,
"tl": 233,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
80,
137,
138,
139,
140,
141,
142
]
},
{
"tb": 480,
"tbk": 4,
"tl": 9873,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
143,
144,
145,
146,
147,
148,
149
]
},
{
"tb": 256,
"tbk": 1,
"tl": 729,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
86,
87,
150,
151,
152,
153,
154,
155,
156
]
},
{
"tb": 512,
"tbk": 1,
"tl": 8190,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
157,
158,
159,
160,
161,
162,
163,
164
]
},
{
"tb": 96,
"tbk": 1,
"tl": 13832331,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
165,
166,
167,
168,
169,
170,
171,
172,
173
]
},
{
"tb": 96,
"tbk": 1,
"tl": 5315632,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
109,
110,
111,
174,
175
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 742206,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
53,
176,
177,
178
]
},
{
"tb": 2880,
"tbk": 24,
"tl": 2501,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
143,
144,
145,
146,
147,
179,
154
]
},
{
"tb": 96,
"tbk": 1,
"tl": 25982543,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
71,
180,
181,
182,
183,
83,
84,
85
]
},
{
"tb": 2097152,
"tbk": 2,
"tl": 31503670,
"mb": 2097152,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
33,
34,
35,
184,
185,
186,
187,
188,
189
]
},
{
"tb": 480,
"tbk": 4,
"tl": 213,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
143,
144,
145,
146,
147,
190,
191
]
},
{
"tb": 24,
"tbk": 1,
"tl": 15641,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
192,
193,
194,
195
]
},
{
"tb": 160,
"tbk": 1,
"tl": 10997,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
196,
197,
198,
199,
25
]
},
{
"tb": 512,
"tbk": 8,
"tl": 12509287,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
200,
201,
202,
203,
204
]
},
{
"tb": 13760,
"tbk": 32,
"tl": 108328,
"mb": 13760,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
96,
97,
98,
133,
134,
205,
206
]
},
{
"tb": 512,
"tbk": 1,
"tl": 9,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
207,
208,
209,
210,
211,
212,
213,
214
]
},
{
"tb": 15616,
"tbk": 122,
"tl": 110,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
215,
216,
217,
218,
219,
220,
221,
222
]
},
{
"tb": 160,
"tbk": 1,
"tl": 14717,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
96,
97,
98,
133,
223,
224,
25
]
},
{
"tb": 288,
"tbk": 1,
"tl": 26369900,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
225,
226,
227,
228,
229,
230,
231,
232,
233
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 189435,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
96,
97,
98,
99,
100,
101,
234
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 150614,
"mb": 1179648,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
53,
235,
236,
115
]
},
{
"tb": 128,
"tbk": 4,
"tl": 17464552,
"mb": 128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
143,
144,
145,
146,
147,
237,
238
]
},
{
"tb": 563200,
"tbk": 4,
"tl": 36347,
"mb": 563200,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
22,
239,
240,
206
]
},
{
"tb": 1248,
"tbk": 12,
"tl": 320,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
241,
242,
243,
244,
245,
246,
247
]
},
{
"tb": 13800,
"tbk": 25,
"tl": 6503,
"mb": 3864,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
248,
249,
250,
251,
252,
253
]
},
{
"tb": 128,
"tbk": 4,
"tl": 752,
"mb": 128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
80,
254,
255,
256,
257,
258,
259
]
},
{
"tb": 384,
"tbk": 4,
"tl": 53,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
260,
261,
262,
263,
264,
265,
266,
267,
268
]
},
{
"tb": 48,
"tbk": 1,
"tl": 15753532,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
71,
269,
270,
271,
272,
273,
274,
275,
276
]
},
{
"tb": 4194304,
"tbk": 4,
"tl": 17704826,
"mb": 4194304,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
57,
58,
59,
60,
61,
62,
277
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1737,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
109,
110,
111,
278,
279
]
},
{
"tb": 72,
"tbk": 3,
"tl": 2497263,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
280,
281,
282,
283,
284,
285,
286,
287,
288,
289,
290,
291
]
},
{
"tb": 4194304,
"tbk": 4,
"tl": 292226,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
53,
54,
55,
292
]
},
{
"tb": 32,
"tbk": 1,
"tl": 14730,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
96,
97,
98,
133,
293,
224,
25
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 3545,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
294,
295,
296,
297,
298,
299,
300,
301
]
},
{
"tb": 2880,
"tbk": 4,
"tl": 38385,
"mb": 2880,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
302,
303,
304,
305,
306,
307,
8,
9
]
},
{
"tb": 128,
"tbk": 4,
"tl": 59235,
"mb": 128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
80,
308,
309,
310,
311,
312,
313
]
},
{
"tb": 96,
"tbk": 1,
"tl": 10859,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
314,
315,
316,
317,
142
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
318,
319,
320,
321,
322,
323,
324,
325,
326,
327
]
},
{
"tb": 64,
"tbk": 4,
"tl": 443,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
80,
137,
328,
139,
329,
330,
331
]
},
{
"tb": 2304,
"tbk": 8,
"tl": 188,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
332,
333,
334,
335,
336,
337,
338,
339,
340
]
},
{
"tb": 768,
"tbk": 1,
"tl": 4139,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
302,
303,
304,
305,
306,
135,
136,
341
]
},
{
"tb": 64,
"tbk": 1,
"tl": 196,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
342,
343,
344,
345,
346,
347,
348,
349,
83,
84
]
},
{
"tb": 35200,
"tbk": 8,
"tl": 5154967,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
57,
58,
59,
60,
61,
62,
350
]
},
{
"tb": 17600,
"tbk": 4,
"tl": 1441201,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
64,
65,
66,
67,
351,
352,
353
]
},
{
"tb": 64,
"tbk": 1,
"tl": 9899,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
28,
29,
30,
354,
355
]
},
{
"tb": 512,
"tbk": 1,
"tl": 29,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
356,
357,
142,
358
]
},
{
"tb": 124928,
"tbk": 4,
"tl": 1615,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
57,
58,
59,
60,
61,
62,
359
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 3200,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
360,
191,
361
]
},
{
"tb": 64,
"tbk": 1,
"tl": 7865767,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
342,
362,
363,
364,
365,
366,
367,
368,
369
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 6970,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
370,
371,
372,
373,
374
]
},
{
"tb": 103056,
"tbk": 226,
"tl": 64256,
"mb": 26448,
"mbk": 58,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
375,
376,
377,
378,
379,
380
]
},
{
"tb": 64,
"tbk": 4,
"tl": 2790718,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
64,
65,
66,
67,
381,
382,
383
]
},
{
"tb": 96,
"tbk": 1,
"tl": 25982538,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
384,
385,
386,
387,
388,
83,
84,
85
]
},
{
"tb": 35200,
"tbk": 4,
"tl": 43774,
"mb": 35200,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
33,
34,
35,
36,
37,
38,
389,
390,
25
]
},
{
"tb": 35200,
"tbk": 8,
"tl": 5155002,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
57,
58,
59,
60,
61,
62,
391
]
},
{
"tb": 96,
"tbk": 1,
"tl": 2930,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
109,
110,
111,
392,
393
]
},
{
"tb": 9126805504,
"tbk": 136,
"tl": 4610798554,
"mb": 2281701376,
"mbk": 34,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
394,
395,
396,
397,
398,
399,
400,
401
]
},
{
"tb": 256,
"tbk": 4,
"tl": 43275,
"mb": 256,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
28,
29,
30,
402,
403
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 46,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
53,
54,
55,
404
]
},
{
"tb": 192,
"tbk": 1,
"tl": 70580,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
408,
409,
410,
411,
83,
84
]
},
{
"tb": 32,
"tbk": 1,
"tl": 36,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
86,
87,
412,
413,
414,
415,
416,
417,
418,
419
]
},
{
"tb": 8388608,
"tbk": 4,
"tl": 3463627,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
53,
420,
421,
422
]
},
{
"tb": 2097152,
"tbk": 4,
"tl": 30373783,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
53,
54,
55,
423
]
},
{
"tb": 320,
"tbk": 4,
"tl": 6254587,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
424,
425,
426,
427,
428,
429,
430,
431,
432
]
},
{
"tb": 65176,
"tbk": 38,
"tl": 267364,
"mb": 32640,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
47,
48,
49,
433,
434
]
},
{
"tb": 32,
"tbk": 1,
"tl": 3882,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
86,
87,
435,
436,
437,
438,
439,
440,
441,
442
]
},
{
"tb": 512,
"tbk": 1,
"tl": 53,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
443,
444,
445,
446,
447,
448,
449,
450
]
},
{
"tb": 384,
"tbk": 4,
"tl": 114,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
80,
451,
139,
329,
330,
331,
83
]
},
{
"tb": 256,
"tbk": 1,
"tl": 13,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
33,
34,
35,
36,
37,
38,
452,
411,
83
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1285,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
33,
34,
35,
184,
185,
186,
453,
454,
455
]
},
{
"tb": 8388608,
"tbk": 4,
"tl": 1583750,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
456,
457,
458,
459,
460,
461,
462,
463
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
318,
319,
320,
321,
322,
323,
324,
325,
464,
327
]
},
{
"tb": 32,
"tbk": 1,
"tl": 283522092,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
465,
466,
467,
468,
469,
470,
471,
472,
473
]
},
{
"tb": 2306867200,
"tbk": 524288,
"tl": 6782528,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
33,
34,
35,
184,
185,
186,
474,
475,
476
]
},
{
"tb": 1952,
"tbk": 4,
"tl": 2927,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
477,
478,
479,
480,
481,
482,
483,
484
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
80,
485,
486,
327,
487,
83,
84
]
},
{
"tb": 3384,
"tbk": 5,
"tl": 256155859,
"mb": 840,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
488,
489,
490,
491,
492,
493,
494,
495,
496
]
},
{
"tb": 35204,
"tbk": 4,
"tl": 62446,
"mb": 35204,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
318,
319,
320,
321,
322,
323,
324,
497,
498,
499
]
},
{
"tb": 256,
"tbk": 1,
"tl": 12,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
241,
500,
501,
502,
503,
504,
505,
506,
507,
411,
83
]
},
{
"tb": 9395240960,
"tbk": 4,
"tl": 605745908,
"mb": 9395240960,
"mbk": 4,
"gb": 9395240960,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
1,
394,
395,
396,
397,
398,
508,
509,
510
]
},
{
"tb": 80,
"tbk": 1,
"tl": 9891,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
511,
512,
142,
358
]
},
{
"tb": 72,
"tbk": 1,
"tl": 15698,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
513,
514,
515,
516,
517,
195
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 340271425,
"mb": 2097152,
"mbk": 1,
"gb": 2097152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
53,
54,
518,
519
]
},
{
"tb": 384,
"tbk": 8,
"tl": 34636581,
"mb": 384,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
71,
520,
521,
522,
523,
524,
525,
526,
527
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2142,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
302,
303,
304,
305,
528,
529,
279,
83
]
},
{
"tb": 64,
"tbk": 1,
"tl": 340273593,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
530,
531,
532,
533,
534,
535,
536,
537,
538
]
},
{
"tb": 976,
"tbk": 4,
"tl": 4070,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
241,
500,
501,
502,
503,
504,
505,
506,
539,
540,
454
]
},
{
"tb": 15616,
"tbk": 4,
"tl": 2358,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
394,
541,
542,
543,
544,
545,
546,
547,
548
]
},
{
"tb": 35200,
"tbk": 4,
"tl": 106,
"mb": 8800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
22,
549,
24,
25
]
},
{
"tb": 128,
"tbk": 4,
"tl": 25221,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
80,
550,
175,
83,
84,
85
]
},
{
"tb": 480,
"tbk": 4,
"tl": 12147,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
143,
144,
145,
146,
147,
148,
551
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
318,
319,
320,
321,
322,
323,
324,
325,
326,
552
]
},
{
"tb": 128,
"tbk": 1,
"tl": 9209,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
553,
554,
555,
556,
206
]
},
{
"tb": 192,
"tbk": 8,
"tl": 12510374,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
280,
281,
282,
283,
284,
285,
286,
287,
557,
558
]
},
{
"tb": 64,
"tbk": 4,
"tl": 62850,
"mb": 64,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
318,
319,
320,
321,
322,
323,
324,
497,
559,
560
]
},
{
"tb": 16,
"tbk": 1,
"tl": 832420,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
33,
34,
35,
36,
37,
38,
561,
288,
289,
290,
291
]
},
{
"tb": 384,
"tbk": 1,
"tl": 340319007,
"mb": 384,
"mbk": 1,
"gb": 384,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
562,
563,
564,
565,
566,
567,
568,
569,
570
]
},
{
"tb": 1536,
"tbk": 8,
"tl": 275,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
571,
572,
573,
574,
575,
576,
577,
578,
579
]
},
{
"tb": 110592,
"tbk": 424,
"tl": 269768,
"mb": 16384,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
580,
581,
582,
583,
584,
585,
586,
587
]
},
{
"tb": 320,
"tbk": 1,
"tl": 341766214,
"mb": 320,
"mbk": 1,
"gb": 320,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
588,
589,
590,
591,
592,
593,
594,
595,
596
]
},
{
"tb": 26400,
"tbk": 4,
"tl": 101711766,
"mb": 26400,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
71,
597,
598,
599,
40,
41,
42,
600,
601,
602
]
},
{
"tb": 35232,
"tbk": 9,
"tl": 94038193,
"mb": 35232,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
603,
604,
605,
606,
607,
608,
609,
610
]
},
{
"tb": 96,
"tbk": 1,
"tl": 25982549,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
611,
612,
613,
614,
615,
83,
84,
85
]
},
{
"tb": 96,
"tbk": 4,
"tl": 17464657,
"mb": 96,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
280,
281,
282,
283,
284,
285,
286,
287,
616,
82
]
},
{
"tb": 864,
"tbk": 1,
"tl": 340273772,
"mb": 864,
"mbk": 1,
"gb": 864,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
617,
618,
619,
620,
621,
622,
623,
624,
625
]
},
{
"tb": 3328,
"tbk": 32,
"tl": 474,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
241,
242,
243,
244,
626,
627,
628
]
},
{
"tb": 160,
"tbk": 1,
"tl": 10782,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
629,
630,
631,
632,
633,
634,
635,
636,
637
]
},
{
"tb": 96,
"tbk": 1,
"tl": 25982554,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
638,
639,
640,
641,
642,
83,
84,
85
]
},
{
"tb": 480,
"tbk": 4,
"tl": 234,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
143,
144,
145,
146,
147,
190,
529
]
},
{
"tb": 224,
"tbk": 1,
"tl": 11867,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
643,
644,
645,
646,
9
]
},
{
"tb": 6928,
"tbk": 42,
"tl": 180,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
86,
87,
88,
89,
90,
91,
92,
93,
647,
648,
649
]
},
{
"tb": 2048,
"tbk": 4,
"tl": 9756,
"mb": 2048,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
650,
393,
142,
358
]
},
{
"tb": 3456,
"tbk": 12,
"tl": 4926,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
241,
651,
652,
653,
654,
655,
656
]
},
{
"tb": 96,
"tbk": 4,
"tl": 378,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
80,
657,
658,
659,
660,
141,
142
]
},
{
"tb": 1536,
"tbk": 4,
"tl": 6255260,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
661,
662,
663,
664,
665,
666,
667,
668,
669
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2137,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
360,
529,
279
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 8161,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
22,
239,
670,
136
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 328013,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
53,
54,
55,
671
]
},
{
"tb": 96,
"tbk": 1,
"tl": 2935,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
109,
110,
111,
672,
393
]
},
{
"tb": 3072,
"tbk": 4,
"tl": 18748,
"mb": 3072,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
71,
673,
674,
675,
676,
677,
678,
679,
680
]
},
{
"tb": 4352,
"tbk": 8,
"tl": 100,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
681,
682,
683,
684,
685,
686
]
},
{
"tb": 563200,
"tbk": 1,
"tl": 5591,
"mb": 563200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
22,
239,
687,
206
]
},
{
"tb": 15616,
"tbk": 4,
"tl": 41407,
"mb": 15616,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
688,
8,
9,
25
]
},
{
"tb": 384,
"tbk": 4,
"tl": 51,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
80,
451,
689,
690,
83,
84,
85
]
},
{
"tb": 384,
"tbk": 1,
"tl": 15720,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
691,
692,
693,
694,
195
]
},
{
"tb": 13793,
"tbk": 1,
"tl": 15645,
"mb": 13793,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
318,
319,
320,
321,
322,
323,
324,
497,
695,
194
]
},
{
"tb": 64,
"tbk": 4,
"tl": 314,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
57,
58,
59,
60,
61,
62,
696
]
},
{
"tb": 64,
"tbk": 4,
"tl": 1361275947,
"mb": 64,
"mbk": 4,
"gb": 64,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
26,
318,
319,
320,
321,
322,
323,
324,
697,
698,
699
]
},
{
"tb": 64,
"tbk": 1,
"tl": 7350725,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
28,
29,
30,
354,
132
]
},
{
"tb": 32,
"tbk": 1,
"tl": 4965,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
700,
701,
702,
703,
704,
705,
706,
707,
708
]
},
{
"tb": 256,
"tbk": 4,
"tl": 43258,
"mb": 256,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
28,
29,
30,
709,
403
]
},
{
"tb": 256,
"tbk": 1,
"tl": 12191,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
33,
34,
35,
184,
185,
186,
710,
711,
712
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4189,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
713,
714,
142,
358
]
},
{
"tb": 64,
"tbk": 4,
"tl": 2364158,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
64,
65,
66,
67,
715,
690,
83
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2813,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
716,
717,
718,
719,
720,
721,
722,
723,
724
]
},
{
"tb": 3680,
"tbk": 18,
"tl": 79,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
86,
87,
88,
89,
90,
91,
92,
93,
647,
191,
361
]
},
{
"tb": 26400,
"tbk": 4,
"tl": 1364817889,
"mb": 26400,
"mbk": 4,
"gb": 26400,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
1,
71,
725,
726,
727,
728,
729,
730,
731,
732
]
},
{
"tb": 9584640,
"tbk": 4,
"tl": 210484,
"mb": 9584640,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
53,
733,
734,
115
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 1710114,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
53,
103,
104,
735
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3462,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
302,
303,
304,
305,
306,
205,
206,
736
]
},
{
"tb": 56,
"tbk": 1,
"tl": 3315,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
80,
737,
736,
25,
358,
738
]
},
{
"tb": 96,
"tbk": 1,
"tl": 4781,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
739,
740,
741,
742,
361
]
},
{
"tb": 128,
"tbk": 4,
"tl": 3,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
80,
254,
743,
358,
738
]
},
{
"tb": 35204,
"tbk": 4,
"tl": 112,
"mb": 8801,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
143,
744,
745,
746,
747,
748,
749,
750,
751,
752,
753
]
},
{
"tb": 128,
"tbk": 4,
"tl": 94,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
143,
744,
745,
746,
747,
748,
749,
750,
754,
752,
753
]
},
{
"tb": 384,
"tbk": 4,
"tl": 66,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
80,
451,
139,
140,
141,
142,
358
]
},
{
"tb": 1280,
"tbk": 8,
"tl": 12510344,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
755,
756,
757,
758,
558
]
},
{
"tb": 16777344,
"tbk": 12,
"tl": 301993,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
53,
759,
760,
761
]
},
{
"tb": 563200,
"tbk": 1,
"tl": 15692,
"mb": 563200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
318,
319,
320,
321,
322,
323,
324,
497,
762,
194
]
},
{
"tb": 864,
"tbk": 1,
"tl": 14830,
"mb": 864,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
617,
763,
764,
765,
766,
767,
768,
769,
770
]
},
{
"tb": 32,
"tbk": 1,
"tl": 3860,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
86,
87,
771,
772,
773,
774,
775,
776,
777,
778
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 55550,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
33,
34,
35,
184,
185,
186,
779,
279,
83
]
},
{
"tb": 128,
"tbk": 1,
"tl": 89,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
780,
781,
782,
783,
784,
785,
786,
787,
788
]
},
{
"tb": 64,
"tbk": 4,
"tl": 341,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
33,
34,
35,
184,
185,
186,
789,
659,
660
]
},
{
"tb": 3680,
"tbk": 18,
"tl": 541,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
86,
87,
88,
89,
90,
91,
92,
93,
790,
154,
791
]
},
{
"tb": 512,
"tbk": 1,
"tl": 17,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
792,
357,
142,
358
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
80,
485,
486,
552,
358,
738
]
},
{
"tb": 26400,
"tbk": 4,
"tl": 1210799141,
"mb": 26400,
"mbk": 4,
"gb": 26400,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
1,
71,
793,
794,
795,
796,
797,
798,
799,
800
]
},
{
"tb": 12582720,
"tbk": 48,
"tl": 40760,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
28,
29,
30,
801,
83
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 54976745,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
96,
97,
98,
99,
802,
476,
803
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 132874,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
53,
420,
804,
805
]
},
{
"tb": 72,
"tbk": 1,
"tl": 833473,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
71,
597,
598,
599,
40,
41,
42,
52,
95,
83
]
},
{
"tb": 20761804800,
"tbk": 1572864,
"tl": 18793084,
"mb": 30800,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
806,
807,
808,
809,
810,
811,
475,
476
]
},
{
"tb": 256,
"tbk": 4,
"tl": 651,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
28,
29,
30,
709,
812
]
},
{
"tb": 32,
"tbk": 1,
"tl": 6676,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
33,
34,
35,
184,
185,
186,
813,
25,
358
]
},
{
"tb": 16777344,
"tbk": 12,
"tl": 302374,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
53,
814,
761,
815
]
},
{
"tb": 192,
"tbk": 1,
"tl": 6525,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
816,
817,
818,
819,
820,
821,
822,
823,
824
]
},
{
"tb": 1153433600,
"tbk": 1100,
"tl": 375317947702,
"mb": 1153433600,
"mbk": 1100,
"gb": 1153433600,
"gbk": 1100,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
53,
825,
826,
827
]
},
{
"tb": 1153433600,
"tbk": 1100,
"tl": 27923575616,
"mb": 1153433600,
"mbk": 1100,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
600
]
},
{
"tb": 24064,
"tbk": 120,
"tl": 1136049,
"mb": 24064,
"mbk": 120,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
96,
97,
98,
133,
134,
307,
8
]
},
{
"tb": 96,
"tbk": 1,
"tl": 120,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
109,
110,
111,
828,
25
]
},
{
"tb": 192,
"tbk": 8,
"tl": 424,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
80,
829,
830,
831,
832,
833,
834
]
},
{
"tb": 3680,
"tbk": 18,
"tl": 98,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
86,
87,
88,
89,
90,
91,
92,
93,
647,
529,
279
]
},
{
"tb": 512,
"tbk": 1,
"tl": 17,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
53,
759,
835,
393
]
},
{
"tb": 2400,
"tbk": 12,
"tl": 221,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
241,
836,
837,
838,
839,
840,
841
]
},
{
"tb": 15616,
"tbk": 4,
"tl": 1600,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
57,
58,
59,
60,
61,
62,
842
]
},
{
"tb": 563200,
"tbk": 4,
"tl": 246847,
"mb": 563200,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
318,
843,
844,
845,
846,
847,
361,
848
]
},
{
"tb": 96,
"tbk": 4,
"tl": 6255712,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
80,
657,
658,
659,
849,
331,
83
]
},
{
"tb": 96,
"tbk": 1,
"tl": 314270184,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
384,
850,
851,
852,
853,
854,
855,
856,
857
]
},
{
"tb": 7872,
"tbk": 8,
"tl": 216,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
858,
859,
860,
861,
862,
863
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 832324,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42,
864
]
},
{
"tb": 192,
"tbk": 4,
"tl": 29072,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
80,
865,
175,
83,
84,
85
]
},
{
"tb": 128,
"tbk": 4,
"tl": 434,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
33,
34,
35,
36,
37,
38,
866,
45,
46
]
},
{
"tb": 13841203200,
"tbk": 1572864,
"tl": 7962192,
"mb": 13200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
33,
34,
35,
36,
37,
38,
389,
867,
475
]
},
{
"tb": 64,
"tbk": 4,
"tl": 24,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
80,
137,
328,
689,
690,
83,
84
]
},
{
"tb": 288,
"tbk": 12,
"tl": 241,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
868,
869,
870,
871,
872,
873,
874,
875,
876
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 58081,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
47,
48,
49,
433,
877
]
},
{
"tb": 192,
"tbk": 4,
"tl": 45169674,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
80,
878,
879,
880,
881,
882,
883
]
},
{
"tb": 15616,
"tbk": 4,
"tl": 3424,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
394,
395,
396,
397,
884,
649,
411,
83
]
},
{
"tb": 2944,
"tbk": 12,
"tl": 1311,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
241,
500,
885,
886,
887,
888,
889,
890,
891,
892
]
},
{
"tb": 64,
"tbk": 4,
"tl": 9,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
80,
137,
138,
689,
690,
83,
84
]
},
{
"tb": 256,
"tbk": 1,
"tl": 15553,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
318,
319,
320,
321,
322,
323,
324,
497,
893,
894
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2843,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
143,
144,
145,
146,
147,
895,
847
]
},
{
"tb": 576,
"tbk": 4,
"tl": 1581,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
64,
65,
66,
67,
896,
897,
454
]
},
{
"tb": 128,
"tbk": 8,
"tl": 6256165,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
898,
899,
900,
901,
902,
903,
904,
905
]
},
{
"tb": 4194304,
"tbk": 4,
"tl": 1597841,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
53,
54,
55,
906
]
},
{
"tb": 256,
"tbk": 2,
"tl": 522,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
907,
908,
909,
910,
648
]
},
{
"tb": 128,
"tbk": 4,
"tl": 62428,
"mb": 128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
318,
319,
320,
321,
322,
323,
324,
497,
911,
499
]
},
{
"tb": 160,
"tbk": 1,
"tl": 283522156,
"mb": 160,
"mbk": 1,
"gb": 160,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
912,
913,
914,
915,
916,
917,
918,
919,
920
]
},
{
"tb": 35200,
"tbk": 4,
"tl": 43101,
"mb": 35200,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
33,
34,
35,
36,
37,
38,
921,
922,
923
]
},
{
"tb": 192,
"tbk": 1,
"tl": 25568177,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
924,
925,
926,
927,
928,
929,
930,
931,
932
]
},
{
"tb": 1153433600,
"tbk": 1100,
"tl": 328802511638,
"mb": 1153433600,
"mbk": 1100,
"gb": 1153433600,
"gbk": 1100,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
33,
34,
35,
36,
37,
38,
933,
934,
935
]
},
{
"tb": 15616,
"tbk": 4,
"tl": 520,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
57,
58,
59,
60,
61,
62,
936
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 606,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
143,
144,
145,
146,
147,
190,
648
]
},
{
"tb": 2736,
"tbk": 6,
"tl": 2685,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
375,
376,
377,
937,
938,
939
]
},
{
"tb": 33554432,
"tbk": 524288,
"tl": 23380538,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
940,
941,
942,
943,
944,
945,
946,
947,
948
]
},
{
"tb": 96,
"tbk": 1,
"tl": 25,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
71,
597,
598,
599,
40,
41,
42,
43,
949,
487
]
},
{
"tb": 192,
"tbk": 1,
"tl": 15621,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
950,
951,
952,
953,
195
]
},
{
"tb": 128,
"tbk": 4,
"tl": 6255687,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
954,
955,
956,
957,
958,
959,
960,
961,
659,
849
]
},
{
"tb": 512,
"tbk": 1,
"tl": 33,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
33,
34,
35,
36,
37,
38,
962,
393,
142
]
},
{
"tb": 17600,
"tbk": 4,
"tl": 25945,
"mb": 17600,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
64,
65,
66,
67,
963,
69,
70
]
},
{
"tb": 96,
"tbk": 1,
"tl": 61779,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
964,
965,
966,
967,
847
]
},
{
"tb": 32,
"tbk": 1,
"tl": 3867,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
86,
87,
968,
969,
970,
971,
972,
973,
974,
975
]
},
{
"tb": 192,
"tbk": 1,
"tl": 15591,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
405,
406,
407,
408,
409,
976,
977,
894,
195
]
},
{
"tb": 192,
"tbk": 4,
"tl": 2790736,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
64,
65,
66,
67,
978,
382,
383
]
},
{
"tb": 64,
"tbk": 4,
"tl": 245,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
80,
137,
328,
139,
140,
141,
142
]
},
{
"tb": 24,
"tbk": 1,
"tl": 832409,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
71,
597,
598,
599,
40,
41,
42,
864,
95,
83
]
},
{
"tb": 64,
"tbk": 1,
"tl": 4,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
979,
980,
981,
982,
983,
984,
985,
986,
987
]
},
{
"tb": 32,
"tbk": 1,
"tl": 17171636,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
143,
144,
145,
146,
147,
988,
83
]
},
{
"tb": 32,
"tbk": 1,
"tl": 313895985,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
465,
989,
990,
991,
992,
993,
994,
995,
996
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3204,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
302,
303,
304,
305,
528,
191,
361,
848
]
},
{
"tb": 224,
"tbk": 1,
"tl": 15700,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
318,
319,
320,
321,
322,
323,
324,
497,
997,
998
]
},
{
"tb": 15616,
"tbk": 4,
"tl": 62289,
"mb": 15616,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
318,
319,
320,
321,
322,
323,
324,
497,
999,
1000
]
},
{
"tb": 15616,
"tbk": 122,
"tl": 127,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
22,
1001,
8,
9
]
},
{
"tb": 6528,
"tbk": 34,
"tl": 14034,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
241,
1002,
1003,
1004,
1005,
1006,
1007
]
},
{
"tb": 65280,
"tbk": 32,
"tl": 40055,
"mb": 32768,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
28,
29,
30,
131,
355
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 340273559,
"mb": 524288,
"mbk": 1,
"gb": 524288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
53,
54,
1008,
1009
]
},
{
"tb": 24188,
"tbk": 4,
"tl": 62274,
"mb": 24188,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
318,
319,
320,
321,
322,
323,
324,
497,
1010,
1000
]
},
{
"tb": 32,
"tbk": 1,
"tl": 3892,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
86,
87,
1011,
1012,
1013,
1014,
1015,
1016,
1017,
1018
]
},
{
"tb": 6072,
"tbk": 11,
"tl": 4557,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
248,
249,
250,
1019,
1020,
1021
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 76456,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
33,
34,
35,
36,
37,
38,
389,
1022,
83
]
},
{
"tb": 563200,
"tbk": 128,
"tl": 589603,
"mb": 563200,
"mbk": 128,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
33,
34,
35,
184,
185,
186,
1023,
1024,
1025
]
},
{
"tb": 32,
"tbk": 1,
"tl": 3874,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
86,
87,
1026,
1027,
1028,
1029,
1030,
1031,
1032,
1033
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 283800,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
33,
34,
35,
36,
37,
38,
389,
1034,
175
]
},
{
"tb": 128,
"tbk": 1,
"tl": 104,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
780,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 4746,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
370,
371,
372,
373,
1043
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
318,
319,
320,
321,
322,
323,
324,
325,
464,
552
]
},
{
"tb": 32,
"tbk": 1,
"tl": 5,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
716,
717,
718,
719,
720,
721,
722,
723,
1044
]
},
{
"tb": 32,
"tbk": 4,
"tl": 1597960,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
86,
87,
150,
151,
152,
1045,
1046,
82,
83
]
},
{
"tb": 130816,
"tbk": 36,
"tl": 114,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
28,
29,
30,
1047,
1048
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 14818533,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
96,
97,
98,
99,
1049,
1050,
1051
]
},
{
"tb": 13793,
"tbk": 1,
"tl": 15633,
"mb": 13793,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
318,
319,
320,
321,
322,
323,
324,
497,
1052,
1053
]
},
{
"tb": 4608,
"tbk": 16,
"tl": 571,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
1054,
1055,
1056,
1057,
1058
]
},
{
"tb": 8388608,
"tbk": 4,
"tl": 68309839,
"mb": 8388608,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
57,
58,
59,
60,
61,
62,
1059
]
},
{
"tb": 512,
"tbk": 1,
"tl": 15,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
53,
759,
1060,
357
]
},
{
"tb": 64,
"tbk": 4,
"tl": 6255658,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
33,
34,
35,
184,
185,
186,
789,
659,
849
]
},
{
"tb": 2304,
"tbk": 12,
"tl": 5032,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
241,
1002,
1003,
1004,
1061,
1062,
1063
]
},
{
"tb": 32,
"tbk": 1,
"tl": 17171630,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
143,
144,
145,
146,
147,
1064,
83
]
},
{
"tb": 422400,
"tbk": 96,
"tl": 556,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
33,
34,
35,
36,
37,
38,
389,
1065,
1066
]
},
{
"tb": 256,
"tbk": 1,
"tl": 12190,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
22,
1067,
1068,
25
]
},
{
"tb": 2880,
"tbk": 4,
"tl": 4396,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
302,
303,
304,
305,
528,
648,
649,
411
]
},
{
"tb": 15616,
"tbk": 4,
"tl": 604,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
53,
759,
1069,
897
]
},
{
"tb": 2348810240,
"tbk": 1,
"tl": 28958930,
"mb": 2348810240,
"mbk": 1,
"gb": 2348810240,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
33,
34,
35,
36,
37,
38,
1070,
1071,
1072
]
},
{
"tb": 768,
"tbk": 1,
"tl": 4333,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
71,
597,
598,
599,
40,
41,
42,
43,
1073,
361
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 15637,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
318,
319,
320,
321,
322,
323,
324,
497,
1074,
1053
]
},
{
"tb": 128,
"tbk": 4,
"tl": 1361094966,
"mb": 128,
"mbk": 4,
"gb": 128,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
80,
308,
1075,
1076,
1077,
1078,
1079
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
318,
319,
320,
321,
322,
323,
324,
697,
1080,
25
]
},
{
"tb": 256,
"tbk": 1,
"tl": 678,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
86,
87,
150,
151,
152,
153,
154,
791,
1081
]
},
{
"tb": 33554432,
"tbk": 16,
"tl": 68433511,
"mb": 33554432,
"mbk": 16,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
53,
1082,
1083,
1084
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2277,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
86,
87,
1085,
1086,
1087,
1088,
1089,
1090,
1091,
1092
]
},
{
"tb": 192,
"tbk": 8,
"tl": 280,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
80,
1093,
830,
831,
832,
833,
834
]
},
{
"tb": 1267200,
"tbk": 96,
"tl": 119415,
"mb": 576400,
"mbk": 33,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
806,
807,
808,
809,
810,
1094,
1066,
1095
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 60233,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
47,
48,
49,
433,
1096
]
},
{
"tb": 3904,
"tbk": 4,
"tl": 4378,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
360,
648,
649
]
},
{
"tb": 96,
"tbk": 1,
"tl": 11863,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
109,
110,
111,
1097,
9
]
},
{
"tb": 256,
"tbk": 4,
"tl": 674,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
28,
29,
30,
402,
812
]
},
{
"tb": 64,
"tbk": 4,
"tl": 17464643,
"mb": 64,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
33,
34,
35,
36,
37,
38,
561,
616,
82
]
},
{
"tb": 288,
"tbk": 1,
"tl": 33087,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
1098,
1099,
1100,
1101,
115
]
},
{
"tb": 563200,
"tbk": 1,
"tl": 62400,
"mb": 563200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
318,
843,
844,
845,
1102,
847,
361,
848
]
},
{
"tb": 192,
"tbk": 8,
"tl": 34929183,
"mb": 192,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
280,
281,
282,
283,
284,
285,
286,
287,
1103,
1104
]
},
{
"tb": 3680,
"tbk": 18,
"tl": 608,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
86,
87,
88,
89,
90,
91,
92,
93,
790,
154,
155
]
},
{
"tb": 2048,
"tbk": 4,
"tl": 9734,
"mb": 2048,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
1105,
393,
142,
358
]
},
{
"tb": 6920601600,
"tbk": 1572864,
"tl": 15115951,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
33,
34,
35,
184,
185,
186,
1106,
475,
476
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 59140,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
318,
843,
844,
845,
1107,
1108,
279,
83
]
},
{
"tb": 192,
"tbk": 1,
"tl": 340318898,
"mb": 192,
"mbk": 1,
"gb": 192,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
1109,
1110,
1111,
1112,
1113,
1114,
487,
83
]
},
{
"tb": 96,
"tbk": 1,
"tl": 10115,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
109,
110,
111,
1115,
355
]
},
{
"tb": 139228,
"tbk": 48,
"tl": 31696975,
"mb": 69632,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
47,
48,
49,
50,
1116
]
},
{
"tb": 144,
"tbk": 1,
"tl": 832445,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
260,
1117,
1118,
1119,
289,
290,
291,
1120,
95,
83
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 328636,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
33,
34,
35,
184,
185,
186,
1121,
1122,
83
]
},
{
"tb": 6928,
"tbk": 42,
"tl": 934,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
86,
87,
88,
89,
90,
91,
92,
93,
790,
154,
1123
]
},
{
"tb": 64,
"tbk": 4,
"tl": 432,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
80,
137,
138,
139,
329,
330,
331
]
},
{
"tb": 192,
"tbk": 1,
"tl": 10828,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
1124,
1125,
1126,
1127,
142
]
},
{
"tb": 72,
"tbk": 1,
"tl": 64470,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
80,
1128,
848,
83,
84,
85
]
},
{
"tb": 3840,
"tbk": 16,
"tl": 2393,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
28,
29,
30,
1129,
1130
]
},
{
"tb": 960,
"tbk": 4,
"tl": 1284,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
86,
87,
150,
151,
152,
153,
154,
1123,
1131
]
},
{
"tb": 96,
"tbk": 1,
"tl": 7350962,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
109,
110,
111,
1115,
132
]
},
{
"tb": 4194304,
"tbk": 4,
"tl": 7066717,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
57,
58,
59,
60,
61,
62,
1132
]
},
{
"tb": 128,
"tbk": 4,
"tl": 359,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
954,
955,
956,
957,
958,
959,
960,
961,
659,
660
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1292,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
241,
500,
501,
502,
503,
504,
505,
506,
1133,
454,
455
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 14719981,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
96,
97,
98,
99,
100,
101,
1134
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4179,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
1135,
1136,
1137,
1138,
1139,
1140,
1141,
1142
]
},
{
"tb": 512,
"tbk": 1,
"tl": 5435788,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
1143,
1144,
1145,
1146,
83
]
}
],
"ftbl": [
"[root]",
"0x63aecbccb4a9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x63aecbd8ea9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecbea0f58: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbea0f58: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbea0f58: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x63aecbfbbc17: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x63aecbd7cd36: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x63aecbd8439c: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x63aecbca560c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x63aecbf35f40: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf35f40: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf35f40: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf35f40: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x63aecbfd814b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfcf8a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1c27b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecc02dbca: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x63aecbd940ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecbf4c736: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf4c736: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf4c736: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbc6f909: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x63aecc0008ce: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x63aecbca6185: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x63aecbdf0907: winter_verifier::verify (verifier/src/lib.rs:108:19)",
"0x63aecc232b79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x63aecc231319: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x63aecbdc3122: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63aecbdd06b9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63aecbfa4d91: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63aecc09b95b: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x63aecbea29cc: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x63aecbc7141c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbc7141c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbc7141c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x63aecbfbc939: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63aecbfbc939: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63aecbfbc939: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x63aecbf4bbc3: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x63aecbfbd1f9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63aecbfbd1f9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63aecbfbd1f9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x63aecbf4a067: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x63aecbcc122a: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x63aecbcc1307: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x63aecbde8156: winter_verifier::perform_verification (verifier/src/lib.rs:225:13)",
"0x63aecc231ab0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63aecc231ce9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63aecc232f12: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63aecc231d49: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x63aecc1d7d7a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x63aecbe45c8c: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x63aecbcd8e7b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x63aecbccd393: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x63aecbe9d018: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x63aecc03051a: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x63aecc2306cc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x63aecc22ed9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x63aecc22fcf8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x63aecc22fcf8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x63aecc22c964: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x63aecc22cc13: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x63aecc097e40: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x63aecbc719f5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbc719f5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbc719f5: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x63aecbfbbbf4: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x63aecbc8fc8d: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x63aecbded869: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:214:32)",
"0x63aecbc32603: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63aecbd909fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecbf07141: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf07141: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf07141: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf07141: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfd9f9b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfce346: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1c88b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbe6c4e3: winter_prover::Prover::generate_proof (prover/src/lib.rs:209:39)",
"0x63aecbcca937: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x63aecc06c4c0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:28)",
"0x63aecbe70bd3: winter_prover::Prover::generate_proof (prover/src/lib.rs:407:21)",
"0x63aecbe8dcd4: winter_prover::Prover::prove (prover/src/lib.rs:171:37)",
"0x63aecbc4f2b2: <examples::do_work::DoWorkExample<H> as examples::Example>::prove (src/do_work/mod.rs:108:9)",
"0x63aecbaa7d4d: winterfell::main (examples/src/main.rs:49:17)",
"0x63aecc1b4899: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x63aecc1210aa: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecc1326ac: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecc1326ac: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecc1326ac: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x63aecc1034a9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63aecc1034a9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63aecc1034a9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x63aecbe45d84: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x63aecbe6d583: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:33)",
"0x63aecbf4c916: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf4c916: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf4c916: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbcd8fbb: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x63aecbfdfe5d: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x63aecbfe3406: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x63aecbff1940: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x63aecbff61ab: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x63aecbff5696: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x63aecbc898e9: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:641:17)",
"0x63aecc0b8cb7: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x63aecc06aa27: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:272:18)",
"0x63aecc069297: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:166:30)",
"0x63aecbdbc972: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63aecbdd0a19: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63aecbfa6402: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63aecbe707ad: winter_prover::Prover::generate_proof (prover/src/lib.rs:438:13)",
"0x63aecbcd61f6: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x63aecc0a5c8f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x63aecc0b31b2: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x63aecbd95dbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecbf043c1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf043c1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf043c1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf043c1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfd99db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfccd06: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1eeab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbde6d9f: winter_verifier::perform_verification (verifier/src/lib.rs:216:40)",
"0x63aecc231d18: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x63aecc23300a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x63aecc23300a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x63aecc232dae: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x63aecc232dae: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x63aecc232e9d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x63aecbef32c9: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:534:17)",
"0x63aecbd55428: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x63aecbea07e9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x63aecbdd1f24: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x63aecc02dca7: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x63aecbcb977b: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x63aecc009e95: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x63aecbe5112c: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:62:13)",
"0x63aecbef2985: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:364:13)",
"0x63aecc065b4c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:63:9)",
"0x63aecbde8247: winter_verifier::perform_verification (verifier/src/lib.rs:223:43)",
"0x63aecbdf09d2: winter_verifier::verify (verifier/src/lib.rs:110:21)",
"0x63aecc1c6799: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x63aecc1c1b39: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x63aecc124830: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63aecc126899: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63aecc101451: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63aecbea34f8: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x63aecbde76c1: winter_verifier::perform_verification (verifier/src/lib.rs:295:27)",
"0x63aecc0fc656: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecc0fc656: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecc0fc656: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbdd5d1c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x63aecbfe2b5e: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x63aecbca0d3c: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x63aecbde798e: winter_verifier::perform_verification (verifier/src/lib.rs:303:42)",
"0x63aecbf0b197: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf0b197: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf0b197: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf0b197: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfd9f6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfcb599: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1ec6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbfece47: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x63aecbd9923c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecbf36977: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf36977: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf36977: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf36977: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfd765e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfcb517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1c60e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbe6e5d6: winter_prover::Prover::generate_proof (prover/src/lib.rs:491:51)",
"0x63aecc013810: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x63aecbe6e868: winter_prover::Prover::generate_proof (prover/src/lib.rs:514:9)",
"0x63aecc001bc2: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x63aecbe9f240: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x63aecc015bb1: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x63aecbdd7191: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x63aecbf4ccd6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf4ccd6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf4ccd6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbe6d00d: winter_prover::Prover::generate_proof (prover/src/lib.rs:300:37)",
"0x63aecbc7193c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63aecbc7193c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63aecbc7193c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x63aecbccc9cb: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x63aecbc3932c: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63aecbea2954: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x63aecbfe0f53: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x63aecbea6b07: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x63aecc1d2187: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x63aecc1d0fed: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:357:24)",
"0x63aecc1cbe53: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:174:32)",
"0x63aecbaa88fd: winterfell::main (examples/src/main.rs:80:24)",
"0x63aecbdbf5e2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63aecbdd0209: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63aecbfaa0e2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63aecbca649b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x63aecbda3982: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63aecbdcfc39: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63aecbfa8a51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63aecbe486c9: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x63aecbd4c30d: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x63aecc025152: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x63aecbc92583: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x63aecbf22877: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf22877: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf22877: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf22877: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfd770e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfd3317: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1face: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbfeb532: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x63aecbf23107: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf23107: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf23107: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf23107: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfd84fe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfd24b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1f86e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbee8d8f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x63aecbd6c9d0: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x63aecbca4e38: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x63aecbd8f7bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecbf3cb27: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf3cb27: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf3cb27: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf3cb27: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfb5b76: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x63aecbfcfba7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1ed6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbeadd5b: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x63aecc0a5caa: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x63aecc0305d7: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x63aecc0a5e0b: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x63aecbe50b27: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x63aecbe4e8cd: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x63aecc0374cb: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x63aecc025524: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x63aecc1e0739: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x63aecc1ecd2b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x63aecc1ec751: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x63aecc1e8adb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x63aecc1e26cd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x63aecc1dd84b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x63aecc1dbf13: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x63aecc00cccb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x63aecc00c471: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x63aecbe20f0b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x63aecbe19451: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x63aecbe1f77d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x63aecbe1310e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x63aecbe50d16: <examples::do_work::air::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (src/do_work/air.rs:13:9)",
"0x63aecbc82b09: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:211:31)",
"0x63aecbc39d3a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63aecbd2a0a8: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x63aecbc033ba: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x63aecbc2363a: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x63aecbd97a9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecbf31111: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf31111: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf31111: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf31111: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfd69fb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfcfcc6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1e86b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbd6ea5c: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:82:9)",
"0x63aecbf3f9a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf3f9a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf3f9a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf3f9a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfda3de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfd14c9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1fede: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbccc5e0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x63aecc0132ef: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x63aecc0bd6eb: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x63aecbe6fbc5: winter_prover::Prover::generate_proof (prover/src/lib.rs:598:34)",
"0x63aecbd93e4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecbc712ec: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbc712ec: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbc712ec: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x63aecbfbdf19: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63aecbfbdf19: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63aecbfbdf19: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x63aecc0365d6: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x63aecc036440: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x63aecbfbd039: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63aecbfbd039: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63aecbfbd039: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x63aecbe4af48: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x63aecbd6c7fb: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x63aecbf322f0: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf322f0: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf322f0: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf322f0: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x63aecbfd65bb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfd1da6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1ddbb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecc025075: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x63aecbd92e8c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecbf4c966: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf4c966: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf4c966: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbdd1c9d: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x63aecbd7d04d: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x63aecbe50e42: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::new (src/do_work/air.rs:35:23)",
"0x63aecbdf18d1: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:101:85)",
"0x63aecbc42432: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63aecbd5ec0a: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:107:27)",
"0x63aecbc7bbff: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x63aecbd5c9a4: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:113:9)",
"0x63aecbdc8022: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63aecbdd09e9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63aecbfa7842: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63aecbde8673: winter_verifier::perform_verification (verifier/src/lib.rs:177:9)",
"0x63aecc2315ca: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecc232bbc: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecc232bbc: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecc232bbc: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x63aecc2337fc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63aecc2337fc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63aecc2337fc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x63aecbea2df4: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x63aecbea2ad6: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x63aecbd58a03: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x63aecbe510bd: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:61:13)",
"0x63aecbd6f670: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:40:22)",
"0x63aecc06b6e7: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:13)",
"0x63aecbe70b32: winter_prover::Prover::generate_proof (prover/src/lib.rs:403:21)",
"0x63aecbd95b1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecbf1e7cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf1e7cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf1e7cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf1e7cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x63aecbfd986e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfcb947: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1ce8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbefcbf6: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x63aecbca523c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x63aecbd9366c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecbf4be1c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf4be1c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf4be1c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x63aecbfbce79: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63aecbfbce79: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63aecbfbce79: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x63aecbe6e6be: winter_prover::Prover::generate_proof (prover/src/lib.rs:500:39)",
"0x63aecc09b01d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x63aecbccf87b: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:235:25)",
"0x63aecc09aa62: examples::do_work::prover::build_do_work_trace (src/do_work/prover.rs:65:5)",
"0x63aecbe8e668: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces::{{closure}} (src/do_work/prover.rs:32:27)",
"0x63aecbef308d: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:540:13)",
"0x63aecbde713b: winter_verifier::perform_verification (verifier/src/lib.rs:263:61)",
"0x63aecbfeb1a4: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x63aecbde7cbe: winter_verifier::perform_verification (verifier/src/lib.rs:314:25)",
"0x63aecbc4fd99: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:118:9)",
"0x63aecc09208f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x63aecbfe0698: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x63aecbeb0cb4: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x63aecbf01c21: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf01c21: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf01c21: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf01c21: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfd83ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfcbac6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc2001b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbe6e6a3: winter_prover::Prover::generate_proof (prover/src/lib.rs:495:52)",
"0x63aecc1deda0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63aecc1da5f9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63aecc1d95a1: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63aecc1d9eb0: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x63aecbec0a4e: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x63aecc00d6eb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x63aecc00c891: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x63aecbe1ff4b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x63aecbe0bd8f: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x63aecbe17711: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x63aecbe12caa: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x63aecc068fd0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:149:33)",
"0x63aecc06c9e0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:122:17)",
"0x63aecbd4c436: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x63aecbd9390c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecbf4c466: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf4c466: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf4c466: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbe6d051: winter_prover::Prover::generate_proof (prover/src/lib.rs:301:32)",
"0x63aecbf4a097: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x63aecbca627d: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x63aecc09b00c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x63aecbfe889e: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x63aecbde7c0f: winter_verifier::perform_verification (verifier/src/lib.rs:308:25)",
"0x63aecbd98a5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecbf4cb46: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf4cb46: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf4cb46: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbcd8d3b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x63aecc097e2b: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x63aecbfee76a: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x63aecbc35c7a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63aecbef9c93: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:505:13)",
"0x63aecbde69d9: winter_verifier::perform_verification (verifier/src/lib.rs:183:13)",
"0x63aecc0b5ab6: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x63aecc1d2709: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x63aecc1d34bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecc1d6776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecc1d6776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecc1d6776: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecc0b1bcd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x63aecbe6fa4f: winter_prover::Prover::generate_proof (prover/src/lib.rs:590:25)",
"0x63aecbf37637: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf37637: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf37637: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf37637: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfdaade: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfd34b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1dd0e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbe6ce32: winter_prover::Prover::generate_proof (prover/src/lib.rs:286:23)",
"0x63aecbcce47b: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x63aecbe488b6: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x63aecbe4c76c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x63aecbe42210: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:197:28)",
"0x63aecbd9827c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecbf09557: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf09557: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf09557: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf09557: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfb779d: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x63aecbfd321c: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1f4ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbe4f82a: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x63aecbdd3564: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x63aecbd78175: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x63aecbf38c51: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf38c51: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf38c51: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf38c51: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfd6f6b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfd1a96: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1e53b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbca4a47: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x63aecbf19187: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf19187: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf19187: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf19187: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfda29e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfcee27: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1c7ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbfe795b: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x63aecbe5108f: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:60:9)",
"0x63aecc0b1c96: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x63aecbec0214: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x63aecbef073c: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x63aecbde7e15: winter_verifier::perform_verification (verifier/src/lib.rs:320:5)",
"0x63aecbf0f727: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf0f727: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf0f727: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf0f727: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfd95de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfcf507: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1fcfe: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbe49277: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x63aecbea2b12: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x63aecbd9170a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecbf23781: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf23781: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf23781: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf23781: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfd8dab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfcd306: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1d09b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbe81c73: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:634:36)",
"0x63aecbff426a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x63aecbff1903: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x63aecbe823dd: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:659:26)",
"0x63aecbf11227: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf11227: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf11227: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf11227: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfd723e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfced47: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1fbee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbec110f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x63aecc09a82c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x63aecbea2b58: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x63aecbe6c656: winter_prover::Prover::generate_proof (prover/src/lib.rs:228:27)",
"0x63aecbd8cdbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecbf30127: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf30127: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf30127: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf30127: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfd701e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfcd6b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1ffae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbfede38: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x63aecc230e2c: <winter_utils::serde::byte_reader::SliceReader as winter_utils::serde::byte_reader::ByteReader>::read_vec (src/serde/byte_reader.rs:151:22)",
"0x63aecc1d55bd: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:151:28)",
"0x63aecc1cc178: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:29)",
"0x63aecc1de8ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecc1dab6c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecc1dab6c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecc1dab6c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x63aecc1da62c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63aecc1da62c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63aecc1da62c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x63aecc0b1c77: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x63aecbff6c77: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x63aecbfeec8c: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x63aecbff57bc: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x63aecbeecd61: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x63aecbde733e: winter_verifier::perform_verification (verifier/src/lib.rs:272:24)",
"0x63aecc1d375c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecc1d6726: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecc1d6726: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecc1d6726: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecc1cbd52: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:172:33)",
"0x63aecbeb3eb0: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x63aecbe6c8ba: winter_prover::Prover::generate_proof (prover/src/lib.rs:257:22)",
"0x63aecbf0a317: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf0a317: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf0a317: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf0a317: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfd806e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfd3587: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1c47e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbe47c6a: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x63aecbfe06ff: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x63aecc0bd495: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x63aecbd8e55c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecbf381c7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf381c7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf381c7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf381c7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfd706e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfcc2c7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbd6a42e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbe6c79f: winter_prover::Prover::generate_proof (prover/src/lib.rs:243:41)",
"0x63aecc1da6b6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x63aecbec0b2b: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x63aecbf079a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf079a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf079a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf079a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfd971e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfcc517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1e37e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbec0f51: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x63aecc0006fb: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x63aecc0136ec: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x63aecbd53499: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x63aecbdf05a9: winter_verifier::verify (verifier/src/lib.rs:95:32)",
"0x63aecbdccf22: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63aecbdcffc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63aecbfa9aaf: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63aecc0255d9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x63aecbd71f72: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:169:36)",
"0x63aecbd6ff30: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:54:17)",
"0x63aecc1d6118: <winter_air::proof::context::Context as winter_utils::serde::Deserializable>::read_from (src/proof/context.rs:184:35)",
"0x63aecc1cbbf7: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:27)",
"0x63aecc0365ed: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x63aecbd89c0c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecbf2bb31: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf2bb31: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf2bb31: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf2bb31: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfd90ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfcd5a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1ee5b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbd58967: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x63aecbd904bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecbf434c8: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf434c8: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf434c8: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf434c8: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x63aecbfda72e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfd1407: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecc0ba17e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbefde5c: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x63aecbf1a666: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf1a666: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf1a666: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf1a666: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x63aecbfd6b6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfcf5dc: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbfde9be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbfe0edb: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x63aecbd9294c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecbf06ae7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf06ae7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf06ae7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf06ae7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfd853e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfd2d37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1ed4e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbe8e619: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces (src/do_work/prover.rs:30:9)",
"0x63aecbf4b856: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf4b856: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf4b856: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x63aecbe457be: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x63aecbe43f17: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x63aecbc835ac: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:293:57)",
"0x63aecbf057e7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf057e7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf057e7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf057e7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfd973e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfcf7f7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc2032e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbe41d13: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:253:9)",
"0x63aecbd987bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecbf4c876: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf4c876: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf4c876: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbe6cfc9: winter_prover::Prover::generate_proof (prover/src/lib.rs:299:44)",
"0x63aecc06c58d: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:33)",
"0x63aecbd8e01c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecbf1c7f7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf1c7f7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf1c7f7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf1c7f7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfd8b7e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfd2f39: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1d0ee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbe6c603: winter_prover::Prover::generate_proof (prover/src/lib.rs:217:20)",
"0x63aecc1e576e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x63aecc1e7220: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x63aecc1e6428: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x63aecbd8e2bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecbf46ffe: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf46ffe: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf46ffe: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf46ffe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x63aecbfd843b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfcfb76: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecc07110b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbc9e01c: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x63aecbd8d83c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecbf4c786: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf4c786: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf4c786: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbe6cf85: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:39)",
"0x63aecbdbd842: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63aecbdd0419: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63aecbfa5ba2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63aecbd8457e: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x63aecbfe0a2c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x63aecc09f274: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x63aecc0b2152: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x63aecbfe7bd0: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x63aecc1ec9cb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x63aecc1ec6a1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x63aecc1e8c9b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x63aecc1e3471: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x63aecc1e3af7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x63aecc1de72b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x63aecc0359a3: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x63aecc0b982c: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x63aecbef2c22: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:348:9)",
"0x63aecc06564a: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:25:25)",
"0x63aecbd9240c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecbf21bc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf21bc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf21bc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf21bc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfd7a9e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfd2c79: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1d94e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbd6f77a: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:50:26)",
"0x63aecc02da9a: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x63aecbe9c833: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x63aecbfe8848: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x63aecbf0d5b7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf0d5b7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf0d5b7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf0d5b7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfd6b0e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfcea37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1e2be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbea6c76: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x63aecc00d02b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x63aecc00c681: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x63aecbe2012b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x63aecbdf58bd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x63aecbcbef89: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x63aecbe9aa00: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x63aecc024d42: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x63aecbd7cd7b: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x63aecbcd20ab: winter_prover::trace::Trace::validate (src/trace/mod.rs:122:26)",
"0x63aecbe70f21: winter_prover::Prover::generate_proof (prover/src/lib.rs:370:17)",
"0x63aecc1d4012: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63aecc1d51a9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63aecc1d6878: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63aecc1ccc1a: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:13)",
"0x63aecc1d0ec9: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:352:21)",
"0x63aecc0657eb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:39:30)",
"0x63aecc22cd9e: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x63aecbea301f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x63aecbd5af5f: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x63aecbd8bb7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecbf2df11: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf2df11: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf2df11: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf2df11: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfd83db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfcdd46: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1cacb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbeb0c0e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x63aecbef9bb8: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:510:13)",
"0x63aecc0b5c0e: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x63aecc0b3104: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x63aecbe6f38b: winter_prover::Prover::generate_proof (prover/src/lib.rs:561:9)",
"0x63aecbfe4af6: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x63aecbde7d3a: winter_verifier::perform_verification (verifier/src/lib.rs:316:28)",
"0x63aecbcd2598: winter_prover::trace::Trace::validate (src/trace/mod.rs:177:13)",
"0x63aecbd90f3a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecbf0215e: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf0215e: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf0215e: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf0215e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x63aecbfd821e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfcd957: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecc06476e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecc012f64: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:142:33)",
"0x63aecbf20787: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf20787: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf20787: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf20787: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfd767e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfce807: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc2071e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbcd033a: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:132:32)",
"0x63aecbcd9303: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x63aecc0a5c25: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x63aecbe8a4e4: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:691:36)",
"0x63aecbca4fa8: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x63aecbc926f1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x63aecbaa89d5: winterfell::main (examples/src/main.rs:83:11)",
"0x63aecbdbe712: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63aecbdd0149: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63aecbfa7122: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63aecbea6c91: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x63aecbdf0718: winter_verifier::verify (verifier/src/lib.rs:97:38)",
"0x63aecc1c1e7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecc13257c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecc13257c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecc13257c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x63aecc102cc9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63aecc102cc9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63aecc102cc9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x63aecbef1e2a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x63aecc0011f6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x63aecbca5c48: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x63aecbef1e3f: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x63aecbda8392: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63aecbdcfa59: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63aecbfa4b42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63aecbd720d9: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:174:17)",
"0x63aecbcccf42: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x63aecbe48d04: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x63aecbe45fbc: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x63aecc1d0d02: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:348:22)",
"0x63aecbf20ee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf20ee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf20ee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf20ee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfb0bcf: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x63aecbfce849: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1de5e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbdf0784: winter_verifier::verify (verifier/src/lib.rs:101:24)",
"0x63aecbf2c9d1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf2c9d1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf2c9d1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf2c9d1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfd8cfb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfd1026: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1f64b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbca4c9f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x63aecc0bd6d0: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x63aecbd9851c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecbf44907: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf44907: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf44907: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf44907: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfd7fde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfd1627: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1c93e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbc4fd54: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:112:30)",
"0x63aecc0b9983: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x63aecbdd5f79: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x63aecbca02ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x63aecbfeb1bf: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x63aecbf2af37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf2af37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf2af37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf2af37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfda2be: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfd32d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1d4de: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbe422c4: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:198:23)",
"0x63aecbe70665: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:17)",
"0x63aecbff1872: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x63aecbe6cc88: winter_prover::Prover::generate_proof (prover/src/lib.rs:268:13)",
"0x63aecc03042f: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x63aecc030504: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x63aecbfbbebb: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbfbbebb: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbfbbebb: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbfbbebb: <[V] as alloc::slice::Concat<T>>::concat (alloc/src/slice.rs:712:26)",
"0x63aecbfbbcab: alloc::slice::<impl [T]>::concat (alloc/src/slice.rs:561:9)",
"0x63aecbff4527: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:228:37)",
"0x63aecbd56484: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x63aecbca5cae: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x63aecbe48be1: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x63aecbe4b211: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x63aecbd8abbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecbf13991: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf13991: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf13991: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf13991: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfd937b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfceed6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1c78b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbde6cd2: winter_verifier::perform_verification (verifier/src/lib.rs:212:41)",
"0x63aecbcd0511: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:132:51)",
"0x63aecbc32a1a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63aecc075da5: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x63aecbca63ef: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x63aecc035299: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x63aecbefd5ae: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x63aecbcbb89d: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x63aecbefccce: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x63aecbeff6c6: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x63aecbef29ea: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:362:9)",
"0x63aecbfe7853: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x63aecc1ec81b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x63aecc1ec541: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x63aecc1e8d7b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x63aecc1e33a1: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x63aecc1e3b37: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x63aecc1de6db: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x63aecc092103: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x63aecbf4c556: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf4c556: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf4c556: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecc01ac60: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x63aecbea6bd9: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x63aecbe6face: winter_prover::Prover::generate_proof (prover/src/lib.rs:593:29)",
"0x63aecc06b63b: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:50:13)",
"0x63aecbf1bf91: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf1bf91: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf1bf91: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf1bf91: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfd6edb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfd0626: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1c4ab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbe81ba6: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:630:42)",
"0x63aecc00ddab: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x63aecc00c7e1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x63aecbe204eb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x63aecbdf579d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x63aecbcbe0fc: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x63aecbcbb911: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x63aecbe45d29: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x63aecc013580: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x63aecbcc123f: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x63aecbff4476: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:228:38)",
"0x63aecbd8ae5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecbf36771: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf36771: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf36771: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf36771: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfd70cb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfd09c6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1d0cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbe47e5a: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x63aecc0299fc: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x63aecbeb2a92: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x63aecbc894c6: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:493:32)",
"0x63aecbc3f09a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63aecbd0c2a2: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x63aecbc0ac9b: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x63aecbc27906: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x63aecc09f35d: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x63aecc1df1a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecc1df1a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecc1df1a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecc1df1a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x63aecc1df5ee: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecc1df5b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecc1e084e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecc1de299: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x63aecc1d18d2: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:215:25)",
"0x63aecc1cc15d: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:188:24)",
"0x63aecc01b10a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x63aecc092184: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x63aecbec1010: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x63aecbf30ee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf30ee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf30ee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf30ee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfd6dde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfcdc57: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc2047e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecc035994: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x63aecbe4c83e: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x63aecbdb4912: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63aecbdd0119: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63aecbfa594f: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63aecbfe0d8a: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x63aecc1d5784: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:155:27)",
"0x63aecbd98f9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecbf16d37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf16d37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf16d37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf16d37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfd826e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfcb6a7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1ddde: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbe81d43: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:638:34)",
"0x63aecbcbae22: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x63aecbd505c4: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x63aecc070d04: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x63aecbd8a91c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecbf14dc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf14dc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf14dc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf14dc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfb66b3: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x63aecbfcbbc9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1e01e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbe6cf62: winter_prover::Prover::generate_proof (prover/src/lib.rs:291:36)",
"0x63aecbe42723: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:200:34)",
"0x63aecbc31b0a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63aecbd051bf: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x63aecc092450: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x63aecbdf59dd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x63aecbcbe83f: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x63aecbe9a6c3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x63aecbd962fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecbf13135: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf13135: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf13135: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf13135: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x63aecbfd710e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfcc737: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1ccce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbff41b0: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:218:46)",
"0x63aecbd58a1e: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x63aecc1d4502: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63aecc1d5179: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63aecc1d6ae2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63aecc1cc916: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:13)",
"0x63aecbd8d2fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecc094776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecc094776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecc094776: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x63aecbfbd3b9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63aecbfbd3b9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63aecbfbd3b9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x63aecc0b9846: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x63aecbfe7693: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x63aecbc8fcb0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x63aecbdaa622: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63aecbdd0839: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63aecbfa9252: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63aecc01adb8: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x63aecbf0c911: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf0c911: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf0c911: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf0c911: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfd7f1b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfd3516: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1d20b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbca4bd7: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x63aecc1d12b9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x63aecc1d170b: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:211:22)",
"0x63aecc068f6c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:148:31)",
"0x63aecbbb9149: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x63aecbbb7c19: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x63aecbbb6030: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63aecbbb6298: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x63aecbbb5b5a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x63aecbbb5b5a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x63aecbaaa6a1: alloc::string::String::reserve (alloc/src/string.rs:1152:9)",
"0x63aecbaaa6a1: <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend (alloc/src/string.rs:2173:14)",
"0x63aecbaaa77c: <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter (alloc/src/string.rs:2093:9)",
"0x63aecbe707ed: winter_prover::Prover::generate_proof (prover/src/lib.rs:439:13)",
"0x63aecbf36ba1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf36ba1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf36ba1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf36ba1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfd9b3b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfd10b6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1d6cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbe6cc5d: winter_prover::Prover::generate_proof (prover/src/lib.rs:266:43)",
"0x63aecc1d52bd: <winter_air::proof::commitments::Commitments as winter_utils::serde::Deserializable>::read_from (src/proof/commitments.rs:108:22)",
"0x63aecc1cbbdc: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:167:27)",
"0x63aecc1d1dc4: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:361:22)",
"0x63aecc1d13d6: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:146:27)",
"0x63aecbd7cf3a: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x63aecc1ecb7b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x63aecc1ec5f1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x63aecc1e8bbb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x63aecc1e587e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x63aecc1e6c4c: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x63aecc1e5d8a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x63aecbe9c151: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x63aecbeb3df3: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x63aecc1d1f46: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:365:21)",
"0x63aecbf3e451: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf3e451: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf3e451: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf3e451: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfd77db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfcc136: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1d65b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbca497f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x63aecbdfad31: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x63aecbdfe477: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x63aecbdf31bb: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x63aecbe6dc77: winter_prover::Prover::generate_proof (prover/src/lib.rs:442:35)",
"0x63aecbea9078: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x63aecbc4261a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63aecbcfae45: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x63aecbf0a541: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf0a541: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf0a541: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf0a541: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfd890b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfce276: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1e45b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbca4b0f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x63aecc012ea2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x63aecbf3ef17: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf3ef17: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf3ef17: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf3ef17: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfd8b2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfce147: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1da9e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbe6c416: winter_prover::Prover::generate_proof (prover/src/lib.rs:205:38)",
"0x63aecc0b1e9d: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x63aecbfe7755: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:144:35)",
"0x63aecbe4c7d0: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x63aecc06c819: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:129:9)",
"0x63aecbfff835: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x63aecbd551d0: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x63aecbfef7a5: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x63aecbe8a8e7: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:706:26)",
"0x63aecbe6e110: winter_prover::Prover::generate_proof (prover/src/lib.rs:472:37)",
"0x63aecc1d0a1e: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:168:21)",
"0x63aecc1cbe38: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:176:34)",
"0x63aecbdb1ca2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63aecbdd0539: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63aecbfa8b42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63aecbfdbffc: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x63aecbefcd4a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x63aecbe4aca7: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x63aecbfeb3d9: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x63aecc1e266d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x63aecc1dd538: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x63aecc1dbdd7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x63aecbe70808: winter_prover::Prover::generate_proof (prover/src/lib.rs:440:13)",
"0x63aecbeaa11b: winter_prover::trace::commitment::build_segment_queries::{{closure}}::{{closure}} (src/trace/commitment.rs:162:42)",
"0x63aecbd28019: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x63aecbd87fee: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x63aecbca542b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x63aecc0923fb: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x63aecbff84a2: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x63aecbff7147: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x63aecbe81df7: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:645:31)",
"0x63aecbea6a53: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x63aecc1d0862: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:164:22)",
"0x63aecbc88bb0: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:221:17)",
"0x63aecbc33922: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63aecc0624dd: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::SpecFold>::spec_fold (iter/adapters/zip.rs:685:25)",
"0x63aecc04eee7: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::fold (iter/adapters/zip.rs:249:9)",
"0x63aecc0399b7: <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/zip.rs:103:9)",
"0x63aecbca47d0: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x63aecbde7810: winter_verifier::perform_verification (verifier/src/lib.rs:302:9)",
"0x63aecbe47db1: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x63aecbc374aa: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63aecc077a05: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x63aecbf086b1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf086b1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf086b1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf086b1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfd671b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfcfe16: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1f23b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbc92409: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x63aecc03541a: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x63aecbeaa199: winter_prover::trace::commitment::build_segment_queries::{{closure}}::{{closure}} (src/trace/commitment.rs:164:27)",
"0x63aecbea8736: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:159:13)",
"0x63aecc01aa51: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x63aecbd84629: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x63aecbdc7152: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63aecbdd0389: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63aecbfa8ff2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63aecc0a5f89: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x63aecc01a782: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x63aecbd6ebd9: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:82:31)",
"0x63aecbc44553: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63aecbfe7bf3: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x63aecbff43df: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:226:50)",
"0x63aecc0298e0: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x63aecc0bd65e: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x63aecbd8f51c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63aecc0012be: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecc0012be: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecc0012be: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x63aecbfbbb77: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x63aecbd58c58: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x63aecbef3239: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:536:13)",
"0x63aecbfff6ed: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x63aecc0360c6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecc0360c6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecc0360c6: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x63aecbe45ca3: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x63aecbe9c81d: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x63aecbe6ef26: winter_prover::Prover::generate_proof (prover/src/lib.rs:548:13)",
"0x63aecbc8c53c: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x63aecbdb17b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63aecbdcfd89: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63aecbfa5f32: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63aecbde848c: winter_verifier::perform_verification (verifier/src/lib.rs:182:9)",
"0x63aecbeb0c1d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x63aecbeb6a48: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x63aecbec0dda: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x63aecbec0bf6: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x63aecc013312: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x63aecbec01a5: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x63aecbfef866: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x63aecbf12777: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63aecbf12777: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63aecbf12777: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63aecbf12777: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63aecbfd72de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63aecbfd3697: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63aecbc1fb8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63aecbec0131: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x63aecbdbec02: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63aecbdcfcc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63aecbfa9d48: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63aecbe70bf6: winter_prover::Prover::generate_proof (prover/src/lib.rs:408:17)"
]
}