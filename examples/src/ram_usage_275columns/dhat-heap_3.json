{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell do-work -n 3 -l 65536",
"pid": 28715,
"tg": 239062315,
"te": 259614418,
"pps": [
{
"tb": 72,
"tbk": 1,
"tl": 50051,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6
]
},
{
"tb": 704000,
"tbk": 64,
"tl": 105849,
"mb": 431200,
"mbk": 33,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
9,
10,
11,
12,
13,
14,
15,
16
]
},
{
"tb": 16,
"tbk": 1,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
19,
20,
21,
22,
23,
24,
25,
26,
27
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 13491,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
19,
20,
21,
22,
23,
24,
28,
29,
30
]
},
{
"tb": 48,
"tbk": 3,
"tl": 18,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
31,
32,
33,
34,
4,
5
]
},
{
"tb": 144,
"tbk": 1,
"tl": 612778,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
35,
36,
37,
38,
39,
40,
41,
42,
43,
4
]
},
{
"tb": 26403,
"tbk": 3,
"tl": 82,
"mb": 8801,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
44,
45,
46,
47,
48,
49,
50,
51,
52,
53,
54
]
},
{
"tb": 125952,
"tbk": 4,
"tl": 1603,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
57,
58,
59,
60,
61
]
},
{
"tb": 1248,
"tbk": 12,
"tl": 320,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
62,
63,
64,
65,
66,
67,
68
]
},
{
"tb": 13200,
"tbk": 3,
"tl": 1043008,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
69,
70,
71,
72,
73,
74,
75
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 44397,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
77,
78,
79,
80,
81
]
},
{
"tb": 24,
"tbk": 1,
"tl": 3366,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
84,
85,
86,
87,
88,
89,
90,
91
]
},
{
"tb": 26400,
"tbk": 6,
"tl": 3802428,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
57,
58,
59,
60,
92
]
},
{
"tb": 240,
"tbk": 3,
"tl": 4652131,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
93,
94,
95,
96,
97,
98,
99,
100,
101
]
},
{
"tb": 192,
"tbk": 1,
"tl": 55592,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
102,
103,
104,
105,
106,
107,
108,
4,
5
]
},
{
"tb": 26403,
"tbk": 3,
"tl": 40409,
"mb": 26403,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
19,
20,
21,
22,
23,
24,
28,
109,
110
]
},
{
"tb": 281600,
"tbk": 64,
"tl": 331,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
111,
112,
113,
114,
115,
116,
117,
118,
15
]
},
{
"tb": 13889,
"tbk": 1,
"tl": 13497,
"mb": 13889,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
19,
20,
21,
22,
23,
24,
28,
119,
120
]
},
{
"tb": 96,
"tbk": 3,
"tl": 39939,
"mb": 96,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
121,
122,
123,
124,
125,
126
]
},
{
"tb": 8388480,
"tbk": 32,
"tl": 25282,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
127,
128,
129,
130,
4
]
},
{
"tb": 144,
"tbk": 3,
"tl": 22105,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
131,
132,
4,
5,
6
]
},
{
"tb": 140896,
"tbk": 35,
"tl": 11393,
"mb": 140800,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
111,
112,
113,
114,
115,
116,
133,
134,
135,
136,
137
]
},
{
"tb": 1269259,
"tbk": 8,
"tl": 13814,
"mb": 845434,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
77,
78,
79,
138,
139
]
},
{
"tb": 96,
"tbk": 1,
"tl": 9901,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
140,
141,
142,
143,
144
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 322981,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
111,
112,
113,
145,
146,
147,
148,
149,
4
]
},
{
"tb": 256,
"tbk": 1,
"tl": 34,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
62,
150,
151,
152,
153,
154,
155,
156,
157,
108,
4
]
},
{
"tb": 72,
"tbk": 1,
"tl": 20113462,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
158,
159,
160,
161,
162,
4,
5,
6
]
},
{
"tb": 288,
"tbk": 3,
"tl": 36,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
35,
163,
164,
165,
166,
167,
168,
169,
170
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 612749,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
111,
112,
113,
114,
115,
116,
133,
134,
135,
136,
171
]
},
{
"tb": 25165824,
"tbk": 12,
"tl": 40689120,
"mb": 25165824,
"mbk": 12,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
172,
173,
174,
175,
176,
177,
178
]
},
{
"tb": 96,
"tbk": 1,
"tl": 13547816,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
179,
180,
181,
182,
4
]
},
{
"tb": 15744,
"tbk": 4,
"tl": 612,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
172,
173,
174,
175,
183,
184,
185
]
},
{
"tb": 72,
"tbk": 1,
"tl": 194,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
158,
186,
187,
188,
189,
190,
191,
192,
193
]
},
{
"tb": 72,
"tbk": 1,
"tl": 20113473,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
194,
195,
196,
197,
198,
4,
5,
6
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 45529,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
199,
200,
201,
202,
203,
204,
4
]
},
{
"tb": 32,
"tbk": 1,
"tl": 5,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
19,
20,
21,
22,
23,
24,
214,
215,
216
]
},
{
"tb": 48,
"tbk": 3,
"tl": 40648,
"mb": 48,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
19,
20,
21,
22,
23,
24,
28,
217,
218
]
},
{
"tb": 2348810240,
"tbk": 1,
"tl": 23808193,
"mb": 2348810240,
"mbk": 1,
"gb": 2348810240,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
111,
112,
113,
114,
115,
116,
219,
220,
221
]
},
{
"tb": 9584640,
"tbk": 4,
"tl": 206769,
"mb": 9584640,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
172,
173,
174,
175,
222,
223,
224
]
},
{
"tb": 96,
"tbk": 1,
"tl": 4014,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
225,
226,
227,
228,
229
]
},
{
"tb": 2306867200,
"tbk": 524288,
"tl": 7597810,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
111,
112,
113,
145,
146,
147,
230,
231,
232
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 130986,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
172,
173,
174,
175,
233,
234,
235
]
},
{
"tb": 24,
"tbk": 2,
"tl": 2,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
19,
20,
21,
22,
23,
24,
214,
215,
236
]
},
{
"tb": 15744,
"tbk": 4,
"tl": 2965,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
237,
238,
239,
240,
241,
242,
108,
4
]
},
{
"tb": 224,
"tbk": 1,
"tl": 10852,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
243,
244,
245,
246,
247
]
},
{
"tb": 648,
"tbk": 1,
"tl": 258519543,
"mb": 648,
"mbk": 1,
"gb": 648,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
7,
248,
249,
250,
251,
252,
253,
254,
255,
256
]
},
{
"tb": 24,
"tbk": 1,
"tl": 3338,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
257,
258,
259,
260,
261,
262,
263,
264
]
},
{
"tb": 96,
"tbk": 3,
"tl": 532,
"mb": 96,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
265,
266,
267,
268,
269,
270
]
},
{
"tb": 26400,
"tbk": 3,
"tl": 29537,
"mb": 26400,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
111,
112,
113,
114,
115,
116,
271,
272,
273
]
},
{
"tb": 288,
"tbk": 1,
"tl": 31891,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
274,
275,
276,
277,
224
]
},
{
"tb": 144,
"tbk": 3,
"tl": 2079381,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
69,
70,
71,
72,
278,
279,
280
]
},
{
"tb": 25165824,
"tbk": 3,
"tl": 191346751,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
172,
173,
174,
175,
281,
282,
283
]
},
{
"tb": 6845104128,
"tbk": 102,
"tl": 3467573445,
"mb": 2281701376,
"mbk": 34,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
237,
238,
239,
240,
284,
285,
286,
287
]
},
{
"tb": 480,
"tbk": 4,
"tl": 208,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
44,
288,
289,
290,
291,
292,
293
]
},
{
"tb": 96,
"tbk": 3,
"tl": 40396,
"mb": 96,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
19,
20,
21,
22,
23,
24,
28,
294,
110
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1321,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
62,
150,
151,
152,
153,
154,
155,
156,
295,
296,
297
]
},
{
"tb": 48,
"tbk": 3,
"tl": 2079366,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
69,
70,
71,
72,
298,
279,
280
]
},
{
"tb": 72,
"tbk": 1,
"tl": 238388370,
"mb": 72,
"mbk": 1,
"gb": 72,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
7,
299,
300,
301,
302,
303,
304,
305,
306,
307
]
},
{
"tb": 4613734400,
"tbk": 1048576,
"tl": 11969415,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
111,
112,
113,
145,
146,
147,
308,
231,
232
]
},
{
"tb": 96,
"tbk": 1,
"tl": 3561886,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
179,
180,
181,
309,
132
]
},
{
"tb": 256,
"tbk": 4,
"tl": 127754,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
172,
173,
174,
175,
310,
311,
312
]
},
{
"tb": 56,
"tbk": 1,
"tl": 2981,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
313,
314,
27,
315,
316
]
},
{
"tb": 48,
"tbk": 3,
"tl": 320,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
31,
32,
317,
318,
319,
320
]
},
{
"tb": 26432,
"tbk": 7,
"tl": 55238386,
"mb": 26432,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
321,
322,
323,
324,
325,
326,
327,
328
]
},
{
"tb": 32,
"tbk": 1,
"tl": 13238,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
329,
330,
331,
332,
333,
334,
335,
27
]
},
{
"tb": 64,
"tbk": 1,
"tl": 4,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
336,
337,
236,
338,
4,
5
]
},
{
"tb": 26400,
"tbk": 3,
"tl": 80,
"mb": 8800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
172,
173,
174,
339,
340,
341,
27
]
},
{
"tb": 288,
"tbk": 3,
"tl": 85,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
342,
317,
318,
319,
320,
4
]
},
{
"tb": 192,
"tbk": 3,
"tl": 29628,
"mb": 192,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
127,
128,
129,
343,
344
]
},
{
"tb": 13856,
"tbk": 32,
"tl": 97648,
"mb": 13856,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
329,
330,
331,
332,
333,
345,
346,
347
]
},
{
"tb": 256,
"tbk": 1,
"tl": 11042,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
111,
112,
113,
145,
146,
147,
348,
349,
350
]
},
{
"tb": 384,
"tbk": 3,
"tl": 683,
"mb": 384,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
351,
352,
353,
354,
355
]
},
{
"tb": 96,
"tbk": 3,
"tl": 331,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
111,
112,
113,
114,
115,
116,
356,
357,
358
]
},
{
"tb": 48,
"tbk": 3,
"tl": 186,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
31,
32,
317,
359,
360,
144
]
},
{
"tb": 256,
"tbk": 1,
"tl": 672,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
361,
362,
363,
364,
365,
366,
367
]
},
{
"tb": 22587,
"tbk": 4,
"tl": 53726,
"mb": 22587,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
19,
20,
21,
22,
23,
24,
28,
368,
369
]
},
{
"tb": 24,
"tbk": 1,
"tl": 3346,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
370,
371,
372,
373,
374,
375,
376,
377
]
},
{
"tb": 384,
"tbk": 1,
"tl": 13553,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
378,
379,
380,
381,
382
]
},
{
"tb": 422400,
"tbk": 1,
"tl": 4811,
"mb": 422400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
172,
173,
174,
339,
383,
384,
347
]
},
{
"tb": 288,
"tbk": 3,
"tl": 50,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
342,
317,
359,
360,
144,
315
]
},
{
"tb": 3704,
"tbk": 18,
"tl": 541,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
385,
386,
387,
388,
389,
390,
391,
365,
366
]
},
{
"tb": 192,
"tbk": 1,
"tl": 13474,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
392,
393,
394,
395,
382
]
},
{
"tb": 216,
"tbk": 9,
"tl": 208,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 512,
"tbk": 1,
"tl": 18,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
172,
173,
174,
175,
183,
405,
406
]
},
{
"tb": 512,
"tbk": 1,
"tl": 31,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
172,
173,
174,
407,
408,
144,
315
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
19,
20,
21,
22,
23,
24,
214,
409,
216
]
},
{
"tb": 422400,
"tbk": 1,
"tl": 48519,
"mb": 422400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
199,
200,
201,
410,
411,
229,
3
]
},
{
"tb": 984,
"tbk": 4,
"tl": 4035,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
62,
150,
151,
152,
153,
154,
155,
156,
412,
413,
296
]
},
{
"tb": 15744,
"tbk": 4,
"tl": 1582,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
57,
58,
59,
60,
414
]
},
{
"tb": 144,
"tbk": 6,
"tl": 307,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
415,
416,
417,
418,
419,
420
]
},
{
"tb": 24,
"tbk": 3,
"tl": 1189172,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
361,
362,
363,
421,
422,
423,
4
]
},
{
"tb": 96,
"tbk": 1,
"tl": 79,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
424,
425,
426,
427,
428,
429,
430,
431,
432
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 538,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
44,
288,
289,
290,
291,
292,
355
]
},
{
"tb": 72,
"tbk": 1,
"tl": 10431838,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
433,
434,
435,
436,
437,
438,
439,
440,
441
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 185816,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
329,
330,
331,
332,
442,
443,
444,
445
]
},
{
"tb": 144,
"tbk": 6,
"tl": 201,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
446,
416,
417,
418,
419,
420
]
},
{
"tb": 144,
"tbk": 1,
"tl": 258554432,
"mb": 144,
"mbk": 1,
"gb": 144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
7,
447,
448,
449,
450,
451,
452,
338,
4
]
},
{
"tb": 865075200,
"tbk": 825,
"tl": 213868672196,
"mb": 865075200,
"mbk": 825,
"gb": 865075200,
"gbk": 825,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
172,
173,
174,
175,
453,
454,
455
]
},
{
"tb": 13856,
"tbk": 32,
"tl": 116720,
"mb": 13856,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
329,
330,
331,
332,
333,
345,
456,
457
]
},
{
"tb": 26400,
"tbk": 3,
"tl": 29884,
"mb": 26400,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
111,
112,
113,
114,
115,
116,
117,
458,
27
]
},
{
"tb": 100776,
"tbk": 221,
"tl": 62066,
"mb": 26448,
"mbk": 58,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
459,
460,
461,
462,
463,
464
]
},
{
"tb": 6291456,
"tbk": 3,
"tl": 1839956,
"mb": 6291456,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
111,
112,
113,
114,
115,
116,
133,
134,
135,
136,
465
]
},
{
"tb": 96,
"tbk": 1,
"tl": 2322,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
179,
180,
181,
466,
406
]
},
{
"tb": 422400,
"tbk": 96,
"tl": 376791,
"mb": 422400,
"mbk": 96,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
111,
112,
113,
145,
146,
147,
467,
468,
469
]
},
{
"tb": 12583008,
"tbk": 9,
"tl": 226850,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
172,
173,
174,
175,
183,
470,
471
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1861,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
179,
180,
181,
472,
204
]
},
{
"tb": 3145728,
"tbk": 3,
"tl": 5341792,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
57,
58,
59,
60,
473
]
},
{
"tb": 1152,
"tbk": 3,
"tl": 4652596,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
474,
475,
476,
477,
478,
479,
480,
481,
482
]
},
{
"tb": 48,
"tbk": 3,
"tl": 1722993,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
69,
70,
71,
72,
483,
34,
4
]
},
{
"tb": 65176,
"tbk": 38,
"tl": 208793,
"mb": 32640,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
77,
78,
79,
80,
484
]
},
{
"tb": 15744,
"tbk": 4,
"tl": 53741,
"mb": 15744,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
19,
20,
21,
22,
23,
24,
28,
485,
369
]
},
{
"tb": 216,
"tbk": 1,
"tl": 20407273,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
486,
487,
488,
489,
490,
491,
492,
493,
494
]
},
{
"tb": 3704,
"tbk": 18,
"tl": 535,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
385,
386,
387,
388,
389,
390,
391,
365,
495
]
},
{
"tb": 960,
"tbk": 6,
"tl": 9305086,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
496,
497,
498,
499,
500
]
},
{
"tb": 6536,
"tbk": 42,
"tl": 886,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
385,
386,
387,
388,
389,
390,
391,
365,
501
]
},
{
"tb": 72,
"tbk": 1,
"tl": 20113457,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
299,
502,
503,
504,
505,
4,
5,
6
]
},
{
"tb": 6291456,
"tbk": 3,
"tl": 1178381,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
506,
507,
508,
509,
510,
511,
512,
513
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 47521,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
111,
112,
113,
114,
115,
116,
117,
514,
4
]
},
{
"tb": 144,
"tbk": 6,
"tl": 9305111,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
515,
516,
517,
518,
519,
520,
521,
522,
523,
500
]
},
{
"tb": 384,
"tbk": 6,
"tl": 9304347,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
524,
525,
526,
527,
528
]
},
{
"tb": 2400,
"tbk": 12,
"tl": 224,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
62,
529,
530,
531,
532,
533,
534
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2965,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
329,
535,
536,
537,
538,
539,
540,
229
]
},
{
"tb": 6920601600,
"tbk": 1048576,
"tl": 7106627,
"mb": 8800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
111,
112,
113,
114,
115,
116,
117,
541,
231
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4161,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
172,
173,
174,
542,
543,
144,
315
]
},
{
"tb": 120,
"tbk": 1,
"tl": 215155531,
"mb": 120,
"mbk": 1,
"gb": 120,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
7,
544,
545,
546,
547,
548,
549,
550,
551,
552
]
},
{
"tb": 952,
"tbk": 4,
"tl": 1245,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
361,
362,
363,
364,
365,
501,
553
]
},
{
"tb": 12583008,
"tbk": 9,
"tl": 226255,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
172,
173,
174,
175,
554,
471,
555
]
},
{
"tb": 24,
"tbk": 1,
"tl": 4190,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
556,
557,
558,
559,
560,
561,
562,
563,
564
]
},
{
"tb": 160,
"tbk": 1,
"tl": 9995,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
565,
566,
567,
568,
27
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2617,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
44,
288,
289,
290,
291,
569,
411
]
},
{
"tb": 26400,
"tbk": 6,
"tl": 3802466,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
57,
58,
59,
60,
570
]
},
{
"tb": 3456,
"tbk": 12,
"tl": 4685,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
62,
571,
572,
573,
574,
575,
576
]
},
{
"tb": 96,
"tbk": 3,
"tl": 2,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
265,
577,
315,
316
]
},
{
"tb": 72,
"tbk": 1,
"tl": 13537,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
102,
578,
579,
580,
581,
582,
382
]
},
{
"tb": 8,
"tbk": 1,
"tl": 612133,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
385,
386,
387,
388,
389,
390,
583,
43,
4
]
},
{
"tb": 128,
"tbk": 1,
"tl": 7970,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
584,
585,
586,
587,
347
]
},
{
"tb": 15744,
"tbk": 123,
"tl": 110,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
588,
589,
590,
591,
592,
593,
594,
595
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1831,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
596,
597,
598,
599,
600,
601,
602,
603
]
},
{
"tb": 2544,
"tbk": 4,
"tl": 192966362,
"mb": 840,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
604,
605,
606,
607,
608,
609,
610,
611,
612
]
},
{
"tb": 6291456,
"tbk": 3,
"tl": 2572487,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
172,
173,
174,
175,
233,
613,
614
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2024,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
205,
206,
207,
208,
209,
210,
211,
212,
615
]
},
{
"tb": 896,
"tbk": 6,
"tl": 13361,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
127,
128,
129,
616,
617
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
336,
337,
216,
315,
316
]
},
{
"tb": 13200,
"tbk": 3,
"tl": 16802,
"mb": 13200,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
69,
70,
71,
72,
618,
619,
620
]
},
{
"tb": 6536,
"tbk": 42,
"tl": 137,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
385,
386,
387,
388,
389,
390,
621,
355,
242
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 3194,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
329,
622,
623,
624,
625,
626,
627,
628,
629
]
},
{
"tb": 288,
"tbk": 1,
"tl": 258554545,
"mb": 288,
"mbk": 1,
"gb": 288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
7,
630,
631,
632,
633,
634,
635,
636,
637,
638
]
},
{
"tb": 1968,
"tbk": 4,
"tl": 2867,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
639,
640,
641,
642,
643,
644,
645,
646
]
},
{
"tb": 19800,
"tbk": 3,
"tl": 58572653,
"mb": 19800,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
158,
647,
648,
649,
134,
135,
136,
650,
651,
652
]
},
{
"tb": 48,
"tbk": 1,
"tl": 176,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
653,
654,
655,
656,
657,
658,
659,
660,
4,
5
]
},
{
"tb": 6528,
"tbk": 34,
"tl": 13183,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
62,
661,
662,
663,
664,
665,
666
]
},
{
"tb": 72,
"tbk": 1,
"tl": 613518,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
158,
647,
648,
649,
134,
135,
136,
465,
43,
4
]
},
{
"tb": 3145728,
"tbk": 3,
"tl": 216827,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
172,
173,
174,
175,
310,
311,
667
]
},
{
"tb": 24,
"tbk": 1,
"tl": 612756,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
158,
647,
648,
649,
134,
135,
136,
171,
43,
4
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 11411446,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
329,
330,
331,
332,
442,
668,
669,
670
]
},
{
"tb": 3264,
"tbk": 6,
"tl": 76,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
671,
672,
673,
674,
675,
676
]
},
{
"tb": 160,
"tbk": 1,
"tl": 13227,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
329,
330,
331,
332,
333,
677,
335,
27
]
},
{
"tb": 422400,
"tbk": 3,
"tl": 144015,
"mb": 422400,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
199,
200,
201,
678,
411,
229,
3
]
},
{
"tb": 48,
"tbk": 3,
"tl": 7,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
31,
679,
33,
34,
4,
5
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2232,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
329,
535,
536,
537,
538,
539,
293,
204
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 7146,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
172,
173,
174,
339,
383,
680,
457
]
},
{
"tb": 72,
"tbk": 3,
"tl": 4652933,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
681,
682,
683,
684,
320,
4
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 3720,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
329,
685,
686,
687,
688,
689,
690,
691,
692
]
},
{
"tb": 192,
"tbk": 1,
"tl": 9883,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
693,
694,
695,
696,
144
]
},
{
"tb": 144,
"tbk": 1,
"tl": 5625,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
697,
698,
699,
700,
701,
702,
703,
704,
705
]
},
{
"tb": 268435456,
"tbk": 4,
"tl": 20335317,
"mb": 67108864,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
57,
58,
59,
60,
706
]
},
{
"tb": 1152,
"tbk": 6,
"tl": 202,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
707,
708,
709,
710,
711,
712,
713,
714,
715
]
},
{
"tb": 6072,
"tbk": 11,
"tl": 4321,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
716,
717,
718,
719,
720,
721
]
},
{
"tb": 48,
"tbk": 3,
"tl": 312,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
31,
679,
317,
318,
319,
320
]
},
{
"tb": 512,
"tbk": 1,
"tl": 18,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
172,
173,
174,
722,
408,
144,
315
]
},
{
"tb": 32,
"tbk": 1,
"tl": 13547797,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
44,
288,
289,
290,
291,
723,
4
]
},
{
"tb": 48,
"tbk": 3,
"tl": 4652893,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
111,
112,
113,
145,
146,
147,
724,
683,
684
]
},
{
"tb": 2736,
"tbk": 6,
"tl": 2565,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
459,
460,
461,
725,
726,
727
]
},
{
"tb": 96,
"tbk": 3,
"tl": 775558556,
"mb": 96,
"mbk": 3,
"gb": 96,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
1,
121,
728,
729,
730,
731,
732
]
},
{
"tb": 512,
"tbk": 1,
"tl": 7564,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
733,
734,
735,
736,
737,
738,
739,
740
]
},
{
"tb": 3840,
"tbk": 16,
"tl": 2391,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
127,
128,
129,
741,
742
]
},
{
"tb": 48,
"tbk": 3,
"tl": 775663563,
"mb": 48,
"mbk": 3,
"gb": 48,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
19,
20,
21,
22,
23,
24,
25,
743,
744
]
},
{
"tb": 7046430720,
"tbk": 3,
"tl": 326241264,
"mb": 7046430720,
"mbk": 3,
"gb": 7046430720,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
7,
237,
238,
239,
240,
284,
745,
746,
747
]
},
{
"tb": 48960,
"tbk": 24,
"tl": 16866816,
"mb": 24576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
127,
128,
129,
748,
749
]
},
{
"tb": 24,
"tbk": 1,
"tl": 3356,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
750,
751,
752,
753,
754,
755,
756,
757
]
},
{
"tb": 80,
"tbk": 1,
"tl": 9172,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
172,
173,
174,
758,
759,
144,
315
]
},
{
"tb": 192,
"tbk": 3,
"tl": 478,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
127,
128,
129,
760,
761
]
},
{
"tb": 2304,
"tbk": 3,
"tl": 12002,
"mb": 2304,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
158,
762,
763,
764,
765,
766,
767,
768,
769
]
},
{
"tb": 96,
"tbk": 1,
"tl": 48008,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
770,
771,
772,
773,
411
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 258517375,
"mb": 2097152,
"mbk": 1,
"gb": 2097152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
172,
173,
174,
175,
310,
774,
775
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 203225,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
329,
330,
331,
332,
442,
776,
777,
224
]
},
{
"tb": 3704,
"tbk": 18,
"tl": 81,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
385,
386,
387,
388,
389,
390,
621,
540,
229
]
},
{
"tb": 24,
"tbk": 1,
"tl": 3331,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
778,
779,
780,
781,
782,
783,
784,
785
]
},
{
"tb": 19800,
"tbk": 3,
"tl": 691797712,
"mb": 19800,
"mbk": 3,
"gb": 19800,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
7,
158,
786,
787,
788,
789,
790,
791,
792,
793
]
},
{
"tb": 72,
"tbk": 3,
"tl": 289,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
681,
682,
683,
794,
360,
144
]
},
{
"tb": 48960,
"tbk": 24,
"tl": 27775,
"mb": 24576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
127,
128,
129,
748,
795
]
},
{
"tb": 720,
"tbk": 6,
"tl": 10437615,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
796,
423,
4,
5,
6
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3128,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
797,
798,
799,
800,
801,
346,
347,
314
]
},
{
"tb": 96,
"tbk": 1,
"tl": 9324,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
179,
180,
181,
802,
795
]
},
{
"tb": 1572864,
"tbk": 3,
"tl": 22948529,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
172,
173,
174,
175,
310,
311,
803
]
},
{
"tb": 512,
"tbk": 1,
"tl": 3674199,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
804,
805,
806,
807,
4
]
},
{
"tb": 96,
"tbk": 3,
"tl": 4652914,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
808,
809,
810,
811,
812,
813,
814,
815,
683,
684
]
},
{
"tb": 32,
"tbk": 1,
"tl": 5742,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
111,
112,
113,
145,
146,
147,
816,
27,
315
]
},
{
"tb": 13248,
"tbk": 24,
"tl": 6283,
"mb": 3864,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
716,
717,
718,
817,
818,
819
]
},
{
"tb": 96,
"tbk": 1,
"tl": 82,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
179,
180,
181,
820,
27
]
},
{
"tb": 576,
"tbk": 4,
"tl": 1564,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
69,
70,
71,
72,
821,
185,
296
]
},
{
"tb": 2097152,
"tbk": 2,
"tl": 24714931,
"mb": 2097152,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
111,
112,
113,
145,
146,
147,
822,
823,
824
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 322351,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
172,
173,
174,
175,
310,
311,
825
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3721,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
797,
798,
799,
800,
801,
456,
457,
826
]
},
{
"tb": 240,
"tbk": 1,
"tl": 259600402,
"mb": 240,
"mbk": 1,
"gb": 240,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
7,
827,
828,
829,
830,
831,
832,
833,
834,
835
]
},
{
"tb": 48,
"tbk": 3,
"tl": 240,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
57,
58,
59,
60,
836
]
},
{
"tb": 288,
"tbk": 3,
"tl": 43,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
342,
33,
34,
4,
5,
6
]
},
{
"tb": 106368,
"tbk": 411,
"tl": 251147,
"mb": 16384,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
329,
837,
838,
839,
840,
841,
842,
843,
844
]
},
{
"tb": 104421,
"tbk": 36,
"tl": 18519414,
"mb": 52224,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
77,
78,
79,
138,
845
]
},
{
"tb": 512,
"tbk": 1,
"tl": 10,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
846,
847,
848,
849,
850,
851,
852,
853
]
},
{
"tb": 192,
"tbk": 3,
"tl": 462,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
127,
128,
129,
343,
761
]
},
{
"tb": 96,
"tbk": 3,
"tl": 19130,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
854,
132,
4,
5,
6
]
},
{
"tb": 22464,
"tbk": 118,
"tl": 998101,
"mb": 22464,
"mbk": 118,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
329,
330,
331,
332,
333,
345,
855,
856
]
},
{
"tb": 288,
"tbk": 6,
"tl": 20658154,
"mb": 288,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
158,
857,
858,
859,
860,
861,
862,
863,
864
]
},
{
"tb": 3456,
"tbk": 12,
"tl": 409,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
865,
866,
867,
868,
869
]
},
{
"tb": 144,
"tbk": 1,
"tl": 19620131,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
870,
871,
872,
873,
874,
875,
876,
877,
878
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 11308697,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
329,
330,
331,
332,
442,
443,
444,
879
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 4211,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
880,
881,
882,
883,
884
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2970,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
797,
798,
799,
800,
885,
540,
229,
3
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 43862248,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
7,
329,
330,
331,
332,
442,
886,
232,
887
]
},
{
"tb": 480,
"tbk": 4,
"tl": 213,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
44,
288,
289,
290,
291,
292,
540
]
},
{
"tb": 6291456,
"tbk": 3,
"tl": 40643024,
"mb": 6291456,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
57,
58,
59,
60,
888
]
},
{
"tb": 2304,
"tbk": 12,
"tl": 4784,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
62,
661,
662,
663,
889,
890,
891
]
},
{
"tb": 72,
"tbk": 1,
"tl": 20,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
158,
647,
648,
649,
134,
135,
136,
137,
892,
338
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 732578,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
172,
173,
174,
175,
893,
894,
895
]
},
{
"tb": 256,
"tbk": 1,
"tl": 11147,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
172,
173,
174,
339,
896,
897,
27
]
},
{
"tb": 84000,
"tbk": 1619,
"tl": 18818771,
"mb": 17024,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
77,
898,
899,
900,
901,
902,
903
]
},
{
"tb": 2856,
"tbk": 4,
"tl": 34407,
"mb": 2856,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
797,
798,
799,
800,
801,
855,
856,
247
]
},
{
"tb": 24,
"tbk": 1,
"tl": 215155469,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
7,
904,
905,
906,
907,
908,
909,
910,
911,
912
]
},
{
"tb": 256,
"tbk": 1,
"tl": 12,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
111,
112,
113,
114,
115,
116,
913,
108,
4
]
},
{
"tb": 160,
"tbk": 1,
"tl": 9849,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
914,
915,
916,
917,
918,
919,
920,
921,
922
]
},
{
"tb": 6291456,
"tbk": 393216,
"tl": 224809,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
111,
112,
113,
114,
115,
116,
923,
924,
925
]
},
{
"tb": 64,
"tbk": 1,
"tl": 4,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
926,
927,
928,
929,
930,
931,
932,
933,
934
]
},
{
"tb": 72,
"tbk": 3,
"tl": 1838293,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
515,
516,
517,
518,
519,
520,
521,
522,
935,
39,
40,
41
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 1712098,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
172,
173,
174,
175,
281,
282,
936
]
},
{
"tb": 422400,
"tbk": 3,
"tl": 23878,
"mb": 422400,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
172,
173,
174,
339,
383,
937,
347
]
},
{
"tb": 865075200,
"tbk": 825,
"tl": 16071514018,
"mb": 865075200,
"mbk": 825,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
111,
112,
113,
114,
115,
116,
133,
134,
135,
136,
650
]
},
{
"tb": 96,
"tbk": 3,
"tl": 147,
"mb": 96,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
172,
173,
174,
339,
938,
341,
27
]
},
{
"tb": 480,
"tbk": 4,
"tl": 9156,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
44,
288,
289,
290,
291,
939,
940
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 6874,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
880,
881,
882,
883,
941
]
},
{
"tb": 144,
"tbk": 3,
"tl": 26212796,
"mb": 144,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
942,
943,
944,
945,
946,
947
]
},
{
"tb": 3936,
"tbk": 4,
"tl": 34975,
"mb": 3936,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
329,
535,
536,
537,
538,
948,
856,
247
]
},
{
"tb": 96,
"tbk": 3,
"tl": 70,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
44,
45,
46,
47,
48,
49,
50,
51,
949,
53,
54
]
},
{
"tb": 13200,
"tbk": 3,
"tl": 16788,
"mb": 13200,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
69,
70,
71,
72,
950,
619,
620
]
},
{
"tb": 98112,
"tbk": 27,
"tl": 97,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
127,
128,
129,
951,
952
]
},
{
"tb": 96,
"tbk": 1,
"tl": 88,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
424,
953,
954,
955,
956,
957,
958,
959,
960
]
},
{
"tb": 24,
"tbk": 1,
"tl": 13494,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
961,
962,
120,
382
]
},
{
"tb": 13889,
"tbk": 1,
"tl": 13486,
"mb": 13889,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
19,
20,
21,
22,
23,
24,
28,
963,
30
]
},
{
"tb": 11534336000,
"tbk": 1048576,
"tl": 12908709,
"mb": 22000,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
9,
10,
11,
12,
13,
964,
231,
232
]
},
{
"tb": 64,
"tbk": 1,
"tl": 9178,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
127,
128,
129,
965,
795
]
},
{
"tb": 2880,
"tbk": 24,
"tl": 2382,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
44,
288,
289,
290,
291,
966,
365
]
},
{
"tb": 512,
"tbk": 1,
"tl": 16,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
172,
173,
174,
175,
183,
967,
408
]
},
{
"tb": 48,
"tbk": 1,
"tl": 258519369,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
7,
968,
969,
970,
971,
972,
973,
974,
975,
976
]
},
{
"tb": 865075200,
"tbk": 825,
"tl": 187098798515,
"mb": 865075200,
"mbk": 825,
"gb": 865075200,
"gbk": 825,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
111,
112,
113,
114,
115,
116,
977,
978,
979
]
},
{
"tb": 480,
"tbk": 4,
"tl": 11009,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
44,
288,
289,
290,
291,
939,
980
]
},
{
"tb": 3936,
"tbk": 4,
"tl": 3851,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
329,
535,
536,
537,
538,
539,
355,
242
]
},
{
"tb": 5904,
"tbk": 6,
"tl": 159,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
981,
982,
983,
984,
985,
986
]
},
{
"tb": 192,
"tbk": 1,
"tl": 13454,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
102,
103,
104,
105,
106,
987,
988,
989,
382
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 280227,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
111,
112,
113,
114,
115,
116,
117,
990,
132
]
},
{
"tb": 19800,
"tbk": 3,
"tl": 777722837,
"mb": 19800,
"mbk": 3,
"gb": 19800,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
7,
158,
991,
992,
993,
994,
995,
996,
997,
998
]
},
{
"tb": 648,
"tbk": 1,
"tl": 13329,
"mb": 648,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
248,
999,
1000,
1001,
1002,
1003,
1004,
1005,
1006
]
},
{
"tb": 96,
"tbk": 6,
"tl": 4653276,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
1007,
1008,
1009,
1010,
1011,
1012,
1013,
1014
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3736,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
158,
647,
648,
649,
134,
135,
136,
137,
1015,
229
]
},
{
"tb": 72,
"tbk": 1,
"tl": 20113467,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
1016,
1017,
1018,
1019,
1020,
4,
5,
6
]
},
{
"tb": 48,
"tbk": 1,
"tl": 6128536,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
653,
1021,
1022,
1023,
1024,
1025,
1026,
1027,
1028
]
},
{
"tb": 256,
"tbk": 1,
"tl": 13416,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
19,
20,
21,
22,
23,
24,
28,
1029,
989
]
},
{
"tb": 48,
"tbk": 3,
"tl": 178,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
31,
679,
317,
359,
360,
144
]
},
{
"tb": 1536,
"tbk": 3,
"tl": 6949,
"mb": 1536,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
172,
173,
174,
1030,
406,
144,
315
]
},
{
"tb": 144,
"tbk": 1,
"tl": 5563,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038,
1039
]
},
{
"tb": 96,
"tbk": 3,
"tl": 10437594,
"mb": 96,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
44,
288,
289,
290,
291,
1040,
1041
]
},
{
"tb": 3145728,
"tbk": 3,
"tl": 1189111,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
172,
173,
174,
175,
310,
311,
1042
]
},
{
"tb": 48,
"tbk": 1,
"tl": 12359255,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
158,
1043,
1044,
1045,
1046,
1047,
1048,
1049,
1050
]
},
{
"tb": 32,
"tbk": 1,
"tl": 13547803,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
44,
288,
289,
290,
291,
1051,
4
]
},
{
"tb": 72,
"tbk": 3,
"tl": 10437668,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
515,
516,
517,
518,
519,
520,
521,
522,
1052,
423
]
},
{
"tb": 48,
"tbk": 3,
"tl": 261,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
111,
112,
113,
145,
146,
147,
724,
683,
794
]
},
{
"tb": 1728,
"tbk": 6,
"tl": 133,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
1053,
1054,
1055,
1056,
1057,
1058,
1059,
1060,
1061
]
},
{
"tb": 15744,
"tbk": 4,
"tl": 530,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
57,
58,
59,
60,
1062
]
},
{
"tb": 24,
"tbk": 1,
"tl": 238104121,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
7,
904,
1063,
1064,
1065,
1066,
1067,
1068,
1069,
1070
]
},
{
"tb": 15744,
"tbk": 123,
"tl": 122,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
172,
173,
174,
339,
1071,
856,
247
]
},
{
"tb": 96,
"tbk": 1,
"tl": 5622337,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
179,
180,
181,
802,
749
]
},
{
"tb": 2928,
"tbk": 12,
"tl": 1280,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
62,
150,
1072,
1073,
1074,
1075,
1076,
1077,
1078,
1079
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2237,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
797,
798,
799,
800,
885,
293,
204,
4
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 20507045,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
7,
329,
330,
331,
332,
442,
443,
444,
1080
]
},
{
"tb": 256,
"tbk": 1,
"tl": 655,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
361,
362,
363,
364,
365,
495,
1081
]
},
{
"tb": 64,
"tbk": 1,
"tl": 5622192,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
127,
128,
129,
965,
749
]
},
{
"tb": 3328,
"tbk": 32,
"tl": 472,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
62,
63,
64,
65,
1082,
1083,
1084
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 258519341,
"mb": 524288,
"mbk": 1,
"gb": 524288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
172,
173,
174,
175,
310,
1085,
1086
]
},
{
"tb": 15744,
"tbk": 4,
"tl": 37419,
"mb": 15744,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
172,
173,
174,
1087,
856,
247,
27
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1315,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
111,
112,
113,
145,
146,
147,
1088,
296,
297
]
},
{
"tb": 3704,
"tbk": 18,
"tl": 76,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
385,
386,
387,
388,
389,
390,
621,
293,
204
]
},
{
"tb": 422400,
"tbk": 1,
"tl": 13532,
"mb": 422400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
19,
20,
21,
22,
23,
24,
28,
1089,
120
]
},
{
"tb": 96,
"tbk": 1,
"tl": 10848,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
179,
180,
181,
1090,
247
]
},
{
"tb": 2856,
"tbk": 4,
"tl": 3867,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
797,
798,
799,
800,
885,
355,
242,
108
]
},
{
"tb": 48,
"tbk": 3,
"tl": 10437658,
"mb": 48,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
111,
112,
113,
114,
115,
116,
1091,
1052,
423
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 58,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
172,
173,
174,
175,
310,
311,
1092
]
},
{
"tb": 224,
"tbk": 1,
"tl": 13539,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
19,
20,
21,
22,
23,
24,
28,
1093,
1094
]
},
{
"tb": 512,
"tbk": 1,
"tl": 56,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
1095,
1096,
1097,
1098,
1099,
1100,
1101,
1102
]
},
{
"tb": 144,
"tbk": 6,
"tl": 20875245,
"mb": 144,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
515,
516,
517,
518,
519,
520,
521,
522,
1103,
1104
]
},
{
"tb": 96,
"tbk": 3,
"tl": 275,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
808,
809,
810,
811,
812,
813,
814,
815,
683,
794
]
},
{
"tb": 96,
"tbk": 1,
"tl": 2316,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
179,
180,
181,
1105,
406
]
},
{
"tb": 24,
"tbk": 1,
"tl": 25,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
82,
83,
1106,
1107,
1108,
1109,
1110,
1111,
1112,
1113
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4149,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
1114,
1115,
1116,
1117,
1118,
1119,
1120,
1121
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
19,
20,
21,
22,
23,
24,
214,
409,
236
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 148600,
"mb": 1179648,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
172,
173,
174,
175,
1122,
1123,
224
]
},
{
"tb": 1536,
"tbk": 3,
"tl": 6932,
"mb": 1536,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
172,
173,
174,
1124,
406,
144,
315
]
},
{
"tb": 512,
"tbk": 1,
"tl": 35,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
111,
112,
113,
114,
115,
116,
1125,
406,
144
]
},
{
"tb": 48,
"tbk": 3,
"tl": 342,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
111,
112,
113,
114,
115,
116,
1126,
357,
358
]
},
{
"tb": 15744,
"tbk": 4,
"tl": 2357,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
237,
1127,
1128,
1129,
1130,
1131,
1132,
1133,
1134
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 59515,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
111,
112,
113,
145,
146,
147,
1135,
204,
4
]
},
{
"tb": 16,
"tbk": 1,
"tl": 612767,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
8,
111,
112,
113,
114,
115,
116,
1091,
935,
39,
40,
41
]
},
{
"tb": 3145728,
"tbk": 3,
"tl": 10686459,
"mb": 3145728,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
57,
58,
59,
60,
1136
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 46630,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
77,
78,
79,
80,
1137
]
},
{
"tb": 33554432,
"tbk": 524288,
"tl": 18591848,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
7,
1138,
1139,
1140,
1141,
1142,
1143,
1144,
1145,
1146
]
},
{
"tb": 192,
"tbk": 3,
"tl": 29640,
"mb": 192,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
76,
127,
128,
129,
760,
344
]
}
],
"ftbl": [
"[root]",
"0x5ec3cb913937: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x5ec3cbaf9c1d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x5ec3cbab8ace: winter_prover::Prover::generate_proof (prover/src/lib.rs:593:29)",
"0x5ec3cbad6cd4: winter_prover::Prover::prove (prover/src/lib.rs:171:37)",
"0x5ec3cb8982b2: <examples::do_work::DoWorkExample<H> as examples::Example>::prove (src/do_work/mod.rs:108:9)",
"0x5ec3cb6f0d4d: winterfell::main (examples/src/main.rs:49:17)",
"0x5ec3cb9144a9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5ec3cb9dd0ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cbc04ebb: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbc04ebb: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbc04ebb: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbc04ebb: <[V] as alloc::slice::Concat<T>>::concat (alloc/src/slice.rs:712:26)",
"0x5ec3cbc04cab: alloc::slice::<impl [T]>::concat (alloc/src/slice.rs:561:9)",
"0x5ec3cbaf3199: winter_prover::trace::commitment::build_segment_queries::{{closure}}::{{closure}} (src/trace/commitment.rs:164:27)",
"0x5ec3cb971019: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5ec3cbaf1736: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:159:13)",
"0x5ec3cbe7bb79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5ec3cbe7a5ca: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cbe7bbbc: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbe7bbbc: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbe7bbbc: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5ec3cbe7c7fc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5ec3cbe7c7fc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5ec3cbe7c7fc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5ec3cbe75d9e: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x5ec3cb8ed7d0: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x5ec3cba39907: winter_verifier::verify (verifier/src/lib.rs:108:19)",
"0x5ec3cbe79e2c: <winter_utils::serde::byte_reader::SliceReader as winter_utils::serde::byte_reader::ByteReader>::read_vec (src/serde/byte_reader.rs:151:22)",
"0x5ec3cbe19862: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:164:22)",
"0x5ec3cbe14e38: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:176:34)",
"0x5ec3cbc52e95: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x5ec3cba9a0bd: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:61:13)",
"0x5ec3cb91b0ab: winter_prover::trace::Trace::validate (src/trace/mod.rs:122:26)",
"0x5ec3cbab9f21: winter_prover::Prover::generate_proof (prover/src/lib.rs:370:17)",
"0x5ec3cb9e0a9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cbc7f0c6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbc7f0c6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbc7f0c6: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5ec3cbc06039: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5ec3cbc06039: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5ec3cbc06039: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5ec3cba8eca3: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x5ec3cbab6583: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:33)",
"0x5ec3cbe0f799: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5ec3cbe0ae7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cbd7b57c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbd7b57c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbd7b57c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5ec3cbd4bcc9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5ec3cbd4bcc9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5ec3cbd4bcc9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5ec3cbb3ae2a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x5ec3cbc4a1f6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5ec3cb8eec48: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5ec3cbe796cc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x5ec3cbe77d9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x5ec3cbe78cf8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x5ec3cbe78cf8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x5ec3cbe75964: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5ec3cbe75c13: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x5ec3cbcdb08f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x5ec3cbe29739: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5ec3cbe35d2b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5ec3cbe35751: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5ec3cbe31adb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5ec3cbe2b6cd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5ec3cbe2684b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5ec3cbe24f13: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5ec3cb8ba9f5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cb8ba9f5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cb8ba9f5: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5ec3cbc04bf4: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5ec3cb91887b: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:235:25)",
"0x5ec3cbce3a62: examples::do_work::prover::build_do_work_trace (src/do_work/prover.rs:65:5)",
"0x5ec3cbad7668: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces::{{closure}} (src/do_work/prover.rs:32:27)",
"0x5ec3cbe7a319: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5ec3cbe7aab0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5ec3cbe7ace9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5ec3cbe7bf12: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5ec3cba1c564: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x5ec3cbc729fc: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x5ec3cbdfd899: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5ec3cbd6a0aa: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cbb87451: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb87451: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb87451: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb87451: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc207db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc15136: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb86665b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cb8ed97f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x5ec3cbce401d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x5ec3cb9e127c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cbb52557: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb52557: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb52557: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb52557: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc0079d: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5ec3cbc1c21c: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb8684ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cba9882a: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x5ec3cbe1b709: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5ec3cbe1c4bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cbe1f776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbe1f776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbe1f776: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbcfabcd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x5ec3cbab8a4f: winter_prover::Prover::generate_proof (prover/src/lib.rs:590:25)",
"0x5ec3cbe1e5bd: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:151:28)",
"0x5ec3cbe15178: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:29)",
"0x5ec3cb8ba41c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cb8ba41c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cb8ba41c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5ec3cbc05939: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5ec3cbc05939: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5ec3cbc05939: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5ec3cbb93097: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5ec3cbaf311b: winter_prover::trace::commitment::build_segment_queries::{{closure}}::{{closure}} (src/trace/commitment.rs:162:42)",
"0x5ec3cbe19ec9: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:352:21)",
"0x5ec3cbe14e53: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:174:32)",
"0x5ec3cba99e42: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::new (src/do_work/air.rs:35:23)",
"0x5ec3cba3a8d1: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:101:85)",
"0x5ec3cb88b432: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5ec3cb9a7c0a: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:107:27)",
"0x5ec3cb8c4bff: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5ec3cb9a59a4: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:113:9)",
"0x5ec3cba0c122: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5ec3cba196b9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5ec3cbbedd91: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5ec3cbab9665: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:17)",
"0x5ec3cbc5c580: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x5ec3cbab7868: winter_prover::Prover::generate_proof (prover/src/lib.rs:514:9)",
"0x5ec3cbb94bc3: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5ec3cbc061f9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5ec3cbc061f9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5ec3cbc061f9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5ec3cbb93067: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5ec3cbe7ad49: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x5ec3cbe20d7a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x5ec3cba11022: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5ec3cba199e9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5ec3cbbf0842: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5ec3cba31673: winter_verifier::perform_verification (verifier/src/lib.rs:177:9)",
"0x5ec3cba399d2: winter_verifier::verify (verifier/src/lib.rs:110:21)",
"0x5ec3cb8ba93c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5ec3cb8ba93c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5ec3cb8ba93c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5ec3cbae581d: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x5ec3cbab7f26: winter_prover::Prover::generate_proof (prover/src/lib.rs:548:13)",
"0x5ec3cbe278ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cbe23b6c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbe23b6c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbe23b6c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5ec3cbe2362c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5ec3cbe2362c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5ec3cbe2362c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5ec3cbcfac77: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x5ec3cb9d99fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cbb95cd6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb95cd6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb95cd6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbab600d: winter_prover::Prover::generate_proof (prover/src/lib.rs:300:37)",
"0x5ec3cbb7a111: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb7a111: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb7a111: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb7a111: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc1f9fb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc18cc6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb86786b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cb9b7a5c: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:82:9)",
"0x5ec3cba8ed29: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x5ec3cbb95736: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb95736: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb95736: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cb921e7b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5ec3cba90db1: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x5ec3cb8804aa: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5ec3cbcc0a05: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5ec3cba05972: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5ec3cba19a19: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5ec3cbbef402: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5ec3cbab97ad: winter_prover::Prover::generate_proof (prover/src/lib.rs:438:13)",
"0x5ec3cb915f42: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x5ec3cbcdb3fb: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x5ec3cbb0a010: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x5ec3cbb50141: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb50141: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb50141: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb50141: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc22f9b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc17346: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb86588b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cbab54e3: winter_prover::Prover::generate_proof (prover/src/lib.rs:209:39)",
"0x5ec3cb9d683c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cbb95786: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb95786: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb95786: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbab5f85: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:39)",
"0x5ec3cbb95556: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb95556: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb95556: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbc728e0: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x5ec3cbd0665e: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x5ec3cbab8bc5: winter_prover::Prover::generate_proof (prover/src/lib.rs:598:34)",
"0x5ec3cb9d9f3a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cbb4b15e: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb4b15e: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb4b15e: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb4b15e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5ec3cbc2121e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc16957: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cbcad76e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cbc30755: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:144:35)",
"0x5ec3cbaebdf4: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x5ec3cbaebad6: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x5ec3cba395a9: winter_verifier::verify (verifier/src/lib.rs:95:32)",
"0x5ec3cbe1f118: <winter_air::proof::context::Context as winter_utils::serde::Deserializable>::read_from (src/proof/context.rs:184:35)",
"0x5ec3cbe14bf7: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:27)",
"0x5ec3cbc414a2: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x5ec3cbc40147: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5ec3cbacadf7: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:645:31)",
"0x5ec3cb922303: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x5ec3cbceec25: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x5ec3cbcfc1b2: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x5ec3cba07712: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5ec3cba19149: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5ec3cbbf0122: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5ec3cbaefc91: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x5ec3cbaf9cb4: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x5ec3cbc3d26a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x5ec3cbc3a903: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x5ec3cbacb3dd: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:659:26)",
"0x5ec3cb91747b: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x5ec3cbc7942f: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x5ec3cbc79504: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x5ec3cb9a1a03: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x5ec3cb9e1a5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cbb95b46: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb95b46: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb95b46: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbce835d: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x5ec3cbcfb152: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x5ec3cba06842: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5ec3cba19419: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5ec3cbbeeba2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5ec3cb9cd57e: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x5ec3cb8ee60c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x5ec3cb9d701c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cbb657f7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb657f7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb657f7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb657f7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc21b7e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc1bf39: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb8660ee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cbab5603: winter_prover::Prover::generate_proof (prover/src/lib.rs:217:20)",
"0x5ec3cbb55911: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb55911: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb55911: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb55911: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc20f1b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc1c516: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb86620b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cb8edbd7: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x5ec3cba99d16: <examples::do_work::air::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (src/do_work/air.rs:13:9)",
"0x5ec3cb8cbb09: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:211:31)",
"0x5ec3cb882d3a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5ec3cb9730a8: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5ec3cb84c3ba: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5ec3cb86c63a: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5ec3cb903e22: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x5ec3cb9995c4: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x5ec3cbcb9d04: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x5ec3cba10152: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5ec3cba19389: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5ec3cbbf1ff2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5ec3cbceef89: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x5ec3cbcb1f6c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:148:31)",
"0x5ec3cbcb59e0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:122:17)",
"0x5ec3cb995436: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5ec3cbc3f1ab: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x5ec3cbc3e696: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x5ec3cb8d28e9: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:641:17)",
"0x5ec3cb921d3b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5ec3cbce0e2b: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x5ec3cbc3776a: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x5ec3cb87ec7a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5ec3cbe0ab39: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5ec3cbd6d830: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5ec3cbd6f899: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5ec3cbd4a451: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5ec3cbc29f53: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x5ec3cbd06495: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x5ec3cbe1e784: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:155:27)",
"0x5ec3cbb091a5: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x5ec3cbb3973c: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x5ec3cba30e15: winter_verifier::perform_verification (verifier/src/lib.rs:320:5)",
"0x5ec3cbcb1fd0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:149:33)",
"0x5ec3cb9dc90c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cbb64f91: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb64f91: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb64f91: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb64f91: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc1fedb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc19626: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb8654ab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cbacaba6: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:630:42)",
"0x5ec3cbc3d3df: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:226:50)",
"0x5ec3cbc5c810: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x5ec3cb916393: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x5ec3cbae6018: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x5ec3cbc7951a: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x5ec3cb8db6f1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x5ec3cb8edfa8: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x5ec3cb898d99: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:118:9)",
"0x5ec3cb6f19d5: winterfell::main (examples/src/main.rs:83:11)",
"0x5ec3cbb3b985: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:364:13)",
"0x5ec3cb9b8670: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:40:22)",
"0x5ec3cbcb46e7: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:13)",
"0x5ec3cbab9b32: winter_prover::Prover::generate_proof (prover/src/lib.rs:403:21)",
"0x5ec3cbb4e7e7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb4e7e7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb4e7e7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb4e7e7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc2273e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc187f7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb86932e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cba8ad13: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:253:9)",
"0x5ec3cb9d7a9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cbb95916: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb95916: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb95916: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbae97e9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5ec3cb9b57fb: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x5ec3cb8ede38: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x5ec3cbce382c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x5ec3cbaebb58: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x5ec3cbab5656: winter_prover::Prover::generate_proof (prover/src/lib.rs:228:27)",
"0x5ec3cb8b8909: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5ec3cbc496fb: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x5ec3cb8ef185: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5ec3cba9a08f: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:60:9)",
"0x5ec3cbb42bb8: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:510:13)",
"0x5ec3cba2f9d9: winter_verifier::perform_verification (verifier/src/lib.rs:183:13)",
"0x5ec3cba1af24: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x5ec3cbc6e152: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x5ec3cb8db583: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x5ec3cbcfec0e: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x5ec3cbcfc104: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x5ec3cbab838b: winter_prover::Prover::generate_proof (prover/src/lib.rs:561:9)",
"0x5ec3cb9fd912: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5ec3cba19119: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5ec3cbbee94f: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5ec3cbc29d8a: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x5ec3cbce8274: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x5ec3cb90a23f: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x5ec3cb90a307: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5ec3cba31156: winter_verifier::perform_verification (verifier/src/lib.rs:225:13)",
"0x5ec3cbcaeb4c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:63:9)",
"0x5ec3cba31247: winter_verifier::perform_verification (verifier/src/lib.rs:223:43)",
"0x5ec3cbd45656: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbd45656: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbd45656: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cba1ed1c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x5ec3cbc2bb5e: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x5ec3cb8e92ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x5ec3cba30810: winter_verifier::perform_verification (verifier/src/lib.rs:302:9)",
"0x5ec3cbe1af46: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:365:21)",
"0x5ec3cbe1a3d6: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:146:27)",
"0x5ec3cbb53541: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb53541: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb53541: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb53541: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc2190b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc17276: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb86745b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cb8edb0f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x5ec3cbe1d012: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5ec3cbe1e1a9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5ec3cbe1f878: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5ec3cbe15c1a: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:13)",
"0x5ec3cb6f18fd: winterfell::main (examples/src/main.rs:80:24)",
"0x5ec3cbc804cb: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x5ec3cbc6dd42: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x5ec3cbd7b6ac: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbd7b6ac: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbd7b6ac: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5ec3cbd4c4a9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5ec3cbd4c4a9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5ec3cbd4c4a9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5ec3cba1ef79: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x5ec3cbe1d502: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5ec3cbe1e179: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5ec3cbe1fae2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5ec3cbe15916: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:13)",
"0x5ec3cb9d3e5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cbb7f771: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb7f771: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb7f771: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb7f771: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc200cb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc199c6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb8660cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cba90e5a: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x5ec3cbc30853: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x5ec3cba30c0f: winter_verifier::perform_verification (verifier/src/lib.rs:308:25)",
"0x5ec3cbc341a4: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x5ec3cba30cbe: winter_verifier::perform_verification (verifier/src/lib.rs:314:25)",
"0x5ec3cbaebb12: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x5ec3cbc63782: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x5ec3cbaefbd9: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x5ec3cbe236b6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x5ec3cbb09b2b: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x5ec3cbcdb103: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x5ec3cbc7e299: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x5ec3cbb465ae: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x5ec3cb90489d: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x5ec3cbb45cce: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x5ec3cbb486c6: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x5ec3cbb3b9ea: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:362:9)",
"0x5ec3cba957d0: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x5ec3cbcb5819: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:129:9)",
"0x5ec3cbab9bd3: winter_prover::Prover::generate_proof (prover/src/lib.rs:407:21)",
"0x5ec3cb9e151c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cbb8d907: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb8d907: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb8d907: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb8d907: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc20fde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc1a627: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb86593e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cb898d54: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:112:30)",
"0x5ec3cb9e223c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cbb7f977: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb7f977: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb7f977: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb7f977: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc2065e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc14517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb86560e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cbab75d6: winter_prover::Prover::generate_proof (prover/src/lib.rs:491:51)",
"0x5ec3cb921fbb: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5ec3cbc28e5d: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x5ec3cbc2c406: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x5ec3cbceecaa: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x5ec3cbc7e41a: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x5ec3cb9d851c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cbc4a2be: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbc4a2be: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbc4a2be: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5ec3cbc04b77: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5ec3cb9a1c58: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x5ec3cb919511: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:132:51)",
"0x5ec3cb87ba1a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5ec3cbcbeda5: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5ec3cbc76ca7: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x5ec3cb90277b: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x5ec3cb8ef27d: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x5ec3cbc566eb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5ec3cbc55891: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5ec3cba68f4b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5ec3cba54d8f: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5ec3cba60711: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5ec3cba5bcaa: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5ec3cba8ec8c: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x5ec3cbc31848: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x5ec3cbaf2078: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x5ec3cb88b61a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5ec3cb943e45: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5ec3cba91d04: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x5ec3cba8efbc: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x5ec3cbd066eb: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x5ec3cbc5c312: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x5ec3cb9db40c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cbb6abc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb6abc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb6abc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb6abc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc20a9e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc1bc79: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb86694e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cb9b877a: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:50:26)",
"0x5ec3cb91b598: winter_prover::trace::Trace::validate (src/trace/mod.rs:177:13)",
"0x5ec3cb9c1175: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x5ec3cbe1adc4: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:361:22)",
"0x5ec3cb9d87bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cbb85b27: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb85b27: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb85b27: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb85b27: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbbfeb76: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5ec3cbc18ba7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb867d6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cbaf6d5b: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x5ec3cb8e9d3c: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x5ec3cb9f1392: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5ec3cba18a59: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5ec3cbbedb42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5ec3cb9bb0d9: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:174:17)",
"0x5ec3cb9b8f30: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:54:17)",
"0x5ec3cb8d553c: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x5ec3cbb95466: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb95466: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb95466: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbab6051: winter_prover::Prover::generate_proof (prover/src/lib.rs:301:32)",
"0x5ec3cbb58727: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb58727: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb58727: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb58727: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc225de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc18507: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb868cfe: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cba92277: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x5ec3cbab6c77: winter_prover::Prover::generate_proof (prover/src/lib.rs:442:35)",
"0x5ec3cb9dce4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cb8ba2ec: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cb8ba2ec: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cb8ba2ec: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5ec3cbc06f19: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5ec3cbc06f19: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5ec3cbc06f19: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5ec3cbc7f5d6: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x5ec3cb9baf72: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:169:36)",
"0x5ec3cb9ec982: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5ec3cba18c39: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5ec3cbbf1a51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5ec3cba916c9: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x5ec3cb99530d: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5ec3cbe3581b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5ec3cbe35541: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5ec3cbe31d7b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5ec3cbe2c3a1: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5ec3cbe2cb37: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5ec3cbe276db: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5ec3cbae9f58: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbae9f58: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbae9f58: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5ec3cbc04c17: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5ec3cbc29698: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x5ec3cbaefb07: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x5ec3cbc3d476: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:228:38)",
"0x5ec3cbc2daf6: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x5ec3cba30d3a: winter_verifier::perform_verification (verifier/src/lib.rs:316:28)",
"0x5ec3cb9e1f9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cbb5fd37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb5fd37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb5fd37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb5fd37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc2126e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc146a7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb866dde: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cbacad43: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:638:34)",
"0x5ec3cbb09bf6: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x5ec3cba91be1: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x5ec3cba94211: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x5ec3cb9d4b7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cbb76f11: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb76f11: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb76f11: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb76f11: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc213db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc16d46: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb865acb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cbaf9c0e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x5ec3cba085e2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5ec3cba19209: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5ec3cbbf30e2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5ec3cb8ef49b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x5ec3cbc6410a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x5ec3cbce400c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x5ec3cbe359cb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5ec3cbe356a1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5ec3cbe31c9b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5ec3cbe2c471: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5ec3cbe2caf7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5ec3cbe2772b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5ec3cba39718: winter_verifier::verify (verifier/src/lib.rs:97:38)",
"0x5ec3cbe1c75c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cbe1f726: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbe1f726: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbe1f726: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbe14d52: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:172:33)",
"0x5ec3cba8ed84: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x5ec3cba15f22: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5ec3cba18fc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5ec3cbbf2aaf: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5ec3cbc6e5d9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x5ec3cbb6c107: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb6c107: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb6c107: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb6c107: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc214fe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc1b4b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb86886e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cbb31d8f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x5ec3cbb516b1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb516b1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb516b1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb516b1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc1f71b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc18e16: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb86823b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cb8db409: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x5ec3cb9d5dbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cbb79127: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb79127: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb79127: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb79127: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc2001e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc166b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb868fae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cbc36e38: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x5ec3cba918b6: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x5ec3cba9576c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x5ec3cbc5bf64: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:142:33)",
"0x5ec3cbce495b: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x5ec3cbaeb9cc: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x5ec3cb8d8c8d: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x5ec3cba36869: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:214:32)",
"0x5ec3cb87b603: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5ec3cbc29a2c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x5ec3cbb7b2f0: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb7b2f0: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb7b2f0: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb7b2f0: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5ec3cbc1f5bb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc1ada6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb866dbb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cbc6e075: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x5ec3cb9d2c0c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cbb74b31: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb74b31: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb74b31: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb74b31: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc220ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc165a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb867e5b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cb9a1967: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x5ec3cbb5a227: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb5a227: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb5a227: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb5a227: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc2023e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc17d47: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb868bee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cbb0a10f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x5ec3cbb94856: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb94856: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb94856: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5ec3cba8e7be: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x5ec3cba8cf17: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5ec3cb8cc5ac: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:293:57)",
"0x5ec3cb9dc66c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cbb94e1c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb94e1c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb94e1c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5ec3cbc05e79: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5ec3cbc05e79: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5ec3cbc05e79: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5ec3cbab76be: winter_prover::Prover::generate_proof (prover/src/lib.rs:500:39)",
"0x5ec3cbe35b7b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5ec3cbe355f1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5ec3cbe31bbb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5ec3cbe2e87e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5ec3cbe2fc4c: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5ec3cbe2ed8a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5ec3cba93f48: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x5ec3cbc387a5: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x5ec3cbad38e7: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:706:26)",
"0x5ec3cbab7110: winter_prover::Prover::generate_proof (prover/src/lib.rs:472:37)",
"0x5ec3cbc5602b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5ec3cbc55681: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5ec3cba6912b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5ec3cba3e8bd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5ec3cb907f89: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5ec3cbae3a00: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5ec3cb9b59d0: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x5ec3cbc63c60: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x5ec3cba9a12c: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:62:13)",
"0x5ec3cbc76a9a: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x5ec3cbc7e9a3: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x5ec3cbd0282c: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x5ec3cbb3bc22: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:348:9)",
"0x5ec3cbcb463b: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:50:13)",
"0x5ec3cbb7ef40: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb7ef40: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb7ef40: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb7ef40: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5ec3cbc2114b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc188a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb86527b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cbc76bca: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x5ec3cb9fa7b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5ec3cba18d89: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5ec3cbbeef32: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5ec3cba3148c: winter_verifier::perform_verification (verifier/src/lib.rs:182:9)",
"0x5ec3cb9d3bbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cbb5c991: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb5c991: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb5c991: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb5c991: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc2237b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc17ed6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb86578b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cba2fcd2: winter_verifier::perform_verification (verifier/src/lib.rs:212:41)",
"0x5ec3cbce0e40: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x5ec3cb9d94bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cbb8c4c8: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb8c4c8: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb8c4c8: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb8c4c8: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5ec3cbc2372e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc1a407: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cbd0317e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cbb46e5c: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x5ec3cbc55ccb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5ec3cbc55471: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5ec3cba69f0b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5ec3cba43d31: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5ec3cba47477: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5ec3cba3c1bb: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5ec3cbc341bf: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x5ec3cbab9808: winter_prover::Prover::generate_proof (prover/src/lib.rs:440:13)",
"0x5ec3cbd02983: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x5ec3cba3e9dd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5ec3cb90783f: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5ec3cbae36c3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5ec3cb8d1bb0: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:221:17)",
"0x5ec3cb87c922: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5ec3cbcab4dd: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::SpecFold>::spec_fold (iter/adapters/zip.rs:685:25)",
"0x5ec3cbc97ee7: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::fold (iter/adapters/zip.rs:249:9)",
"0x5ec3cbc829b7: <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/zip.rs:103:9)",
"0x5ec3cbb54197: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb54197: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb54197: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb54197: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc22f6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc14599: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb867c6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cbc35e47: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x5ec3cbaffa48: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x5ec3cbb09dda: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x5ec3cbaec01f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x5ec3cb9a3f5f: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x5ec3cbc3fc77: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x5ec3cbc37c8c: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x5ec3cbc3e7bc: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x5ec3cbb3c2c9: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:534:17)",
"0x5ec3cb99e428: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x5ec3cbb81c51: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb81c51: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb81c51: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb81c51: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc1ff6b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc1aa96: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb86753b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cb8eda47: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x5ec3cbb35d61: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x5ec3cba3033e: winter_verifier::perform_verification (verifier/src/lib.rs:272:24)",
"0x5ec3cbb42c93: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:505:13)",
"0x5ec3cb99f484: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x5ec3cbb565b7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb565b7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb565b7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb565b7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc1fb0e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc17a37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb8672be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cbaefc76: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x5ec3cb9f3622: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5ec3cba19839: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5ec3cbbf2252: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5ec3cbc63db8: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x5ec3cbafceb0: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x5ec3cbab58ba: winter_prover::Prover::generate_proof (prover/src/lib.rs:257:22)",
"0x5ec3cb91f1f6: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x5ec3cbceec8f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x5ec3cbb759d1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb759d1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb759d1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb759d1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc21cfb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc1a026: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb86864b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cb8edc9f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x5ec3cbb73f37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb73f37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb73f37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb73f37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc232be: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc1c2d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb8664de: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cba8b2c4: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:198:23)",
"0x5ec3cbcae64a: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:25:25)",
"0x5ec3cba3013b: winter_verifier::perform_verification (verifier/src/lib.rs:263:61)",
"0x5ec3cbcb54c0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:28)",
"0x5ec3cb9dbe8c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cbb95966: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb95966: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb95966: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cba1ac9d: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x5ec3cbb3c239: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:536:13)",
"0x5ec3cba8b210: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:197:28)",
"0x5ec3cba07c02: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5ec3cba18cc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5ec3cbbf2d48: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5ec3cbab9bf6: winter_prover::Prover::generate_proof (prover/src/lib.rs:408:17)",
"0x5ec3cb9d62fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cbcdd776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbcdd776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbcdd776: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5ec3cbc063b9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5ec3cbc063b9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5ec3cbc063b9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5ec3cbd02846: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x5ec3cb8eecae: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x5ec3cba62451: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x5ec3cba6877d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x5ec3cba5c10e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x5ec3cb8ef3ef: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x5ec3cbcdb184: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x5ec3cb9159cb: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x5ec3cb88232c: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5ec3cbaeb954: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x5ec3cbae5833: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x5ec3cb8ee23c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x5ec3cb9db94c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cbb4fae7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb4fae7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb4fae7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb4fae7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc2153e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc1bd37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb867d4e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cbad7619: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces (src/do_work/prover.rs:30:9)",
"0x5ec3cbcae7eb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:39:30)",
"0x5ec3cbb63666: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb63666: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb63666: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb63666: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5ec3cbc1fb6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc185dc: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cbc279be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cbc29edb: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x5ec3cbc486ed: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x5ec3cbb6b877: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb6b877: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb6b877: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb6b877: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc2070e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc1c317: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb868ace: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cbc34532: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x5ec3cbc5c6ec: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x5ec3cb9c604d: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x5ec3cb9cd39c: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x5ec3cbb53317: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb53317: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb53317: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb53317: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc2106e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc1c587: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb86547e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cba90c6a: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x5ec3cb9faca2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5ec3cba19539: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5ec3cbbf1b42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5ec3cbc24ffc: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x5ec3cbb45d4a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x5ec3cb9d391c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cbb5ddc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb5ddc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb5ddc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb5ddc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbbff6b3: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5ec3cbc14bc9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb86701e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cbab5f62: winter_prover::Prover::generate_proof (prover/src/lib.rs:291:36)",
"0x5ec3cbc38866: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x5ec3cbe27da0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5ec3cbe235f9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5ec3cbe225a1: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5ec3cbe22eb0: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x5ec3cbcfae9d: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x5ec3cbc296ff: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x5ec3cbc3a872: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x5ec3cbab5c88: winter_prover::Prover::generate_proof (prover/src/lib.rs:268:13)",
"0x5ec3cba93ca7: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x5ec3cbe2b66d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5ec3cbe26538: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5ec3cbe24dd7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5ec3cb9a1a1e: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x5ec3cbc4abc2: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x5ec3cbae8240: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x5ec3cbc5ebb1: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x5ec3cb9d0fee: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x5ec3cb8ee42b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x5ec3cbe7ad18: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x5ec3cbe7c00a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x5ec3cbe7c00a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x5ec3cbe7bdae: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x5ec3cbe7bdae: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x5ec3cbe7be9d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x5ec3cb9da70a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cbb6c781: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb6c781: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb6c781: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb6c781: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc21dab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc16306: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb86609b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cbacac73: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:634:36)",
"0x5ec3cbcfac96: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x5ec3cb9d72bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cbb8fffe: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb8fffe: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb8fffe: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb8fffe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5ec3cbc2143b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc18b76: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cbcba10b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cb8e701c: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x5ec3cbd01cb7: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x5ec3cbcb3a27: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:272:18)",
"0x5ec3cbcb2297: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:166:30)",
"0x5ec3cb802149: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5ec3cb800c19: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5ec3cb7ff030: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5ec3cb7ff298: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x5ec3cb7feb5a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x5ec3cb7feb5a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x5ec3cb6f36a1: alloc::string::String::reserve (alloc/src/string.rs:1152:9)",
"0x5ec3cb6f36a1: <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend (alloc/src/string.rs:2173:14)",
"0x5ec3cb6f377c: <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter (alloc/src/string.rs:2093:9)",
"0x5ec3cbc7f440: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5ec3cbad34e4: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:691:36)",
"0x5ec3cbc6e524: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x5ec3cbc498ce: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x5ec3cbaec4f8: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x5ec3cba306c1: winter_verifier::perform_verification (verifier/src/lib.rs:295:27)",
"0x5ec3cbb09a4e: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x5ec3cbafba92: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x5ec3cb8d24c6: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:493:32)",
"0x5ec3cb88809a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5ec3cb9552a2: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5ec3cb853c9b: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5ec3cb870906: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5ec3cb9c5d36: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x5ec3cbb3ae3f: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x5ec3cb8d8cb0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x5ec3cbc48835: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x5ec3cb99e1d0: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x5ec3cbb87f17: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb87f17: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb87f17: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb87f17: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc21b2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc17147: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb866a9e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cbab5416: winter_prover::Prover::generate_proof (prover/src/lib.rs:205:38)",
"0x5ec3cbe1b187: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x5ec3cbe19fed: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:357:24)",
"0x5ec3cbe19a1e: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:168:21)",
"0x5ec3cbc3d527: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:228:37)",
"0x5ec3cbb3c08d: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:540:13)",
"0x5ec3cba20191: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x5ec3cbc343d9: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x5ec3cb9d755c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cbb811c7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb811c7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb811c7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb811c7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc2006e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc152c7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb9b342e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cbab579f: winter_prover::Prover::generate_proof (prover/src/lib.rs:243:41)",
"0x5ec3cba8b723: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:200:34)",
"0x5ec3cb87ab0a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5ec3cb94e1bf: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5ec3cb99c499: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x5ec3cbc56dab: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5ec3cbc557e1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5ec3cba694eb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5ec3cba3e79d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5ec3cb9070fc: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5ec3cb904911: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x5ec3cbe1a2b9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5ec3cbe1a70b: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:211:22)",
"0x5ec3cbe1515d: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:188:24)",
"0x5ec3cbc5bea2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x5ec3cbb69787: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb69787: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb69787: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb69787: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc2067e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc17807: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb86971e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cb91933a: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:132:32)",
"0x5ec3cbb69ee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb69ee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb69ee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb69ee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbbf9bcf: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5ec3cbc17849: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb866e5e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cba39784: winter_verifier::verify (verifier/src/lib.rs:101:24)",
"0x5ec3cbb79ee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb79ee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb79ee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb79ee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc1fdde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc16c57: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb86947e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cbc7e994: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x5ec3cbaefa53: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x5ec3cb9e17bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cbb95876: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb95876: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb95876: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbab5fc9: winter_prover::Prover::generate_proof (prover/src/lib.rs:299:44)",
"0x5ec3cbb4ac21: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb4ac21: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb4ac21: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb4ac21: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc213ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc14ac6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb86901b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cbab76a3: winter_prover::Prover::generate_proof (prover/src/lib.rs:495:52)",
"0x5ec3cbe1a8d2: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:215:25)",
"0x5ec3cbc30bd0: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x5ec3cb9dedbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cbb4d3c1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb4d3c1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb4d3c1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb4d3c1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc229db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc15d06: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb867eab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cba2fd9f: winter_verifier::perform_verification (verifier/src/lib.rs:216:40)",
"0x5ec3cba99b27: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x5ec3cba978cd: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x5ec3cba9583e: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x5ec3cbb889a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb889a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb889a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb889a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc233de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc1a4c9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb868ede: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cb9155e0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x5ec3cbab97ed: winter_prover::Prover::generate_proof (prover/src/lib.rs:439:13)",
"0x5ec3cbcb558d: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:33)",
"0x5ec3cb9deb1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cbb677cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb677cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb677cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb677cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5ec3cbc2286e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc14947: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb865e8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cbb45bf6: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x5ec3cbcdb450: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x5ec3cbb7fba1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb7fba1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb7fba1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb7fba1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc22b3b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc1a0b6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb8666cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cbab5c5d: winter_prover::Prover::generate_proof (prover/src/lib.rs:266:43)",
"0x5ec3cb9c5f3a: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x5ec3cbe281a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbe281a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbe281a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbe281a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5ec3cbe285ee: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbe285b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cbe2984e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cbe27299: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x5ec3cbc3a940: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x5ec3cba3098e: winter_verifier::perform_verification (verifier/src/lib.rs:303:42)",
"0x5ec3cbe2e76e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5ec3cbe30220: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5ec3cbe2f428: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5ec3cbae5151: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x5ec3cbafcdf3: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x5ec3cb9c5d7b: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x5ec3cbb09214: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x5ec3cbe19d02: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:348:22)",
"0x5ec3cb9cd629: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x5ec3cbc7f5ed: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x5ec3cbcfeab6: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x5ec3cbe1e2bd: <winter_air::proof::commitments::Commitments as winter_utils::serde::Deserializable>::read_from (src/proof/commitments.rs:108:22)",
"0x5ec3cbe14bdc: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:167:27)",
"0x5ec3cbb62187: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb62187: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb62187: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb62187: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc2329e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc17e27: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb8657ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cbc3095b: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x5ec3cb9b7bd9: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:82:31)",
"0x5ec3cb88d553: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5ec3cbc3189e: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x5ec3cbb80637: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb80637: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb80637: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb80637: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc23ade: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc1c4b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb866d0e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cbab5e32: winter_prover::Prover::generate_proof (prover/src/lib.rs:286:23)",
"0x5ec3cbb5b777: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb5b777: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb5b777: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb5b777: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc202de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc1c697: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb868b8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cbb09131: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x5ec3cbc795d7: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x5ec3cbceee0b: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x5ec3cbc30bf3: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x5ec3cbc30693: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x5ec3cb90a22a: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x5ec3cbb509a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb509a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb509a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb509a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5ec3cbc2271e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc15517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb86737e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cbb09f51: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x5ec3cbd066d0: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x5ec3cbc5c2ef: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x5ec3cbc63a51: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x5ec3cb9df2fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5ec3cbb5c135: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5ec3cbb5c135: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5ec3cbb5c135: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5ec3cbb5c135: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5ec3cbc2010e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5ec3cbc15737: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5ec3cb865cce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5ec3cbc3d1b0: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:218:46)"
]
}