{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell do-work -n 1 -l 65536",
"pid": 28283,
"tg": 75712605,
"te": 84448352,
"pps": [
{
"tb": 864,
"tbk": 2,
"tl": 65358679,
"mb": 840,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 531,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
13,
14,
15,
16,
17
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1286,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
22,
23,
24,
25,
26,
27
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 84069311,
"mb": 2097152,
"mbk": 1,
"gb": 2097152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
28,
29,
30,
31,
32,
33,
34
]
},
{
"tb": 1248,
"tbk": 12,
"tl": 316,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
35,
36,
37,
38,
39,
40,
41
]
},
{
"tb": 6291456,
"tbk": 3,
"tl": 580027,
"mb": 6291456,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
42,
43,
44,
45,
46,
47,
48,
49
]
},
{
"tb": 384,
"tbk": 1,
"tl": 1585789,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
50,
51,
52,
53,
54,
55,
56,
57,
58
]
},
{
"tb": 72,
"tbk": 3,
"tl": 69,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
59,
60,
61,
62,
63,
64,
65,
66,
67
]
},
{
"tb": 512,
"tbk": 1,
"tl": 193225,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
70,
71,
72,
73,
74
]
},
{
"tb": 64,
"tbk": 1,
"tl": 3,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
76,
77,
78,
79,
80,
81,
82,
83
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2827,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
84,
85,
86,
87,
88,
89,
90,
91,
92
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
93,
94,
95,
96,
97,
98,
99,
100,
101,
102
]
},
{
"tb": 16,
"tbk": 1,
"tl": 4,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
104,
105,
106,
107,
74,
108
]
},
{
"tb": 72,
"tbk": 1,
"tl": 21032,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
109,
110,
74,
108,
111
]
},
{
"tb": 65176,
"tbk": 38,
"tl": 93011,
"mb": 32640,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
112,
113,
114,
115,
116
]
},
{
"tb": 15744,
"tbk": 4,
"tl": 38112,
"mb": 15744,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
93,
94,
95,
96,
97,
98,
99,
117,
118,
119
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2150,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
120,
121,
122,
123,
124,
125,
126,
127,
128,
129
]
},
{
"tb": 16,
"tbk": 1,
"tl": 113,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
22,
23,
24,
130,
131,
132
]
},
{
"tb": 83936,
"tbk": 1616,
"tl": 2708293,
"mb": 16960,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
112,
133,
134,
135,
136,
137,
138
]
},
{
"tb": 24,
"tbk": 2,
"tl": 2,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
93,
94,
95,
96,
97,
98,
99,
100,
139,
140
]
},
{
"tb": 32,
"tbk": 1,
"tl": 56,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
141,
142,
143,
144,
145,
146,
147,
148,
149
]
},
{
"tb": 32,
"tbk": 1,
"tl": 19,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
28,
29,
30,
150,
151,
152,
153
]
},
{
"tb": 64,
"tbk": 1,
"tl": 6909,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
154,
155,
156,
157,
158
]
},
{
"tb": 6912,
"tbk": 36,
"tl": 14110,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
35,
159,
160,
161,
162,
163,
164
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2871,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
165,
166,
167,
168,
169,
170,
171,
172,
173
]
},
{
"tb": 4194336,
"tbk": 3,
"tl": 76541,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
28,
29,
30,
31,
174,
175,
176
]
},
{
"tb": 8801,
"tbk": 1,
"tl": 9571,
"mb": 8801,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
93,
94,
95,
96,
97,
98,
99,
117,
177,
178
]
},
{
"tb": 23001,
"tbk": 4,
"tl": 38095,
"mb": 23001,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
93,
94,
95,
96,
97,
98,
99,
117,
179,
119
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2143,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
120,
121,
180,
181,
182,
183,
184,
185,
186,
187
]
},
{
"tb": 160,
"tbk": 1,
"tl": 9346,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
188,
189,
190,
191,
192,
193,
194,
153
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2983,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
22,
23,
24,
195,
153,
196
]
},
{
"tb": 72,
"tbk": 1,
"tl": 8615835,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
197,
198,
199,
200,
201,
202,
203,
204,
205
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2047298,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
154,
155,
156,
157,
206
]
},
{
"tb": 64,
"tbk": 1,
"tl": 210,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
154,
155,
156,
207,
208
]
},
{
"tb": 13697,
"tbk": 1,
"tl": 9591,
"mb": 13697,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
93,
94,
95,
96,
97,
98,
99,
117,
209,
210
]
},
{
"tb": 32,
"tbk": 1,
"tl": 84071541,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
103,
211,
212,
213,
214,
215,
216
]
},
{
"tb": 16,
"tbk": 1,
"tl": 578927,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
217,
218,
219,
220,
221,
107,
74
]
},
{
"tb": 8800,
"tbk": 2,
"tl": 1300273,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
222,
223,
224,
225,
226,
227,
228
]
},
{
"tb": 13697,
"tbk": 1,
"tl": 9577,
"mb": 13697,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
93,
94,
95,
96,
97,
98,
99,
117,
229,
230
]
},
{
"tb": 32,
"tbk": 1,
"tl": 6195,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
231,
232,
74,
108,
111
]
},
{
"tb": 64,
"tbk": 1,
"tl": 7197,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
154,
155,
156,
207,
233
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4219,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
234,
235,
236,
237,
238,
239,
240,
241
]
},
{
"tb": 8800,
"tbk": 1,
"tl": 7235,
"mb": 8800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
42,
43,
44,
242,
243,
153
]
},
{
"tb": 8388608,
"tbk": 4,
"tl": 6755428,
"mb": 8388608,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
28,
29,
30,
31,
244,
245,
246
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 7043,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
247,
248,
249,
250,
251
]
},
{
"tb": 576,
"tbk": 2,
"tl": 52,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
252,
253,
254,
255,
256,
257,
258,
259,
260
]
},
{
"tb": 16,
"tbk": 1,
"tl": 7,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
104,
261,
106,
107,
74,
108
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 84071389,
"mb": 524288,
"mbk": 1,
"gb": 524288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
28,
29,
30,
31,
32,
262,
263
]
},
{
"tb": 512,
"tbk": 1,
"tl": 997,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
28,
29,
30,
264,
265,
266,
196
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 4433037,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
188,
189,
190,
191,
267,
268,
269,
270
]
},
{
"tb": 24,
"tbk": 1,
"tl": 8513321,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
271,
272,
273,
274,
275,
74,
108,
111
]
},
{
"tb": 40,
"tbk": 1,
"tl": 67760521,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
276,
277,
278,
279,
280,
281,
282,
283,
284
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 185941,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
188,
189,
190,
191,
267,
285,
286,
287
]
},
{
"tb": 224,
"tbk": 1,
"tl": 9609,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
93,
94,
95,
96,
97,
98,
99,
117,
288,
289
]
},
{
"tb": 6072,
"tbk": 11,
"tl": 4333,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
290,
291,
292,
293,
294,
295
]
},
{
"tb": 64,
"tbk": 1,
"tl": 216,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
154,
155,
156,
296,
208
]
},
{
"tb": 6600,
"tbk": 1,
"tl": 75545065,
"mb": 6600,
"mbk": 1,
"gb": 6600,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
297,
298,
299,
300,
301,
302,
303,
304,
305
]
},
{
"tb": 96,
"tbk": 1,
"tl": 8073,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
306,
307,
308,
309,
310
]
},
{
"tb": 8,
"tbk": 1,
"tl": 22,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
120,
121,
311,
312,
313,
314,
315,
316,
317,
318
]
},
{
"tb": 160,
"tbk": 1,
"tl": 7226,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
319,
320,
321,
322,
153
]
},
{
"tb": 2097152,
"tbk": 131072,
"tl": 106759,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
42,
43,
44,
323,
324,
325
]
},
{
"tb": 48,
"tbk": 2,
"tl": 121,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
326,
327,
328,
329,
330,
331
]
},
{
"tb": 140800,
"tbk": 1,
"tl": 20344,
"mb": 140800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
93,
332,
333,
334,
335,
336,
337,
110
]
},
{
"tb": 4400,
"tbk": 1,
"tl": 353926,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
217,
218,
219,
220,
338,
339,
340
]
},
{
"tb": 8,
"tbk": 1,
"tl": 75447757,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
341,
342,
343,
344,
345,
346,
347,
348,
349
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 394348,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
28,
29,
30,
31,
32,
350,
351
]
},
{
"tb": 3536,
"tbk": 34,
"tl": 483,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
35,
36,
37,
38,
352,
353,
354
]
},
{
"tb": 192,
"tbk": 1,
"tl": 9562,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
355,
356,
357,
358,
359
]
},
{
"tb": 256,
"tbk": 1,
"tl": 9632,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
22,
23,
24,
360,
361,
362
]
},
{
"tb": 24,
"tbk": 1,
"tl": 9587,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
363,
364,
210,
359
]
},
{
"tb": 256,
"tbk": 1,
"tl": 9495,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
93,
94,
95,
96,
97,
98,
99,
117,
365,
366
]
},
{
"tb": 16,
"tbk": 1,
"tl": 81,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
104,
261,
367,
368,
369,
266
]
},
{
"tb": 96,
"tbk": 1,
"tl": 7209,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
370,
371,
372,
373,
266
]
},
{
"tb": 2880,
"tbk": 24,
"tl": 2392,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
13,
14,
15,
374,
375
]
},
{
"tb": 16,
"tbk": 1,
"tl": 101,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
222,
223,
224,
225,
226,
227,
376
]
},
{
"tb": 512,
"tbk": 1,
"tl": 57,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
377,
378,
379,
380,
381,
382,
383,
384
]
},
{
"tb": 140800,
"tbk": 32,
"tl": 86896,
"mb": 140800,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
22,
23,
24,
385,
386,
387
]
},
{
"tb": 3656,
"tbk": 18,
"tl": 119,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
120,
121,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 384,
"tbk": 1,
"tl": 9613,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
397,
398,
399,
400,
359
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
93,
94,
95,
96,
97,
98,
99,
100,
139,
102
]
},
{
"tb": 15744,
"tbk": 123,
"tl": 127,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
401,
402,
403,
404,
405,
406,
407,
408
]
},
{
"tb": 72,
"tbk": 1,
"tl": 193549,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
297,
409,
410,
411,
46,
47,
48,
49,
412,
74
]
},
{
"tb": 96,
"tbk": 1,
"tl": 22,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
413,
367,
368,
369,
266,
196
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 149588,
"mb": 1179648,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
28,
29,
30,
31,
414,
415,
416
]
},
{
"tb": 15744,
"tbk": 4,
"tl": 2390,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
417,
418,
419,
420,
421,
422,
423,
424,
425
]
},
{
"tb": 3936,
"tbk": 4,
"tl": 23665,
"mb": 3936,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
188,
426,
427,
428,
429,
430,
431,
310
]
},
{
"tb": 2348810240,
"tbk": 1,
"tl": 4071965,
"mb": 2348810240,
"mbk": 1,
"gb": 2348810240,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
42,
43,
44,
432,
433,
434
]
},
{
"tb": 288358400,
"tbk": 275,
"tl": 2143072773,
"mb": 288358400,
"mbk": 275,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
42,
43,
44,
45,
46,
47,
48,
435
]
},
{
"tb": 96,
"tbk": 1,
"tl": 15,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
413,
106,
107,
74,
108,
111
]
},
{
"tb": 80,
"tbk": 1,
"tl": 1585625,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
436,
437,
438,
439,
440,
441,
442,
443,
444
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 7687199,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
28,
29,
30,
31,
32,
350,
445
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 12338305,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
188,
189,
190,
191,
267,
446,
447,
448
]
},
{
"tb": 8,
"tbk": 1,
"tl": 192146,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
120,
121,
388,
389,
390,
391,
392,
393,
449,
412,
74
]
},
{
"tb": 2808,
"tbk": 4,
"tl": 3816,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
450,
451,
452,
453,
454,
17,
455,
456
]
},
{
"tb": 32,
"tbk": 1,
"tl": 23,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
457,
458,
459,
460,
461,
462,
463,
464,
465,
466
]
},
{
"tb": 2304,
"tbk": 12,
"tl": 4877,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
35,
159,
160,
161,
467,
468,
469
]
},
{
"tb": 6640,
"tbk": 42,
"tl": 154,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
120,
121,
388,
389,
390,
391,
392,
393,
394,
17,
455
]
},
{
"tb": 96,
"tbk": 1,
"tl": 6913,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
306,
307,
308,
470,
158
]
},
{
"tb": 128,
"tbk": 2,
"tl": 3171283,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
471,
472,
473,
474,
475
]
},
{
"tb": 16320,
"tbk": 8,
"tl": 6921,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
154,
155,
156,
476,
158
]
},
{
"tb": 32,
"tbk": 2,
"tl": 1586097,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
477,
478,
479,
480,
481,
482,
483,
484
]
},
{
"tb": 8801,
"tbk": 1,
"tl": 27,
"mb": 8801,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
457,
458,
459,
460,
461,
462,
463,
485,
465,
466
]
},
{
"tb": 512,
"tbk": 1,
"tl": 30,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
28,
29,
30,
486,
487,
266,
196
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2204,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
450,
451,
452,
453,
454,
395,
396,
74
]
},
{
"tb": 24,
"tbk": 1,
"tl": 8513331,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
488,
489,
490,
491,
492,
74,
108,
111
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 16761,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
112,
113,
114,
115,
493
]
},
{
"tb": 13664,
"tbk": 32,
"tl": 99979,
"mb": 13664,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
188,
189,
190,
191,
192,
494,
495,
496
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1585928,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
497,
498,
131,
499,
500,
74
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 322192,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
22,
23,
24,
501,
502,
74
]
},
{
"tb": 16320,
"tbk": 8,
"tl": 2047313,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
154,
155,
156,
476,
206
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2689,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
450,
451,
452,
453,
503,
504,
505,
506
]
},
{
"tb": 15744,
"tbk": 4,
"tl": 1610,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
222,
223,
224,
225,
226,
227,
507
]
},
{
"tb": 8832,
"tbk": 3,
"tl": 7866393,
"mb": 8832,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
508,
509,
510,
511,
512,
513,
514,
515
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1585913,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
22,
23,
24,
130,
131,
499
]
},
{
"tb": 3656,
"tbk": 18,
"tl": 88,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
120,
121,
388,
389,
390,
391,
392,
393,
394,
516,
337
]
},
{
"tb": 16,
"tbk": 1,
"tl": 9620,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
93,
94,
95,
96,
97,
98,
99,
117,
517,
518
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2157,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
120,
121,
519,
520,
521,
522,
523,
524,
525,
526
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 8714836,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
188,
189,
190,
191,
267,
285,
286,
527
]
},
{
"tb": 13800,
"tbk": 25,
"tl": 6275,
"mb": 3864,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
290,
291,
292,
528,
529,
530
]
},
{
"tb": 216,
"tbk": 1,
"tl": 9428,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
531,
532,
533,
534,
535,
536,
537,
538,
539
]
},
{
"tb": 140832,
"tbk": 33,
"tl": 82529,
"mb": 140800,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
42,
43,
44,
45,
46,
47,
48,
540
]
},
{
"tb": 15744,
"tbk": 123,
"tl": 120,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
28,
29,
30,
150,
541,
431,
310
]
},
{
"tb": 984,
"tbk": 4,
"tl": 4100,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
35,
542,
543,
544,
545,
546,
547,
548,
549,
550,
26
]
},
{
"tb": 8800,
"tbk": 1,
"tl": 33,
"mb": 8800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
28,
29,
30,
150,
551,
152,
153
]
},
{
"tb": 512,
"tbk": 1,
"tl": 10,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
552,
553,
554,
555,
556,
557,
558,
559
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 390622,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
560,
561,
562,
563,
564,
565,
566,
567
]
},
{
"tb": 3936,
"tbk": 4,
"tl": 3802,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
188,
426,
427,
428,
429,
568,
17,
455
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 1771753,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
222,
223,
224,
225,
226,
227,
569
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 73641,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
28,
29,
30,
31,
32,
350,
570
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2165,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
120,
121,
571,
572,
573,
574,
575,
576,
577,
578
]
},
{
"tb": 2348810240,
"tbk": 1,
"tl": 13424562,
"mb": 2348810240,
"mbk": 1,
"gb": 2348810240,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
417,
579,
580,
581,
582,
583,
584,
585
]
},
{
"tb": 256,
"tbk": 1,
"tl": 11,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
35,
542,
543,
544,
545,
546,
547,
548,
586,
456,
74
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 17826,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
93,
332,
333,
334,
587,
588,
396,
74
]
},
{
"tb": 16,
"tbk": 1,
"tl": 78,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
104,
105,
367,
368,
369,
266
]
},
{
"tb": 480,
"tbk": 4,
"tl": 6885,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
13,
14,
15,
589,
590
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 3199,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
188,
591,
592,
593,
594,
595,
596,
597,
598
]
},
{
"tb": 936,
"tbk": 4,
"tl": 1273,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
120,
121,
599,
600,
601,
602,
375,
603,
604
]
},
{
"tb": 16,
"tbk": 1,
"tl": 84071420,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
605,
606,
607,
608,
609,
610,
611,
612,
613
]
},
{
"tb": 32,
"tbk": 1,
"tl": 9420,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
211,
614,
615,
616,
617,
618
]
},
{
"tb": 24,
"tbk": 1,
"tl": 8513325,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
297,
619,
620,
621,
622,
74,
108,
111
]
},
{
"tb": 320,
"tbk": 2,
"tl": 3171537,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
623,
624,
625,
626,
627
]
},
{
"tb": 96,
"tbk": 1,
"tl": 40,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
413,
367,
628,
629,
500,
74
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 1721288,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
28,
29,
30,
31,
630,
631,
632
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 275446,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
42,
43,
44,
242,
633,
232
]
},
{
"tb": 216,
"tbk": 1,
"tl": 84071560,
"mb": 216,
"mbk": 1,
"gb": 216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
531,
634,
635,
636,
637,
638,
639,
640,
641
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2114,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
13,
14,
15,
642,
336
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
643,
644,
196,
645
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2553693,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
646,
647,
648,
649,
650,
651,
652,
653,
654
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1585922,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
655,
656,
657,
658,
659,
660,
661,
662,
131,
499
]
},
{
"tb": 8800,
"tbk": 2,
"tl": 1300285,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
222,
223,
224,
225,
226,
227,
663
]
},
{
"tb": 32,
"tbk": 1,
"tl": 9355,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
188,
189,
190,
191,
192,
664,
194,
153
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3200,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
450,
451,
452,
453,
503,
495,
496,
665
]
},
{
"tb": 16,
"tbk": 1,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
93,
94,
95,
96,
97,
98,
99,
666,
667,
153
]
},
{
"tb": 16,
"tbk": 1,
"tl": 131,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
104,
105,
367,
628,
629,
500
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2455,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
450,
451,
452,
453,
454,
516,
337,
110
]
},
{
"tb": 2896,
"tbk": 12,
"tl": 1283,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
35,
542,
668,
669,
670,
671,
672,
673,
674,
675
]
},
{
"tb": 480,
"tbk": 4,
"tl": 260,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
13,
14,
15,
16,
395
]
},
{
"tb": 48,
"tbk": 1,
"tl": 84085038,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
676,
677,
678,
679,
680,
681,
682,
74
]
},
{
"tb": 424019,
"tbk": 7,
"tl": 9760,
"mb": 282118,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
112,
113,
114,
683,
684
]
},
{
"tb": 24,
"tbk": 1,
"tl": 3462481,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
685,
686,
687,
688,
689,
690,
691,
692,
693
]
},
{
"tb": 140800,
"tbk": 1,
"tl": 9599,
"mb": 140800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
93,
94,
95,
96,
97,
98,
99,
117,
694,
210
]
},
{
"tb": 160,
"tbk": 1,
"tl": 7179,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
695,
696,
697,
698,
699,
700,
701,
702,
703
]
},
{
"tb": 2281701376,
"tbk": 34,
"tl": 1151224342,
"mb": 2281701376,
"mbk": 34,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
417,
579,
580,
581,
582,
704,
705,
706
]
},
{
"tb": 1088,
"tbk": 2,
"tl": 39,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
707,
708,
709,
710,
711,
712
]
},
{
"tb": 32,
"tbk": 1,
"tl": 142,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
643,
713,
714,
715,
716,
717
]
},
{
"tb": 16,
"tbk": 1,
"tl": 721327,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
217,
218,
219,
220,
718,
719,
720
]
},
{
"tb": 256,
"tbk": 1,
"tl": 8380,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
28,
29,
30,
150,
721,
722,
153
]
},
{
"tb": 48,
"tbk": 2,
"tl": 3557865,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
723,
724,
725,
726,
727,
728,
729,
730,
731,
732
]
},
{
"tb": 1968,
"tbk": 4,
"tl": 2966,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
733,
734,
735,
736,
737,
738,
739,
740
]
},
{
"tb": 256,
"tbk": 4,
"tl": 128829,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
28,
29,
30,
31,
32,
350,
741
]
},
{
"tb": 48,
"tbk": 1,
"tl": 721332,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
217,
218,
219,
220,
742,
719,
720
]
},
{
"tb": 96,
"tbk": 1,
"tl": 2648,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
743,
744,
745,
746,
337
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 203717,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
188,
189,
190,
191,
267,
747,
748,
416
]
},
{
"tb": 107392,
"tbk": 410,
"tl": 229907,
"mb": 16384,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
188,
749,
750,
751,
752,
753,
754,
755,
756
]
},
{
"tb": 3840,
"tbk": 16,
"tl": 2424,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
154,
155,
156,
757,
758
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1778949,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
723,
724,
725,
726,
727,
728,
729,
730,
759,
760
]
},
{
"tb": 32,
"tbk": 1,
"tl": 6155072,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
13,
14,
15,
761,
74
]
},
{
"tb": 32704,
"tbk": 9,
"tl": 44,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
154,
155,
156,
762,
763
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 63687953,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
28,
29,
30,
31,
630,
631,
764
]
},
{
"tb": 896,
"tbk": 6,
"tl": 9452,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
154,
155,
156,
765,
766
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 864249,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
28,
29,
30,
31,
767,
768,
769
]
},
{
"tb": 9584640,
"tbk": 4,
"tl": 207553,
"mb": 9584640,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
28,
29,
30,
31,
770,
771,
416
]
},
{
"tb": 16,
"tbk": 1,
"tl": 146,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
42,
43,
44,
772,
773,
774
]
},
{
"tb": 48,
"tbk": 1,
"tl": 5393996,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
297,
775,
776,
777,
778,
779,
780,
781,
782
]
},
{
"tb": 16,
"tbk": 1,
"tl": 84085115,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
68,
93,
94,
95,
96,
97,
98,
99,
666,
783,
784
]
},
{
"tb": 15744,
"tbk": 4,
"tl": 2933,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
417,
579,
580,
581,
785,
455,
456,
74
]
},
{
"tb": 192,
"tbk": 1,
"tl": 26556,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
786,
787,
788,
789,
790,
791,
456,
74,
108
]
},
{
"tb": 32,
"tbk": 1,
"tl": 6155077,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
13,
14,
15,
792,
74
]
},
{
"tb": 24,
"tbk": 1,
"tl": 75546941,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
271,
793,
794,
795,
796,
797,
798,
799,
800
]
},
{
"tb": 96,
"tbk": 1,
"tl": 2047305,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
306,
307,
308,
470,
206
]
},
{
"tb": 34807,
"tbk": 12,
"tl": 2570669,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
112,
113,
114,
683,
801
]
},
{
"tb": 134217728,
"tbk": 2,
"tl": 8528411,
"mb": 67108864,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
222,
223,
224,
225,
226,
227,
802
]
},
{
"tb": 2736,
"tbk": 6,
"tl": 2575,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
803,
804,
805,
806,
807,
808
]
},
{
"tb": 96,
"tbk": 1,
"tl": 34,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
306,
307,
308,
809,
265
]
},
{
"tb": 125952,
"tbk": 4,
"tl": 1627,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
222,
223,
224,
225,
226,
227,
810
]
},
{
"tb": 192,
"tbk": 1,
"tl": 9560,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
786,
787,
788,
789,
790,
811,
812,
366,
359
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 44,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
28,
29,
30,
31,
32,
350,
813
]
},
{
"tb": 48,
"tbk": 2,
"tl": 80,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
814,
327,
328,
329,
330,
331
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
815,
816,
102,
196,
645
]
},
{
"tb": 13664,
"tbk": 32,
"tl": 83191,
"mb": 13664,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
188,
189,
190,
191,
192,
494,
504,
505
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3462469,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
817,
818,
819,
820,
821,
822
]
},
{
"tb": 1152,
"tbk": 4,
"tl": 159,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
823,
824,
825,
826,
827
]
},
{
"tb": 2808,
"tbk": 4,
"tl": 23087,
"mb": 2808,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
450,
451,
452,
453,
503,
828,
431,
310
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 318,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
42,
43,
44,
242,
829,
74
]
},
{
"tb": 8800,
"tbk": 1,
"tl": 7183,
"mb": 8800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
42,
43,
44,
830,
831,
832
]
},
{
"tb": 32,
"tbk": 1,
"tl": 9566,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
93,
94,
95,
96,
97,
98,
99,
117,
833,
178
]
},
{
"tb": 240,
"tbk": 2,
"tl": 1778929,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
834,
760,
74,
108,
111
]
},
{
"tb": 512,
"tbk": 1,
"tl": 993,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
28,
29,
30,
835,
265,
266,
196
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4227,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
28,
29,
30,
836,
837,
266,
196
]
},
{
"tb": 16,
"tbk": 1,
"tl": 192769,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
42,
43,
44,
838,
839,
840,
841,
842
]
},
{
"tb": 80,
"tbk": 1,
"tl": 84438449,
"mb": 80,
"mbk": 1,
"gb": 80,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
843,
844,
845,
846,
847,
848,
849,
850,
851
]
},
{
"tb": 101232,
"tbk": 222,
"tl": 61841,
"mb": 26448,
"mbk": 58,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
803,
804,
805,
852,
853,
854
]
},
{
"tb": 96,
"tbk": 1,
"tl": 84085128,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
855,
856,
857,
858,
859,
860,
861,
862,
863
]
},
{
"tb": 512,
"tbk": 1,
"tl": 5321,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
864,
865,
866,
867,
868,
869,
870,
871
]
},
{
"tb": 48,
"tbk": 1,
"tl": 7194,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
872,
232,
74,
108,
111
]
},
{
"tb": 96,
"tbk": 1,
"tl": 12,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
873,
874,
875,
876,
877,
878,
879,
880,
881
]
},
{
"tb": 48,
"tbk": 2,
"tl": 3171548,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
723,
724,
725,
726,
727,
728,
729,
730,
882,
627
]
},
{
"tb": 8,
"tbk": 1,
"tl": 394374,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
120,
121,
599,
600,
601,
883,
884,
760,
74
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 730430,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
28,
29,
30,
31,
885,
886,
887
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 18918,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
112,
113,
114,
115,
888
]
},
{
"tb": 140800,
"tbk": 1,
"tl": 20216,
"mb": 140800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
93,
332,
333,
334,
889,
336,
337,
110
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 4317,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
28,
29,
30,
150,
890,
891,
496
]
},
{
"tb": 224,
"tbk": 1,
"tl": 8078,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
892,
893,
894,
895,
310
]
},
{
"tb": 96,
"tbk": 1,
"tl": 20088,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
896,
897,
898,
899,
336
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2449,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
188,
426,
427,
428,
429,
568,
516,
337
]
},
{
"tb": 56,
"tbk": 1,
"tl": 2519,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
900,
506,
153,
196,
645
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 55538,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
22,
23,
24,
901,
396,
74
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2898,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
902,
903,
904,
905,
906,
907,
908,
909,
910
]
},
{
"tb": 2400,
"tbk": 12,
"tl": 225,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
35,
911,
912,
913,
914,
915,
916
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 321512,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
28,
29,
30,
31,
32,
350,
917
]
},
{
"tb": 256,
"tbk": 1,
"tl": 657,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
120,
121,
599,
600,
601,
602,
375,
918,
919
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2174,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
120,
121,
920,
921,
922,
923,
924,
925,
926,
927
]
},
{
"tb": 4400,
"tbk": 1,
"tl": 2892,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
217,
218,
219,
220,
928,
929,
930
]
},
{
"tb": 96,
"tbk": 1,
"tl": 6155088,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
306,
307,
308,
931,
74
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 4332745,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
188,
189,
190,
191,
267,
285,
286,
932
]
},
{
"tb": 8,
"tbk": 1,
"tl": 67760479,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
341,
933,
934,
935,
936,
937,
938,
939,
940
]
},
{
"tb": 32,
"tbk": 1,
"tl": 118,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
655,
656,
657,
658,
659,
660,
661,
662,
131,
132
]
},
{
"tb": 256,
"tbk": 1,
"tl": 12,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
42,
43,
44,
941,
456,
74
]
},
{
"tb": 3456,
"tbk": 12,
"tl": 4764,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
35,
942,
943,
944,
945,
946,
947
]
},
{
"tb": 480,
"tbk": 4,
"tl": 9574,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
13,
14,
15,
589,
948
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2792,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
297,
949,
950,
951,
952,
953,
954,
955,
956
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1778946,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
42,
43,
44,
838,
759,
760
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2652,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
297,
409,
410,
411,
46,
47,
48,
540,
957,
337
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 2714,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
188,
958,
959,
960,
961,
962,
963,
964,
965
]
},
{
"tb": 576,
"tbk": 4,
"tl": 1589,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
217,
218,
219,
220,
966,
967,
26
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1778921,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
13,
14,
15,
968,
969
]
},
{
"tb": 288,
"tbk": 1,
"tl": 30399,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
970,
971,
972,
973,
416
]
},
{
"tb": 192,
"tbk": 1,
"tl": 7193,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
974,
975,
976,
977,
266
]
},
{
"tb": 256,
"tbk": 1,
"tl": 651,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
120,
121,
599,
600,
601,
602,
375,
978,
979
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4589,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
980,
981,
982,
983,
505
]
},
{
"tb": 8,
"tbk": 1,
"tl": 720,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
120,
121,
984,
985,
986,
987,
988,
989,
990,
991
]
},
{
"tb": 32,
"tbk": 1,
"tl": 95,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
141,
992,
993,
994,
995,
996,
997,
998,
999
]
},
{
"tb": 6600,
"tbk": 1,
"tl": 84438434,
"mb": 6600,
"mbk": 1,
"gb": 6600,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
297,
1000,
1001,
1002,
1003,
1004,
1005,
1006,
1007
]
},
{
"tb": 32,
"tbk": 1,
"tl": 142,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
42,
43,
44,
1008,
773,
774
]
},
{
"tb": 24,
"tbk": 1,
"tl": 123,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
497,
498,
131,
132,
369,
266
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 9583,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
93,
94,
95,
96,
97,
98,
99,
117,
1009,
230
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
93,
94,
95,
96,
97,
98,
99,
100,
101,
140
]
},
{
"tb": 22880,
"tbk": 114,
"tl": 637053,
"mb": 22880,
"mbk": 114,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
188,
189,
190,
191,
192,
494,
828,
431
]
},
{
"tb": 140800,
"tbk": 1,
"tl": 3237,
"mb": 140800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
28,
29,
30,
150,
890,
1010,
505
]
},
{
"tb": 16,
"tbk": 1,
"tl": 133,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
104,
261,
367,
628,
629,
500
]
},
{
"tb": 48,
"tbk": 1,
"tl": 7838486,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1011,
1012,
1013,
1014,
1015,
1016,
1017,
1018,
1019
]
},
{
"tb": 96,
"tbk": 1,
"tl": 47,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
306,
307,
308,
1020,
232
]
},
{
"tb": 384,
"tbk": 3,
"tl": 625,
"mb": 384,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
1021,
1022,
1023,
1024,
17
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2199,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
188,
426,
427,
428,
429,
568,
395,
396
]
},
{
"tb": 72,
"tbk": 3,
"tl": 578301,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
723,
724,
725,
726,
727,
728,
729,
730,
839,
840,
841,
842
]
},
{
"tb": 4194336,
"tbk": 3,
"tl": 77082,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
28,
29,
30,
31,
1025,
176,
1026
]
},
{
"tb": 2097152,
"tbk": 2,
"tl": 10784608,
"mb": 2097152,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
22,
23,
24,
1027,
1028,
1029
]
},
{
"tb": 3656,
"tbk": 18,
"tl": 524,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
120,
121,
388,
389,
390,
391,
392,
393,
1030,
375,
918
]
},
{
"tb": 96,
"tbk": 2,
"tl": 3484131,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
297,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038
]
},
{
"tb": 140800,
"tbk": 1,
"tl": 4822,
"mb": 140800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
28,
29,
30,
150,
890,
1039,
505
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 1771871,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
222,
223,
224,
225,
226,
227,
1040
]
},
{
"tb": 96,
"tbk": 1,
"tl": 9,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
306,
307,
308,
1041,
153
]
},
{
"tb": 512,
"tbk": 1,
"tl": 17,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
28,
29,
30,
1042,
487,
266,
196
]
},
{
"tb": 64,
"tbk": 1,
"tl": 7202,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
154,
155,
156,
296,
233
]
},
{
"tb": 512,
"tbk": 1,
"tl": 23,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
28,
29,
30,
31,
174,
1043,
265
]
},
{
"tb": 288358400,
"tbk": 275,
"tl": 23218859327,
"mb": 288358400,
"mbk": 275,
"gb": 288358400,
"gbk": 275,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
28,
29,
30,
31,
1044,
1045,
1046
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 192750,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
42,
43,
44,
45,
46,
47,
48,
1047
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1295,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
35,
542,
543,
544,
545,
546,
547,
548,
1048,
26,
27
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 4148,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
247,
248,
249,
250,
1049
]
},
{
"tb": 72,
"tbk": 1,
"tl": 9605,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
786,
1050,
1051,
1052,
1053,
1054,
359
]
},
{
"tb": 288358400,
"tbk": 275,
"tl": 19727237930,
"mb": 288358400,
"mbk": 275,
"gb": 288358400,
"gbk": 275,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
42,
43,
44,
1055,
1056,
1057
]
},
{
"tb": 512,
"tbk": 1,
"tl": 16,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
28,
29,
30,
31,
174,
1058,
487
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 132046,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
28,
29,
30,
31,
767,
1059,
1060
]
},
{
"tb": 15744,
"tbk": 4,
"tl": 530,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
222,
223,
224,
225,
226,
227,
1061
]
},
{
"tb": 2306867200,
"tbk": 524288,
"tl": 1706406,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
22,
23,
24,
1062,
1063,
447
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 6346848,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
222,
223,
224,
225,
226,
227,
1064
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
815,
816,
140,
682,
74,
108
]
},
{
"tb": 80,
"tbk": 1,
"tl": 6904,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
28,
29,
30,
1065,
1066,
266,
196
]
},
{
"tb": 512,
"tbk": 1,
"tl": 29,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
42,
43,
44,
1067,
265,
266
]
},
{
"tb": 15744,
"tbk": 4,
"tl": 611,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
28,
29,
30,
31,
174,
1068,
967
]
},
{
"tb": 144,
"tbk": 1,
"tl": 192782,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
873,
1069,
1070,
1071,
840,
841,
842,
1072,
412,
74
]
},
{
"tb": 6600,
"tbk": 1,
"tl": 7838474,
"mb": 6600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
297,
409,
410,
411,
46,
47,
48,
435,
1073,
1074
]
},
{
"tb": 1968,
"tbk": 2,
"tl": 63,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1075,
1076,
1077,
1078,
1079,
1080
]
},
{
"tb": 480,
"tbk": 4,
"tl": 221,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
13,
14,
15,
16,
516
]
},
{
"tb": 384,
"tbk": 2,
"tl": 84,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1081,
1082,
1083,
1084,
1085,
1086,
1087,
1088,
1089
]
},
{
"tb": 15744,
"tbk": 4,
"tl": 26137,
"mb": 15744,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
28,
29,
30,
1090,
431,
310,
153
]
},
{
"tb": 24,
"tbk": 1,
"tl": 8513337,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1091,
1092,
1093,
1094,
1095,
74,
108,
111
]
},
{
"tb": 24,
"tbk": 1,
"tl": 153,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
297,
1096,
1097,
1098,
1099,
1100,
1101,
1102,
1103
]
},
{
"tb": 16,
"tbk": 1,
"tl": 80,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
646,
1104,
1105,
1106,
1107,
1108,
1109,
1110,
74,
108
]
},
{
"tb": 4400,
"tbk": 1,
"tl": 2887,
"mb": 4400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
217,
218,
219,
220,
1111,
929,
930
]
},
{
"tb": 3656,
"tbk": 18,
"tl": 530,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
120,
121,
388,
389,
390,
391,
392,
393,
1030,
375,
978
]
},
{
"tb": 96,
"tbk": 1,
"tl": 39,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
306,
307,
308,
1112,
265
]
},
{
"tb": 6640,
"tbk": 42,
"tl": 921,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
120,
121,
388,
389,
390,
391,
392,
393,
1030,
375,
603
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1730,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
306,
307,
308,
1113,
396
]
},
{
"tb": 24,
"tbk": 1,
"tl": 192759,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
297,
409,
410,
411,
46,
47,
48,
1047,
412,
74
]
},
{
"tb": 24,
"tbk": 1,
"tl": 17,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
297,
409,
410,
411,
46,
47,
48,
540,
1114,
682
]
}
],
"ftbl": [
"[root]",
"0x63b6dcbd84a9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x63b6dcc99dbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63b6dce3d127: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce3d127: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce3d127: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce3d127: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee401e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dceda6b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2cfae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcefae38: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x63b6dd0d3799: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x63b6dd0ceb39: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x63b6dd031830: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63b6dd033899: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63b6dd00e451: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63b6dceedf53: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x63b6dcfac274: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x63b6dcca10ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63b6dcb7e41c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dcb7e41c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dcb7e41c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x63b6dcb7e93c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63b6dcb7e93c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63b6dcb7e93c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x63b6dcdcd214: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x63b6dcdfd73c: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x63b6dccf4e15: winter_verifier::perform_verification (verifier/src/lib.rs:320:5)",
"0x63b6dce59736: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce59736: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce59736: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dcbe5e7b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x63b6dcbda393: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x63b6dcdc0eb0: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x63b6dcd798ba: winter_prover::Prover::generate_proof (prover/src/lib.rs:257:22)",
"0x63b6dd0ed739: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x63b6dd0f9d2b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x63b6dd0f9751: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x63b6dd0f5adb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x63b6dd0ef6cd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x63b6dd0ea84b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x63b6dd0e8f13: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x63b6dcec9939: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63b6dcec9939: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63b6dcec9939: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x63b6dce58bc3: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x63b6dceca1f9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63b6dceca1f9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63b6dceca1f9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x63b6dcd52c8c: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x63b6dcc9f40c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63b6dce2ebc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce2ebc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce2ebc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce2ebc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee4a9e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dcedfc79: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2a94e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcc7c77a: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:50:26)",
"0x63b6dcc97e5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63b6dce43771: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce43771: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce43771: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce43771: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee40cb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dcedd9c6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2a0cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcd54e5a: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x63b6dd13fb79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x63b6dd13e319: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x63b6dcccbc02: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63b6dccdccc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63b6dceb6d48: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63b6dcd7dbf6: winter_prover::Prover::generate_proof (prover/src/lib.rs:408:17)",
"0x63b6dcd9acd4: winter_prover::Prover::prove (prover/src/lib.rs:171:37)",
"0x63b6dcac6149: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x63b6dcac4c19: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x63b6dcac3030: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63b6dcac3298: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x63b6dcac2b5a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x63b6dcac2b5a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x63b6dc9b76a1: alloc::string::String::reserve (alloc/src/string.rs:1152:9)",
"0x63b6dc9b76a1: <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend (alloc/src/string.rs:2173:14)",
"0x63b6dc9b777c: <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter (alloc/src/string.rs:2093:9)",
"0x63b6dcc98b7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63b6dce3af11: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce3af11: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce3af11: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce3af11: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee53db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dcedad46: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb29acb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcdbdc0e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x63b6dd13e5ca: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63b6dd13fbbc: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dd13fbbc: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dd13fbbc: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x63b6dd1407fc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63b6dd1407fc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63b6dd1407fc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x63b6dcdafdf4: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x63b6dcdafb12: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x63b6dccfd5a9: winter_verifier::verify (verifier/src/lib.rs:95:32)",
"0x63b6dcbd7937: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x63b6dcf16e95: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x63b6dcd5e12c: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:62:13)",
"0x63b6dcbdf0ab: winter_prover::trace::Trace::validate (src/trace/mod.rs:122:26)",
"0x63b6dcd7df21: winter_prover::Prover::generate_proof (prover/src/lib.rs:370:17)",
"0x63b6dcb5c2b2: <examples::do_work::DoWorkExample<H> as examples::Example>::prove (src/do_work/mod.rs:108:9)",
"0x63b6dcdbdc1d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x63b6dcd7cace: winter_prover::Prover::generate_proof (prover/src/lib.rs:593:29)",
"0x63b6dc9b4d4d: winterfell::main (examples/src/main.rs:49:17)",
"0x63b6dd13eab0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63b6dd13ece9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63b6dd13ff12: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63b6dcce0564: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x63b6dcc85175: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x63b6dd13de2c: <winter_utils::serde::byte_reader::SliceReader as winter_utils::serde::byte_reader::ByteReader>::read_vec (src/serde/byte_reader.rs:151:22)",
"0x63b6dd0dedc4: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:361:22)",
"0x63b6dd0de3d6: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:146:27)",
"0x63b6dd0c1899: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x63b6dd02e0aa: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63b6dce19911: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce19911: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce19911: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce19911: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee4f1b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dcee0516: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2a20b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcbb1bd7: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x63b6dcfc6983: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x63b6dcdffc22: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:348:9)",
"0x63b6dcf7264a: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:25:25)",
"0x63b6dd13ed18: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x63b6dd14000a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x63b6dd14000a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x63b6dd13fdae: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x63b6dd13fdae: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x63b6dd13fe9d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x63b6dcdafad6: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x63b6dcc65a03: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x63b6dcca551c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63b6dce51907: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce51907: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce51907: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce51907: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee4fde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dcede627: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2993e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcb5cd54: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:112:30)",
"0x63b6dcb7c909: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x63b6dcf0d8ce: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x63b6dcbb3185: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x63b6dccfd907: winter_verifier::verify (verifier/src/lib.rs:108:19)",
"0x63b6dccd0122: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63b6dccdd6b9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63b6dceb1d91: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63b6dce0008d: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:540:13)",
"0x63b6dccf413b: winter_verifier::perform_verification (verifier/src/lib.rs:263:61)",
"0x63b6dd0f9b7b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x63b6dd0f95f1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x63b6dd0f5bbb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x63b6dd0f287e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x63b6dd0f3c4c: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x63b6dd0f2d8a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x63b6dcca2dbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63b6dce113c1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce113c1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce113c1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce113c1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee69db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dced9d06: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2beab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dccf3d9f: winter_verifier::perform_verification (verifier/src/lib.rs:216:40)",
"0x63b6dcbd9f42: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x63b6dcd55d04: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x63b6dcd52fbc: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x63b6dd0e25bd: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:151:28)",
"0x63b6dd0d9178: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:29)",
"0x63b6dd0def46: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:365:21)",
"0x63b6dce399d1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce399d1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce399d1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce399d1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee5cfb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dcede026: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2c64b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcbb1c9f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x63b6dcc9ba9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63b6dce59916: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce59916: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce59916: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dcdad7e9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x63b6dcc799d0: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x63b6dcbb1e38: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x63b6dcbb2cae: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x63b6dcb5cd99: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:118:9)",
"0x63b6dcc9c7bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63b6dce49b27: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce49b27: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce49b27: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce49b27: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcec2b76: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x63b6dcedcba7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2bd6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcdbad5b: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x63b6dcc62428: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x63b6dce06bb8: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:510:13)",
"0x63b6dcc63484: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x63b6dd0ddec9: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:352:21)",
"0x63b6dd0d8e53: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:174:32)",
"0x63b6dcd5de42: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::new (src/do_work/air.rs:35:23)",
"0x63b6dcb95bb0: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:221:17)",
"0x63b6dcb40922: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63b6dcf6f4dd: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::SpecFold>::spec_fold (iter/adapters/zip.rs:685:25)",
"0x63b6dcf5bee7: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::fold (iter/adapters/zip.rs:249:9)",
"0x63b6dcf469b7: <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/zip.rs:103:9)",
"0x63b6dcb7e9f5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dcb7e9f5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dcb7e9f5: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x63b6dcec8bf4: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x63b6dcbdf598: winter_prover::trace::Trace::validate (src/trace/mod.rs:177:13)",
"0x63b6dd13d6cc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x63b6dd13bd9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x63b6dd13ccf8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x63b6dd13ccf8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x63b6dd139964: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x63b6dd139c13: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x63b6dcfa801d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x63b6dd0dda1e: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:168:21)",
"0x63b6dd0d8e38: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:176:34)",
"0x63b6dcf206ec: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x63b6dcd7b868: winter_prover::Prover::generate_proof (prover/src/lib.rs:514:9)",
"0x63b6dccf39d9: winter_verifier::perform_verification (verifier/src/lib.rs:183:13)",
"0x63b6dce1f777: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce1f777: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce1f777: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce1f777: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee42de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dcee0697: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2cb8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcdcd131: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x63b6dce57097: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x63b6dcbb327d: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x63b6dcd54db1: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x63b6dcb444aa: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63b6dcf84a05: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x63b6dd0ebda0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63b6dd0e75f9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63b6dd0e65a1: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63b6dd0e6eb0: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x63b6dcdcda4e: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x63b6dcca2b1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63b6dce2b7cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce2b7cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce2b7cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce2b7cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x63b6dcee686e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dced8947: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb29e8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dce09bf6: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x63b6dcd5e0bd: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:61:13)",
"0x63b6dcda9151: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x63b6dcdc0df3: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x63b6dcef4bd0: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x63b6dccf4c0f: winter_verifier::perform_verification (verifier/src/lib.rs:308:25)",
"0x63b6dccfd9d2: winter_verifier::verify (verifier/src/lib.rs:110:21)",
"0x63b6dcbe5fbb: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x63b6dcefc7a5: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x63b6dcd978e7: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:706:26)",
"0x63b6dcd7b110: winter_prover::Prover::generate_proof (prover/src/lib.rs:472:37)",
"0x63b6dcca090c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63b6dce59466: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce59466: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce59466: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dcd7a051: winter_prover::Prover::generate_proof (prover/src/lib.rs:301:32)",
"0x63b6dcca5f9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63b6dce23d37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce23d37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce23d37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce23d37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee526e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dced86a7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2adde: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcd8ed43: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:638:34)",
"0x63b6dceece5d: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x63b6dcef0406: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x63b6dcfb2caa: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x63b6dd0e22bd: <winter_air::proof::commitments::Commitments as winter_utils::serde::Deserializable>::read_from (src/proof/commitments.rs:108:22)",
"0x63b6dd0d8bdc: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:167:27)",
"0x63b6dcf19ccb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x63b6dcf19471: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x63b6dcd2df0b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x63b6dcd07d31: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x63b6dcd0b477: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x63b6dcd001bb: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x63b6dce06c93: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:505:13)",
"0x63b6dcc9d9fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63b6dce37f37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce37f37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce37f37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce37f37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee72be: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dcee02d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2a4de: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcd4f2c4: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:198:23)",
"0x63b6dccc9972: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63b6dccdda19: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63b6dceb3402: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63b6dcc91629: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x63b6dcbb260c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x63b6dce44637: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce44637: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce44637: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce44637: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee7ade: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dcee04b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2ad0e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcd79e32: winter_prover::Prover::generate_proof (prover/src/lib.rs:286:23)",
"0x63b6dcccc5e2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63b6dccdd209: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63b6dceb70e2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63b6dcbb349b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x63b6dcfc5cb7: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x63b6dcf77a27: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:272:18)",
"0x63b6dcf76297: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:166:30)",
"0x63b6dcf42299: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x63b6dce0a5ae: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x63b6dcbc889d: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x63b6dce09cce: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x63b6dce0c6c6: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x63b6dcdff9ea: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:362:9)",
"0x63b6dce59556: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce59556: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce59556: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dcf27782: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x63b6dcdb3bd9: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x63b6dcdbdcb4: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x63b6dcbdc87b: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:235:25)",
"0x63b6dcfa7a62: examples::do_work::prover::build_do_work_trace (src/do_work/prover.rs:65:5)",
"0x63b6dcd9b668: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces::{{closure}} (src/do_work/prover.rs:32:27)",
"0x63b6dcc9e70a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63b6dce43ba1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce43ba1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce43ba1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce43ba1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee6b3b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dcede0b6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2a6cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcd79c5d: winter_prover::Prover::generate_proof (prover/src/lib.rs:266:43)",
"0x63b6dcdaa018: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x63b6dcd5983e: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x63b6dd0f276e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x63b6dd0f4220: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x63b6dd0f3428: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x63b6dd0e1502: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63b6dd0e2179: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63b6dd0e3ae2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63b6dd0d9916: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:13)",
"0x63b6dc9b58fd: winterfell::main (examples/src/main.rs:80:24)",
"0x63b6dcfc2c0e: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x63b6dcfc0104: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x63b6dcd7c38b: winter_prover::Prover::generate_proof (prover/src/lib.rs:561:9)",
"0x63b6dd0df187: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x63b6dd0ddfed: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:357:24)",
"0x63b6dd0de8d2: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:215:25)",
"0x63b6dd0d915d: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:188:24)",
"0x63b6dcdff985: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:364:13)",
"0x63b6dcf72b4c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:63:9)",
"0x63b6dccf5247: winter_verifier::perform_verification (verifier/src/lib.rs:223:43)",
"0x63b6dccd5022: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63b6dccdd9e9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63b6dceb4842: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63b6dccf5673: winter_verifier::perform_verification (verifier/src/lib.rs:177:9)",
"0x63b6dcce4191: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x63b6dceefb5e: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x63b6dcf727eb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:39:30)",
"0x63b6dce26187: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce26187: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce26187: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce26187: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee729e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dcedbe27: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb297ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcef495b: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x63b6dcdb6078: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x63b6dcb4f61a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63b6dcc07e45: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x63b6dd03f6ac: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dd03f6ac: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dd03f6ac: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x63b6dd0104a9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63b6dd0104a9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63b6dd0104a9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x63b6dceeda2c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x63b6dcfca495: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x63b6dcd7cbc5: winter_prover::Prover::generate_proof (prover/src/lib.rs:598:34)",
"0x63b6dd0e1012: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63b6dd0e21a9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63b6dd0e3878: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63b6dd0d9c1a: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:13)",
"0x63b6dce30107: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce30107: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce30107: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce30107: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee54fe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dcedf4b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2c86e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcdf5d8f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x63b6dce58856: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce58856: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce58856: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x63b6dcd7a583: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:33)",
"0x63b6dcd5e08f: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:60:9)",
"0x63b6dcf3d5d7: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x63b6dcfb2e0b: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x63b6dcfc01b2: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x63b6dcca5a5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63b6dce149a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce149a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce149a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce149a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee671e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dced9517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2b37e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcdcdf51: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x63b6dcdadf58: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dcdadf58: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dcdadf58: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x63b6dcec8c17: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x63b6dcc89d36: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x63b6dcc9139c: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x63b6dcf054a2: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x63b6dcf04147: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x63b6dcd8edf7: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:645:31)",
"0x63b6dcd527be: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x63b6dcca527c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63b6dce16557: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce16557: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce16557: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce16557: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcec479d: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x63b6dcee021c: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2c4ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcd5c82a: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x63b6dcd4f210: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:197:28)",
"0x63b6dcefe872: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x63b6dcd8f3dd: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:659:26)",
"0x63b6dcd79c88: winter_prover::Prover::generate_proof (prover/src/lib.rs:268:13)",
"0x63b6dcd52d84: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x63b6dcc9fe8c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63b6dce59966: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce59966: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce59966: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dceed6ff: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x63b6dcfbf152: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x63b6dcd7ca4f: winter_prover::Prover::generate_proof (prover/src/lib.rs:590:25)",
"0x63b6dd0cee7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63b6dd03f57c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dd03f57c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dd03f57c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x63b6dd00fcc9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63b6dd00fcc9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63b6dd00fcc9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x63b6dcdfee3f: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x63b6dcf0e1f6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x63b6dcbb2c48: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x63b6dd0ef66d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x63b6dd0ea538: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x63b6dd0e8dd7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x63b6dce00239: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:536:13)",
"0x63b6dccb0982: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63b6dccdcc39: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63b6dceb5a51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63b6dcd556c9: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x63b6dcc5930d: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x63b6dce002c9: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:534:17)",
"0x63b6dce3dee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce3dee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce3dee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce3dee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee3dde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dcedac57: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2d47e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcf42994: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x63b6dcdfee2a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x63b6dcef81a4: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x63b6dccf4cbe: winter_verifier::perform_verification (verifier/src/lib.rs:314:25)",
"0x63b6dcca57bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63b6dce59876: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce59876: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce59876: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dcd79fc9: winter_prover::Prover::generate_proof (prover/src/lib.rs:299:44)",
"0x63b6dcf369fc: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x63b6dccdef24: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x63b6dcf3aca7: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x63b6dcbc677b: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x63b6dcf429a3: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x63b6dcfc682c: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x63b6dcf7863b: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:50:13)",
"0x63b6dcd7db32: winter_prover::Prover::generate_proof (prover/src/lib.rs:403:21)",
"0x63b6dcda981d: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x63b6dcd7bf26: winter_prover::Prover::generate_proof (prover/src/lib.rs:548:13)",
"0x63b6dccdec9d: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x63b6dcf32152: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x63b6dcb9f583: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x63b6dcbb1fa8: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x63b6dcf9f103: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x63b6dce127e7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce127e7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce127e7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce127e7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee673e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dcedc7f7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2d32e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcd4ed13: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:253:9)",
"0x63b6dcdb3b07: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x63b6dd0e3118: <winter_air::proof::context::Context as winter_utils::serde::Deserializable>::read_from (src/proof/context.rs:184:35)",
"0x63b6dd0d8bf7: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:27)",
"0x63b6dce17541: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce17541: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce17541: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce17541: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee590b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dcedb276: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2b45b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcbb1b0f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x63b6dcefe940: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x63b6dcd26451: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x63b6dcd2c77d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x63b6dcd2010e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x63b6dcc9b01c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63b6dce2dee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce2dee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce2dee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce2dee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcebdbcf: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x63b6dcedb849: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2ae5e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dccfd784: winter_verifier::verify (verifier/src/lib.rs:101:24)",
"0x63b6dce57067: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x63b6dcc89f3a: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x63b6dd0eb8ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63b6dd0e7b6c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dd0e7b6c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dd0e7b6c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x63b6dd0e762c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63b6dd0e762c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63b6dd0e762c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x63b6dd0e76b6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x63b6dcdcdb2b: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x63b6dcf0d6fb: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x63b6dce2f877: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce2f877: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce2f877: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce2f877: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee470e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dcee0317: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2cace: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcef8532: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x63b6dce1c727: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce1c727: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce1c727: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce1c727: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee65de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dcedc507: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2ccfe: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcd56277: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x63b6dceed698: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x63b6dcf20312: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x63b6dcd57f48: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x63b6dce45c51: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce45c51: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce45c51: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce45c51: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee3f6b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dcedea96: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2b53b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcbb1a47: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x63b6dce59b46: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce59b46: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce59b46: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dcbe5d3b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x63b6dcf03c77: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x63b6dcefbc8c: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x63b6dcf027bc: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x63b6dcfbec77: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x63b6dcf368e0: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x63b6dcfca65e: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x63b6dcdb04f8: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x63b6dccf46c1: winter_verifier::perform_verification (verifier/src/lib.rs:295:27)",
"0x63b6dce42f40: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce42f40: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce42f40: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce42f40: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x63b6dcee514b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dcedc8a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2927b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcf3abca: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x63b6dd009656: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dd009656: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dd009656: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dcce2d1c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x63b6dcb9953c: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x63b6dcdcdbf6: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x63b6dcc9b55c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63b6dce451c7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce451c7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce451c7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce451c7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee406e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dced92c7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcc7742e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcd7979f: winter_prover::Prover::generate_proof (prover/src/lib.rs:243:41)",
"0x63b6dccfe8d1: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:101:85)",
"0x63b6dcb4f432: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63b6dcc6bc0a: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:107:27)",
"0x63b6dcb88bff: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x63b6dcc699a4: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:113:9)",
"0x63b6dce59cd6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce59cd6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce59cd6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dcd7a00d: winter_prover::Prover::generate_proof (prover/src/lib.rs:300:37)",
"0x63b6dccb5392: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63b6dccdca59: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63b6dceb1b42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63b6dcc7f0d9: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:174:17)",
"0x63b6dcc7cf30: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:54:17)",
"0x63b6dcc7c670: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:40:22)",
"0x63b6dcf786e7: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:13)",
"0x63b6dcf031ab: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x63b6dcf02696: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x63b6dcd974e4: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:691:36)",
"0x63b6dcf1fea2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x63b6dce297f7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce297f7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce297f7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce297f7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee5b7e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dcedff39: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2a0ee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcd79603: winter_prover::Prover::generate_proof (prover/src/lib.rs:217:20)",
"0x63b6dcf2810a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x63b6dcd5dd16: <examples::do_work::air::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (src/do_work/air.rs:13:9)",
"0x63b6dccfd718: winter_verifier::verify (verifier/src/lib.rs:97:38)",
"0x63b6dc9b59d5: winterfell::main (examples/src/main.rs:83:11)",
"0x63b6dcca066c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63b6dce0ec21: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce0ec21: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce0ec21: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce0ec21: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee53ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dced8ac6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2d01b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcd7b6a3: winter_prover::Prover::generate_proof (prover/src/lib.rs:495:52)",
"0x63b6dcc9a2fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63b6dcfa1776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dcfa1776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dcfa1776: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x63b6dceca3b9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63b6dceca3b9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63b6dceca3b9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x63b6dcfc6846: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x63b6dcfa800c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x63b6dcc797fb: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x63b6dcbb223c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x63b6dd139d9e: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x63b6dcbb17d0: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x63b6dd0ec1a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dd0ec1a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dd0ec1a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dd0ec1a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x63b6dd0ec5ee: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dd0ec5b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dd0ed84e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dd0eb299: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x63b6dcc9c51c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63b6dcf0e2be: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dcf0e2be: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dcf0e2be: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x63b6dcec8b77: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x63b6dcc65c58: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x63b6dcd79656: winter_prover::Prover::generate_proof (prover/src/lib.rs:228:27)",
"0x63b6dd13ed49: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x63b6dd0e4d7a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x63b6dcca623c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63b6dce43977: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce43977: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce43977: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce43977: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee465e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dced8517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2960e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcd7b5d6: winter_prover::Prover::generate_proof (prover/src/lib.rs:491:51)",
"0x63b6dd0ddd02: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:348:22)",
"0x63b6dcc9b2bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63b6dce53ffe: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce53ffe: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce53ffe: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce53ffe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x63b6dcee543b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dcedcb76: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcf7e10b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcbab01c: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x63b6dcfa4e2b: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x63b6dcefb76a: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x63b6dcb42c7a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63b6dcf1a02b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x63b6dcf19681: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x63b6dcd2d12b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x63b6dcd028bd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x63b6dcbcbf89: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x63b6dcda7a00: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x63b6dcb8fb09: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:211:31)",
"0x63b6dcb46d3a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63b6dcc370a8: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x63b6dcb103ba: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x63b6dcb3063a: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x63b6dcf75fd0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:149:33)",
"0x63b6dcf799e0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:122:17)",
"0x63b6dcc59436: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x63b6dcc94fee: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x63b6dcbb242b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x63b6dcca0e4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63b6dcb7e2ec: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dcb7e2ec: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dcb7e2ec: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x63b6dcecaf19: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63b6dcecaf19: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63b6dcecaf19: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x63b6dcf435d6: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x63b6dcc7bbd9: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:82:31)",
"0x63b6dcb51553: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63b6dce1e227: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce1e227: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce1e227: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce1e227: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee423e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dcedbd47: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2cbee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcdce10f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x63b6dcf3d51a: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x63b6dcf75f6c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:148:31)",
"0x63b6dcccb712: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63b6dccdd149: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63b6dceb4122: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63b6dcdb3c91: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x63b6dcbe31f6: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x63b6dcfb2c8f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x63b6dce27666: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce27666: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce27666: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce27666: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x63b6dcee3b6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dcedc5dc: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dceeb9be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dceededb: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x63b6dcdc3a48: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x63b6dcdcddda: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x63b6dcf7958d: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:33)",
"0x63b6dcd7dbd3: winter_prover::Prover::generate_proof (prover/src/lib.rs:407:21)",
"0x63b6dcd7d808: winter_prover::Prover::generate_proof (prover/src/lib.rs:440:13)",
"0x63b6dcf0c835: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x63b6dcc621d0: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x63b6dcb968e9: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:641:17)",
"0x63b6dcfa895b: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x63b6dcdaf9cc: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x63b6dcbdb47b: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x63b6dcd558b6: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x63b6dcd5976c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x63b6dcbe6303: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x63b6dcfb2c25: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x63b6dcbce22a: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x63b6dcbce307: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x63b6dccf5156: winter_verifier::perform_verification (verifier/src/lib.rs:225:13)",
"0x63b6dce4c9a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce4c9a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce4c9a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce4c9a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee73de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dcede4c9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2cede: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcbd95e0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x63b6dcdb001f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x63b6dcc67f5f: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x63b6dcfac35d: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x63b6dd0df709: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x63b6dd0e04bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63b6dd0e3776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dd0e3776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dd0e3776: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dcfbebcd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x63b6dcd7d7ed: winter_prover::Prover::generate_proof (prover/src/lib.rs:439:13)",
"0x63b6dce28f91: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce28f91: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce28f91: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce28f91: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee3edb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dcedd626: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb294ab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcd8eba6: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:630:42)",
"0x63b6dcf0c6ed: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x63b6dcfa4e40: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x63b6dcf1a6eb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x63b6dcf19891: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x63b6dcd2cf4b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x63b6dcd029dd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x63b6dcbcb83f: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x63b6dcda76c3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x63b6dcef589e: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x63b6dcf9f08f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x63b6dd0de2b9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x63b6dd0de70b: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:211:22)",
"0x63b6dcfc2ab6: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x63b6dcf4241a: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x63b6dcfa782c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x63b6dcdafb58: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x63b6dcdbfa92: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x63b6dcb964c6: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:493:32)",
"0x63b6dcb4c09a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63b6dcc192a2: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x63b6dcb17c9b: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x63b6dcb34906: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x63b6dccbeca2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63b6dccdd539: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63b6dceb5b42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63b6dcee8ffc: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x63b6dce09d4a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x63b6dcc8a04d: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x63b6dcd7ac77: winter_prover::Prover::generate_proof (prover/src/lib.rs:442:35)",
"0x63b6dcbc7e22: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x63b6dcc5d5c4: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x63b6dcf7dd04: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x63b6dd0e2784: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:155:27)",
"0x63b6dcf794c0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:28)",
"0x63b6dcef4bf3: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x63b6dcef1af6: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x63b6dccf4d3a: winter_verifier::perform_verification (verifier/src/lib.rs:316:28)",
"0x63b6dcf435ed: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x63b6dcf43440: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x63b6dceca039: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63b6dceca039: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63b6dceca039: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x63b6dcc9f94c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63b6dce13ae7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce13ae7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce13ae7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce13ae7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee553e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dcedfd37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2bd4e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcd9b619: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces (src/do_work/prover.rs:30:9)",
"0x63b6dcd18d8f: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x63b6dcd24711: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x63b6dcd1fcaa: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x63b6dcc96c0c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63b6dce38b31: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce38b31: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce38b31: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce38b31: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee60ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dceda5a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2be5b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcc65967: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x63b6dce18197: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce18197: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce18197: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce18197: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee6f6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dced8599: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2bc6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcef9e47: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x63b6dcf20580: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x63b6dcca4a9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63b6dce3e111: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce3e111: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce3e111: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce3e111: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee39fb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dcedccc6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2b86b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcc7ba5c: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:82:9)",
"0x63b6dcc7ef72: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:169:36)",
"0x63b6dcd597d0: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x63b6dcf79819: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:129:9)",
"0x63b6dcf0ebc2: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x63b6dcdac240: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x63b6dcf22bb1: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x63b6dcf27a51: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x63b6dcf27c60: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x63b6dcf444cb: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x63b6dcf3aa9a: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x63b6dccca842: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63b6dccdd419: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63b6dceb2ba2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63b6dcc9157e: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x63b6dccb7622: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63b6dccdd839: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63b6dceb6252: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63b6dcf27db8: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x63b6dcb9f6f1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x63b6dcfca6d0: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x63b6dcc97bbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63b6dce20991: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce20991: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce20991: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce20991: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee637b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dcedbed6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2978b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dccf3cd2: winter_verifier::perform_verification (verifier/src/lib.rs:212:41)",
"0x63b6dd0f981b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x63b6dd0f9541: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x63b6dd0f5d7b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x63b6dd0f03a1: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x63b6dd0f0b37: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x63b6dd0eb6db: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x63b6dcda9833: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x63b6dcbad2ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x63b6dccf4810: winter_verifier::perform_verification (verifier/src/lib.rs:302:9)",
"0x63b6dce4b451: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce4b451: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce4b451: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce4b451: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee47db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dced9136: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2a65b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcbb197f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x63b6dcb9cc8d: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x63b6dccfa869: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:214:32)",
"0x63b6dcb3f603: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63b6dcd7d7ad: winter_prover::Prover::generate_proof (prover/src/lib.rs:438:13)",
"0x63b6dcefc866: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x63b6dce30781: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce30781: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce30781: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce30781: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee5dab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dceda306: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2a09b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcd8ec73: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:634:36)",
"0x63b6dcfbec96: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x63b6dd0f99cb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x63b6dd0f96a1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x63b6dd0f5c9b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x63b6dd0f0471: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x63b6dd0f0af7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x63b6dd0eb72b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x63b6dcc60499: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x63b6dce1a5b7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce1a5b7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce1a5b7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce1a5b7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee3b0e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dcedba37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2b2be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcdb3c76: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x63b6dcdb3a53: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x63b6dce3f2f0: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce3f2f0: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce3f2f0: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce3f2f0: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x63b6dcee35bb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dcededa6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2adbb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcf32075: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x63b6dcf9f184: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x63b6dcdce010: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x63b6dcd5db27: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x63b6dcd5b8cd: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x63b6dccd4152: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63b6dccdd389: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63b6dceb5ff2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63b6dcfb2f89: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x63b6dccbe7b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63b6dccdcd89: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63b6dceb2f32: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63b6dccf548c: winter_verifier::perform_verification (verifier/src/lib.rs:182:9)",
"0x63b6dcbadd3c: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x63b6dccf498e: winter_verifier::perform_verification (verifier/src/lib.rs:303:42)",
"0x63b6dccd9f22: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63b6dccdcfc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63b6dceb6aaf: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63b6dcf325d9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x63b6dce156b1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce156b1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce156b1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce156b1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee371b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dcedce16: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2c23b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcb9f409: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x63b6dce4bf17: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce4bf17: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce4bf17: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce4bf17: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee5b2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dcedb147: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2aa9e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcd79416: winter_prover::Prover::generate_proof (prover/src/lib.rs:205:38)",
"0x63b6dce2d787: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce2d787: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce2d787: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce2d787: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee467e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dcedb807: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2d71e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcbdd33a: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:132:32)",
"0x63b6dcbce23f: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x63b6dd0dd862: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:164:22)",
"0x63b6dcf31d42: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x63b6dcc9791c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63b6dce21dc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce21dc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce21dc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce21dc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcec36b3: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x63b6dced8bc9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2b01e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcd79f62: winter_prover::Prover::generate_proof (prover/src/lib.rs:291:36)",
"0x63b6dcf20810: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x63b6dccc1912: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63b6dccdd119: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63b6dceb294f: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63b6dceedd8a: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x63b6dcd55be1: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x63b6dcd58211: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x63b6dcbd99cb: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x63b6dcb4632c: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63b6dcdaf954: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x63b6dcce2f79: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x63b6dce17317: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce17317: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce17317: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce17317: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee506e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dcee0587: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2947e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcd54c6a: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x63b6dcf32524: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x63b6dcf202ef: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x63b6dcbb33ef: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x63b6dcef81bf: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x63b6dcef4853: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x63b6dcbdd511: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:132:51)",
"0x63b6dcb3fa1a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63b6dcf82da5: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x63b6dcd52d29: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x63b6dcdcd1a5: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x63b6dcfbee9d: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x63b6dd0e075c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63b6dd0e3726: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dd0e3726: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dd0e3726: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dd0d8d52: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:172:33)",
"0x63b6dcd4f723: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:200:34)",
"0x63b6dcb3eb0a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63b6dcc121bf: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x63b6dcef83d9: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x63b6dcf3d42f: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x63b6dcf3d504: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x63b6dcf9f450: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x63b6dcf0126a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x63b6dcefe903: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x63b6dcd57ca7: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x63b6dcdf9d61: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x63b6dccf433e: winter_verifier::perform_verification (verifier/src/lib.rs:272:24)",
"0x63b6dcef4693: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x63b6dcf9f3fb: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x63b6dcf430c6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dcf430c6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dcf430c6: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x63b6dcd52ca3: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x63b6dcd50f17: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x63b6dcb905ac: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:293:57)",
"0x63b6dcf1adab: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x63b6dcf197e1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x63b6dcd2d4eb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x63b6dcd0279d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x63b6dcbcb0fc: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x63b6dcbc8911: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x63b6dcc9d4bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63b6dce504c8: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce504c8: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce504c8: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce504c8: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x63b6dcee772e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dcede407: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcfc717e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dce0ae5c: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x63b6dcc89d7b: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x63b6dcc9a83c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63b6dce59786: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce59786: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce59786: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dcd79f85: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:39)",
"0x63b6dce14141: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce14141: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce14141: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63b6dce14141: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63b6dcee6f9b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63b6dcedb346: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63b6dcb2988b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63b6dcd794e3: winter_prover::Prover::generate_proof (prover/src/lib.rs:209:39)",
"0x63b6dce58e1c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63b6dce58e1c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63b6dce58e1c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x63b6dcec9e79: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63b6dcec9e79: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63b6dcec9e79: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x63b6dcd7b6be: winter_prover::Prover::generate_proof (prover/src/lib.rs:500:39)",
"0x63b6dcb9ccb0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x63b6dcef5848: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x63b6dcfca6eb: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x63b6dcc65a1e: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)"
]
}