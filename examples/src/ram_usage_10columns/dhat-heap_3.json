{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell do-work -n 3 -l 65536",
"pid": 22465,
"tg": 30915767,
"te": 39606078,
"pps": [
{
"tb": 96,
"tbk": 3,
"tl": 2,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5
]
},
{
"tb": 120,
"tbk": 1,
"tl": 30066124,
"mb": 120,
"mbk": 1,
"gb": 120,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
6,
7,
8,
9,
10,
11,
12,
13,
14,
15
]
},
{
"tb": 72,
"tbk": 1,
"tl": 8571412,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
16,
17,
18,
19,
20,
21,
22,
23
]
},
{
"tb": 480,
"tbk": 4,
"tl": 209,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
26,
27,
28,
29,
30
]
},
{
"tb": 1728,
"tbk": 6,
"tl": 133,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
31,
32,
33,
34,
35,
36,
37,
38,
39
]
},
{
"tb": 256,
"tbk": 1,
"tl": 7968,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
41,
42,
43,
44,
45,
46,
47
]
},
{
"tb": 3696,
"tbk": 18,
"tl": 554,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
58
]
},
{
"tb": 256,
"tbk": 1,
"tl": 687,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
48,
49,
59,
60,
61,
62,
57,
58,
63
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 754254,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
41,
42,
43,
64,
65,
66,
67
]
},
{
"tb": 64,
"tbk": 1,
"tl": 505877,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
70,
71,
72,
73,
74
]
},
{
"tb": 24,
"tbk": 1,
"tl": 8735,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
76,
77,
78
]
},
{
"tb": 24,
"tbk": 1,
"tl": 624966,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
79,
80,
81,
82,
83,
84,
85,
86,
87,
21
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1026192,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
88,
89,
90,
91,
92,
93,
94,
95,
96
]
},
{
"tb": 13857,
"tbk": 1,
"tl": 8727,
"mb": 13857,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
97,
98,
99,
100,
101,
102,
103,
104,
105,
106
]
},
{
"tb": 32,
"tbk": 1,
"tl": 16,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
107,
108,
109,
110,
111,
112,
113,
114,
115
]
},
{
"tb": 288,
"tbk": 3,
"tl": 37,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
116,
117,
118,
119,
120,
121,
122,
123,
124
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1772,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
48,
49,
125,
126,
127,
128,
129,
130,
131,
132
]
},
{
"tb": 144,
"tbk": 1,
"tl": 39520989,
"mb": 144,
"mbk": 1,
"gb": 144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
6,
133,
134,
135,
136,
137,
138,
139,
21
]
},
{
"tb": 201326592,
"tbk": 3,
"tl": 10760123,
"mb": 67108864,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
140,
141,
142,
143,
144,
145,
146,
147
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 538,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
148,
149,
150,
151,
152,
153,
154
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1783,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
48,
49,
155,
156,
157,
158,
159,
160,
161,
162
]
},
{
"tb": 224,
"tbk": 1,
"tl": 7660,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
163,
164,
165,
166,
167
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 192455,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
168,
169,
170,
171,
172,
173,
174,
175
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 135432,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
41,
42,
43,
64,
176,
177,
178
]
},
{
"tb": 15872,
"tbk": 124,
"tl": 122,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
41,
42,
43,
44,
179,
180,
167
]
},
{
"tb": 15360,
"tbk": 1,
"tl": 8743,
"mb": 15360,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
97,
98,
99,
100,
101,
102,
103,
104,
181,
77
]
},
{
"tb": 512,
"tbk": 1,
"tl": 10,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
182,
183,
184,
185,
186,
187,
188,
189
]
},
{
"tb": 1152,
"tbk": 6,
"tl": 211,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
190,
191,
192,
193,
194,
195,
196,
197,
198
]
},
{
"tb": 56,
"tbk": 1,
"tl": 2760,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
199,
200,
47,
4,
5
]
},
{
"tb": 33554432,
"tbk": 524288,
"tl": 16605152,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
201,
202,
203,
204,
205,
206,
207,
208,
209
]
},
{
"tb": 384,
"tbk": 6,
"tl": 9317995,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
210,
211,
212,
213,
214
]
},
{
"tb": 1152,
"tbk": 3,
"tl": 4660015,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
215,
216,
217,
218,
219,
220,
221,
222,
223
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
224,
225,
226,
4,
5
]
},
{
"tb": 48,
"tbk": 3,
"tl": 179,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
227,
228,
229,
230,
231,
232
]
},
{
"tb": 25165824,
"tbk": 12,
"tl": 40737800,
"mb": 25165824,
"mbk": 12,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
41,
42,
43,
64,
233,
234,
235
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 46,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
41,
42,
43,
64,
236,
237,
238
]
},
{
"tb": 96,
"tbk": 1,
"tl": 6256,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
239,
240,
241,
242,
243
]
},
{
"tb": 96,
"tbk": 1,
"tl": 6735,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
244,
245,
246,
247,
232
]
},
{
"tb": 960,
"tbk": 3,
"tl": 38,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
41,
42,
43,
44,
248,
249,
47
]
},
{
"tb": 15360,
"tbk": 3,
"tl": 12017,
"mb": 15360,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
41,
42,
43,
44,
250,
251,
252
]
},
{
"tb": 24,
"tbk": 2,
"tl": 2,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
97,
98,
99,
100,
101,
102,
103,
253,
254,
255
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 624748,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
256,
257,
258,
259,
260,
261,
262,
83,
84,
85,
86
]
},
{
"tb": 24,
"tbk": 1,
"tl": 260,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
48,
49,
263,
264,
265,
266,
267,
268,
269,
270
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 39515657,
"mb": 2097152,
"mbk": 1,
"gb": 2097152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
41,
42,
43,
64,
236,
271,
272
]
},
{
"tb": 6291456,
"tbk": 393216,
"tl": 211333,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
256,
257,
258,
259,
260,
261,
273,
274,
275
]
},
{
"tb": 480,
"tbk": 4,
"tl": 10256,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
26,
27,
28,
276,
277
]
},
{
"tb": 32,
"tbk": 1,
"tl": 8490,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
168,
169,
170,
171,
278,
279,
280,
47
]
},
{
"tb": 96,
"tbk": 1,
"tl": 3607823,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
239,
240,
241,
281,
21
]
},
{
"tb": 256,
"tbk": 4,
"tl": 132112,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
41,
42,
43,
64,
236,
237,
282
]
},
{
"tb": 512,
"tbk": 1,
"tl": 18,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
41,
42,
43,
283,
284,
232,
4
]
},
{
"tb": 144,
"tbk": 3,
"tl": 1062105,
"mb": 144,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
285,
286,
287,
288,
289,
290
]
},
{
"tb": 480,
"tbk": 4,
"tl": 209,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
26,
27,
28,
29,
291
]
},
{
"tb": 80,
"tbk": 1,
"tl": 6231,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
41,
42,
43,
292,
293,
232,
4
]
},
{
"tb": 83886080,
"tbk": 524288,
"tl": 6778703,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
256,
257,
258,
294,
295,
296,
297,
298,
299
]
},
{
"tb": 3145728,
"tbk": 3,
"tl": 1240746,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
41,
42,
43,
64,
236,
237,
300
]
},
{
"tb": 480,
"tbk": 4,
"tl": 6214,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
26,
27,
28,
276,
301
]
},
{
"tb": 2880,
"tbk": 12,
"tl": 36,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
70,
71,
72,
302,
303
]
},
{
"tb": 576,
"tbk": 4,
"tl": 1630,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
304,
305,
306,
307,
308,
309,
310
]
},
{
"tb": 896,
"tbk": 6,
"tl": 8620,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
70,
71,
72,
311,
312
]
},
{
"tb": 48,
"tbk": 3,
"tl": 314,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
227,
228,
229,
313,
314,
315
]
},
{
"tb": 25600,
"tbk": 64,
"tl": 78424,
"mb": 15680,
"mbk": 33,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
316,
317,
318,
319,
320,
321,
322,
323
]
},
{
"tb": 3264,
"tbk": 6,
"tl": 76,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
324,
325,
326,
327,
328,
329
]
},
{
"tb": 168,
"tbk": 4,
"tl": 12492589,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
330,
331,
332,
333,
334,
335,
336,
337,
338
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3498,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
339,
340,
341,
342,
343,
344,
345,
346
]
},
{
"tb": 240,
"tbk": 3,
"tl": 4658953,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
347,
348,
349,
350,
351,
352,
353,
354,
355
]
},
{
"tb": 72,
"tbk": 1,
"tl": 417909,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
356,
357,
358,
359,
360,
361,
362,
363,
364
]
},
{
"tb": 963,
"tbk": 3,
"tl": 26136,
"mb": 963,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
97,
98,
99,
100,
101,
102,
103,
104,
365,
366
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1770,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
26,
27,
28,
367,
368
]
},
{
"tb": 160,
"tbk": 1,
"tl": 6800,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
369,
370,
371,
372,
47
]
},
{
"tb": 96,
"tbk": 1,
"tl": 155,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
239,
240,
241,
373,
374
]
},
{
"tb": 24,
"tbk": 1,
"tl": 23,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
48,
49,
375,
376,
377,
378,
379,
380,
381,
382
]
},
{
"tb": 288,
"tbk": 1,
"tl": 31852,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
383,
384,
385,
386,
387
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
97,
98,
99,
100,
101,
102,
103,
253,
388,
255
]
},
{
"tb": 96,
"tbk": 3,
"tl": 4660334,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
389,
390,
391,
392,
393,
394,
395,
396,
397,
398
]
},
{
"tb": 288,
"tbk": 6,
"tl": 20688103,
"mb": 288,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
79,
399,
400,
401,
402,
403,
404,
405,
406
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1303,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
256,
257,
258,
294,
295,
296,
407,
310,
408
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 4808,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
97,
409,
410,
411,
412,
413,
414,
21
]
},
{
"tb": 96,
"tbk": 3,
"tl": 275,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
389,
390,
391,
392,
393,
394,
395,
396,
397,
415
]
},
{
"tb": 480,
"tbk": 3,
"tl": 6886,
"mb": 480,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
304,
305,
306,
307,
416,
417,
418
]
},
{
"tb": 96,
"tbk": 1,
"tl": 88,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
419,
420,
421,
422,
423,
424,
425,
426,
427
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2170,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
339,
340,
341,
342,
428,
30,
414,
21
]
},
{
"tb": 960,
"tbk": 6,
"tl": 2090177,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
148,
149,
150,
151,
152,
153,
429
]
},
{
"tb": 144,
"tbk": 3,
"tl": 22146,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
430,
431,
21,
22,
23
]
},
{
"tb": 24125,
"tbk": 4,
"tl": 34690,
"mb": 24125,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
97,
98,
99,
100,
101,
102,
103,
104,
432,
433
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2430,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
256,
257,
258,
294,
295,
296,
434,
47,
4
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 7179,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
435,
436,
437,
438,
439
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1749,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
48,
49,
440,
441,
442,
443,
444,
445,
446,
447
]
},
{
"tb": 15360,
"tbk": 1,
"tl": 3019,
"mb": 15360,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
41,
42,
43,
44,
250,
448,
252
]
},
{
"tb": 512,
"tbk": 1,
"tl": 3679850,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
449,
450,
451,
452,
21
]
},
{
"tb": 32,
"tbk": 1,
"tl": 3607812,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
26,
27,
28,
453,
21
]
},
{
"tb": 96,
"tbk": 3,
"tl": 118553650,
"mb": 96,
"mbk": 3,
"gb": 96,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
1,
454,
455,
456,
457,
458,
459
]
},
{
"tb": 1344,
"tbk": 9,
"tl": 1517677,
"mb": 768,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
70,
71,
72,
460,
74
]
},
{
"tb": 402653184,
"tbk": 3,
"tl": 94387146,
"mb": 402653184,
"mbk": 3,
"gb": 402653184,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
6,
140,
141,
142,
143,
144,
461,
462,
463
]
},
{
"tb": 192,
"tbk": 1,
"tl": 8716,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
464,
465,
466,
467,
78
]
},
{
"tb": 192,
"tbk": 1,
"tl": 6718,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
468,
469,
470,
471,
232
]
},
{
"tb": 64,
"tbk": 1,
"tl": 6236,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
70,
71,
72,
73,
243
]
},
{
"tb": 5904,
"tbk": 6,
"tl": 164,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
472,
473,
474,
475,
476,
477
]
},
{
"tb": 96,
"tbk": 6,
"tl": 4660698,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
478,
479,
480,
481,
482,
483,
484,
485
]
},
{
"tb": 72,
"tbk": 3,
"tl": 1874922,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
486,
487,
488,
489,
490,
491,
492,
493,
494,
495,
496,
497
]
},
{
"tb": 992,
"tbk": 4,
"tl": 4180,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
498,
499,
500,
501,
502,
503,
504,
505,
506,
507,
310
]
},
{
"tb": 160,
"tbk": 1,
"tl": 8479,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
168,
169,
170,
171,
278,
508,
280,
47
]
},
{
"tb": 8,
"tbk": 1,
"tl": 624598,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
48,
49,
50,
51,
52,
53,
54,
55,
509,
87,
21
]
},
{
"tb": 13824,
"tbk": 32,
"tl": 90626,
"mb": 13824,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
168,
169,
170,
171,
278,
510,
511,
252
]
},
{
"tb": 288,
"tbk": 3,
"tl": 44,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
512,
513,
514,
21,
22,
23
]
},
{
"tb": 72,
"tbk": 1,
"tl": 8571402,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
79,
515,
516,
517,
518,
21,
22,
23
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 210684,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
168,
169,
170,
171,
172,
519,
520,
387
]
},
{
"tb": 111360,
"tbk": 425,
"tl": 229404,
"mb": 16384,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
168,
521,
522,
523,
524,
525,
526,
527,
528
]
},
{
"tb": 192,
"tbk": 3,
"tl": 477,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
70,
71,
72,
529,
530
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 1419812,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
168,
169,
170,
171,
172,
531,
532,
533
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1913,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
107,
108,
109,
110,
111,
112,
113,
114,
534
]
},
{
"tb": 720,
"tbk": 6,
"tl": 10455580,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
535,
536,
21,
22,
23
]
},
{
"tb": 992,
"tbk": 7,
"tl": 2262130,
"mb": 992,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
537,
538,
539,
540,
541,
542,
543,
544
]
},
{
"tb": 24,
"tbk": 1,
"tl": 3299,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
545,
546,
547,
548,
549,
550,
551,
552,
553
]
},
{
"tb": 96,
"tbk": 1,
"tl": 54,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
239,
240,
241,
554,
47
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
224,
225,
255,
139,
21,
22
]
},
{
"tb": 96,
"tbk": 3,
"tl": 26125,
"mb": 96,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
97,
98,
99,
100,
101,
102,
103,
104,
555,
366
]
},
{
"tb": 102144,
"tbk": 224,
"tl": 63318,
"mb": 26448,
"mbk": 58,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
556,
557,
558,
559,
560,
561
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 331983,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
256,
257,
258,
294,
295,
296,
562,
563,
21
]
},
{
"tb": 48,
"tbk": 3,
"tl": 110183,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
304,
305,
306,
307,
564,
514,
21
]
},
{
"tb": 144,
"tbk": 1,
"tl": 2315,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
565,
566,
567,
568,
569,
570,
571,
572,
573
]
},
{
"tb": 144,
"tbk": 6,
"tl": 20911178,
"mb": 144,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
486,
487,
488,
489,
490,
491,
492,
493,
574,
575
]
},
{
"tb": 85472,
"tbk": 1665,
"tl": 3142360,
"mb": 17024,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
576,
577,
578,
579,
580,
581,
582
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1791,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
239,
240,
241,
583,
414
]
},
{
"tb": 256,
"tbk": 1,
"tl": 651,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
48,
49,
59,
60,
61,
62,
57,
584,
585
]
},
{
"tb": 96,
"tbk": 1,
"tl": 505901,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
239,
240,
241,
242,
74
]
},
{
"tb": 268435456,
"tbk": 4,
"tl": 8306890,
"mb": 67108864,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
148,
149,
150,
151,
152,
153,
586
]
},
{
"tb": 96,
"tbk": 1,
"tl": 3129,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
587,
588,
589,
590,
591
]
},
{
"tb": 12583008,
"tbk": 9,
"tl": 229767,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
41,
42,
43,
64,
592,
593,
594
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2388557,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
79,
595,
596,
597,
598,
599,
600,
601,
602
]
},
{
"tb": 144,
"tbk": 1,
"tl": 624988,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
116,
603,
604,
605,
495,
496,
497,
606,
87,
21
]
},
{
"tb": 96,
"tbk": 3,
"tl": 19271,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
607,
431,
21,
22,
23
]
},
{
"tb": 96,
"tbk": 3,
"tl": 524,
"mb": 96,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
608,
609,
610,
611,
612
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 3826,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
41,
42,
43,
44,
250,
613,
345
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1309,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
498,
499,
500,
501,
502,
503,
504,
505,
614,
310,
408
]
},
{
"tb": 48,
"tbk": 3,
"tl": 187,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
227,
615,
229,
230,
231,
232
]
},
{
"tb": 968,
"tbk": 4,
"tl": 1301,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
48,
49,
59,
60,
61,
62,
57,
616,
617
]
},
{
"tb": 48,
"tbk": 3,
"tl": 241,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
148,
149,
150,
151,
152,
153,
618
]
},
{
"tb": 192,
"tbk": 3,
"tl": 494,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
70,
71,
72,
619,
530
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2874,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
79,
80,
81,
82,
83,
84,
85,
620,
621,
591
]
},
{
"tb": 6072,
"tbk": 11,
"tl": 4433,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
622,
623,
624,
625,
626,
627
]
},
{
"tb": 72,
"tbk": 1,
"tl": 30937518,
"mb": 72,
"mbk": 1,
"gb": 72,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
6,
628,
629,
630,
631,
632,
633,
634,
635,
636
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 625,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
41,
42,
43,
64,
637,
638,
309
]
},
{
"tb": 384,
"tbk": 1,
"tl": 8764,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
639,
640,
641,
642,
78
]
},
{
"tb": 32,
"tbk": 1,
"tl": 3607806,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
26,
27,
28,
643,
21
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 1314904,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
168,
169,
170,
171,
172,
173,
174,
644
]
},
{
"tb": 3536,
"tbk": 34,
"tl": 495,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
498,
645,
646,
647,
648,
649,
650
]
},
{
"tb": 720,
"tbk": 3,
"tl": 23336506,
"mb": 720,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
79,
80,
81,
82,
83,
84,
85,
651,
652,
653
]
},
{
"tb": 3968,
"tbk": 4,
"tl": 21836,
"mb": 3968,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
168,
654,
655,
656,
657,
658,
180,
167
]
},
{
"tb": 13800,
"tbk": 25,
"tl": 6435,
"mb": 3864,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
622,
623,
624,
659,
660,
661
]
},
{
"tb": 73880,
"tbk": 39,
"tl": 42627,
"mb": 36992,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
576,
662,
663,
664,
665
]
},
{
"tb": 6291456,
"tbk": 3,
"tl": 10823334,
"mb": 6291456,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
148,
149,
150,
151,
152,
153,
666
]
},
{
"tb": 2960,
"tbk": 12,
"tl": 1311,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
498,
499,
667,
668,
669,
670,
671,
672,
673,
674
]
},
{
"tb": 512,
"tbk": 1,
"tl": 46,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
256,
257,
258,
259,
260,
261,
675,
374,
232
]
},
{
"tb": 512,
"tbk": 1,
"tl": 31,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
41,
42,
43,
676,
284,
232,
4
]
},
{
"tb": 144,
"tbk": 3,
"tl": 1979912,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
304,
305,
306,
307,
677,
678,
679
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4009,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
680,
681,
682,
683,
252
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4613,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
684,
685,
686,
687,
688,
689,
690,
691
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 5810,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
576,
662,
663,
664,
692
]
},
{
"tb": 480,
"tbk": 3,
"tl": 6897,
"mb": 480,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
304,
305,
306,
307,
693,
417,
418
]
},
{
"tb": 3840,
"tbk": 16,
"tl": 2467,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
70,
71,
72,
694,
695
]
},
{
"tb": 24,
"tbk": 1,
"tl": 30066074,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
6,
696,
697,
698,
699,
700,
701,
702,
703,
704
]
},
{
"tb": 96,
"tbk": 1,
"tl": 7656,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
239,
240,
241,
705,
167
]
},
{
"tb": 160,
"tbk": 1,
"tl": 6683,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
706,
707,
708,
709,
710,
711,
712,
713,
714
]
},
{
"tb": 216,
"tbk": 9,
"tl": 189,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
715,
716,
717,
718,
719,
720,
721,
722,
723
]
},
{
"tb": 3145728,
"tbk": 3,
"tl": 218260,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
148,
149,
150,
151,
152,
153,
724
]
},
{
"tb": 2400,
"tbk": 12,
"tl": 228,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
498,
725,
726,
727,
728,
729,
730
]
},
{
"tb": 72,
"tbk": 1,
"tl": 8434,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
731,
732,
21,
22,
23
]
},
{
"tb": 6291456,
"tbk": 3,
"tl": 2678454,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
41,
42,
43,
64,
176,
733,
734
]
},
{
"tb": 12583008,
"tbk": 9,
"tl": 230352,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
41,
42,
43,
64,
637,
735,
593
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 24355,
"mb": 15872,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
41,
42,
43,
736,
180,
167,
47
]
},
{
"tb": 16,
"tbk": 1,
"tl": 624976,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
256,
257,
258,
259,
260,
261,
737,
494,
495,
496,
497
]
},
{
"tb": 72,
"tbk": 3,
"tl": 289,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
738,
739,
397,
415,
231,
232
]
},
{
"tb": 72,
"tbk": 1,
"tl": 625950,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
79,
80,
81,
82,
83,
84,
85,
740,
87,
21
]
},
{
"tb": 256,
"tbk": 1,
"tl": 11,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
498,
499,
500,
501,
502,
503,
504,
505,
741,
742,
21
]
},
{
"tb": 96,
"tbk": 1,
"tl": 148192,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
239,
240,
241,
743,
431
]
},
{
"tb": 288,
"tbk": 3,
"tl": 83,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
512,
229,
313,
314,
315,
21
]
},
{
"tb": 144,
"tbk": 6,
"tl": 9319946,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
486,
487,
488,
489,
490,
491,
492,
493,
744,
745
]
},
{
"tb": 256,
"tbk": 1,
"tl": 8655,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
97,
98,
99,
100,
101,
102,
103,
104,
746,
747
]
},
{
"tb": 2736,
"tbk": 6,
"tl": 2633,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
556,
557,
558,
748,
749,
750
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 2432,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
140,
751,
752,
753,
754,
755,
756,
757,
758
]
},
{
"tb": 251658240,
"tbk": 1048576,
"tl": 5672858,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
256,
257,
258,
259,
260,
261,
759,
760,
298
]
},
{
"tb": 216,
"tbk": 1,
"tl": 8582017,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
761,
762,
763,
764,
765,
766,
767,
768,
769
]
},
{
"tb": 2904,
"tbk": 4,
"tl": 4132,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
339,
340,
341,
342,
428,
770,
771,
742
]
},
{
"tb": 144,
"tbk": 1,
"tl": 2278,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
772,
773,
774,
775,
776,
777,
778,
779,
780
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 1648,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
148,
149,
150,
151,
152,
153,
781
]
},
{
"tb": 13857,
"tbk": 1,
"tl": 8738,
"mb": 13857,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
97,
98,
99,
100,
101,
102,
103,
104,
782,
77
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 39517684,
"mb": 524288,
"mbk": 1,
"gb": 524288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
41,
42,
43,
64,
236,
783,
784
]
},
{
"tb": 2097152,
"tbk": 2,
"tl": 4773586,
"mb": 2097152,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
256,
257,
258,
294,
295,
296,
785,
786,
787
]
},
{
"tb": 48,
"tbk": 1,
"tl": 69,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
88,
788,
789,
790,
791,
792,
793,
794,
21,
22
]
},
{
"tb": 15360,
"tbk": 3,
"tl": 20740,
"mb": 15360,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
97,
409,
410,
411,
795,
368,
591,
732
]
},
{
"tb": 512,
"tbk": 1,
"tl": 15,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
41,
42,
43,
64,
637,
796,
284
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 3166,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
140,
141,
142,
143,
797,
771,
742,
21
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 3723,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
576,
662,
663,
664,
798
]
},
{
"tb": 512,
"tbk": 1,
"tl": 53,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
799,
800,
801,
802,
803,
804,
805,
806
]
},
{
"tb": 24000,
"tbk": 120,
"tl": 621251,
"mb": 24000,
"mbk": 120,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
168,
169,
170,
171,
278,
510,
807,
180
]
},
{
"tb": 9584640,
"tbk": 4,
"tl": 214506,
"mb": 9584640,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
41,
42,
43,
64,
808,
809,
387
]
},
{
"tb": 15872,
"tbk": 124,
"tl": 104,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
810,
811,
812,
813,
814,
815,
816,
817
]
},
{
"tb": 72,
"tbk": 1,
"tl": 8748,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
818,
819,
820,
821,
822,
823,
78
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 48260,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
256,
257,
258,
259,
260,
261,
759,
824,
21
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 153669,
"mb": 1179648,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
41,
42,
43,
64,
825,
826,
387
]
},
{
"tb": 13824,
"tbk": 32,
"tl": 109488,
"mb": 13824,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
168,
169,
170,
171,
278,
510,
344,
345
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 3496,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
168,
827,
828,
829,
830,
831,
832,
833,
834
]
},
{
"tb": 1248,
"tbk": 12,
"tl": 324,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
498,
645,
646,
647,
835,
836,
837
]
},
{
"tb": 960,
"tbk": 6,
"tl": 2090151,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
148,
149,
150,
151,
152,
153,
838
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2164,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
168,
654,
655,
656,
657,
839,
30,
414
]
},
{
"tb": 96,
"tbk": 1,
"tl": 76,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
419,
840,
841,
842,
843,
844,
845,
846,
847
]
},
{
"tb": 96,
"tbk": 3,
"tl": 331,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
256,
257,
258,
259,
260,
261,
848,
849,
850
]
},
{
"tb": 72,
"tbk": 1,
"tl": 20,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
79,
80,
81,
82,
83,
84,
85,
620,
851,
139
]
},
{
"tb": 3456,
"tbk": 12,
"tl": 4859,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
498,
852,
853,
854,
855,
856,
857
]
},
{
"tb": 960,
"tbk": 3,
"tl": 20041,
"mb": 960,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
256,
257,
258,
259,
260,
261,
858,
859,
860
]
},
{
"tb": 1536,
"tbk": 3,
"tl": 464,
"mb": 1536,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
41,
42,
43,
861,
374,
232,
4
]
},
{
"tb": 48,
"tbk": 3,
"tl": 20,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
227,
615,
513,
514,
21,
22
]
},
{
"tb": 236263,
"tbk": 10,
"tl": 8859,
"mb": 125416,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
576,
662,
663,
862,
863
]
},
{
"tb": 192,
"tbk": 3,
"tl": 20130,
"mb": 192,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
70,
71,
72,
529,
864
]
},
{
"tb": 256,
"tbk": 1,
"tl": 10287,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
256,
257,
258,
294,
295,
296,
865,
866,
867
]
},
{
"tb": 2304,
"tbk": 3,
"tl": 9356,
"mb": 2304,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
79,
868,
869,
870,
871,
872,
873,
874,
875
]
},
{
"tb": 31457280,
"tbk": 30,
"tl": 233326902,
"mb": 31457280,
"mbk": 30,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
256,
257,
258,
259,
260,
261,
262,
83,
84,
85,
651
]
},
{
"tb": 3696,
"tbk": 18,
"tl": 73,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
48,
49,
50,
51,
52,
53,
54,
55,
876,
30,
414
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2118,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
339,
340,
341,
342,
428,
291,
591,
732
]
},
{
"tb": 31457280,
"tbk": 30,
"tl": 1187114591,
"mb": 31457280,
"mbk": 30,
"gb": 31457280,
"gbk": 30,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
41,
42,
43,
64,
877,
878,
879
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 4506,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
435,
436,
437,
438,
880
]
},
{
"tb": 512,
"tbk": 1,
"tl": 18,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
41,
42,
43,
64,
637,
881,
374
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1756,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
48,
49,
882,
883,
884,
885,
886,
887,
888,
889
]
},
{
"tb": 6928,
"tbk": 42,
"tl": 178,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
48,
49,
50,
51,
52,
53,
54,
55,
876,
770,
771
]
},
{
"tb": 960,
"tbk": 3,
"tl": 20341,
"mb": 960,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
256,
257,
258,
259,
260,
261,
759,
890,
47
]
},
{
"tb": 48,
"tbk": 3,
"tl": 118563242,
"mb": 48,
"mbk": 3,
"gb": 48,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
68,
97,
98,
99,
100,
101,
102,
103,
891,
892,
893
]
},
{
"tb": 2904,
"tbk": 4,
"tl": 21255,
"mb": 2904,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
339,
340,
341,
342,
343,
807,
180,
167
]
},
{
"tb": 48,
"tbk": 3,
"tl": 262,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
256,
257,
258,
294,
295,
296,
894,
397,
415
]
},
{
"tb": 240,
"tbk": 1,
"tl": 39597108,
"mb": 240,
"mbk": 1,
"gb": 240,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
6,
895,
896,
897,
898,
899,
900,
901,
902,
903
]
},
{
"tb": 72,
"tbk": 1,
"tl": 8571396,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
628,
904,
905,
906,
907,
21,
22,
23
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 330878,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
41,
42,
43,
64,
236,
237,
908
]
},
{
"tb": 25165824,
"tbk": 3,
"tl": 10831748,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
41,
42,
43,
64,
909,
910,
911
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1764,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
48,
49,
912,
913,
914,
915,
916,
917,
918,
919
]
},
{
"tb": 720,
"tbk": 3,
"tl": 91938142,
"mb": 720,
"mbk": 3,
"gb": 720,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
6,
79,
920,
921,
922,
923,
924,
925,
926,
927
]
},
{
"tb": 6291456,
"tbk": 3,
"tl": 1877224,
"mb": 6291456,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
256,
257,
258,
259,
260,
261,
262,
83,
84,
85,
740
]
},
{
"tb": 960,
"tbk": 6,
"tl": 9319921,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
928,
929,
930,
931,
745
]
},
{
"tb": 963,
"tbk": 3,
"tl": 40,
"mb": 321,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
932,
933,
934,
935,
936,
937,
938,
939,
940,
941
]
},
{
"tb": 192,
"tbk": 3,
"tl": 20142,
"mb": 192,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
70,
71,
72,
619,
864
]
},
{
"tb": 6912,
"tbk": 36,
"tl": 14387,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
498,
942,
943,
944,
945,
946,
947
]
},
{
"tb": 96,
"tbk": 3,
"tl": 104,
"mb": 96,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
41,
42,
43,
44,
948,
249,
47
]
},
{
"tb": 1536,
"tbk": 3,
"tl": 448,
"mb": 1536,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
41,
42,
43,
949,
374,
232,
4
]
},
{
"tb": 1572864,
"tbk": 3,
"tl": 861528,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
41,
42,
43,
64,
236,
237,
950
]
},
{
"tb": 167772160,
"tbk": 1048576,
"tl": 10334431,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
256,
257,
258,
294,
295,
296,
951,
298,
299
]
},
{
"tb": 3145728,
"tbk": 3,
"tl": 443725,
"mb": 3145728,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
148,
149,
150,
151,
152,
153,
952
]
},
{
"tb": 96,
"tbk": 1,
"tl": 6916,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
953,
954,
955,
956,
368
]
},
{
"tb": 256,
"tbk": 1,
"tl": 12,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
256,
257,
258,
259,
260,
261,
957,
742,
21
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
97,
98,
99,
100,
101,
102,
103,
891,
958,
47
]
},
{
"tb": 48,
"tbk": 3,
"tl": 341,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
256,
257,
258,
259,
260,
261,
959,
849,
850
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 598,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
26,
27,
28,
29,
770
]
},
{
"tb": 192,
"tbk": 1,
"tl": 14301,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
818,
960,
961,
962,
963,
964,
742,
21,
22
]
},
{
"tb": 3456,
"tbk": 12,
"tl": 416,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
965,
966,
967,
968,
969
]
},
{
"tb": 48,
"tbk": 3,
"tl": 4660313,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
256,
257,
258,
294,
295,
296,
894,
397,
398
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 287438,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
256,
257,
258,
259,
260,
261,
759,
970,
431
]
},
{
"tb": 15360,
"tbk": 96,
"tl": 292577,
"mb": 15360,
"mbk": 96,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
256,
257,
258,
294,
295,
296,
971,
972,
973
]
},
{
"tb": 144,
"tbk": 1,
"tl": 7781865,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
974,
975,
976,
977,
978,
979,
980,
981,
982
]
},
{
"tb": 10240,
"tbk": 64,
"tl": 321,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
256,
257,
258,
259,
260,
261,
759,
983,
322
]
},
{
"tb": 64,
"tbk": 1,
"tl": 3,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
984,
985,
986,
987,
988,
989,
990,
991,
992
]
},
{
"tb": 48,
"tbk": 3,
"tl": 26282,
"mb": 48,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
97,
98,
99,
100,
101,
102,
103,
104,
993,
994
]
},
{
"tb": 72,
"tbk": 3,
"tl": 4660353,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
738,
739,
397,
398,
315,
21
]
},
{
"tb": 24,
"tbk": 1,
"tl": 30927706,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
6,
696,
995,
996,
997,
998,
999,
1000,
1001,
1002
]
},
{
"tb": 2304,
"tbk": 12,
"tl": 4967,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
498,
942,
943,
944,
1003,
1004,
1005
]
},
{
"tb": 288,
"tbk": 3,
"tl": 50,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
512,
229,
230,
231,
232,
4
]
},
{
"tb": 1984,
"tbk": 4,
"tl": 3028,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
1006,
1007,
1008,
1009,
1010,
1011,
1012,
1013
]
},
{
"tb": 648,
"tbk": 1,
"tl": 39517909,
"mb": 648,
"mbk": 1,
"gb": 648,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
6,
1014,
1015,
1016,
1017,
1018,
1019,
1020,
1021,
1022
]
},
{
"tb": 48,
"tbk": 3,
"tl": 10455627,
"mb": 48,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
256,
257,
258,
259,
260,
261,
737,
1023,
536
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4306,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
41,
42,
43,
1024,
1025,
232,
4
]
},
{
"tb": 126976,
"tbk": 4,
"tl": 1664,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
148,
149,
150,
151,
152,
153,
1026
]
},
{
"tb": 3968,
"tbk": 4,
"tl": 4114,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
168,
654,
655,
656,
657,
839,
770,
771
]
},
{
"tb": 48,
"tbk": 3,
"tl": 1979898,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
304,
305,
306,
307,
1027,
678,
679
]
},
{
"tb": 3696,
"tbk": 18,
"tl": 74,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
48,
49,
50,
51,
52,
53,
54,
55,
876,
291,
591
]
},
{
"tb": 134217728,
"tbk": 1,
"tl": 19233811,
"mb": 134217728,
"mbk": 1,
"gb": 134217728,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
256,
257,
258,
259,
260,
261,
1028,
1029,
1030
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2114,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
168,
654,
655,
656,
657,
839,
291,
591
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 2915,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
168,
1031,
1032,
1033,
1034,
1035,
1036,
1037,
1038
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 27794245,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
6,
168,
169,
170,
171,
172,
1039,
299,
1040
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 8680242,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
6,
168,
169,
170,
171,
172,
173,
174,
1041
]
},
{
"tb": 8388480,
"tbk": 32,
"tl": 25776,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
70,
71,
72,
1042,
21
]
},
{
"tb": 224,
"tbk": 1,
"tl": 8751,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
97,
98,
99,
100,
101,
102,
103,
104,
1043,
1044
]
},
{
"tb": 72,
"tbk": 1,
"tl": 192,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
79,
1045,
1046,
1047,
1048,
1049,
1050,
1051,
1052
]
},
{
"tb": 48,
"tbk": 1,
"tl": 39517712,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
6,
1053,
1054,
1055,
1056,
1057,
1058,
1059,
1060,
1061
]
},
{
"tb": 1344,
"tbk": 9,
"tl": 18747,
"mb": 768,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
70,
71,
72,
460,
243
]
},
{
"tb": 3145728,
"tbk": 3,
"tl": 222601,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
41,
42,
43,
64,
236,
237,
1062
]
},
{
"tb": 288,
"tbk": 1,
"tl": 39521098,
"mb": 288,
"mbk": 1,
"gb": 288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
6,
1063,
1064,
1065,
1066,
1067,
1068,
1069,
1070,
1071
]
},
{
"tb": 72,
"tbk": 3,
"tl": 10455637,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
486,
487,
488,
489,
490,
491,
492,
493,
1023,
536
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 8731,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
97,
98,
99,
100,
101,
102,
103,
104,
1072,
106
]
},
{
"tb": 48,
"tbk": 3,
"tl": 8,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
227,
228,
513,
514,
21,
22
]
},
{
"tb": 144,
"tbk": 6,
"tl": 313,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1073,
1074,
1075,
1076,
1077,
1078
]
},
{
"tb": 96,
"tbk": 3,
"tl": 28,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
932,
933,
934,
935,
936,
937,
938,
1079,
940,
941
]
},
{
"tb": 24,
"tbk": 3,
"tl": 1240800,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
48,
49,
59,
60,
61,
1080,
1081,
536,
21
]
},
{
"tb": 48,
"tbk": 3,
"tl": 322,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
227,
615,
229,
313,
314,
315
]
},
{
"tb": 96,
"tbk": 3,
"tl": 10455559,
"mb": 96,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
26,
27,
28,
1082,
1083
]
},
{
"tb": 15360,
"tbk": 1,
"tl": 6944,
"mb": 15360,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
97,
409,
410,
411,
1084,
368,
591,
732
]
},
{
"tb": 3696,
"tbk": 18,
"tl": 529,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
584
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 57280,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
256,
257,
258,
294,
295,
296,
1085,
414,
21
]
},
{
"tb": 6928,
"tbk": 42,
"tl": 941,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
48,
49,
50,
51,
52,
53,
54,
55,
56,
57,
616
]
},
{
"tb": 96,
"tbk": 1,
"tl": 160,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
239,
240,
241,
1086,
374
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4296,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
1087,
1088,
1089,
1090,
1091,
1092,
1093,
1094
]
},
{
"tb": 720,
"tbk": 3,
"tl": 118712068,
"mb": 720,
"mbk": 3,
"gb": 720,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
6,
79,
1095,
1096,
1097,
1098,
1099,
1100,
1101,
1102
]
},
{
"tb": 5216,
"tbk": 35,
"tl": 11403,
"mb": 5120,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
256,
257,
258,
259,
260,
261,
262,
83,
84,
85,
620
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 1754681,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
41,
42,
43,
64,
909,
910,
1103
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
97,
98,
99,
100,
101,
102,
103,
253,
388,
226
]
},
{
"tb": 480,
"tbk": 3,
"tl": 77691,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
304,
305,
306,
307,
1104,
1105,
1106
]
},
{
"tb": 648,
"tbk": 1,
"tl": 8579,
"mb": 648,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
1014,
1107,
1108,
1109,
1110,
1111,
1112,
1113,
1114
]
},
{
"tb": 144,
"tbk": 6,
"tl": 205,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1115,
1074,
1075,
1076,
1077,
1078
]
},
{
"tb": 96,
"tbk": 3,
"tl": 25689,
"mb": 96,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
454,
1116,
1117,
1118,
1119,
1120
]
},
{
"tb": 256,
"tbk": 2,
"tl": 467,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
1121,
1122,
1123,
1124,
770
]
},
{
"tb": 72,
"tbk": 1,
"tl": 8571407,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
1125,
1126,
1127,
1128,
1129,
21,
22,
23
]
},
{
"tb": 192,
"tbk": 1,
"tl": 8697,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
818,
960,
961,
962,
963,
1130,
1131,
747,
78
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2910,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
339,
340,
341,
342,
343,
511,
252,
200
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 34708,
"mb": 15872,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
97,
98,
99,
100,
101,
102,
103,
104,
1132,
433
]
},
{
"tb": 2880,
"tbk": 24,
"tl": 2451,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
24,
25,
26,
27,
28,
1133,
57
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
97,
98,
99,
100,
101,
102,
103,
253,
254,
226
]
},
{
"tb": 31457280,
"tbk": 30,
"tl": 915481297,
"mb": 31457280,
"mbk": 30,
"gb": 31457280,
"gbk": 30,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
256,
257,
258,
259,
260,
261,
1134,
1135,
1136
]
},
{
"tb": 419430400,
"tbk": 1048576,
"tl": 9287010,
"mb": 800,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
316,
317,
318,
319,
320,
1137,
298,
299
]
},
{
"tb": 6291456,
"tbk": 3,
"tl": 1229399,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
40,
1138,
1139,
1140,
1141,
1142,
1143,
1144,
1145
]
},
{
"tb": 3237,
"tbk": 21,
"tl": 3090829,
"mb": 1632,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
576,
662,
663,
862,
1146
]
}
],
"ftbl": [
"[root]",
"0x61890f192937: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x61890f318d16: <examples::do_work::air::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (src/do_work/air.rs:13:9)",
"0x61890f2b8718: winter_verifier::verify (verifier/src/lib.rs:97:38)",
"0x61890f117d99: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:118:9)",
"0x61890ef709d5: winterfell::main (examples/src/main.rs:83:11)",
"0x61890f1934a9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x61890f260f9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f3ded37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3ded37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3ded37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3ded37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f4a026e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f4936a7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e5dde: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f349d43: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:638:34)",
"0x61890f25583c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f414786: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f414786: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f414786: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f334f85: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:39)",
"0x61890f355cd4: winter_prover::Prover::prove (prover/src/lib.rs:171:37)",
"0x61890f1172b2: <examples::do_work::DoWorkExample<H> as examples::Example>::prove (src/do_work/mod.rs:108:9)",
"0x61890ef6fd4d: winterfell::main (examples/src/main.rs:49:17)",
"0x61890f68e799: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x61890f689b39: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x61890f5ec830: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61890f5ee899: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61890f5c9451: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61890f4a8f53: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x61890f585495: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x61890f25db1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f3e67cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3e67cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3e67cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3e67cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x61890f4a186e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f493947: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e4e8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f3c4bf6: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x61890f25c0ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f414736: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f414736: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f414736: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f137909: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x61890f24ffee: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x61890f16d42b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x61890f2b8907: winter_verifier::verify (verifier/src/lib.rs:108:19)",
"0x61890f67c899: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x61890f5e90aa: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f5fa6ac: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f5fa6ac: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f5fa6ac: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x61890f5cb4a9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x61890f5cb4a9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x61890f5cb4a9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x61890f29df79: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x61890f4aab5e: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x61890f1682ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x61890f5c4656: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f5c4656: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f5c4656: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f29dd1c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x61890f2af810: winter_verifier::perform_verification (verifier/src/lib.rs:302:9)",
"0x61890f1a0e7b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x61890f4c9bc2: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x61890f367240: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x61890f4ddbb1: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x61890f6fab79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x61890f6f9319: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x61890f28b122: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61890f2986b9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61890f46cd91: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61890f3bb08d: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:540:13)",
"0x61890f21d428: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x61890f69a187: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x61890f698fed: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:357:24)",
"0x61890f693e53: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:174:32)",
"0x61890ef708fd: winterfell::main (examples/src/main.rs:80:24)",
"0x61890f2589fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f413856: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f413856: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f413856: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x61890f4851f9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x61890f4851f9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x61890f4851f9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x61890f30dd29: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x61890f335583: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:33)",
"0x61890f25b66c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f3c9c21: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3c9c21: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3c9c21: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3c9c21: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f4a03ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f493ac6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e801b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f3366a3: winter_prover::Prover::generate_proof (prover/src/lib.rs:495:52)",
"0x61890f6f95ca: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f6fabbc: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f6fabbc: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f6fabbc: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x61890f6fb7fc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x61890f6fb7fc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x61890f6fb7fc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x61890f6f8e2c: <winter_utils::serde::byte_reader::SliceReader as winter_utils::serde::byte_reader::ByteReader>::read_vec (src/serde/byte_reader.rs:151:22)",
"0x61890f698a1e: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:168:21)",
"0x61890f693e38: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:176:34)",
"0x61890f258f3a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f3ca15e: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3ca15e: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3ca15e: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3ca15e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x61890f4a021e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f495957: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f52c76e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f4af755: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:144:35)",
"0x61890f25fa9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f3f9111: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3f9111: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3f9111: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3f9111: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f49e9fb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f497cc6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e686b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f236a5c: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:82:9)",
"0x61890f400c51: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f400c51: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f400c51: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f400c51: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f49ef6b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f499a96: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e653b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f16ca47: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x61890f25751c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f4c92be: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f4c92be: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f4c92be: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x61890f483b77: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x61890f220c58: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x61890f334656: winter_prover::Prover::generate_proof (prover/src/lib.rs:228:27)",
"0x61890f260a5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f414b46: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f414b46: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f414b46: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f1a0d3b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x61890f55fe2b: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x61890f4b676a: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x61890f0fdc7a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x61890f6f86cc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x61890f6f6d9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x61890f6f7cf8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x61890f6f7cf8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x61890f6f4964: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x61890f6f4c13: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x61890f55a450: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x61890f406451: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f406451: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f406451: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f406451: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f49f7db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f494136: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e565b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f16c97f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x61890f285842: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61890f298419: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61890f46dba2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61890f24c57e: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x61890f16d60c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x61890f256a9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f414916: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f414916: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f414916: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f1a0fbb: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x61890f4a7e5d: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x61890f4ab406: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x61890f56dcaa: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x61890f19647b: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x61890f4f842f: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x61890f4f8504: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x61890f244f3a: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x61890f24c39c: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x61890f698d02: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:348:22)",
"0x61890f3ea877: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3ea877: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3ea877: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3ea877: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f49f70e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f49b317: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e7ace: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f4b3532: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x61890f2584bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f40b4c8: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f40b4c8: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f40b4c8: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f40b4c8: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x61890f4a272e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f499407: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f58217e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f3c5e5c: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x61890f15a6f1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x61890f16cfa8: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x61890f25e2fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f3db135: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3db135: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3db135: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3db135: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x61890f49f10e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f494737: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e4cce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f4bc1b0: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:218:46)",
"0x61890f26b982: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61890f297c39: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61890f470a51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61890f3106c9: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x61890f21430d: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x61890f25a40c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f3e9bc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3e9bc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3e9bc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3e9bc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f49fa9e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f49ac79: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e594e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f23777a: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:50:26)",
"0x61890f56282c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x61890f36ab58: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x61890f2b85a9: winter_verifier::verify (verifier/src/lib.rs:95:32)",
"0x61890f4d1e95: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x61890f31912c: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:62:13)",
"0x61890f3ba985: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:364:13)",
"0x61890f52db4c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:63:9)",
"0x61890f2b0247: winter_verifier::perform_verification (verifier/src/lib.rs:223:43)",
"0x61890f2b89d2: winter_verifier::verify (verifier/src/lib.rs:110:21)",
"0x61890f30fdb1: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x61890f0ff4aa: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x61890f53fa05: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x61890f195393: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x61890f365018: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x61890f57dab6: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x61890f284972: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61890f298a19: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61890f46e402: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61890f3bb239: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:536:13)",
"0x61890f2af13b: winter_verifier::perform_verification (verifier/src/lib.rs:263:61)",
"0x61890f290022: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61890f2989e9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61890f46f842: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61890f2b0673: winter_verifier::perform_verification (verifier/src/lib.rs:177:9)",
"0x61890f4c86fb: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x61890f16e185: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x61890f4ff4cb: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x61890f4ed524: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x61890f15a583: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x61890f36adf4: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x61890f36aad6: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x61890f220a03: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x61890f13941c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f13941c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f13941c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x61890f484939: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x61890f484939: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x61890f484939: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x61890f413bc3: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x61890f3d06b1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3d06b1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3d06b1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3d06b1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f49e71b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f497e16: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e723b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f15a409: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x61890f37beb0: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x61890f3348ba: winter_prover::Prover::generate_proof (prover/src/lib.rs:257:22)",
"0x61890f580cb7: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x61890f532a27: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:272:18)",
"0x61890f531297: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:166:30)",
"0x61890f36b4f8: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x61890f21b499: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x61890f3687e9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x61890f2347fb: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x61890f16ce38: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x61890f3387ad: winter_prover::Prover::generate_proof (prover/src/lib.rs:438:13)",
"0x61890f4f851a: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x61890f4b31bf: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x61890f2afcbe: winter_verifier::perform_verification (verifier/src/lib.rs:314:25)",
"0x61890f37aa92: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x61890f1514c6: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:493:32)",
"0x61890f10709a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x61890f1d42a2: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x61890f0d2c9b: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x61890f0ef906: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x61890f36eb07: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x61890f3b4d61: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x61890f2af33e: winter_verifier::perform_verification (verifier/src/lib.rs:272:24)",
"0x61890f13993c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x61890f13993c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x61890f13993c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x61890f4bc26a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x61890f4b9903: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x61890f34a3dd: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:659:26)",
"0x61890f31483e: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x61890f2af6c1: winter_verifier::perform_verification (verifier/src/lib.rs:295:27)",
"0x61890f4c7835: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x61890f21d1d0: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x61890f1399f5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f1399f5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f1399f5: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x61890f483bf4: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x61890f55a184: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x61890f389010: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x61890f3b873c: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x61890f56395b: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x61890f36a9cc: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x61890f237670: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:40:22)",
"0x61890f5336e7: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:13)",
"0x61890f338b32: winter_prover::Prover::generate_proof (prover/src/lib.rs:403:21)",
"0x61890f483ebb: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f483ebb: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f483ebb: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f483ebb: <[V] as alloc::slice::Concat<T>>::concat (alloc/src/slice.rs:712:26)",
"0x61890f483cab: alloc::slice::<impl [T]>::concat (alloc/src/slice.rs:561:9)",
"0x61890f372199: winter_prover::trace::commitment::build_segment_queries::{{closure}}::{{closure}} (src/trace/commitment.rs:164:27)",
"0x61890f1f0019: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x61890f370736: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:159:13)",
"0x61890f4d502b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x61890f4d4681: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x61890f2e812b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x61890f2bd8bd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x61890f186f89: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x61890f362a00: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x61890f254dbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f3f8127: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3f8127: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3f8127: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3f8127: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f49f01e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f4956b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e7fae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f4b5e38: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x61890f25ae8c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f414966: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f414966: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f414966: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f299c9d: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x61890f4f5ca7: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x61890f18177b: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x61890f16d23c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x61890f26027c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f3d1557: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3d1557: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3d1557: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3d1557: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f47f79d: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x61890f49b21c: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e74ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f31782a: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x61890f26123c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f3fe977: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3fe977: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3fe977: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3fe977: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f49f65e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f493517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e460e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f3365d6: winter_prover::Prover::generate_proof (prover/src/lib.rs:491:51)",
"0x61890f69d5bd: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:151:28)",
"0x61890f694178: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:29)",
"0x61890f4e310a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x61890f36ebd9: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x61890f2875e2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61890f298209: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61890f4720e2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61890f16e49b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x61890f4b089e: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x61890f2afc0f: winter_verifier::perform_verification (verifier/src/lib.rs:308:25)",
"0x61890f3ff637: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3ff637: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3ff637: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3ff637: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f4a2ade: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f49b4b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e5d0e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f334e32: winter_prover::Prover::generate_proof (prover/src/lib.rs:286:23)",
"0x61890f28f152: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61890f298389: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61890f470ff2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61890f56df89: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x61890f57b1b2: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x61890f36ab12: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x61890f2552fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f55c776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f55c776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f55c776: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x61890f4853b9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x61890f4853b9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x61890f4853b9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x61890f581846: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x61890f3bac22: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:348:9)",
"0x61890f53363b: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:50:13)",
"0x61890f3d2317: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3d2317: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3d2317: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3d2317: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f4a006e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f49b587: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e447e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f30fc6a: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x61890f388214: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x61890f2afe15: winter_verifier::perform_verification (verifier/src/lib.rs:320:5)",
"0x61890f414556: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f414556: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f414556: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f4f18e0: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x61890f58565e: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x61890f337bc5: winter_prover::Prover::generate_proof (prover/src/lib.rs:598:34)",
"0x61890f52d64a: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:25:25)",
"0x61890f157cb0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x61890f2b5869: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:214:32)",
"0x61890f0fa603: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x61890f26051c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f406f17: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f406f17: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f406f17: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f406f17: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f4a0b2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f496147: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e5a9e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f334416: winter_prover::Prover::generate_proof (prover/src/lib.rs:205:38)",
"0x61890f4a86ff: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x61890f56300c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x61890f4db580: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x61890f336868: winter_prover::Prover::generate_proof (prover/src/lib.rs:514:9)",
"0x61890f699f46: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:365:21)",
"0x61890f6993d6: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:146:27)",
"0x61890f16dcae: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x61890f6a6da0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61890f6a25f9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61890f6a15a1: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61890f6a1eb0: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x61890f388a4e: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x61890f3f49d1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3f49d1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3f49d1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3f49d1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f4a0cfb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f499026: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e764b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f16cc9f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x61890f4ecd42: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x61890f286c02: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61890f297cc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61890f471d48: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61890f338bf6: winter_prover::Prover::generate_proof (prover/src/lib.rs:408:17)",
"0x61890f3387ed: winter_prover::Prover::generate_proof (prover/src/lib.rs:439:13)",
"0x61890f318e42: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::new (src/do_work/air.rs:35:23)",
"0x61890f150bb0: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:221:17)",
"0x61890f0fb922: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x61890f52a4dd: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::SpecFold>::spec_fold (iter/adapters/zip.rs:685:25)",
"0x61890f516ee7: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::fold (iter/adapters/zip.rs:249:9)",
"0x61890f5019b7: <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/zip.rs:103:9)",
"0x61890f3bb2c9: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:534:17)",
"0x61890f4bec77: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x61890f4b6c8c: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x61890f4bd7bc: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x61890f69c502: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61890f69d179: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61890f69eae2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61890f694916: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:13)",
"0x61890f2797b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61890f297d89: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61890f46df32: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61890f2b048c: winter_verifier::perform_verification (verifier/src/lib.rs:182:9)",
"0x61890f4d5dab: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x61890f4d47e1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x61890f2e84eb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x61890f2bd79d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x61890f1860fc: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x61890f183911: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x61890f3f8ee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3f8ee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3f8ee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3f8ee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f49edde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f495c57: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e847e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f4fd994: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x61890f25be4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f1392ec: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f1392ec: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f1392ec: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x61890f485f19: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x61890f485f19: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x61890f485f19: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x61890f4fe5d6: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x61890f4fe440: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x61890f485039: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x61890f485039: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x61890f485039: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x61890f6a8739: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x61890f6a68ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f6a2b6c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f6a2b6c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f6a2b6c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x61890f6a262c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x61890f6a262c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x61890f6a262c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x61890f6a26b6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x61890f388b2b: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x61890f2349d0: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x61890f30dd84: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x61890f299f24: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x61890f4ed152: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x61890f31908f: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:60:9)",
"0x61890f19a0ab: winter_prover::trace::Trace::validate (src/trace/mod.rs:122:26)",
"0x61890f338f21: winter_prover::Prover::generate_proof (prover/src/lib.rs:370:17)",
"0x61890f414cd6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f414cd6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f414cd6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f33500d: winter_prover::Prover::generate_proof (prover/src/lib.rs:300:37)",
"0x61890f19e1f6: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x61890f56dc8f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x61890f3e2666: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3e2666: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3e2666: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3e2666: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x61890f49eb6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f4975dc: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f4a69be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f4a8edb: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x61890f3c1bb8: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:510:13)",
"0x61890f21e484: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x61890f4b77a5: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x61890f3528e7: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:706:26)",
"0x61890f336110: winter_prover::Prover::generate_proof (prover/src/lib.rs:472:37)",
"0x61890f4daf64: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:142:33)",
"0x61890f5344c0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:28)",
"0x61890f338bd3: winter_prover::Prover::generate_proof (prover/src/lib.rs:407:21)",
"0x61890f3cd7e7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3cd7e7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3cd7e7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3cd7e7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f4a173e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f4977f7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e832e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f309d13: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:253:9)",
"0x61890f253b7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f3f5f11: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3f5f11: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3f5f11: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3f5f11: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f4a03db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f495d46: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e4acb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f378c0e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x61890f16e3ef: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x61890f69d784: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:155:27)",
"0x61890f4d56eb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x61890f4d4891: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x61890f2e7f4b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x61890f2d3d8f: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x61890f2df711: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x61890f2dacaa: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x61890f36481d: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x61890f336f26: winter_prover::Prover::generate_proof (prover/src/lib.rs:548:13)",
"0x61890f19a598: winter_prover::trace::Trace::validate (src/trace/mod.rs:177:13)",
"0x61890f252bbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f3db991: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3db991: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3db991: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3db991: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f4a137b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f496ed6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e478b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f2aecd2: winter_verifier::perform_verification (verifier/src/lib.rs:212:41)",
"0x61890f236bd9: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:82:31)",
"0x61890f10c553: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x61890f6f9ab0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61890f6f9d18: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x61890f6fb00a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x61890f6fb00a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x61890f6fadae: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x61890f6fadae: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x61890f6fae9d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x61890f5856eb: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x61890f168d3c: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x61890f2af98e: winter_verifier::perform_verification (verifier/src/lib.rs:303:42)",
"0x61890f55fe40: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x61890f286712: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61890f298149: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61890f46f122: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61890f36ec91: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x61890f378cb4: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x61890f310be1: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x61890f30dfbc: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x61890f313211: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x61890f4079a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f4079a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f4079a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f4079a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f4a23de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f4994c9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e7ede: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f1945e0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x61890f4fe0c6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f4fe0c6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f4fe0c6: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x61890f30dca3: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x61890f4db6ec: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x61890f14ab09: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:211:31)",
"0x61890f101d3a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x61890f1f20a8: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x61890f0cb3ba: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x61890f0eb63a: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x61890f4f5a9a: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x61890f3881a5: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x61890f3190bd: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:61:13)",
"0x61890f15453c: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x61890f388bf6: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x61890f52d7eb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:39:30)",
"0x61890f3c1c93: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:505:13)",
"0x61890f412067: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x61890f36ea53: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x61890f4d4ccb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x61890f4d4471: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x61890f2e8f0b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x61890f2c2d31: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x61890f2c6477: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x61890f2bb1bb: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x61890f25b90c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f3e3f91: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3e3f91: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3e3f91: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3e3f91: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f49eedb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f498626: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e44ab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f349ba6: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:630:42)",
"0x61890f194f42: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x61890f55a3fb: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x61890f69c012: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61890f69d1a9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61890f69e878: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61890f694c1a: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:13)",
"0x61890f338808: winter_prover::Prover::generate_proof (prover/src/lib.rs:440:13)",
"0x61890f4b7866: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x61890f6b4d2b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x61890f6b4751: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x61890f6b0adb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x61890f6ad76e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x61890f6af220: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x61890f6ae428: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x61890f30d7be: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x61890f30bf17: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x61890f14b5ac: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:293:57)",
"0x61890f368f58: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f368f58: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f368f58: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x61890f483c17: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x61890f244d36: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x61890f2e1451: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x61890f2e777d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x61890f2db10e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x61890f6f9ce9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61890f6faf12: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61890f29b564: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x61890f240175: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x61890f312ca7: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x61890f6a71a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f6a71a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f6a71a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f6a71a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x61890f6a75ee: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f6a75b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f6a884e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f6a6299: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x61890f4af693: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x61890f4b31a4: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x61890f530f6c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:148:31)",
"0x61890f5349e0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:122:17)",
"0x61890f214436: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x61890f294f22: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61890f297fc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61890f471aaf: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61890f4ed5d9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x61890f3d3197: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3d3197: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3d3197: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3d3197: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f4a1f6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f493599: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e6c6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f4b4e47: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x61890f4e2a51: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x61890f157c8d: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x61890f37ea48: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x61890f388dda: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x61890f25970a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f3eb781: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3eb781: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3eb781: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3eb781: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f4a0dab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f495306: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e509b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f349c73: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:634:36)",
"0x61890f24c629: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x61890f2562bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f40effe: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f40effe: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f40effe: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f40effe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x61890f4a043b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f497b76: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f53910b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f16601c: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x61890f252e5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f3fe771: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3fe771: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3fe771: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3fe771: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f49f0cb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f4989c6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e50cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f30fe5a: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x61890f4db312: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x61890f6b481b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x61890f6b4541: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x61890f6b0d7b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x61890f6ab3a1: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x61890f6abb37: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x61890f6a66db: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x61890f378c1d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x61890f337ace: winter_prover::Prover::generate_proof (prover/src/lib.rs:593:29)",
"0x61890f3108b6: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x61890f31476c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x61890f310d04: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x61890f244d7b: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x61890f4fe5ed: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x61890f4fd9a3: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x61890f58182c: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x61890f30dc8c: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x61890f579c77: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x61890f337a4f: winter_prover::Prover::generate_proof (prover/src/lib.rs:590:25)",
"0x61890f4db810: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x61890f239f72: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:169:36)",
"0x61890f237f30: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:54:17)",
"0x61890f6998d2: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:215:25)",
"0x61890f69415d: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:188:24)",
"0x61890f2bd9dd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x61890f18683f: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x61890f3626c3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x61890f3cf9a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3cf9a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3cf9a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3cf9a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f4a171e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f494517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e637e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f388f51: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x61890f412097: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x61890f4bc476: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:228:38)",
"0x61890f2577bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f404b27: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f404b27: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f404b27: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f404b27: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f47db76: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x61890f497ba7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e6d6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f375d5b: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x61890f567274: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x61890f57a152: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x61890f25ddbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f3cc3c1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3cc3c1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3cc3c1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3cc3c1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f4a19db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f494d06: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e6eab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f2aed9f: winter_verifier::perform_verification (verifier/src/lib.rs:216:40)",
"0x61890f55a103: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x61890f698ec9: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:352:21)",
"0x61890f364151: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x61890f37bdf3: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x61890f1949cb: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x61890f10132c: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x61890f36a954: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x61890f413e1c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f413e1c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f413e1c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x61890f484e79: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x61890f484e79: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x61890f484e79: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x61890f3366be: winter_prover::Prover::generate_proof (prover/src/lib.rs:500:39)",
"0x61890f4e2c60: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x61890f4b33d9: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x61890f56735d: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x61890f4f19fc: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x61890f3e1187: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3e1187: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3e1187: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3e1187: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f4a229e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f496e27: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e47ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f4af95b: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x61890f24504d: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x61890f1a1303: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x61890f56dc25: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x61890f3eb107: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3eb107: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3eb107: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3eb107: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f4a04fe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f49a4b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e786e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f3b0d8f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x61890f69a709: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x61890f69b75c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f69e726: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f69e726: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f69e726: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f693d52: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:172:33)",
"0x61890f335c77: winter_prover::Prover::generate_proof (prover/src/lib.rs:442:35)",
"0x61890f4f85d7: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x61890f56de0b: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x61890f3fdf40: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3fdf40: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3fdf40: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3fdf40: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x61890f4a014b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f4978a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e427b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f4f5bca: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x61890f6aa6cd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x61890f6a584b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x61890f6a3f13: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x61890f56301d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x61890f4a8698: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x61890f40c907: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f40c907: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f40c907: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f40c907: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f49ffde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f499627: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e493e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f117d54: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:112:30)",
"0x61890f18923f: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x61890f189307: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x61890f2b0156: winter_verifier::perform_verification (verifier/src/lib.rs:225:13)",
"0x61890f220a1e: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x61890f6b49cb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x61890f6b46a1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x61890f6b0c9b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x61890f6ab471: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x61890f6abaf7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x61890f6a672b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x61890f182e22: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x61890f2185c4: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x61890f538d04: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x61890f4afbd0: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x61890f6f9d49: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x61890f69fd7a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x61890f2ae9d9: winter_verifier::perform_verification (verifier/src/lib.rs:183:13)",
"0x61890f57dc0e: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x61890f57b104: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x61890f33738b: winter_prover::Prover::generate_proof (prover/src/lib.rs:561:9)",
"0x61890f3d55b7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3d55b7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3d55b7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3d55b7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f49eb0e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f496a37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e62be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f36ec76: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x61890f4a8a2c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x61890f198511: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:132:51)",
"0x61890f0faa1a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x61890f53dda5: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x61890f579e9d: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x61890f4af853: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x61890f3d4911: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3d4911: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3d4911: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3d4911: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f49ff1b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f49b516: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e520b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f16cbd7: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x61890f16e27d: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x61890f6f4d9e: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x61890f36b01f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x61890f222f5f: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x61890f581983: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x61890f25a94c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f3ceae7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3ceae7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3ceae7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3ceae7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f4a053e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f49ad37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e6d4e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f356619: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces (src/do_work/prover.rs:30:9)",
"0x61890f414466: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f414466: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f414466: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f335051: winter_prover::Prover::generate_proof (prover/src/lib.rs:301:32)",
"0x61890f364833: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x61890f4be1ab: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x61890f4bd696: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x61890f1518e9: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:641:17)",
"0x61890f3d2541: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3d2541: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3d2541: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3d2541: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f4a090b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f496276: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e645b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f16cb0f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x61890f3f2f37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3f2f37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3f2f37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3f2f37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f4a22be: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f49b2d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e54de: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f30a2c4: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:198:23)",
"0x61890f270392: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61890f297a59: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61890f46cb42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61890f23a0d9: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:174:17)",
"0x61890f689e7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f5fa57c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f5fa57c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f5fa57c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x61890f5cacc9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x61890f5cacc9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x61890f5cacc9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x61890f3b9e2a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x61890f4c91f6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x61890f16dc48: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x61890f6b4b7b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x61890f6b45f1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x61890f6b0bbb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x61890f6ad87e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x61890f6aec4c: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x61890f6add8a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x61890f4c88ce: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x61890f4afbf3: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x61890f30a210: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:197:28)",
"0x61890f4bc3df: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:226:50)",
"0x61890f4db2ef: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x61890f272622: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61890f298839: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61890f471252: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61890f4e2db8: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x61890f579c96: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x61890f16c7d0: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x61890f18922a: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x61890f69b4bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f69e776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f69e776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f69e776: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f579bcd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x61890f279ca2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61890f298539: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61890f470b42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61890f4a3ffc: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x61890f3c4d4a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x61890f4daea2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x61890f371078: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x61890f10a61a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x61890f1c2e45: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x61890f25291c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f3dcdc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3dcdc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3dcdc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3dcdc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f47e6b3: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x61890f493bc9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e601e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f334f62: winter_prover::Prover::generate_proof (prover/src/lib.rs:291:36)",
"0x61890f37211b: winter_prover::trace::commitment::build_segment_queries::{{closure}}::{{closure}} (src/trace/commitment.rs:162:42)",
"0x61890f081149: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x61890f07fc19: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x61890f07e030: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61890f07e298: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x61890f07db5a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x61890f07db5a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x61890ef726a1: alloc::string::String::reserve (alloc/src/string.rs:1152:9)",
"0x61890ef726a1: <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend (alloc/src/string.rs:2173:14)",
"0x61890ef7277c: <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter (alloc/src/string.rs:2093:9)",
"0x61890f69e118: <winter_air::proof::context::Context as winter_utils::serde::Deserializable>::read_from (src/proof/context.rs:184:35)",
"0x61890f693bf7: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:27)",
"0x61890f3feba1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3feba1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3feba1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3feba1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f4a1b3b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f4990b6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e56cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f334c5d: winter_prover::Prover::generate_proof (prover/src/lib.rs:266:43)",
"0x61890f6aa66d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x61890f6a5538: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x61890f6a3dd7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x61890f3d9227: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3d9227: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3d9227: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3d9227: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f49f23e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f496d47: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e7bee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f38910f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x61890f25601c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f3e47f7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3e47f7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3e47f7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3e47f7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f4a0b7e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f49af39: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e50ee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f334603: winter_prover::Prover::generate_proof (prover/src/lib.rs:217:20)",
"0x61890f53458d: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:33)",
"0x61890f4acaf6: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x61890f2afd3a: winter_verifier::perform_verification (verifier/src/lib.rs:316:28)",
"0x61890f55a08f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x61890f530fd0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:149:33)",
"0x61890f4c04a2: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x61890f4bf147: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x61890f349df7: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:645:31)",
"0x61890f3fa2f0: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3fa2f0: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3fa2f0: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3fa2f0: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x61890f49e5bb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f499da6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e5dbb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f4ed075: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x61890f4b9872: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x61890f334c88: winter_prover::Prover::generate_proof (prover/src/lib.rs:268:13)",
"0x61890f4b9940: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x61890f338665: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:17)",
"0x61890f69d2bd: <winter_air::proof::commitments::Commitments as winter_utils::serde::Deserializable>::read_from (src/proof/commitments.rs:108:22)",
"0x61890f693bdc: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:167:27)",
"0x61890f3cf141: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3cf141: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3cf141: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3cf141: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f4a1f9b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f496346: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e488b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f3344e3: winter_prover::Prover::generate_proof (prover/src/lib.rs:209:39)",
"0x61890f25655c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f4001c7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f4001c7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f4001c7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f4001c7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f49f06e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f4942c7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f23242e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f33479f: winter_prover::Prover::generate_proof (prover/src/lib.rs:243:41)",
"0x61890f312f48: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x61890f251c0c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f3f3b31: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3f3b31: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3f3b31: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3f3b31: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f4a10ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f4955a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e6e5b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f220967: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x61890f698862: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:164:22)",
"0x61890f4fd299: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x61890f3c55ae: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x61890f18389d: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x61890f3c4cce: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x61890f3c76c6: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x61890f3ba9ea: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:362:9)",
"0x61890f3b9e3f: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x61890f3147d0: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x61890f534819: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:129:9)",
"0x61890f318b27: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x61890f3168cd: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x61890f4e2782: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x61890f5856d0: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x61890f4b0848: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x61890f3da777: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3da777: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3da777: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3da777: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f49f2de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f49b697: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e7b8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f388131: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x61890f3e8787: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3e8787: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3e8787: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3e8787: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f49f67e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f496807: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e871e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f19833a: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:132:32)",
"0x61890f3524e4: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:691:36)",
"0x61890f19787b: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:235:25)",
"0x61890f562a62: examples::do_work::prover::build_do_work_trace (src/do_work/prover.rs:65:5)",
"0x61890f356668: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces::{{closure}} (src/do_work/prover.rs:32:27)",
"0x61890f3e8ee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3e8ee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3e8ee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3e8ee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f478bcf: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x61890f496849: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e5e5e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f2b8784: winter_verifier::verify (verifier/src/lib.rs:101:24)",
"0x61890f4fd41a: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x61890f2b98d1: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:101:85)",
"0x61890f10a432: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x61890f226c0a: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:107:27)",
"0x61890f143bff: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x61890f2249a4: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:113:9)",
"0x61890f27c912: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61890f298119: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61890f46d94f: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61890f4a8d8a: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x61890f2607bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61890f414876: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f414876: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f414876: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f334fc9: winter_prover::Prover::generate_proof (prover/src/lib.rs:299:44)",
"0x61890f6992b9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x61890f69970b: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:211:22)",
"0x61890f699dc4: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:361:22)",
"0x61890f29f191: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x61890f30a723: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:200:34)",
"0x61890f0f9b0a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x61890f1cd1bf: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x61890f4bc527: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:228:37)",
"0x61890f3d7727: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61890f3d7727: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61890f3d7727: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61890f3d7727: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61890f4a15de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61890f497507: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61890f0e7cfe: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61890f311277: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x61890f4c76ed: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)"
]
}