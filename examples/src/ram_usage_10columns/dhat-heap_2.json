{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell do-work -n 2 -l 65536",
"pid": 22462,
"tg": 19572191,
"te": 26374100,
"pps": [
{
"tb": 64,
"tbk": 2,
"tl": 16787,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 18440446,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
16
]
},
{
"tb": 96,
"tbk": 1,
"tl": 3252469,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
19,
20,
21,
22,
23
]
},
{
"tb": 72,
"tbk": 1,
"tl": 406029,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
24,
25,
26,
27,
28,
29,
30,
31,
32,
23
]
},
{
"tb": 4194240,
"tbk": 16,
"tl": 11267,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
33,
34,
35,
36,
23
]
},
{
"tb": 96,
"tbk": 1,
"tl": 2132,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
37,
38,
39,
40,
41,
42,
43,
44,
45
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 3904,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
46,
47,
48,
49,
50,
51,
52,
23
]
},
{
"tb": 96,
"tbk": 1,
"tl": 92,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
19,
20,
21,
53,
54
]
},
{
"tb": 4194304,
"tbk": 2,
"tl": 1799843,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 16128,
"tbk": 4,
"tl": 23765,
"mb": 16128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
56,
57,
58,
63,
64,
65,
66
]
},
{
"tb": 64,
"tbk": 2,
"tl": 3163010,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
67,
68,
69,
70,
71,
72,
73,
74,
75,
76
]
},
{
"tb": 320,
"tbk": 2,
"tl": 4224,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
77,
78,
79,
80,
81,
82,
83
]
},
{
"tb": 256,
"tbk": 4,
"tl": 130135,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
56,
57,
58,
59,
84,
85,
86
]
},
{
"tb": 32,
"tbk": 2,
"tl": 170,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
89,
90,
91,
92,
93
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 3622,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
56,
57,
58,
94,
95,
96,
97
]
},
{
"tb": 192,
"tbk": 2,
"tl": 63,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
98,
99,
100,
101,
102,
23
]
},
{
"tb": 256,
"tbk": 1,
"tl": 653,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
104,
105,
106,
107,
108,
109,
110,
111
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 1188291,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
112,
113,
114
]
},
{
"tb": 32,
"tbk": 1,
"tl": 3252458,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
120,
23
]
},
{
"tb": 3536,
"tbk": 34,
"tl": 486,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
121,
122,
123,
124,
125,
126,
127
]
},
{
"tb": 144,
"tbk": 1,
"tl": 405226,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
128,
129,
130,
131,
132,
133,
134,
135,
32,
23
]
},
{
"tb": 13281,
"tbk": 1,
"tl": 8564,
"mb": 13281,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
46,
136,
137,
138,
139,
140,
141,
142,
143,
144
]
},
{
"tb": 160,
"tbk": 1,
"tl": 26365312,
"mb": 160,
"mbk": 1,
"gb": 160,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
145,
146,
147,
148,
149,
150,
151,
152,
153
]
},
{
"tb": 96,
"tbk": 2,
"tl": 1362538,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
77,
78,
79,
80,
154,
155,
156
]
},
{
"tb": 4194304,
"tbk": 2,
"tl": 6697189,
"mb": 4194304,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
89,
90,
91,
92,
157
]
},
{
"tb": 48,
"tbk": 2,
"tl": 3163025,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
158,
159,
75,
76,
102,
23
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4397,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
56,
57,
58,
160,
161,
162,
163
]
},
{
"tb": 160,
"tbk": 1,
"tl": 6583,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
164,
165,
166,
167,
168,
169,
170,
171,
172
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 1292654,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
173,
174,
175
]
},
{
"tb": 1024,
"tbk": 2,
"tl": 227,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
56,
57,
58,
176,
54,
162,
163
]
},
{
"tb": 256,
"tbk": 1,
"tl": 8482,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
46,
136,
137,
138,
139,
140,
141,
142,
177,
178
]
},
{
"tb": 192,
"tbk": 1,
"tl": 26314605,
"mb": 192,
"mbk": 1,
"gb": 192,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
179,
180,
181,
182,
183,
184,
185,
186,
187
]
},
{
"tb": 201326592,
"tbk": 3,
"tl": 6460688,
"mb": 67108864,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
89,
90,
91,
92,
188
]
},
{
"tb": 8,
"tbk": 1,
"tl": 404535,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
104,
189,
190,
191,
192,
193,
194,
195,
32,
23
]
},
{
"tb": 672,
"tbk": 5,
"tl": 1107901,
"mb": 672,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
196,
197,
198,
199,
200,
201,
202,
203
]
},
{
"tb": 64,
"tbk": 2,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
204,
205,
163,
206
]
},
{
"tb": 158941,
"tbk": 10,
"tl": 8675,
"mb": 84224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
207,
208,
209,
210,
211
]
},
{
"tb": 128,
"tbk": 2,
"tl": 13212,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
33,
34,
35,
212,
213
]
},
{
"tb": 1536,
"tbk": 2,
"tl": 5488,
"mb": 1536,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
24,
214,
215,
216,
217,
218,
219,
220,
221
]
},
{
"tb": 64,
"tbk": 2,
"tl": 232,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
222,
223,
224,
225,
226,
227,
228,
229,
230
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2229,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
222,
223,
224,
231,
232,
233,
234,
66,
163
]
},
{
"tb": 192,
"tbk": 1,
"tl": 6608,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
235,
236,
237,
238,
162
]
},
{
"tb": 3552,
"tbk": 18,
"tl": 79,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
104,
189,
190,
191,
192,
193,
194,
239,
240,
241
]
},
{
"tb": 32,
"tbk": 2,
"tl": 131,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
242,
243,
99,
244,
245,
162
]
},
{
"tb": 16128,
"tbk": 4,
"tl": 2502,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
246,
247,
248,
249,
250,
251,
252,
253,
254
]
},
{
"tb": 192,
"tbk": 2,
"tl": 27,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
98,
255,
256,
23,
257,
258
]
},
{
"tb": 24,
"tbk": 2,
"tl": 2,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
46,
136,
137,
138,
139,
140,
141,
259,
260,
261
]
},
{
"tb": 96,
"tbk": 4,
"tl": 216,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
262,
263,
264,
265,
266,
267
]
},
{
"tb": 192,
"tbk": 2,
"tl": 27,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
128,
268,
269,
270,
271,
272,
273,
274,
275
]
},
{
"tb": 3456,
"tbk": 12,
"tl": 4728,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
121,
276,
277,
278,
279,
280,
281
]
},
{
"tb": 128,
"tbk": 1,
"tl": 3778,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
282,
283,
284,
285,
286
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
287,
288,
261,
289,
23,
257
]
},
{
"tb": 32,
"tbk": 1,
"tl": 26311639,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
290,
291,
292,
293,
294,
295,
296,
297,
298
]
},
{
"tb": 16128,
"tbk": 126,
"tl": 112,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
299,
300,
301,
302,
303,
304,
305,
306
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2097,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
307,
308,
309,
310,
311,
240,
241
]
},
{
"tb": 144,
"tbk": 1,
"tl": 6691687,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
312,
313,
314,
315,
316,
317,
318,
319,
320
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 53419,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
222,
223,
224,
231,
232,
233,
321,
52,
23
]
},
{
"tb": 144,
"tbk": 6,
"tl": 154,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
322,
323,
324,
325,
326,
327,
328,
329,
330
]
},
{
"tb": 64,
"tbk": 2,
"tl": 19,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
331,
332,
333,
334,
335,
336,
337,
338,
339,
340
]
},
{
"tb": 480,
"tbk": 4,
"tl": 6239,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
341,
342
]
},
{
"tb": 84432,
"tbk": 1632,
"tl": 1961293,
"mb": 16992,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
207,
343,
344,
345,
346,
347,
348
]
},
{
"tb": 16,
"tbk": 2,
"tl": 838374,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
104,
105,
106,
107,
349,
350,
351,
23
]
},
{
"tb": 768,
"tbk": 4,
"tl": 141,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
352,
353,
354,
355,
356,
357,
358,
359,
360
]
},
{
"tb": 16,
"tbk": 1,
"tl": 19026739,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
361,
362,
363,
364,
365,
366,
367,
368,
369
]
},
{
"tb": 96,
"tbk": 1,
"tl": 435637,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
19,
20,
21,
370,
371
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 329818,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
56,
57,
58,
59,
84,
85,
372
]
},
{
"tb": 10240,
"tbk": 32,
"tl": 73302,
"mb": 10240,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
373,
374,
375,
376,
377,
378,
379,
380
]
},
{
"tb": 16128,
"tbk": 4,
"tl": 643,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
56,
57,
58,
59,
381,
382,
383
]
},
{
"tb": 13248,
"tbk": 32,
"tl": 104245,
"mb": 13248,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
384,
385,
386,
97
]
},
{
"tb": 48,
"tbk": 1,
"tl": 16,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
24,
25,
26,
27,
28,
29,
30,
387,
388,
289
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 151448,
"mb": 1179648,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
56,
57,
58,
59,
389,
390,
391
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 21121,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
222,
223,
224,
225,
226,
227,
392,
393,
23
]
},
{
"tb": 192,
"tbk": 2,
"tl": 36,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
98,
99,
244,
245,
162,
163
]
},
{
"tb": 128,
"tbk": 2,
"tl": 13220,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
33,
34,
35,
394,
213
]
},
{
"tb": 48,
"tbk": 1,
"tl": 171,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
24,
395,
396,
397,
398,
399,
400,
401,
402
]
},
{
"tb": 512,
"tbk": 1,
"tl": 30,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
56,
57,
58,
403,
404,
162,
163
]
},
{
"tb": 256,
"tbk": 4,
"tl": 6325011,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
405,
406,
407,
408,
409
]
},
{
"tb": 480,
"tbk": 2,
"tl": 11787205,
"mb": 480,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
24,
25,
26,
27,
28,
29,
30,
410,
411,
412
]
},
{
"tb": 480,
"tbk": 4,
"tl": 213,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
413,
414
]
},
{
"tb": 32,
"tbk": 2,
"tl": 1362528,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
77,
78,
79,
80,
415,
155,
156
]
},
{
"tb": 80,
"tbk": 1,
"tl": 6256,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
56,
57,
58,
416,
417,
162,
163
]
},
{
"tb": 432,
"tbk": 1,
"tl": 8405,
"mb": 432,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
418,
419,
420,
421,
422,
423,
424,
425,
426
]
},
{
"tb": 512,
"tbk": 1,
"tl": 10,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
427,
428,
429,
430,
431,
432,
433,
434
]
},
{
"tb": 96,
"tbk": 1,
"tl": 5894794,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
435,
436,
437,
438,
439,
440,
441,
442,
443
]
},
{
"tb": 32,
"tbk": 2,
"tl": 185,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
222,
223,
224,
231,
232,
233,
444,
75,
445
]
},
{
"tb": 20971520,
"tbk": 20,
"tl": 527034785,
"mb": 20971520,
"mbk": 20,
"gb": 20971520,
"gbk": 20,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
56,
57,
58,
59,
446,
447,
448
]
},
{
"tb": 32,
"tbk": 2,
"tl": 75282,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
77,
78,
79,
80,
449,
256,
23
]
},
{
"tb": 13800,
"tbk": 25,
"tl": 6350,
"mb": 3864,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
450,
451,
452,
453,
454,
455
]
},
{
"tb": 268435456,
"tbk": 2,
"tl": 40641319,
"mb": 268435456,
"mbk": 2,
"gb": 268435456,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
8,
246,
456,
457,
458,
459,
460,
461,
462
]
},
{
"tb": 32,
"tbk": 2,
"tl": 3162995,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
222,
223,
224,
231,
232,
233,
444,
75,
76
]
},
{
"tb": 6528,
"tbk": 34,
"tl": 13667,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
121,
463,
464,
465,
466,
467,
468
]
},
{
"tb": 64,
"tbk": 2,
"tl": 17078,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
46,
136,
137,
138,
139,
140,
141,
142,
469,
470
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1350,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
121,
471,
472,
473,
474,
475,
476,
477,
478,
479,
480
]
},
{
"tb": 2880,
"tbk": 24,
"tl": 2447,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
481,
109
]
},
{
"tb": 3936,
"tbk": 4,
"tl": 111,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
482,
483,
484,
485,
486,
487
]
},
{
"tb": 224,
"tbk": 1,
"tl": 7550,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
488,
489,
490,
491,
65
]
},
{
"tb": 2176,
"tbk": 4,
"tl": 56,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
492,
493,
494,
495,
496,
497
]
},
{
"tb": 2097152,
"tbk": 2,
"tl": 4510842,
"mb": 2097152,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
222,
223,
224,
231,
232,
233,
498,
499,
500
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
46,
136,
137,
138,
139,
140,
141,
259,
260,
501
]
},
{
"tb": 13248,
"tbk": 32,
"tl": 84800,
"mb": 13248,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
384,
385,
502,
286
]
},
{
"tb": 32,
"tbk": 1,
"tl": 3,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
503,
504,
505,
506,
507,
508,
509,
510,
511
]
},
{
"tb": 48,
"tbk": 1,
"tl": 6684890,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
512,
513,
514,
515,
516,
23,
257,
258
]
},
{
"tb": 24285,
"tbk": 4,
"tl": 34002,
"mb": 24285,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
46,
136,
137,
138,
139,
140,
141,
142,
517,
518
]
},
{
"tb": 224,
"tbk": 1,
"tl": 8577,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
46,
136,
137,
138,
139,
140,
141,
142,
519,
520
]
},
{
"tb": 480,
"tbk": 2,
"tl": 52703856,
"mb": 480,
"mbk": 2,
"gb": 480,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
8,
24,
521,
522,
523,
524,
525,
526,
527,
528
]
},
{
"tb": 13281,
"tbk": 1,
"tl": 8553,
"mb": 13281,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
46,
136,
137,
138,
139,
140,
141,
142,
529,
530
]
},
{
"tb": 64,
"tbk": 2,
"tl": 194,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
67,
68,
69,
70,
71,
72,
73,
74,
75,
445
]
},
{
"tb": 512,
"tbk": 1,
"tl": 16,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
56,
57,
58,
59,
381,
531,
404
]
},
{
"tb": 1920,
"tbk": 8,
"tl": 26,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
33,
34,
35,
532,
533
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1945950,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
534,
535,
536,
537,
23
]
},
{
"tb": 5120,
"tbk": 32,
"tl": 153,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
222,
223,
224,
225,
226,
227,
392,
538,
379
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 3333,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
539,
540,
541,
542,
543,
544,
545,
546
]
},
{
"tb": 32,
"tbk": 1,
"tl": 968,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
503,
504,
505,
506,
507,
508,
509,
510,
547
]
},
{
"tb": 32,
"tbk": 1,
"tl": 54,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
548,
549,
550,
551,
552,
553,
554,
555,
23,
257
]
},
{
"tb": 96,
"tbk": 1,
"tl": 86,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
19,
20,
21,
556,
54
]
},
{
"tb": 32,
"tbk": 2,
"tl": 17171,
"mb": 32,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
46,
136,
137,
138,
139,
140,
141,
142,
557,
558
]
},
{
"tb": 4032,
"tbk": 4,
"tl": 21175,
"mb": 4032,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
307,
308,
309,
310,
559,
64,
65
]
},
{
"tb": 3552,
"tbk": 18,
"tl": 78,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
104,
189,
190,
191,
192,
193,
194,
239,
414,
52
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2851,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
560,
561,
562,
563,
564,
565,
566,
567,
568
]
},
{
"tb": 96,
"tbk": 1,
"tl": 26314511,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
569,
570,
571,
572,
573,
574,
289,
23
]
},
{
"tb": 24,
"tbk": 1,
"tl": 8561,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
575,
576,
144,
577
]
},
{
"tb": 24160,
"tbk": 119,
"tl": 594937,
"mb": 24160,
"mbk": 119,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
384,
385,
578,
64
]
},
{
"tb": 5184,
"tbk": 34,
"tl": 6519,
"mb": 5120,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
222,
223,
224,
225,
226,
227,
579,
28,
29,
30,
387
]
},
{
"tb": 2304,
"tbk": 8,
"tl": 291,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
580,
581,
582,
583,
584
]
},
{
"tb": 480,
"tbk": 2,
"tl": 38937541,
"mb": 480,
"mbk": 2,
"gb": 480,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
8,
24,
585,
586,
587,
588,
589,
590,
591,
592
]
},
{
"tb": 20971520,
"tbk": 20,
"tl": 117849343,
"mb": 20971520,
"mbk": 20,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
222,
223,
224,
225,
226,
227,
579,
28,
29,
30,
410
]
},
{
"tb": 2097152,
"tbk": 2,
"tl": 224010,
"mb": 2097152,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
89,
90,
91,
92,
593
]
},
{
"tb": 2097152,
"tbk": 2,
"tl": 838334,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
56,
57,
58,
59,
84,
85,
594
]
},
{
"tb": 192,
"tbk": 1,
"tl": 8531,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
595,
596,
597,
598,
599,
600,
601,
178,
577
]
},
{
"tb": 64,
"tbk": 2,
"tl": 12934,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
602,
603,
23,
257,
258
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2055,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
307,
308,
309,
310,
311,
414,
52
]
},
{
"tb": 16,
"tbk": 1,
"tl": 19,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
104,
604,
605,
606,
607,
608,
609,
610,
611
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1768,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
612,
613
]
},
{
"tb": 16,
"tbk": 1,
"tl": 223,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
104,
614,
615,
616,
617,
618,
619,
620,
621
]
},
{
"tb": 72,
"tbk": 1,
"tl": 8575,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
595,
622,
623,
624,
625,
626,
577
]
},
{
"tb": 512,
"tbk": 1,
"tl": 50,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
627,
628,
629,
630,
631,
632,
633,
634
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 330552,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
222,
223,
224,
231,
232,
233,
635,
636,
23
]
},
{
"tb": 640,
"tbk": 2,
"tl": 13165,
"mb": 640,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
222,
223,
224,
225,
226,
227,
637,
638,
639
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 1747533,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
56,
57,
58,
59,
640,
641,
642
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 8558,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
46,
136,
137,
138,
139,
140,
141,
142,
643,
530
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 7325,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
644,
645,
646,
647,
648
]
},
{
"tb": 129024,
"tbk": 4,
"tl": 1714,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
89,
90,
91,
92,
649
]
},
{
"tb": 10240,
"tbk": 1,
"tl": 2803,
"mb": 10240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
56,
57,
58,
94,
95,
650,
286
]
},
{
"tb": 128,
"tbk": 2,
"tl": 359,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
33,
34,
35,
212,
651
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3335,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
652,
653,
654,
655,
656,
386,
97,
657
]
},
{
"tb": 16128,
"tbk": 4,
"tl": 545,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
89,
90,
91,
92,
658
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 6792331,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
112,
113,
659
]
},
{
"tb": 256,
"tbk": 1,
"tl": 662,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
104,
105,
106,
107,
108,
109,
660,
661
]
},
{
"tb": 128,
"tbk": 2,
"tl": 371,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
33,
34,
35,
394,
651
]
},
{
"tb": 256,
"tbk": 1,
"tl": 12,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
121,
471,
472,
473,
474,
475,
476,
477,
662,
663,
23
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 2852,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
207,
208,
209,
664,
665
]
},
{
"tb": 33554432,
"tbk": 524288,
"tl": 9282488,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
666,
667,
668,
669,
670,
671,
672,
673,
674
]
},
{
"tb": 32,
"tbk": 1,
"tl": 3252452,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
675,
23
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1716,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
104,
676,
677,
678,
679,
680,
681,
682,
683
]
},
{
"tb": 72,
"tbk": 3,
"tl": 1215635,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
684,
685,
686,
687,
688,
689,
690,
691,
692,
132,
133,
134
]
},
{
"tb": 2904,
"tbk": 4,
"tl": 20586,
"mb": 2904,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
652,
653,
654,
655,
656,
578,
64,
65
]
},
{
"tb": 96,
"tbk": 1,
"tl": 6272,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
19,
20,
21,
370,
693
]
},
{
"tb": 32,
"tbk": 2,
"tl": 5302476,
"mb": 32,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
222,
223,
224,
225,
226,
227,
694,
695,
351
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 752257,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
56,
57,
58,
59,
696,
697,
698
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1703,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
104,
699,
700,
701,
702,
703,
704,
705,
706
]
},
{
"tb": 16128,
"tbk": 126,
"tl": 124,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
56,
57,
58,
94,
707,
64,
65
]
},
{
"tb": 432,
"tbk": 1,
"tl": 26311791,
"mb": 432,
"mbk": 1,
"gb": 432,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
418,
708,
709,
710,
711,
712,
713,
714,
715
]
},
{
"tb": 640,
"tbk": 4,
"tl": 6325490,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
716,
717,
718,
719,
720
]
},
{
"tb": 48,
"tbk": 2,
"tl": 204,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
158,
159,
75,
445,
245,
162
]
},
{
"tb": 192,
"tbk": 4,
"tl": 10458111,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
24,
721,
722,
723,
724,
725,
726,
727,
728
]
},
{
"tb": 32,
"tbk": 2,
"tl": 126,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
242,
729,
99,
244,
245,
162
]
},
{
"tb": 32,
"tbk": 2,
"tl": 52629175,
"mb": 32,
"mbk": 2,
"gb": 32,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
17,
46,
136,
137,
138,
139,
140,
141,
730,
731,
732
]
},
{
"tb": 72,
"tbk": 1,
"tl": 7093,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
733,
734,
23,
257,
258
]
},
{
"tb": 8388672,
"tbk": 6,
"tl": 154388,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
56,
57,
58,
59,
735,
736,
737
]
},
{
"tb": 320,
"tbk": 2,
"tl": 52423,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
77,
78,
79,
80,
738,
739,
740
]
},
{
"tb": 64,
"tbk": 2,
"tl": 5302427,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
741,
742
]
},
{
"tb": 24,
"tbk": 1,
"tl": 405203,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
24,
25,
26,
27,
28,
29,
30,
743,
32,
23
]
},
{
"tb": 2736,
"tbk": 6,
"tl": 2634,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
744,
745,
746,
747,
748,
749
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1732,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
104,
750,
751,
752,
753,
754,
755,
756,
757
]
},
{
"tb": 480,
"tbk": 4,
"tl": 9536,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
341,
758
]
},
{
"tb": 96,
"tbk": 2,
"tl": 504173,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
759,
760,
761,
762,
763,
764
]
},
{
"tb": 16128,
"tbk": 4,
"tl": 3172,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
246,
456,
457,
458,
765,
766,
663,
23
]
},
{
"tb": 16777216,
"tbk": 2,
"tl": 7255879,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
56,
57,
58,
59,
640,
641,
767
]
},
{
"tb": 64,
"tbk": 2,
"tl": 50,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
56,
57,
58,
94,
768,
769,
66
]
},
{
"tb": 32,
"tbk": 2,
"tl": 5,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
242,
729,
255,
256,
23,
257
]
},
{
"tb": 10240,
"tbk": 2,
"tl": 7566,
"mb": 10240,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
56,
57,
58,
94,
95,
770,
286
]
},
{
"tb": 2158,
"tbk": 14,
"tl": 1912242,
"mb": 1088,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
207,
208,
209,
210,
771
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
46,
136,
137,
138,
139,
140,
141,
259,
772,
501
]
},
{
"tb": 384,
"tbk": 1,
"tl": 8586,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
773,
774,
775,
776,
577
]
},
{
"tb": 120,
"tbk": 3,
"tl": 8931090,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
777,
778,
779,
780,
781,
782,
783,
784,
785
]
},
{
"tb": 2097152,
"tbk": 2,
"tl": 146605,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
56,
57,
58,
59,
84,
85,
786
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 208469,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
787,
788,
391
]
},
{
"tb": 134217728,
"tbk": 1,
"tl": 11770263,
"mb": 134217728,
"mbk": 1,
"gb": 134217728,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
222,
223,
224,
225,
226,
227,
789,
790,
791
]
},
{
"tb": 10240,
"tbk": 64,
"tl": 171144,
"mb": 10240,
"mbk": 64,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
222,
223,
224,
231,
232,
233,
792,
793,
794
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4389,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
795,
796,
797,
798,
799,
800,
801,
802
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1723,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
104,
803,
804,
805,
806,
807,
808,
809,
810
]
},
{
"tb": 96,
"tbk": 1,
"tl": 2099,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
811,
812,
813,
814,
815,
816,
817,
818,
819
]
},
{
"tb": 3840,
"tbk": 16,
"tl": 2538,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
33,
34,
35,
820,
821
]
},
{
"tb": 640,
"tbk": 4,
"tl": 1437862,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
89,
90,
91,
92,
822
]
},
{
"tb": 64,
"tbk": 1,
"tl": 6261,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
33,
34,
35,
823,
693
]
},
{
"tb": 96,
"tbk": 1,
"tl": 74536,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
19,
20,
21,
824,
603
]
},
{
"tb": 3552,
"tbk": 18,
"tl": 537,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
104,
189,
190,
191,
192,
193,
194,
825,
109,
660
]
},
{
"tb": 96,
"tbk": 1,
"tl": 32,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
19,
20,
21,
826,
66
]
},
{
"tb": 6984,
"tbk": 42,
"tl": 964,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
104,
189,
190,
191,
192,
193,
194,
825,
109,
827
]
},
{
"tb": 512,
"tbk": 1,
"tl": 17,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
56,
57,
58,
828,
404,
162,
163
]
},
{
"tb": 6291456,
"tbk": 3,
"tl": 1217456,
"mb": 6291456,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
222,
223,
224,
225,
226,
227,
579,
28,
29,
30,
31
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 133414,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
56,
57,
58,
59,
60,
829,
830
]
},
{
"tb": 1008,
"tbk": 4,
"tl": 4272,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
121,
471,
472,
473,
474,
475,
476,
477,
831,
832,
479
]
},
{
"tb": 640,
"tbk": 2,
"tl": 28,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
56,
57,
58,
94,
833,
769,
66
]
},
{
"tb": 32,
"tbk": 2,
"tl": 224,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
242,
729,
99,
100,
101,
102
]
},
{
"tb": 256,
"tbk": 1,
"tl": 11,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
222,
223,
224,
225,
226,
227,
834,
663,
23
]
},
{
"tb": 896,
"tbk": 6,
"tl": 871271,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
33,
34,
35,
835,
371
]
},
{
"tb": 96,
"tbk": 2,
"tl": 14935,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
836,
603,
23,
257,
258
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2561,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
24,
25,
26,
27,
28,
29,
30,
387,
837,
241
]
},
{
"tb": 64,
"tbk": 2,
"tl": 52623535,
"mb": 64,
"mbk": 2,
"gb": 64,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
838,
839,
840,
841,
842
]
},
{
"tb": 2304,
"tbk": 12,
"tl": 4832,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
121,
463,
464,
465,
843,
844,
845
]
},
{
"tb": 16,
"tbk": 1,
"tl": 19612169,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
361,
846,
847,
848,
849,
850,
851,
852,
853
]
},
{
"tb": 96,
"tbk": 1,
"tl": 7546,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
19,
20,
21,
854,
65
]
},
{
"tb": 64,
"tbk": 2,
"tl": 313,
"mb": 64,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
204,
855,
856,
857,
858,
859
]
},
{
"tb": 4194304,
"tbk": 262144,
"tl": 153147,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
222,
223,
224,
225,
226,
227,
860,
861,
862
]
},
{
"tb": 16128,
"tbk": 4,
"tl": 1698,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
89,
90,
91,
92,
863
]
},
{
"tb": 83886080,
"tbk": 524288,
"tl": 6705589,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
222,
223,
224,
231,
232,
233,
864,
865,
15
]
},
{
"tb": 896,
"tbk": 6,
"tl": 12541,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
33,
34,
35,
835,
693
]
},
{
"tb": 64,
"tbk": 1,
"tl": 78,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
866,
867,
868,
869,
870,
871,
872,
873,
874
]
},
{
"tb": 16,
"tbk": 1,
"tl": 405214,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
222,
223,
224,
225,
226,
227,
694,
692,
132,
133,
134
]
},
{
"tb": 32,
"tbk": 2,
"tl": 13,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
242,
243,
255,
256,
23,
257
]
},
{
"tb": 1152,
"tbk": 4,
"tl": 95,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
875,
876,
877,
878,
879,
880,
881,
882,
883
]
},
{
"tb": 192,
"tbk": 1,
"tl": 12840,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
595,
596,
597,
598,
599,
884,
663,
23,
257
]
},
{
"tb": 64,
"tbk": 1,
"tl": 68,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
866,
885,
886,
887,
888,
889,
890,
891,
892
]
},
{
"tb": 3552,
"tbk": 18,
"tl": 518,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
104,
189,
190,
191,
192,
193,
194,
825,
109,
110
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4638,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
893,
894,
895,
896,
897,
898,
899,
900
]
},
{
"tb": 10240,
"tbk": 2,
"tl": 12050,
"mb": 10240,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
46,
47,
48,
49,
901,
613,
241,
734
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1710,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
104,
902,
903,
904,
905,
906,
907,
908,
909
]
},
{
"tb": 48,
"tbk": 2,
"tl": 5302482,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
684,
685,
686,
687,
688,
689,
690,
691,
695,
351
]
},
{
"tb": 83886080,
"tbk": 524288,
"tl": 5030976,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
222,
223,
224,
231,
232,
233,
910,
865,
15
]
},
{
"tb": 167772160,
"tbk": 524288,
"tl": 1376214,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
373,
374,
375,
376,
377,
911,
865,
15
]
},
{
"tb": 2097152,
"tbk": 2,
"tl": 148293,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
89,
90,
91,
92,
912
]
},
{
"tb": 384,
"tbk": 3,
"tl": 698,
"mb": 384,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
913,
914,
915,
916,
917
]
},
{
"tb": 96,
"tbk": 4,
"tl": 6325507,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
684,
685,
686,
687,
688,
689,
690,
691,
918,
720
]
},
{
"tb": 32,
"tbk": 2,
"tl": 240,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
222,
223,
224,
225,
226,
227,
919,
229,
230
]
},
{
"tb": 480,
"tbk": 4,
"tl": 5302441,
"mb": 384,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
920,
351,
23,
257,
258
]
},
{
"tb": 48,
"tbk": 1,
"tl": 283679,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
921,
922,
923,
924,
925,
926,
927,
928,
929
]
},
{
"tb": 101688,
"tbk": 223,
"tl": 62898,
"mb": 25536,
"mbk": 56,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
744,
745,
746,
930,
931,
932
]
},
{
"tb": 73880,
"tbk": 39,
"tl": 37292,
"mb": 36992,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
207,
208,
209,
664,
933
]
},
{
"tb": 64,
"tbk": 1,
"tl": 3,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
934,
935,
936,
937,
938,
939,
940,
941,
942
]
},
{
"tb": 16128,
"tbk": 4,
"tl": 34027,
"mb": 16128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
46,
136,
137,
138,
139,
140,
141,
142,
943,
518
]
},
{
"tb": 96,
"tbk": 1,
"tl": 2685,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
944,
945,
946,
947,
241
]
},
{
"tb": 48,
"tbk": 1,
"tl": 6684884,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
948,
949,
950,
951,
952,
23,
257,
258
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 190830,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
112,
113,
953
]
},
{
"tb": 96,
"tbk": 4,
"tl": 143,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
954,
263,
264,
265,
266,
267
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 4865,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
207,
208,
209,
664,
955
]
},
{
"tb": 134217728,
"tbk": 2,
"tl": 7206022,
"mb": 67108864,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
246,
456,
457,
458,
459,
956,
957,
958
]
},
{
"tb": 80,
"tbk": 1,
"tl": 19026783,
"mb": 80,
"mbk": 1,
"gb": 80,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
959,
960,
961,
962,
963,
964,
965,
966,
967
]
},
{
"tb": 2016,
"tbk": 4,
"tl": 3081,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
968,
969,
970,
971,
972,
973,
974,
975
]
},
{
"tb": 1048576,
"tbk": 2,
"tl": 585353,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
56,
57,
58,
59,
84,
85,
976
]
},
{
"tb": 160,
"tbk": 2,
"tl": 3162468,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
977,
978,
979,
980,
981,
982,
983,
984,
985
]
},
{
"tb": 256,
"tbk": 1,
"tl": 9583,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
222,
223,
224,
231,
232,
233,
986,
987,
988
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 26311611,
"mb": 524288,
"mbk": 1,
"gb": 524288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
56,
57,
58,
59,
84,
989,
990
]
},
{
"tb": 2960,
"tbk": 12,
"tl": 1257,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
121,
471,
991,
992,
993,
994,
995,
996,
997,
998
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1670,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
19,
20,
21,
999,
52
]
},
{
"tb": 32,
"tbk": 2,
"tl": 229,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
242,
243,
99,
100,
101,
102
]
},
{
"tb": 288,
"tbk": 1,
"tl": 30899,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
1000,
1001,
1002,
1003,
391
]
},
{
"tb": 1248,
"tbk": 12,
"tl": 329,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
121,
122,
123,
124,
1004,
1005,
1006
]
},
{
"tb": 642,
"tbk": 2,
"tl": 17086,
"mb": 642,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
46,
136,
137,
138,
139,
140,
141,
142,
1007,
470
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 44,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
56,
57,
58,
59,
84,
85,
1008
]
},
{
"tb": 96,
"tbk": 4,
"tl": 10604901,
"mb": 96,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
684,
685,
686,
687,
688,
689,
690,
691,
1009,
1010
]
},
{
"tb": 96,
"tbk": 1,
"tl": 6023,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
1011,
1012,
1013,
1014,
613
]
},
{
"tb": 512,
"tbk": 1,
"tl": 31,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
222,
223,
224,
225,
226,
227,
1015,
54,
162
]
},
{
"tb": 10240,
"tbk": 1,
"tl": 6045,
"mb": 10240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
46,
47,
48,
49,
1016,
613,
241,
734
]
},
{
"tb": 110336,
"tbk": 421,
"tl": 224118,
"mb": 16384,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
1017,
1018,
1019,
1020,
1021,
1022,
1023,
1024
]
},
{
"tb": 2904,
"tbk": 4,
"tl": 4041,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
652,
653,
654,
655,
1025,
917,
766,
663
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 405195,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
222,
223,
224,
225,
226,
227,
579,
28,
29,
30,
743
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2257153,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
24,
1026,
1027,
1028,
1029,
1030,
1031,
1032,
1033
]
},
{
"tb": 32,
"tbk": 1,
"tl": 952793,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
548,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041
]
},
{
"tb": 160,
"tbk": 1,
"tl": 8323,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
384,
1042,
1043,
66
]
},
{
"tb": 576,
"tbk": 4,
"tl": 1679,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
77,
78,
79,
80,
1044,
383,
479
]
},
{
"tb": 96,
"tbk": 1,
"tl": 6624,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
1045,
1046,
1047,
1048,
162
]
},
{
"tb": 1024,
"tbk": 2,
"tl": 216,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
56,
57,
58,
1049,
54,
162,
163
]
},
{
"tb": 4194304,
"tbk": 2,
"tl": 830222,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
1050,
1051,
1052,
1053,
1054,
1055,
1056,
1057
]
},
{
"tb": 83886080,
"tbk": 524288,
"tl": 2752558,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
222,
223,
224,
225,
226,
227,
392,
1058,
865
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 26309581,
"mb": 2097152,
"mbk": 1,
"gb": 2097152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
56,
57,
58,
59,
84,
1059,
1060
]
},
{
"tb": 64,
"tbk": 4,
"tl": 3163293,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
1061,
1062,
1063,
1064,
1065,
1066,
1067,
1068
]
},
{
"tb": 16,
"tbk": 1,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
46,
136,
137,
138,
139,
140,
141,
730,
1069,
66
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2060,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
652,
653,
654,
655,
1025,
414,
52,
23
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2727,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
652,
653,
654,
655,
656,
502,
286,
1070
]
},
{
"tb": 256,
"tbk": 1,
"tl": 7851,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
56,
57,
58,
94,
1071,
1072,
66
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 524,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
413,
917
]
},
{
"tb": 192,
"tbk": 1,
"tl": 8542,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
1073,
1074,
1075,
1076,
577
]
},
{
"tb": 320,
"tbk": 2,
"tl": 4232,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
77,
78,
79,
80,
1077,
82,
83
]
},
{
"tb": 642,
"tbk": 2,
"tl": 27,
"mb": 321,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
331,
332,
333,
334,
335,
336,
337,
1078,
339,
340
]
},
{
"tb": 160,
"tbk": 1,
"tl": 6666,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
1079,
1080,
1081,
1082,
66
]
},
{
"tb": 48,
"tbk": 1,
"tl": 6684874,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
1083,
1084,
1085,
1086,
1087,
23,
257,
258
]
},
{
"tb": 2400,
"tbk": 12,
"tl": 225,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
121,
1088,
1089,
1090,
1091,
1092,
1093
]
},
{
"tb": 32,
"tbk": 1,
"tl": 8333,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
384,
1094,
1043,
66
]
},
{
"tb": 8388672,
"tbk": 6,
"tl": 154126,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
56,
57,
58,
59,
381,
1095,
736
]
},
{
"tb": 64,
"tbk": 1,
"tl": 435621,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
33,
34,
35,
823,
371
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1344,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
222,
223,
224,
231,
232,
233,
1096,
479,
480
]
},
{
"tb": 480,
"tbk": 4,
"tl": 209,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
115,
116,
117,
118,
119,
413,
240
]
},
{
"tb": 48,
"tbk": 1,
"tl": 6684878,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
24,
1097,
1098,
1099,
1100,
23,
257,
258
]
},
{
"tb": 968,
"tbk": 4,
"tl": 1324,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
104,
105,
106,
107,
108,
109,
827,
1101
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 287159,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
222,
223,
224,
225,
226,
227,
392,
1102,
603
]
},
{
"tb": 6984,
"tbk": 42,
"tl": 139,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
103,
104,
189,
190,
191,
192,
193,
194,
239,
917,
766
]
},
{
"tb": 48,
"tbk": 1,
"tl": 19618568,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
1083,
1103,
1104,
1105,
1106,
1107,
1108,
1109,
1110
]
},
{
"tb": 56,
"tbk": 1,
"tl": 2580,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1111,
1070,
66,
163,
206
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 2728,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
1112,
1113,
1114,
1115,
1116,
1117,
1118,
1119
]
},
{
"tb": 768,
"tbk": 2,
"tl": 3162785,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
1120,
1121,
1122,
1123,
1124,
1125,
1126,
1127,
1128
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
46,
136,
137,
138,
139,
140,
141,
259,
772,
261
]
},
{
"tb": 20971520,
"tbk": 20,
"tl": 386736412,
"mb": 20971520,
"mbk": 20,
"gb": 20971520,
"gbk": 20,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
222,
223,
224,
225,
226,
227,
1129,
1130,
1131
]
},
{
"tb": 9584640,
"tbk": 4,
"tl": 212339,
"mb": 9584640,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
56,
57,
58,
59,
1132,
1133,
391
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 4372,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
644,
645,
646,
647,
1134
]
},
{
"tb": 16777216,
"tbk": 8,
"tl": 20490560,
"mb": 16777216,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
56,
57,
58,
59,
1135,
1136,
1137
]
},
{
"tb": 640,
"tbk": 2,
"tl": 13317,
"mb": 640,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
222,
223,
224,
225,
226,
227,
392,
1138,
66
]
},
{
"tb": 10240,
"tbk": 1,
"tl": 8569,
"mb": 10240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
46,
136,
137,
138,
139,
140,
141,
142,
1139,
144
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
287,
288,
501,
163,
206
]
},
{
"tb": 896,
"tbk": 6,
"tl": 8435,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
33,
34,
35,
1140,
1141
]
},
{
"tb": 4032,
"tbk": 4,
"tl": 4025,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
307,
308,
309,
310,
311,
917,
766
]
},
{
"tb": 6072,
"tbk": 11,
"tl": 4444,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
450,
451,
452,
1142,
1143,
1144
]
},
{
"tb": 512,
"tbk": 1,
"tl": 17,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
55,
56,
57,
58,
59,
381,
1145,
54
]
},
{
"tb": 640,
"tbk": 4,
"tl": 1437879,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
87,
88,
89,
90,
91,
92,
1146
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2103,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
652,
653,
654,
655,
1025,
240,
241,
734
]
}
],
"ftbl": [
"[root]",
"0x5e8c966c9937: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x5e8c9684fe42: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::new (src/do_work/air.rs:35:23)",
"0x5e8c967f08d1: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:101:85)",
"0x5e8c96641432: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5e8c9675dc0a: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:107:27)",
"0x5e8c9667abff: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5e8c9675b9a4: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:113:9)",
"0x5e8c966ca4a9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5e8c9678da9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c9694b916: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c9694b916: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c9694b916: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c966d7fbb: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5e8c969f0872: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x5e8c968813dd: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:659:26)",
"0x5e8c9686bc88: winter_prover::Prover::generate_proof (prover/src/lib.rs:268:13)",
"0x5e8c96c31b79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5e8c96c30319: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5e8c967bb972: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e8c967cfa19: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e8c969a5402: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e8c9686f7ad: winter_prover::Prover::generate_proof (prover/src/lib.rs:438:13)",
"0x5e8c9688ccd4: winter_prover::Prover::prove (prover/src/lib.rs:171:37)",
"0x5e8c9678f9fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c9694a856: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c9694a856: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c9694a856: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5e8c969bc1f9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5e8c969bc1f9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5e8c969bc1f9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5e8c96844c8c: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x5e8c9686c583: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:33)",
"0x5e8c967c2122: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e8c967cf6b9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e8c969a3d91: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e8c9686f665: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:17)",
"0x5e8c96789bbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c96912991: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c96912991: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c96912991: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c96912991: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d837b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969cded6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661b78b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c967e5cd2: winter_verifier::perform_verification (verifier/src/lib.rs:212:41)",
"0x5e8c96c305ca: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c9694b556: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c9694b556: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c9694b556: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c96a288e0: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x5e8c96abc65e: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x5e8c9686ebc5: winter_prover::Prover::generate_proof (prover/src/lib.rs:598:34)",
"0x5e8c969e7848: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x5e8c967e6c0f: winter_verifier::perform_verification (verifier/src/lib.rs:308:25)",
"0x5e8c967930ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c9694b736: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c9694b736: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c9694b736: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c966d7e7b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5e8c966cd47b: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x5e8c968478b6: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x5e8c9684b76c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x5e8c9677bd7b: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x5e8c9678339c: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x5e8c966a460c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x5e8c967ef907: winter_verifier::verify (verifier/src/lib.rs:108:19)",
"0x5e8c9678c2fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c96a93776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c96a93776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c96a93776: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5e8c969bc3b9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5e8c969bc3b9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5e8c969bc3b9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5e8c96ab8846: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x5e8c968f1c22: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:348:9)",
"0x5e8c96a6a63b: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:50:13)",
"0x5e8c966709f5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c966709f5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c966709f5: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5e8c969babf4: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5e8c9668ecb0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x5e8c967ec869: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:214:32)",
"0x5e8c96631603: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5e8c966cc393: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x5e8c9689c018: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x5e8c96a2f51a: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x5e8c96c2f6cc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x5e8c96c2dd9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x5e8c96c2ecf8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x5e8c96c2ecf8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x5e8c96c2b964: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5e8c96c2bc13: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x5e8c96a647eb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:39:30)",
"0x5e8c9666e909: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5e8c96a364cb: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x5e8c96a2ca9a: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x5e8c966b877b: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x5e8c9685008f: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:60:9)",
"0x5e8c968f1985: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:364:13)",
"0x5e8c9676e670: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:40:22)",
"0x5e8c96a6a6e7: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:13)",
"0x5e8c9686fb32: winter_prover::Prover::generate_proof (prover/src/lib.rs:403:21)",
"0x5e8c96bb3899: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5e8c96b200aa: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c96afb656: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c96afb656: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c96afb656: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c967d4d1c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x5e8c969e1b5e: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x5e8c9669f2ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x5e8c967e6810: winter_verifier::perform_verification (verifier/src/lib.rs:302:9)",
"0x5e8c969dee5d: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x5e8c969e2406: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x5e8c969ee866: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x5e8c96bc5799: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5e8c96bc0b39: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5e8c96b23830: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e8c96b25899: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e8c96b00451: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e8c9686f7ed: winter_prover::Prover::generate_proof (prover/src/lib.rs:439:13)",
"0x5e8c96bdf739: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5e8c96bebd2b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5e8c96beb751: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5e8c96be7adb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5e8c96be476e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5e8c96be6220: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5e8c96be5428: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5e8c96796a9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c96a350c6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c96a350c6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c96a350c6: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5e8c969bc039: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5e8c969bc039: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5e8c969bc039: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5e8c96844ca3: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x5e8c96c31bbc: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c96c31bbc: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c96c31bbc: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5e8c96c327fc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5e8c96c327fc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5e8c96c327fc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5e8c96c2fe2c: <winter_utils::serde::byte_reader::SliceReader as winter_utils::serde::byte_reader::ByteReader>::read_vec (src/serde/byte_reader.rs:151:22)",
"0x5e8c96bcfec9: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:352:21)",
"0x5e8c96bcae53: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:174:32)",
"0x5e8c9679194c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c96905ae7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c96905ae7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c96905ae7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c96905ae7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d753e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969d1d37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661dd4e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c9688d619: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces (src/do_work/prover.rs:30:9)",
"0x5e8c96a67f6c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:148:31)",
"0x5e8c96a6b9e0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:122:17)",
"0x5e8c9674b436: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5e8c96849ca7: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x5e8c96a349a3: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x5e8c96ab882c: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x5e8c969e3af6: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x5e8c967e6d3a: winter_verifier::perform_verification (verifier/src/lib.rs:316:28)",
"0x5e8c967ef9d2: winter_verifier::verify (verifier/src/lib.rs:110:21)",
"0x5e8c9664ed99: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:118:9)",
"0x5e8c9678d2bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c96945ffe: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c96945ffe: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c96945ffe: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c96945ffe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5e8c969d743b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969ceb76: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c96a7010b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c9669d01c: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x5e8c969ee7a5: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x5e8c968898e7: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:706:26)",
"0x5e8c9686d110: winter_prover::Prover::generate_proof (prover/src/lib.rs:472:37)",
"0x5e8c969e6bd0: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x5e8c96bd08d2: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:215:25)",
"0x5e8c96bcb15d: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:188:24)",
"0x5e8c96788c0c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c9692ab31: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c9692ab31: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c9692ab31: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c9692ab31: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d80ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969cc5a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661de5b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c96757967: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x5e8c96a96e40: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x5e8c96b316ac: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c96b316ac: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c96b316ac: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5e8c96b024a9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5e8c96b024a9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5e8c96b024a9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5e8c96844d84: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x5e8c969047e7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c969047e7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c969047e7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c969047e7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d873e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969ce7f7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661f32e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c96840d13: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:253:9)",
"0x5e8c9684fd16: <examples::do_work::air::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (src/do_work/air.rs:13:9)",
"0x5e8c967ef718: winter_verifier::verify (verifier/src/lib.rs:97:38)",
"0x5e8c964a79d5: winterfell::main (examples/src/main.rs:83:11)",
"0x5e8c96c30ab0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e8c96c30ce9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e8c96c31f12: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e8c96c30d49: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x5e8c96bd6d7a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x5e8c968f8bb8: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:510:13)",
"0x5e8c967e59d9: winter_verifier::perform_verification (verifier/src/lib.rs:183:13)",
"0x5e8c9690c5b7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c9690c5b7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c9690c5b7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c9690c5b7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d5b0e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969cda37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661d2be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c968a5c76: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x5e8c9667041c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c9667041c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c9667041c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5e8c969bb939: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5e8c969bb939: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5e8c969bb939: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5e8c966c023f: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x5e8c966c0307: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5e8c967e7156: winter_verifier::perform_verification (verifier/src/lib.rs:225:13)",
"0x5e8c9667093c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5e8c9667093c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5e8c9667093c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5e8c966a4cae: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x5e8c967b07b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e8c967ced89: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e8c969a4f32: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e8c967e748c: winter_verifier::perform_verification (verifier/src/lib.rs:182:9)",
"0x5e8c969dfa2c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x5e8c968a5b07: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x5e8c968afcb4: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x5e8c96a08e95: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x5e8c968500bd: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:61:13)",
"0x5e8c96a64b4c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:63:9)",
"0x5e8c967e7247: winter_verifier::perform_verification (verifier/src/lib.rs:223:43)",
"0x5e8c96797a5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c969069a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c969069a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c969069a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c969069a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d871e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969cb517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661d37e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c968bff51: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x5e8c966d10ab: winter_prover::trace::Trace::validate (src/trace/mod.rs:122:26)",
"0x5e8c9686ff21: winter_prover::Prover::generate_proof (prover/src/lib.rs:370:17)",
"0x5e8c9664e2b2: <examples::do_work::DoWorkExample<H> as examples::Example>::prove (src/do_work/mod.rs:108:9)",
"0x5e8c964a6d4d: winterfell::main (examples/src/main.rs:49:17)",
"0x5e8c968a1df4: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x5e8c968a1ad6: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x5e8c96757a03: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x5e8c96a34299: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x5e8c968fc5ae: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x5e8c966ba89d: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x5e8c968fbcce: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x5e8c968fe6c6: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x5e8c968f19ea: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:362:9)",
"0x5e8c96930111: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c96930111: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c96930111: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c96930111: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d59fb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969cecc6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661d86b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c9676da5c: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:82:9)",
"0x5e8c96beb9cb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5e8c96beb6a1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5e8c96be7c9b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5e8c96be2471: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5e8c96be2af7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5e8c96bdd72b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5e8c967cbf22: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e8c967cefc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e8c969a8aaf: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e8c96a245d9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x5e8c96691583: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x5e8c96a9982c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x5e8c968a1b58: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x5e8c9686b656: winter_prover::Prover::generate_proof (prover/src/lib.rs:228:27)",
"0x5e8c9678d55c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c969371c7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c969371c7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c969371c7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c969371c7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d606e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969cb2c7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9676942e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c9686b79f: winter_prover::Prover::generate_proof (prover/src/lib.rs:243:41)",
"0x5e8c96922107: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c96922107: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c96922107: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c96922107: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d74fe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969d14b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661e86e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c968e7d8f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x5e8c9689ff58: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c9689ff58: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c9689ff58: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5e8c969bac17: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5e8c969df698: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x5e8c9678e7bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c9693bb27: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c9693bb27: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c9693bb27: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c9693bb27: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969b4b76: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5e8c969ceba7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661dd6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c968acd5b: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x5e8c96abc6d0: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x5e8c96789e5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c96935771: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c96935771: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c96935771: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c96935771: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d60cb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969cf9c6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661c0cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c96846e5a: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x5e8c96bc0e7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c96b3157c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c96b3157c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c96b3157c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5e8c96b01cc9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5e8c96b01cc9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5e8c96b01cc9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5e8c968f0e3f: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x5e8c96a001f6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5e8c966a4c48: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5e8c968a24f8: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x5e8c967e66c1: winter_verifier::perform_verification (verifier/src/lib.rs:295:27)",
"0x5e8c96c30d18: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x5e8c96c3200a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x5e8c96c3200a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x5e8c96c31dae: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x5e8c96c31dae: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x5e8c96c31e9d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x5e8c9684b7d0: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x5e8c96a6b819: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:129:9)",
"0x5e8c9686fbd3: winter_prover::Prover::generate_proof (prover/src/lib.rs:407:21)",
"0x5e8c9678f4bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c969424c8: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c969424c8: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c969424c8: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c969424c8: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5e8c969d972e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969d0407: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c96ab917e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c968fce5c: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x5e8c9679070a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c96922781: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c96922781: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c96922781: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c96922781: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d7dab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969cc306: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661c09b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c96880c73: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:634:36)",
"0x5e8c968f2239: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:536:13)",
"0x5e8c96754428: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x5e8c9689b833: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x5e8c969baebb: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c969baebb: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c969baebb: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c969baebb: <[V] as alloc::slice::Concat<T>>::concat (alloc/src/slice.rs:712:26)",
"0x5e8c969bacab: alloc::slice::<impl [T]>::concat (alloc/src/slice.rs:561:9)",
"0x5e8c968a9199: winter_prover::trace::commitment::build_segment_queries::{{closure}}::{{closure}} (src/trace/commitment.rs:164:27)",
"0x5e8c96727019: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5e8c968a7736: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:159:13)",
"0x5e8c966cbf42: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x5e8c96a913fb: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x5e8c968c0010: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x5e8c9689f7e9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5e8c967d0f24: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x5e8c96a2cca7: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x5e8c96949067: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5e8c96757a1e: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x5e8c96a2f5d7: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x5e8c96aa4e0b: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x5e8c96ab21b2: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x5e8c96949097: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5e8c9686cc77: winter_prover::Prover::generate_proof (prover/src/lib.rs:442:35)",
"0x5e8c968f8c93: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:505:13)",
"0x5e8c96906141: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c96906141: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c96906141: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c96906141: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d8f9b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969cd346: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661b88b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c9686b4e3: winter_prover::Prover::generate_proof (prover/src/lib.rs:209:39)",
"0x5e8c969ea1a4: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x5e8c967e6cbe: winter_verifier::perform_verification (verifier/src/lib.rs:314:25)",
"0x5e8c967a2982: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e8c967cec39: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e8c969a7a51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e8c968476c9: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x5e8c9674b30d: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5e8c968447be: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x5e8c96842f17: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5e8c966825ac: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:293:57)",
"0x5e8c969dff53: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x5e8c96abc495: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x5e8c96a67fd0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:149:33)",
"0x5e8c968ebd61: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x5e8c967e633e: winter_verifier::perform_verification (verifier/src/lib.rs:272:24)",
"0x5e8c9678d01c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c9691fee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c9691fee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c9691fee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c9691fee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969afbcf: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5e8c969cd849: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661ce5e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c967ef784: winter_verifier::verify (verifier/src/lib.rs:101:24)",
"0x5e8c96921877: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c96921877: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c96921877: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c96921877: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d670e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969d2317: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661eace: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c969ea532: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x5e8c9678991c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c96913dc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c96913dc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c96913dc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c96913dc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969b56b3: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5e8c969cabc9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661d01e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c9686bf62: winter_prover::Prover::generate_proof (prover/src/lib.rs:291:36)",
"0x5e8c96ab8983: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x5e8c96a6464a: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:25:25)",
"0x5e8c966cf511: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:132:51)",
"0x5e8c96631a1a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5e8c96a74da5: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5e8c966d1598: winter_prover::trace::Trace::validate (src/trace/mod.rs:177:13)",
"0x5e8c96a0bccb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5e8c96a0b471: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5e8c9681ff0b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5e8c96818451: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x5e8c9681e77d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x5e8c9681210e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x5e8c9694bb46: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c9694bb46: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c9694bb46: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c966d7d3b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5e8c969f5c77: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x5e8c969edc8c: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x5e8c969f47bc: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x5e8c96bebb7b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5e8c96beb5f1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5e8c96be7bbb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5e8c96be487e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5e8c96be5c4c: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5e8c96be4d8a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5e8c96bd4784: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:155:27)",
"0x5e8c96bcb178: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:29)",
"0x5e8c96bdd8ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c96bd9b6c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c96bd9b6c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c96bd9b6c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5e8c96bd962c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5e8c96bd962c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5e8c96bd962c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5e8c968bf1a5: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x5e8c968ef73c: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x5e8c967e6e15: winter_verifier::perform_verification (verifier/src/lib.rs:320:5)",
"0x5e8c967d6191: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x5e8c96a0cdab: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5e8c96a0b7e1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5e8c9681f4eb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5e8c967f479d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5e8c966bd0fc: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5e8c966ba911: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x5e8c967bc842: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e8c967cf419: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e8c969a4ba2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e8c9678357e: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x5e8c96a0c02b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5e8c96a0b681: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5e8c9681f12b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5e8c967f48bd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5e8c966bdf89: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5e8c96899a00: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5e8c966cb9cb: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x5e8c9663832c: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5e8c968a1954: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x5e8c967ef5a9: winter_verifier::verify (verifier/src/lib.rs:95:32)",
"0x5e8c96a24152: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x5e8c9678ff3a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c9690115e: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c9690115e: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c9690115e: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c9690115e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5e8c969d721e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969cc957: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c96a6376e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c969e6755: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:144:35)",
"0x5e8c9678c83c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c9694b786: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c9694b786: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c9694b786: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c9686bf85: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:39)",
"0x5e8c96bd0f46: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:365:21)",
"0x5e8c96bd03d6: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:146:27)",
"0x5e8c96bd42bd: <winter_air::proof::commitments::Commitments as winter_utils::serde::Deserializable>::read_from (src/proof/commitments.rs:108:22)",
"0x5e8c96bcabdc: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:167:27)",
"0x5e8c9691f787: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c9691f787: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c9691f787: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c9691f787: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d667e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969cd807: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661f71e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c966cf33a: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:132:32)",
"0x5e8c96bcfa1e: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:168:21)",
"0x5e8c96bcae38: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:176:34)",
"0x5e8c969ea3d9: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x5e8c969fe835: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x5e8c967541d0: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x5e8c967bdc02: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e8c967cecc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e8c969a8d48: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e8c9686fbf6: winter_prover::Prover::generate_proof (prover/src/lib.rs:408:17)",
"0x5e8c968a911b: winter_prover::trace::commitment::build_segment_queries::{{closure}}::{{closure}} (src/trace/commitment.rs:162:42)",
"0x5e8c96934f40: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c96934f40: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c96934f40: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c96934f40: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5e8c969d714b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969ce8a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661b27b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c96a2cbca: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x5e8c96a11f64: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:142:33)",
"0x5e8c9679266c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c9694ae1c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c9694ae1c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c9694ae1c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5e8c969bbe79: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5e8c969bbe79: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5e8c969bbe79: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5e8c9686d6be: winter_prover::Prover::generate_proof (prover/src/lib.rs:500:39)",
"0x5e8c969e789e: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x5e8c96bd5118: <winter_air::proof::context::Context as winter_utils::serde::Deserializable>::read_from (src/proof/context.rs:184:35)",
"0x5e8c96bcabf7: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:27)",
"0x5e8c9677bd36: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x5e8c9678ab7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c9692cf11: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c9692cf11: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c9692cf11: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c9692cf11: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d73db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969ccd46: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661bacb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c968afc0e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x5e8c9678e51c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c96a002be: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c96a002be: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c96a002be: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5e8c969bab77: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5e8c96757c58: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x5e8c96bd1187: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x5e8c96bcffed: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:357:24)",
"0x5e8c964a78fd: winterfell::main (examples/src/main.rs:80:24)",
"0x5e8c9677c04d: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x5e8c9694abc3: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5e8c967b0ca2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e8c967cf539: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e8c969a7b42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e8c969daffc: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x5e8c968fbd4a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x5e8c96929f37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c96929f37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c96929f37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c96929f37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d92be: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969d22d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661c4de: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c968412c4: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:198:23)",
"0x5e8c96a122ef: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x5e8c9684b83e: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x5e8c96bd1709: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5e8c96bd24bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c96bd5776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c96bd5776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c96bd5776: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c96bd02b9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5e8c96bd070b: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:211:22)",
"0x5e8c96a126ec: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x5e8c9686d868: winter_prover::Prover::generate_proof (prover/src/lib.rs:514:9)",
"0x5e8c96936637: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c96936637: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c96936637: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c96936637: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d9ade: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969d24b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661cd0e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c9686be32: winter_prover::Prover::generate_proof (prover/src/lib.rs:286:23)",
"0x5e8c96a1a10a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x5e8c968a5bd9: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x5e8c969076b1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c969076b1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c969076b1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c969076b1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d571b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969cee16: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661e23b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c96691409: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x5e8c96bd275c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c96bd5726: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c96bd5726: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c96bd5726: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c96bcad52: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:172:33)",
"0x5e8c96918187: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c96918187: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c96918187: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c96918187: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d929e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969cde27: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661b7ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c969e695b: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x5e8c9689b81d: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x5e8c9686df26: winter_prover::Prover::generate_proof (prover/src/lib.rs:548:13)",
"0x5e8c966b9e22: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x5e8c9674f5c4: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x5e8c96a6fd04: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x5e8c969f51ab: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x5e8c969f4696: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x5e8c968894e4: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:691:36)",
"0x5e8c96bcf862: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:164:22)",
"0x5e8c96bddda0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e8c96bd95f9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e8c96bd85a1: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e8c96bd8eb0: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x5e8c968bfa4e: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x5e8c96a9108f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x5e8c96a23d42: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x5e8c96755484: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x5e8c96791e8c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c9694b966: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c9694b966: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c9694b966: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c967d0c9d: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x5e8c966a423c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x5e8c96a91450: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x5e8c969f0940: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x5e8c9669fd3c: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x5e8c967e698e: winter_verifier::perform_verification (verifier/src/lib.rs:303:42)",
"0x5e8c96ab0c77: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x5e8c9686ea4f: winter_prover::Prover::generate_proof (prover/src/lib.rs:590:25)",
"0x5e8c967d2564: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x5e8c96a289fc: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x5e8c967952fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c96912135: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c96912135: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c96912135: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c96912135: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5e8c969d610e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969cb737: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661bcce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c969f31b0: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:218:46)",
"0x5e8c9686f808: winter_prover::Prover::generate_proof (prover/src/lib.rs:440:13)",
"0x5e8c96909541: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c96909541: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c96909541: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c96909541: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d790b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969cd276: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661d45b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c966a3b0f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x5e8c96792e4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c966702ec: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c966702ec: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c966702ec: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5e8c969bcf19: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5e8c969bcf19: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5e8c969bcf19: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5e8c96a355d6: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x5e8c96a35440: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5e8c967e613b: winter_verifier::perform_verification (verifier/src/lib.rs:263:61)",
"0x5e8c96a355ed: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x5e8c96a6b58d: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:33)",
"0x5e8c96a00bc2: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x5e8c9689e240: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x5e8c96a14bb1: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x5e8c9692b9d1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c9692b9d1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c9692b9d1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c9692b9d1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d7cfb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969d0026: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661e64b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c966a3c9f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x5e8c9677bf3a: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x5e8c9691b7f7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c9691b7f7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c9691b7f7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c9691b7f7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d7b7e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969d1f39: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661c0ee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c9686b603: winter_prover::Prover::generate_proof (prover/src/lib.rs:217:20)",
"0x5e8c967a7392: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e8c967cea59: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e8c969a3b42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e8c967710d9: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:174:17)",
"0x5e8c9676ef30: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:54:17)",
"0x5e8c96909317: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c96909317: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c96909317: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c96909317: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d706e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969d2587: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661b47e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c96846c6a: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x5e8c9685012c: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:62:13)",
"0x5e8c96c2bd9e: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x5e8c968a201f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x5e8c96759f5f: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x5e8c968afc1d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x5e8c9686eace: winter_prover::Prover::generate_proof (prover/src/lib.rs:593:29)",
"0x5e8c96847be1: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x5e8c96844fbc: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x5e8c9684a211: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x5e8c966ce87b: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:235:25)",
"0x5e8c96a99a62: examples::do_work::prover::build_do_work_trace (src/do_work/prover.rs:65:5)",
"0x5e8c9688d668: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces::{{closure}} (src/do_work/prover.rs:32:27)",
"0x5e8c9684fb27: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x5e8c9684d8cd: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x5e8c96844d29: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x5e8c96a0c6eb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5e8c96a0b891: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5e8c9681ef4b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5e8c967f49dd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5e8c966bd83f: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5e8c968996c3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5e8c9693d451: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c9693d451: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c9693d451: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c9693d451: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d67db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969cb136: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661c65b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c966a397f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x5e8c96752499: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x5e8c968b1a92: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x5e8c966884c6: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:493:32)",
"0x5e8c9663e09a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5e8c9670b2a2: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5e8c96609c9b: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5e8c96626906: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5e8c96a9e35d: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x5e8c96ab1152: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x5e8c966888e9: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:641:17)",
"0x5e8c969ff8ce: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x5e8c966a5185: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5e8c96a24524: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x5e8c969fe6ed: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x5e8c968a1b12: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x5e8c96bd3012: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e8c96bd41a9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e8c96bd5878: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e8c96bcbc1a: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:13)",
"0x5e8c9678bdbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c9692f127: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c9692f127: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c9692f127: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c9692f127: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d601e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969cc6b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661efae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c969ece38: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x5e8c96849f48: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x5e8c966d51f6: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x5e8c96aa4c8f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x5e8c969f74a2: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x5e8c969f6147: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5e8c96880df7: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:645:31)",
"0x5e8c968a8078: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x5e8c9664161a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5e8c966f9e45: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5e8c96911777: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c96911777: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c96911777: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c96911777: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d62de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969d2697: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661eb8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c968bf131: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x5e8c96937c51: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c96937c51: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c96937c51: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c96937c51: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d5f6b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969d0a96: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661d53b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c966a3a47: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x5e8c96794dbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c969033c1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c969033c1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c969033c1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c969033c1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d89db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969cbd06: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661deab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c967e5d9f: winter_verifier::perform_verification (verifier/src/lib.rs:216:40)",
"0x5e8c968b5a48: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x5e8c968bfdda: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x5e8c96a9a01d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x5e8c968f208d: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:540:13)",
"0x5e8c96a12810: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x5e8c967d4f79: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x5e8c966a53ef: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x5e8c9668b53c: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x5e8c969ea1bf: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x5e8c96a2f42f: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x5e8c96a2f504: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x5e8c96bd96b6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x5e8c968bfb2b: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x5e8c969ff6fb: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x5e8c96ab0c96: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x5e8c968f22c9: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:534:17)",
"0x5e8c96a12580: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x5e8c968a5a53: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x5e8c96687bb0: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:221:17)",
"0x5e8c96632922: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5e8c96a614dd: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::SpecFold>::spec_fold (iter/adapters/zip.rs:685:25)",
"0x5e8c96a4dee7: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::fold (iter/adapters/zip.rs:249:9)",
"0x5e8c96a389b7: <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/zip.rs:103:9)",
"0x5e8c96be166d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5e8c96bdc538: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5e8c96bdadd7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5e8c96935ba1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c96935ba1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c96935ba1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c96935ba1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d8b3b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969d00b6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661c6cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c9686bc5d: winter_prover::Prover::generate_proof (prover/src/lib.rs:266:43)",
"0x5e8c96783629: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x5e8c96681b09: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:211:31)",
"0x5e8c96638d3a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5e8c967290a8: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5e8c966023ba: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5e8c9662263a: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5e8c96ab7cb7: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x5e8c96a69a27: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:272:18)",
"0x5e8c96a68297: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:166:30)",
"0x5e8c96a91103: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x5e8c969f326a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x5e8c969f0903: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x5e8c9679751c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c9693df17: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c9693df17: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c9693df17: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c9693df17: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d7b2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969cd147: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661ca9e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c9686b416: winter_prover::Prover::generate_proof (prover/src/lib.rs:205:38)",
"0x5e8c96794b1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c9691d7cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c9691d7cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c9691d7cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c9691d7cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5e8c969d886e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969ca947: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661be8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c968fbbf6: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x5e8c96ab0bcd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x5e8c96943907: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c96943907: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c96943907: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c96943907: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d6fde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969d0627: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661b93e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c9664ed54: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:112:30)",
"0x5e8c9690a197: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c9690a197: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c9690a197: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c9690a197: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d8f6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969ca599: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661dc6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c969ebe47: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x5e8c96a19c60: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x5e8c9690b911: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c9690b911: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c9690b911: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c9690b911: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d6f1b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969d2516: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661c20b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c966a3bd7: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x5e8c969f33df: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:226:50)",
"0x5e8c969f3527: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:228:37)",
"0x5e8c96a12312: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x5e8c967b3912: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e8c967cf119: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e8c969a494f: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e8c969dfd8a: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x5e8c96a9e274: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x5e8c96770f72: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:169:36)",
"0x5e8c966c022a: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x5e8c96a6b4c0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:28)",
"0x5e8c9679823c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c96935977: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c96935977: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c96935977: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c96935977: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d665e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969ca517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661b60e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c9686d5d6: winter_prover::Prover::generate_proof (prover/src/lib.rs:491:51)",
"0x5e8c9680ad8f: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5e8c96816711: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5e8c96811caa: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5e8c96777175: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x5e8c965b8149: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5e8c965b6c19: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5e8c965b5030: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e8c965b5298: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x5e8c965b4b5a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x5e8c965b4b5a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x5e8c964a96a1: alloc::string::String::reserve (alloc/src/string.rs:1152:9)",
"0x5e8c964a96a1: <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend (alloc/src/string.rs:2173:14)",
"0x5e8c964a977c: <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter (alloc/src/string.rs:2093:9)",
"0x5e8c96bd0dc4: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:361:22)",
"0x5e8c967bd712: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e8c967cf149: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e8c969a6122: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e8c968a5c91: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x5e8c967977bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c9694b876: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c9694b876: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c9694b876: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c9686bfc9: winter_prover::Prover::generate_proof (prover/src/lib.rs:299:44)",
"0x5e8c96aa4caa: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x5e8c96a3441a: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x5e8c96a19a51: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x5e8c96a96e2b: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x5e8c969ed76a: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x5e8c96634c7a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5e8c96797f9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c96915d37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c96915d37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c96915d37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c96915d37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d726e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969ca6a7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661cdde: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c96880d43: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:638:34)",
"0x5e8c96910227: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c96910227: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c96910227: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c96910227: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d623e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969cdd47: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661ebee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c968c010f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x5e8c96841210: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:197:28)",
"0x5e8c9679727c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c96908557: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c96908557: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c96908557: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c96908557: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969b679d: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5e8c969d221c: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661e4ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c9684e82a: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x5e8c96ab4c0e: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x5e8c96ab2104: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x5e8c9686e38b: winter_prover::Prover::generate_proof (prover/src/lib.rs:561:9)",
"0x5e8c9689b151: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x5e8c968b2df3: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x5e8c96bde1a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c96bde1a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c96bde1a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c96bde1a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5e8c96bde5ee: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c96bde5b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c96bdf84e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c96bdd299: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x5e8c96abc6eb: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x5e8c967c6152: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e8c967cf389: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e8c969a7ff2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e8c96aa4f89: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x5e8c96be16cd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5e8c96bdc84b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5e8c96bdaf13: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5e8c96bd45bd: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:151:28)",
"0x5e8c96ab4ab6: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x5e8c9676dbd9: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:82:31)",
"0x5e8c96643553: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5e8c967a9622: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e8c967cf839: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e8c969a8252: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e8c96a19db8: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x5e8c969e6693: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x5e8c96a19782: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x5e8c96919666: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c96919666: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c96919666: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c96919666: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5e8c969d5b6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969ce5dc: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c969dd9be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c969dfedb: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x5e8c969df6ff: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x5e8c9693e9a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c9693e9a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c9693e9a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c9693e9a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d93de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969d04c9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661eede: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c966cb5e0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x5e8c96900c21: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c96900c21: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c96900c21: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c96900c21: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d73ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969caac6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661f01b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c9686d6a3: winter_prover::Prover::generate_proof (prover/src/lib.rs:495:52)",
"0x5e8c9676b9d0: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x5e8c966a3e38: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x5e8c96a91184: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x5e8c967c7022: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e8c967cf9e9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e8c969a6842: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e8c967e7673: winter_verifier::perform_verification (verifier/src/lib.rs:177:9)",
"0x5e8c969e6bf3: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x5e8c9690e727: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c9690e727: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c9690e727: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c9690e727: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d85de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969ce507: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661ecfe: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c96848277: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x5e8c969f3476: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:228:38)",
"0x5e8c968b2eb0: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x5e8c9686b8ba: winter_prover::Prover::generate_proof (prover/src/lib.rs:257:22)",
"0x5e8c9692fee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c9692fee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c9692fee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c9692fee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d5dde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969ccc57: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661f47e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c96a34994: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x5e8c966a37d0: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x5e8c966a3fa8: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x5e8c96786fee: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x5e8c966a442b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x5e8c96bd3502: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e8c96bd4179: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e8c96bd5ae2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e8c96bcb916: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:13)",
"0x5e8c9668ec8d: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x5e8c968f0e2a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x5e8c967be5e2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5e8c967cf209: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5e8c969a90e2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5e8c966a549b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x5e8c9679290c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c9694b466: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c9694b466: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c9694b466: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c9686c051: winter_prover::Prover::generate_proof (prover/src/lib.rs:301:32)",
"0x5e8c96beb81b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5e8c96beb541: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5e8c96be7d7b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5e8c96be23a1: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5e8c96be2b37: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5e8c96bdd6db: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5e8c9676b7fb: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x5e8c96847d04: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x5e8c968bf214: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x5e8c9694bcd6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c9694bcd6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c9694bcd6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c9686c00d: winter_prover::Prover::generate_proof (prover/src/lib.rs:300:37)",
"0x5e8c968bfbf6: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x5e8c96a11ea2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x5e8c9691af91: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c9691af91: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c9691af91: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c9691af91: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d5edb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969cf626: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661b4ab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c96880ba6: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:630:42)",
"0x5e8c966916f1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x5e8c969312f0: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c969312f0: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c969312f0: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c969312f0: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5e8c969d55bb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969d0da6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661cdbb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c96a24075: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x5e8c9679140c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5e8c96920bc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5e8c96920bc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5e8c96920bc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5e8c96920bc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5e8c969d6a9e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5e8c969d1c79: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5e8c9661c94e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5e8c9676e77a: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:50:26)",
"0x5e8c96841723: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:200:34)",
"0x5e8c96630b0a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5e8c967041bf: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5e8c966d8303: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x5e8c96aa4c25: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x5e8c96ab0e9d: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x5e8c96846db1: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x5e8c966364aa: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5e8c96a76a05: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5e8c966a527d: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x5e8c96bcfd02: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:348:22)",
"0x5e8c96a9a95b: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x5e8c968a19cc: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x5e8c967f9d31: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5e8c967fd477: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5e8c967f21bb: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5e8c969e6853: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x5e8c96a9a00c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)"
]
}