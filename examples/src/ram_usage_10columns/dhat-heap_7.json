{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell do-work -n 7 -l 65536",
"pid": 22505,
"tg": 73846042,
"te": 90373044,
"pps": [
{
"tb": 288,
"tbk": 2,
"tl": 812730,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7
]
},
{
"tb": 112,
"tbk": 7,
"tl": 810,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14
]
},
{
"tb": 35840,
"tbk": 224,
"tl": 966033,
"mb": 35840,
"mbk": 224,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
17,
18,
19,
20,
21,
22,
23,
24,
25
]
},
{
"tb": 3968,
"tbk": 4,
"tl": 4115,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
26,
27,
28,
29,
30,
31,
32,
33
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 1758268,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
34,
35,
36,
37,
38,
39,
40
]
},
{
"tb": 168,
"tbk": 1,
"tl": 16389393,
"mb": 168,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 480,
"tbk": 4,
"tl": 6419,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
49,
50,
51,
52,
53,
54,
55
]
},
{
"tb": 512,
"tbk": 1,
"tl": 18,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
34,
35,
36,
56,
57,
58,
59
]
},
{
"tb": 944,
"tbk": 4,
"tl": 1283,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
60,
61,
62,
63,
64,
65,
66,
67,
68
]
},
{
"tb": 72,
"tbk": 1,
"tl": 14358,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
69,
70,
46,
47,
48
]
},
{
"tb": 2832,
"tbk": 4,
"tl": 4130,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
71,
72,
73,
74,
75,
32,
33,
76
]
},
{
"tb": 2832,
"tbk": 4,
"tl": 24573,
"mb": 2832,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
71,
72,
73,
74,
77,
78,
79,
80
]
},
{
"tb": 288,
"tbk": 2,
"tl": 6460,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
81
]
},
{
"tb": 336,
"tbk": 7,
"tl": 4667228,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
82,
83,
84,
85,
86,
87,
88
]
},
{
"tb": 23296,
"tbk": 115,
"tl": 685432,
"mb": 23296,
"mbk": 115,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
26,
89,
90,
91,
92,
93,
78,
79
]
},
{
"tb": 3528,
"tbk": 18,
"tl": 517,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
60,
61,
94,
95,
96,
97,
98,
99,
100,
66,
101
]
},
{
"tb": 6752,
"tbk": 42,
"tl": 924,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
60,
61,
94,
95,
96,
97,
98,
99,
100,
66,
67
]
},
{
"tb": 336,
"tbk": 14,
"tl": 97586836,
"mb": 336,
"mbk": 14,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
102,
103,
104,
105,
106,
107,
108,
109,
110,
111
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 293795,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
17,
18,
19,
112,
113,
114,
115,
116,
117
]
},
{
"tb": 96,
"tbk": 2,
"tl": 4310172,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
49,
50,
51,
52,
53,
118,
46
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 4467,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
119,
120,
121,
122,
123
]
},
{
"tb": 512,
"tbk": 1,
"tl": 9,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
124,
125,
126,
127,
128,
129,
130,
131
]
},
{
"tb": 58720256,
"tbk": 28,
"tl": 192636394,
"mb": 58720256,
"mbk": 28,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
34,
35,
36,
37,
132,
133,
134
]
},
{
"tb": 3528,
"tbk": 18,
"tl": 71,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
60,
61,
94,
95,
96,
97,
98,
99,
135,
136,
137
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 52508,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
17,
18,
19,
20,
21,
22,
138,
139,
46
]
},
{
"tb": 14680064,
"tbk": 7,
"tl": 2824008,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
140,
141,
142,
143,
144,
145,
146,
147
]
},
{
"tb": 384,
"tbk": 3,
"tl": 623,
"mb": 384,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
148,
149,
150,
151,
32
]
},
{
"tb": 50331648,
"tbk": 524288,
"tl": 43111458,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
152,
153,
154,
155,
156,
157,
158,
159,
160
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
161,
162,
163,
164,
165,
166,
167,
168,
169,
170
]
},
{
"tb": 16,
"tbk": 1,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
161,
162,
163,
164,
165,
166,
167,
171,
172,
173
]
},
{
"tb": 56,
"tbk": 1,
"tl": 1972,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
60,
61,
174,
175,
176,
177,
178,
179,
180,
181
]
},
{
"tb": 504,
"tbk": 21,
"tl": 437,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
182,
183,
184,
185,
186,
187,
188,
189,
190
]
},
{
"tb": 3584,
"tbk": 7,
"tl": 1741,
"mb": 3584,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
34,
35,
36,
191,
192,
58,
59
]
},
{
"tb": 96,
"tbk": 2,
"tl": 1686,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
49,
50,
51,
52,
53,
193,
194
]
},
{
"tb": 336,
"tbk": 1,
"tl": 2905,
"mb": 336,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
195,
196,
197,
198,
199,
200,
201,
202,
203
]
},
{
"tb": 2097152,
"tbk": 2,
"tl": 5884566,
"mb": 2097152,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
17,
18,
19,
20,
21,
22,
204,
205,
206
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 44,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
34,
35,
36,
37,
207,
208,
209
]
},
{
"tb": 112,
"tbk": 7,
"tl": 565,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
17,
18,
19,
20,
21,
22,
210,
211,
212
]
},
{
"tb": 1512,
"tbk": 1,
"tl": 9557,
"mb": 1512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
213,
214,
215,
216,
217,
218,
219,
220,
221
]
},
{
"tb": 14680064,
"tbk": 7,
"tl": 6179161,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
34,
35,
36,
37,
222,
223,
224
]
},
{
"tb": 2272,
"tbk": 15,
"tl": 11300100,
"mb": 2272,
"mbk": 15,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
225,
226,
227,
228,
229,
230,
231,
232
]
},
{
"tb": 32,
"tbk": 1,
"tl": 9440,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
26,
89,
90,
91,
92,
233,
234,
173
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2031,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
71,
72,
73,
74,
75,
235,
139,
46
]
},
{
"tb": 2880,
"tbk": 24,
"tl": 2391,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
49,
50,
51,
52,
53,
236,
66
]
},
{
"tb": 6720,
"tbk": 28,
"tl": 73,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
237,
238,
239,
240,
241
]
},
{
"tb": 1920,
"tbk": 8,
"tl": 9590,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
237,
238,
239,
242,
243
]
},
{
"tb": 15872,
"tbk": 124,
"tl": 126,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
34,
35,
36,
244,
245,
79,
80
]
},
{
"tb": 13776,
"tbk": 14,
"tl": 411,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
246,
247,
248,
249,
250,
251
]
},
{
"tb": 512,
"tbk": 1,
"tl": 19,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
34,
35,
36,
37,
252,
253,
57
]
},
{
"tb": 336,
"tbk": 1,
"tl": 15606072,
"mb": 336,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
254,
255,
256,
257,
258,
259,
260,
261,
262
]
},
{
"tb": 7553,
"tbk": 49,
"tl": 9415333,
"mb": 3808,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
263,
264,
265,
266,
267
]
},
{
"tb": 224,
"tbk": 7,
"tl": 68036,
"mb": 224,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
161,
162,
163,
164,
165,
166,
167,
268,
269,
270
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 4101,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
26,
271,
272,
273,
274,
275,
276,
277,
278
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 3263,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
279,
280,
281,
282,
283,
33,
76,
46
]
},
{
"tb": 2240,
"tbk": 7,
"tl": 53011,
"mb": 2240,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
17,
18,
19,
112,
113,
114,
115,
284,
173
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4323,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
285,
286,
287,
288,
289,
290,
291,
292
]
},
{
"tb": 1536,
"tbk": 2,
"tl": 4438097,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
293,
294,
295,
296,
46
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 90170201,
"mb": 2097152,
"mbk": 1,
"gb": 2097152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
34,
35,
36,
37,
207,
297,
298
]
},
{
"tb": 112,
"tbk": 7,
"tl": 631243938,
"mb": 112,
"mbk": 7,
"gb": 112,
"gbk": 7,
"eb": 0,
"ebk": 0,
"fs": [
1,
161,
162,
163,
164,
165,
166,
167,
171,
299,
300
]
},
{
"tb": 3136,
"tbk": 21,
"tl": 5689178,
"mb": 1792,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
237,
238,
239,
301,
7
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1541932,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
17,
18,
19,
112,
113,
114,
302,
303,
304,
305,
306
]
},
{
"tb": 512,
"tbk": 1,
"tl": 79,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
307,
308,
309,
310,
311,
312,
313,
314
]
},
{
"tb": 224,
"tbk": 1,
"tl": 9780,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
161,
162,
163,
164,
165,
166,
167,
268,
315,
316
]
},
{
"tb": 168,
"tbk": 1,
"tl": 16389382,
"mb": 168,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
317,
318,
319,
320,
321,
46,
47,
48
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 333979,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
17,
18,
19,
20,
21,
22,
322,
323,
46
]
},
{
"tb": 100776,
"tbk": 221,
"tl": 61239,
"mb": 25992,
"mbk": 57,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
324,
325,
326,
327,
328,
329
]
},
{
"tb": 168,
"tbk": 1,
"tl": 16389399,
"mb": 168,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
330,
331,
332,
333,
334,
46,
47,
48
]
},
{
"tb": 72,
"tbk": 1,
"tl": 1542781,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
335,
336,
337,
338,
339,
340,
341,
342,
343,
46
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 209628,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
26,
89,
90,
91,
344,
345,
346,
347
]
},
{
"tb": 480,
"tbk": 2,
"tl": 7550,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
348,
349,
350,
351,
173
]
},
{
"tb": 96,
"tbk": 2,
"tl": 4310173,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
49,
50,
51,
52,
53,
352,
46
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 9186,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
161,
353,
354,
355,
356,
357,
139,
46
]
},
{
"tb": 9584640,
"tbk": 4,
"tl": 213474,
"mb": 9584640,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
34,
35,
36,
37,
358,
359,
347
]
},
{
"tb": 512,
"tbk": 1,
"tl": 25,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
34,
35,
36,
37,
252,
360,
192
]
},
{
"tb": 224,
"tbk": 7,
"tl": 546,
"mb": 224,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
34,
35,
36,
244,
361,
362,
173
]
},
{
"tb": 288,
"tbk": 1,
"tl": 32742,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
363,
364,
365,
366,
347
]
},
{
"tb": 15872,
"tbk": 124,
"tl": 108,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
367,
368,
369,
370,
371,
372,
373,
374
]
},
{
"tb": 1248,
"tbk": 12,
"tl": 340,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
375,
376,
377,
378,
379,
380,
381
]
},
{
"tb": 672,
"tbk": 7,
"tl": 116,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
382,
11,
383,
384,
58,
59
]
},
{
"tb": 288,
"tbk": 2,
"tl": 167,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
385,
192
]
},
{
"tb": 56,
"tbk": 1,
"tl": 1984,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
60,
61,
386,
387,
388,
389,
390,
391,
392,
393
]
},
{
"tb": 168,
"tbk": 1,
"tl": 286,
"mb": 168,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
335,
394,
395,
396,
397,
398,
399,
400,
401
]
},
{
"tb": 280,
"tbk": 1,
"tl": 71713605,
"mb": 280,
"mbk": 1,
"gb": 280,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
15,
402,
403,
404,
405,
406,
407,
408,
409,
410
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2944088,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
335,
411,
412,
413,
414,
415,
416,
417,
418
]
},
{
"tb": 939524096,
"tbk": 7,
"tl": 516099257,
"mb": 939524096,
"mbk": 7,
"gb": 939524096,
"gbk": 7,
"eb": 0,
"ebk": 0,
"fs": [
15,
279,
280,
281,
282,
419,
420,
421,
422
]
},
{
"tb": 29360352,
"tbk": 21,
"tl": 539932,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
34,
35,
36,
37,
423,
424,
425
]
},
{
"tb": 112,
"tbk": 7,
"tl": 68588,
"mb": 112,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
161,
162,
163,
164,
165,
166,
167,
268,
426,
427
]
},
{
"tb": 112,
"tbk": 7,
"tl": 410,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
383,
384,
58
]
},
{
"tb": 672,
"tbk": 7,
"tl": 196,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
382,
11,
12,
13,
14,
46
]
},
{
"tb": 168,
"tbk": 7,
"tl": 628,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
428,
429,
211,
212,
384,
58
]
},
{
"tb": 480,
"tbk": 2,
"tl": 7371,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
430,
431,
432,
433,
434,
435,
436,
437,
438
]
},
{
"tb": 35840,
"tbk": 7,
"tl": 78497,
"mb": 35840,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
161,
353,
354,
355,
439,
194,
137,
70
]
},
{
"tb": 224,
"tbk": 7,
"tl": 717,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
17,
18,
19,
112,
113,
114,
440,
441,
442
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 7225,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
119,
120,
121,
122,
443
]
},
{
"tb": 48,
"tbk": 1,
"tl": 6,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
444,
445,
446,
447,
448,
449,
450,
451,
452
]
},
{
"tb": 13248,
"tbk": 24,
"tl": 6169,
"mb": 3864,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
453,
454,
455,
456,
457,
458
]
},
{
"tb": 56,
"tbk": 1,
"tl": 21,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
60,
61,
459,
460,
461,
462,
463,
464,
465,
466
]
},
{
"tb": 1680,
"tbk": 7,
"tl": 510228262,
"mb": 1680,
"mbk": 7,
"gb": 1680,
"gbk": 7,
"eb": 0,
"ebk": 0,
"fs": [
15,
335,
467,
468,
469,
470,
471,
472,
473,
474
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 90172287,
"mb": 524288,
"mbk": 1,
"gb": 524288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
34,
35,
36,
37,
207,
475,
476
]
},
{
"tb": 7340032,
"tbk": 7,
"tl": 518067,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
34,
35,
36,
37,
207,
208,
477
]
},
{
"tb": 224,
"tbk": 7,
"tl": 48793347,
"mb": 224,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
49,
50,
51,
52,
53,
478,
479
]
},
{
"tb": 160,
"tbk": 1,
"tl": 9426,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
26,
89,
90,
91,
92,
480,
234,
173
]
},
{
"tb": 448,
"tbk": 7,
"tl": 52070,
"mb": 448,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
237,
238,
239,
481,
482
]
},
{
"tb": 192,
"tbk": 1,
"tl": 20181,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
483,
484,
485,
486,
487,
488,
76,
46,
47
]
},
{
"tb": 96,
"tbk": 1,
"tl": 8511,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
489,
80
]
},
{
"tb": 2240,
"tbk": 14,
"tl": 21695181,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
490,
491,
492,
493,
494
]
},
{
"tb": 3584,
"tbk": 7,
"tl": 1678,
"mb": 3584,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
34,
35,
36,
495,
192,
58,
59
]
},
{
"tb": 7296,
"tbk": 38,
"tl": 15058,
"mb": 768,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
375,
496,
497,
498,
499,
500,
501
]
},
{
"tb": 2264924160,
"tbk": 3145728,
"tl": 38259104,
"mb": 2080,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
502,
503,
504,
505,
506,
507,
508,
509
]
},
{
"tb": 2912,
"tbk": 12,
"tl": 1291,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
375,
510,
511,
512,
513,
514,
515,
516,
517,
518
]
},
{
"tb": 32,
"tbk": 1,
"tl": 3152,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
17,
18,
19,
20,
21,
22,
519,
173,
59
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 38701,
"mb": 15872,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
161,
162,
163,
164,
165,
166,
167,
268,
520,
521
]
},
{
"tb": 56,
"tbk": 1,
"tl": 365,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
60,
61,
522,
523,
524,
525,
526,
527,
528,
529
]
},
{
"tb": 168,
"tbk": 1,
"tl": 973501,
"mb": 168,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
530,
531,
532,
533,
534,
535,
536,
537,
538
]
},
{
"tb": 469762048,
"tbk": 7,
"tl": 25092821,
"mb": 67108864,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
279,
280,
281,
282,
419,
539,
540,
541
]
},
{
"tb": 6072,
"tbk": 11,
"tl": 4337,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
453,
454,
455,
542,
543,
544
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
545,
546,
170,
59,
547
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3908,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
335,
336,
337,
338,
339,
340,
341,
548,
549,
137
]
},
{
"tb": 72,
"tbk": 1,
"tl": 9778,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
483,
550,
551,
552,
553,
554,
555
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 9758,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
161,
162,
163,
164,
165,
166,
167,
268,
556,
557
]
},
{
"tb": 112,
"tbk": 7,
"tl": 10848475,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
17,
18,
19,
20,
21,
22,
210,
211,
558
]
},
{
"tb": 7340032,
"tbk": 7,
"tl": 518572,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
559,
560,
561,
562,
563,
564,
565
]
},
{
"tb": 13185,
"tbk": 1,
"tl": 9754,
"mb": 13185,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
161,
162,
163,
164,
165,
166,
167,
268,
566,
557
]
},
{
"tb": 360,
"tbk": 8,
"tl": 26829285,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
567,
568,
569,
570,
571,
572,
573,
574,
575
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 758542,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
34,
35,
36,
37,
576,
577,
578
]
},
{
"tb": 2240,
"tbk": 7,
"tl": 84,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
34,
35,
36,
244,
579,
362,
173
]
},
{
"tb": 672,
"tbk": 7,
"tl": 89,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
580,
581,
582,
583,
584,
585,
586,
587,
588
]
},
{
"tb": 3670016,
"tbk": 7,
"tl": 2036164,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
34,
35,
36,
37,
207,
208,
589
]
},
{
"tb": 560,
"tbk": 7,
"tl": 10846655,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
590,
591,
592,
593,
594,
595,
596,
597,
598
]
},
{
"tb": 192,
"tbk": 1,
"tl": 9694,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
483,
484,
485,
486,
487,
599,
600,
601,
555
]
},
{
"tb": 58720256,
"tbk": 7,
"tl": 25261618,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
34,
35,
36,
37,
38,
39,
602
]
},
{
"tb": 56,
"tbk": 1,
"tl": 71713562,
"mb": 56,
"mbk": 1,
"gb": 56,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
15,
603,
604,
605,
606,
607,
608,
609,
610,
611
]
},
{
"tb": 3456,
"tbk": 12,
"tl": 4758,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
375,
612,
613,
614,
615,
616,
617
]
},
{
"tb": 672,
"tbk": 7,
"tl": 86,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
382,
618,
619,
46,
47,
48
]
},
{
"tb": 448,
"tbk": 7,
"tl": 52042,
"mb": 448,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
237,
238,
239,
620,
482
]
},
{
"tb": 1680,
"tbk": 7,
"tl": 109176079,
"mb": 1680,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
335,
336,
337,
338,
339,
340,
341,
621,
622,
623
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 333342,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
34,
35,
36,
37,
207,
208,
624
]
},
{
"tb": 672,
"tbk": 14,
"tl": 97068158,
"mb": 672,
"mbk": 14,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
335,
625,
626,
627,
628,
629,
630,
631,
632
]
},
{
"tb": 512,
"tbk": 1,
"tl": 41,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
17,
18,
19,
112,
113,
114,
633,
192,
58
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2106,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
71,
72,
73,
74,
75,
136,
137,
70
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3526,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
71,
72,
73,
74,
77,
634,
635,
636
]
},
{
"tb": 992,
"tbk": 4,
"tl": 4209,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
375,
510,
637,
638,
639,
640,
641,
642,
643,
644,
645
]
},
{
"tb": 30720,
"tbk": 192,
"tl": 923,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
17,
18,
19,
112,
113,
114,
115,
646,
647
]
},
{
"tb": 6291456,
"tbk": 3,
"tl": 4627641,
"mb": 6291456,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
17,
18,
19,
112,
113,
114,
648,
339,
340,
341,
342
]
},
{
"tb": 2240,
"tbk": 14,
"tl": 4927472,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
559,
560,
561,
562,
563,
564,
649
]
},
{
"tb": 224,
"tbk": 7,
"tl": 1821,
"mb": 224,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
650,
651,
652,
653,
654,
655
]
},
{
"tb": 336,
"tbk": 14,
"tl": 489,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
656,
657,
658,
659,
660,
661
]
},
{
"tb": 64,
"tbk": 1,
"tl": 6441,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
237,
238,
239,
662,
81
]
},
{
"tb": 5376,
"tbk": 7,
"tl": 30663,
"mb": 5376,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
335,
663,
664,
665,
666,
667,
668,
669,
670
]
},
{
"tb": 13152,
"tbk": 32,
"tl": 110344,
"mb": 13152,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
26,
89,
90,
91,
92,
93,
634,
635
]
},
{
"tb": 5344,
"tbk": 39,
"tl": 27301,
"mb": 5120,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
17,
18,
19,
112,
113,
114,
648,
339,
340,
341,
548
]
},
{
"tb": 8064,
"tbk": 28,
"tl": 1007,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
671,
672,
673,
674,
675
]
},
{
"tb": 64,
"tbk": 1,
"tl": 4,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
676,
677,
678,
679,
680,
681,
682,
683,
684
]
},
{
"tb": 24,
"tbk": 1,
"tl": 9762,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
685,
686,
687,
555
]
},
{
"tb": 112,
"tbk": 7,
"tl": 260083,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
82,
83,
84,
85,
688,
619,
46
]
},
{
"tb": 224,
"tbk": 7,
"tl": 66683,
"mb": 224,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
689,
690,
691,
692,
693,
694
]
},
{
"tb": 112,
"tbk": 7,
"tl": 525,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
559,
560,
561,
562,
563,
564,
695
]
},
{
"tb": 2304,
"tbk": 12,
"tl": 4860,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
375,
496,
497,
498,
696,
697,
698
]
},
{
"tb": 64,
"tbk": 1,
"tl": 812706,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
237,
238,
239,
662,
7
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 10129,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
263,
264,
265,
699,
700
]
},
{
"tb": 126976,
"tbk": 4,
"tl": 1695,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
559,
560,
561,
562,
563,
564,
701
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2102,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
26,
27,
28,
29,
30,
31,
136,
137
]
},
{
"tb": 2688,
"tbk": 14,
"tl": 517,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
702,
703,
704,
705,
706,
707,
708,
709,
710
]
},
{
"tb": 2240,
"tbk": 14,
"tl": 4927416,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
559,
560,
561,
562,
563,
564,
711
]
},
{
"tb": 336,
"tbk": 7,
"tl": 52805,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
712,
117,
46,
47,
48
]
},
{
"tb": 14680064,
"tbk": 7,
"tl": 32878514,
"mb": 14680064,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
559,
560,
561,
562,
563,
564,
713
]
},
{
"tb": 503316480,
"tbk": 3145728,
"tl": 29029897,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
17,
18,
19,
20,
21,
22,
714,
508,
509
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 16514148,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
15,
26,
89,
90,
91,
344,
715,
716,
717
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 1541897,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
17,
18,
19,
112,
113,
114,
648,
339,
340,
341,
718
]
},
{
"tb": 6752,
"tbk": 42,
"tl": 137,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
60,
61,
94,
95,
96,
97,
98,
99,
135,
32,
33
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 27724,
"mb": 15872,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
34,
35,
36,
719,
79,
80,
173
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1315,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
17,
18,
19,
20,
21,
22,
720,
645,
721
]
},
{
"tb": 576,
"tbk": 4,
"tl": 1661,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
82,
83,
84,
85,
722,
723,
645
]
},
{
"tb": 56,
"tbk": 1,
"tl": 1958,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
60,
61,
724,
725,
726,
727,
728,
729,
730,
731
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 2467,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
279,
732,
733,
734,
735,
736,
737,
738,
739
]
},
{
"tb": 7616,
"tbk": 14,
"tl": 162,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
740,
741,
742,
743,
744,
745
]
},
{
"tb": 3840,
"tbk": 16,
"tl": 2504,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
237,
238,
239,
746,
747
]
},
{
"tb": 384,
"tbk": 2,
"tl": 4844,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
748,
749,
750,
751,
635
]
},
{
"tb": 2688,
"tbk": 7,
"tl": 10847722,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
752,
753,
754,
755,
756,
757,
758,
759,
760
]
},
{
"tb": 255368,
"tbk": 10,
"tl": 9924,
"mb": 145092,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
263,
264,
265,
266,
761
]
},
{
"tb": 144,
"tbk": 1,
"tl": 1541943,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
580,
762,
763,
764,
304,
305,
306,
765,
343,
46
]
},
{
"tb": 768,
"tbk": 1,
"tl": 4102,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
71,
72,
73,
74,
77,
766,
767,
768
]
},
{
"tb": 576,
"tbk": 2,
"tl": 7426,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
769,
770,
771,
772,
58
]
},
{
"tb": 224,
"tbk": 7,
"tl": 596,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
773,
774,
775,
776,
777,
778,
779,
780,
211,
212
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 62843884,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
15,
26,
89,
90,
91,
344,
781,
509,
782
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 153649,
"mb": 1179648,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
34,
35,
36,
37,
783,
784,
347
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1541242,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
60,
61,
94,
95,
96,
97,
98,
99,
785,
343,
46
]
},
{
"tb": 480,
"tbk": 4,
"tl": 202,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
49,
50,
51,
52,
53,
786,
136
]
},
{
"tb": 73400320,
"tbk": 70,
"tl": 1091668734,
"mb": 73400320,
"mbk": 70,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
17,
18,
19,
112,
113,
114,
648,
339,
340,
341,
621
]
},
{
"tb": 536870912,
"tbk": 8,
"tl": 15736806,
"mb": 67108864,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
559,
560,
561,
562,
563,
564,
787
]
},
{
"tb": 504,
"tbk": 1,
"tl": 16414223,
"mb": 504,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
788,
789,
790,
791,
792,
793,
794,
795,
796
]
},
{
"tb": 288,
"tbk": 2,
"tl": 50,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
797,
173
]
},
{
"tb": 288,
"tbk": 2,
"tl": 4312072,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
798,
46
]
},
{
"tb": 336,
"tbk": 14,
"tl": 764,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
799,
657,
658,
659,
660,
661
]
},
{
"tb": 480,
"tbk": 4,
"tl": 11643,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
49,
50,
51,
52,
53,
54,
800
]
},
{
"tb": 256,
"tbk": 1,
"tl": 638,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
60,
61,
62,
63,
64,
65,
66,
101,
801
]
},
{
"tb": 35840,
"tbk": 1,
"tl": 9773,
"mb": 35840,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
161,
162,
163,
164,
165,
166,
167,
268,
802,
687
]
},
{
"tb": 288,
"tbk": 2,
"tl": 147,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
803,
192
]
},
{
"tb": 112,
"tbk": 7,
"tl": 15,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
804,
618,
619,
46,
47
]
},
{
"tb": 168,
"tbk": 1,
"tl": 16389387,
"mb": 168,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
335,
805,
806,
807,
808,
46,
47,
48
]
},
{
"tb": 256,
"tbk": 1,
"tl": 9655,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
161,
162,
163,
164,
165,
166,
167,
268,
809,
601
]
},
{
"tb": 25165440,
"tbk": 96,
"tl": 101060,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
237,
238,
239,
810,
46
]
},
{
"tb": 2247,
"tbk": 7,
"tl": 68061,
"mb": 2247,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
161,
162,
163,
164,
165,
166,
167,
268,
811,
270
]
},
{
"tb": 1120,
"tbk": 7,
"tl": 20589,
"mb": 1120,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
82,
83,
84,
85,
812,
813,
814
]
},
{
"tb": 112,
"tbk": 7,
"tl": 390,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
804,
11,
383,
384,
58
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4855,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
815,
816,
817,
818,
819,
820,
821,
822
]
},
{
"tb": 512,
"tbk": 1,
"tl": 34,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
34,
35,
36,
823,
57,
58,
59
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 191890,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
26,
89,
90,
91,
344,
715,
716,
824
]
},
{
"tb": 256,
"tbk": 1,
"tl": 662,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
60,
61,
62,
63,
64,
65,
66,
825,
826
]
},
{
"tb": 7340032,
"tbk": 7,
"tl": 2849977,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
34,
35,
36,
37,
207,
208,
827
]
},
{
"tb": 288,
"tbk": 2,
"tl": 154105,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
828,
117
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1321,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
375,
510,
637,
638,
639,
640,
641,
642,
829,
645,
721
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
161,
162,
163,
164,
165,
166,
167,
168,
830,
831
]
},
{
"tb": 105984,
"tbk": 406,
"tl": 224894,
"mb": 16384,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
26,
832,
833,
834,
835,
836,
837,
838,
839
]
},
{
"tb": 23418,
"tbk": 4,
"tl": 38684,
"mb": 23418,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
161,
162,
163,
164,
165,
166,
167,
268,
840,
521
]
},
{
"tb": 112,
"tbk": 7,
"tl": 41,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
618,
619,
46,
47
]
},
{
"tb": 168,
"tbk": 1,
"tl": 41,
"mb": 168,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
335,
336,
337,
338,
339,
340,
341,
548,
841,
842
]
},
{
"tb": 256,
"tbk": 4,
"tl": 132588,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
34,
35,
36,
37,
207,
208,
843
]
},
{
"tb": 560,
"tbk": 1,
"tl": 90362991,
"mb": 560,
"mbk": 1,
"gb": 560,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
15,
844,
845,
846,
847,
848,
849,
850,
851,
852
]
},
{
"tb": 13185,
"tbk": 1,
"tl": 9766,
"mb": 13185,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
161,
162,
163,
164,
165,
166,
167,
268,
853,
687
]
},
{
"tb": 448,
"tbk": 7,
"tl": 1175,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
237,
238,
239,
620,
854
]
},
{
"tb": 112,
"tbk": 7,
"tl": 4667193,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
82,
83,
84,
85,
855,
87,
88
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 1976975,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
26,
89,
90,
91,
344,
856,
857,
858
]
},
{
"tb": 224,
"tbk": 1,
"tl": 118,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
859,
860,
861,
862,
863,
864,
865,
866,
867
]
},
{
"tb": 3136,
"tbk": 21,
"tl": 45275,
"mb": 1792,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
237,
238,
239,
301,
81
]
},
{
"tb": 1512,
"tbk": 1,
"tl": 90172596,
"mb": 1512,
"mbk": 1,
"gb": 1512,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
15,
213,
868,
869,
870,
871,
872,
873,
874,
875
]
},
{
"tb": 168,
"tbk": 1,
"tl": 73773273,
"mb": 168,
"mbk": 1,
"gb": 168,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
15,
317,
876,
877,
878,
879,
880,
881,
882,
883
]
},
{
"tb": 224,
"tbk": 14,
"tl": 10849340,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
884,
885,
886,
887,
888,
889,
890,
891
]
},
{
"tb": 256,
"tbk": 1,
"tl": 11677,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
17,
18,
19,
20,
21,
22,
892,
893,
894
]
},
{
"tb": 256,
"tbk": 1,
"tl": 12,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
375,
510,
637,
638,
639,
640,
641,
642,
895,
76,
46
]
},
{
"tb": 3528,
"tbk": 18,
"tl": 91,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
60,
61,
94,
95,
96,
97,
98,
99,
135,
235,
139
]
},
{
"tb": 448,
"tbk": 7,
"tl": 1219,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
237,
238,
239,
481,
854
]
},
{
"tb": 224,
"tbk": 7,
"tl": 69,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
49,
896,
897,
898,
899,
900,
901,
902,
903,
904,
905
]
},
{
"tb": 256,
"tbk": 1,
"tl": 8814,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
34,
35,
36,
244,
906,
907,
173
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4330,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
34,
35,
36,
908,
909,
58,
59
]
},
{
"tb": 1680,
"tbk": 7,
"tl": 631971073,
"mb": 1680,
"mbk": 7,
"gb": 1680,
"gbk": 7,
"eb": 0,
"ebk": 0,
"fs": [
15,
335,
910,
911,
912,
913,
914,
915,
916,
917
]
},
{
"tb": 83886080,
"tbk": 524288,
"tl": 6462164,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
17,
18,
19,
20,
21,
22,
918,
508,
509
]
},
{
"tb": 112,
"tbk": 7,
"tl": 743,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
17,
18,
19,
112,
113,
114,
919,
441,
442
]
},
{
"tb": 224,
"tbk": 7,
"tl": 45753,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
920,
117,
46,
47,
48
]
},
{
"tb": 112,
"tbk": 1,
"tl": 131,
"mb": 112,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
921,
922,
923,
924,
925,
926,
927,
928,
46,
47
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1541918,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
335,
336,
337,
338,
339,
340,
341,
718,
343,
46
]
},
{
"tb": 576,
"tbk": 2,
"tl": 9712,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
929,
930,
931,
932,
555
]
},
{
"tb": 112,
"tbk": 7,
"tl": 48793512,
"mb": 112,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
17,
18,
19,
112,
113,
114,
302,
933,
934
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 8138,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
263,
264,
265,
699,
935
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 3540,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
26,
936,
937,
938,
939,
940,
941,
942,
943
]
},
{
"tb": 672,
"tbk": 1,
"tl": 90177733,
"mb": 672,
"mbk": 1,
"gb": 672,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
15,
944,
945,
946,
947,
948,
949,
950,
951,
952
]
},
{
"tb": 112,
"tbk": 1,
"tl": 90172321,
"mb": 112,
"mbk": 1,
"gb": 112,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
15,
953,
954,
955,
956,
957,
958,
959,
960,
961
]
},
{
"tb": 288,
"tbk": 2,
"tl": 7479,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
962,
963,
964,
965,
58
]
},
{
"tb": 224,
"tbk": 1,
"tl": 148,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
859,
966,
967,
968,
969,
970,
971,
972,
973
]
},
{
"tb": 224,
"tbk": 7,
"tl": 631207833,
"mb": 224,
"mbk": 7,
"gb": 224,
"gbk": 7,
"eb": 0,
"ebk": 0,
"fs": [
8,
689,
974,
975,
976,
977,
978
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 135947,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
34,
35,
36,
37,
222,
979,
980
]
},
{
"tb": 256,
"tbk": 1,
"tl": 13,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
17,
18,
19,
112,
113,
114,
981,
76,
46
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 1679,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
559,
560,
561,
562,
563,
564,
982
]
},
{
"tb": 56,
"tbk": 7,
"tl": 2850123,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
60,
61,
62,
63,
64,
983,
984,
934,
46
]
},
{
"tb": 224,
"tbk": 7,
"tl": 4,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
650,
985,
59,
547
]
},
{
"tb": 168,
"tbk": 7,
"tl": 48793539,
"mb": 168,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
102,
103,
104,
105,
106,
107,
108,
109,
933,
934
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 1876073,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
26,
89,
90,
91,
344,
715,
716,
986
]
},
{
"tb": 56,
"tbk": 1,
"tl": 4835,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
987,
988,
989,
990,
991,
992,
993,
994,
995
]
},
{
"tb": 112,
"tbk": 1,
"tl": 1336402,
"mb": 112,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
921,
996,
997,
998,
999,
1000,
1001,
1002,
1003
]
},
{
"tb": 336,
"tbk": 1,
"tl": 90177592,
"mb": 336,
"mbk": 1,
"gb": 336,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
15,
1004,
1005,
1006,
1007,
1008,
1009,
842,
46
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 632,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
34,
35,
36,
37,
252,
1010,
723
]
},
{
"tb": 1984,
"tbk": 4,
"tl": 3044,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
1011,
1012,
1013,
1014,
1015,
1016,
1017,
1018
]
},
{
"tb": 896,
"tbk": 14,
"tl": 21693510,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1019,
1020,
1021,
1022,
1023
]
},
{
"tb": 288,
"tbk": 2,
"tl": 4155,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1024,
1025,
1026,
1027,
137
]
},
{
"tb": 56,
"tbk": 1,
"tl": 1965,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
60,
61,
1028,
1029,
1030,
1031,
1032,
1033,
1034,
1035
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 190610,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
17,
18,
19,
112,
113,
114,
115,
1036,
46
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 523,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
49,
50,
51,
52,
53,
786,
32
]
},
{
"tb": 72,
"tbk": 3,
"tl": 4625781,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
102,
103,
104,
105,
106,
107,
108,
109,
303,
304,
305,
306
]
},
{
"tb": 1120,
"tbk": 7,
"tl": 20564,
"mb": 1120,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
82,
83,
84,
85,
1037,
813,
814
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 4647,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
34,
35,
36,
244,
1038,
1039,
767
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
545,
546,
831,
842,
46,
47
]
},
{
"tb": 336,
"tbk": 14,
"tl": 21695245,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
102,
103,
104,
105,
106,
107,
108,
109,
1040,
494
]
},
{
"tb": 3952,
"tbk": 38,
"tl": 576,
"mb": 416,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
375,
376,
377,
378,
1041,
1042,
1043
]
},
{
"tb": 1761607680,
"tbk": 3145728,
"tl": 15925606,
"mb": 960,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
17,
18,
19,
112,
113,
114,
115,
1044,
508
]
},
{
"tb": 7340032,
"tbk": 7,
"tl": 2113342,
"mb": 7340032,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
559,
560,
561,
562,
563,
564,
1045
]
},
{
"tb": 168,
"tbk": 7,
"tl": 10848578,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
428,
429,
211,
558,
14,
46
]
},
{
"tb": 35840,
"tbk": 1,
"tl": 3739,
"mb": 35840,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
34,
35,
36,
244,
1038,
1046,
635
]
},
{
"tb": 4032,
"tbk": 14,
"tl": 315,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
1047,
1048,
1049,
1050,
1051,
1052,
1053,
1054,
1055
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
161,
162,
163,
164,
165,
166,
167,
168,
830,
170
]
},
{
"tb": 134217728,
"tbk": 1,
"tl": 46451355,
"mb": 134217728,
"mbk": 1,
"gb": 134217728,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
17,
18,
19,
112,
113,
114,
1056,
1057,
1058
]
},
{
"tb": 138240,
"tbk": 192,
"tl": 95852,
"mb": 36800,
"mbk": 33,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
502,
503,
504,
505,
506,
1059,
647,
1060
]
},
{
"tb": 2240,
"tbk": 7,
"tl": 51634,
"mb": 2240,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
17,
18,
19,
112,
113,
114,
1061,
1062,
1063
]
},
{
"tb": 80,
"tbk": 1,
"tl": 6436,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
34,
35,
36,
1064,
1065,
58,
59
]
},
{
"tb": 83616,
"tbk": 1609,
"tl": 9475378,
"mb": 17152,
"mbk": 14,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
263,
1066,
1067,
1068,
1069,
1070,
1071
]
},
{
"tb": 2736,
"tbk": 6,
"tl": 2576,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
324,
325,
326,
1072,
1073,
1074
]
},
{
"tb": 112,
"tbk": 7,
"tl": 787,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
804,
11,
12,
13,
14
]
},
{
"tb": 1120,
"tbk": 7,
"tl": 186882,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
82,
83,
84,
85,
1075,
1076,
1077
]
},
{
"tb": 24,
"tbk": 2,
"tl": 2,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
161,
162,
163,
164,
165,
166,
167,
168,
169,
831
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1642,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
1078,
139
]
},
{
"tb": 224,
"tbk": 1,
"tl": 8515,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1079,
1080,
1081,
1082,
80
]
},
{
"tb": 2247,
"tbk": 7,
"tl": 95,
"mb": 321,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
49,
896,
897,
898,
899,
900,
901,
902,
1083,
904,
905
]
},
{
"tb": 65176,
"tbk": 38,
"tl": 66371,
"mb": 32640,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
263,
264,
265,
699,
1084
]
},
{
"tb": 336,
"tbk": 1,
"tl": 2974,
"mb": 336,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
1085,
1086,
1087,
1088,
1089,
1090,
1091,
1092,
1093
]
},
{
"tb": 2400,
"tbk": 12,
"tl": 245,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
375,
1094,
1095,
1096,
1097,
1098,
1099
]
},
{
"tb": 14680064,
"tbk": 917504,
"tl": 516351,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
17,
18,
19,
112,
113,
114,
1100,
1101,
1102
]
},
{
"tb": 288,
"tbk": 2,
"tl": 11200,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1103,
1104,
1105,
1106,
194
]
},
{
"tb": 35840,
"tbk": 7,
"tl": 34061,
"mb": 35840,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
34,
35,
36,
244,
1038,
1107,
635
]
},
{
"tb": 3968,
"tbk": 4,
"tl": 25170,
"mb": 3968,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
26,
27,
28,
29,
30,
1108,
79,
80
]
},
{
"tb": 224,
"tbk": 7,
"tl": 10848529,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
773,
774,
775,
776,
777,
778,
779,
780,
211,
558
]
},
{
"tb": 13152,
"tbk": 32,
"tl": 128849,
"mb": 13152,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
26,
89,
90,
91,
92,
93,
766,
767
]
},
{
"tb": 48,
"tbk": 1,
"tl": 5816,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
444,
445,
446,
447,
448,
449,
450,
451,
1109
]
},
{
"tb": 480,
"tbk": 4,
"tl": 225,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
49,
50,
51,
52,
53,
786,
235
]
},
{
"tb": 73400320,
"tbk": 70,
"tl": 6319696451,
"mb": 73400320,
"mbk": 70,
"gb": 73400320,
"gbk": 70,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
34,
35,
36,
37,
1110,
1111,
1112
]
},
{
"tb": 3528,
"tbk": 18,
"tl": 528,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
60,
61,
94,
95,
96,
97,
98,
99,
100,
66,
825
]
},
{
"tb": 1680,
"tbk": 14,
"tl": 48793395,
"mb": 1344,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
1113,
934,
46,
47,
48
]
},
{
"tb": 336,
"tbk": 7,
"tl": 5491269,
"mb": 336,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
1114,
1115,
1116,
1117,
1118,
1119
]
},
{
"tb": 56,
"tbk": 1,
"tl": 73749882,
"mb": 56,
"mbk": 1,
"gb": 56,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
15,
603,
1120,
1121,
1122,
1123,
1124,
1125,
1126,
1127
]
},
{
"tb": 73400320,
"tbk": 70,
"tl": 5093092919,
"mb": 73400320,
"mbk": 70,
"gb": 73400320,
"gbk": 70,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
17,
18,
19,
112,
113,
114,
1128,
1129,
1130
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2026,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
26,
27,
28,
29,
30,
31,
235,
139
]
},
{
"tb": 29360352,
"tbk": 21,
"tl": 544260,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
15,
16,
34,
35,
36,
37,
252,
1131,
424
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 548,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
559,
560,
561,
562,
563,
564,
1132
]
},
{
"tb": 56,
"tbk": 1,
"tl": 1951,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
60,
61,
1133,
1134,
1135,
1136,
1137,
1138,
1139,
1140
]
},
{
"tb": 56,
"tbk": 1,
"tl": 3375,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
1141,
636,
173,
59,
547
]
},
{
"tb": 35840,
"tbk": 1,
"tl": 11281,
"mb": 35840,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
161,
353,
354,
355,
1142,
194,
137,
70
]
},
{
"tb": 1152,
"tbk": 2,
"tl": 9793,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1143,
1144,
1145,
1146,
555
]
}
],
"ftbl": [
"[root]",
"0x59e040c6fb79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x59e040c6e319: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x59e0407f9972: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x59e04080da19: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x59e0409e3402: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x59e040930239: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:536:13)",
"0x59e040792428: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x59e040707937: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x59e040a46e95: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x59e04088e0bd: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:61:13)",
"0x59e04092f985: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:364:13)",
"0x59e0407ac670: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:40:22)",
"0x59e040aa86e7: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:13)",
"0x59e0408adb32: winter_prover::Prover::generate_proof (prover/src/lib.rs:403:21)",
"0x59e0407084a9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x59e0407d10ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e0406ae41c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e0406ae41c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e0406ae41c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x59e0406ae93c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x59e0406ae93c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x59e0406ae93c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x59e0408e6078: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x59e04067f61a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x59e040737e45: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x59e0407cba9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e0408ddf58: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e0408ddf58: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e0408ddf58: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x59e0409f8c17: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x59e040a1d698: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x59e040adc274: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x59e040aef152: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x59e040989736: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040989736: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040989736: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e040715e7b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x59e040a331ab: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x59e040a32696: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x59e0408c74e4: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:691:36)",
"0x59e0407d57bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e040989876: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040989876: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040989876: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e0408a9fc9: winter_prover::Prover::generate_proof (prover/src/lib.rs:299:44)",
"0x59e0408cacd4: winter_prover::Prover::prove (prover/src/lib.rs:171:37)",
"0x59e04068c2b2: <examples::do_work::DoWorkExample<H> as examples::Example>::prove (src/do_work/mod.rs:108:9)",
"0x59e0404e4d4d: winterfell::main (examples/src/main.rs:49:17)",
"0x59e040c03799: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x59e040bfeb39: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x59e040b61830: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x59e040b63899: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x59e040b3e451: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x59e0408e04f8: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x59e0408246c1: winter_verifier::perform_verification (verifier/src/lib.rs:295:27)",
"0x59e040a281bf: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x59e040824cbe: winter_verifier::perform_verification (verifier/src/lib.rs:314:25)",
"0x59e04082d9d2: winter_verifier::verify (verifier/src/lib.rs:110:21)",
"0x59e04068cd99: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:118:9)",
"0x59e040bf1899: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x59e040b5e0aa: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e040b39656: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040b39656: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040b39656: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e040812d1c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x59e040a1fb5e: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x59e0406c953c: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x59e0408fdbf6: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x59e0408edc1d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x59e0408acace: winter_prover::Prover::generate_proof (prover/src/lib.rs:593:29)",
"0x59e0407cfe8c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e040989966: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040989966: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040989966: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e040a1d6ff: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x59e0408aca4f: winter_prover::Prover::generate_proof (prover/src/lib.rs:590:25)",
"0x59e04080ec9d: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x59e0407ba04d: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x59e0407c139c: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x59e0406e260c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x59e04082413b: winter_verifier::perform_verification (verifier/src/lib.rs:263:61)",
"0x59e0406ae9f5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e0406ae9f5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e0406ae9f5: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x59e0409f8bf4: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x59e040aa5f6c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:148:31)",
"0x59e040aa99e0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:122:17)",
"0x59e040789436: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x59e040989916: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040989916: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040989916: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e0408dd7e9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x59e04080ef24: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x59e040b6f6ac: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040b6f6ac: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040b6f6ac: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x59e040b404a9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x59e040b404a9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x59e040b404a9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x59e040812f79: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x59e0406ddd3c: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x59e0407d0e4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e0406ae2ec: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e0406ae2ec: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e0406ae2ec: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x59e0409faf19: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x59e0409faf19: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x59e0409faf19: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x59e040a735d6: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x59e0407abbd9: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:82:31)",
"0x59e040681553: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x59e0409f9939: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x59e0409f9939: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x59e0409f9939: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x59e040987097: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x59e040a4fea2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x59e0408ab868: winter_prover::Prover::generate_proof (prover/src/lib.rs:514:9)",
"0x59e0408ad808: winter_prover::Prover::generate_proof (prover/src/lib.rs:440:13)",
"0x59e040c1bda0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x59e040c175f9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x59e040c165a1: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x59e040c16eb0: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x59e040aeee9d: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x59e04095f877: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e04095f877: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e04095f877: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e04095f877: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a1470e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a10317: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065cace: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e040a28532: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x59e040884db1: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x59e0406744aa: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x59e040ab4a05: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x59e040a1da2c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x59e0408e3b07: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x59e0408edcb4: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x59e040afa6d0: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x59e0408acbc5: winter_prover::Prover::generate_proof (prover/src/lib.rs:598:34)",
"0x59e04094c727: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e04094c727: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e04094c727: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e04094c727: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a165de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a0c507: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065ccfe: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e040886277: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x59e0407f1912: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x59e04080d119: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x59e0409e294f: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x59e040a1dd8a: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x59e0407d32fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e040950135: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040950135: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040950135: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e040950135: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x59e040a1410e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a09737: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e040659cce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e040a311b0: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:218:46)",
"0x59e040c6e5ca: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e040c6fbbc: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040c6fbbc: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040c6fbbc: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x59e040c707fc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x59e040c707fc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x59e040c707fc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x59e0408dfdf4: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x59e0408dfad6: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x59e04082d5a9: winter_verifier::verify (verifier/src/lib.rs:95:32)",
"0x59e040c69d9e: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x59e0406e17d0: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x59e04082d907: winter_verifier::verify (verifier/src/lib.rs:108:19)",
"0x59e040975c51: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040975c51: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040975c51: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e040975c51: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a13f6b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a0ea96: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065b53b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e0406e1a47: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x59e0407c7e5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e040973771: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040973771: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040973771: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e040973771: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a140cb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a0d9c6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065a0cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e040884e5a: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x59e040a24bd0: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x59e040824c0f: winter_verifier::perform_verification (verifier/src/lib.rs:308:25)",
"0x59e040a5810a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x59e0408e3bd9: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x59e0407d2dbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e0409413c1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e0409413c1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e0409413c1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e0409413c1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a169db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a09d06: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065beab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e040823d9f: winter_verifier::perform_verification (verifier/src/lib.rs:216:40)",
"0x59e0407099cb: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x59e04067632c: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x59e0408df954: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x59e04070a393: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x59e0408da018: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x59e040af2ab6: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x59e040af6983: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x59e04092fc22: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:348:9)",
"0x59e040aa264a: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:25:25)",
"0x59e0407cb01c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e04095dee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e04095dee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e04095dee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e04095dee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e0409edbcf: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x59e040a0b849: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065ae5e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e04082d784: winter_verifier::verify (verifier/src/lib.rs:101:24)",
"0x59e04070b47b: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x59e0408858b6: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x59e04088976c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x59e0409427e7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e0409427e7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e0409427e7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e0409427e7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a1673e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a0c7f7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065d32e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e04087ed13: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:253:9)",
"0x59e0407a97fb: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x59e0406e1e38: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x59e040afa495: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x59e040814191: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x59e040800122: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x59e04080d6b9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x59e0409e1d91: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x59e040a3c835: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x59e0407921d0: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x59e040ad895b: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x59e0408df9cc: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x59e0406ac909: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x59e0407b9f3a: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x59e040a4adab: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x59e040a497e1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x59e04085d4eb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x59e04083279d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x59e0406fb0fc: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x59e0406f8911: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x59e040709f42: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x59e040a283d9: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x59e0407c791c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e040951dc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040951dc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040951dc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e040951dc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e0409f36b3: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x59e040a08bc9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065b01e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e0408a9f62: winter_prover::Prover::generate_proof (prover/src/lib.rs:291:36)",
"0x59e040c6eab0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x59e040c6ece9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x59e040c6ff12: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x59e040c6ed49: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x59e040a3c6ed: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x59e040c6de2c: <winter_utils::serde::byte_reader::SliceReader as winter_utils::serde::byte_reader::ByteReader>::read_vec (src/serde/byte_reader.rs:151:22)",
"0x59e040c12784: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:155:27)",
"0x59e040c09178: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:29)",
"0x59e040972f40: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040972f40: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040972f40: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e040972f40: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x59e040a1514b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a0c8a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065927b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e040a6abca: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x59e0407d5a5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e040989b46: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040989b46: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040989b46: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e040adc35d: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x59e0406e327d: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x59e04094f777: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e04094f777: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e04094f777: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e04094f777: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a142de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a10697: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065cb8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e0408fd131: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x59e0407fbc02: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x59e04080ccc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x59e0409e6d48: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x59e0408adbf6: winter_prover::Prover::generate_proof (prover/src/lib.rs:408:17)",
"0x59e0408f0eb0: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x59e0408a98ba: winter_prover::Prover::generate_proof (prover/src/lib.rs:257:22)",
"0x59e0408e001f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x59e040797f5f: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x59e0409302c9: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:534:17)",
"0x59e040a735ed: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x59e040a73440: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x59e0409fa039: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x59e0409fa039: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x59e0409fa039: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x59e040956187: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040956187: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040956187: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e040956187: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a1729e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a0be27: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e0406597ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e040a2495b: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x59e040c122bd: <winter_air::proof::commitments::Commitments as winter_utils::serde::Deserializable>::read_from (src/proof/commitments.rs:108:22)",
"0x59e040c08bdc: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:167:27)",
"0x59e0407d090c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e040989466: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040989466: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040989466: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e0408aa051: winter_prover::Prover::generate_proof (prover/src/lib.rs:301:32)",
"0x59e0408d981d: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x59e0408abf26: winter_prover::Prover::generate_proof (prover/src/lib.rs:548:13)",
"0x59e040a4a6eb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x59e040a49891: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x59e04085cf4b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x59e040848d8f: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x59e040854711: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x59e04084fcaa: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x59e0407ca83c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e040989786: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040989786: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040989786: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e0408a9f85: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:39)",
"0x59e0407cd9fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e040988856: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040988856: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040988856: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x59e0409fa1f9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x59e0409fa1f9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x59e0409fa1f9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x59e040882c8c: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x59e0408aa583: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:33)",
"0x59e040715fbb: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x59e0407131f6: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x59e040ae2c8f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x59e040af01b2: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x59e0407fc5e2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x59e04080d209: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x59e0409e70e2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x59e0406e349b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x59e0408ad7ed: winter_prover::Prover::generate_proof (prover/src/lib.rs:439:13)",
"0x59e040989556: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040989556: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040989556: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e040a668e0: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x59e040afa65e: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x59e040716303: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x59e040ae2c25: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x59e040a24853: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x59e040a3d8ce: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x59e0406e3185: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x59e040804152: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x59e04080d389: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x59e0409e5ff2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x59e040ae2f89: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x59e040960107: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040960107: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040960107: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e040960107: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a154fe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a0f4b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065c86e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e040925d8f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x59e040c1d739: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x59e040c29d2b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x59e040c29751: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x59e040c25adb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x59e040c1f6cd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x59e040c1a84b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x59e040c18f13: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x59e04088e08f: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:60:9)",
"0x59e040aa2b4c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:63:9)",
"0x59e040825247: winter_verifier::perform_verification (verifier/src/lib.rs:223:43)",
"0x59e040a25848: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x59e04097b451: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e04097b451: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e04097b451: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e04097b451: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a147db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a09136: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065a65b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e0406e197f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x59e040944141: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040944141: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040944141: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e040944141: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a16f9b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a0b346: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065988b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e0408a94e3: winter_prover::Prover::generate_proof (prover/src/lib.rs:209:39)",
"0x59e0407d5f9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e040953d37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040953d37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040953d37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e040953d37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a1526e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a086a7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065adde: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e0408bed43: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:638:34)",
"0x59e04097c9a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e04097c9a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e04097c9a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e04097c9a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a173de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a0e4c9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065cede: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e0407095e0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x59e040715d3b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x59e040a33c77: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x59e040a2bc8c: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x59e040a327bc: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x59e040885be1: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x59e040882fbc: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x59e040888211: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x59e040c13118: <winter_air::proof::context::Context as winter_utils::serde::Deserializable>::read_from (src/proof/context.rs:184:35)",
"0x59e040c08bf7: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:27)",
"0x59e040a729a3: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x59e040af682c: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x59e0407cb2bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e040983ffe: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040983ffe: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040983ffe: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e040983ffe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x59e040a1543b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a0cb76: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e040aae10b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e0406db01c: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x59e040a57c60: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x59e0406fe23f: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x59e0406fe307: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x59e040825156: winter_verifier::perform_verification (verifier/src/lib.rs:225:13)",
"0x59e0408fda4e: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x59e0407cdf3a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e04093f15e: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e04093f15e: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e04093f15e: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e04093f15e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x59e040a1521e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a0a957: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e040aa176e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e040a24755: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:144:35)",
"0x59e040a49ccb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x59e040a49471: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x59e04085df0b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x59e040856451: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x59e04085c77d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x59e04085010e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x59e040974637: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040974637: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040974637: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e040974637: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a17ade: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a104b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065ad0e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e0408a9e32: winter_prover::Prover::generate_proof (prover/src/lib.rs:286:23)",
"0x59e040967f37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040967f37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040967f37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e040967f37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a172be: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a102d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065a4de: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e04087f2c4: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:198:23)",
"0x59e0408d9151: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x59e0408f0df3: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x59e040887f48: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x59e04088db27: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x59e04088b8cd: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x59e0407a99d0: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x59e040936c93: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:505:13)",
"0x59e0408239d9: winter_verifier::perform_verification (verifier/src/lib.rs:183:13)",
"0x59e040c0f709: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x59e040c104bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e040c13776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040c13776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040c13776: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e040aeebcd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x59e0407c1629: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x59e0407e5392: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x59e04080ca59: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x59e0409e1b42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x59e0407af0d9: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:174:17)",
"0x59e0407acf30: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:54:17)",
"0x59e040a24bf3: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x59e040c29b7b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x59e040c295f1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x59e040c25bbb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x59e040c2287e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x59e040c23c4c: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x59e040c22d8a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x59e0409f8ebb: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e0409f8ebb: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e0409f8ebb: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e0409f8ebb: <[V] as alloc::slice::Concat<T>>::concat (alloc/src/slice.rs:712:26)",
"0x59e0409f8cab: alloc::slice::<impl [T]>::concat (alloc/src/slice.rs:561:9)",
"0x59e040a31527: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:228:37)",
"0x59e040a2e903: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x59e0408bf3dd: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:659:26)",
"0x59e040c1b8ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e040c1c1a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040c1c1a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040c1c1a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e040c1c1a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x59e040c1c5ee: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040c1c5b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e040c1d84e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e040c1b299: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x59e0406e2cae: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x59e040c0edc4: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:361:22)",
"0x59e040c0e3d6: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:146:27)",
"0x59e0409456b1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e0409456b1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e0409456b1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e0409456b1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a1371b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a0ce16: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065c23b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e0406cf409: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x59e0407d623c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e040973977: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040973977: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040973977: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e040973977: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a1465e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a08517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065960e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e0408ab5d6: winter_prover::Prover::generate_proof (prover/src/lib.rs:491:51)",
"0x59e040ad4e2b: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x59e040a2b76a: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x59e040672c7a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x59e040837d31: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x59e04083b477: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x59e0408301bb: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x59e040ad782c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x59e0408dfb58: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x59e0404e59d5: winterfell::main (examples/src/main.rs:83:11)",
"0x59e040987067: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x59e0408e3a53: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x59e040c1075c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e040c13726: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040c13726: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040c13726: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e040c08d52: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:172:33)",
"0x59e0404e58fd: winterfell::main (examples/src/main.rs:80:24)",
"0x59e040c0d862: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:164:22)",
"0x59e040c08e38: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:176:34)",
"0x59e040aa863b: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:50:13)",
"0x59e040c6d6cc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x59e040c6bd9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x59e040c6ccf8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x59e040c6ccf8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x59e040c69964: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x59e040c69c13: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x59e040a50312: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x59e040c0da1e: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:168:21)",
"0x59e0407c9dbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e04096d127: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e04096d127: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e04096d127: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e04096d127: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a1401e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a0a6b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065cfae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e040a2ae38: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x59e040a3ebc2: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x59e0408dc240: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x59e040a52bb1: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x59e040a3d6fb: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x59e0407d4a9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e04096e111: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e04096e111: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e04096e111: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e04096e111: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a139fb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a0ccc6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065b86b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e0407aba5c: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:82:9)",
"0x59e04087f210: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:197:28)",
"0x59e0407d527c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e040946557: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040946557: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040946557: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e040946557: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e0409f479d: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x59e040a1021c: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065c4ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e04088c82a: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x59e040c0e2b9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x59e040c0e70b: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:211:22)",
"0x59e040c0915d: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:188:24)",
"0x59e0406c68e9: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:641:17)",
"0x59e0407ce70a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e040960781: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040960781: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040960781: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e040960781: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a15dab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a0a306: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065a09b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e0408bec73: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:634:36)",
"0x59e040c299cb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x59e040c296a1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x59e040c25c9b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x59e040c20471: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x59e040c20af7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x59e040c1b72b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x59e04070f0ab: winter_prover::trace::Trace::validate (src/trace/mod.rs:122:26)",
"0x59e0408adf21: winter_prover::Prover::generate_proof (prover/src/lib.rs:370:17)",
"0x59e040936bb8: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:510:13)",
"0x59e0408827be: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x59e040880f17: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x59e0406c05ac: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:293:57)",
"0x59e0408d9833: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x59e040947317: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040947317: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040947317: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e040947317: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a1506e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a10587: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065947e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e040884c6a: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x59e040a24693: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x59e040a62152: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x59e0406cf583: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x59e0406e1fa8: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x59e040c17b6c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040c17b6c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040c17b6c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x59e040c1762c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x59e040c1762c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x59e040c1762c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x59e040c176b6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x59e0408fdb2b: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x59e04092d73c: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x59e0408e711b: winter_prover::trace::commitment::build_segment_queries::{{closure}}::{{closure}} (src/trace/commitment.rs:162:42)",
"0x59e040765019: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x59e040988bc3: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x59e040ad800c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x59e04088dd16: <examples::do_work::air::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (src/do_work/air.rs:13:9)",
"0x59e0406bfb09: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:211:31)",
"0x59e040676d3a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x59e0407670a8: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x59e0406403ba: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x59e04066063a: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x59e040a7241a: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x59e04093a5ae: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x59e0406f889d: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x59e040939cce: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x59e04093c6c6: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x59e04092f9ea: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:362:9)",
"0x59e04093008d: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:540:13)",
"0x59e04094a5b7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e04094a5b7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e04094a5b7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e04094a5b7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a13b0e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a0ba37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065b2be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e0408e3c76: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x59e0407eeca2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x59e04080d539: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x59e0409e5b42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x59e040a18ffc: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x59e040939d4a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x59e0405f6149: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x59e0405f4c19: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x59e0405f3030: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x59e0405f3298: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x59e0405f2b5a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x59e0405f2b5a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x59e0404e76a1: alloc::string::String::reserve (alloc/src/string.rs:1152:9)",
"0x59e0404e76a1: <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend (alloc/src/string.rs:2173:14)",
"0x59e0404e777c: <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter (alloc/src/string.rs:2093:9)",
"0x59e040c0f187: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x59e040c0dfed: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:357:24)",
"0x59e040c08e53: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:174:32)",
"0x59e04070f598: winter_prover::trace::Trace::validate (src/trace/mod.rs:177:13)",
"0x59e04088de42: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::new (src/do_work/air.rs:35:23)",
"0x59e04082e8d1: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:101:85)",
"0x59e04067f432: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x59e04079bc0a: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:107:27)",
"0x59e0406b8bff: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x59e0407999a4: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:113:9)",
"0x59e040aa27eb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:39:30)",
"0x59e040c1f66d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x59e040c1a538: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x59e040c18dd7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x59e040810564: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x59e040a57a51: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x59e040acf08f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x59e0407cd4bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e0409804c8: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e0409804c8: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e0409804c8: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e0409804c8: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x59e040a1772e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a0e407: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e040af717e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e04093ae5c: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x59e040ad801d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x59e040a50580: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x59e040887ca7: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x59e040a313df: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:226:50)",
"0x59e040a1ce5d: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x59e040a20406: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x59e040a2e940: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x59e040882d29: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x59e0407b9d7b: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x59e0408fd214: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x59e040824e15: winter_verifier::perform_verification (verifier/src/lib.rs:320:5)",
"0x59e040acf184: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x59e0408fe010: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x59e040949911: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040949911: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040949911: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e040949911: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a14f1b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a10516: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065a20b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e0406e1bd7: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x59e0409449a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e0409449a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e0409449a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e0409449a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a1671e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a09517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065b37e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e0408fdf51: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x59e040a4a02b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x59e040a49681: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x59e04085d12b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x59e0408328bd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x59e0406fbf89: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x59e0408d7a00: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x59e0408f3a48: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x59e0408fddda: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x59e040809f22: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x59e04080cfc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x59e0409e6aaf: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x59e040a625d9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x59e0407cf40c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e04095ebc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e04095ebc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e04095ebc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e04095ebc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a14a9e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a0fc79: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065a94e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e0407ac77a: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:50:26)",
"0x59e040c14d7a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x59e040a730c6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040a730c6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040a730c6: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x59e040882ca3: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x59e040a6aca7: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x59e0406f677b: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x59e0406e223c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x59e0407ee7b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x59e04080cd89: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x59e0409e2f32: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x59e04082548c: winter_verifier::perform_verification (verifier/src/lib.rs:182:9)",
"0x59e0407ca2fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e040ad1776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040ad1776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040ad1776: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x59e0409fa3b9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x59e0409fa3b9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x59e0409fa3b9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x59e040af6846: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x59e040a2e872: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x59e0408a9c88: winter_prover::Prover::generate_proof (prover/src/lib.rs:268:13)",
"0x59e040a6d5d7: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x59e040ae2e0b: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x59e040882d84: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x59e040a1df53: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x59e040ad4e40: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x59e0407cc7bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e040979b27: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040979b27: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040979b27: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e040979b27: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e0409f2b76: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x59e040a0cba7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065bd6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e0408ead5b: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x59e0406e33ef: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x59e0408ad7ad: winter_prover::Prover::generate_proof (prover/src/lib.rs:438:13)",
"0x59e040a72299: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x59e040790499: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x59e04082498e: winter_verifier::perform_verification (verifier/src/lib.rs:303:42)",
"0x59e040c0dd02: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:348:22)",
"0x59e040a2589e: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x59e04088e12c: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:62:13)",
"0x59e040989cd6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040989cd6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040989cd6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e0408aa00d: winter_prover::Prover::generate_proof (prover/src/lib.rs:300:37)",
"0x59e040c0e8d2: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:215:25)",
"0x59e0408ad665: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:17)",
"0x59e040c125bd: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:151:28)",
"0x59e0406ccc8d: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x59e04082a869: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:214:32)",
"0x59e04066f603: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x59e040948197: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040948197: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040948197: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e040948197: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a16f6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a08599: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065bc6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e040a29e47: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x59e040a281a4: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x59e040ae2caa: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x59e0406dd2ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x59e040824810: winter_verifier::perform_verification (verifier/src/lib.rs:302:9)",
"0x59e04088983e: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x59e040a50810: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x59e0408fd1a5: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x59e0408dfb12: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x59e040795a03: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x59e040957666: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040957666: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040957666: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e040957666: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x59e040a13b6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a0c5dc: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e040a1b9be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e040a1dedb: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x59e040c0ef46: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:365:21)",
"0x59e040795a1e: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x59e0408a9656: winter_prover::Prover::generate_proof (prover/src/lib.rs:228:27)",
"0x59e040a6d51a: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x59e0407cf94c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e040943ae7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040943ae7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040943ae7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e040943ae7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a1553e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a0fd37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065bd4e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e0408cb619: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces (src/do_work/prover.rs:30:9)",
"0x59e040c0dec9: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:352:21)",
"0x59e040793484: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x59e040aa5fd0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:149:33)",
"0x59e040a2c7a5: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x59e0408c78e7: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:706:26)",
"0x59e0408ab110: winter_prover::Prover::generate_proof (prover/src/lib.rs:472:37)",
"0x59e0407d551c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e040981907: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040981907: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040981907: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e040981907: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a14fde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a0e627: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065993e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e04068cd54: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:112:30)",
"0x59e0409597f7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e0409597f7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e0409597f7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e0409597f7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a15b7e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a0ff39: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065a0ee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e0408a9603: winter_prover::Prover::generate_proof (prover/src/lib.rs:217:20)",
"0x59e040958f91: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040958f91: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040958f91: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e040958f91: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a13edb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a0d626: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e0406594ab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e0408beba6: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:630:42)",
"0x59e04096dee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e04096dee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e04096dee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e04096dee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a13dde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a0ac57: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065d47e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e040a72994: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x59e040af2c0e: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x59e040af0104: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x59e0408ac38b: winter_prover::Prover::generate_proof (prover/src/lib.rs:561:9)",
"0x59e040aeec77: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x59e040bfee7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e040b6f57c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040b6f57c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040b6f57c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x59e040b3fcc9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x59e040b3fcc9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x59e040b3fcc9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x59e04092ee3f: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x59e040a3e1f6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x59e0406e2c48: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x59e0407c4fee: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x59e0406e242b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x59e040a21af6: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x59e040824d3a: winter_verifier::perform_verification (verifier/src/lib.rs:316:28)",
"0x59e04095d787: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e04095d787: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e04095d787: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e04095d787: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a1467e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a0b807: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065d71e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e04070d33a: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:132:32)",
"0x59e040a3126a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x59e0406fe22a: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x59e040a506ec: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x59e0407d066c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e040988e1c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040988e1c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040988e1c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x59e0409f9e79: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x59e0409f9e79: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x59e0409f9e79: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x59e0408ab6be: winter_prover::Prover::generate_proof (prover/src/lib.rs:500:39)",
"0x59e040c11502: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x59e040c12179: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x59e040c13ae2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x59e040c09916: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:13)",
"0x59e040aa958d: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:33)",
"0x59e0408adbd3: winter_prover::Prover::generate_proof (prover/src/lib.rs:407:21)",
"0x59e040a669fc: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x59e04096f2f0: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e04096f2f0: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e04096f2f0: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e04096f2f0: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x59e040a135bb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a0eda6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065adbb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e040a62075: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x59e0407c6c0c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e040968b31: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040968b31: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040968b31: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e040968b31: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a160ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a0a5a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065be5b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e040795967: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x59e0407cb55c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e0409751c7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e0409751c7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e0409751c7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e0409751c7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a1406e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a092c7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e0407a742e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e0408a979f: winter_prover::Prover::generate_proof (prover/src/lib.rs:243:41)",
"0x59e040805022: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x59e04080d9e9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x59e0409e4842: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x59e040825673: winter_verifier::perform_verification (verifier/src/lib.rs:177:9)",
"0x59e04097bf17: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e04097bf17: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e04097bf17: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e04097bf17: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a15b2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a0b147: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065aa9e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e0408a9416: winter_prover::Prover::generate_proof (prover/src/lib.rs:205:38)",
"0x59e0406c5bb0: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:221:17)",
"0x59e040670922: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x59e040a9f4dd: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::SpecFold>::spec_fold (iter/adapters/zip.rs:685:25)",
"0x59e040a8bee7: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::fold (iter/adapters/zip.rs:249:9)",
"0x59e040a769b7: <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/zip.rs:103:9)",
"0x59e040a6d42f: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x59e040a6d504: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x59e040aeec96: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x59e040acf103: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x59e0408897d0: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x59e040aa9819: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:129:9)",
"0x59e04082d718: winter_verifier::verify (verifier/src/lib.rs:97:38)",
"0x59e040a2c866: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x59e0407c8b7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e04096af11: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e04096af11: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e04096af11: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e04096af11: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a153db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a0ad46: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e040659acb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e0408edc0e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x59e04093ec21: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e04093ec21: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e04093ec21: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e04093ec21: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a153ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a08ac6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065d01b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e0408ab6a3: winter_prover::Prover::generate_proof (prover/src/lib.rs:495:52)",
"0x59e0407cc51c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e040a3e2be: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040a3e2be: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040a3e2be: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x59e0409f8b77: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x59e040795c58: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x59e040acf3fb: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x59e04094e227: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e04094e227: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e04094e227: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e04094e227: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a1423e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a0bd47: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065cbee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e0408fe10f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x59e0407e0982: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x59e04080cc39: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x59e0409e5a51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x59e0408856c9: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x59e04078930d: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x59e0407fb712: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x59e04080d149: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x59e0409e4122: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x59e0408e3c91: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x59e040947541: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040947541: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040947541: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e040947541: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a1590b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a0b276: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065b45b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e0406e1b0f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x59e0408aac77: winter_prover::Prover::generate_proof (prover/src/lib.rs:442:35)",
"0x59e0406cccb0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x59e040a744cb: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x59e040a6aa9a: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x59e0407aef72: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:169:36)",
"0x59e040c2276e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x59e040c24220: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x59e040c23428: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x59e040a31476: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:228:38)",
"0x59e040a502ef: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x59e040a61d42: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x59e0407d2b1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e04095b7cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e04095b7cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e04095b7cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e04095b7cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x59e040a1686e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a08947: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e040659e8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e040939bf6: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x59e040a354a2: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x59e040a34147: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x59e0408bedf7: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:645:31)",
"0x59e0408e7199: winter_prover::trace::commitment::build_segment_queries::{{closure}}::{{closure}} (src/trace/commitment.rs:164:27)",
"0x59e0408e5736: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:159:13)",
"0x59e0406f7e22: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x59e04078d5c4: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x59e040aadd04: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x59e040929d61: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x59e04082433e: winter_verifier::perform_verification (verifier/src/lib.rs:272:24)",
"0x59e040c6ed18: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x59e040c7000a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x59e040c7000a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x59e040c6fdae: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x59e040c6fdae: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x59e040c6fe9d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x59e0408329dd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x59e0406fb83f: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x59e0408d76c3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x59e04070c87b: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:235:25)",
"0x59e040ad7a62: examples::do_work::prover::build_do_work_trace (src/do_work/prover.rs:65:5)",
"0x59e0408cb668: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces::{{closure}} (src/do_work/prover.rs:32:27)",
"0x59e040afa6eb: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x59e0407fa842: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x59e04080d419: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x59e0409e2ba2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x59e0407c157e: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x59e04092ee2a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x59e0407b5175: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x59e0407c7bbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x59e040950991: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040950991: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040950991: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e040950991: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a1637b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a0bed6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065978b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e040823cd2: winter_verifier::perform_verification (verifier/src/lib.rs:212:41)",
"0x59e040c2981b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x59e040c29541: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x59e040c25d7b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x59e040c203a1: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x59e040c20b37: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x59e040c1b6db: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x59e040af5cb7: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x59e040aa7a27: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:272:18)",
"0x59e040aa6297: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:166:30)",
"0x59e0407e7622: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x59e04080d839: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x59e0409e6252: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x59e040a57db8: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x59e040a62524: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x59e0407b9d36: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x59e040a4ff64: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:142:33)",
"0x59e04070d511: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:132:51)",
"0x59e04066fa1a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x59e040ab2da5: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x59e040aa94c0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:28)",
"0x59e0408efa92: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x59e0406c64c6: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:493:32)",
"0x59e04067c09a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x59e0407492a2: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x59e040647c9b: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x59e040664906: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x59e040973ba1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e040973ba1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e040973ba1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e040973ba1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a16b3b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a0e0b6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065a6cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e0408a9c5d: winter_prover::Prover::generate_proof (prover/src/lib.rs:266:43)",
"0x59e04087f723: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:200:34)",
"0x59e04066eb0a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x59e0407421bf: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x59e040885d04: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x59e040acf450: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x59e0409699d1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x59e0409699d1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x59e0409699d1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x59e0409699d1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x59e040a15cfb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x59e040a0e026: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x59e04065c64b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x59e0406e1c9f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x59e0406cf6f1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x59e040a57782: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x59e040c11012: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x59e040c121a9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x59e040c13878: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x59e040c09c1a: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:13)"
]
}