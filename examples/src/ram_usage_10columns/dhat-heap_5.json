{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell do-work -n 5 -l 65536",
"pid": 22471,
"tg": 51560149,
"te": 64325286,
"pps": [
{
"tb": 400,
"tbk": 5,
"tl": 8004790,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10
]
},
{
"tb": 480,
"tbk": 5,
"tl": 148,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
13,
14,
15,
16,
17
]
},
{
"tb": 120,
"tbk": 1,
"tl": 27,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
22,
23,
24,
25,
26,
27
]
},
{
"tb": 288,
"tbk": 2,
"tl": 646697,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
30,
31,
32,
33,
34
]
},
{
"tb": 80,
"tbk": 5,
"tl": 8006101,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
36,
37,
38,
39,
40,
41,
42,
43,
44
]
},
{
"tb": 23008,
"tbk": 116,
"tl": 624373,
"mb": 23008,
"mbk": 116,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
45,
46,
47,
48,
49,
50,
51,
52
]
},
{
"tb": 320,
"tbk": 5,
"tl": 34224,
"mb": 320,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
53,
54,
55,
56,
57
]
},
{
"tb": 936,
"tbk": 4,
"tl": 1235,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
60,
61,
62,
63,
64,
65,
66
]
},
{
"tb": 240,
"tbk": 10,
"tl": 521,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
67,
68,
69,
70,
71,
72
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 326000,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
36,
37,
38,
39,
40,
41,
73,
74,
17
]
},
{
"tb": 9840,
"tbk": 10,
"tl": 269,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
76,
77,
78,
79,
80
]
},
{
"tb": 256,
"tbk": 1,
"tl": 10545,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
36,
37,
38,
39,
40,
41,
81,
82,
83
]
},
{
"tb": 288,
"tbk": 2,
"tl": 6878,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
84,
85,
86,
87,
88
]
},
{
"tb": 25600,
"tbk": 5,
"tl": 21451,
"mb": 25600,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
89,
90,
91,
92,
93,
94,
95
]
},
{
"tb": 96,
"tbk": 2,
"tl": 3495289,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
96,
97,
98,
99,
100,
101,
17
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3079,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
102,
103,
104,
105,
106,
107,
95,
108
]
},
{
"tb": 24,
"tbk": 1,
"tl": 8957,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
109,
110,
111,
112
]
},
{
"tb": 40,
"tbk": 1,
"tl": 1774,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
113,
114,
115,
116,
117,
118,
119,
120
]
},
{
"tb": 288,
"tbk": 2,
"tl": 7752,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
121,
122,
123,
124,
125
]
},
{
"tb": 15744,
"tbk": 4,
"tl": 35444,
"mb": 15744,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
126,
127,
128,
129,
130,
131,
132,
133,
134,
135
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3663,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
102,
103,
104,
105,
106,
136,
137,
138
]
},
{
"tb": 160,
"tbk": 5,
"tl": 45,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
96,
139,
140,
141,
142,
143,
144,
145,
146,
147,
148
]
},
{
"tb": 480,
"tbk": 5,
"tl": 75,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
13,
149,
150,
88,
151
]
},
{
"tb": 288,
"tbk": 2,
"tl": 6142,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
30,
31,
32,
33,
152
]
},
{
"tb": 2560,
"tbk": 5,
"tl": 1020,
"mb": 2560,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
89,
90,
91,
153,
154,
88,
151
]
},
{
"tb": 160,
"tbk": 5,
"tl": 271,
"mb": 160,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
89,
90,
91,
92,
155,
156,
157
]
},
{
"tb": 288,
"tbk": 2,
"tl": 44,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
30,
31,
32,
158,
154
]
},
{
"tb": 3936,
"tbk": 4,
"tl": 3802,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
45,
159,
160,
161,
162,
163,
164,
165
]
},
{
"tb": 120,
"tbk": 1,
"tl": 221,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
166,
167,
168,
169,
170,
171,
172,
173
]
},
{
"tb": 2621440,
"tbk": 5,
"tl": 1444843,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
89,
90,
91,
174,
175,
176,
177
]
},
{
"tb": 1920,
"tbk": 5,
"tl": 8005565,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
178,
179,
180,
181,
182,
183,
184,
185,
186
]
},
{
"tb": 1920,
"tbk": 10,
"tl": 346,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
187,
188,
189,
190,
191,
192,
193,
194,
195
]
},
{
"tb": 160,
"tbk": 5,
"tl": 27101817,
"mb": 160,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
96,
97,
98,
99,
100,
196,
197
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 204228,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
45,
46,
47,
48,
198,
199,
200,
201
]
},
{
"tb": 160,
"tbk": 1,
"tl": 105,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
202,
203,
204,
205,
206,
207,
208,
209,
210
]
},
{
"tb": 160,
"tbk": 10,
"tl": 8006715,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
211,
212,
213,
214,
215,
216,
217,
218
]
},
{
"tb": 360,
"tbk": 1,
"tl": 12653209,
"mb": 360,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
219,
220,
221,
222,
223,
224,
225,
226,
227
]
},
{
"tb": 2880,
"tbk": 10,
"tl": 227,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
228,
229,
230,
231,
232,
233,
234,
235,
236
]
},
{
"tb": 4800,
"tbk": 20,
"tl": 60,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
53,
54,
55,
237,
238
]
},
{
"tb": 160,
"tbk": 5,
"tl": 32240,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
239,
240,
17,
241,
242
]
},
{
"tb": 1536,
"tbk": 2,
"tl": 948308,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
243,
244,
245,
246,
17
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 325369,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
89,
90,
91,
174,
175,
176,
247
]
},
{
"tb": 120,
"tbk": 5,
"tl": 8006179,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
248,
249,
43,
44,
16,
17
]
},
{
"tb": 25600,
"tbk": 160,
"tl": 570218,
"mb": 25600,
"mbk": 160,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
36,
37,
38,
39,
40,
41,
250,
251,
252
]
},
{
"tb": 120,
"tbk": 1,
"tl": 12636078,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
253,
254,
255,
256,
257,
17,
241,
242
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 54259,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
36,
37,
38,
39,
40,
41,
258,
259,
17
]
},
{
"tb": 80,
"tbk": 5,
"tl": 45049,
"mb": 80,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
126,
127,
128,
129,
130,
131,
132,
133,
260,
261
]
},
{
"tb": 1600,
"tbk": 5,
"tl": 34731,
"mb": 1600,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
36,
37,
38,
262,
263,
264,
265,
266,
157
]
},
{
"tb": 512,
"tbk": 1,
"tl": 10,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
267,
268,
269,
270,
271,
272,
273,
274
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4138,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
89,
90,
91,
275,
276,
88,
151
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 6897,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
277,
278,
279,
280,
281
]
},
{
"tb": 3456,
"tbk": 12,
"tl": 4586,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
282,
283,
284,
285,
286,
287,
288
]
},
{
"tb": 83886080,
"tbk": 524288,
"tl": 6386597,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
36,
37,
38,
39,
40,
41,
289,
290,
291
]
},
{
"tb": 56,
"tbk": 1,
"tl": 2936,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
292,
108,
157,
151,
293
]
},
{
"tb": 20480,
"tbk": 128,
"tl": 590,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
36,
37,
38,
262,
263,
264,
265,
294,
295
]
},
{
"tb": 15744,
"tbk": 4,
"tl": 525,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
296,
297,
298,
299,
300,
301,
302
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
126,
127,
128,
129,
130,
131,
132,
303,
304,
305
]
},
{
"tb": 80,
"tbk": 5,
"tl": 362,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
296,
297,
298,
299,
300,
301,
306
]
},
{
"tb": 480,
"tbk": 10,
"tl": 53842956,
"mb": 480,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
307,
308,
309,
310,
311,
312,
313,
314
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1059704,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
22,
23,
24,
315,
316,
17
]
},
{
"tb": 10485760,
"tbk": 5,
"tl": 4531252,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
89,
90,
91,
174,
317,
318,
319
]
},
{
"tb": 40,
"tbk": 1,
"tl": 1761,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
320,
321,
322,
323,
324,
325,
326,
327
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 12754142,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
45,
46,
47,
48,
198,
328,
329,
330
]
},
{
"tb": 40,
"tbk": 1,
"tl": 3965,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
331,
332,
333,
334,
335,
336,
337,
338,
339
]
},
{
"tb": 800,
"tbk": 5,
"tl": 12868,
"mb": 800,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
340,
341,
342,
343,
344,
345,
346
]
},
{
"tb": 3120,
"tbk": 30,
"tl": 422,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
282,
347,
348,
349,
350,
351,
352
]
},
{
"tb": 2808,
"tbk": 4,
"tl": 3818,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
102,
103,
104,
105,
353,
164,
165,
354
]
},
{
"tb": 1200,
"tbk": 10,
"tl": 27101856,
"mb": 960,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
355,
356,
17,
241,
242
]
},
{
"tb": 256,
"tbk": 1,
"tl": 12,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
36,
37,
38,
262,
263,
264,
357,
354,
17
]
},
{
"tb": 256,
"tbk": 1,
"tl": 662,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
60,
61,
62,
63,
64,
358,
359
]
},
{
"tb": 2240,
"tbk": 15,
"tl": 3233562,
"mb": 1280,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
53,
54,
55,
360,
34
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
361,
362,
305,
27,
17,
241
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 1723131,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
89,
90,
91,
174,
363,
364,
365
]
},
{
"tb": 15744,
"tbk": 123,
"tl": 114,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
366,
367,
368,
369,
370,
371,
372,
373
]
},
{
"tb": 512,
"tbk": 1,
"tl": 35,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
36,
37,
38,
262,
263,
264,
374,
154,
88
]
},
{
"tb": 5242880,
"tbk": 5,
"tl": 360383,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
89,
90,
91,
174,
175,
176,
375
]
},
{
"tb": 80,
"tbk": 1,
"tl": 64182734,
"mb": 80,
"mbk": 1,
"gb": 80,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
376,
377,
378,
379,
380,
381,
382,
383,
384
]
},
{
"tb": 20971680,
"tbk": 15,
"tl": 383244,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
89,
90,
91,
174,
385,
386,
387
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 734643,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
89,
90,
91,
174,
388,
389,
390
]
},
{
"tb": 10485760,
"tbk": 655360,
"tl": 460689,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
36,
37,
38,
262,
263,
264,
391,
392,
393
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 45,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
89,
90,
91,
174,
175,
176,
394
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3245,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
22,
23,
24,
25,
395,
396
]
},
{
"tb": 240,
"tbk": 10,
"tl": 16010975,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
397,
398,
399,
400,
401,
402,
403,
404,
405,
406
]
},
{
"tb": 10485760,
"tbk": 5,
"tl": 2067793,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
407,
408,
409,
410,
411,
412,
413,
414
]
},
{
"tb": 256,
"tbk": 1,
"tl": 8839,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
126,
127,
128,
129,
130,
131,
132,
133,
415,
416
]
},
{
"tb": 96,
"tbk": 1,
"tl": 7797,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
30,
31,
32,
417,
418
]
},
{
"tb": 80,
"tbk": 1,
"tl": 109,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
419,
420,
421,
422,
423,
424,
425,
426,
17,
241
]
},
{
"tb": 160,
"tbk": 5,
"tl": 497,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
36,
37,
38,
262,
263,
264,
427,
428,
429
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 44478952,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
45,
46,
47,
48,
198,
430,
291,
431
]
},
{
"tb": 2304,
"tbk": 12,
"tl": 4689,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
282,
432,
433,
434,
435,
436,
437
]
},
{
"tb": 160,
"tbk": 1,
"tl": 115,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
202,
438,
439,
440,
441,
442,
443,
444,
445
]
},
{
"tb": 512,
"tbk": 1,
"tl": 53,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
446,
447,
448,
449,
450,
451,
452,
453
]
},
{
"tb": 576,
"tbk": 2,
"tl": 8883,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
454,
455,
456,
457,
112
]
},
{
"tb": 400,
"tbk": 1,
"tl": 64316039,
"mb": 400,
"mbk": 1,
"gb": 400,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
458,
459,
460,
461,
462,
463,
464,
465,
466
]
},
{
"tb": 120,
"tbk": 5,
"tl": 27101959,
"mb": 120,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
397,
398,
399,
400,
401,
402,
403,
404,
467,
356
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4127,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
468,
469,
470,
471,
472,
473,
474,
475
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2075,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
102,
103,
104,
105,
353,
476,
259,
17
]
},
{
"tb": 15744,
"tbk": 4,
"tl": 1600,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
296,
297,
298,
299,
300,
301,
477
]
},
{
"tb": 160,
"tbk": 5,
"tl": 3,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
478,
479,
151,
293
]
},
{
"tb": 80,
"tbk": 5,
"tl": 556,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
480,
481,
13,
14,
15,
16
]
},
{
"tb": 134217728,
"tbk": 1,
"tl": 31846497,
"mb": 134217728,
"mbk": 1,
"gb": 134217728,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
36,
37,
38,
262,
263,
264,
482,
483,
484
]
},
{
"tb": 1600,
"tbk": 5,
"tl": 57,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
89,
90,
91,
92,
485,
156,
157
]
},
{
"tb": 5760,
"tbk": 20,
"tl": 700,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
486,
487,
488,
489,
490
]
},
{
"tb": 3520,
"tbk": 18,
"tl": 77,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
491,
492,
493,
494,
495,
496,
497,
498,
396
]
},
{
"tb": 1200,
"tbk": 5,
"tl": 59335356,
"mb": 1200,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
22,
23,
24,
499,
500,
501
]
},
{
"tb": 72,
"tbk": 1,
"tl": 8986,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
502,
503,
504,
505,
506,
507,
112
]
},
{
"tb": 32,
"tbk": 1,
"tl": 8634,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
45,
46,
47,
48,
49,
508,
509,
157
]
},
{
"tb": 41943040,
"tbk": 5,
"tl": 18229364,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
89,
90,
91,
174,
363,
364,
510
]
},
{
"tb": 224,
"tbk": 1,
"tl": 8989,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
126,
127,
128,
129,
130,
131,
132,
133,
511,
512
]
},
{
"tb": 100320,
"tbk": 220,
"tl": 59733,
"mb": 25992,
"mbk": 57,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
513,
514,
515,
516,
517,
518
]
},
{
"tb": 5242880,
"tbk": 5,
"tl": 367284,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
296,
297,
298,
299,
300,
301,
519
]
},
{
"tb": 800,
"tbk": 5,
"tl": 130813,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
340,
341,
342,
343,
520,
521,
522
]
},
{
"tb": 40,
"tbk": 1,
"tl": 51521393,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
523,
524,
525,
526,
527,
528,
529,
530,
531
]
},
{
"tb": 120,
"tbk": 1,
"tl": 12636094,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
532,
533,
534,
535,
536,
17,
241,
242
]
},
{
"tb": 320,
"tbk": 5,
"tl": 855,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
53,
54,
55,
56,
537
]
},
{
"tb": 52428800,
"tbk": 50,
"tl": 2541027305,
"mb": 52428800,
"mbk": 50,
"gb": 52428800,
"gbk": 50,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
36,
37,
38,
262,
263,
264,
538,
539,
540
]
},
{
"tb": 106368,
"tbk": 411,
"tl": 211445,
"mb": 16384,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
45,
541,
542,
543,
544,
545,
546,
547,
548
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 186452,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
45,
46,
47,
48,
198,
328,
329,
549
]
},
{
"tb": 25600,
"tbk": 1,
"tl": 7826,
"mb": 25600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
126,
550,
551,
552,
553,
125,
396,
554
]
},
{
"tb": 160,
"tbk": 5,
"tl": 43561,
"mb": 160,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
555,
556,
557,
558,
559,
560
]
},
{
"tb": 40,
"tbk": 1,
"tl": 303,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
561,
562,
563,
564,
565,
566,
567,
568
]
},
{
"tb": 480,
"tbk": 1,
"tl": 64186883,
"mb": 480,
"mbk": 1,
"gb": 480,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
569,
570,
571,
572,
573,
574,
575,
576,
577
]
},
{
"tb": 192,
"tbk": 1,
"tl": 8880,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
502,
578,
579,
580,
581,
582,
583,
416,
112
]
},
{
"tb": 1174405120,
"tbk": 2097152,
"tl": 22798282,
"mb": 1440,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
584,
585,
586,
587,
588,
589,
290,
291
]
},
{
"tb": 13120,
"tbk": 32,
"tl": 114940,
"mb": 13120,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
45,
46,
47,
48,
49,
50,
136,
137
]
},
{
"tb": 1605,
"tbk": 5,
"tl": 64,
"mb": 321,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
96,
139,
140,
141,
142,
143,
144,
145,
590,
147,
148
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 8953,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
126,
127,
128,
129,
130,
131,
132,
133,
591,
592
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 279165,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
36,
37,
38,
262,
263,
264,
265,
593,
240
]
},
{
"tb": 160,
"tbk": 1,
"tl": 8624,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
45,
46,
47,
48,
49,
594,
509,
157
]
},
{
"tb": 9584640,
"tbk": 4,
"tl": 208118,
"mb": 9584640,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
89,
90,
91,
174,
595,
596,
201
]
},
{
"tb": 240,
"tbk": 1,
"tl": 2602,
"mb": 240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
597,
598,
599,
600,
601,
602,
603,
604,
605
]
},
{
"tb": 40,
"tbk": 1,
"tl": 50076417,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
523,
606,
607,
608,
609,
610,
611,
612,
613
]
},
{
"tb": 80,
"tbk": 5,
"tl": 280,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
480,
614,
13,
149,
150,
88
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1256,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
282,
615,
616,
617,
618,
619,
620,
621,
622,
623,
624
]
},
{
"tb": 80,
"tbk": 5,
"tl": 391,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
36,
37,
38,
39,
40,
41,
42,
43,
625
]
},
{
"tb": 1200,
"tbk": 5,
"tl": 321314373,
"mb": 1200,
"mbk": 5,
"gb": 1200,
"gbk": 5,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
626,
627,
628,
629,
630,
631,
632,
633
]
},
{
"tb": 1080,
"tbk": 1,
"tl": 64182929,
"mb": 1080,
"mbk": 1,
"gb": 1080,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
634,
635,
636,
637,
638,
639,
640,
641,
642
]
},
{
"tb": 335544320,
"tbk": 5,
"tl": 18106738,
"mb": 67108864,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
643,
644,
645,
646,
647,
648,
649,
650
]
},
{
"tb": 6072,
"tbk": 11,
"tl": 4255,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
651,
652,
653,
654,
655,
656
]
},
{
"tb": 576,
"tbk": 4,
"tl": 1582,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
340,
341,
342,
343,
657,
658,
623
]
},
{
"tb": 288,
"tbk": 2,
"tl": 3870,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
30,
31,
32,
659,
240
]
},
{
"tb": 80,
"tbk": 5,
"tl": 3473275,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
340,
341,
342,
343,
660,
661,
662
]
},
{
"tb": 1632,
"tbk": 11,
"tl": 5863641,
"mb": 1632,
"mbk": 11,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
663,
664,
665,
666,
667,
668,
669,
670
]
},
{
"tb": 1968,
"tbk": 4,
"tl": 2910,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
671,
672,
673,
674,
675,
676,
677,
678
]
},
{
"tb": 160,
"tbk": 5,
"tl": 44538,
"mb": 160,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
126,
127,
128,
129,
130,
131,
132,
133,
679,
680
]
},
{
"tb": 256,
"tbk": 1,
"tl": 8086,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
89,
90,
91,
92,
681,
682,
157
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 64182707,
"mb": 524288,
"mbk": 1,
"gb": 524288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
89,
90,
91,
174,
175,
683,
684
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 5788,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
126,
550,
551,
552,
685,
686,
259,
17
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2744,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
36,
37,
38,
39,
40,
41,
687,
157,
151
]
},
{
"tb": 41943040,
"tbk": 20,
"tl": 106631505,
"mb": 41943040,
"mbk": 20,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
89,
90,
91,
174,
688,
689,
690
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 3661,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
45,
691,
692,
693,
694,
695,
696,
697,
698
]
},
{
"tb": 2560,
"tbk": 5,
"tl": 992,
"mb": 2560,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
89,
90,
91,
699,
154,
88,
151
]
},
{
"tb": 512,
"tbk": 1,
"tl": 16,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
89,
90,
91,
700,
701,
88,
151
]
},
{
"tb": 120,
"tbk": 1,
"tl": 51537496,
"mb": 120,
"mbk": 1,
"gb": 120,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
253,
702,
703,
704,
705,
706,
707,
708,
709
]
},
{
"tb": 64,
"tbk": 1,
"tl": 25,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
361,
362,
710,
151,
293
]
},
{
"tb": 52428800,
"tbk": 50,
"tl": 3213134406,
"mb": 52428800,
"mbk": 50,
"gb": 52428800,
"gbk": 50,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
89,
90,
91,
174,
711,
712,
713
]
},
{
"tb": 240,
"tbk": 1,
"tl": 64186768,
"mb": 240,
"mbk": 1,
"gb": 240,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
714,
715,
716,
717,
718,
719,
27,
17
]
},
{
"tb": 72,
"tbk": 1,
"tl": 1060510,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
19,
20,
21,
22,
23,
24,
720,
316,
17
]
},
{
"tb": 1248,
"tbk": 12,
"tl": 297,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
282,
347,
348,
349,
721,
722,
723
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1250,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
36,
37,
38,
39,
40,
41,
724,
623,
624
]
},
{
"tb": 32,
"tbk": 1,
"tl": 3788,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
725,
726,
727,
728,
729,
730,
731,
732,
733
]
},
{
"tb": 2240,
"tbk": 15,
"tl": 30793,
"mb": 1280,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
53,
54,
55,
360,
152
]
},
{
"tb": 96,
"tbk": 2,
"tl": 3495288,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
96,
97,
98,
99,
100,
734,
17
]
},
{
"tb": 71680,
"tbk": 128,
"tl": 83102,
"mb": 26240,
"mbk": 33,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
584,
585,
586,
587,
588,
735,
295,
736
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
126,
127,
128,
129,
130,
131,
132,
303,
304,
710
]
},
{
"tb": 1920,
"tbk": 8,
"tl": 8758,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
53,
54,
55,
737,
738
]
},
{
"tb": 25600,
"tbk": 5,
"tl": 38884,
"mb": 25600,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
126,
550,
551,
552,
739,
125,
396,
554
]
},
{
"tb": 120,
"tbk": 5,
"tl": 435,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
248,
249,
43,
625,
150,
88
]
},
{
"tb": 1080,
"tbk": 1,
"tl": 8735,
"mb": 1080,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
634,
740,
741,
742,
743,
744,
745,
746,
747
]
},
{
"tb": 3520,
"tbk": 18,
"tl": 530,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
491,
492,
493,
494,
495,
496,
748,
64,
358
]
},
{
"tb": 10485760,
"tbk": 5,
"tl": 20311959,
"mb": 10485760,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
296,
297,
298,
299,
300,
301,
749
]
},
{
"tb": 480,
"tbk": 2,
"tl": 6902,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
750,
751,
752,
753,
157
]
},
{
"tb": 80,
"tbk": 5,
"tl": 320934298,
"mb": 80,
"mbk": 5,
"gb": 80,
"gbk": 5,
"eb": 0,
"ebk": 0,
"fs": [
28,
126,
127,
128,
129,
130,
131,
132,
754,
755,
756
]
},
{
"tb": 671088640,
"tbk": 5,
"tl": 259256872,
"mb": 671088640,
"mbk": 5,
"gb": 671088640,
"gbk": 5,
"eb": 0,
"ebk": 0,
"fs": [
1,
643,
644,
645,
646,
647,
757,
758,
759
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 132234,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
89,
90,
91,
174,
317,
760,
761
]
},
{
"tb": 72,
"tbk": 1,
"tl": 10088,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
762,
554,
17,
241,
242
]
},
{
"tb": 1200,
"tbk": 5,
"tl": 254757027,
"mb": 1200,
"mbk": 5,
"gb": 1200,
"gbk": 5,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
763,
764,
765,
766,
767,
768,
769,
770
]
},
{
"tb": 15744,
"tbk": 4,
"tl": 25142,
"mb": 15744,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
89,
90,
91,
771,
52,
418,
157
]
},
{
"tb": 160,
"tbk": 5,
"tl": 1000,
"mb": 160,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
478,
772,
773,
774,
775,
776
]
},
{
"tb": 13153,
"tbk": 1,
"tl": 8948,
"mb": 13153,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
126,
127,
128,
129,
130,
131,
132,
133,
777,
592
]
},
{
"tb": 1600,
"tbk": 10,
"tl": 3659142,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
296,
297,
298,
299,
300,
301,
778
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4556,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
779,
780,
781,
782,
783,
784,
785,
786
]
},
{
"tb": 984,
"tbk": 4,
"tl": 4015,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
282,
615,
616,
617,
618,
619,
620,
621,
787,
788,
623
]
},
{
"tb": 6672,
"tbk": 42,
"tl": 138,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
491,
492,
493,
494,
495,
496,
497,
164,
165
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 3085,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
45,
789,
790,
791,
792,
793,
794,
795,
796
]
},
{
"tb": 240,
"tbk": 5,
"tl": 2816621,
"mb": 240,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
797,
798,
799,
800,
801,
802
]
},
{
"tb": 64,
"tbk": 1,
"tl": 646691,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
53,
54,
55,
803,
34
]
},
{
"tb": 13153,
"tbk": 1,
"tl": 8961,
"mb": 13153,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
126,
127,
128,
129,
130,
131,
132,
133,
804,
111
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
126,
127,
128,
129,
130,
131,
132,
303,
805,
710
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2071,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
45,
159,
160,
161,
162,
163,
476,
259
]
},
{
"tb": 2880,
"tbk": 24,
"tl": 2349,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
96,
97,
98,
99,
100,
806,
64
]
},
{
"tb": 480,
"tbk": 5,
"tl": 67,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
807,
808,
809,
810,
811,
812,
813,
814,
815
]
},
{
"tb": 25600,
"tbk": 1,
"tl": 8979,
"mb": 25600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
126,
127,
128,
129,
130,
131,
132,
133,
816,
111
]
},
{
"tb": 64,
"tbk": 1,
"tl": 6137,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
53,
54,
55,
803,
152
]
},
{
"tb": 83168,
"tbk": 1594,
"tl": 5858407,
"mb": 17088,
"mbk": 12,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
817,
818,
819,
820,
821,
822,
823
]
},
{
"tb": 80,
"tbk": 5,
"tl": 185736,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
340,
341,
342,
343,
824,
825,
17
]
},
{
"tb": 40,
"tbk": 1,
"tl": 1747,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
826,
827,
828,
829,
830,
831,
832,
833
]
},
{
"tb": 240,
"tbk": 1,
"tl": 2549,
"mb": 240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
834,
835,
836,
837,
838,
839,
840,
841,
842
]
},
{
"tb": 512,
"tbk": 1,
"tl": 20,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
89,
90,
91,
174,
843,
844,
154
]
},
{
"tb": 320,
"tbk": 5,
"tl": 34245,
"mb": 320,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
53,
54,
55,
845,
57
]
},
{
"tb": 640,
"tbk": 10,
"tl": 16009733,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
846,
847,
848,
849,
850
]
},
{
"tb": 320,
"tbk": 5,
"tl": 889,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
53,
54,
55,
845,
537
]
},
{
"tb": 13248,
"tbk": 24,
"tl": 6013,
"mb": 3864,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
651,
652,
653,
851,
852,
853
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2617024,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
854,
855,
856,
857,
858,
859,
860,
861
]
},
{
"tb": 576,
"tbk": 2,
"tl": 6826,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
862,
863,
864,
865,
88
]
},
{
"tb": 33554432,
"tbk": 524288,
"tl": 29039801,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
866,
867,
868,
869,
870,
871,
872,
873,
874
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 6712,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
817,
875,
876,
877,
878
]
},
{
"tb": 5242880,
"tbk": 5,
"tl": 2087004,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
89,
90,
91,
174,
175,
176,
879
]
},
{
"tb": 264,
"tbk": 6,
"tl": 19808652,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
880,
881,
882,
883,
884,
885,
886,
887,
888
]
},
{
"tb": 15744,
"tbk": 4,
"tl": 605,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
89,
90,
91,
174,
843,
889,
658
]
},
{
"tb": 3840,
"tbk": 16,
"tl": 2402,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
53,
54,
55,
890,
891
]
},
{
"tb": 52428800,
"tbk": 50,
"tl": 593291041,
"mb": 52428800,
"mbk": 50,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
36,
37,
38,
262,
263,
264,
892,
22,
23,
24,
499
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2011,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
102,
103,
104,
105,
353,
498,
396,
554
]
},
{
"tb": 25600,
"tbk": 1,
"tl": 3241,
"mb": 25600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
89,
90,
91,
92,
93,
893,
95
]
},
{
"tb": 256,
"tbk": 4,
"tl": 128992,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
89,
90,
91,
174,
175,
176,
894
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1059077,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
491,
492,
493,
494,
495,
496,
895,
316,
17
]
},
{
"tb": 288,
"tbk": 2,
"tl": 42,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
30,
31,
32,
896,
154
]
},
{
"tb": 288,
"tbk": 2,
"tl": 3239,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
897,
898,
899,
900,
396
]
},
{
"tb": 2400,
"tbk": 12,
"tl": 205,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
282,
901,
902,
903,
904,
905,
906
]
},
{
"tb": 402653184,
"tbk": 6,
"tl": 12048301,
"mb": 67108864,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
296,
297,
298,
299,
300,
301,
907
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 4702,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
817,
875,
876,
877,
908
]
},
{
"tb": 240,
"tbk": 1,
"tl": 11872962,
"mb": 240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
909,
910,
911,
912,
913,
914,
915,
916,
917
]
},
{
"tb": 640,
"tbk": 5,
"tl": 1977,
"mb": 384,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
918,
919,
920,
921,
164
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 149893,
"mb": 1179648,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
89,
90,
91,
174,
922,
923,
201
]
},
{
"tb": 256,
"tbk": 1,
"tl": 11,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
282,
615,
616,
617,
618,
619,
620,
621,
924,
354,
17
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 1560799,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
45,
46,
47,
48,
198,
328,
329,
925
]
},
{
"tb": 3520,
"tbk": 18,
"tl": 82,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
491,
492,
493,
494,
495,
496,
497,
476,
259
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
126,
127,
128,
129,
130,
131,
132,
303,
805,
305
]
},
{
"tb": 80,
"tbk": 5,
"tl": 573,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
480,
614,
13,
14,
15,
16
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 1659833,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
45,
46,
47,
48,
198,
926,
927,
928
]
},
{
"tb": 3936,
"tbk": 4,
"tl": 22690,
"mb": 3936,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
45,
159,
160,
161,
162,
929,
52,
418
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1696,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
30,
31,
32,
930,
259
]
},
{
"tb": 224,
"tbk": 1,
"tl": 7801,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
931,
932,
933,
934,
418
]
},
{
"tb": 288,
"tbk": 2,
"tl": 6,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
30,
31,
32,
935,
157
]
},
{
"tb": 15744,
"tbk": 4,
"tl": 2368,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
643,
936,
937,
938,
939,
940,
941,
942,
943
]
},
{
"tb": 200,
"tbk": 1,
"tl": 50076469,
"mb": 200,
"mbk": 1,
"gb": 200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
944,
945,
946,
947,
948,
949,
950,
951,
952
]
},
{
"tb": 360,
"tbk": 15,
"tl": 340,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
953,
954,
955,
956,
957,
958,
959,
960,
961
]
},
{
"tb": 240,
"tbk": 5,
"tl": 3473319,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
340,
341,
342,
343,
962,
661,
662
]
},
{
"tb": 335544320,
"tbk": 2097152,
"tl": 19069995,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
36,
37,
38,
39,
40,
41,
963,
290,
291
]
},
{
"tb": 40,
"tbk": 5,
"tl": 2087132,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
60,
61,
62,
964,
965,
356,
17
]
},
{
"tb": 80,
"tbk": 1,
"tl": 1157178,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
419,
966,
967,
968,
969,
970,
971,
972,
973
]
},
{
"tb": 480,
"tbk": 4,
"tl": 10512,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
96,
97,
98,
99,
100,
974,
975
]
},
{
"tb": 3840,
"tbk": 5,
"tl": 18189,
"mb": 3840,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
976,
977,
978,
979,
980,
981,
982,
983
]
},
{
"tb": 240,
"tbk": 10,
"tl": 54203746,
"mb": 240,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
397,
398,
399,
400,
401,
402,
403,
404,
984,
985
]
},
{
"tb": 256,
"tbk": 1,
"tl": 638,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
60,
61,
62,
63,
64,
986,
987
]
},
{
"tb": 1605,
"tbk": 5,
"tl": 44562,
"mb": 1605,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
126,
127,
128,
129,
130,
131,
132,
133,
988,
680
]
},
{
"tb": 80,
"tbk": 5,
"tl": 27,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
480,
614,
989,
825,
17,
241
]
},
{
"tb": 40,
"tbk": 1,
"tl": 1754,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
990,
991,
992,
993,
994,
995,
996,
997
]
},
{
"tb": 480,
"tbk": 2,
"tl": 6791,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
998,
999,
1000,
1001,
1002,
1003,
1004,
1005,
1006
]
},
{
"tb": 144,
"tbk": 1,
"tl": 1059726,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
807,
1007,
1008,
1009,
1010,
1011,
1012,
1013,
316,
17
]
},
{
"tb": 2097152,
"tbk": 2,
"tl": 5230696,
"mb": 2097152,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
36,
37,
38,
39,
40,
41,
1014,
1015,
1016
]
},
{
"tb": 32,
"tbk": 1,
"tl": 5,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
725,
726,
727,
728,
729,
730,
731,
732,
1017
]
},
{
"tb": 183291,
"tbk": 10,
"tl": 9136,
"mb": 103900,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
817,
875,
876,
1018,
1019
]
},
{
"tb": 5280,
"tbk": 37,
"tl": 18679,
"mb": 5120,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
36,
37,
38,
262,
263,
264,
892,
22,
23,
24,
25
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 499,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
96,
97,
98,
99,
100,
1020,
164
]
},
{
"tb": 5242880,
"tbk": 5,
"tl": 1111977,
"mb": 5242880,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
296,
297,
298,
299,
300,
301,
1021
]
},
{
"tb": 1152,
"tbk": 2,
"tl": 8993,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
1022,
1023,
1024,
1025,
112
]
},
{
"tb": 20971680,
"tbk": 15,
"tl": 382044,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
89,
90,
91,
174,
843,
1026,
386
]
},
{
"tb": 23129,
"tbk": 4,
"tl": 35425,
"mb": 23129,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
126,
127,
128,
129,
130,
131,
132,
133,
1027,
135
]
},
{
"tb": 480,
"tbk": 4,
"tl": 6115,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
96,
97,
98,
99,
100,
974,
1028
]
},
{
"tb": 288,
"tbk": 1,
"tl": 31454,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
1029,
1030,
1031,
1032,
201
]
},
{
"tb": 480,
"tbk": 4,
"tl": 215,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
96,
97,
98,
99,
100,
1020,
476
]
},
{
"tb": 64,
"tbk": 1,
"tl": 8,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041
]
},
{
"tb": 6144,
"tbk": 32,
"tl": 12596,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
282,
432,
433,
434,
1042,
1043,
1044
]
},
{
"tb": 480,
"tbk": 4,
"tl": 209,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
96,
97,
98,
99,
100,
1020,
498
]
},
{
"tb": 480,
"tbk": 5,
"tl": 59,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
12,
989,
825,
17,
241,
242
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 4101,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
89,
90,
91,
92,
93,
1045,
137
]
},
{
"tb": 838860800,
"tbk": 2097152,
"tl": 10495205,
"mb": 640,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
36,
37,
38,
262,
263,
264,
265,
1046,
290
]
},
{
"tb": 1600,
"tbk": 10,
"tl": 16010931,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
1047,
1048,
1049,
1050,
406
]
},
{
"tb": 125952,
"tbk": 4,
"tl": 1615,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
296,
297,
298,
299,
300,
301,
1051
]
},
{
"tb": 16,
"tbk": 1,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
126,
127,
128,
129,
130,
131,
132,
754,
1052,
157
]
},
{
"tb": 192,
"tbk": 1,
"tl": 15530,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
502,
578,
579,
580,
581,
1053,
354,
17,
241
]
},
{
"tb": 80,
"tbk": 5,
"tl": 516,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
36,
37,
38,
262,
263,
264,
1054,
428,
429
]
},
{
"tb": 1600,
"tbk": 5,
"tl": 34003,
"mb": 1600,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
36,
37,
38,
262,
263,
264,
1055,
1056,
1057
]
},
{
"tb": 512,
"tbk": 1,
"tl": 29,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
89,
90,
91,
1058,
701,
88,
151
]
},
{
"tb": 160,
"tbk": 5,
"tl": 8006145,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1059,
1060,
1061,
1062,
1063,
1064,
1065,
1066,
43,
44
]
},
{
"tb": 384,
"tbk": 2,
"tl": 4256,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
1067,
1068,
1069,
1070,
95
]
},
{
"tb": 800,
"tbk": 5,
"tl": 12886,
"mb": 800,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
340,
341,
342,
343,
1071,
345,
346
]
},
{
"tb": 288,
"tbk": 2,
"tl": 3495294,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
30,
31,
32,
1072,
17
]
},
{
"tb": 240,
"tbk": 10,
"tl": 343,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
1073,
68,
69,
70,
71,
72
]
},
{
"tb": 160,
"tbk": 5,
"tl": 320914487,
"mb": 160,
"mbk": 5,
"gb": 160,
"gbk": 5,
"eb": 0,
"ebk": 0,
"fs": [
11,
555,
1074,
1075,
1076,
1077,
1078
]
},
{
"tb": 1600,
"tbk": 10,
"tl": 3659182,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
296,
297,
298,
299,
300,
301,
1079
]
},
{
"tb": 3520,
"tbk": 18,
"tl": 517,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
491,
492,
493,
494,
495,
496,
748,
64,
986
]
},
{
"tb": 6291456,
"tbk": 3,
"tl": 3180954,
"mb": 6291456,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
36,
37,
38,
262,
263,
264,
892,
22,
23,
24,
720
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1059715,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
36,
37,
38,
262,
263,
264,
1080,
1081,
1010,
1011,
1012
]
},
{
"tb": 6672,
"tbk": 42,
"tl": 888,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
491,
492,
493,
494,
495,
496,
748,
64,
65
]
},
{
"tb": 15744,
"tbk": 123,
"tl": 117,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
89,
90,
91,
92,
1082,
52,
418
]
},
{
"tb": 15744,
"tbk": 4,
"tl": 2966,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
643,
644,
645,
646,
1083,
165,
354,
17
]
},
{
"tb": 5440,
"tbk": 10,
"tl": 126,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1084,
1085,
1086,
1087,
1088,
1089
]
},
{
"tb": 72,
"tbk": 3,
"tl": 3179137,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
397,
398,
399,
400,
401,
402,
403,
404,
1081,
1010,
1011,
1012
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 1059696,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
36,
37,
38,
262,
263,
264,
892,
22,
23,
24,
315
]
},
{
"tb": 240,
"tbk": 5,
"tl": 37148,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
1090,
240,
17,
241,
242
]
},
{
"tb": 5395,
"tbk": 35,
"tl": 5811290,
"mb": 2720,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
817,
875,
876,
1018,
1091
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 4160,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
277,
278,
279,
280,
1092
]
},
{
"tb": 40,
"tbk": 1,
"tl": 1782,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
1093,
1094,
1095,
1096,
1097,
1098,
1099,
1100
]
},
{
"tb": 40,
"tbk": 1,
"tl": 21,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
1101,
1102,
1103,
1104,
1105,
1106,
1107,
1108
]
},
{
"tb": 80,
"tbk": 1,
"tl": 6132,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
89,
90,
91,
1109,
1110,
88,
151
]
},
{
"tb": 120,
"tbk": 1,
"tl": 12636083,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
18,
1111,
1112,
1113,
1114,
17,
241,
242
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 112206,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
36,
37,
38,
262,
263,
264,
265,
1115,
17
]
},
{
"tb": 16776960,
"tbk": 64,
"tl": 60137,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
53,
54,
55,
1116,
17
]
},
{
"tb": 13120,
"tbk": 32,
"tl": 96163,
"mb": 13120,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
45,
46,
47,
48,
49,
50,
107,
95
]
},
{
"tb": 80,
"tbk": 5,
"tl": 266,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
480,
481,
13,
149,
150,
88
]
},
{
"tb": 2736,
"tbk": 6,
"tl": 2527,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
513,
514,
515,
1117,
1118,
1119
]
},
{
"tb": 120,
"tbk": 1,
"tl": 686286,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1120,
1121,
1122,
1123,
1124,
1125,
1126,
1127,
1128
]
},
{
"tb": 80,
"tbk": 5,
"tl": 8,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
11,
480,
481,
989,
825,
17,
241
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 64180574,
"mb": 2097152,
"mbk": 1,
"gb": 2097152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
89,
90,
91,
174,
175,
1129,
1130
]
},
{
"tb": 2896,
"tbk": 12,
"tl": 1250,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
282,
615,
1131,
1132,
1133,
1134,
1135,
1136,
1137,
1138
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2003,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
45,
159,
160,
161,
162,
163,
498,
396
]
},
{
"tb": 96,
"tbk": 2,
"tl": 1640,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
96,
97,
98,
99,
100,
1139,
125
]
},
{
"tb": 65176,
"tbk": 38,
"tl": 48940,
"mb": 32640,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
817,
875,
876,
877,
1140
]
},
{
"tb": 512,
"tbk": 1,
"tl": 15,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
89,
90,
91,
174,
843,
1141,
701
]
},
{
"tb": 2808,
"tbk": 4,
"tl": 22134,
"mb": 2808,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
102,
103,
104,
105,
106,
51,
52,
418
]
},
{
"tb": 120,
"tbk": 1,
"tl": 12636089,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1142,
1143,
1144,
1145,
1146,
17,
241,
242
]
},
{
"tb": 80,
"tbk": 5,
"tl": 27101940,
"mb": 80,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
35,
36,
37,
38,
262,
263,
264,
1080,
467,
356
]
},
{
"tb": 160,
"tbk": 5,
"tl": 413,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1059,
1060,
1061,
1062,
1063,
1064,
1065,
1066,
43,
625
]
}
],
"ftbl": [
"[root]",
"0x58eb6f1944a9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x58eb6f26127c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f3d2557: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3d2557: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3d2557: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3d2557: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f48079d: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x58eb6f49c21c: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e84ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f31882a: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x58eb6f193937: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x58eb6f31a08f: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:60:9)",
"0x58eb6f3bb985: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:364:13)",
"0x58eb6f238670: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:40:22)",
"0x58eb6f5346e7: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:13)",
"0x58eb6f339b32: winter_prover::Prover::generate_proof (prover/src/lib.rs:403:21)",
"0x58eb6f356cd4: winter_prover::Prover::prove (prover/src/lib.rs:171:37)",
"0x58eb6f2599fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f414856: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f414856: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f414856: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x58eb6f4861f9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x58eb6f4861f9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x58eb6f4861f9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x58eb6f413067: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x58eb6f221a1e: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x58eb6f335656: winter_prover::Prover::generate_proof (prover/src/lib.rs:228:27)",
"0x58eb6f6fbb79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x58eb6f6fa319: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x58eb6f285972: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x58eb6f299a19: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x58eb6f46f402: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x58eb6f3bc239: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:536:13)",
"0x58eb6f21e428: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x58eb6f25d0ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f13a41c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f13a41c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f13a41c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x58eb6f13a93c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x58eb6f13a93c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x58eb6f13a93c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x58eb6f582983: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x58eb6f3bbc22: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:348:9)",
"0x58eb6f53463b: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:50:13)",
"0x58eb6f257a9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f415916: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f415916: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f415916: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3697e9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x58eb6f29af24: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x58eb6f24604d: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x58eb6f24d39c: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x58eb6f28c122: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x58eb6f2996b9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x58eb6f46dd91: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x58eb6f3c2bb8: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:510:13)",
"0x58eb6f2af9d9: winter_verifier::perform_verification (verifier/src/lib.rs:183:13)",
"0x58eb6f67d899: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x58eb6f5ea0aa: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f5c5656: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f5c5656: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f5c5656: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f29ed1c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x58eb6f4abb5e: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x58eb6f15553c: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x58eb6f389bf6: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x58eb6f4fe299: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x58eb6f3c65ae: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x58eb6f18489d: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x58eb6f3c5cce: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x58eb6f3c86c6: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x58eb6f3bb9ea: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:362:9)",
"0x58eb6f36581d: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x58eb6f337f26: winter_prover::Prover::generate_proof (prover/src/lib.rs:548:13)",
"0x58eb6f4d6dab: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x58eb6f4d57e1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x58eb6f2e94eb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x58eb6f2be79d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x58eb6f1870fc: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x58eb6f184911: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x58eb6f57ec0e: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x58eb6f57c104: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x58eb6f33838b: winter_prover::Prover::generate_proof (prover/src/lib.rs:561:9)",
"0x58eb6f291022: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x58eb6f2999e9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x58eb6f470842: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x58eb6f2b1673: winter_verifier::perform_verification (verifier/src/lib.rs:177:9)",
"0x58eb6f2b99d2: winter_verifier::verify (verifier/src/lib.rs:110:21)",
"0x58eb6f415736: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f415736: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f415736: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f138909: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x58eb6f5004cb: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x58eb6f4ee524: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x58eb6f15b583: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x58eb6f68f799: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x58eb6f68ab39: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x58eb6f5ed830: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x58eb6f5ef899: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x58eb6f5ca451: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x58eb6f3397ed: winter_prover::Prover::generate_proof (prover/src/lib.rs:439:13)",
"0x58eb6f25be8c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f415966: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f415966: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f415966: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f29ac9d: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x58eb6f4ee152: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x58eb6f16dfa8: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x58eb6f69b187: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x58eb6f699fed: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:357:24)",
"0x58eb6f694e53: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:174:32)",
"0x58eb6ef718fd: winterfell::main (examples/src/main.rs:80:24)",
"0x58eb6f401c51: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f401c51: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f401c51: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f401c51: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f49ff6b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f49aa96: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e753b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f16da47: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x58eb6f273622: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x58eb6f299839: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x58eb6f472252: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x58eb6f4e3db8: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x58eb6f36fbd9: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x58eb6f6fa5ca: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f6fbbbc: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f6fbbbc: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f6fbbbc: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x58eb6f6fc7fc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x58eb6f6fc7fc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x58eb6f6fc7fc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x58eb6f6f9e2c: <winter_utils::serde::byte_reader::SliceReader as winter_utils::serde::byte_reader::ByteReader>::read_vec (src/serde/byte_reader.rs:151:22)",
"0x58eb6f69adc4: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:361:22)",
"0x58eb6f69a3d6: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:146:27)",
"0x58eb6f4f6ca7: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x58eb6f18277b: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x58eb6f16e23c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x58eb6f68ae7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f5fb57c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f5fb57c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f5fb57c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x58eb6f5cbcc9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x58eb6f5cbcc9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x58eb6f5cbcc9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x58eb6f3bae3f: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x58eb6f4ca1f6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x58eb6f16ec48: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x58eb6f52eb4c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:63:9)",
"0x58eb6f2b1247: winter_verifier::perform_verification (verifier/src/lib.rs:223:43)",
"0x58eb6f118d99: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:118:9)",
"0x58eb6f2b013b: winter_verifier::perform_verification (verifier/src/lib.rs:263:61)",
"0x58eb6f4b0bd0: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x58eb6f2b0c0f: winter_verifier::perform_verification (verifier/src/lib.rs:308:25)",
"0x58eb6f4c98ce: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x58eb6f16f185: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x58eb6f2b9907: winter_verifier::verify (verifier/src/lib.rs:108:19)",
"0x58eb6f4b1848: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x58eb6f369f58: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f369f58: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f369f58: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x58eb6f484c17: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x58eb6f4a9698: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x58eb6f568274: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x58eb6f57b152: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x58eb6f3d0141: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3d0141: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3d0141: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3d0141: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f4a2f9b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f497346: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e588b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f3354e3: winter_prover::Prover::generate_proof (prover/src/lib.rs:209:39)",
"0x58eb6f1a1e7b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x58eb6f196393: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x58eb6f366018: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x58eb6f30b210: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:197:28)",
"0x58eb6f25b40c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f3eabc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3eabc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3eabc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3eabc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f4a0a9e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f49bc79: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e694e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f23877a: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:50:26)",
"0x58eb6f2594bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f40c4c8: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f40c4c8: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f40c4c8: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f40c4c8: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x58eb6f4a372e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f49a407: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f58317e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f3c6e5c: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x58eb6f319b27: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x58eb6f3178cd: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x58eb6f1a1fbb: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x58eb6f19f1f6: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x58eb6f56ec8f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x58eb6f57c1b2: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x58eb6f26151c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f407f17: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f407f17: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f407f17: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f407f17: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f4a1b2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f497147: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e6a9e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f335416: winter_prover::Prover::generate_proof (prover/src/lib.rs:205:38)",
"0x58eb6f3f9ee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3f9ee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3f9ee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3f9ee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f49fdde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f496c57: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e947e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f4fe994: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x58eb6f2587bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f405b27: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f405b27: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f405b27: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f405b27: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f47eb76: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x58eb6f498ba7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e7d6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f376d5b: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x58eb6f25eb1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f3e77cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3e77cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3e77cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3e77cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x58eb6f4a286e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f494947: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e5e8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f3c5bf6: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x58eb6f4c8835: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x58eb6f21e1d0: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x58eb6f4dc6ec: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x58eb6f337868: winter_prover::Prover::generate_proof (prover/src/lib.rs:514:9)",
"0x58eb6f1182b2: <examples::do_work::DoWorkExample<H> as examples::Example>::prove (src/do_work/mod.rs:108:9)",
"0x58eb6ef70d4d: winterfell::main (examples/src/main.rs:49:17)",
"0x58eb6f287c02: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x58eb6f298cc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x58eb6f472d48: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x58eb6f339bf6: winter_prover::Prover::generate_proof (prover/src/lib.rs:408:17)",
"0x58eb6f365833: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x58eb6f4fe9a3: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x58eb6f58282c: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x58eb6f372078: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x58eb6f10b61a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x58eb6f1c3e45: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x58eb6f25c90c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f415466: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f415466: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f415466: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f336051: winter_prover::Prover::generate_proof (prover/src/lib.rs:301:32)",
"0x58eb6f5866d0: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x58eb6f338bc5: winter_prover::Prover::generate_proof (prover/src/lib.rs:598:34)",
"0x58eb6f69f118: <winter_air::proof::context::Context as winter_utils::serde::Deserializable>::read_from (src/proof/context.rs:184:35)",
"0x58eb6f694bf7: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:27)",
"0x58eb6f485939: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x58eb6f485939: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x58eb6f485939: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x58eb6f413097: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x58eb6f16f27d: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x58eb6f3eb877: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3eb877: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3eb877: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3eb877: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f4a070e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f49c317: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e8ace: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f4b4532: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x58eb6f4adaf6: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x58eb6f2b0d3a: winter_verifier::perform_verification (verifier/src/lib.rs:316:28)",
"0x58eb6f6a7da0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x58eb6f6a35f9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x58eb6f6a25a1: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x58eb6f6a2eb0: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x58eb6f389a4e: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x58eb6f6a9739: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x58eb6f6b59cb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x58eb6f6b56a1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x58eb6f6b1c9b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x58eb6f6ac471: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x58eb6f6acaf7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x58eb6f6a772b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x58eb6f4bd26a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x58eb6f4ba903: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x58eb6f34b3dd: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:659:26)",
"0x58eb6f15b6f1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x58eb6ef719d5: winterfell::main (examples/src/main.rs:83:11)",
"0x58eb6f37311b: winter_prover::trace::commitment::build_segment_queries::{{closure}}::{{closure}} (src/trace/commitment.rs:162:42)",
"0x58eb6f1f1019: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x58eb6f6f96cc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x58eb6f6f7d9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x58eb6f6f8cf8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x58eb6f6f8cf8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x58eb6f6f5964: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x58eb6f6f5c13: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x58eb6f55b450: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x58eb6f36bdf4: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x58eb6f36bad6: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x58eb6f221a03: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x58eb6f52e7eb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:39:30)",
"0x58eb6f3d3317: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3d3317: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3d3317: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3d3317: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f4a106e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f49c587: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e547e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f310c6a: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x58eb6f30ed29: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x58eb6f336583: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:33)",
"0x58eb6f19747b: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x58eb6f3118b6: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x58eb6f31576c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x58eb6f3d3541: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3d3541: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3d3541: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3d3541: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f4a190b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f497276: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e745b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f16db0f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x58eb6f4a8e5d: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x58eb6f4ac406: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x58eb6f4ba940: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x58eb6f254b7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f3f6f11: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3f6f11: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3f6f11: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3f6f11: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f4a13db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f496d46: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e5acb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f379c0e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x58eb6f13a9f5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f13a9f5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f13a9f5: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x58eb6f484bf4: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x58eb6f158cb0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x58eb6f2b6869: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:214:32)",
"0x58eb6f0fb603: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x58eb6f6b5d2b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x58eb6f6b5751: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x58eb6f6b1adb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x58eb6f6ae76e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x58eb6f6b0220: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x58eb6f6af428: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x58eb6f4a96ff: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x58eb6f338a4f: winter_prover::Prover::generate_proof (prover/src/lib.rs:590:25)",
"0x58eb6f5354c0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:28)",
"0x58eb6f339bd3: winter_prover::Prover::generate_proof (prover/src/lib.rs:407:21)",
"0x58eb6f57ac96: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x58eb6f1692ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x58eb6f2b0810: winter_verifier::perform_verification (verifier/src/lib.rs:302:9)",
"0x58eb6f3bc2c9: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:534:17)",
"0x58eb6f56382c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x58eb6f36bb58: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x58eb6f4bf1ab: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x58eb6f4be696: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x58eb6f3534e4: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:691:36)",
"0x58eb6f3ec107: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3ec107: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3ec107: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3ec107: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f4a14fe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f49b4b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e886e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f3b1d8f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x58eb6f4b0693: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x58eb6f313f48: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x58eb6f25755c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f4011c7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f4011c7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f4011c7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f4011c7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f4a006e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f4952c7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f23342e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f33579f: winter_prover::Prover::generate_proof (prover/src/lib.rs:243:41)",
"0x58eb6f311be1: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x58eb6f30efbc: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x58eb6f314211: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x58eb6f4cabc2: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x58eb6f368240: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x58eb6f4debb1: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x58eb6f581cb7: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x58eb6f533a27: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:272:18)",
"0x58eb6f532297: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:166:30)",
"0x58eb6f57eab6: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x58eb6f36fa53: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x58eb6f379cb4: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x58eb6f25ce4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f13a2ec: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f13a2ec: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f13a2ec: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x58eb6f486f19: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x58eb6f486f19: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x58eb6f486f19: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x58eb6f4ff5d6: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x58eb6f23af72: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:169:36)",
"0x58eb6f238f30: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:54:17)",
"0x58eb6f3d8727: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3d8727: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3d8727: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3d8727: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f4a25de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f498507: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e8cfe: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f312277: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x58eb6f69a8d2: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:215:25)",
"0x58eb6f69515d: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:188:24)",
"0x58eb6f24d629: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x58eb6f16e60c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x58eb6f25c66c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f414e1c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f414e1c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f414e1c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x58eb6f485e79: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x58eb6f485e79: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x58eb6f485e79: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x58eb6f3376be: winter_prover::Prover::generate_proof (prover/src/lib.rs:500:39)",
"0x58eb6f18a23f: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x58eb6f18a307: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x58eb6f2b1156: winter_verifier::perform_verification (verifier/src/lib.rs:225:13)",
"0x58eb6f4ba872: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x58eb6f335c88: winter_prover::Prover::generate_proof (prover/src/lib.rs:268:13)",
"0x58eb6f6b5b7b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x58eb6f6b55f1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x58eb6f6b1bbb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x58eb6f6ab66d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x58eb6f6a6538: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x58eb6f6a4dd7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x58eb6f40d907: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f40d907: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f40d907: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f40d907: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f4a0fde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f49a627: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e593e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f118d54: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:112:30)",
"0x58eb6f3e2187: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3e2187: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3e2187: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3e2187: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f4a329e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f497e27: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e57ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f4b095b: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x58eb6f69d502: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x58eb6f69e179: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x58eb6f69fae2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x58eb6f695916: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:13)",
"0x58eb6f25b94c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f3cfae7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3cfae7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3cfae7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3cfae7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f4a153e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f49bd37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e7d4e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f357619: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces (src/do_work/prover.rs:30:9)",
"0x58eb6f53558d: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:33)",
"0x58eb6f3db777: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3db777: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3db777: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3db777: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f4a02de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f49c697: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e8b8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f389131: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x58eb6f586495: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x58eb6f55b103: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x58eb6f319d16: <examples::do_work::air::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (src/do_work/air.rs:13:9)",
"0x58eb6f2b9718: winter_verifier::verify (verifier/src/lib.rs:97:38)",
"0x58eb6f4d2e95: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x58eb6f31a12c: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:62:13)",
"0x58eb6f4c14a2: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x58eb6f4c0147: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x58eb6f34adf7: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:645:31)",
"0x58eb6f4c96fb: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x58eb6f27aca2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x58eb6f299539: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x58eb6f471b42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x58eb6f4a4ffc: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x58eb6f3c5d4a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x58eb6f5fb6ac: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f5fb6ac: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f5fb6ac: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x58eb6f5cc4a9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x58eb6f5cc4a9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x58eb6f5cc4a9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x58eb6f4a9a2c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x58eb6f36fb07: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x58eb6f30e7be: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x58eb6f30cf17: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x58eb6f14c5ac: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:293:57)",
"0x58eb6f69b709: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x58eb6f69c75c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f69f726: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f69f726: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f69f726: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f694d52: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:172:33)",
"0x58eb6f2357fb: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x58eb6f16de38: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x58eb6f1528e9: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:641:17)",
"0x58eb6f69e2bd: <winter_air::proof::commitments::Commitments as winter_utils::serde::Deserializable>::read_from (src/proof/commitments.rs:108:22)",
"0x58eb6f694bdc: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:167:27)",
"0x58eb6f4d66eb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x58eb6f4d5891: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x58eb6f2e8f4b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x58eb6f2d4d8f: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x58eb6f2e0711: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x58eb6f2dbcaa: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x58eb6f4dc312: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x58eb6f19887b: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:235:25)",
"0x58eb6f563a62: examples::do_work::prover::build_do_work_trace (src/do_work/prover.rs:65:5)",
"0x58eb6f357668: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces::{{closure}} (src/do_work/prover.rs:32:27)",
"0x58eb6f25a70a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f3ffba1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3ffba1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3ffba1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3ffba1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f4a2b3b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f49a0b6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e66cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f335c5d: winter_prover::Prover::generate_proof (prover/src/lib.rs:266:43)",
"0x58eb6f25683c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f415786: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f415786: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f415786: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f335f85: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:39)",
"0x58eb6f21f484: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x58eb6f30b723: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:200:34)",
"0x58eb6f0fab0a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x58eb6f1ce1bf: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x58eb6f3e3666: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3e3666: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3e3666: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3e3666: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x58eb6f49fb6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f4985dc: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f4a79be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f4a9edb: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x58eb6f56ecaa: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x58eb6f415556: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f415556: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f415556: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f4e3782: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x58eb6f338ace: winter_prover::Prover::generate_proof (prover/src/lib.rs:593:29)",
"0x58eb6f319e42: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::new (src/do_work/air.rs:35:23)",
"0x58eb6f2ba8d1: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:101:85)",
"0x58eb6f10b432: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x58eb6f227c0a: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:107:27)",
"0x58eb6f144bff: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x58eb6f2259a4: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:113:9)",
"0x58eb6f3d16b1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3d16b1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3d16b1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3d16b1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f49f71b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f498e16: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e823b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f15b409: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x58eb6f252c0c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f3f4b31: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3f4b31: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3f4b31: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3f4b31: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f4a20ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f4965a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e7e5b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f221967: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x58eb6f69c4bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f69f776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f69f776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f69f776: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f69a2b9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x58eb6f69a70b: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:211:22)",
"0x58eb6f484ebb: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f484ebb: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f484ebb: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f484ebb: <[V] as alloc::slice::Concat<T>>::concat (alloc/src/slice.rs:712:26)",
"0x58eb6f484cab: alloc::slice::<impl [T]>::concat (alloc/src/slice.rs:561:9)",
"0x58eb6f4bd527: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:228:37)",
"0x58eb6f3bae2a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x58eb6f699862: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:164:22)",
"0x58eb6f694e38: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:176:34)",
"0x58eb6f4dbea2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x58eb6f2359d0: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x58eb6f1a2303: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x58eb6f56ec25: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x58eb6f253bbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f3dc991: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3dc991: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3dc991: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3dc991: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f4a237b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f497ed6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e578b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f2afcd2: winter_verifier::perform_verification (verifier/src/lib.rs:212:41)",
"0x58eb6f3ec781: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3ec781: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3ec781: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3ec781: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f4a1dab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f496306: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e609b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f34ac73: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:634:36)",
"0x58eb6f31a0bd: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:61:13)",
"0x58eb6f6a78ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f6a3b6c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f6a3b6c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f6a3b6c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x58eb6f6a362c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x58eb6f6a362c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x58eb6f6a362c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x58eb6f3891a5: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x58eb6f3b973c: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x58eb6f2b0e15: winter_verifier::perform_verification (verifier/src/lib.rs:320:5)",
"0x58eb6f52e64a: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:25:25)",
"0x58eb6f3e9787: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3e9787: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3e9787: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3e9787: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f4a067e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f497807: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e971e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f19933a: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:132:32)",
"0x58eb6f25701c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f3e57f7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3e57f7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3e57f7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3e57f7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f4a1b7e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f49bf39: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e60ee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f335603: winter_prover::Prover::generate_proof (prover/src/lib.rs:217:20)",
"0x58eb6f261a5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f415b46: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f415b46: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f415b46: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f1a1d3b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x58eb6f560e2b: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x58eb6f4b776a: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x58eb6f0fec7a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x58eb6f4d5ccb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x58eb6f4d5471: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x58eb6f2e9f0b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x58eb6f2c3d31: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x58eb6f2c7477: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x58eb6f2bc1bb: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x58eb6f55b184: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x58eb6f38a010: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x58eb6f4dc810: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x58eb6f531fd0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:149:33)",
"0x58eb6f5359e0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:122:17)",
"0x58eb6f215436: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x58eb6f3ce7e7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3ce7e7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3ce7e7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3ce7e7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f4a273e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f4987f7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e932e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f30ad13: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:253:9)",
"0x58eb6f3da227: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3da227: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3da227: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3da227: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f4a023e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f497d47: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e8bee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f38a10f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x58eb6f69e784: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:155:27)",
"0x58eb6f695178: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:29)",
"0x58eb6f250fee: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x58eb6f16e42b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x58eb6f365151: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x58eb6f37cdf3: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x58eb6f4f28e0: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x58eb6f58665e: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x58eb6f16ecae: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x58eb6f310db1: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x58eb6f1004aa: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x58eb6f540a05: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x58eb6f3fef40: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3fef40: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3fef40: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3fef40: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x58eb6f4a114b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f4988a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e527b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f4f6bca: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x58eb6f4b0bf3: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x58eb6f4b41bf: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x58eb6f2b0cbe: winter_verifier::perform_verification (verifier/src/lib.rs:314:25)",
"0x58eb6f3e4f91: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3e4f91: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3e4f91: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3e4f91: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f49fedb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f499626: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e54ab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f34aba6: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:630:42)",
"0x58eb6f2b95a9: winter_verifier::verify (verifier/src/lib.rs:95:32)",
"0x58eb6f199511: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:132:51)",
"0x58eb6f0fba1a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x58eb6f53eda5: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x58eb6f25851c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f4ca2be: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f4ca2be: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f4ca2be: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x58eb6f484b77: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x58eb6f221c58: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x58eb6f30ec8c: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x58eb6f6ab6cd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x58eb6f6a684b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x58eb6f6a4f13: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x58eb6f389214: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x58eb6f259f3a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f3cb15e: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3cb15e: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3cb15e: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3cb15e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x58eb6f4a121e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f496957: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f52d76e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f4dbf64: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:142:33)",
"0x58eb6f339808: winter_prover::Prover::generate_proof (prover/src/lib.rs:440:13)",
"0x58eb6f373199: winter_prover::trace::commitment::build_segment_queries::{{closure}}::{{closure}} (src/trace/commitment.rs:164:27)",
"0x58eb6f371736: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:159:13)",
"0x58eb6f56495b: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x58eb6f36b9cc: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x58eb6f4e3c60: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x58eb6f3e9ee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3e9ee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3e9ee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3e9ee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f479bcf: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x58eb6f497849: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e6e5e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f2b9784: winter_verifier::verify (verifier/src/lib.rs:101:24)",
"0x58eb6f29ef79: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x58eb6f313ca7: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x58eb6f2885e2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x58eb6f299209: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x58eb6f4730e2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x58eb6f16f49b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x58eb6f6f5d9e: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x58eb6f36c01f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x58eb6f223f5f: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x58eb6f4bfc77: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x58eb6f4b7c8c: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x58eb6f4be7bc: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x58eb6f4f942f: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x58eb6f4f9504: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x58eb6f379c1d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x58eb6f3f3f37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3f3f37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3f3f37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3f3f37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f4a32be: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f49c2d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e64de: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f30b2c4: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:198:23)",
"0x58eb6f245d7b: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x58eb6f14bb09: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:211:31)",
"0x58eb6f102d3a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x58eb6f1f30a8: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x58eb6f0cc3ba: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x58eb6f0ec63a: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x58eb6f699a1e: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:168:21)",
"0x58eb6f56401d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x58eb6f3d4197: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3d4197: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3d4197: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3d4197: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f4a2f6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f494599: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e7c6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f4b5e47: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x58eb6f6a36b6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x58eb6f389b2b: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x58eb6f3fb2f0: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3fb2f0: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3fb2f0: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3fb2f0: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x58eb6f49f5bb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f49ada6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e6dbb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f4ee075: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x58eb6f37ba92: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x58eb6f1524c6: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:493:32)",
"0x58eb6f10809a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x58eb6f1d52a2: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x58eb6f0d3c9b: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x58eb6f0f0906: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x58eb6f3bc08d: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:540:13)",
"0x58eb6f699ec9: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:352:21)",
"0x58eb6f36bb12: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x58eb6f2a0191: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x58eb6f260a9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f3fa111: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3fa111: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3fa111: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3fa111: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f49f9fb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f498cc6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e786b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f237a5c: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:82:9)",
"0x58eb6f699d02: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:348:22)",
"0x58eb6f6faab0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x58eb6f6fad18: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x58eb6f6fc00a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x58eb6f6fc00a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x58eb6f6fbdae: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x58eb6f6fbdae: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x58eb6f6fbe9d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x58eb6f19b598: winter_prover::trace::Trace::validate (src/trace/mod.rs:177:13)",
"0x58eb6f339f21: winter_prover::Prover::generate_proof (prover/src/lib.rs:370:17)",
"0x58eb6f3f59d1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3f59d1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3f59d1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3f59d1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f4a1cfb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f49a026: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e864b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f16dc9f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x58eb6f25edbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f3cd3c1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3cd3c1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3cd3c1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3cd3c1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f4a29db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f495d06: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e7eab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f2afd9f: winter_verifier::perform_verification (verifier/src/lib.rs:216:40)",
"0x58eb6f195f42: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x58eb6f4b0853: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x58eb6f3c2c93: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:505:13)",
"0x58eb6f26c982: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x58eb6f298c39: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x58eb6f471a51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x58eb6f3116c9: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x58eb6f21530d: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x58eb6f2e2451: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x58eb6f2e877d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x58eb6f2dc10e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x58eb6f4089a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f4089a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f4089a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f4089a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f4a33de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f49a4c9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e8ede: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f1955e0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x58eb6f27a7b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x58eb6f298d89: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x58eb6f46ef32: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x58eb6f2b148c: winter_verifier::perform_verification (verifier/src/lib.rs:182:9)",
"0x58eb6f25f2fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f3dc135: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3dc135: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3dc135: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3dc135: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x58eb6f4a010e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f495737: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e5cce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f4bd1b0: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:218:46)",
"0x58eb6f6face9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x58eb6f6fbf12: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x58eb6f29c564: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x58eb6f4e3a51: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x58eb6f31583e: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x58eb6f255dbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f3f9127: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3f9127: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3f9127: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3f9127: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f4a001e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f4966b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e8fae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f4b6e38: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x58eb6f55b3fb: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x58eb6f37fa48: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x58eb6f389dda: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x58eb6f414bc3: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x58eb6f4edd42: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x58eb6f4f951a: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x58eb6f30ed84: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x58eb6f4b189e: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x58eb6f287712: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x58eb6f299149: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x58eb6f470122: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x58eb6f36fc91: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x58eb6f6b581b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x58eb6f6b5541: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x58eb6f6b1d7b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x58eb6f6ac3a1: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x58eb6f6acb37: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x58eb6f6a76db: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x58eb6f560e40: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x58eb6f4f29fc: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x58eb6f25391c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f3dddc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3dddc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3dddc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3dddc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f47f6b3: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x58eb6f494bc9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e701e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f335f62: winter_prover::Prover::generate_proof (prover/src/lib.rs:291:36)",
"0x58eb6f27d912: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x58eb6f299119: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x58eb6f46e94f: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x58eb6f4a9d8a: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x58eb6f4f95d7: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x58eb6f56ee0b: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x58eb6f57ac77: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x58eb6f4b8866: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x58eb6f4b87a5: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x58eb6f3538e7: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:706:26)",
"0x58eb6f337110: winter_prover::Prover::generate_proof (prover/src/lib.rs:472:37)",
"0x58eb6f245d36: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x58eb6f5866eb: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x58eb6f286842: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x58eb6f299419: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x58eb6f46eba2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x58eb6f24d57e: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x58eb6f16f3ef: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x58eb6f3d09a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3d09a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3d09a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3d09a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f4a271e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f495517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e737e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f389f51: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x58eb6f261f9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f3dfd37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3dfd37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3dfd37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3dfd37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f4a126e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f4946a7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e6dde: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f34ad43: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:638:34)",
"0x58eb6f253e5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f3ff771: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3ff771: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3ff771: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3ff771: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f4a00cb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f4999c6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e60cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f310e5a: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x58eb6f531f6c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:148:31)",
"0x58eb6f4bd3df: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:226:50)",
"0x58eb6f3157d0: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x58eb6f535819: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:129:9)",
"0x58eb6f3cac21: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3cac21: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3cac21: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3cac21: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f4a13ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f494ac6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e901b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f3376a3: winter_prover::Prover::generate_proof (prover/src/lib.rs:495:52)",
"0x58eb6f36c4f8: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x58eb6f21c499: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x58eb6f3d65b7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3d65b7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3d65b7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3d65b7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f49fb0e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f497a37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e72be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f36fc76: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x58eb6f237bd9: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:82:31)",
"0x58eb6f10d553: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x58eb6f169d3c: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x58eb6f2b098e: winter_verifier::perform_verification (verifier/src/lib.rs:303:42)",
"0x58eb6f69e5bd: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:151:28)",
"0x58eb6f19b0ab: winter_prover::trace::Trace::validate (src/trace/mod.rs:122:26)",
"0x58eb6f3d5911: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3d5911: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3d5911: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3d5911: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f4a0f1b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f49c516: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e620b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f16dbd7: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x58eb6f2572bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f40fffe: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f40fffe: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f40fffe: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f40fffe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x58eb6f4a143b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f498b76: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f53a10b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f16701c: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x58eb6f4ff0c6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f4ff0c6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f4ff0c6: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x58eb6f486039: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x58eb6f486039: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x58eb6f486039: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x58eb6f30eca3: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x58eb6f1959cb: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x58eb6f10232c: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x58eb6f36b954: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x58eb6f4b0755: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:144:35)",
"0x58eb6f6fad49: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x58eb6f6a0d7a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x58eb6f4a9f53: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x58eb6f4dc2ef: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x58eb6f69d012: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x58eb6f69e1a9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x58eb6f69f878: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x58eb6f695c1a: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:13)",
"0x58eb6f311d04: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x58eb6f69af46: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:365:21)",
"0x58eb6f2b06c1: winter_verifier::perform_verification (verifier/src/lib.rs:295:27)",
"0x58eb6f290152: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x58eb6f299389: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x58eb6f471ff2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x58eb6f56ef89: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x58eb6f082149: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x58eb6f080c19: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x58eb6f07f030: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x58eb6f07f298: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x58eb6f07eb5a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x58eb6f07eb5a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x58eb6ef736a1: alloc::string::String::reserve (alloc/src/string.rs:1152:9)",
"0x58eb6ef736a1: <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend (alloc/src/string.rs:2173:14)",
"0x58eb6ef7377c: <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter (alloc/src/string.rs:2093:9)",
"0x58eb6f6ae87e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x58eb6f6afc4c: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x58eb6f6aed8a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x58eb6f4f6a9a: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x58eb6f4bd476: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:228:38)",
"0x58eb6f271392: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x58eb6f298a59: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x58eb6f46db42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x58eb6f23b0d9: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:174:17)",
"0x58eb6f55b08f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x58eb6f16d7d0: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x58eb6f57abcd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x58eb6f18a22a: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x58eb6f183e22: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x58eb6f2195c4: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x58eb6f539d04: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x58eb6f4b41a4: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x58eb6f2562fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f55d776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f55d776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f55d776: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x58eb6f4863b9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x58eb6f4863b9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x58eb6f4863b9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x58eb6f582846: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x58eb6f295f22: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x58eb6f298fc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x58eb6f472aaf: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x58eb6f4ee5d9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x58eb6f158c8d: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x58eb6f3397ad: winter_prover::Prover::generate_proof (prover/src/lib.rs:438:13)",
"0x58eb6f4fe41a: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x58eb6f151bb0: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:221:17)",
"0x58eb6f0fc922: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x58eb6f52b4dd: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::SpecFold>::spec_fold (iter/adapters/zip.rs:685:25)",
"0x58eb6f517ee7: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::fold (iter/adapters/zip.rs:249:9)",
"0x58eb6f5029b7: <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/zip.rs:103:9)",
"0x58eb6f56400c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x58eb6f4ff5ed: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x58eb6f4ff440: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x58eb6f245f3a: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x58eb6f56835d: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x58eb6f4d602b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x58eb6f4d5681: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x58eb6f2e912b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x58eb6f2be8bd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x58eb6f187f89: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x58eb6f363a00: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x58eb6f4dc580: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x58eb6f4c86ed: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x58eb6f57ae9d: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x58eb6f407451: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f407451: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f407451: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f407451: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f4a07db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f495136: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e665b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f16d97f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x58eb6f400637: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f400637: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f400637: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f400637: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f4a3ade: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f49c4b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e6d0e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f335e32: winter_prover::Prover::generate_proof (prover/src/lib.rs:286:23)",
"0x58eb6f3b5d61: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x58eb6f2b033e: winter_verifier::perform_verification (verifier/src/lib.rs:272:24)",
"0x58eb6f415cd6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f415cd6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f415cd6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f33600d: winter_prover::Prover::generate_proof (prover/src/lib.rs:300:37)",
"0x58eb6f336c77: winter_prover::Prover::generate_proof (prover/src/lib.rs:442:35)",
"0x58eb6f339665: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:17)",
"0x58eb6f2be9dd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x58eb6f18783f: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x58eb6f3636c3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x58eb6f26223c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f3ff977: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f3ff977: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f3ff977: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f3ff977: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x58eb6f4a065e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f494517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f0e560e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f3375d6: winter_prover::Prover::generate_proof (prover/src/lib.rs:491:51)",
"0x58eb6f37ceb0: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x58eb6f3358ba: winter_prover::Prover::generate_proof (prover/src/lib.rs:257:22)",
"0x58eb6f6a81a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f6a81a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f6a81a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f6a81a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x58eb6f6a85ee: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x58eb6f6a85b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x58eb6f6a984e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x58eb6f6a7299: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x58eb6f4e410a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x58eb6f241175: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x58eb6f4b43d9: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x58eb6f2617bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x58eb6f415876: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x58eb6f415876: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x58eb6f415876: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x58eb6f335fc9: winter_prover::Prover::generate_proof (prover/src/lib.rs:299:44)"
]
}