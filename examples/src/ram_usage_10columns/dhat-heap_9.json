{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell do-work -n 9 -l 65536",
"pid": 22530,
"tg": 95362469,
"te": 116335169,
"pps": [
{
"tb": 224,
"tbk": 1,
"tl": 9429,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7
]
},
{
"tb": 144,
"tbk": 9,
"tl": 1020,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
16,
17,
18
]
},
{
"tb": 648,
"tbk": 1,
"tl": 20856360,
"mb": 648,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
19,
20,
21,
22,
23,
24,
25,
26,
27
]
},
{
"tb": 288,
"tbk": 9,
"tl": 59962,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
29,
30,
31,
32,
33
]
},
{
"tb": 2880,
"tbk": 4,
"tl": 27704,
"mb": 2880,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
38,
39,
40,
7
]
},
{
"tb": 75497472,
"tbk": 36,
"tl": 320427188,
"mb": 75497472,
"mbk": 36,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
41,
42,
43,
44,
45,
46,
47
]
},
{
"tb": 4718592,
"tbk": 9,
"tl": 2628857,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
41,
42,
43,
44,
48,
49,
50
]
},
{
"tb": 83776,
"tbk": 1615,
"tl": 14226204,
"mb": 17216,
"mbk": 16,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
51,
52,
53,
54,
55,
56,
57
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 2367041,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
58,
59,
60,
61,
62,
63,
64,
65
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 2085733,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
66,
67,
68,
69,
70
]
},
{
"tb": 672,
"tbk": 3,
"tl": 996396,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
71,
72,
73,
74,
75
]
},
{
"tb": 288,
"tbk": 9,
"tl": 80956376,
"mb": 288,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
76,
77,
78,
79,
80,
81,
82
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3315807,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
83,
84,
85,
86,
87,
88,
89,
90,
91
]
},
{
"tb": 256,
"tbk": 1,
"tl": 15,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
92,
93,
31
]
},
{
"tb": 864,
"tbk": 18,
"tl": 161217331,
"mb": 864,
"mbk": 18,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
83,
94,
95,
96,
97,
98,
99,
100,
101
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 148605,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
41,
42,
43,
44,
102,
103,
104
]
},
{
"tb": 224,
"tbk": 3,
"tl": 1887,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
76,
77,
78,
79,
80,
105,
106
]
},
{
"tb": 144,
"tbk": 9,
"tl": 97930,
"mb": 144,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
107,
108,
109,
110,
111,
112,
113,
114,
115,
116
]
},
{
"tb": 2880,
"tbk": 9,
"tl": 105,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
41,
42,
43,
117,
118,
119,
120
]
},
{
"tb": 576,
"tbk": 9,
"tl": 1541,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
121,
122,
123,
124,
125
]
},
{
"tb": 17712,
"tbk": 18,
"tl": 491,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
126,
127,
128,
129,
130,
131
]
},
{
"tb": 288,
"tbk": 9,
"tl": 89,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
76,
132,
133,
134,
135,
136,
137,
138,
139,
140,
141
]
},
{
"tb": 72,
"tbk": 1,
"tl": 2139,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
142,
143,
144,
145,
146,
147,
148,
149,
150,
151
]
},
{
"tb": 160,
"tbk": 1,
"tl": 10430,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
58,
59,
60,
61,
152,
153,
154,
120
]
},
{
"tb": 671088640,
"tbk": 10,
"tl": 19805839,
"mb": 67108864,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
155,
156,
157,
158,
159,
160,
161
]
},
{
"tb": 672,
"tbk": 3,
"tl": 8060,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
71,
72,
73,
162,
30
]
},
{
"tb": 56,
"tbk": 1,
"tl": 3939,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
163,
164,
120,
165,
166
]
},
{
"tb": 1344,
"tbk": 3,
"tl": 8204,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
167,
168,
169,
170,
171
]
},
{
"tb": 432,
"tbk": 18,
"tl": 161912944,
"mb": 432,
"mbk": 18,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
172,
173,
174,
175,
176,
177,
178,
179,
180,
181
]
},
{
"tb": 2889,
"tbk": 9,
"tl": 97114,
"mb": 2889,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
107,
108,
109,
110,
111,
112,
113,
114,
182,
183
]
},
{
"tb": 288,
"tbk": 9,
"tl": 14243244,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
184,
185,
186,
187,
188,
189,
190,
191,
192,
193
]
},
{
"tb": 4000,
"tbk": 4,
"tl": 28322,
"mb": 4000,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
58,
194,
195,
196,
197,
198,
40,
7
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 4690,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
199,
200,
201,
202,
203
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 4718,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
58,
204,
205,
206,
207,
208,
209,
210,
211
]
},
{
"tb": 144,
"tbk": 9,
"tl": 704,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
155,
156,
157,
158,
159,
160,
212
]
},
{
"tb": 16000,
"tbk": 4,
"tl": 1765,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
155,
156,
157,
158,
159,
160,
213
]
},
{
"tb": 2880,
"tbk": 18,
"tl": 28484150,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
214,
215,
216,
217,
218
]
},
{
"tb": 216,
"tbk": 1,
"tl": 322,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
83,
219,
220,
221,
222,
223,
224,
225,
226
]
},
{
"tb": 13377,
"tbk": 1,
"tl": 10844,
"mb": 13377,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
107,
108,
109,
110,
111,
112,
113,
114,
227,
228
]
},
{
"tb": 4032,
"tbk": 27,
"tl": 62076,
"mb": 2304,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
121,
122,
123,
229,
230
]
},
{
"tb": 72,
"tbk": 1,
"tl": 10856,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
231,
232,
233,
234,
235,
236,
237
]
},
{
"tb": 72,
"tbk": 1,
"tl": 2124,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
142,
143,
238,
239,
240,
241,
242,
243,
244,
245
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
107,
108,
109,
110,
111,
112,
113,
246,
247,
248
]
},
{
"tb": 648,
"tbk": 27,
"tl": 614,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
249,
250,
251,
252,
253,
254,
255,
256,
257
]
},
{
"tb": 6912,
"tbk": 9,
"tl": 49531,
"mb": 6912,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
83,
258,
259,
260,
261,
262,
263,
264,
265
]
},
{
"tb": 2880,
"tbk": 24,
"tl": 2532,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
76,
77,
78,
79,
80,
266,
267
]
},
{
"tb": 512,
"tbk": 1,
"tl": 10,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
268,
269,
270,
271,
272,
273,
274,
275
]
},
{
"tb": 288,
"tbk": 9,
"tl": 805,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
184,
185,
186,
187,
188,
189,
190,
191,
192,
276
]
},
{
"tb": 2880,
"tbk": 9,
"tl": 73414,
"mb": 2880,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
277,
278,
279
]
},
{
"tb": 288,
"tbk": 9,
"tl": 985,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
280,
17,
18
]
},
{
"tb": 864,
"tbk": 9,
"tl": 152,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
281,
282,
283,
284,
171,
165
]
},
{
"tb": 144,
"tbk": 9,
"tl": 762,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
285,
286,
287,
288,
192,
276
]
},
{
"tb": 3690987520,
"tbk": 4194304,
"tl": 51623532,
"mb": 2720,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
289,
290,
291,
292,
293,
294,
295,
296
]
},
{
"tb": 96,
"tbk": 1,
"tl": 9425,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
71,
72,
73,
297,
7
]
},
{
"tb": 16000,
"tbk": 125,
"tl": 130,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
41,
42,
43,
117,
298,
40,
7
]
},
{
"tb": 18874368,
"tbk": 9,
"tl": 3704316,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
299,
300,
301,
302,
303,
304,
305,
306
]
},
{
"tb": 144,
"tbk": 9,
"tl": 1044776073,
"mb": 144,
"mbk": 9,
"gb": 144,
"gbk": 9,
"eb": 0,
"ebk": 0,
"fs": [
1,
107,
108,
109,
110,
111,
112,
113,
307,
308,
309
]
},
{
"tb": 432,
"tbk": 9,
"tl": 69217,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
310,
30,
31,
32,
33
]
},
{
"tb": 64,
"tbk": 1,
"tl": 6860,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
121,
122,
123,
311,
230
]
},
{
"tb": 603979776,
"tbk": 9,
"tl": 32709576,
"mb": 67108864,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
312,
313,
314,
315,
316,
317,
318,
319
]
},
{
"tb": 144,
"tbk": 9,
"tl": 14243177,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
285,
286,
287,
288,
192,
193
]
},
{
"tb": 896,
"tbk": 3,
"tl": 5561,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
320,
321,
322,
323,
324
]
},
{
"tb": 40960,
"tbk": 256,
"tl": 1296,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
325,
326,
327
]
},
{
"tb": 24,
"tbk": 1,
"tl": 2085741,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
83,
328,
329,
330,
67,
68,
69,
70,
331,
31
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2307,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
58,
194,
195,
196,
197,
332,
333,
334
]
},
{
"tb": 512,
"tbk": 1,
"tl": 17,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
41,
42,
43,
44,
335,
336,
337
]
},
{
"tb": 1248,
"tbk": 12,
"tl": 347,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
338,
339,
340,
341,
342,
343,
344
]
},
{
"tb": 72,
"tbk": 1,
"tl": 92586721,
"mb": 72,
"mbk": 1,
"gb": 72,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
345,
346,
347,
348,
349,
350,
351,
352,
353
]
},
{
"tb": 72,
"tbk": 3,
"tl": 6257253,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
172,
173,
174,
175,
176,
177,
178,
179,
354,
355,
356,
357
]
},
{
"tb": 134217728,
"tbk": 1,
"tl": 59653827,
"mb": 134217728,
"mbk": 1,
"gb": 134217728,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
358,
359,
360
]
},
{
"tb": 13344,
"tbk": 32,
"tl": 128458,
"mb": 13344,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
58,
59,
60,
61,
152,
361,
362,
324
]
},
{
"tb": 672,
"tbk": 3,
"tl": 4821,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
363,
364,
365,
366,
334
]
},
{
"tb": 72,
"tbk": 1,
"tl": 15890,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
367,
368,
31,
32,
33
]
},
{
"tb": 46080,
"tbk": 1,
"tl": 11725,
"mb": 46080,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
107,
369,
370,
371,
372,
106,
334,
368
]
},
{
"tb": 192,
"tbk": 1,
"tl": 21999,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
231,
373,
374,
375,
376,
377,
93,
31,
32
]
},
{
"tb": 83886080,
"tbk": 524288,
"tl": 6473344,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
285,
286,
287,
378,
295,
296
]
},
{
"tb": 73880,
"tbk": 39,
"tl": 73040,
"mb": 36992,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
51,
379,
380,
381,
382
]
},
{
"tb": 72,
"tbk": 1,
"tl": 6150,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
383,
384,
385,
386,
387,
388,
389,
390,
391
]
},
{
"tb": 456,
"tbk": 10,
"tl": 34485868,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
392,
393,
394,
395,
396,
397,
398,
399,
400
]
},
{
"tb": 3019898880,
"tbk": 4194304,
"tl": 20759624,
"mb": 1280,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
325,
401,
295
]
},
{
"tb": 288,
"tbk": 1,
"tl": 36294,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
402,
403,
404,
405,
406
]
},
{
"tb": 2160,
"tbk": 9,
"tl": 1045948261,
"mb": 2160,
"mbk": 9,
"gb": 2160,
"gbk": 9,
"eb": 0,
"ebk": 0,
"fs": [
8,
83,
407,
408,
409,
410,
411,
412,
413,
414
]
},
{
"tb": 144,
"tbk": 9,
"tl": 6168116,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
415,
416,
417,
418,
419,
420,
421
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2085070,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
142,
143,
422,
423,
424,
425,
426,
427,
428,
331,
31
]
},
{
"tb": 224,
"tbk": 3,
"tl": 4441904,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
76,
77,
78,
79,
80,
429,
31
]
},
{
"tb": 256,
"tbk": 1,
"tl": 13,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
338,
430,
431,
432,
433,
434,
435,
436,
437,
93,
31
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 578,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
76,
77,
78,
79,
80,
438,
439
]
},
{
"tb": 6680,
"tbk": 42,
"tl": 167,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
142,
143,
422,
423,
424,
425,
426,
427,
440,
439,
441
]
},
{
"tb": 46080,
"tbk": 1,
"tl": 4369,
"mb": 46080,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
41,
42,
43,
117,
442,
443,
324
]
},
{
"tb": 576,
"tbk": 9,
"tl": 74201,
"mb": 576,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
121,
122,
123,
124,
444
]
},
{
"tb": 1120,
"tbk": 3,
"tl": 8139,
"mb": 640,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
445,
446,
447,
448,
449,
450,
451,
452,
453
]
},
{
"tb": 4608,
"tbk": 9,
"tl": 2689,
"mb": 4608,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
41,
42,
43,
454,
455,
171,
165
]
},
{
"tb": 512,
"tbk": 1,
"tl": 18,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
41,
42,
43,
456,
337,
171,
165
]
},
{
"tb": 1000,
"tbk": 4,
"tl": 4408,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
338,
430,
431,
432,
433,
434,
435,
436,
457,
458,
459
]
},
{
"tb": 432,
"tbk": 9,
"tl": 9281567,
"mb": 432,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
460,
461,
462,
463,
464,
465
]
},
{
"tb": 2160,
"tbk": 9,
"tl": 179804598,
"mb": 2160,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
83,
328,
329,
330,
67,
68,
69,
466,
467,
468
]
},
{
"tb": 256,
"tbk": 1,
"tl": 10708,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
107,
108,
109,
110,
111,
112,
113,
114,
469,
470
]
},
{
"tb": 2736,
"tbk": 6,
"tl": 2728,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
471,
472,
473,
474,
475,
476
]
},
{
"tb": 16000,
"tbk": 4,
"tl": 664,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
41,
42,
43,
44,
335,
477,
478
]
},
{
"tb": 37749024,
"tbk": 27,
"tl": 724867,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
41,
42,
43,
44,
335,
479,
480
]
},
{
"tb": 3576,
"tbk": 18,
"tl": 547,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
142,
143,
422,
423,
424,
425,
426,
427,
481,
267,
482
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 58697,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
285,
286,
287,
483,
484,
31
]
},
{
"tb": 288,
"tbk": 9,
"tl": 1044723035,
"mb": 288,
"mbk": 9,
"gb": 288,
"gbk": 9,
"eb": 0,
"ebk": 0,
"fs": [
28,
485,
486,
487,
488,
489,
490
]
},
{
"tb": 9792,
"tbk": 18,
"tl": 219,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
491,
492,
493,
494,
495,
496
]
},
{
"tb": 18874368,
"tbk": 1179648,
"tl": 796920,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
497,
498,
499
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 20958309,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
58,
59,
60,
61,
62,
500,
501,
502
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 168023,
"mb": 1179648,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
41,
42,
43,
44,
503,
504,
406
]
},
{
"tb": 720,
"tbk": 9,
"tl": 14240874,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
505,
506,
507,
508,
509,
510,
511,
512,
513
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
514,
515,
248,
516,
31,
32
]
},
{
"tb": 224,
"tbk": 1,
"tl": 10858,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
107,
108,
109,
110,
111,
112,
113,
114,
517,
518
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2242,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
519,
520,
484,
31
]
},
{
"tb": 16000,
"tbk": 4,
"tl": 2585,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
312,
521,
522,
523,
524,
525,
526,
527,
528
]
},
{
"tb": 24,
"tbk": 1,
"tl": 10841,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
529,
530,
228,
237
]
},
{
"tb": 4608,
"tbk": 9,
"tl": 2751,
"mb": 4608,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
41,
42,
43,
531,
455,
171,
165
]
},
{
"tb": 216,
"tbk": 9,
"tl": 14243310,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
532,
533,
192,
193,
534,
31
]
},
{
"tb": 672,
"tbk": 3,
"tl": 11585,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
535,
536,
537,
538,
106
]
},
{
"tb": 288,
"tbk": 18,
"tl": 14244341,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
539,
540,
541,
542,
543,
544,
545,
546
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1361,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
285,
286,
287,
547,
459,
548
]
},
{
"tb": 216,
"tbk": 1,
"tl": 20825883,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
549,
550,
551,
552,
553,
31,
32,
33
]
},
{
"tb": 672,
"tbk": 3,
"tl": 4442846,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
71,
72,
73,
554,
31
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1835,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
71,
72,
73,
555,
484
]
},
{
"tb": 16000,
"tbk": 4,
"tl": 575,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
155,
156,
157,
158,
159,
160,
556
]
},
{
"tb": 432,
"tbk": 18,
"tl": 28484237,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
172,
173,
174,
175,
176,
177,
178,
179,
557,
218
]
},
{
"tb": 672,
"tbk": 3,
"tl": 50,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
71,
72,
73,
558,
455
]
},
{
"tb": 33553920,
"tbk": 128,
"tl": 145988,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
121,
122,
123,
559,
31
]
},
{
"tb": 9437184,
"tbk": 9,
"tl": 3511124,
"mb": 9437184,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
155,
156,
157,
158,
159,
160,
560
]
},
{
"tb": 1152,
"tbk": 18,
"tl": 28482031,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
561,
562,
563,
564,
565
]
},
{
"tb": 5184,
"tbk": 18,
"tl": 407,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
566,
567,
568,
569,
570,
571,
572,
573,
574
]
},
{
"tb": 72,
"tbk": 1,
"tl": 428,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
142,
143,
575,
576,
577,
578,
579,
580,
581,
582
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
107,
108,
109,
110,
111,
112,
113,
246,
247,
583
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 10837,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
107,
108,
109,
110,
111,
112,
113,
114,
584,
585
]
},
{
"tb": 1944,
"tbk": 1,
"tl": 116080400,
"mb": 1944,
"mbk": 1,
"gb": 1944,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
586,
587,
588,
589,
590,
591,
592,
593,
594
]
},
{
"tb": 144,
"tbk": 9,
"tl": 16,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
595,
596,
597,
598,
31,
32
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 2261740,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
58,
59,
60,
61,
62,
500,
501,
599
]
},
{
"tb": 72,
"tbk": 1,
"tl": 23,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
142,
143,
600,
601,
602,
603,
604,
605,
606,
607
]
},
{
"tb": 576,
"tbk": 9,
"tl": 1480,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
121,
122,
123,
608,
125
]
},
{
"tb": 864,
"tbk": 9,
"tl": 131,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
609,
610,
611,
612,
613,
614,
615,
616,
617
]
},
{
"tb": 3576,
"tbk": 18,
"tl": 560,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
142,
143,
422,
423,
424,
425,
426,
427,
481,
267,
618
]
},
{
"tb": 6680,
"tbk": 42,
"tl": 973,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
142,
143,
422,
423,
424,
425,
426,
427,
481,
267,
619
]
},
{
"tb": 2944,
"tbk": 12,
"tl": 1352,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
338,
430,
620,
621,
622,
623,
624,
625,
626,
627
]
},
{
"tb": 16,
"tbk": 1,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
107,
108,
109,
110,
111,
112,
113,
307,
628,
120
]
},
{
"tb": 256,
"tbk": 1,
"tl": 691,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
142,
143,
629,
630,
631,
632,
267,
482,
633
]
},
{
"tb": 2880,
"tbk": 9,
"tl": 75936,
"mb": 2880,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
325,
634,
120
]
},
{
"tb": 1440,
"tbk": 9,
"tl": 31353,
"mb": 1440,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
415,
416,
417,
418,
635,
636,
637
]
},
{
"tb": 512,
"tbk": 1,
"tl": 39,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
638,
455,
171
]
},
{
"tb": 9437184,
"tbk": 9,
"tl": 694840,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
41,
42,
43,
44,
48,
49,
639
]
},
{
"tb": 432,
"tbk": 9,
"tl": 6168162,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
415,
416,
417,
418,
640,
420,
421
]
},
{
"tb": 18874368,
"tbk": 9,
"tl": 49016245,
"mb": 18874368,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
155,
156,
157,
158,
159,
160,
641
]
},
{
"tb": 672,
"tbk": 3,
"tl": 46,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
71,
72,
73,
642,
455
]
},
{
"tb": 360,
"tbk": 1,
"tl": 92586770,
"mb": 360,
"mbk": 1,
"gb": 360,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
643,
644,
645,
646,
647,
648,
649,
650,
651
]
},
{
"tb": 9711,
"tbk": 63,
"tl": 14172389,
"mb": 4896,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
51,
379,
380,
652,
653
]
},
{
"tb": 432,
"tbk": 18,
"tl": 950,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
654,
655,
656,
657,
658,
659
]
},
{
"tb": 64,
"tbk": 1,
"tl": 7945,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
660,
661,
662,
663,
664,
665,
666,
667,
668
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4539,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
41,
42,
43,
669,
670,
171,
165
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 8221,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
51,
379,
380,
381,
671
]
},
{
"tb": 288,
"tbk": 1,
"tl": 150,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
672,
673,
674,
675,
676,
677,
678,
679,
680
]
},
{
"tb": 288,
"tbk": 9,
"tl": 5,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
681,
682,
165,
166
]
},
{
"tb": 432,
"tbk": 18,
"tl": 612,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
683,
655,
656,
657,
658,
659
]
},
{
"tb": 10368,
"tbk": 36,
"tl": 1249,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
684,
685,
686,
687,
688
]
},
{
"tb": 480,
"tbk": 4,
"tl": 220,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
76,
77,
78,
79,
80,
438,
333
]
},
{
"tb": 3536,
"tbk": 34,
"tl": 540,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
338,
339,
340,
341,
689,
690,
691
]
},
{
"tb": 216,
"tbk": 9,
"tl": 80956618,
"mb": 216,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
172,
173,
174,
175,
176,
177,
178,
179,
692,
693
]
},
{
"tb": 8640,
"tbk": 36,
"tl": 110,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
121,
122,
123,
694,
695
]
},
{
"tb": 3840,
"tbk": 16,
"tl": 2623,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
121,
122,
123,
696,
697
]
},
{
"tb": 128000,
"tbk": 4,
"tl": 1782,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
155,
156,
157,
158,
159,
160,
698
]
},
{
"tb": 144,
"tbk": 1,
"tl": 2085766,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
609,
699,
700,
701,
355,
356,
357,
702,
331,
31
]
},
{
"tb": 16000,
"tbk": 4,
"tl": 3393,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
312,
313,
314,
315,
703,
441,
93,
31
]
},
{
"tb": 864,
"tbk": 9,
"tl": 100,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
281,
597,
598,
31,
32,
33
]
},
{
"tb": 32,
"tbk": 1,
"tl": 10446,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
58,
59,
60,
61,
152,
704,
154,
120
]
},
{
"tb": 46080,
"tbk": 9,
"tl": 50607,
"mb": 46080,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
41,
42,
43,
117,
442,
705,
324
]
},
{
"tb": 16000,
"tbk": 4,
"tl": 42915,
"mb": 16000,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
107,
108,
109,
110,
111,
112,
113,
114,
706,
707
]
},
{
"tb": 46080,
"tbk": 9,
"tl": 104665,
"mb": 46080,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
107,
369,
370,
371,
708,
106,
334,
368
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 50,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
41,
42,
43,
44,
48,
49,
709
]
},
{
"tb": 1207959552,
"tbk": 9,
"tl": 856834720,
"mb": 1207959552,
"mbk": 9,
"gb": 1207959552,
"gbk": 9,
"eb": 0,
"ebk": 0,
"fs": [
8,
312,
313,
314,
315,
316,
710,
711,
712
]
},
{
"tb": 144,
"tbk": 9,
"tl": 329526,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
415,
416,
417,
418,
713,
598,
31
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 363720,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
285,
286,
287,
714,
715,
31
]
},
{
"tb": 432,
"tbk": 1,
"tl": 3435,
"mb": 432,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
716,
717,
718,
719,
720,
721,
722,
723,
724
]
},
{
"tb": 512,
"tbk": 4,
"tl": 1459,
"mb": 384,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
725,
726,
727,
728,
439
]
},
{
"tb": 480,
"tbk": 4,
"tl": 13496,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
76,
77,
78,
79,
80,
729,
730
]
},
{
"tb": 3576,
"tbk": 18,
"tl": 79,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
142,
143,
422,
423,
424,
425,
426,
427,
440,
333,
334
]
},
{
"tb": 288,
"tbk": 1,
"tl": 173,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
672,
731,
732,
733,
734,
735,
736,
737,
738
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
514,
515,
583,
165,
166
]
},
{
"tb": 13344,
"tbk": 32,
"tl": 148500,
"mb": 13344,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
58,
59,
60,
61,
152,
361,
739,
740
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 208090,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
58,
59,
60,
61,
62,
500,
501,
741
]
},
{
"tb": 13377,
"tbk": 1,
"tl": 10832,
"mb": 13377,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
107,
108,
109,
110,
111,
112,
113,
114,
742,
585
]
},
{
"tb": 64,
"tbk": 1,
"tl": 8,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
660,
661,
662,
663,
664,
665,
666,
667,
743
]
},
{
"tb": 960,
"tbk": 4,
"tl": 1359,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
142,
143,
629,
630,
631,
632,
267,
619,
744
]
},
{
"tb": 72,
"tbk": 9,
"tl": 3737748,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
142,
143,
629,
630,
631,
745,
746,
693,
31
]
},
{
"tb": 144,
"tbk": 1,
"tl": 198,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
747,
748,
749,
750,
751,
752,
753,
754,
31,
32
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 80487412,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
58,
59,
60,
61,
62,
755,
296,
756
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 226251,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
58,
59,
60,
61,
62,
757,
758,
406
]
},
{
"tb": 192,
"tbk": 1,
"tl": 10750,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
231,
373,
374,
375,
376,
759,
760,
470,
237
]
},
{
"tb": 46080,
"tbk": 288,
"tl": 1562903,
"mb": 46080,
"mbk": 288,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
285,
286,
287,
761,
762,
763
]
},
{
"tb": 256,
"tbk": 4,
"tl": 145263,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
41,
42,
43,
44,
48,
49,
764
]
},
{
"tb": 3456,
"tbk": 12,
"tl": 4986,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
338,
765,
766,
767,
768,
769,
770
]
},
{
"tb": 2880,
"tbk": 18,
"tl": 6497893,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
155,
156,
157,
158,
159,
160,
771
]
},
{
"tb": 432,
"tbk": 1,
"tl": 116086106,
"mb": 432,
"mbk": 1,
"gb": 432,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
772,
773,
774,
775,
776,
777,
516,
31
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
107,
108,
109,
110,
111,
112,
113,
246,
778,
248
]
},
{
"tb": 94371840,
"tbk": 90,
"tl": 10459465567,
"mb": 94371840,
"mbk": 90,
"gb": 94371840,
"gbk": 90,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
41,
42,
43,
44,
779,
780,
781
]
},
{
"tb": 75497472,
"tbk": 9,
"tl": 32932163,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
41,
42,
43,
44,
782,
783,
784
]
},
{
"tb": 256,
"tbk": 1,
"tl": 13542,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
285,
286,
287,
785,
786,
787
]
},
{
"tb": 1344,
"tbk": 3,
"tl": 10750,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
788,
789,
790,
791,
237
]
},
{
"tb": 672,
"tbk": 3,
"tl": 9,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
71,
72,
73,
792,
120
]
},
{
"tb": 4000,
"tbk": 4,
"tl": 4326,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
58,
194,
195,
196,
197,
332,
439,
441
]
},
{
"tb": 144,
"tbk": 9,
"tl": 970,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
595,
596,
282,
793,
794,
534
]
},
{
"tb": 576,
"tbk": 4,
"tl": 1745,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
415,
416,
417,
418,
795,
478,
459
]
},
{
"tb": 72,
"tbk": 1,
"tl": 2156,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
142,
143,
796,
797,
798,
799,
800,
801,
802,
803
]
},
{
"tb": 144,
"tbk": 9,
"tl": 49,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
595,
804,
597,
598,
31,
32
]
},
{
"tb": 2880,
"tbk": 18,
"tl": 6497820,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
155,
156,
157,
158,
159,
160,
805
]
},
{
"tb": 4032,
"tbk": 27,
"tl": 8967928,
"mb": 2304,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
121,
122,
123,
229,
75
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 116080099,
"mb": 524288,
"mbk": 1,
"gb": 524288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
41,
42,
43,
44,
48,
806,
807
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2311,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
519,
333,
334,
368
]
},
{
"tb": 144,
"tbk": 9,
"tl": 80956587,
"mb": 144,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
808,
692,
693
]
},
{
"tb": 1944,
"tbk": 1,
"tl": 10588,
"mb": 1944,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
586,
809,
810,
811,
812,
813,
814,
815,
816
]
},
{
"tb": 144,
"tbk": 1,
"tl": 116080128,
"mb": 144,
"mbk": 1,
"gb": 144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
817,
818,
819,
820,
821,
822,
823,
824,
825
]
},
{
"tb": 216,
"tbk": 1,
"tl": 20825893,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
826,
827,
828,
829,
830,
31,
32,
33
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1368,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
338,
430,
431,
432,
433,
434,
435,
436,
831,
459,
548
]
},
{
"tb": 1120,
"tbk": 3,
"tl": 8344,
"mb": 640,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
832,
833,
834,
835,
120
]
},
{
"tb": 9437184,
"tbk": 9,
"tl": 687336,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
155,
156,
157,
158,
159,
160,
836
]
},
{
"tb": 13800,
"tbk": 25,
"tl": 6428,
"mb": 3864,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
837,
838,
839,
840,
841,
842
]
},
{
"tb": 216,
"tbk": 1,
"tl": 95244530,
"mb": 216,
"mbk": 1,
"gb": 216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
549,
843,
844,
845,
846,
847,
848,
849,
850
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 308585,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
325,
851,
30
]
},
{
"tb": 256,
"tbk": 1,
"tl": 686,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
142,
143,
629,
630,
631,
632,
267,
618,
852
]
},
{
"tb": 672,
"tbk": 3,
"tl": 8300,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
853,
854,
855,
856,
171
]
},
{
"tb": 64,
"tbk": 1,
"tl": 4,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
857,
858,
859,
860,
861,
862,
863,
864,
865
]
},
{
"tb": 72,
"tbk": 1,
"tl": 2146,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
142,
143,
866,
867,
868,
869,
870,
871,
872,
873
]
},
{
"tb": 100320,
"tbk": 220,
"tl": 63930,
"mb": 25992,
"mbk": 57,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
471,
472,
473,
874,
875,
876
]
},
{
"tb": 2097152,
"tbk": 2,
"tl": 6627961,
"mb": 2097152,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
285,
286,
287,
877,
878,
879
]
},
{
"tb": 72,
"tbk": 1,
"tl": 2131,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
142,
143,
880,
881,
882,
883,
884,
885,
886,
887
]
},
{
"tb": 2000,
"tbk": 4,
"tl": 3206,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
888,
889,
890,
891,
892,
893,
894,
895
]
},
{
"tb": 64,
"tbk": 1,
"tl": 996389,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
121,
122,
123,
311,
75
]
},
{
"tb": 512,
"tbk": 1,
"tl": 64,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
896,
897,
898,
899,
900,
901,
902,
903
]
},
{
"tb": 512,
"tbk": 1,
"tl": 32,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
41,
42,
43,
904,
337,
171,
165
]
},
{
"tb": 1920,
"tbk": 8,
"tl": 10631,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
121,
122,
123,
905,
906
]
},
{
"tb": 72,
"tbk": 1,
"tl": 95215800,
"mb": 72,
"mbk": 1,
"gb": 72,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
345,
907,
908,
909,
910,
911,
912,
913,
914
]
},
{
"tb": 67108864,
"tbk": 524288,
"tl": 56514200,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
915,
916,
917,
918,
919,
920,
921,
922,
923
]
},
{
"tb": 16000,
"tbk": 125,
"tl": 111,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
924,
925,
926,
927,
928,
929,
930,
931
]
},
{
"tb": 80,
"tbk": 1,
"tl": 6850,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
41,
42,
43,
932,
933,
171,
165
]
},
{
"tb": 2400,
"tbk": 12,
"tl": 248,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
338,
934,
935,
936,
937,
938,
939
]
},
{
"tb": 768,
"tbk": 1,
"tl": 4825,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
83,
328,
329,
330,
67,
68,
69,
940,
941,
334
]
},
{
"tb": 32,
"tbk": 1,
"tl": 3774,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
285,
286,
287,
942,
120,
165
]
},
{
"tb": 576,
"tbk": 9,
"tl": 74163,
"mb": 576,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
121,
122,
123,
608,
444
]
},
{
"tb": 432,
"tbk": 1,
"tl": 19990688,
"mb": 432,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
943,
944,
945,
946,
947,
948,
949,
950,
951
]
},
{
"tb": 94371840,
"tbk": 90,
"tl": 1797931009,
"mb": 94371840,
"mbk": 90,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
66,
67,
68,
69,
466
]
},
{
"tb": 5408,
"tbk": 41,
"tl": 38786,
"mb": 5120,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
66,
67,
68,
69,
940
]
},
{
"tb": 288,
"tbk": 9,
"tl": 2580,
"mb": 288,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
681,
952,
953,
954,
955,
956
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2085753,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
808,
354,
355,
356,
357
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 812574,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
41,
42,
43,
44,
957,
958,
959
]
},
{
"tb": 6528,
"tbk": 34,
"tl": 14406,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
338,
960,
961,
962,
963,
964,
965
]
},
{
"tb": 144,
"tbk": 9,
"tl": 514,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
595,
596,
282,
283,
284,
171
]
},
{
"tb": 144,
"tbk": 9,
"tl": 544,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
595,
804,
282,
283,
284,
171
]
},
{
"tb": 512,
"tbk": 1,
"tl": 5172,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
966,
967,
968,
969,
970,
971,
972,
973
]
},
{
"tb": 480,
"tbk": 4,
"tl": 226,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
76,
77,
78,
79,
80,
438,
520
]
},
{
"tb": 512,
"tbk": 1,
"tl": 19,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
41,
42,
43,
44,
335,
974,
455
]
},
{
"tb": 72,
"tbk": 1,
"tl": 2086531,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
83,
328,
329,
330,
67,
68,
69,
975,
331,
31
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 1797478,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
41,
42,
43,
44,
782,
783,
976
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 363062,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
41,
42,
43,
44,
48,
49,
977
]
},
{
"tb": 3576,
"tbk": 18,
"tl": 84,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
142,
143,
422,
423,
424,
425,
426,
427,
440,
520,
484
]
},
{
"tb": 144,
"tbk": 9,
"tl": 1001,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
595,
804,
282,
793,
794,
534
]
},
{
"tb": 46080,
"tbk": 1,
"tl": 10849,
"mb": 46080,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
107,
108,
109,
110,
111,
112,
113,
114,
978,
228
]
},
{
"tb": 16000,
"tbk": 4,
"tl": 31000,
"mb": 16000,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
41,
42,
43,
979,
40,
7,
120
]
},
{
"tb": 1440,
"tbk": 9,
"tl": 31390,
"mb": 1440,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
415,
416,
417,
418,
980,
636,
637
]
},
{
"tb": 327454,
"tbk": 10,
"tl": 11016,
"mb": 186284,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
51,
379,
380,
652,
981
]
},
{
"tb": 2688,
"tbk": 3,
"tl": 10862,
"mb": 1536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
982,
983,
984,
985,
237
]
},
{
"tb": 6072,
"tbk": 11,
"tl": 4569,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
837,
838,
839,
986,
987,
988
]
},
{
"tb": 3456,
"tbk": 9,
"tl": 14242254,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
989,
990,
991,
992,
993,
994,
995,
996,
997
]
},
{
"tb": 671088640,
"tbk": 4194304,
"tl": 38517789,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
285,
286,
287,
998,
295,
296
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 4111,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
58,
999,
1000,
1001,
1002,
1003,
1004,
1005,
1006
]
},
{
"tb": 216,
"tbk": 1,
"tl": 20825888,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
83,
1007,
1008,
1009,
1010,
31,
32,
33
]
},
{
"tb": 108928,
"tbk": 417,
"tl": 242274,
"mb": 16384,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
58,
1011,
1012,
1013,
1014,
1015,
1016,
1017,
1018
]
},
{
"tb": 864,
"tbk": 1,
"tl": 116086261,
"mb": 864,
"mbk": 1,
"gb": 864,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
1019,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027
]
},
{
"tb": 216,
"tbk": 1,
"tl": 20825899,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
1028,
1029,
1030,
1031,
1032,
31,
32,
33
]
},
{
"tb": 18874368,
"tbk": 9,
"tl": 8072348,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
41,
42,
43,
44,
102,
1033,
1034
]
},
{
"tb": 768,
"tbk": 1,
"tl": 4094,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
38,
362,
324,
164
]
},
{
"tb": 256,
"tbk": 1,
"tl": 9742,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
41,
42,
43,
117,
1035,
1036,
120
]
},
{
"tb": 2889,
"tbk": 9,
"tl": 124,
"mb": 321,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
76,
132,
133,
134,
135,
136,
137,
138,
1037,
140,
141
]
},
{
"tb": 720,
"tbk": 1,
"tl": 116324050,
"mb": 720,
"mbk": 1,
"gb": 720,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045,
1046
]
},
{
"tb": 672,
"tbk": 3,
"tl": 6865,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
71,
72,
73,
74,
230
]
},
{
"tb": 1440,
"tbk": 9,
"tl": 239459,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
415,
416,
417,
418,
1047,
1048,
1049
]
},
{
"tb": 23100,
"tbk": 4,
"tl": 42897,
"mb": 23100,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
107,
108,
109,
110,
111,
112,
113,
114,
1050,
707
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 116078042,
"mb": 2097152,
"mbk": 1,
"gb": 2097152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
41,
42,
43,
44,
48,
1051,
1052
]
},
{
"tb": 3456,
"tbk": 18,
"tl": 636,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
1053,
1054,
1055,
1056,
1057,
1058,
1059,
1060,
1061
]
},
{
"tb": 6291456,
"tbk": 3,
"tl": 6258983,
"mb": 6291456,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
66,
67,
68,
69,
975
]
},
{
"tb": 768,
"tbk": 1,
"tl": 4720,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
38,
739,
740,
1062
]
},
{
"tb": 288,
"tbk": 9,
"tl": 968,
"mb": 288,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
41,
42,
43,
117,
1063,
119,
120
]
},
{
"tb": 288,
"tbk": 9,
"tl": 94906,
"mb": 288,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
485,
1064,
1065,
1066,
1067,
1068
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 10437,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
51,
379,
380,
381,
1069
]
},
{
"tb": 216,
"tbk": 1,
"tl": 1292686,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
1070,
1071,
1072,
1073,
1074,
1075,
1076,
1077,
1078
]
},
{
"tb": 288,
"tbk": 9,
"tl": 97077,
"mb": 288,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
107,
108,
109,
110,
111,
112,
113,
114,
1079,
183
]
},
{
"tb": 2880,
"tbk": 4,
"tl": 4343,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
34,
35,
36,
37,
519,
439,
441,
93
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 7583,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
199,
200,
201,
202,
1080
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
107,
108,
109,
110,
111,
112,
113,
246,
778,
583
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 277238,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
325,
1081,
31
]
},
{
"tb": 225280,
"tbk": 256,
"tl": 113661,
"mb": 47360,
"mbk": 33,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
289,
290,
291,
292,
293,
1082,
327,
1083
]
},
{
"tb": 864,
"tbk": 9,
"tl": 244,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
281,
282,
793,
794,
534,
31
]
},
{
"tb": 2160,
"tbk": 9,
"tl": 846571939,
"mb": 2160,
"mbk": 9,
"gb": 2160,
"gbk": 9,
"eb": 0,
"ebk": 0,
"fs": [
8,
83,
1084,
1085,
1086,
1087,
1088,
1089,
1090,
1091
]
},
{
"tb": 94371840,
"tbk": 90,
"tl": 8453838812,
"mb": 94371840,
"mbk": 90,
"gb": 94371840,
"gbk": 90,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
1092,
1093,
1094
]
},
{
"tb": 37749024,
"tbk": 27,
"tl": 725941,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
41,
42,
43,
44,
1095,
480,
1096
]
},
{
"tb": 9584640,
"tbk": 4,
"tl": 230172,
"mb": 9584640,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
41,
42,
43,
44,
1097,
1098,
406
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 9369,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
107,
369,
370,
371,
1099,
1100,
484,
31
]
},
{
"tb": 22976,
"tbk": 119,
"tl": 806702,
"mb": 22976,
"mbk": 119,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
58,
59,
60,
61,
152,
361,
39,
40
]
},
{
"tb": 9437184,
"tbk": 9,
"tl": 3737561,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
41,
42,
43,
44,
48,
49,
1101
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 5373,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
41,
42,
43,
117,
442,
1102,
740
]
},
{
"tb": 480,
"tbk": 4,
"tl": 6830,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
76,
77,
78,
79,
80,
729,
1103
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4528,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
1104,
1105,
1106,
1107,
1108,
1109,
1110,
1111
]
},
{
"tb": 2160,
"tbk": 18,
"tl": 80956432,
"mb": 1728,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
1112,
693,
31,
32,
33
]
},
{
"tb": 144,
"tbk": 1,
"tl": 1566092,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
747,
1113,
1114,
1115,
1116,
1117,
1118,
1119,
1120
]
},
{
"tb": 2304,
"tbk": 12,
"tl": 5098,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
338,
960,
961,
962,
1121,
1122,
1123
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2238,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
58,
194,
195,
196,
197,
332,
520,
484
]
},
{
"tb": 3584,
"tbk": 3,
"tl": 1809289,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1124,
1125,
1126,
1127,
31
]
},
{
"tb": 2912,
"tbk": 19,
"tl": 18978603,
"mb": 2912,
"mbk": 19,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
1128,
1129,
1130,
1131,
1132,
1133,
1134,
1135
]
},
{
"tb": 432,
"tbk": 1,
"tl": 3537,
"mb": 432,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
1136,
1137,
1138,
1139,
1140,
1141,
1142,
1143,
1144
]
},
{
"tb": 216,
"tbk": 9,
"tl": 850,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
28,
532,
533,
192,
276,
284,
171
]
},
{
"tb": 224,
"tbk": 3,
"tl": 4441906,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
76,
77,
78,
79,
80,
1145,
31
]
},
{
"tb": 216,
"tbk": 1,
"tl": 48,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
83,
328,
329,
330,
67,
68,
69,
940,
1146,
516
]
}
],
"ftbl": [
"[root]",
"0x55d31d6d2b79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x55d31d6d1319: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x55d31d25d842: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x55d31d270419: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x55d31d445ba2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x55d31d22457e: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x55d31d14560c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x55d31d16b4a9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x55d31d2340ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d11141c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d11141c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d11141c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d31d45c939: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d31d45c939: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x55d31d45c939: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x55d31d16122a: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x55d31d161307: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x55d31d288156: winter_verifier::perform_verification (verifier/src/lib.rs:225:13)",
"0x55d31d22f7bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d3dcb27: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3dcb27: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3dcb27: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3dcb27: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d455b76: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x55d31d46fba7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0bed6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d34dd5b: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x55d31d16a937: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x55d31d4b36ec: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x55d31d30e868: winter_prover::Prover::generate_proof (prover/src/lib.rs:514:9)",
"0x55d31d32dcd4: winter_prover::Prover::prove (prover/src/lib.rs:171:37)",
"0x55d31d0ef2b2: <examples::do_work::DoWorkExample<H> as examples::Example>::prove (src/do_work/mod.rs:108:9)",
"0x55d31cf47d4d: winterfell::main (examples/src/main.rs:49:17)",
"0x55d31d232e8c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d3ec966: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3ec966: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3ec966: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d271c9d: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x55d31d21d04d: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x55d31d22439c: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x55d31d3ec736: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3ec736: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3ec736: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d178e7b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x55d31d2e7db1: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x55d31d0d74aa: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x55d31d517a05: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x55d31d16d393: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x55d31d33d018: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x55d31d2e2210: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:197:28)",
"0x55d31d6d1ab0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x55d31d6d1d18: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x55d31d6d300a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x55d31d6d300a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x55d31d6d2dae: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x55d31d6d2dae: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x55d31d6d2e9d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x55d31d22ea9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d3ec916: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3ec916: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3ec916: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d178fbb: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x55d31d48f7a5: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x55d31d32a8e7: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:706:26)",
"0x55d31d30e110: winter_prover::Prover::generate_proof (prover/src/lib.rs:472:37)",
"0x55d31d3ebbc3: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x55d31d45d1f9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d31d45d1f9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x55d31d45d1f9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x55d31d2e5d29: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x55d31d25c972: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x55d31d270a19: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x55d31d446402: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x55d31d393239: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:536:13)",
"0x55d31d1f5428: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x55d31d666799: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x55d31d661b39: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x55d31d5c4830: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x55d31d5c6899: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x55d31d5a1451: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x55d31d2f0b27: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x55d31d2ee8cd: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x55d31d2309fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d3df9a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3df9a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3df9a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3df9a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d47a3de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d4714c9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0bfede: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d16c5e0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x55d31d551c96: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x55d31d30fa4f: winter_prover::Prover::generate_proof (prover/src/lib.rs:590:25)",
"0x55d31d3aa317: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3aa317: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3aa317: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3aa317: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d47806e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d473587: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0bc47e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d2e7c6a: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x55d31d16e47b: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x55d31d4d042f: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x55d31d4d0504: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x55d31d4bb10a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x55d31d346bd9: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x55d31d6d15ca: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d6d2bbc: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d6d2bbc: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d6d2bbc: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d31d6d37fc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d31d6d37fc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x55d31d6d37fc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x55d31d6d0e2c: <winter_utils::serde::byte_reader::SliceReader as winter_utils::serde::byte_reader::ByteReader>::read_vec (src/serde/byte_reader.rs:151:22)",
"0x55d31d676118: <winter_air::proof::context::Context as winter_utils::serde::Deserializable>::read_from (src/proof/context.rs:184:35)",
"0x55d31d66bbf7: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:27)",
"0x55d31d10f909: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x55d31d4a06fb: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x55d31d146185: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x55d31d290907: winter_verifier::verify (verifier/src/lib.rs:108:19)",
"0x55d31d263122: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x55d31d2706b9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x55d31d444d91: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x55d31d399c93: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:505:13)",
"0x55d31d1f6484: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x55d31d4addab: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x55d31d4ac7e1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x55d31d2c04eb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x55d31d29579d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x55d31d15e0fc: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x55d31d15b911: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x55d31d661e7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d5d257c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d5d257c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d5d257c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d31d5a2cc9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d31d5a2cc9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x55d31d5a2cc9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x55d31d391e3f: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x55d31d4a11f6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x55d31d145c48: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x55d31d654899: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x55d31d5c10aa: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d3aa541: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3aa541: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3aa541: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3aa541: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d47890b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d46e276: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0be45b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d144b0f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x55d31d3407e9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x55d31d20c9d0: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x55d31d144e38: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x55d31d6d06cc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x55d31d6ced9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x55d31d6cfcf8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x55d31d6cfcf8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x55d31d6cc964: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x55d31d6ccc13: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x55d31d537e40: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x55d31d4b3810: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x55d31d1326f1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x55d31d144fa8: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x55d31d0efd99: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:118:9)",
"0x55d31cf489d5: winterfell::main (examples/src/main.rs:83:11)",
"0x55d31d2517b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x55d31d26fd89: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x55d31d445f32: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x55d31d28848c: winter_verifier::perform_verification (verifier/src/lib.rs:182:9)",
"0x55d31d2909d2: winter_verifier::verify (verifier/src/lib.rs:110:21)",
"0x55d31d233e4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d1112ec: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d1112ec: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d1112ec: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d31d45df19: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d31d45df19: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x55d31d45df19: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x55d31d4d65d6: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x55d31d20ebd9: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:82:31)",
"0x55d31d0e4553: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x55d31d6755bd: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:151:28)",
"0x55d31d66c178: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:29)",
"0x55d31d22d2fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d534776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d534776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d534776: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x55d31d45d3b9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d31d45d3b9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x55d31d45d3b9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x55d31d559846: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x55d31d392c22: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:348:9)",
"0x55d31d50b63b: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:50:13)",
"0x55d31d340f58: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d340f58: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d340f58: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x55d31d45bc17: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x55d31d21cd36: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x55d31d67eda0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x55d31d67a5f9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x55d31d6795a1: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x55d31d679eb0: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x55d31d551e9d: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x55d31d3d5f40: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3d5f40: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3d5f40: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3d5f40: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55d31d47814b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d46f8a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0bc27b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d4cdbca: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x55d31d5057eb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:39:30)",
"0x55d31d532103: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x55d31d248392: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x55d31d26fa59: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x55d31d444b42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x55d31d2120d9: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:174:17)",
"0x55d31d20ff30: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:54:17)",
"0x55d31d3a7141: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3a7141: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3a7141: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3a7141: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d479f9b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d46e346: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0bc88b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d30c4e3: winter_prover::Prover::generate_proof (prover/src/lib.rs:209:39)",
"0x55d31d670ec9: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:352:21)",
"0x55d31d66be53: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:174:32)",
"0x55d31d3932c9: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:534:17)",
"0x55d31d28713b: winter_verifier::perform_verification (verifier/src/lib.rs:263:61)",
"0x55d31d672709: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x55d31d67375c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d676726: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d676726: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d676726: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d66bd52: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:172:33)",
"0x55d31cf488fd: winterfell::main (examples/src/main.rs:80:24)",
"0x55d31d3cc9d1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3cc9d1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3cc9d1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3cc9d1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d478cfb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d471026: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0bf64b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d144c9f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x55d31d342df4: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x55d31d342b12: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x55d31d1f8a03: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x55d31d22ae5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d3d6771: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3d6771: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3d6771: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3d6771: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d4770cb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d4709c6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0bd0cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d2e7e5a: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x55d31d3ad5b7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3ad5b7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3ad5b7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3ad5b7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d476b0e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d46ea37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0be2be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d346c76: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x55d31d277191: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x55d31d482b5e: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x55d31d3c2877: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3c2877: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3c2877: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3c2877: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d47770e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d473317: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0bface: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d48b532: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x55d31d50564a: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:25:25)",
"0x55d31d15ae22: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x55d31d1f05c4: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x55d31d510d04: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x55d31d16123f: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x55d31d2f108f: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:60:9)",
"0x55d31d392985: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:364:13)",
"0x55d31d505b4c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:63:9)",
"0x55d31d288247: winter_verifier::perform_verification (verifier/src/lib.rs:223:43)",
"0x55d31d11193c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d31d11193c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x55d31d11193c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x55d31d559983: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x55d31d45bebb: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d45bebb: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d45bebb: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d45bebb: <[V] as alloc::slice::Concat<T>>::concat (alloc/src/slice.rs:712:26)",
"0x55d31d45bcab: alloc::slice::<impl [T]>::concat (alloc/src/slice.rs:561:9)",
"0x55d31d494527: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:228:37)",
"0x55d31d491903: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x55d31d3223dd: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:659:26)",
"0x55d31d224629: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x55d31d21cf3a: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x55d31d3af727: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3af727: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3af727: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3af727: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d4795de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d46f507: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0bfcfe: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d2e9277: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x55d31d6ccd9e: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x55d31d34301f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x55d31d1faf5f: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x55d31d4b3580: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x55d31d39308d: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:540:13)",
"0x55d31d238a5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d3ecb46: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3ecb46: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3ecb46: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d178d3b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x55d31d537e2b: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x55d31d48e76a: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x55d31d0d5c7a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x55d31d26cf22: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x55d31d26ffc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x55d31d449aaf: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x55d31d4c55d9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x55d31d132583: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x55d31d3ea097: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x55d31d34a11b: winter_prover::trace::commitment::build_segment_queries::{{closure}}::{{closure}} (src/trace/commitment.rs:162:42)",
"0x55d31d1c8019: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d31d3eb856: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3eb856: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3eb856: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x55d31d30d583: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:33)",
"0x55d31d480698: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x55d31d346b07: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x55d31d350cb4: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x55d31d16cf42: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x55d31d48b3d9: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x55d31d287cbe: winter_verifier::perform_verification (verifier/src/lib.rs:314:25)",
"0x55d31d680739: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x55d31d68cd2b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x55d31d68c751: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x55d31d688adb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x55d31d6826cd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x55d31d67d84b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x55d31d67bf13: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x55d31d23170a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d3c3781: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3c3781: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3c3781: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3c3781: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d478dab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d46d306: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0bd09b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d321c73: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:634:36)",
"0x55d31d4d6440: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x55d31d45d039: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d31d45d039: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x55d31d45d039: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x55d31d4984a2: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x55d31d497147: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x55d31d321df7: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:645:31)",
"0x55d31d271f24: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x55d31d4c5152: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x55d31d25e712: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x55d31d270149: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x55d31d447122: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x55d31d346c91: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x55d31d350c1d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x55d31d30face: winter_prover::Prover::generate_proof (prover/src/lib.rs:593:29)",
"0x55d31d3ec556: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3ec556: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3ec556: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d4ba782: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x55d31d6734bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d676776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d676776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d676776: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d551bcd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x55d31d49426a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x55d31d6d1ce9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x55d31d6d2f12: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x55d31d273564: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x55d31d218175: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x55d31d22bb7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d3cdf11: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3cdf11: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3cdf11: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3cdf11: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d4783db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d46dd46: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0bcacb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d350c0e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x55d31d22cdbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d3d0127: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3d0127: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3d0127: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3d0127: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d47701e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d46d6b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0bffae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d48de38: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x55d31d494476: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:228:38)",
"0x55d31d267152: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x55d31d270389: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x55d31d448ff2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x55d31d545f89: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x55d31d5531b2: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x55d31d3c0787: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3c0787: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3c0787: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3c0787: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d47767e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d46e807: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0c071e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d17033a: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:132:32)",
"0x55d31d1119f5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d1119f5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d1119f5: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x55d31d45bbf4: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x55d31d508fd0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:149:33)",
"0x55d31d50c9e0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:122:17)",
"0x55d31d1ec436: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d31d5d26ac: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d5d26ac: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d5d26ac: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d31d5a34a9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d31d5a34a9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x55d31d5a34a9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x55d31d2e5d84: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x55d31d310808: winter_prover::Prover::generate_proof (prover/src/lib.rs:440:13)",
"0x55d31d67e8ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d67ab6c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d67ab6c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d67ab6c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d31d67a62c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d31d67a62c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x55d31d67a62c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x55d31d551c77: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x55d31d480f53: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x55d31d53f274: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x55d31d480a2c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x55d31d552152: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x55d31d4d74cb: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x55d31d4c4d42: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x55d31d2869d9: winter_verifier::perform_verification (verifier/src/lib.rs:183:13)",
"0x55d31d22e2bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d3e6ffe: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3e6ffe: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3e6ffe: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3e6ffe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55d31d47843b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d46fb76: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d51110b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d13e01c: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x55d31d487bf3: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x55d31d287c0f: winter_verifier::perform_verification (verifier/src/lib.rs:308:25)",
"0x55d31d48b1bf: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x55d31d67a6b6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x55d31d360b2b: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x55d31d39073c: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x55d31d352a92: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x55d31d1294c6: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:493:32)",
"0x55d31d0df09a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x55d31d1ac2a2: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d31d0aac9b: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x55d31d0c7906: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x55d31d2e57be: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x55d31d2e3f17: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x55d31d1235ac: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:293:57)",
"0x55d31d6718d2: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:215:25)",
"0x55d31d66c15d: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:188:24)",
"0x55d31d4ad6eb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x55d31d4ac891: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x55d31d2bff4b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x55d31d2959dd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x55d31d15e83f: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x55d31d33a6c3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x55d31d5323fb: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x55d31d361010: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x55d31d2e8d04: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x55d31d2e5fbc: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x55d31d275f79: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x55d31d1402ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x55d31d55d6d0: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x55d31d30fbc5: winter_prover::Prover::generate_proof (prover/src/lib.rs:598:34)",
"0x55d31d2f0e42: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::new (src/do_work/air.rs:35:23)",
"0x55d31d128bb0: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:221:17)",
"0x55d31d0d3922: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x55d31d5024dd: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::SpecFold>::spec_fold (iter/adapters/zip.rs:685:25)",
"0x55d31d4eeee7: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::fold (iter/adapters/zip.rs:249:9)",
"0x55d31d4d99b7: <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/zip.rs:103:9)",
"0x55d31d4ad02b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x55d31d4ac681: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x55d31d2c012b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x55d31d2958bd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x55d31d15ef89: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x55d31d33aa00: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x55d31d558cb7: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x55d31d50aa27: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:272:18)",
"0x55d31d509297: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:166:30)",
"0x55d31d47fe5d: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x55d31d483406: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x55d31d491940: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x55d31d4d05d7: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x55d31d545e0b: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x55d31d23827c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d3a9557: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3a9557: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3a9557: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3a9557: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d45779d: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x55d31d47321c: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0bf4ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d2ef82a: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x55d31d53a82c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x55d31d342b58: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x55d31d30c656: winter_prover::Prover::generate_proof (prover/src/lib.rs:228:27)",
"0x55d31d6752bd: <winter_air::proof::commitments::Commitments as winter_utils::serde::Deserializable>::read_from (src/proof/commitments.rs:108:22)",
"0x55d31d66bbdc: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:167:27)",
"0x55d31d4806ff: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x55d31d55d495: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x55d31d3a79a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3a79a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3a79a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3a79a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d47971e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d46c517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0be37e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d360f51: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x55d31d672187: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x55d31d670fed: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:357:24)",
"0x55d31d487bd0: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x55d31d4d59a3: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x55d31d55982c: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x55d31d310b32: winter_prover::Prover::generate_proof (prover/src/lib.rs:403:21)",
"0x55d31d24a622: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x55d31d270839: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x55d31d449252: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x55d31d4badb8: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x55d31d3d0ee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3d0ee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3d0ee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3d0ee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d476dde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d46dc57: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0c047e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d4d5994: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x55d31d360214: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x55d31d287e15: winter_verifier::perform_verification (verifier/src/lib.rs:320:5)",
"0x55d31d23390c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d3ec466: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3ec466: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3ec466: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d30d051: winter_prover::Prover::generate_proof (prover/src/lib.rs:301:32)",
"0x55d31d3107ad: winter_prover::Prover::generate_proof (prover/src/lib.rs:438:13)",
"0x55d31d55d6eb: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x55d31d532450: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x55d31d211f72: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:169:36)",
"0x55d31d488848: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x55d31d310665: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:17)",
"0x55d31d4b32ef: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x55d31d243982: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x55d31d26fc39: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x55d31d448a51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x55d31d2e86c9: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x55d31d1ec30d: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x55d31d235b1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d3be7cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3be7cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3be7cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3be7cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55d31d47986e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d46b947: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0bce8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d39cbf6: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x55d31d3a86b1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3a86b1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3a86b1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3a86b1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d47671b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d46fe16: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0bf23b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d132409: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x55d31d2905a9: winter_verifier::verify (verifier/src/lib.rs:95:32)",
"0x55d31d670862: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:164:22)",
"0x55d31d66be38: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:176:34)",
"0x55d31d22e01c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d3bc7f7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3bc7f7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3bc7f7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3bc7f7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d478b7e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d472f39: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0bd0ee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d30c603: winter_prover::Prover::generate_proof (prover/src/lib.rs:217:20)",
"0x55d31d4a9e95: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x55d31d2f112c: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:62:13)",
"0x55d31d1720ab: winter_prover::trace::Trace::validate (src/trace/mod.rs:122:26)",
"0x55d31d310f21: winter_prover::Prover::generate_proof (prover/src/lib.rs:370:17)",
"0x55d31d48f866: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x55d31d3d7637: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3d7637: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3d7637: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3d7637: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d47aade: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d4734b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0bdd0e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d30ce32: winter_prover::Prover::generate_proof (prover/src/lib.rs:286:23)",
"0x55d31d399bb8: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:510:13)",
"0x55d31d237a9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d3d1111: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3d1111: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3d1111: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3d1111: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d4769fb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d46fcc6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0be86b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d20ea5c: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:82:9)",
"0x55d31d140d3c: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x55d31d12c53c: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x55d31d67f1a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d67f1a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d67f1a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d67f1a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55d31d67f5ee: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d67f5b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d68084e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d67e299: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x55d31d1447d0: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x55d31d59c656: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d59c656: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d59c656: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d275d1c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x55d31d287810: winter_verifier::perform_verification (verifier/src/lib.rs:302:9)",
"0x55d31d14627d: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x55d31d12fcb0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x55d31d28d869: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:214:32)",
"0x55d31d0d2603: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x55d31d487693: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x55d31d2eaf48: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x55d31d508f6c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:148:31)",
"0x55d31d2eaca7: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x55d31d48889e: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x55d31d238f9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d3b6d37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3b6d37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3b6d37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3b6d37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d47826e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d46b6a7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0bddde: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d321d43: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:638:34)",
"0x55d31d6d1d49: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x55d31d49f6ed: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x55d31d4d5299: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x55d31d39d5ae: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x55d31d15b89d: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x55d31d39ccce: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x55d31d39f6c6: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x55d31d3929ea: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:362:9)",
"0x55d31d230f3a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d3a215e: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3a215e: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3a215e: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3a215e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55d31d47821e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d46d957: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d50476e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d4b2f64: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:142:33)",
"0x55d31d484af6: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x55d31d287d3a: winter_verifier::perform_verification (verifier/src/lib.rs:316:28)",
"0x55d31d4c99fc: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x55d31d23851c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d3e4907: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3e4907: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3e4907: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3e4907: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d477fde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d471627: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0bc93e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d0efd54: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:112:30)",
"0x55d31d2f0d16: <examples::do_work::air::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (src/do_work/air.rs:13:9)",
"0x55d31d290718: winter_verifier::verify (verifier/src/lib.rs:97:38)",
"0x55d31d4d541a: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x55d31d251ca2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x55d31d270539: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x55d31d448b42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x55d31d47bffc: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x55d31d39cd4a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x55d31d68576e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x55d31d687220: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x55d31d686428: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x55d31d50c58d: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:33)",
"0x55d31d310bd3: winter_prover::Prover::generate_proof (prover/src/lib.rs:407:21)",
"0x55d31d49f835: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x55d31d1f51d0: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x55d31d356a48: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x55d31d360dda: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x55d31d53208f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x55d31d4d60c6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d4d60c6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d4d60c6: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x55d31d2e5ca3: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x55d31d53f35d: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x55d31d20c7fb: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x55d31d4c5524: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x55d31d671dc4: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:361:22)",
"0x55d31d6713d6: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:146:27)",
"0x55d31d4bac60: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x55d31d555ab6: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x55d31d496c77: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x55d31d48ec8c: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x55d31d4957bc: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x55d31d172598: winter_prover::trace::Trace::validate (src/trace/mod.rs:177:13)",
"0x55d31d33c81d: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x55d31d30ef26: winter_prover::Prover::generate_proof (prover/src/lib.rs:548:13)",
"0x55d31d235dbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d3a43c1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3a43c1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3a43c1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3a43c1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d4799db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d46cd06: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0beeab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d286d9f: winter_verifier::perform_verification (verifier/src/lib.rs:216:40)",
"0x55d31d254912: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x55d31d270119: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x55d31d44594f: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x55d31d480d8a: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x55d31d3434f8: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x55d31d1f3499: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x55d31d3def17: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3def17: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3def17: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3def17: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d478b2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d46e147: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0bda9e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d30c416: winter_prover::Prover::generate_proof (prover/src/lib.rs:205:38)",
"0x55d31d4cdca7: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x55d31d15977b: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x55d31d545caa: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x55d31d670a1e: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:168:21)",
"0x55d31d487755: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:144:35)",
"0x55d31d360bf6: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x55d31d2ec7d0: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x55d31d50c819: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:129:9)",
"0x55d31d23366c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d3ebe1c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3ebe1c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3ebe1c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55d31d45ce79: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55d31d45ce79: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x55d31d45ce79: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x55d31d30e6be: winter_prover::Prover::generate_proof (prover/src/lib.rs:500:39)",
"0x55d31d491872: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x55d31d30cc88: winter_prover::Prover::generate_proof (prover/src/lib.rs:268:13)",
"0x55d31d1761f6: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x55d31d545c8f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x55d31d6712b9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x55d31d67170b: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:211:22)",
"0x55d31d349078: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x55d31d0e261a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x55d31d19ae45: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d31d4d051a: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x55d31d68c9cb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x55d31d68c6a1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x55d31d688c9b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x55d31d683471: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x55d31d683af7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x55d31d67e72b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x55d31d53b00c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x55d31d22f51c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d4a12be: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d4a12be: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d4a12be: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x55d31d45bb77: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x55d31d1f8c58: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x55d31d342ad6: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x55d31d170511: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:132:51)",
"0x55d31d0d2a1a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x55d31d515da5: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x55d31d4961ab: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x55d31d495696: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x55d31d1298e9: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:641:17)",
"0x55d31d555c0e: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x55d31d553104: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x55d31d30f38b: winter_prover::Prover::generate_proof (prover/src/lib.rs:561:9)",
"0x55d31d674502: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x55d31d675179: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x55d31d676ae2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x55d31d66c916: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:13)",
"0x55d31d1463ef: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x55d31d20f670: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:40:22)",
"0x55d31d50b6e7: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:13)",
"0x55d31d532184: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x55d31d3de451: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3de451: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3de451: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3de451: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d4777db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d46c136: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0bd65b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d14497f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x55d31d2f10bd: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:61:13)",
"0x55d31d53b01d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x55d31d33c151: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x55d31d353df3: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x55d31d4d65ed: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x55d31d3c0ee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3c0ee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3c0ee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3c0ee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d450bcf: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x55d31d46e849: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0bde5e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d290784: winter_verifier::verify (verifier/src/lib.rs:101:24)",
"0x55d31d22e55c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d3d81c7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3d81c7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3d81c7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3d81c7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d47706e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d46c2c7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d20a42e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d30c79f: winter_prover::Prover::generate_proof (prover/src/lib.rs:243:41)",
"0x55d31d2387bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d3ec876: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3ec876: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3ec876: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d30cfc9: winter_prover::Prover::generate_proof (prover/src/lib.rs:299:44)",
"0x55d31d3601a5: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x55d31d25f5e2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x55d31d270209: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x55d31d44a0e2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x55d31d14649b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x55d31d4b3312: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x55d31d4acccb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x55d31d4ac471: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x55d31d2c0f0b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x55d31d2b9451: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x55d31d2bf77d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x55d31d2b310e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x55d31d3bbf91: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3bbf91: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3bbf91: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3bbf91: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d476edb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d470626: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0bc4ab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d321ba6: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:630:42)",
"0x55d31d4b2ea2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x55d31d28798e: winter_verifier::perform_verification (verifier/src/lib.rs:303:42)",
"0x55d31d268022: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x55d31d2709e9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x55d31d447842: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x55d31d288673: winter_verifier::perform_verification (verifier/src/lib.rs:177:9)",
"0x55d31d059149: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x55d31d057c19: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x55d31d056030: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x55d31d056298: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x55d31d055b5a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x55d31d055b5a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x55d31cf4a6a1: alloc::string::String::reserve (alloc/src/string.rs:1152:9)",
"0x55d31cf4a6a1: <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend (alloc/src/string.rs:2173:14)",
"0x55d31cf4a77c: <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter (alloc/src/string.rs:2093:9)",
"0x55d31d3d8c51: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3d8c51: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3d8c51: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3d8c51: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d476f6b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d471a96: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0be53b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d144a47: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x55d31d2abd8f: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x55d31d2b7711: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x55d31d2b2caa: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x55d31d16c9cb: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x55d31d0d932c: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x55d31d342954: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x55d31d3ac911: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3ac911: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3ac911: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3ac911: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d477f1b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d473516: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0bd20b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d144bd7: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x55d31d3b1227: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3b1227: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3b1227: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3b1227: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d47723e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d46ed47: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0bfbee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d36110f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x55d31d3b9187: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3b9187: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3b9187: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3b9187: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d47a29e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d46ee27: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0bc7ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d48795b: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x55d31d48b1a4: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x55d31d53b95b: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x55d31d3429cc: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x55d31d3d6ba1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3d6ba1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3d6ba1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3d6ba1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d479b3b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d4710b6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0bd6cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d30cc5d: winter_prover::Prover::generate_proof (prover/src/lib.rs:266:43)",
"0x55d31d2362fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d3b3135: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3b3135: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3b3135: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3b3135: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55d31d47710e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d46c737: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0bccce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d4941b0: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:218:46)",
"0x55d31d3c3107: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3c3107: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3c3107: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3c3107: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d4784fe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d4724b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0bf86e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d388d8f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x55d31d38cd61: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x55d31d28733e: winter_verifier::perform_verification (verifier/src/lib.rs:272:24)",
"0x55d31d68c81b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x55d31d68c541: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x55d31d688d7b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x55d31d6833a1: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x55d31d683b37: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x55d31d67e6db: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x55d31d3ea067: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x55d31d346a53: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x55d31d145cae: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x55d31d22a91c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d3b4dc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3b4dc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3b4dc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3b4dc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d4566b3: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x55d31d46bbc9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0be01e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d30cf62: winter_prover::Prover::generate_proof (prover/src/lib.rs:291:36)",
"0x55d31d122b09: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:211:31)",
"0x55d31d0d9d3a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x55d31d1ca0a8: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d31d0a33ba: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x55d31d0c363a: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x55d31d4a1bc2: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x55d31d33f240: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x55d31d4b5bb1: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x55d31d68cb7b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x55d31d68c5f1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x55d31d688bbb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x55d31d68587e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x55d31d686c4c: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x55d31d685d8a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x55d31d3ab197: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3ab197: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3ab197: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3ab197: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d479f6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d46b599: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0bec6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d48ce47: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x55d31d487853: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x55d31d2e5c8c: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x55d31d32a4e4: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:691:36)",
"0x55d31d33c833: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x55d31d670d02: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:348:22)",
"0x55d31d21cd7b: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x55d31d12fc8d: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x55d31d677d7a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x55d31d674012: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x55d31d6751a9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x55d31d676878: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x55d31d66cc1a: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:13)",
"0x55d31d29ad31: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x55d31d29e477: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x55d31d2931bb: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x55d31d23240c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d3c1bc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3c1bc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3c1bc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3c1bc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d477a9e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d472c79: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0bd94e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d20f77a: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:50:26)",
"0x55d31d4943df: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:226:50)",
"0x55d31d3d22f0: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3d22f0: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3d22f0: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3d22f0: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55d31d4765bb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d471da6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0bddbb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d4c5075: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x55d31d3eccd6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3eccd6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3eccd6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d30d00d: winter_prover::Prover::generate_proof (prover/src/lib.rs:300:37)",
"0x55d31d3ba666: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3ba666: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3ba666: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3ba666: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55d31d476b6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d46f5dc: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d47e9be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d480edb: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x55d31d229c0c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d3cbb31: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3cbb31: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3cbb31: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3cbb31: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d4790ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d46d5a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0bee5b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d1f8967: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x55d31d22d83c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d3ec786: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3ec786: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3ec786: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d30cf85: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:39)",
"0x55d31d2e88b6: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x55d31d2ec76c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x55d31d227fee: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x55d31d14542b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x55d31d391e2a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x55d31d23294c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d3a6ae7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3a6ae7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3a6ae7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3a6ae7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d47853e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d472d37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0bed4e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d32e619: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces (src/do_work/prover.rs:30:9)",
"0x55d31d16f87b: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:235:25)",
"0x55d31d53aa62: examples::do_work::prover::build_do_work_trace (src/do_work/prover.rs:65:5)",
"0x55d31d32e668: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces::{{closure}} (src/do_work/prover.rs:32:27)",
"0x55d31d671f46: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:365:21)",
"0x55d31d353eb0: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x55d31d30c8ba: winter_prover::Prover::generate_proof (prover/src/lib.rs:257:22)",
"0x55d31d2304bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d3e34c8: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3e34c8: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3e34c8: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3e34c8: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55d31d47a72e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d471407: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d55a17e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d39de5c: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x55d31d14523c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x55d31d4a08ce: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x55d31d2918d1: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:101:85)",
"0x55d31d0e2432: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x55d31d1fec0a: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:107:27)",
"0x55d31d11bbff: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x55d31d1fc9a4: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:113:9)",
"0x55d31d4baa51: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x55d31d23923c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d3d6977: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3d6977: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3d6977: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3d6977: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d47765e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d46b517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0bc60e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d30e5d6: winter_prover::Prover::generate_proof (prover/src/lib.rs:491:51)",
"0x55d31d675784: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:155:27)",
"0x55d31d360a4e: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x55d31d30dc77: winter_prover::Prover::generate_proof (prover/src/lib.rs:442:35)",
"0x55d31d34a199: winter_prover::trace::commitment::build_segment_queries::{{closure}}::{{closure}} (src/trace/commitment.rs:164:27)",
"0x55d31d348736: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:159:13)",
"0x55d31d3caf37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3caf37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3caf37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3caf37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d47a2be: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d4732d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0bd4de: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d2e22c4: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:198:23)",
"0x55d31d2e2723: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:200:34)",
"0x55d31d0d1b0a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x55d31d1a51bf: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x55d31d2e8be1: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x55d31d2eb211: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x55d31d179303: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x55d31d545c25: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x55d31d4c98e0: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x55d31d55d65e: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x55d31d2ec83e: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x55d31d4cda9a: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x55d31d2876c1: winter_verifier::perform_verification (verifier/src/lib.rs:295:27)",
"0x55d31d3b2777: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3b2777: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3b2777: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3b2777: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d4772de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d473697: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0bfb8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d360131: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x55d31d50c4c0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:28)",
"0x55d31d3a1c21: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3a1c21: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3a1c21: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3a1c21: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d4783ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d46bac6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0c001b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d30e6a3: winter_prover::Prover::generate_proof (prover/src/lib.rs:495:52)",
"0x55d31d68266d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x55d31d67d538: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x55d31d67bdd7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x55d31d25ec02: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x55d31d26fcc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x55d31d449d48: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x55d31d310bf6: winter_prover::Prover::generate_proof (prover/src/lib.rs:408:17)",
"0x55d31d3a57e7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3a57e7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3a57e7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3a57e7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d47973e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d46f7f7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0c032e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d2e1d13: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:253:9)",
"0x55d31d22abbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x55d31d3b3991: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x55d31d3b3991: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x55d31d3b3991: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x55d31d3b3991: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55d31d47937b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55d31d46eed6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x55d31d0bc78b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x55d31d286cd2: winter_verifier::perform_verification (verifier/src/lib.rs:212:41)",
"0x55d31d3107ed: winter_prover::Prover::generate_proof (prover/src/lib.rs:439:13)",
"0x55d31d1f8a1e: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)"
]
}