{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell do-work -n 4 -l 65536",
"pid": 22468,
"tg": 40318126,
"te": 51084483,
"pps": [
{
"tb": 128,
"tbk": 4,
"tl": 2,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5
]
},
{
"tb": 32,
"tbk": 1,
"tl": 36,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
7,
8,
9,
10,
11,
12,
13,
14,
15
]
},
{
"tb": 335544320,
"tbk": 5,
"tl": 10197623,
"mb": 67108864,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
17,
18,
19,
20,
21,
22
]
},
{
"tb": 85360,
"tbk": 1662,
"tl": 4530059,
"mb": 17056,
"mbk": 11,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
25,
26,
27,
28,
29,
30,
31
]
},
{
"tb": 128,
"tbk": 4,
"tl": 6298370,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
42
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3104,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
43,
44,
45,
46,
47,
48,
49,
50
]
},
{
"tb": 96,
"tbk": 1,
"tl": 236,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
51,
52,
53,
54,
55,
56,
57,
58,
59
]
},
{
"tb": 640,
"tbk": 4,
"tl": 9936,
"mb": 640,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
61,
62,
63,
64,
65,
66,
67
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 1756247,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
68,
69,
70,
71,
72,
73,
74
]
},
{
"tb": 984,
"tbk": 4,
"tl": 1392,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
7,
75,
76,
77,
78,
79,
80,
81
]
},
{
"tb": 64,
"tbk": 4,
"tl": 448,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
82,
83,
84,
85,
86,
87
]
},
{
"tb": 896,
"tbk": 6,
"tl": 10531,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
88,
89,
90,
91,
92
]
},
{
"tb": 4194304,
"tbk": 4,
"tl": 297621,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
68,
69,
70,
71,
93,
94,
95
]
},
{
"tb": 46080,
"tbk": 96,
"tl": 83877,
"mb": 20960,
"mbk": 33,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
96,
97,
98,
99,
100,
101,
102,
103
]
},
{
"tb": 32,
"tbk": 1,
"tl": 3995682,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
104,
105,
106,
107,
108,
109,
110
]
},
{
"tb": 96,
"tbk": 4,
"tl": 17751206,
"mb": 96,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
111,
112,
113,
114,
115,
116,
117,
118,
119,
120
]
},
{
"tb": 24,
"tbk": 1,
"tl": 860270,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
51,
121,
122,
123,
124,
125,
126,
127,
128,
110
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 767911,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
68,
69,
70,
71,
129,
130,
131
]
},
{
"tb": 32,
"tbk": 1,
"tl": 3759,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
132,
133,
134,
135,
136,
137,
138,
139,
140
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1757,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
141,
142,
143,
144,
145
]
},
{
"tb": 64,
"tbk": 1,
"tl": 6504,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
88,
89,
90,
146,
147
]
},
{
"tb": 96,
"tbk": 4,
"tl": 6298396,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
148,
149,
41,
42,
87,
110
]
},
{
"tb": 4194304,
"tbk": 4,
"tl": 290748,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
17,
18,
19,
20,
21,
150
]
},
{
"tb": 64,
"tbk": 4,
"tl": 9,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
82,
151,
152,
153,
110,
154
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 292490,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
155,
156,
157,
158,
159,
160,
161,
162,
163
]
},
{
"tb": 32,
"tbk": 1,
"tl": 40303407,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
32,
164,
165,
166,
167,
168,
169,
170,
171,
172
]
},
{
"tb": 41943040,
"tbk": 40,
"tl": 1589765697,
"mb": 41943040,
"mbk": 40,
"gb": 41943040,
"gbk": 40,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
155,
156,
157,
158,
159,
160,
173,
174,
175
]
},
{
"tb": 20480,
"tbk": 4,
"tl": 28995,
"mb": 20480,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
176,
177,
178,
179,
180,
181,
182,
183
]
},
{
"tb": 24479,
"tbk": 4,
"tl": 42401,
"mb": 24479,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
176,
184,
185,
186,
187,
188,
189,
190,
191,
192
]
},
{
"tb": 16,
"tbk": 1,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
176,
184,
185,
186,
187,
188,
189,
193,
194,
195
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 1574954,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
196,
197,
198,
199,
200,
201,
202,
203
]
},
{
"tb": 64,
"tbk": 4,
"tl": 330,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
155,
156,
157,
204,
205,
206,
207,
41,
208
]
},
{
"tb": 1280,
"tbk": 4,
"tl": 28742,
"mb": 1280,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
155,
156,
157,
158,
159,
160,
161,
209,
195
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 340509,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
68,
69,
70,
71,
93,
94,
210
]
},
{
"tb": 384,
"tbk": 4,
"tl": 63,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
211,
84,
212,
213,
214,
4
]
},
{
"tb": 96,
"tbk": 1,
"tl": 3579,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
215,
216,
217,
218,
182
]
},
{
"tb": 480,
"tbk": 4,
"tl": 10881,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
104,
105,
106,
107,
108,
219,
220
]
},
{
"tb": 1984,
"tbk": 4,
"tl": 3165,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
221,
222,
223,
224,
225,
226,
227,
228
]
},
{
"tb": 4352,
"tbk": 8,
"tl": 121,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
229,
230,
231,
232,
233,
234
]
},
{
"tb": 2304,
"tbk": 12,
"tl": 5107,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
235,
236,
237,
238,
239,
240,
241
]
},
{
"tb": 32,
"tbk": 1,
"tl": 8965,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
196,
197,
198,
199,
242,
243,
244,
195
]
},
{
"tb": 2097152,
"tbk": 2,
"tl": 5057690,
"mb": 2097152,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
155,
156,
157,
204,
205,
206,
245,
246,
247
]
},
{
"tb": 3632,
"tbk": 18,
"tl": 82,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
7,
248,
249,
250,
251,
252,
253,
254,
255,
182
]
},
{
"tb": 256,
"tbk": 4,
"tl": 28396,
"mb": 256,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
88,
89,
90,
256,
257
]
},
{
"tb": 128,
"tbk": 1,
"tl": 128,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
258,
259,
260,
261,
262,
263,
264,
265,
266
]
},
{
"tb": 160,
"tbk": 1,
"tl": 7068,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
267,
268,
269,
270,
271,
272,
273,
274,
275
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 7507,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
276,
277,
278,
279,
280
]
},
{
"tb": 13601,
"tbk": 1,
"tl": 10667,
"mb": 13601,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
176,
184,
185,
186,
187,
188,
189,
190,
281,
282
]
},
{
"tb": 64,
"tbk": 4,
"tl": 203875741,
"mb": 64,
"mbk": 4,
"gb": 64,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
23,
176,
184,
185,
186,
187,
188,
189,
193,
283,
284
]
},
{
"tb": 96,
"tbk": 1,
"tl": 24,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
51,
121,
122,
123,
124,
125,
126,
285,
286,
287
]
},
{
"tb": 64,
"tbk": 1,
"tl": 50965142,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
32,
288,
289,
290,
291,
292,
293,
294,
295,
296
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 10672,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
176,
184,
185,
186,
187,
188,
189,
190,
297,
282
]
},
{
"tb": 1280,
"tbk": 8,
"tl": 2895641,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
17,
18,
19,
20,
21,
298
]
},
{
"tb": 512,
"tbk": 1,
"tl": 16,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
68,
69,
70,
71,
299,
300,
301
]
},
{
"tb": 64,
"tbk": 4,
"tl": 6298340,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
155,
156,
157,
204,
205,
206,
207,
41,
42
]
},
{
"tb": 480,
"tbk": 4,
"tl": 6482,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
104,
105,
106,
107,
108,
219,
302
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1115484,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
303,
304,
305,
306,
307,
308,
309,
310,
311
]
},
{
"tb": 13800,
"tbk": 25,
"tl": 6711,
"mb": 3864,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
312,
313,
314,
315,
316,
317
]
},
{
"tb": 96,
"tbk": 1,
"tl": 6531,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
141,
142,
143,
318,
147
]
},
{
"tb": 128,
"tbk": 4,
"tl": 203861243,
"mb": 128,
"mbk": 4,
"gb": 128,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
1,
319,
320,
321,
322,
323,
324
]
},
{
"tb": 111104,
"tbk": 428,
"tl": 236540,
"mb": 16384,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
196,
325,
326,
327,
328,
329,
330,
331,
332
]
},
{
"tb": 96,
"tbk": 1,
"tl": 190,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
141,
142,
143,
333,
334
]
},
{
"tb": 268435456,
"tbk": 4,
"tl": 14360096,
"mb": 67108864,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
335,
336,
337,
338,
339,
340,
341,
342
]
},
{
"tb": 1536,
"tbk": 8,
"tl": 268,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
343,
344,
345,
346,
347,
348,
349,
350,
351
]
},
{
"tb": 256,
"tbk": 1,
"tl": 10914,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
155,
156,
157,
204,
205,
206,
352,
353,
354
]
},
{
"tb": 96,
"tbk": 1,
"tl": 196,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
141,
142,
143,
355,
334
]
},
{
"tb": 192,
"tbk": 4,
"tl": 2745962,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
61,
62,
63,
64,
356,
357,
358
]
},
{
"tb": 126976,
"tbk": 4,
"tl": 1731,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
17,
18,
19,
20,
21,
359
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 565,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
104,
105,
106,
107,
108,
360,
361
]
},
{
"tb": 6291456,
"tbk": 3,
"tl": 2582559,
"mb": 6291456,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
155,
156,
157,
158,
159,
160,
362,
124,
125,
126,
363
]
},
{
"tb": 7016,
"tbk": 42,
"tl": 147,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
7,
248,
249,
250,
251,
252,
253,
254,
361,
364
]
},
{
"tb": 1284,
"tbk": 4,
"tl": 42581,
"mb": 1284,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
176,
184,
185,
186,
187,
188,
189,
190,
365,
366
]
},
{
"tb": 1280,
"tbk": 8,
"tl": 2895611,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
17,
18,
19,
20,
21,
367
]
},
{
"tb": 96,
"tbk": 1,
"tl": 75,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
141,
142,
143,
368,
195
]
},
{
"tb": 64,
"tbk": 1,
"tl": 583442,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
88,
89,
90,
146,
369
]
},
{
"tb": 1792,
"tbk": 12,
"tl": 26081,
"mb": 1024,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
88,
89,
90,
370,
147
]
},
{
"tb": 7872,
"tbk": 8,
"tl": 208,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
371,
372,
373,
374,
375,
376
]
},
{
"tb": 320,
"tbk": 4,
"tl": 6297318,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
377,
378,
379,
380,
381,
382,
383,
384,
385
]
},
{
"tb": 128,
"tbk": 4,
"tl": 42563,
"mb": 128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
176,
184,
185,
186,
187,
188,
189,
190,
386,
366
]
},
{
"tb": 640,
"tbk": 4,
"tl": 106278,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
61,
62,
63,
64,
387,
388,
389
]
},
{
"tb": 512,
"tbk": 1,
"tl": 17,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
68,
69,
70,
71,
299,
390,
334
]
},
{
"tb": 256,
"tbk": 1,
"tl": 698,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
7,
75,
76,
77,
78,
79,
391,
392
]
},
{
"tb": 192,
"tbk": 8,
"tl": 12595745,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
111,
112,
113,
114,
115,
116,
117,
118,
393,
394
]
},
{
"tb": 8,
"tbk": 1,
"tl": 859597,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
7,
248,
249,
250,
251,
252,
253,
395,
128,
110
]
},
{
"tb": 20480,
"tbk": 4,
"tl": 17102,
"mb": 20480,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
68,
69,
70,
396,
397,
398,
49
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 3110,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
196,
399,
400,
401,
402,
403,
404,
405,
406
]
},
{
"tb": 72,
"tbk": 1,
"tl": 10693,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
407,
408,
409,
410,
411,
412,
413
]
},
{
"tb": 192,
"tbk": 1,
"tl": 2459,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
414,
415,
416,
417,
418,
419,
420,
421,
422
]
},
{
"tb": 512,
"tbk": 1,
"tl": 31,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
68,
69,
70,
423,
301,
214,
4
]
},
{
"tb": 992,
"tbk": 4,
"tl": 4371,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
235,
424,
425,
426,
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 72,
"tbk": 1,
"tl": 9251,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
434,
183,
110,
154,
435
]
},
{
"tb": 320,
"tbk": 1,
"tl": 51073552,
"mb": 320,
"mbk": 1,
"gb": 320,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
32,
436,
437,
438,
439,
440,
441,
442,
443,
444
]
},
{
"tb": 4194304,
"tbk": 4,
"tl": 739495,
"mb": 4194304,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
17,
18,
19,
20,
21,
445
]
},
{
"tb": 33554432,
"tbk": 4,
"tl": 14458437,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
68,
69,
70,
71,
72,
73,
446
]
},
{
"tb": 512,
"tbk": 1,
"tl": 5497435,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
447,
448,
449,
450,
110
]
},
{
"tb": 192,
"tbk": 1,
"tl": 15373,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
407,
451,
452,
453,
454,
455,
456,
110,
154
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
176,
184,
185,
186,
187,
188,
189,
457,
458,
459
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
460,
461,
462,
4,
5
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 25880,
"mb": 15872,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
68,
69,
70,
463,
464,
465,
195
]
},
{
"tb": 192,
"tbk": 1,
"tl": 50968847,
"mb": 192,
"mbk": 1,
"gb": 192,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
32,
466,
467,
468,
469,
470,
471,
287,
110
]
},
{
"tb": 6072,
"tbk": 11,
"tl": 4656,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
312,
313,
314,
472,
473,
474
]
},
{
"tb": 512,
"tbk": 1,
"tl": 18,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
68,
69,
70,
475,
301,
214,
4
]
},
{
"tb": 96,
"tbk": 1,
"tl": 555044,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
476,
477,
478,
479,
480,
481,
482,
483,
484
]
},
{
"tb": 24352,
"tbk": 123,
"tl": 683260,
"mb": 24352,
"mbk": 123,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
196,
197,
198,
199,
242,
485,
486,
464
]
},
{
"tb": 480,
"tbk": 4,
"tl": 210,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
104,
105,
106,
107,
108,
360,
487
]
},
{
"tb": 160,
"tbk": 1,
"tl": 7217,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
488,
489,
490,
491,
195
]
},
{
"tb": 41943040,
"tbk": 40,
"tl": 393319844,
"mb": 41943040,
"mbk": 40,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
155,
156,
157,
158,
159,
160,
362,
124,
125,
126,
492
]
},
{
"tb": 754974720,
"tbk": 1572864,
"tl": 15288280,
"mb": 1120,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
96,
97,
98,
99,
100,
493,
494,
495
]
},
{
"tb": 20480,
"tbk": 1,
"tl": 10687,
"mb": 20480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
176,
184,
185,
186,
187,
188,
189,
190,
496,
497
]
},
{
"tb": 4194304,
"tbk": 4,
"tl": 1644933,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
68,
69,
70,
71,
93,
94,
498
]
},
{
"tb": 96,
"tbk": 1,
"tl": 40315653,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
32,
499,
500,
501,
502,
503,
504,
505,
506,
507
]
},
{
"tb": 2048,
"tbk": 4,
"tl": 634,
"mb": 2048,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
68,
69,
70,
508,
334,
214,
4
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1749,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
104,
105,
106,
107,
108,
509,
181
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2139,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
43,
44,
45,
46,
510,
487,
145,
110
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1367,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
235,
424,
425,
426,
427,
428,
429,
430,
511,
433,
512
]
},
{
"tb": 96,
"tbk": 4,
"tl": 366,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
148,
149,
41,
208,
213,
214
]
},
{
"tb": 13568,
"tbk": 32,
"tl": 116570,
"mb": 13568,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
196,
197,
198,
199,
242,
485,
513,
514
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 78920,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
155,
156,
157,
158,
159,
160,
161,
515,
110
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1851,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
7,
516,
517,
518,
519,
520,
521,
522,
523
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 4087,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
68,
69,
70,
396,
397,
524,
514
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
176,
184,
185,
186,
187,
188,
189,
457,
525,
459
]
},
{
"tb": 16777344,
"tbk": 12,
"tl": 315604,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
68,
69,
70,
71,
299,
526,
527
]
},
{
"tb": 3632,
"tbk": 18,
"tl": 74,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
7,
248,
249,
250,
251,
252,
253,
254,
487,
145
]
},
{
"tb": 256,
"tbk": 1,
"tl": 8418,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
68,
69,
70,
396,
528,
529,
195
]
},
{
"tb": 192,
"tbk": 8,
"tl": 35502288,
"mb": 192,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
111,
112,
113,
114,
115,
116,
117,
118,
530,
531
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2134,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
196,
532,
533,
534,
535,
536,
487,
145
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
460,
461,
459,
287,
110,
154
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 564,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
17,
18,
19,
20,
21,
537
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4286,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
538,
539,
540,
541,
49
]
},
{
"tb": 2304,
"tbk": 8,
"tl": 199,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
542,
543,
544,
545,
546,
547,
548,
549,
550
]
},
{
"tb": 3840,
"tbk": 16,
"tl": 49,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
88,
89,
90,
551,
552
]
},
{
"tb": 32,
"tbk": 1,
"tl": 286,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
7,
553,
554,
555,
556,
557,
558,
559,
560
]
},
{
"tb": 251658240,
"tbk": 1572864,
"tl": 14045536,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
155,
156,
157,
204,
205,
206,
561,
494,
495
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 47,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
68,
69,
70,
71,
93,
94,
562
]
},
{
"tb": 192,
"tbk": 1,
"tl": 9838299,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
563,
564,
565,
566,
567,
568,
569,
570,
571
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1836,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
7,
572,
573,
574,
575,
576,
577,
578,
579
]
},
{
"tb": 128,
"tbk": 4,
"tl": 38,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
104,
580,
581,
582,
583,
584,
585,
586,
587,
588,
589
]
},
{
"tb": 103968,
"tbk": 228,
"tl": 66429,
"mb": 26448,
"mbk": 58,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
590,
591,
592,
593,
594,
595
]
},
{
"tb": 2880,
"tbk": 24,
"tl": 2564,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
104,
105,
106,
107,
108,
596,
79
]
},
{
"tb": 1280,
"tbk": 4,
"tl": 28250,
"mb": 1280,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
155,
156,
157,
158,
159,
160,
597,
598,
599
]
},
{
"tb": 3536,
"tbk": 34,
"tl": 543,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
235,
600,
601,
602,
603,
604,
605
]
},
{
"tb": 512,
"tbk": 8,
"tl": 12594749,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
606,
607,
608,
609,
610
]
},
{
"tb": 1284,
"tbk": 4,
"tl": 53,
"mb": 321,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
104,
580,
581,
582,
583,
584,
585,
586,
611,
588,
589
]
},
{
"tb": 384,
"tbk": 1,
"tl": 50968961,
"mb": 384,
"mbk": 1,
"gb": 384,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
32,
612,
613,
614,
615,
616,
617,
618,
619,
620
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 1471925,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
196,
197,
198,
199,
200,
621,
622,
623
]
},
{
"tb": 576,
"tbk": 4,
"tl": 1696,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
61,
62,
63,
64,
624,
625,
433
]
},
{
"tb": 192,
"tbk": 1,
"tl": 2505,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
626,
627,
628,
629,
630,
631,
632,
633,
634
]
},
{
"tb": 96,
"tbk": 1,
"tl": 10640766,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
635,
636,
637,
638,
639,
110,
154,
435
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 1714,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
17,
18,
19,
20,
21,
640
]
},
{
"tb": 64,
"tbk": 4,
"tl": 24,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
82,
83,
152,
153,
110,
154
]
},
{
"tb": 2400,
"tbk": 12,
"tl": 252,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
235,
641,
642,
643,
644,
645,
646
]
},
{
"tb": 192,
"tbk": 8,
"tl": 261,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
647,
648,
649,
650,
651,
652
]
},
{
"tb": 13601,
"tbk": 1,
"tl": 10680,
"mb": 13601,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
176,
184,
185,
186,
187,
188,
189,
190,
653,
497
]
},
{
"tb": 288,
"tbk": 12,
"tl": 242,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
654,
655,
656,
657,
658,
659,
660,
661,
662
]
},
{
"tb": 128,
"tbk": 8,
"tl": 6298836,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
663,
664,
665,
666,
667,
668,
669,
670
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 42418,
"mb": 15872,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
176,
184,
185,
186,
187,
188,
189,
190,
671,
192
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1860,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
7,
672,
673,
674,
675,
676,
677,
678,
679
]
},
{
"tb": 2992,
"tbk": 12,
"tl": 1362,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
235,
424,
680,
681,
682,
683,
684,
685,
686,
687
]
},
{
"tb": 503316480,
"tbk": 1572864,
"tl": 7627217,
"mb": 480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
155,
156,
157,
158,
159,
160,
161,
688,
494
]
},
{
"tb": 32,
"tbk": 1,
"tl": 39148267,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
32,
164,
689,
690,
691,
692,
693,
694,
695,
696
]
},
{
"tb": 73880,
"tbk": 39,
"tl": 46512,
"mb": 36992,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
25,
697,
698,
699,
700
]
},
{
"tb": 192,
"tbk": 4,
"tl": 29630,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
701,
163,
110,
154,
435
]
},
{
"tb": 64,
"tbk": 4,
"tl": 225,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
82,
151,
84,
212,
213,
214
]
},
{
"tb": 15360,
"tbk": 96,
"tl": 461,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
155,
156,
157,
158,
159,
160,
161,
702,
102
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 6146,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
25,
697,
698,
699,
703
]
},
{
"tb": 224,
"tbk": 1,
"tl": 10695,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
176,
184,
185,
186,
187,
188,
189,
190,
704,
705
]
},
{
"tb": 128,
"tbk": 4,
"tl": 36154,
"mb": 128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
319,
706,
707,
708,
709,
710
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2633,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
155,
156,
157,
204,
205,
206,
711,
195,
4
]
},
{
"tb": 2048,
"tbk": 4,
"tl": 656,
"mb": 2048,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
68,
69,
70,
712,
334,
214,
4
]
},
{
"tb": 512,
"tbk": 1,
"tl": 10,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
713,
714,
715,
716,
717,
718,
719,
720
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 50963053,
"mb": 2097152,
"mbk": 1,
"gb": 2097152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
68,
69,
70,
71,
93,
721,
722
]
},
{
"tb": 960,
"tbk": 4,
"tl": 39336664,
"mb": 960,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
51,
121,
122,
123,
124,
125,
126,
492,
723,
724
]
},
{
"tb": 16,
"tbk": 1,
"tl": 860282,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
155,
156,
157,
158,
159,
160,
725,
726,
727,
728,
729
]
},
{
"tb": 3072,
"tbk": 4,
"tl": 13995,
"mb": 3072,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
51,
730,
731,
732,
733,
734,
735,
736,
737
]
},
{
"tb": 8388608,
"tbk": 4,
"tl": 15593642,
"mb": 8388608,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
17,
18,
19,
20,
21,
738
]
},
{
"tb": 1248,
"tbk": 12,
"tl": 348,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
235,
600,
601,
602,
739,
740,
741
]
},
{
"tb": 512,
"tbk": 1,
"tl": 33,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
155,
156,
157,
158,
159,
160,
742,
334,
214
]
},
{
"tb": 64,
"tbk": 1,
"tl": 90,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
303,
743,
744,
745,
746,
747,
748,
749,
110,
154
]
},
{
"tb": 224,
"tbk": 1,
"tl": 8116,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
750,
751,
752,
753,
465
]
},
{
"tb": 160,
"tbk": 1,
"tl": 8953,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
196,
197,
198,
199,
242,
754,
244,
195
]
},
{
"tb": 128,
"tbk": 4,
"tl": 874,
"mb": 128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
755,
756,
757,
758,
759
]
},
{
"tb": 41943040,
"tbk": 40,
"tl": 2041310713,
"mb": 41943040,
"mbk": 40,
"gb": 41943040,
"gbk": 40,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
68,
69,
70,
71,
760,
761,
762
]
},
{
"tb": 128,
"tbk": 1,
"tl": 281,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
763,
764,
765,
766,
361
]
},
{
"tb": 32,
"tbk": 1,
"tl": 5,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
767,
768,
769,
770,
771,
772,
773,
774,
775
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
176,
184,
185,
186,
187,
188,
189,
457,
458,
462
]
},
{
"tb": 128,
"tbk": 4,
"tl": 419,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
155,
156,
157,
158,
159,
160,
776,
777,
778
]
},
{
"tb": 128,
"tbk": 4,
"tl": 17751100,
"mb": 128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
104,
105,
106,
107,
108,
779,
780
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2141,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
43,
44,
45,
46,
510,
255,
182,
183
]
},
{
"tb": 64,
"tbk": 4,
"tl": 305,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
17,
18,
19,
20,
21,
781
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 56209,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
155,
156,
157,
204,
205,
206,
782,
145,
110
]
},
{
"tb": 2952,
"tbk": 4,
"tl": 4355,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
43,
44,
45,
46,
510,
361,
364,
456
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 157021,
"mb": 1179648,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
68,
69,
70,
71,
783,
784,
785
]
},
{
"tb": 864,
"tbk": 1,
"tl": 50965345,
"mb": 864,
"mbk": 1,
"gb": 864,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
32,
786,
787,
788,
789,
790,
791,
792,
793,
794
]
},
{
"tb": 864,
"tbk": 1,
"tl": 9058,
"mb": 864,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
786,
795,
796,
797,
798,
799,
800,
801,
802
]
},
{
"tb": 72,
"tbk": 3,
"tl": 2580838,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
111,
112,
113,
114,
115,
116,
117,
118,
726,
727,
728,
729
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 4073,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
25,
697,
698,
699,
803
]
},
{
"tb": 20480,
"tbk": 1,
"tl": 3239,
"mb": 20480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
68,
69,
70,
396,
397,
804,
49
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2974,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
767,
768,
769,
770,
771,
772,
773,
774,
805
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2136,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
196,
532,
533,
534,
535,
536,
255,
182
]
},
{
"tb": 313111,
"tbk": 10,
"tl": 10819,
"mb": 166608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
25,
697,
698,
806,
807
]
},
{
"tb": 2736,
"tbk": 6,
"tl": 2758,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
590,
591,
592,
808,
809,
810
]
},
{
"tb": 384,
"tbk": 4,
"tl": 50,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
811,
812,
813,
814,
815,
816,
817,
818,
819
]
},
{
"tb": 256,
"tbk": 1,
"tl": 13,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
155,
156,
157,
158,
159,
160,
820,
456,
110
]
},
{
"tb": 13568,
"tbk": 32,
"tl": 96827,
"mb": 13568,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
196,
197,
198,
199,
242,
485,
48,
49
]
},
{
"tb": 288,
"tbk": 1,
"tl": 32718,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
821,
822,
823,
824,
785
]
},
{
"tb": 56,
"tbk": 1,
"tl": 2954,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
825,
50,
195,
4,
5
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 35321543,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
32,
196,
197,
198,
199,
200,
826,
495,
827
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 10753995,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
32,
196,
197,
198,
199,
200,
621,
622,
828
]
},
{
"tb": 33554432,
"tbk": 524288,
"tl": 22061946,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
829,
830,
831,
832,
833,
834,
835,
836,
837
]
},
{
"tb": 256,
"tbk": 4,
"tl": 135228,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
68,
69,
70,
71,
93,
94,
838
]
},
{
"tb": 80,
"tbk": 1,
"tl": 6499,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
68,
69,
70,
839,
840,
214,
4
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 860263,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
155,
156,
157,
158,
159,
160,
362,
124,
125,
126,
127
]
},
{
"tb": 192,
"tbk": 1,
"tl": 10656,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
841,
842,
843,
844,
413
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4843,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
845,
846,
847,
848,
849,
850,
851,
852
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 3718,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
196,
853,
854,
855,
856,
857,
858,
859,
860
]
},
{
"tb": 640,
"tbk": 4,
"tl": 9921,
"mb": 640,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
61,
62,
63,
64,
861,
66,
67
]
},
{
"tb": 144,
"tbk": 1,
"tl": 860293,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
811,
862,
863,
864,
727,
728,
729,
865,
128,
110
]
},
{
"tb": 96,
"tbk": 1,
"tl": 10640772,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
866,
867,
868,
869,
870,
110,
154,
435
]
},
{
"tb": 192,
"tbk": 8,
"tl": 402,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
871,
648,
649,
650,
651,
652
]
},
{
"tb": 128,
"tbk": 1,
"tl": 84,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
258,
872,
873,
874,
875,
876,
877,
878,
879
]
},
{
"tb": 128,
"tbk": 4,
"tl": 178,
"mb": 128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
68,
69,
70,
396,
880,
881,
195
]
},
{
"tb": 128,
"tbk": 4,
"tl": 348,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
34,
35,
36,
37,
38,
39,
40,
41,
208
]
},
{
"tb": 1280,
"tbk": 4,
"tl": 48,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
68,
69,
70,
396,
882,
881,
195
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 5163,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
176,
177,
178,
179,
883,
884,
145,
110
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4497,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
68,
69,
70,
885,
886,
214,
4
]
},
{
"tb": 64,
"tbk": 1,
"tl": 3,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
887,
888,
889,
890,
891,
892,
893,
894,
895
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 213559,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
196,
197,
198,
199,
200,
896,
897,
785
]
},
{
"tb": 384,
"tbk": 4,
"tl": 111,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
211,
84,
85,
86,
87,
110
]
},
{
"tb": 8388608,
"tbk": 524288,
"tl": 371673,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
155,
156,
157,
158,
159,
160,
898,
899,
900
]
},
{
"tb": 64,
"tbk": 4,
"tl": 2745941,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
61,
62,
63,
64,
901,
357,
358
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 138496,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
68,
69,
70,
71,
902,
903,
904
]
},
{
"tb": 128,
"tbk": 4,
"tl": 25612,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
905,
163,
110,
154,
435
]
},
{
"tb": 4608,
"tbk": 16,
"tl": 532,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
906,
907,
908,
909,
910
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3167,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
51,
121,
122,
123,
124,
125,
126,
285,
911,
182
]
},
{
"tb": 20480,
"tbk": 128,
"tl": 438283,
"mb": 20480,
"mbk": 128,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
155,
156,
157,
204,
205,
206,
912,
913,
914
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4489,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
915,
916,
917,
918,
919,
920,
921,
922
]
},
{
"tb": 4316,
"tbk": 28,
"tl": 4480122,
"mb": 2176,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
25,
697,
698,
806,
923
]
},
{
"tb": 96,
"tbk": 1,
"tl": 7257,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
924,
925,
926,
927,
181
]
},
{
"tb": 16777344,
"tbk": 12,
"tl": 313800,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
68,
69,
70,
71,
928,
527,
929
]
},
{
"tb": 64,
"tbk": 4,
"tl": 17751192,
"mb": 64,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
155,
156,
157,
158,
159,
160,
725,
119,
120
]
},
{
"tb": 256,
"tbk": 4,
"tl": 666,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
88,
89,
90,
256,
930
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 2516,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
335,
931,
932,
933,
934,
935,
936,
937,
938
]
},
{
"tb": 3968,
"tbk": 4,
"tl": 23274,
"mb": 3968,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
196,
532,
533,
534,
535,
939,
464,
465
]
},
{
"tb": 384,
"tbk": 8,
"tl": 35204327,
"mb": 384,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
51,
940,
941,
942,
943,
944,
945,
946,
947
]
},
{
"tb": 15872,
"tbk": 124,
"tl": 126,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
68,
69,
70,
396,
948,
464,
465
]
},
{
"tb": 256,
"tbk": 4,
"tl": 690,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
88,
89,
90,
949,
930
]
},
{
"tb": 64,
"tbk": 4,
"tl": 42835,
"mb": 64,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
176,
184,
185,
186,
187,
188,
189,
190,
950,
951
]
},
{
"tb": 256,
"tbk": 1,
"tl": 13,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
235,
424,
425,
426,
427,
428,
429,
430,
952,
456,
110
]
},
{
"tb": 256,
"tbk": 4,
"tl": 28412,
"mb": 256,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
88,
89,
90,
949,
257
]
},
{
"tb": 1280,
"tbk": 8,
"tl": 12595709,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
953,
954,
955,
956,
394
]
},
{
"tb": 2952,
"tbk": 4,
"tl": 22682,
"mb": 2952,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
43,
44,
45,
46,
47,
486,
464,
465
]
},
{
"tb": 96,
"tbk": 1,
"tl": 3995700,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
141,
142,
143,
957,
110
]
},
{
"tb": 6528,
"tbk": 34,
"tl": 14395,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
235,
236,
237,
238,
958,
959,
960
]
},
{
"tb": 96,
"tbk": 1,
"tl": 8111,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
141,
142,
143,
961,
465
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
176,
184,
185,
186,
187,
188,
189,
457,
525,
462
]
},
{
"tb": 32,
"tbk": 4,
"tl": 1645013,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
7,
75,
76,
77,
962,
963,
120,
110
]
},
{
"tb": 64,
"tbk": 4,
"tl": 237,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
82,
83,
84,
212,
213,
214
]
},
{
"tb": 9584640,
"tbk": 4,
"tl": 217276,
"mb": 9584640,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
68,
69,
70,
71,
964,
965,
785
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1843,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
7,
966,
967,
968,
969,
970,
971,
972,
973
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2530697,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
51,
974,
975,
976,
977,
978,
979,
980,
981
]
},
{
"tb": 96,
"tbk": 1,
"tl": 10640755,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
499,
982,
983,
984,
985,
110,
154,
435
]
},
{
"tb": 15872,
"tbk": 124,
"tl": 108,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
986,
987,
988,
989,
990,
991,
992,
993
]
},
{
"tb": 83886080,
"tbk": 524288,
"tl": 6290930,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
155,
156,
157,
204,
205,
206,
994,
494,
495
]
},
{
"tb": 288,
"tbk": 1,
"tl": 10653805,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
995,
996,
997,
998,
999,
1000,
1001,
1002,
1003
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1829,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
7,
1004,
1005,
1006,
1007,
1008,
1009,
1010,
1011
]
},
{
"tb": 5248,
"tbk": 36,
"tl": 15331,
"mb": 5120,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
155,
156,
157,
158,
159,
160,
362,
124,
125,
126,
285
]
},
{
"tb": 960,
"tbk": 8,
"tl": 17751130,
"mb": 768,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1012,
120,
110,
154,
435
]
},
{
"tb": 72,
"tbk": 1,
"tl": 861062,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
51,
121,
122,
123,
124,
125,
126,
363,
128,
110
]
},
{
"tb": 96,
"tbk": 1,
"tl": 583476,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
141,
142,
143,
318,
369
]
},
{
"tb": 192,
"tbk": 1,
"tl": 10624,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
407,
451,
452,
453,
454,
1013,
1014,
1015,
413
]
},
{
"tb": 3632,
"tbk": 18,
"tl": 549,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
7,
248,
249,
250,
251,
252,
253,
1016,
79,
1017
]
},
{
"tb": 512,
"tbk": 1,
"tl": 54,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
1018,
1019,
1020,
1021,
1022,
1023,
1024,
1025
]
},
{
"tb": 384,
"tbk": 1,
"tl": 10716,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
1026,
1027,
1028,
1029,
413
]
},
{
"tb": 7016,
"tbk": 42,
"tl": 1005,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
7,
248,
249,
250,
251,
252,
253,
1016,
79,
80
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 654,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
68,
69,
70,
71,
299,
1030,
625
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3720,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
43,
44,
45,
46,
47,
513,
514,
1031
]
},
{
"tb": 1792,
"tbk": 12,
"tl": 2333851,
"mb": 1024,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
88,
89,
90,
370,
369
]
},
{
"tb": 8388608,
"tbk": 4,
"tl": 3551196,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
68,
69,
70,
71,
902,
1032,
1033
]
},
{
"tb": 2097152,
"tbk": 4,
"tl": 1155036,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
68,
69,
70,
71,
93,
94,
1034
]
},
{
"tb": 256,
"tbk": 1,
"tl": 674,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
7,
75,
76,
77,
78,
79,
1017,
1035
]
},
{
"tb": 134217728,
"tbk": 1,
"tl": 24689287,
"mb": 134217728,
"mbk": 1,
"gb": 134217728,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
155,
156,
157,
158,
159,
160,
1036,
1037,
1038
]
},
{
"tb": 32,
"tbk": 1,
"tl": 3995688,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
104,
105,
106,
107,
108,
1039,
110
]
},
{
"tb": 12582720,
"tbk": 48,
"tl": 42102,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
88,
89,
90,
1040,
110
]
},
{
"tb": 64,
"tbk": 4,
"tl": 149567,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
61,
62,
63,
64,
1041,
153,
110
]
},
{
"tb": 536870912,
"tbk": 4,
"tl": 163202444,
"mb": 536870912,
"mbk": 4,
"gb": 536870912,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
32,
335,
336,
337,
338,
339,
1042,
1043,
1044
]
},
{
"tb": 64,
"tbk": 4,
"tl": 433,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
155,
156,
157,
158,
159,
160,
1045,
777,
778
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1360,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
155,
156,
157,
204,
205,
206,
1046,
433,
512
]
},
{
"tb": 192,
"tbk": 4,
"tl": 1838535,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1047,
1048,
1049,
1050,
1051,
1052
]
},
{
"tb": 24,
"tbk": 1,
"tl": 10676,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1053,
1054,
497,
413
]
},
{
"tb": 960,
"tbk": 4,
"tl": 204131866,
"mb": 960,
"mbk": 4,
"gb": 960,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
32,
51,
1055,
1056,
1057,
1058,
1059,
1060,
1061,
1062
]
},
{
"tb": 64,
"tbk": 4,
"tl": 434,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
82,
151,
84,
85,
86,
87
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 341116,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
155,
156,
157,
204,
205,
206,
1063,
1064,
110
]
},
{
"tb": 160,
"tbk": 1,
"tl": 39148328,
"mb": 160,
"mbk": 1,
"gb": 160,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
32,
1065,
1066,
1067,
1068,
1069,
1070,
1071,
1072,
1073
]
},
{
"tb": 96,
"tbk": 1,
"tl": 10640760,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
51,
1074,
1075,
1076,
1077,
110,
154,
435
]
},
{
"tb": 1312,
"tbk": 9,
"tl": 3857851,
"mb": 1312,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
1078,
1079,
1080,
1081,
1082,
1083,
1084,
1085
]
},
{
"tb": 256,
"tbk": 1,
"tl": 10585,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
176,
184,
185,
186,
187,
188,
189,
190,
1086,
1015
]
},
{
"tb": 3840,
"tbk": 16,
"tl": 2551,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
88,
89,
90,
1087,
1088
]
},
{
"tb": 216,
"tbk": 5,
"tl": 16094394,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
1089,
1090,
1091,
1092,
1093,
1094,
1095,
1096,
1097
]
},
{
"tb": 480,
"tbk": 4,
"tl": 245,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
104,
105,
106,
107,
108,
360,
255
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 196357,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
196,
197,
198,
199,
200,
621,
622,
1098
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 4717,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
276,
277,
278,
279,
1099
]
},
{
"tb": 96,
"tbk": 1,
"tl": 7129,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
1100,
1101,
1102,
1103,
214
]
},
{
"tb": 20480,
"tbk": 1,
"tl": 7289,
"mb": 20480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
176,
177,
178,
179,
1104,
181,
182,
183
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 3422,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
335,
336,
337,
338,
1105,
364,
456,
110
]
},
{
"tb": 960,
"tbk": 4,
"tl": 159498573,
"mb": 960,
"mbk": 4,
"gb": 960,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
32,
51,
1106,
1107,
1108,
1109,
1110,
1111,
1112,
1113
]
},
{
"tb": 96,
"tbk": 1,
"tl": 220963,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
141,
142,
143,
1114,
163
]
},
{
"tb": 384,
"tbk": 4,
"tl": 49,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
211,
152,
153,
110,
154,
435
]
},
{
"tb": 3456,
"tbk": 12,
"tl": 4994,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
235,
1115,
1116,
1117,
1118,
1119,
1120
]
},
{
"tb": 192,
"tbk": 1,
"tl": 7112,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
23,
24,
1121,
1122,
1123,
1124,
214
]
},
{
"tb": 1536,
"tbk": 4,
"tl": 6297927,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
1125,
1126,
1127,
1128,
1129,
1130,
1131,
1132,
1133
]
},
{
"tb": 3632,
"tbk": 18,
"tl": 558,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
6,
7,
248,
249,
250,
251,
252,
253,
1016,
79,
391
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 50965119,
"mb": 524288,
"mbk": 1,
"gb": 524288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
68,
69,
70,
71,
93,
1134,
1135
]
},
{
"tb": 33554432,
"tbk": 16,
"tl": 69542557,
"mb": 33554432,
"mbk": 16,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
68,
69,
70,
71,
1136,
1137,
1138
]
},
{
"tb": 8388608,
"tbk": 4,
"tl": 1630192,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
60,
1139,
1140,
1141,
1142,
1143,
1144,
1145,
1146
]
},
{
"tb": 3968,
"tbk": 4,
"tl": 4336,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
196,
532,
533,
534,
535,
536,
361,
364
]
}
],
"ftbl": [
"[root]",
"0x6173a38b6937: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x6173a3a3cd16: <examples::do_work::air::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (src/do_work/air.rs:13:9)",
"0x6173a39dc718: winter_verifier::verify (verifier/src/lib.rs:97:38)",
"0x6173a383bd99: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:118:9)",
"0x6173a36949d5: winterfell::main (examples/src/main.rs:83:11)",
"0x6173a3da0899: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x6173a3d0d0aa: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a3b23637: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b23637: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b23637: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3b23637: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc6ade: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bbf4b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a3809d0e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3a58e32: winter_prover::Prover::generate_proof (prover/src/lib.rs:286:23)",
"0x6173a3e1c6cc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x6173a3e1ad9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x6173a3e1bcf8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x6173a3e1bcf8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x6173a3e18964: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x6173a3e18c13: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x6173a3c83e40: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x6173a3e1eb79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x6173a3e1d319: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x6173a3e1dab0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x6173a3e1dd18: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x6173a3e1f00a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x6173a3e1f00a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x6173a3e1edae: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x6173a3e1edae: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x6173a3e1ee9d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x6173a38b74a9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x6173a39792fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a3c80776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3c80776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3c80776: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x6173a3ba93b9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x6173a3ba93b9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x6173a3ba93b9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x6173a3ca5846: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x6173a3adec22: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:348:9)",
"0x6173a3c5763b: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:50:13)",
"0x6173a397ee8c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a3b38966: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b38966: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b38966: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a39bdc9d: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x6173a3c11152: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x6173a387e583: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x6173a3890fa8: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x6173a397c9fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a3af3141: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3af3141: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3af3141: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3af3141: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc5f9b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bba346: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a380888b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3a584e3: winter_prover::Prover::generate_proof (prover/src/lib.rs:209:39)",
"0x6173a39800ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a385d9f5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a385d9f5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a385d9f5: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x6173a3ba7bf4: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x6173a387bc8d: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x6173a39d9869: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:214:32)",
"0x6173a381e603: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x6173a3b38736: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b38736: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b38736: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a38c4e7b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x6173a3be21ab: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x6173a3be1696: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x6173a3a764e4: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:691:36)",
"0x6173a3ce8656: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3ce8656: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3ce8656: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a39c1d1c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x6173a3bceb5e: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x6173a387853c: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x6173a3aacbf6: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x6173a3bf5e95: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x6173a3a3d0bd: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:61:13)",
"0x6173a3ade985: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:364:13)",
"0x6173a395b670: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:40:22)",
"0x6173a3c576e7: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:13)",
"0x6173a3a5cb32: winter_prover::Prover::generate_proof (prover/src/lib.rs:403:21)",
"0x6173a39af122: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x6173a39bc6b9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x6173a3b90d91: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x6173a3c8795b: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x6173a3a8e9cc: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x6173a38b9393: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x6173a3a89018: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x6173a3a36f48: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x6173a3ba7ebb: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3ba7ebb: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3ba7ebb: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3ba7ebb: <[V] as alloc::slice::Concat<T>>::concat (alloc/src/slice.rs:712:26)",
"0x6173a3ba7cab: alloc::slice::<impl [T]>::concat (alloc/src/slice.rs:561:9)",
"0x6173a3a96199: winter_prover::trace::commitment::build_segment_queries::{{closure}}::{{closure}} (src/trace/commitment.rs:164:27)",
"0x6173a3914019: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x6173a3a94736: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:159:13)",
"0x6173a3db2799: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x6173a3dadb39: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x6173a3d10830: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x6173a3d12899: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x6173a3ced451: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x6173a3a5c808: winter_prover::Prover::generate_proof (prover/src/lib.rs:440:13)",
"0x6173a3a79cd4: winter_prover::Prover::prove (prover/src/lib.rs:171:37)",
"0x6173a397fe4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a385d2ec: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a385d2ec: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a385d2ec: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x6173a3ba9f19: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x6173a3ba9f19: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x6173a3ba9f19: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x6173a3c225d6: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x6173a3c5858d: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:33)",
"0x6173a3a5cbd3: winter_prover::Prover::generate_proof (prover/src/lib.rs:407:21)",
"0x6173a3b37856: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b37856: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b37856: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x6173a3ba91f9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x6173a3ba91f9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x6173a3ba91f9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x6173a3a31d29: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x6173a3a59583: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:33)",
"0x6173a3bedbc2: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x6173a3a8b240: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x6173a3c01bb1: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x6173a3977b7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a3b19f11: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b19f11: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b19f11: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3b19f11: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc43db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bb9d46: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a3808acb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3a9cc0e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x6173a39a8972: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x6173a39bca19: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x6173a3b92402: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x6173a3ca96eb: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x6173a3a5bbc5: winter_prover::Prover::generate_proof (prover/src/lib.rs:598:34)",
"0x6173a3adf08d: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:540:13)",
"0x6173a39d313b: winter_verifier::perform_verification (verifier/src/lib.rs:263:61)",
"0x6173a3c219a3: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x6173a3ca582c: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x6173a3bff312: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x6173a3a3d12c: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:62:13)",
"0x6173a38be0ab: winter_prover::trace::Trace::validate (src/trace/mod.rs:122:26)",
"0x6173a3a5cf21: winter_prover::Prover::generate_proof (prover/src/lib.rs:370:17)",
"0x6173a383b2b2: <examples::do_work::DoWorkExample<H> as examples::Example>::prove (src/do_work/mod.rs:108:9)",
"0x6173a385d41c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a385d41c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a385d41c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x6173a3ba8939: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x6173a3ba8939: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x6173a3ba8939: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x6173a3b36097: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x6173a3bfeea2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x6173a3a5a868: winter_prover::Prover::generate_proof (prover/src/lib.rs:514:9)",
"0x6173a397d70a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a3b22ba1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b22ba1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b22ba1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3b22ba1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc5b3b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bbd0b6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a38096cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3a58c5d: winter_prover::Prover::generate_proof (prover/src/lib.rs:266:43)",
"0x6173a3a2e723: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:200:34)",
"0x6173a381db0a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x6173a38f11bf: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x6173a3e1d5ca: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a3b38556: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b38556: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b38556: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3c06c60: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x6173a3a92bd9: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x6173a3a9ccb4: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x6173a3a5bace: winter_prover::Prover::generate_proof (prover/src/lib.rs:593:29)",
"0x6173a3e1ebbc: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3e1ebbc: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3e1ebbc: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x6173a3e1f7fc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x6173a3e1f7fc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x6173a3e1f7fc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x6173a3e1ce2c: <winter_utils::serde::byte_reader::SliceReader as winter_utils::serde::byte_reader::ByteReader>::read_vec (src/serde/byte_reader.rs:151:22)",
"0x6173a3dbdf46: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:365:21)",
"0x6173a3dbd3d6: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:146:27)",
"0x6173a3e18d9e: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x6173a38907d0: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x6173a39dc907: winter_verifier::verify (verifier/src/lib.rs:108:19)",
"0x6173a397aa9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a3b38916: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b38916: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b38916: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a38c4fbb: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x6173a3bdb7a5: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x6173a3a768e7: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:706:26)",
"0x6173a3a5a110: winter_prover::Prover::generate_proof (prover/src/lib.rs:472:37)",
"0x6173a385d93c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x6173a385d93c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x6173a385d93c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x6173a3ca5983: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x6173a3c5164a: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:25:25)",
"0x6173a389227d: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x6173a3a88833: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x6173a3a3d08f: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:60:9)",
"0x6173a3c51b4c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:63:9)",
"0x6173a39d4247: winter_verifier::perform_verification (verifier/src/lib.rs:223:43)",
"0x6173a39dc9d2: winter_verifier::verify (verifier/src/lib.rs:110:21)",
"0x6173a39aa712: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x6173a39bc149: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x6173a3b93122: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x6173a3a92c91: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x6173a3a8f4f8: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x6173a393f499: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x6173a3afd227: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3afd227: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3afd227: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3afd227: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc323e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bbad47: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a380bbee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3aad10f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x6173a3bf902b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x6173a3bf8681: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x6173a3a0c12b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x6173a39e18bd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x6173a38aaf89: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x6173a3a86a00: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x6173a3dcc739: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x6173a3dd8b7b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x6173a3dd85f1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x6173a3dd4bbb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x6173a3dce66d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x6173a3dc9538: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x6173a3dc7dd7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x6173a3a8c7e9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x6173a39587fb: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x6173a3890e38: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x6173a38b89cb: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x6173a382532c: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x6173a3a8e954: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x6173a3d1e6ac: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3d1e6ac: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3d1e6ac: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x6173a3cef4a9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x6173a3cef4a9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x6173a3cef4a9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x6173a3bcca2c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x6173a3a92b07: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x6173a3ae5bb8: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:510:13)",
"0x6173a39d29d9: winter_verifier::perform_verification (verifier/src/lib.rs:183:13)",
"0x6173a398451c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a3b2af17: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b2af17: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b2af17: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3b2af17: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc4b2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bba147: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a3809a9e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3a58416: winter_prover::Prover::generate_proof (prover/src/lib.rs:205:38)",
"0x6173a397a2bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a3b32ffe: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b32ffe: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b32ffe: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3b32ffe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x6173a3bc443b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bbbb76: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a3c5d10b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a388a01c: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x6173a3dcada0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x6173a3dc65f9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x6173a3dc55a1: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x6173a3dc5eb0: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x6173a3aaca4e: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x6173a3dbca1e: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:168:21)",
"0x6173a3db7e38: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:176:34)",
"0x6173a3a8f01f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x6173a3946f5f: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x6173a3b36067: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x6173a3944a1e: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x6173a3a58656: winter_prover::Prover::generate_proof (prover/src/lib.rs:228:27)",
"0x6173a397a55c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a3b241c7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b241c7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b241c7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3b241c7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc306e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bb82c7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a395642e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3a5879f: winter_prover::Prover::generate_proof (prover/src/lib.rs:243:41)",
"0x6173a3dbc862: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:164:22)",
"0x6173a3c8700c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x6173a38b8f42: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x6173a3bd73d9: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x6173a39d3cbe: winter_verifier::perform_verification (verifier/src/lib.rs:314:25)",
"0x6173a39d36c1: winter_verifier::perform_verification (verifier/src/lib.rs:295:27)",
"0x6173a397f66c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a3aedc21: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3aedc21: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3aedc21: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3aedc21: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc43ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bb7ac6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a380c01b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3a5a6a3: winter_prover::Prover::generate_proof (prover/src/lib.rs:495:52)",
"0x6173a3bf8ccb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x6173a3bf8471: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x6173a3a0cf0b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x6173a3a05451: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x6173a3a0b77d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x6173a39ff10e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x6173a3adf239: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:536:13)",
"0x6173a3a3ce42: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::new (src/do_work/air.rs:35:23)",
"0x6173a3874bb0: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:221:17)",
"0x6173a381f922: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x6173a3c4e4dd: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::SpecFold>::spec_fold (iter/adapters/zip.rs:685:25)",
"0x6173a3c3aee7: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::fold (iter/adapters/zip.rs:249:9)",
"0x6173a3c259b7: <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/zip.rs:103:9)",
"0x6173a3b06666: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b06666: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b06666: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3b06666: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x6173a3bc2b6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bbb5dc: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a3bca9be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3bccedb: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x6173a3bd489e: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x6173a39d3c0f: winter_verifier::perform_verification (verifier/src/lib.rs:308:25)",
"0x6173a3984a5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a3b38b46: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b38b46: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b38b46: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a38c4d3b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x6173a3c83e2b: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x6173a3bda76a: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x6173a3821c7a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x6173a397c4bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a3b2f4c8: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b2f4c8: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b2f4c8: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3b2f4c8: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x6173a3bc672e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bbd407: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a3ca617e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3ae9e5c: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x6173a3ca1c0e: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x6173a3c9f104: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x6173a3a5b38b: winter_prover::Prover::generate_proof (prover/src/lib.rs:561:9)",
"0x6173a3bd4848: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x6173a3c54f6c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:148:31)",
"0x6173a3c589e0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:122:17)",
"0x6173a3938436: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x6173a3c7e08f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x6173a3bccf53: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x6173a3c8b274: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x6173a3b37bc3: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x6173a3a31c8c: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x6173a3c9e152: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x6173a3dc15bd: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:151:28)",
"0x6173a3db8178: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:29)",
"0x6173a3c8701d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x6173a38923ef: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x6173a3941428: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x6173a3adf2c9: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:534:17)",
"0x6173a3bf9dab: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x6173a3bf87e1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x6173a3a0c4eb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x6173a39e179d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x6173a38aa0fc: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x6173a38a7911: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x6173a398427c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a3af5557: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3af5557: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3af5557: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3af5557: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3ba379d: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x6173a3bbf21c: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a380b4ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3a3b82a: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x6173a3dc1784: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:155:27)",
"0x6173a38bb87b: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:235:25)",
"0x6173a3c86a62: examples::do_work::prover::build_do_work_trace (src/do_work/prover.rs:65:5)",
"0x6173a3a7a668: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces::{{closure}} (src/do_work/prover.rs:32:27)",
"0x6173a3bd3853: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x6173a388c2ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x6173a39d3810: winter_verifier::perform_verification (verifier/src/lib.rs:302:9)",
"0x6173a395df72: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:169:36)",
"0x6173a395bf30: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:54:17)",
"0x6173a3a31d84: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x6173a385b909: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x6173a3c234cb: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x6173a3c11524: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x6173a3b1e2f0: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b1e2f0: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b1e2f0: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3b1e2f0: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x6173a3bc25bb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bbdda6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a3809dbb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3c11075: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x6173a3dbe709: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x6173a3dbf75c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a3dc2726: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3dc2726: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3dc2726: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3db7d52: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:172:33)",
"0x6173a36948fd: winterfell::main (examples/src/main.rs:80:24)",
"0x6173a3981dbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a3af03c1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3af03c1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3af03c1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3af03c1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc59db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bb8d06: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a380aeab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a39d2d9f: winter_verifier::perform_verification (verifier/src/lib.rs:216:40)",
"0x6173a3bd71a4: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x6173a3dca8ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a3dc6b6c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3dc6b6c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3dc6b6c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x6173a3dc662c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x6173a3dc662c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x6173a3dc662c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x6173a3dc66b6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x6173a3aacb2b: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x6173a3adc73c: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x6173a3a9cc1d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x6173a3693d4d: winterfell::main (examples/src/main.rs:49:17)",
"0x6173a397e94c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a3af2ae7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3af2ae7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3af2ae7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3af2ae7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc453e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bbed37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a380ad4e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3a7a619: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces (src/do_work/prover.rs:30:9)",
"0x6173a3bff2ef: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x6173a38758e9: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:641:17)",
"0x6173a39aac02: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x6173a39bbcc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x6173a3b95d48: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x6173a3a5cbf6: winter_prover::Prover::generate_proof (prover/src/lib.rs:408:17)",
"0x6173a3dbf4bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a3dc2776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3dc2776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3dc2776: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3c9dbcd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x6173a3a5ba4f: winter_prover::Prover::generate_proof (prover/src/lib.rs:590:25)",
"0x6173a3a8edf4: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x6173a3a8eb12: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x6173a3944a03: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x6173a3c8682c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x6173a3a8eb58: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x6173a39dc5a9: winter_verifier::verify (verifier/src/lib.rs:95:32)",
"0x6173a3968d7b: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x6173a397039c: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x6173a389160c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x6173a397b51c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a3bed2be: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3bed2be: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3bed2be: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x6173a3ba7b77: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x6173a3944c58: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x6173a39e6d31: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x6173a39ea477: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x6173a39df1bb: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x6173a3bd71bf: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x6173a398523c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a3b22977: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b22977: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b22977: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3b22977: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc365e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bb7517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a380860e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3a5a5d6: winter_prover::Prover::generate_proof (prover/src/lib.rs:491:51)",
"0x6173a39bdf24: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x6173a396904d: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x6173a3ca9495: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x6173a39ab5e2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x6173a39bc209: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x6173a3b960e2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x6173a389249b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x6173a3a317be: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x6173a3be0527: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:228:37)",
"0x6173a3bdd903: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x6173a3a6e3dd: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:659:26)",
"0x6173a3dbcd02: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:348:22)",
"0x6173a3db7e53: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:174:32)",
"0x6173a3a3883e: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x6173a397f90c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a3b07f91: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b07f91: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b07f91: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3b07f91: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc2edb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bbc626: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a38084ab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3a6dba6: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:630:42)",
"0x6173a3bd3bf3: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x6173a3c0710a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x6173a3bcc6ff: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x6173a3aac1a5: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x6173a39d3e15: winter_verifier::perform_verification (verifier/src/lib.rs:320:5)",
"0x6173a3c19ca7: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x6173a38a577b: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x6173a3a59c77: winter_prover::Prover::generate_proof (prover/src/lib.rs:442:35)",
"0x6173a3b24c51: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b24c51: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b24c51: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3b24c51: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc2f6b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bbda96: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a380a53b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3890a47: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x6173a3c19a9a: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x6173a3a8ead6: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x6173a3a34d04: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x6173a3a31fbc: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x6173a3973fee: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x6173a389142b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x6173a395abd9: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:82:31)",
"0x6173a3830553: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x6173a3a8cf58: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3a8cf58: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3a8cf58: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x6173a3ba7c17: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x6173a3bcc698: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x6173a3c7e450: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x6173a39b8f22: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x6173a39bbfc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x6173a3b95aaf: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x6173a3c115d9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x6173a3981b1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a3b0a7cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b0a7cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b0a7cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3b0a7cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x6173a3bc586e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bb7947: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a3808e8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3ae8bf6: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x6173a3beb835: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x6173a39411d0: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x6173a3af46b1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3af46b1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3af46b1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3af46b1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc271b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bbbe16: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a380b23b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a387e409: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x6173a3be03df: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:226:50)",
"0x6173a3ca1ab6: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x6173a397691c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a3b00dc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b00dc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b00dc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3b00dc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3ba26b3: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x6173a3bb7bc9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a380a01e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3a58f62: winter_prover::Prover::generate_proof (prover/src/lib.rs:291:36)",
"0x6173a3af8911: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3af8911: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3af8911: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3af8911: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc3f1b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bbf516: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a380920b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3890bd7: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x6173a3dade7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a3d1e57c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3d1e57c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3d1e57c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x6173a3ceecc9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x6173a3ceecc9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x6173a3ceecc9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x6173a3adde3f: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x6173a3bed1f6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x6173a3891c48: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x6173a3bf96eb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x6173a3bf8891: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x6173a3a0bf4b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x6173a39f7d8f: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x6173a3a03711: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x6173a39fecaa: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x6173a39c3191: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x6173a38a6e22: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x6173a393c5c4: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x6173a3c5cd04: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x6173a3dd8d2b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x6173a3dd8751: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x6173a3dd4adb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x6173a3dd176e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x6173a3dd3220: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x6173a3dd2428: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x6173a398f982: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x6173a39bbc39: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x6173a3b94a51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x6173a3a346c9: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x6173a393830d: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x6173a3adde2a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x6173a3975c0c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a3b17b31: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b17b31: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b17b31: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3b17b31: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc50ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bb95a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a380ae5b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3944967: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x6173a3bcbe5d: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x6173a3bcf406: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x6173a3bdb866: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x6173a3c7e184: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x6173a3aad010: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x6173a3976bbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a3aff991: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3aff991: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3aff991: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3aff991: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc537b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bbaed6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a380878b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a39d2cd2: winter_verifier::perform_verification (verifier/src/lib.rs:212:41)",
"0x6173a39847bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a3b38876: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b38876: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b38876: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3a58fc9: winter_prover::Prover::generate_proof (prover/src/lib.rs:299:44)",
"0x6173a3c7e103: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x6173a3dd881b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x6173a3dd8541: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x6173a3dd4d7b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x6173a3dcf3a1: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x6173a3dcfb37: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x6173a3dca6db: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x6173a3c2141a: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x6173a3ae95ae: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x6173a38a789d: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x6173a3ae8cce: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x6173a3aeb6c6: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x6173a3ade9ea: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:362:9)",
"0x6173a3dbcec9: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:352:21)",
"0x6173a3976e5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a3b22771: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b22771: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b22771: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3b22771: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc30cb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bbc9c6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a38090cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3a33e5a: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x6173a3b1cee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b1cee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b1cee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3b1cee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc2dde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bb9c57: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a380c47e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3c21994: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x6173a3dbddc4: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:361:22)",
"0x6173a3b2a451: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b2a451: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b2a451: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3b2a451: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc37db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bb8136: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a380965b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a389097f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x6173a3dcb1a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3dcb1a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3dcb1a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3dcb1a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x6173a3dcb5ee: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3dcb5b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a3dcc84e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3dca299: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x6173a3be0476: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:228:38)",
"0x6173a3b0f781: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b0f781: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b0f781: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3b0f781: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc4dab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bb9306: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a380909b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3a6dc73: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:634:36)",
"0x6173a3e1dce9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x6173a3e1ef12: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x6173a39bf564: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x6173a3964175: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x6173a3bff580: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x6173a3a9611b: winter_prover::trace::commitment::build_segment_queries::{{closure}}::{{closure}} (src/trace/commitment.rs:162:42)",
"0x6173a3c06a51: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x6173a3dc12bd: <winter_air::proof::commitments::Commitments as winter_utils::serde::Deserializable>::read_from (src/proof/commitments.rs:108:22)",
"0x6173a3db7bdc: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:167:27)",
"0x6173a39dd8d1: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:101:85)",
"0x6173a382e432: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x6173a394ac0a: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:107:27)",
"0x6173a3867bff: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x6173a39489a4: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:113:9)",
"0x6173a3891cae: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x6173a3bd3bd0: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x6173a3b0e877: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b0e877: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b0e877: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3b0e877: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc370e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bbf317: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a380bace: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3bd7532: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x6173a3a9feb0: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x6173a3a588ba: winter_prover::Prover::generate_proof (prover/src/lib.rs:257:22)",
"0x6173a3a2ff17: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x6173a386f5ac: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:293:57)",
"0x6173a3c225ed: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x6173a3c22440: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x6173a3ba9039: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x6173a3ba9039: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x6173a3ba9039: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x6173a3af95b7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3af95b7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3af95b7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3af95b7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc2b0e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bbaa37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a380a2be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3a92c76: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x6173a3a36ca7: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x6173a3dce6cd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x6173a3dc984b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x6173a3dc7f13: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x6173a3bd3693: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x6173a3b37e1c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b37e1c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b37e1c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x6173a3ba8e79: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x6173a3ba8e79: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x6173a3ba8e79: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x6173a3a5a6be: winter_prover::Prover::generate_proof (prover/src/lib.rs:500:39)",
"0x6173a39a9842: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x6173a39bc419: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x6173a3b91ba2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x6173a397057e: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x6173a39589d0: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x6173a386eb09: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:211:31)",
"0x6173a3825d3a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x6173a39160a8: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x6173a37ef3ba: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x6173a380f63a: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x6173a38bc511: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:132:51)",
"0x6173a381ea1a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x6173a3c61da5: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x6173a39a0912: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x6173a39bc119: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x6173a3b9194f: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x6173a3bccd8a: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x6173a397cf3a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a3aee15e: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3aee15e: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3aee15e: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3aee15e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x6173a3bc421e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bb9957: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a3c5076e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3bd3755: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:144:35)",
"0x6173a38ad23f: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x6173a38ad307: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x6173a39d4156: winter_verifier::perform_verification (verifier/src/lib.rs:225:13)",
"0x6173a3a3cb27: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x6173a3a3a8cd: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x6173a3c517eb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:39:30)",
"0x6173a3ca96d0: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x6173a3c1c5d7: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x6173a3c91e0b: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x6173a3c9f1b2: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x6173a397a01c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a3b087f7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b087f7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b087f7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3b087f7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc4b7e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bbef39: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a38090ee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3a58603: winter_prover::Prover::generate_proof (prover/src/lib.rs:217:20)",
"0x6173a3b0cee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b0cee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b0cee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3b0cee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3b9cbcf: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x6173a3bba849: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a3809e5e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a39dc784: winter_verifier::verify (verifier/src/lib.rs:101:24)",
"0x6173a3c159fc: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x6173a3c10d42: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x6173a3bfef64: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:142:33)",
"0x6173a3e1dd49: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x6173a3dc3d7a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x6173a39e19dd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x6173a38aa83f: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x6173a3a866c3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x6173a3983a9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a3b1d111: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b1d111: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b1d111: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3b1d111: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc29fb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bbbcc6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a380a86b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a395aa5c: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:82:9)",
"0x6173a3c9dc96: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x6173a39b3152: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x6173a39bc389: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x6173a3b94ff2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x6173a3c91f89: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x6173a387e6f1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x6173a3bdd872: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x6173a3a58c88: winter_prover::Prover::generate_proof (prover/src/lib.rs:268:13)",
"0x6173a3bdd940: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x6173a39822fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a3aff135: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3aff135: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3aff135: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3aff135: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x6173a3bc310e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bb8737: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a3808cce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3be01b0: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:218:46)",
"0x6173a3c1c51a: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x6173a3ad8d61: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x6173a39d333e: winter_verifier::perform_verification (verifier/src/lib.rs:272:24)",
"0x6173a3dc0502: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x6173a3dc1179: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x6173a3dc2ae2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x6173a3db8916: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:13)",
"0x6173a3af7197: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3af7197: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3af7197: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3af7197: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc5f6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bb7599: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a380ac6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3bd8e47: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x6173a3b21f40: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b21f40: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b21f40: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3b21f40: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x6173a3bc414b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bbb8a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a380827b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3c19bca: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x6173a387bcb0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x6173a3c220c6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3c220c6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3c220c6: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x6173a3a31ca3: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x6173a397983c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a3b38786: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b38786: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b38786: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3a58f85: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:39)",
"0x6173a3c21299: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x6173a3b30907: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b30907: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b30907: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3b30907: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc3fde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bbd627: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a380893e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a383bd54: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:112:30)",
"0x6173a3bec8ce: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x6173a3892185: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x6173a3bec6fb: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x6173a3c158e0: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x6173a3ca965e: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x6173a3bd0af6: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x6173a39d3d3a: winter_verifier::perform_verification (verifier/src/lib.rs:316:28)",
"0x6173a37a5149: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x6173a37a3c19: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x6173a37a2030: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x6173a37a2298: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x6173a37a1b5a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x6173a37a1b5a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x6173a36966a1: alloc::string::String::reserve (alloc/src/string.rs:1152:9)",
"0x6173a36966a1: <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend (alloc/src/string.rs:2173:14)",
"0x6173a369677c: <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter (alloc/src/string.rs:2093:9)",
"0x6173a38c21f6: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x6173a3c91c8f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x6173a3ca4cb7: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x6173a3c56a27: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:272:18)",
"0x6173a3c55297: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:166:30)",
"0x6173a3c54fd0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:149:33)",
"0x6173a38ba47b: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x6173a3c1c42f: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x6173a3c1c504: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x6173a3bff6ec: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x6173a399dca2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x6173a39bc539: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x6173a3b94b42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x6173a3bc7ffc: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x6173a3ae8d4a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x6173a3a92a53: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x6173a3a95078: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x6173a382e61a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x6173a38e6e45: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x6173a3afe777: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3afe777: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3afe777: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3afe777: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc32de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bbf697: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a380bb8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3aac131: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x6173a3beb6ed: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x6173a3996622: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x6173a39bc839: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x6173a3b95252: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x6173a3c06db8: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x6173a3a34be1: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x6173a3a37211: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x6173a3942484: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x6173a3af39a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3af39a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3af39a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3af39a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc571e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bb8517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a380a37e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3aacf51: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x6173a3968d36: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x6173a3af6317: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3af6317: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3af6317: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3af6317: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc406e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bbf587: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a380847e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3a33c6a: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x6173a3968f3a: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x6173a3ae5c93: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:505:13)",
"0x6173a3dc2118: <winter_air::proof::context::Context as winter_utils::serde::Deserializable>::read_from (src/proof/context.rs:184:35)",
"0x6173a3db7bf7: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:27)",
"0x6173a3c9dc77: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x6173a3994392: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x6173a39bba59: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x6173a3b90b42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x6173a395e0d9: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:174:17)",
"0x6173a3a5c7ad: winter_prover::Prover::generate_proof (prover/src/lib.rs:438:13)",
"0x6173a3dd187e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x6173a3dd2c4c: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x6173a3dd1d8a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x6173a3970629: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x6173a3a387d0: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x6173a3c58819: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:129:9)",
"0x6173a38c5303: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x6173a3c91c25: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x6173a3af6541: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3af6541: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3af6541: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3af6541: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc490b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bba276: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a380a45b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3890b0f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x6173a3b2b9a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b2b9a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b2b9a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3b2b9a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc63de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bbd4c9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a380bede: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a38b85e0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x6173a3b38466: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b38466: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b38466: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3a59051: winter_prover::Prover::generate_proof (prover/src/lib.rs:301:32)",
"0x6173a3b0f107: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b0f107: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b0f107: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3b0f107: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc44fe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bbe4b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a380b86e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3ad4d8f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x6173a3be026a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x6173a397b7bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a3b28b27: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b28b27: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b28b27: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3b28b27: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3ba1b76: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x6173a3bbbba7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a380ad6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3a99d5b: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x6173a3b189d1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b189d1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b189d1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3b189d1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc4cfb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bbd026: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a380b64b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3890c9f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x6173a3c584c0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:28)",
"0x6173a3dbd2b9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x6173a3dbd70b: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:211:22)",
"0x6173a3db815d: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:188:24)",
"0x6173a39c1f79: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x6173a388cd3c: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x6173a3b05187: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b05187: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b05187: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3b05187: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc629e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bbae27: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a38087ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3bd395b: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x6173a3dc0012: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x6173a3dc11a9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x6173a3dc2878: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x6173a3db8c1a: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:13)",
"0x6173a3c7e3fb: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x6173a389123c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x6173a3a348b6: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x6173a3a3876c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x6173a3a2e210: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:197:28)",
"0x6173a39d398e: winter_verifier::perform_verification (verifier/src/lib.rs:303:42)",
"0x6173a3be44a2: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x6173a3be3147: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x6173a3a6ddf7: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:645:31)",
"0x6173a3a5c7ed: winter_prover::Prover::generate_proof (prover/src/lib.rs:439:13)",
"0x6173a3a5c665: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:17)",
"0x6173a38be598: winter_prover::trace::Trace::validate (src/trace/mod.rs:177:13)",
"0x6173a3be2c77: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x6173a3bdac8c: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x6173a3be17bc: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x6173a38ad22a: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x6173a3aac214: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x6173a3a9ea92: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x6173a38754c6: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:493:32)",
"0x6173a382b09a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x6173a38f82a2: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x6173a37f6c9b: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x6173a3813906: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x6173a3dbe187: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x6173a3dbcfed: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:357:24)",
"0x6173a3b0c787: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b0c787: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b0c787: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3b0c787: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc367e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bba807: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a380c71e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a38bc33a: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:132:32)",
"0x6173a3a8881d: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x6173a3a5af26: winter_prover::Prover::generate_proof (prover/src/lib.rs:548:13)",
"0x6173a3984f9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a3b02d37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b02d37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b02d37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3b02d37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc426e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bb76a7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a3809dde: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3a6dd43: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:638:34)",
"0x6173a3b38cd6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b38cd6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b38cd6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3a5900d: winter_prover::Prover::generate_proof (prover/src/lib.rs:300:37)",
"0x6173a3af17e7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3af17e7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3af17e7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3af17e7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc573e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bbb7f7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a380c32e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3a2dd13: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:253:9)",
"0x6173a3dbd8d2: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:215:25)",
"0x6173a3aa2a48: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x6173a3aacdda: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x6173a3978dbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a3b1c127: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b1c127: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b1c127: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3b1c127: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc301e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bb96b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a380bfae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3bd9e38: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x6173a3c91caa: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x6173a3c9de9d: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x6173a39b4022: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x6173a39bc9e9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x6173a3b93842: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x6173a39d4673: winter_verifier::perform_verification (verifier/src/lib.rs:177:9)",
"0x6173a3c06782: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x6173a3c8b35d: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x6173a3b16f37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b16f37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b16f37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3b16f37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc62be: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bbf2d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a38094de: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3a2e2c4: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:198:23)",
"0x6173a3bff810: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x6173a3dd89cb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x6173a3dd86a1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x6173a3dd4c9b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x6173a3dcf471: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x6173a3dcfaf7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x6173a3dca72b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x6173a399d7b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x6173a39bbd89: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x6173a3b91f32: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x6173a39d448c: winter_verifier::perform_verification (verifier/src/lib.rs:182:9)",
"0x6173a397e40c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x6173a3b0dbc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3b0dbc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3b0dbc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3b0dbc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc3a9e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bbec79: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a380994e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a395b77a: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:50:26)",
"0x6173a3a88151: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x6173a3a9fdf3: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x6173a3a33db1: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x6173a38234aa: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x6173a3c63a05: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x6173a3afb727: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x6173a3afb727: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x6173a3afb727: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x6173a3afb727: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x6173a3bc55de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x6173a3bbb507: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x6173a380bcfe: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x6173a3a35277: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)"
]
}