{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell do-work -n 1 -l 65536",
"pid": 22247,
"tg": 6483689,
"te": 11345620,
"pps": [
{
"tb": 5120,
"tbk": 1,
"tl": 5518,
"mb": 5120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9
]
},
{
"tb": 96,
"tbk": 1,
"tl": 13,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
15,
16
]
},
{
"tb": 1079,
"tbk": 7,
"tl": 907127,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
18,
19,
20,
21,
22
]
},
{
"tb": 256,
"tbk": 1,
"tl": 8458,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
23,
24,
25,
26,
27,
28,
29,
30,
31
]
},
{
"tb": 240,
"tbk": 1,
"tl": 6551075,
"mb": 240,
"mbk": 1,
"gb": 240,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
34,
35,
36,
37,
38,
39,
40,
41
]
},
{
"tb": 10485760,
"tbk": 10,
"tl": 39274040,
"mb": 10485760,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
53
]
},
{
"tb": 96,
"tbk": 1,
"tl": 14,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
54,
55,
56,
57,
58,
59,
60,
61,
62
]
},
{
"tb": 16,
"tbk": 1,
"tl": 130,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
63,
64,
65,
66,
67,
68
]
},
{
"tb": 16,
"tbk": 1,
"tl": 150,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
43,
44,
45,
46,
47,
48,
69,
70,
71
]
},
{
"tb": 32,
"tbk": 1,
"tl": 52,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
72,
73,
74,
75,
76,
77,
78,
79,
80
]
},
{
"tb": 109824,
"tbk": 423,
"tl": 234264,
"mb": 16384,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
81,
82,
83,
84,
85,
86,
87,
88,
89
]
},
{
"tb": 24,
"tbk": 1,
"tl": 4748275,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
90,
91,
92,
93,
94,
14,
15,
16
]
},
{
"tb": 2016,
"tbk": 4,
"tl": 3185,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
95,
96,
97,
98,
99,
100,
101,
102
]
},
{
"tb": 16,
"tbk": 1,
"tl": 904455,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
103,
104,
105,
106,
107,
108,
109,
110,
111
]
},
{
"tb": 256,
"tbk": 1,
"tl": 14,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
43,
44,
45,
46,
47,
48,
112,
113,
14
]
},
{
"tb": 96,
"tbk": 1,
"tl": 11312077,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
32,
114,
115,
116,
117,
118,
119,
120,
121,
122
]
},
{
"tb": 16,
"tbk": 1,
"tl": 666786,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
123,
124,
125,
126,
127,
128,
129
]
},
{
"tb": 64,
"tbk": 1,
"tl": 6606,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
130,
131,
132,
133,
134
]
},
{
"tb": 64,
"tbk": 1,
"tl": 201,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
130,
131,
132,
133,
135
]
},
{
"tb": 8,
"tbk": 1,
"tl": 423612,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
136,
137,
138,
139,
140,
141,
142,
143,
14
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1769676,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
144,
145,
146,
147,
148,
149,
150,
151,
152,
143
]
},
{
"tb": 144,
"tbk": 1,
"tl": 200324,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
54,
153,
154,
155,
156,
157,
158,
159,
160,
14
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 4351,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
18,
19,
20,
161,
162
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
23,
24,
25,
26,
27,
28,
163,
164,
165
]
},
{
"tb": 6992,
"tbk": 42,
"tl": 158,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
136,
137,
166,
167,
168,
169,
170,
171,
172,
173,
174
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1726,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
136,
137,
175,
176,
177,
178,
179,
180,
181,
182
]
},
{
"tb": 320,
"tbk": 1,
"tl": 19,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
183,
184,
185,
186,
187,
188,
189
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 7589,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
190,
191,
192,
193,
194
]
},
{
"tb": 84864,
"tbk": 1645,
"tl": 958590,
"mb": 16960,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
18,
195,
196,
197,
198,
199,
200
]
},
{
"tb": 960,
"tbk": 4,
"tl": 17,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
130,
131,
132,
201,
202
]
},
{
"tb": 32,
"tbk": 1,
"tl": 8319,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
81,
203,
204,
205,
206,
207,
208,
189
]
},
{
"tb": 73880,
"tbk": 39,
"tl": 34312,
"mb": 36992,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
18,
19,
20,
161,
209
]
},
{
"tb": 448,
"tbk": 3,
"tl": 6390,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
130,
131,
132,
210,
211
]
},
{
"tb": 32,
"tbk": 1,
"tl": 8505,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
23,
24,
25,
26,
27,
28,
29,
212,
213
]
},
{
"tb": 40,
"tbk": 1,
"tl": 6262790,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
32,
214,
215,
216,
217,
218,
219,
220,
221,
222
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1769648,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
223,
224,
225,
226,
227,
228,
229
]
},
{
"tb": 96,
"tbk": 1,
"tl": 7536,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
230,
231,
232,
233,
234
]
},
{
"tb": 10485760,
"tbk": 10,
"tl": 64222017,
"mb": 10485760,
"mbk": 10,
"gb": 10485760,
"gbk": 10,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
43,
44,
45,
46,
47,
48,
235,
236,
237
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1976,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
238,
239,
240,
241,
242,
243,
244,
245,
246
]
},
{
"tb": 448,
"tbk": 3,
"tl": 364232,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
130,
131,
132,
210,
247
]
},
{
"tb": 240,
"tbk": 1,
"tl": 3929062,
"mb": 240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
248,
249,
250,
50,
51,
52,
53,
251,
252
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 159145,
"mb": 1179648,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
183,
184,
185,
253,
254,
255,
256
]
},
{
"tb": 96,
"tbk": 1,
"tl": 364228,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
230,
231,
232,
257,
247
]
},
{
"tb": 160,
"tbk": 1,
"tl": 6586,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
258,
259,
260,
261,
262,
263,
264,
265,
266
]
},
{
"tb": 576,
"tbk": 2,
"tl": 52,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
267,
268,
269,
270,
271,
272,
273,
274,
275
]
},
{
"tb": 256,
"tbk": 1,
"tl": 663,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
136,
137,
138,
139,
140,
276,
277,
278,
279
]
},
{
"tb": 512,
"tbk": 1,
"tl": 10,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
280,
281,
282,
283,
284,
285,
286,
287
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
63,
64,
12,
13,
14,
15
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 577,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
223,
224,
225,
226,
227,
288,
173
]
},
{
"tb": 8,
"tbk": 1,
"tl": 6262750,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
32,
289,
290,
291,
292,
293,
294,
295,
296,
297
]
},
{
"tb": 16,
"tbk": 1,
"tl": 35,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
103,
298,
299,
300,
301,
302,
303,
304,
14,
15
]
},
{
"tb": 2400,
"tbk": 12,
"tl": 245,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
305,
306,
307,
308,
309,
310,
311
]
},
{
"tb": 480,
"tbk": 4,
"tl": 6360,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
223,
224,
225,
226,
227,
312,
313
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1569157,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
43,
44,
45,
314,
315,
316,
317,
318,
319
]
},
{
"tb": 4194336,
"tbk": 3,
"tl": 79658,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
183,
184,
185,
253,
320,
321,
322
]
},
{
"tb": 2097152,
"tbk": 2,
"tl": 4259278,
"mb": 2097152,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
43,
44,
45,
314,
315,
316,
323,
324,
325
]
},
{
"tb": 384,
"tbk": 3,
"tl": 762,
"mb": 384,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
326,
327,
328,
329,
173
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2201,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
81,
330,
331,
332,
333,
334,
335,
336
]
},
{
"tb": 32,
"tbk": 1,
"tl": 70,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
72,
337,
338,
339,
340,
341,
342,
343,
344
]
},
{
"tb": 512,
"tbk": 1,
"tl": 18,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
183,
184,
185,
345,
346,
347,
348
]
},
{
"tb": 24,
"tbk": 1,
"tl": 4748269,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
349,
350,
351,
352,
353,
14,
15,
16
]
},
{
"tb": 5120,
"tbk": 32,
"tl": 77126,
"mb": 5120,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
43,
44,
45,
314,
315,
316,
354,
355,
356
]
},
{
"tb": 384,
"tbk": 2,
"tl": 83,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
357,
358,
359,
360,
361,
362,
363,
364,
365
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1769673,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
43,
44,
45,
46,
47,
48,
366,
152,
143
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1711,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
136,
137,
367,
368,
369,
370,
371,
372,
373,
374
]
},
{
"tb": 5120,
"tbk": 1,
"tl": 2763,
"mb": 5120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
183,
184,
185,
186,
375,
376,
377
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1957,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
378,
379,
380,
381,
382,
383,
384,
385,
386
]
},
{
"tb": 16128,
"tbk": 4,
"tl": 33918,
"mb": 16128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
23,
24,
25,
26,
27,
28,
29,
387,
388
]
},
{
"tb": 256,
"tbk": 4,
"tl": 136955,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
183,
184,
185,
253,
389,
390,
391
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4558,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
183,
184,
185,
392,
393,
347,
348
]
},
{
"tb": 192,
"tbk": 1,
"tl": 8499,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
394,
395,
396,
397,
398,
399,
400,
31,
401
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 3626856,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
183,
184,
185,
253,
402,
403,
404
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2131377,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
405,
406,
407,
408,
409,
410,
411,
412
]
},
{
"tb": 512,
"tbk": 1,
"tl": 51,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
413,
414,
415,
416,
417,
418,
419,
420
]
},
{
"tb": 320,
"tbk": 2,
"tl": 3138033,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
421,
422,
423,
424,
425
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 423595,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
183,
184,
185,
253,
389,
390,
426
]
},
{
"tb": 480,
"tbk": 4,
"tl": 221,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
223,
224,
225,
226,
227,
288,
427
]
},
{
"tb": 240,
"tbk": 2,
"tl": 1769656,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
428,
143,
14,
15,
16
]
},
{
"tb": 480,
"tbk": 4,
"tl": 219,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
223,
224,
225,
226,
227,
288,
335
]
},
{
"tb": 192,
"tbk": 1,
"tl": 12268,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
394,
395,
396,
397,
398,
429,
113,
14,
15
]
},
{
"tb": 8,
"tbk": 1,
"tl": 199968,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
136,
137,
166,
167,
168,
169,
170,
171,
430,
160,
14
]
},
{
"tb": 3608,
"tbk": 18,
"tl": 79,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
136,
137,
166,
167,
168,
169,
170,
171,
172,
335,
336
]
},
{
"tb": 32,
"tbk": 1,
"tl": 139,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
431,
432,
433,
434,
435,
436
]
},
{
"tb": 1008,
"tbk": 4,
"tl": 4433,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
305,
437,
438,
439,
440,
441,
442,
443,
444,
445,
446
]
},
{
"tb": 320,
"tbk": 2,
"tl": 703634,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
447,
448,
449,
450,
451,
452,
453
]
},
{
"tb": 167591,
"tbk": 10,
"tl": 8652,
"mb": 86064,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
18,
19,
20,
21,
454
]
},
{
"tb": 96,
"tbk": 1,
"tl": 6618,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
455,
456,
457,
458,
347
]
},
{
"tb": 80,
"tbk": 1,
"tl": 11336843,
"mb": 80,
"mbk": 1,
"gb": 80,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
32,
459,
460,
461,
462,
463,
464,
465,
466,
467
]
},
{
"tb": 80,
"tbk": 1,
"tl": 1568875,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
468,
469,
470,
471,
472,
473,
474,
475,
476
]
},
{
"tb": 16,
"tbk": 1,
"tl": 200314,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
43,
44,
45,
46,
47,
48,
366,
477,
156,
157,
158
]
},
{
"tb": 96,
"tbk": 1,
"tl": 2941435,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
230,
231,
232,
478,
14
]
},
{
"tb": 256,
"tbk": 1,
"tl": 12,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
305,
437,
438,
439,
440,
441,
442,
443,
479,
113,
14
]
},
{
"tb": 13472,
"tbk": 32,
"tl": 84083,
"mb": 13472,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
81,
203,
204,
205,
206,
480,
481,
377
]
},
{
"tb": 24,
"tbk": 1,
"tl": 200303,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
248,
249,
250,
50,
51,
52,
482,
160,
14
]
},
{
"tb": 72,
"tbk": 1,
"tl": 8535,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
394,
483,
484,
485,
486,
487,
401
]
},
{
"tb": 64,
"tbk": 1,
"tl": 6610,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
130,
131,
132,
488,
134
]
},
{
"tb": 134217728,
"tbk": 1,
"tl": 2635364,
"mb": 134217728,
"mbk": 1,
"gb": 134217728,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
43,
44,
45,
46,
47,
48,
489,
490,
491
]
},
{
"tb": 72,
"tbk": 3,
"tl": 600934,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
144,
145,
146,
147,
148,
149,
150,
151,
477,
156,
157,
158
]
},
{
"tb": 32,
"tbk": 1,
"tl": 8379,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
492,
493,
494,
495,
496,
497
]
},
{
"tb": 16128,
"tbk": 126,
"tl": 126,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
183,
184,
185,
186,
498,
499,
234
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 1169996,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
81,
203,
204,
205,
500,
501,
502,
503
]
},
{
"tb": 321,
"tbk": 1,
"tl": 13,
"mb": 321,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
223,
504,
505,
506,
507,
508,
509,
510,
511,
512,
513
]
},
{
"tb": 16,
"tbk": 1,
"tl": 82,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
63,
64,
65,
514,
515,
347
]
},
{
"tb": 3608,
"tbk": 18,
"tl": 541,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
136,
137,
166,
167,
168,
169,
170,
171,
516,
277,
278
]
},
{
"tb": 72,
"tbk": 1,
"tl": 6221,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
517,
9,
14,
15,
16
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4741,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
518,
519,
520,
521,
522,
523,
524,
525
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 47,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
183,
184,
185,
253,
389,
390,
526
]
},
{
"tb": 6992,
"tbk": 42,
"tl": 980,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
136,
137,
166,
167,
168,
169,
170,
171,
516,
277,
527
]
},
{
"tb": 32,
"tbk": 2,
"tl": 1569340,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
528,
529,
530,
531,
532,
533,
534,
535
]
},
{
"tb": 160,
"tbk": 1,
"tl": 1965,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
123,
124,
125,
126,
536,
537,
538
]
},
{
"tb": 16,
"tbk": 1,
"tl": 106,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
447,
448,
449,
450,
451,
452,
539
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 346828,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
43,
44,
45,
314,
315,
316,
540,
541,
14
]
},
{
"tb": 72,
"tbk": 3,
"tl": 66,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
542,
543,
544,
545,
546,
547,
548,
549,
550
]
},
{
"tb": 288,
"tbk": 1,
"tl": 31836,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
551,
552,
553,
554,
256
]
},
{
"tb": 8,
"tbk": 1,
"tl": 211,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
136,
137,
555,
556,
557,
558,
559,
560,
561,
562
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1697,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
136,
137,
563,
564,
565,
566,
567,
568,
569,
570
]
},
{
"tb": 16128,
"tbk": 4,
"tl": 1736,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
447,
448,
449,
450,
451,
452,
571
]
},
{
"tb": 48,
"tbk": 2,
"tl": 3138042,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
144,
145,
146,
147,
148,
149,
150,
151,
572,
425
]
},
{
"tb": 16,
"tbk": 1,
"tl": 132,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
63,
573,
65,
66,
67,
68
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 1770397,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
183,
184,
185,
253,
402,
403,
574
]
},
{
"tb": 4032,
"tbk": 4,
"tl": 4221,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
81,
330,
331,
332,
333,
334,
173,
174
]
},
{
"tb": 2976,
"tbk": 12,
"tl": 1360,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
305,
437,
575,
576,
577,
578,
579,
580,
581,
582
]
},
{
"tb": 96,
"tbk": 1,
"tl": 41,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
65,
66,
67,
68,
14
]
},
{
"tb": 224,
"tbk": 1,
"tl": 8538,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
23,
24,
25,
26,
27,
28,
29,
583,
584
]
},
{
"tb": 56,
"tbk": 1,
"tl": 2553,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
585,
586,
189,
348,
587
]
},
{
"tb": 32,
"tbk": 1,
"tl": 19,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
183,
184,
185,
186,
588,
188,
189
]
},
{
"tb": 13505,
"tbk": 1,
"tl": 8513,
"mb": 13505,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
23,
24,
25,
26,
27,
28,
29,
589,
590
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 289958,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
43,
44,
45,
46,
47,
48,
591,
592,
593
]
},
{
"tb": 512,
"tbk": 1,
"tl": 16,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
183,
184,
185,
253,
320,
594,
346
]
},
{
"tb": 512,
"tbk": 1,
"tl": 31,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
183,
184,
185,
595,
346,
347,
348
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2709,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
596,
597,
598,
599,
600,
481,
377,
586
]
},
{
"tb": 16128,
"tbk": 4,
"tl": 656,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
183,
184,
185,
253,
320,
601,
602
]
},
{
"tb": 96,
"tbk": 1,
"tl": 30,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
230,
231,
232,
603,
604
]
},
{
"tb": 160,
"tbk": 1,
"tl": 6636,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
605,
606,
607,
608,
189
]
},
{
"tb": 24,
"tbk": 1,
"tl": 144330,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
609,
610,
611,
612,
613,
614,
615,
616,
617
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 902046,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
183,
184,
185,
253,
618,
619,
620
]
},
{
"tb": 48,
"tbk": 1,
"tl": 144318,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
621,
622,
623,
624,
625,
626
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 74165,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
447,
448,
449,
450,
451,
452,
627
]
},
{
"tb": 16,
"tbk": 1,
"tl": 11312061,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
23,
24,
25,
26,
27,
28,
628,
629,
630
]
},
{
"tb": 6291456,
"tbk": 3,
"tl": 602253,
"mb": 6291456,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
631
]
},
{
"tb": 320,
"tbk": 1,
"tl": 6645,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
43,
44,
45,
46,
47,
48,
591,
632,
189
]
},
{
"tb": 2097152,
"tbk": 131072,
"tl": 70601,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
43,
44,
45,
46,
47,
48,
633,
634,
635
]
},
{
"tb": 192,
"tbk": 1,
"tl": 8500,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
636,
637,
638,
639,
401
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2524,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
640,
641,
642,
643,
644,
645,
646,
647,
648
]
},
{
"tb": 96,
"tbk": 1,
"tl": 53,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
230,
231,
232,
649,
593
]
},
{
"tb": 32,
"tbk": 1,
"tl": 122,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
650,
651,
652,
653,
654,
655,
656,
657,
318,
658
]
},
{
"tb": 96,
"tbk": 1,
"tl": 6386,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
230,
231,
232,
257,
211
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 3240,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
81,
659,
660,
661,
662,
663,
664,
665,
666
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
431,
667,
348,
587
]
},
{
"tb": 216,
"tbk": 1,
"tl": 8386,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
668,
669,
670,
671,
672,
673,
674,
675,
676
]
},
{
"tb": 96,
"tbk": 1,
"tl": 2346,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
677,
678,
679,
680,
8
]
},
{
"tb": 321,
"tbk": 1,
"tl": 8508,
"mb": 321,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
23,
24,
25,
26,
27,
28,
29,
681,
213
]
},
{
"tb": 32,
"tbk": 1,
"tl": 9,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
223,
504,
505,
506,
507,
508,
509,
510,
682,
512,
513
]
},
{
"tb": 3840,
"tbk": 16,
"tl": 2623,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
130,
131,
132,
683,
684
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 346110,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
183,
184,
185,
253,
389,
390,
685
]
},
{
"tb": 512,
"tbk": 1,
"tl": 200694,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
686,
687,
688,
689,
14
]
},
{
"tb": 1968,
"tbk": 2,
"tl": 62,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
690,
691,
692,
693,
694,
695
]
},
{
"tb": 72,
"tbk": 1,
"tl": 201013,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
248,
249,
250,
50,
51,
52,
631,
160,
14
]
},
{
"tb": 48,
"tbk": 2,
"tl": 120,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
696,
697,
698,
699,
700,
701
]
},
{
"tb": 72,
"tbk": 1,
"tl": 4752596,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
702,
703,
704,
705,
706,
707,
708,
709,
710
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 286062,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
183,
184,
185,
253,
389,
390,
711
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
712,
713,
165,
714,
14,
15
]
},
{
"tb": 48,
"tbk": 1,
"tl": 7522,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
715,
593,
14,
15,
16
]
},
{
"tb": 2928,
"tbk": 4,
"tl": 4243,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
596,
597,
598,
599,
716,
173,
174,
113
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 3417,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
717,
718,
336,
14
]
},
{
"tb": 96,
"tbk": 1,
"tl": 23,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
65,
514,
515,
347,
348
]
},
{
"tb": 16,
"tbk": 1,
"tl": 6,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
63,
573,
12,
13,
14,
15
]
},
{
"tb": 9584640,
"tbk": 4,
"tl": 220861,
"mb": 9584640,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
183,
184,
185,
253,
719,
720,
256
]
},
{
"tb": 256,
"tbk": 1,
"tl": 680,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
136,
137,
138,
139,
140,
276,
277,
721,
722
]
},
{
"tb": 512,
"tbk": 1,
"tl": 25,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
43,
44,
45,
46,
47,
48,
723,
604,
347
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4550,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
724,
725,
726,
727,
728,
729,
730,
731
]
},
{
"tb": 240,
"tbk": 1,
"tl": 11336828,
"mb": 240,
"mbk": 1,
"gb": 240,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
732,
733,
734,
735,
736,
737,
738,
739
]
},
{
"tb": 1152,
"tbk": 4,
"tl": 160,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
740,
741,
742,
743,
744
]
},
{
"tb": 134217728,
"tbk": 2,
"tl": 4660454,
"mb": 67108864,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
447,
448,
449,
450,
451,
452,
745
]
},
{
"tb": 48,
"tbk": 2,
"tl": 3539318,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
144,
145,
146,
147,
148,
149,
150,
151,
746,
747
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 200094,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
482
]
},
{
"tb": 24,
"tbk": 1,
"tl": 6552978,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
32,
748,
749,
750,
751,
752,
753,
754,
755,
756
]
},
{
"tb": 224,
"tbk": 1,
"tl": 7540,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
757,
758,
759,
760,
234
]
},
{
"tb": 13800,
"tbk": 25,
"tl": 6550,
"mb": 3864,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
761,
762,
763,
764,
765,
766
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 7366540,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
32,
81,
203,
204,
205,
500,
767,
768,
769
]
},
{
"tb": 6072,
"tbk": 11,
"tl": 4545,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
761,
762,
763,
770,
771,
772
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 1066839,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
81,
203,
204,
205,
500,
773,
774,
775
]
},
{
"tb": 24,
"tbk": 1,
"tl": 150,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
776,
777,
778,
779,
780,
781,
782,
783
]
},
{
"tb": 160,
"tbk": 1,
"tl": 8310,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
81,
203,
204,
205,
206,
784,
208,
189
]
},
{
"tb": 160,
"tbk": 1,
"tl": 26535,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
123,
124,
125,
126,
785,
786,
787
]
},
{
"tb": 5152,
"tbk": 33,
"tl": 72768,
"mb": 5120,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
43,
44,
45,
46,
47,
48,
49,
50,
51,
52,
788
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 57972,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
43,
44,
45,
314,
315,
316,
789,
336,
14
]
},
{
"tb": 8,
"tbk": 1,
"tl": 20,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
136,
137,
790,
791,
792,
793,
794,
795,
796,
797
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 140346,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
183,
184,
185,
253,
618,
798,
799
]
},
{
"tb": 64,
"tbk": 1,
"tl": 364222,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
130,
131,
132,
800,
247
]
},
{
"tb": 3456,
"tbk": 12,
"tl": 4958,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
305,
801,
802,
803,
804,
805,
806
]
},
{
"tb": 16128,
"tbk": 4,
"tl": 23528,
"mb": 16128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
183,
184,
185,
807,
499,
234,
189
]
},
{
"tb": 5120,
"tbk": 1,
"tl": 5508,
"mb": 5120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
808,
7,
8,
9
]
},
{
"tb": 2880,
"tbk": 24,
"tl": 2504,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
223,
224,
225,
226,
227,
809,
277
]
},
{
"tb": 128,
"tbk": 1,
"tl": 3661,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
810,
811,
812,
813,
377
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2060,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
43,
44,
45,
314,
315,
316,
814,
189,
348
]
},
{
"tb": 512,
"tbk": 1,
"tl": 18,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
183,
184,
185,
253,
320,
815,
604
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 4852833,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
32,
81,
203,
204,
205,
500,
773,
774,
816
]
},
{
"tb": 24318,
"tbk": 4,
"tl": 33902,
"mb": 24318,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
23,
24,
25,
26,
27,
28,
29,
817,
388
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 419663,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
818,
819,
820,
821,
822,
823,
824,
825
]
},
{
"tb": 129024,
"tbk": 4,
"tl": 1779,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
447,
448,
449,
450,
451,
452,
826
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 77444,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
183,
184,
185,
253,
389,
390,
827
]
},
{
"tb": 10485760,
"tbk": 10,
"tl": 113366459,
"mb": 10485760,
"mbk": 10,
"gb": 10485760,
"gbk": 10,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
183,
184,
185,
253,
828,
829,
830
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 3140796,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
447,
448,
449,
450,
451,
452,
831
]
},
{
"tb": 24,
"tbk": 1,
"tl": 127,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
832,
833,
318,
658,
515,
347
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2351,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
248,
249,
250,
50,
51,
52,
788,
834,
8
]
},
{
"tb": 5120,
"tbk": 1,
"tl": 3675,
"mb": 5120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
183,
184,
185,
186,
375,
835,
377
]
},
{
"tb": 16,
"tbk": 1,
"tl": 117,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
43,
44,
45,
314,
315,
316,
317,
318,
658
]
},
{
"tb": 96,
"tbk": 2,
"tl": 3461778,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
836,
837,
838,
839,
840,
841,
842,
843
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1402,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
43,
44,
45,
314,
315,
316,
844,
446,
845
]
},
{
"tb": 128,
"tbk": 2,
"tl": 3137781,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
846,
847,
848,
849,
850
]
},
{
"tb": 320,
"tbk": 2,
"tl": 703644,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
447,
448,
449,
450,
451,
452,
851
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1704,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
136,
137,
852,
853,
854,
855,
856,
857,
858,
859
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1569171,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
832,
833,
318,
319,
68,
14
]
},
{
"tb": 1088,
"tbk": 2,
"tl": 43,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
860,
861,
862,
863,
864,
865
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2141,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
596,
597,
598,
599,
716,
427,
8,
9
]
},
{
"tb": 896,
"tbk": 6,
"tl": 8411,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
130,
131,
132,
866,
867
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
23,
24,
25,
26,
27,
28,
163,
868,
165
]
},
{
"tb": 16128,
"tbk": 126,
"tl": 116,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
869,
870,
871,
872,
873,
874,
875,
876
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 74291,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
447,
448,
449,
450,
451,
452,
877
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1813,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
230,
231,
232,
878,
336
]
},
{
"tb": 13505,
"tbk": 1,
"tl": 8525,
"mb": 13505,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
23,
24,
25,
26,
27,
28,
29,
879,
880
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2941422,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
223,
224,
225,
226,
227,
881,
14
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 317,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
43,
44,
45,
46,
47,
48,
591,
882,
14
]
},
{
"tb": 96,
"tbk": 1,
"tl": 5498,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
883,
884,
885,
886,
7
]
},
{
"tb": 32,
"tbk": 1,
"tl": 6572,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
887,
593,
14,
15,
16
]
},
{
"tb": 16,
"tbk": 1,
"tl": 11309595,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
32,
888,
889,
890,
891,
892,
893,
894,
895,
896
]
},
{
"tb": 134217728,
"tbk": 1,
"tl": 7426907,
"mb": 134217728,
"mbk": 1,
"gb": 134217728,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
32,
897,
898,
899,
900,
901,
902,
903,
904
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 11309563,
"mb": 524288,
"mbk": 1,
"gb": 524288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
183,
184,
185,
253,
389,
905,
906
]
},
{
"tb": 352,
"tbk": 3,
"tl": 344811,
"mb": 352,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
907,
908,
909,
910,
911,
912,
913,
914
]
},
{
"tb": 3608,
"tbk": 18,
"tl": 539,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
136,
137,
166,
167,
168,
169,
170,
171,
516,
277,
721
]
},
{
"tb": 16,
"tbk": 1,
"tl": 84,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
63,
573,
65,
514,
515,
347
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 11307521,
"mb": 2097152,
"mbk": 1,
"gb": 2097152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
183,
184,
185,
253,
389,
915,
916
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1569165,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
650,
651,
652,
653,
654,
655,
656,
657,
318,
319
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
23,
24,
25,
26,
27,
28,
163,
164,
917
]
},
{
"tb": 160,
"tbk": 1,
"tl": 1969,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
123,
124,
125,
126,
918,
537,
538
]
},
{
"tb": 16,
"tbk": 1,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
23,
24,
25,
26,
27,
28,
628,
919,
189
]
},
{
"tb": 32,
"tbk": 1,
"tl": 147,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
43,
44,
45,
46,
47,
48,
920,
70,
71
]
},
{
"tb": 48,
"tbk": 2,
"tl": 79,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
921,
697,
698,
699,
700,
701
]
},
{
"tb": 24,
"tbk": 1,
"tl": 8521,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
922,
923,
880,
401
]
},
{
"tb": 83886080,
"tbk": 524288,
"tl": 530491,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
43,
44,
45,
314,
315,
316,
924,
925,
768
]
},
{
"tb": 256,
"tbk": 1,
"tl": 9643,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
43,
44,
45,
314,
315,
316,
926,
927,
928
]
},
{
"tb": 320,
"tbk": 1,
"tl": 6591,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
43,
44,
45,
46,
47,
48,
929,
930,
931
]
},
{
"tb": 6912,
"tbk": 36,
"tl": 14686,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
305,
932,
933,
934,
935,
936,
937
]
},
{
"tb": 48,
"tbk": 1,
"tl": 666790,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
123,
124,
125,
126,
938,
128,
129
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2941415,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
223,
224,
225,
226,
227,
939,
14
]
},
{
"tb": 8388608,
"tbk": 4,
"tl": 6701529,
"mb": 8388608,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
183,
184,
185,
253,
940,
941,
942
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 777969,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
183,
184,
185,
253,
943,
944,
945
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 216957,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
81,
203,
204,
205,
500,
946,
947,
256
]
},
{
"tb": 96,
"tbk": 1,
"tl": 34,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
230,
231,
232,
948,
604
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3929072,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
949,
950,
951,
952,
953,
954,
955,
956,
957
]
},
{
"tb": 72,
"tbk": 2,
"tl": 5349019,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
958,
959,
960,
961,
962,
963,
964,
965,
966
]
},
{
"tb": 216,
"tbk": 1,
"tl": 11309730,
"mb": 216,
"mbk": 1,
"gb": 216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
32,
668,
967,
968,
969,
970,
971,
972,
973,
974
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
712,
713,
917,
348,
587
]
},
{
"tb": 16128,
"tbk": 4,
"tl": 3292,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
897,
898,
899,
900,
975,
174,
113,
14
]
},
{
"tb": 5120,
"tbk": 1,
"tl": 8529,
"mb": 5120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
23,
24,
25,
26,
27,
28,
29,
976,
880
]
},
{
"tb": 67108864,
"tbk": 1,
"tl": 3602687,
"mb": 67108864,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
897,
898,
899,
900,
901,
977,
978,
979
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
23,
24,
25,
26,
27,
28,
163,
868,
917
]
},
{
"tb": 4032,
"tbk": 4,
"tl": 20848,
"mb": 4032,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
81,
330,
331,
332,
333,
980,
499,
234
]
},
{
"tb": 80,
"tbk": 1,
"tl": 6376,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
183,
184,
185,
981,
982,
347,
348
]
},
{
"tb": 480,
"tbk": 4,
"tl": 9608,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
223,
224,
225,
226,
227,
312,
983
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1792,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
223,
224,
225,
226,
227,
984,
7
]
},
{
"tb": 13472,
"tbk": 32,
"tl": 101283,
"mb": 13472,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
81,
203,
204,
205,
206,
480,
985,
986
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 198342,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
81,
203,
204,
205,
500,
773,
774,
987
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1409,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
305,
437,
438,
439,
440,
441,
442,
443,
988,
446,
845
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3242,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
596,
597,
598,
599,
600,
985,
986,
989
]
},
{
"tb": 16128,
"tbk": 4,
"tl": 2587,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
897,
990,
991,
992,
993,
994,
995,
996,
997
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2136,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
81,
330,
331,
332,
333,
334,
427,
8
]
},
{
"tb": 24,
"tbk": 1,
"tl": 4748259,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
748,
998,
999,
1000,
1001,
14,
15,
16
]
},
{
"tb": 64,
"tbk": 1,
"tl": 6381,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
130,
131,
132,
800,
211
]
},
{
"tb": 16128,
"tbk": 4,
"tl": 568,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
447,
448,
449,
450,
451,
452,
1002
]
},
{
"tb": 24,
"tbk": 1,
"tl": 4748264,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
1003,
1004,
1005,
1006,
14,
15,
16
]
},
{
"tb": 24192,
"tbk": 121,
"tl": 596802,
"mb": 24192,
"mbk": 121,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
81,
203,
204,
205,
206,
480,
1007,
499
]
},
{
"tb": 64,
"tbk": 1,
"tl": 207,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
130,
131,
132,
488,
135
]
},
{
"tb": 1248,
"tbk": 12,
"tl": 345,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
305,
1008,
1009,
1010,
1011,
1012,
1013
]
},
{
"tb": 3608,
"tbk": 18,
"tl": 80,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
136,
137,
166,
167,
168,
169,
170,
171,
172,
427,
8
]
},
{
"tb": 2304,
"tbk": 12,
"tl": 5064,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
305,
932,
933,
934,
1014,
1015,
1016
]
},
{
"tb": 512,
"tbk": 1,
"tl": 87,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
183,
184,
185,
1017,
604,
347,
348
]
},
{
"tb": 24,
"tbk": 1,
"tl": 13,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
248,
249,
250,
50,
51,
52,
788,
1018,
714
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 2708,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
81,
1019,
1020,
1021,
1022,
1023,
1024,
1025,
1026
]
},
{
"tb": 192,
"tbk": 1,
"tl": 6601,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
1027,
1028,
1029,
1030,
347
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 4588,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
190,
191,
192,
193,
1031
]
},
{
"tb": 2736,
"tbk": 6,
"tl": 2700,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
1032,
1033,
1034,
1035,
1036,
1037
]
},
{
"tb": 8,
"tbk": 1,
"tl": 6548866,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
32,
289,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045
]
},
{
"tb": 64,
"tbk": 1,
"tl": 3,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1046,
1047,
1048,
1049,
1050,
1051,
1052,
1053,
1054
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2487,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
33,
1055,
1056,
1057,
1058,
1059,
1060,
1061,
1062
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1718,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
136,
137,
1063,
1064,
1065,
1066,
1067,
1068,
1069,
1070
]
},
{
"tb": 16,
"tbk": 1,
"tl": 8547,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
23,
24,
25,
26,
27,
28,
29,
1071,
1072
]
},
{
"tb": 976,
"tbk": 4,
"tl": 1363,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
136,
137,
138,
139,
140,
276,
277,
527,
1073
]
},
{
"tb": 4194336,
"tbk": 3,
"tl": 79566,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
183,
184,
185,
253,
1074,
322,
1075
]
},
{
"tb": 103968,
"tbk": 228,
"tl": 64813,
"mb": 26448,
"mbk": 58,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
1032,
1033,
1034,
1076,
1077,
1078
]
},
{
"tb": 512,
"tbk": 1,
"tl": 82,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
183,
184,
185,
1079,
604,
347,
348
]
},
{
"tb": 32,
"tbk": 1,
"tl": 11309713,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
10,
492,
1080,
1081,
1082,
1083,
1084
]
},
{
"tb": 576,
"tbk": 4,
"tl": 1717,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
123,
124,
125,
126,
1085,
602,
446
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 3446,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
183,
184,
185,
186,
375,
1086,
986
]
},
{
"tb": 16,
"tbk": 1,
"tl": 36832,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
123,
124,
125,
126,
1087,
13,
14
]
},
{
"tb": 256,
"tbk": 1,
"tl": 7841,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
42,
183,
184,
185,
186,
1088,
1089,
189
]
},
{
"tb": 3536,
"tbk": 34,
"tl": 530,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
305,
1008,
1009,
1010,
1090,
1091,
1092
]
},
{
"tb": 384,
"tbk": 1,
"tl": 1569036,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
1093,
1094,
1095,
1096,
1097,
1098,
1099,
1100,
1101
]
},
{
"tb": 2928,
"tbk": 4,
"tl": 20255,
"mb": 2928,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
596,
597,
598,
599,
600,
1007,
499,
234
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 8517,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
23,
24,
25,
26,
27,
28,
29,
1102,
590
]
},
{
"tb": 48,
"tbk": 1,
"tl": 11311990,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
32,
1103,
1104,
1105,
1106,
1107,
1108,
714,
14
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2206,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
32,
596,
597,
598,
599,
716,
335,
336,
14
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 2287,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
18,
19,
20,
161,
1109
]
},
{
"tb": 96,
"tbk": 1,
"tl": 10,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
230,
231,
232,
1110,
189
]
},
{
"tb": 384,
"tbk": 1,
"tl": 8542,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
17,
1111,
1112,
1113,
1114,
401
]
}
],
"ftbl": [
"[root]",
"0x56f7c373fb79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x56f7c373e5ca: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56f7c3459556: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c3459556: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c3459556: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c3527782: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x56f7c33b3bd9: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x56f7c33bdcb4: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x56f7c337cace: winter_prover::Prover::generate_proof (prover/src/lib.rs:593:29)",
"0x56f7c31d7937: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x56f7c335e08f: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:60:9)",
"0x56f7c31df0ab: winter_prover::trace::Trace::validate (src/trace/mod.rs:122:26)",
"0x56f7c337df21: winter_prover::Prover::generate_proof (prover/src/lib.rs:370:17)",
"0x56f7c339acd4: winter_prover::Prover::prove (prover/src/lib.rs:171:37)",
"0x56f7c315c2b2: <examples::do_work::DoWorkExample<H> as examples::Example>::prove (src/do_work/mod.rs:108:9)",
"0x56f7c2fb4d4d: winterfell::main (examples/src/main.rs:49:17)",
"0x56f7c373e319: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x56f7c373eab0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x56f7c373ece9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x56f7c373ff12: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x56f7c373ed49: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x56f7c350c6ed: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x56f7c373fbbc: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c373fbbc: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c373fbbc: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x56f7c37407fc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x56f7c37407fc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x56f7c37407fc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x56f7c373de2c: <winter_utils::serde::byte_reader::SliceReader as winter_utils::serde::byte_reader::ByteReader>::read_vec (src/serde/byte_reader.rs:151:22)",
"0x56f7c36de8d2: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:215:25)",
"0x56f7c36d915d: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:188:24)",
"0x56f7c31d84a9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x56f7c329d9fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56f7c3437f37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c3437f37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c3437f37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c3437f37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e72be: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34e02d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312a4de: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c334f2c4: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:198:23)",
"0x56f7c32a10ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56f7c317e41c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c317e41c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c317e41c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x56f7c34c9939: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x56f7c34c9939: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x56f7c34c9939: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x56f7c3458bc3: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x56f7c34ca1f9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x56f7c34ca1f9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x56f7c34ca1f9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x56f7c33527be: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x56f7c32a4a9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56f7c343e111: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c343e111: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c343e111: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c343e111: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e39fb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34dccc6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312b86b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c327ba5c: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:82:9)",
"0x56f7c3516e95: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x56f7c335e12c: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:62:13)",
"0x56f7c33ff985: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:364:13)",
"0x56f7c327c670: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:40:22)",
"0x56f7c35786e7: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:13)",
"0x56f7c337db32: winter_prover::Prover::generate_proof (prover/src/lib.rs:403:21)",
"0x56f7c31ce22a: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x56f7c31ce307: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x56f7c32f5156: winter_verifier::perform_verification (verifier/src/lib.rs:225:13)",
"0x56f7c32a551c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56f7c3451907: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c3451907: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c3451907: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c3451907: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e4fde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34de627: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312993e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c315cd54: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:112:30)",
"0x56f7c329ba9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56f7c3427666: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c3427666: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c3427666: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c3427666: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x56f7c34e3b6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34dc5dc: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c34eb9be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c34ededb: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x56f7c329a83c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56f7c3459786: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c3459786: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c3459786: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c3379f85: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:39)",
"0x56f7c341e227: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c341e227: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c341e227: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c341e227: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e423e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34dbd47: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312cbee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c33ce10f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x56f7c32a066c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56f7c340ec21: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c340ec21: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c340ec21: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c340ec21: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e53ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34d8ac6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312d01b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c337b6a3: winter_prover::Prover::generate_proof (prover/src/lib.rs:495:52)",
"0x56f7c35bec96: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x56f7c337ca4f: winter_prover::Prover::generate_proof (prover/src/lib.rs:590:25)",
"0x56f7c3296c0c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56f7c3438b31: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c3438b31: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c3438b31: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c3438b31: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e60ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34da5a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312be5b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c3265967: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x56f7c317e9f5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c317e9f5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c317e9f5: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x56f7c34c8bf4: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x56f7c3575fd0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:149:33)",
"0x56f7c35799e0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:122:17)",
"0x56f7c3259436: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x56f7c32d0122: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x56f7c32dd6b9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x56f7c34b1d91: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x56f7c3406bb8: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:510:13)",
"0x56f7c32f39d9: winter_verifier::perform_verification (verifier/src/lib.rs:183:13)",
"0x56f7c3263484: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x56f7c36c1899: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x56f7c362e0aa: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56f7c3609656: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c3609656: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c3609656: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c33597d0: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x56f7c3579819: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:129:9)",
"0x56f7c337dbd3: winter_prover::Prover::generate_proof (prover/src/lib.rs:407:21)",
"0x56f7c32a0e4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56f7c317e2ec: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c317e2ec: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c317e2ec: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x56f7c34caf19: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x56f7c34caf19: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x56f7c34caf19: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x56f7c35435d6: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x56f7c357958d: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:33)",
"0x56f7c35430c6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c35430c6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c35430c6: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x56f7c34ca039: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x56f7c34ca039: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x56f7c34ca039: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x56f7c3352ca3: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x56f7c337a583: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:33)",
"0x56f7c32e0564: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x56f7c3527a51: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x56f7c33afdf4: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x56f7c33afb12: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x56f7c3265a03: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x56f7c363f6ac: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c363f6ac: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c363f6ac: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x56f7c36104a9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x56f7c36104a9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x56f7c36104a9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x56f7c34eda2c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x56f7c35ac274: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x56f7c35bf152: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x56f7c344b451: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c344b451: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c344b451: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c344b451: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e47db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34d9136: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312a65b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c31b197f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x56f7c3459736: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c3459736: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c3459736: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c317c909: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x56f7c350d6fb: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x56f7c31b3185: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x56f7c32fd907: winter_verifier::verify (verifier/src/lib.rs:108:19)",
"0x56f7c36ebda0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x56f7c36e75f9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x56f7c36e65a1: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x56f7c36e6eb0: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x56f7c33cda4e: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x56f7c373ed18: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x56f7c374000a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x56f7c374000a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x56f7c373fdae: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x56f7c373fdae: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x56f7c373fe9d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x56f7c350c835: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x56f7c32621d0: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x56f7c3459916: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c3459916: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c3459916: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c33ad7e9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x56f7c32797fb: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x56f7c31b1e38: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x56f7c3285175: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x56f7c34002c9: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:534:17)",
"0x56f7c32f413b: winter_verifier::perform_verification (verifier/src/lib.rs:263:61)",
"0x56f7c36e2784: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:155:27)",
"0x56f7c36d9178: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:29)",
"0x56f7c32a5f9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56f7c3423d37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c3423d37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c3423d37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c3423d37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e526e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34d86a7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312adde: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c338ed43: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:638:34)",
"0x56f7c36d3799: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x56f7c36ceb39: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x56f7c3631830: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x56f7c3633899: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x56f7c360e451: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x56f7c335db27: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x56f7c335b8cd: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x56f7c32c9972: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x56f7c32dda19: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x56f7c34b3402: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x56f7c3291629: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x56f7c31b260c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x56f7c334f723: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:200:34)",
"0x56f7c313eb0a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x56f7c32121bf: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x56f7c3297bbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56f7c3420991: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c3420991: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c3420991: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c3420991: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e637b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34dbed6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312978b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c32f3cd2: winter_verifier::perform_verification (verifier/src/lib.rs:212:41)",
"0x56f7c3262428: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x56f7c3458856: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c3458856: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c3458856: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x56f7c3350f17: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x56f7c31905ac: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:293:57)",
"0x56f7c31e5e7b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x56f7c353d5d7: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x56f7c35b2e0b: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x56f7c35c01b2: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x56f7c3400239: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:536:13)",
"0x56f7c329b2bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56f7c3453ffe: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c3453ffe: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c3453ffe: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c3453ffe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x56f7c34e543b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34dcb76: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c357e10b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c31ab01c: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x56f7c32a2b1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56f7c342b7cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c342b7cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c342b7cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c342b7cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x56f7c34e686e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34d8947: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c3129e8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c3409bf6: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x56f7c32e2d1c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x56f7c34efb5e: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x56f7c31add3c: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x56f7c32f498e: winter_verifier::perform_verification (verifier/src/lib.rs:303:42)",
"0x56f7c342f877: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c342f877: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c342f877: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c342f877: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e470e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34e0317: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312cace: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c34f8532: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x56f7c34edf53: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x56f7c329e70a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56f7c3430781: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c3430781: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c3430781: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c3430781: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e5dab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34da306: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312a09b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c338ec73: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:634:36)",
"0x56f7c3458e1c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c3458e1c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c3458e1c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x56f7c34c9e79: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x56f7c34c9e79: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x56f7c34c9e79: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x56f7c337b6be: winter_prover::Prover::generate_proof (prover/src/lib.rs:500:39)",
"0x56f7c36ed739: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x56f7c36f981b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x56f7c36f9541: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x56f7c36f5d7b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x56f7c36f03a1: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x56f7c36f0b37: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x56f7c36eb6db: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x56f7c33b04f8: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x56f7c32f46c1: winter_verifier::perform_verification (verifier/src/lib.rs:295:27)",
"0x56f7c317e93c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x56f7c317e93c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x56f7c317e93c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x56f7c35c6983: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x56f7c33ffc22: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:348:9)",
"0x56f7c357863b: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:50:13)",
"0x56f7c31d9f42: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x56f7c3355d04: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x56f7c3352fbc: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x56f7c31d99cb: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x56f7c314632c: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x56f7c33af954: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x56f7c32c1912: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x56f7c32dd119: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x56f7c34b294f: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x56f7c34edd8a: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x56f7c33adf58: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c33adf58: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c33adf58: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x56f7c34c8c17: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x56f7c34ed698: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x56f7c35ca495: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x56f7c337cbc5: winter_prover::Prover::generate_proof (prover/src/lib.rs:598:34)",
"0x56f7c344bf17: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c344bf17: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c344bf17: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c344bf17: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e5b2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34db147: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312aa9e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c3379416: winter_prover::Prover::generate_proof (prover/src/lib.rs:205:38)",
"0x56f7c34f81bf: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x56f7c32f4cbe: winter_verifier::perform_verification (verifier/src/lib.rs:314:25)",
"0x56f7c32fd9d2: winter_verifier::verify (verifier/src/lib.rs:110:21)",
"0x56f7c315cd99: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:118:9)",
"0x56f7c32a57bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56f7c3459876: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c3459876: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c3459876: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c3379fc9: winter_prover::Prover::generate_proof (prover/src/lib.rs:299:44)",
"0x56f7c33b6078: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x56f7c314f61a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x56f7c3207e45: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x56f7c329d4bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56f7c34504c8: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c34504c8: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c34504c8: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c34504c8: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x56f7c34e772e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34de407: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c35c717e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c340ae5c: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x56f7c35435ed: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x56f7c3417541: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c3417541: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c3417541: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c3417541: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e590b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34db276: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312b45b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c31b1b0f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x56f7c35444cb: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x56f7c3531d42: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x56f7c319f583: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x56f7c32a2dbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56f7c34113c1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c34113c1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c34113c1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c34113c1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e69db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34d9d06: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312beab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c32f3d9f: winter_verifier::perform_verification (verifier/src/lib.rs:216:40)",
"0x56f7c36dedc4: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:361:22)",
"0x56f7c36de3d6: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:146:27)",
"0x56f7c31da393: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x56f7c33aa018: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x56f7c353d51a: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x56f7c34f1af6: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x56f7c32f4d3a: winter_verifier::perform_verification (verifier/src/lib.rs:316:28)",
"0x56f7c36df709: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x56f7c36e04bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56f7c36e3776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c36e3776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c36e3776: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c36de2b9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x56f7c36de70b: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:211:22)",
"0x56f7c2fb58fd: winterfell::main (examples/src/main.rs:80:24)",
"0x56f7c35031ab: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x56f7c3502696: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x56f7c31968e9: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:641:17)",
"0x56f7c344c9a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c344c9a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c344c9a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c344c9a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e73de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34de4c9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312cede: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c31d95e0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x56f7c3426187: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c3426187: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c3426187: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c3426187: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e729e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34dbe27: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c31297ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c34f495b: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x56f7c32b5392: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x56f7c32dca59: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x56f7c34b1b42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x56f7c327f0d9: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:174:17)",
"0x56f7c327cf30: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:54:17)",
"0x56f7c335983e: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x56f7c33b3b07: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x56f7c35794c0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:28)",
"0x56f7c35bebcd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x56f7c3352d84: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x56f7c335dd16: <examples::do_work::air::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (src/do_work/air.rs:13:9)",
"0x56f7c318fb09: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:211:31)",
"0x56f7c3146d3a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x56f7c32370a8: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x56f7c31103ba: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x56f7c313063a: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x56f7c36eb8ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56f7c36e7b6c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c36e7b6c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c36e7b6c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x56f7c36e762c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x56f7c36e762c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x56f7c36e762c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x56f7c36e76b6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x56f7c33cdb2b: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x56f7c33fd73c: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x56f7c373d6cc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x56f7c373bd9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x56f7c373ccf8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x56f7c373ccf8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x56f7c3739964: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x56f7c3739c13: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x56f7c35a801d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x56f7c36e4d7a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x56f7c32d5022: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x56f7c32dd9e9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x56f7c34b4842: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x56f7c32f5673: winter_verifier::perform_verification (verifier/src/lib.rs:177:9)",
"0x56f7c329f94c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56f7c3413ae7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c3413ae7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c3413ae7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c3413ae7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e553e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34dfd37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312bd4e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c339b619: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces (src/do_work/prover.rs:30:9)",
"0x56f7c32a527c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56f7c3416557: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c3416557: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c3416557: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c3416557: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34c479d: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x56f7c34e021c: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312c4ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c335c82a: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x56f7c3543440: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x56f7c337d7ad: winter_prover::Prover::generate_proof (prover/src/lib.rs:438:13)",
"0x56f7c35bec77: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x56f7c32def24: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x56f7c3532152: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x56f7c3352d29: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x56f7c36e075c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56f7c36e3726: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c36e3726: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c36e3726: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c36d8d52: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:172:33)",
"0x56f7c3406c93: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:505:13)",
"0x56f7c35054a2: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x56f7c3504147: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x56f7c338edf7: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:645:31)",
"0x56f7c335de42: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::new (src/do_work/air.rs:35:23)",
"0x56f7c32fe8d1: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:101:85)",
"0x56f7c314f432: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x56f7c326bc0a: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:107:27)",
"0x56f7c3188bff: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x56f7c32699a4: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:113:9)",
"0x56f7c3289f3a: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x56f7c329139c: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x56f7c31e5fbb: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x56f7c34fc7a5: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x56f7c33978e7: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:706:26)",
"0x56f7c337b110: winter_prover::Prover::generate_proof (prover/src/lib.rs:472:37)",
"0x56f7c36cee7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56f7c363f57c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c363f57c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c363f57c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x56f7c360fcc9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x56f7c360fcc9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x56f7c360fcc9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x56f7c33fee2a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x56f7c350e1f6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x56f7c31b2c48: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x56f7c3572b4c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:63:9)",
"0x56f7c32f5247: winter_verifier::perform_verification (verifier/src/lib.rs:223:43)",
"0x56f7c32e2f79: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x56f7c33bdc1d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x56f7c3418197: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c3418197: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c3418197: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c3418197: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e6f6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34d8599: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312bc6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c34f9e47: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x56f7c35c2ab6: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x56f7c319953c: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x56f7c343dee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c343dee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c343dee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c343dee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e3dde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34dac57: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312d47e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c3542994: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x56f7c319ccb0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x56f7c32fa869: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:214:32)",
"0x56f7c313f603: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x56f7c35727eb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:39:30)",
"0x56f7c33a981d: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x56f7c337bf26: winter_prover::Prover::generate_proof (prover/src/lib.rs:548:13)",
"0x56f7c3297e5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56f7c3443771: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c3443771: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c3443771: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c3443771: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e40cb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34dd9c6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312a0cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c3354e5a: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x56f7c32d4152: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x56f7c32dd389: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x56f7c34b5ff2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x56f7c35b2f89: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x56f7c34156b1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c34156b1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c34156b1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c34156b1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e371b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34dce16: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312c23b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c319f409: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x56f7c34399d1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c34399d1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c34399d1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c34399d1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e5cfb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34de026: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312c64b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c31b1c9f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x56f7c359f103: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x56f7c327ef72: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:169:36)",
"0x56f7c335e0bd: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:61:13)",
"0x56f7c33974e4: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:691:36)",
"0x56f7c36ec1a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c36ec1a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c36ec1a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c36ec1a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x56f7c36ec5ee: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c36ec5b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c36ed84e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c36eb299: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x56f7c36e22bd: <winter_air::proof::commitments::Commitments as winter_utils::serde::Deserializable>::read_from (src/proof/commitments.rs:108:22)",
"0x56f7c36d8bdc: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:167:27)",
"0x56f7c319f6f1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x56f7c31b1fa8: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x56f7c2fb59d5: winterfell::main (examples/src/main.rs:83:11)",
"0x56f7c350d8ce: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x56f7c36dda1e: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:168:21)",
"0x56f7c36d8e38: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:176:34)",
"0x56f7c3457097: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x56f7c351fea2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x56f7c337b868: winter_prover::Prover::generate_proof (prover/src/lib.rs:514:9)",
"0x56f7c34f83d9: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x56f7c34f81a4: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x56f7c329fe8c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56f7c3459966: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c3459966: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c3459966: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c32dec9d: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x56f7c359f3fb: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x56f7c33ce010: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x56f7c34f589e: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x56f7c32f4c0f: winter_verifier::perform_verification (verifier/src/lib.rs:308:25)",
"0x56f7c32cc5e2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x56f7c32dd209: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x56f7c34b70e2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x56f7c31b349b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x56f7c32a623c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56f7c3443977: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c3443977: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c3443977: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c3443977: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e465e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34d8517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312960e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c337b5d6: winter_prover::Prover::generate_proof (prover/src/lib.rs:491:51)",
"0x56f7c31db47b: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x56f7c33558b6: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x56f7c335976c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x56f7c33bfa92: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x56f7c31964c6: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:493:32)",
"0x56f7c314c09a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x56f7c32192a2: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x56f7c3117c9b: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x56f7c3134906: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x56f7c3520312: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x56f7c3739d9e: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x56f7c33b001f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x56f7c3267f5f: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x56f7c3352c8c: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x56f7c31b327d: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x56f7c35c5cb7: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x56f7c3577a27: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:272:18)",
"0x56f7c3576297: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:166:30)",
"0x56f7c36e1502: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x56f7c36e2179: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x56f7c36e3ae2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x56f7c36d9916: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:13)",
"0x56f7c3298b7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56f7c343af11: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c343af11: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c343af11: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c343af11: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e53db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34dad46: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c3129acb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c33bdc0e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x56f7c3520810: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x56f7c329a2fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56f7c35a1776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c35a1776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c35a1776: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x56f7c34ca3b9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x56f7c34ca3b9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x56f7c34ca3b9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x56f7c35c6846: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x56f7c357264a: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:25:25)",
"0x56f7c3442f40: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c3442f40: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c3442f40: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c3442f40: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x56f7c34e514b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34dc8a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312927b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c353abca: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x56f7c32fd718: winter_verifier::verify (verifier/src/lib.rs:97:38)",
"0x56f7c329b01c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56f7c342dee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c342dee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c342dee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c342dee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34bdbcf: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x56f7c34db849: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312ae5e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c32fd784: winter_verifier::verify (verifier/src/lib.rs:101:24)",
"0x56f7c32cb712: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x56f7c32dd149: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x56f7c34b4122: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x56f7c33b3c91: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x56f7c36e25bd: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:151:28)",
"0x56f7c33fee3f: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x56f7c33c3a48: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x56f7c33cddda: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x56f7c33a9833: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x56f7c32cbc02: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x56f7c32dccc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x56f7c34b6d48: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x56f7c337dbf6: winter_prover::Prover::generate_proof (prover/src/lib.rs:408:17)",
"0x56f7c351adab: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x56f7c35197e1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x56f7c332d4eb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x56f7c330279d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x56f7c31cb0fc: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x56f7c31c8911: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x56f7c3542299: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x56f7c340a5ae: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x56f7c31c889d: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x56f7c3409cce: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x56f7c340c6c6: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x56f7c33ff9ea: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:362:9)",
"0x56f7c329c7bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56f7c3449b27: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c3449b27: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c3449b27: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c3449b27: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34c2b76: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x56f7c34dcba7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312bd6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c33bad5b: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x56f7c334f210: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:197:28)",
"0x56f7c35a782c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x56f7c33afb58: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x56f7c3379656: winter_prover::Prover::generate_proof (prover/src/lib.rs:228:27)",
"0x56f7c3520580: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x56f7c34ed6ff: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x56f7c35368e0: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x56f7c35ca65e: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x56f7c31e6303: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x56f7c35b2c25: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x56f7c31ad2ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x56f7c32f4810: winter_verifier::perform_verification (verifier/src/lib.rs:302:9)",
"0x56f7c34f4693: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x56f7c341f777: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c341f777: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c341f777: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c341f777: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e42de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34e0697: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312cb8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c33cd131: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x56f7c342d787: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c342d787: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c342d787: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c342d787: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e467e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34db807: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312d71e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c31dd33a: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:132:32)",
"0x56f7c32beca2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x56f7c32dd539: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x56f7c34b5b42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x56f7c34e8ffc: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x56f7c3409d4a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x56f7c35a4e40: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x56f7c327bbd9: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:82:31)",
"0x56f7c3151553: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x56f7c32a090c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56f7c3428f91: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c3428f91: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c3428f91: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c3428f91: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e3edb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34dd626: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c31294ab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c338eba6: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:630:42)",
"0x56f7c32ca842: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x56f7c32dd419: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x56f7c34b2ba2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x56f7c329157e: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x56f7c3519ccb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x56f7c3519471: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x56f7c332df0b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x56f7c3326451: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x56f7c332c77d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x56f7c332010e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x56f7c34fe872: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x56f7c338f3dd: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:659:26)",
"0x56f7c3379c88: winter_prover::Prover::generate_proof (prover/src/lib.rs:268:13)",
"0x56f7c3307d31: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x56f7c330b477: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x56f7c33001bb: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x56f7c34ece5d: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x56f7c34f0406: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x56f7c34fc866: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x56f7c3414141: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c3414141: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c3414141: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c3414141: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e6f9b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34db346: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312988b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c33794e3: winter_prover::Prover::generate_proof (prover/src/lib.rs:209:39)",
"0x56f7c32799d0: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x56f7c31dc87b: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:235:25)",
"0x56f7c35a7a62: examples::do_work::prover::build_do_work_trace (src/do_work/prover.rs:65:5)",
"0x56f7c339b668: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces::{{closure}} (src/do_work/prover.rs:32:27)",
"0x56f7c3457067: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x56f7c35ca6d0: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x56f7c3444637: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c3444637: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c3444637: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c3444637: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e7ade: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34e04b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312ad0e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c3379e32: winter_prover::Prover::generate_proof (prover/src/lib.rs:286:23)",
"0x56f7c353d42f: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x56f7c353d504: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x56f7c340008d: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:540:13)",
"0x56f7c36f99cb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x56f7c36f96a1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x56f7c36f5c9b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x56f7c36f0471: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x56f7c36f0af7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x56f7c36eb72b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x56f7c3289d7b: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x56f7c3527c60: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x56f7c32e4191: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x56f7c32d9f22: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x56f7c32dcfc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x56f7c34b6aaf: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x56f7c35325d9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x56f7c31b2cae: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x56f7c34f4853: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x56f7c34fe940: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x56f7c36def46: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:365:21)",
"0x56f7c341c727: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c341c727: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c341c727: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c341c727: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e65de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34dc507: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312ccfe: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c3356277: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x56f7c359f08f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x56f7c3357f48: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x56f7c31dd511: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:132:51)",
"0x56f7c313fa1a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x56f7c3582da5: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x56f7c3357ca7: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x56f7c35429a3: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x56f7c35c682c: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x56f7c33b3a53: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x56f7c3532524: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x56f7c3417317: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c3417317: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c3417317: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c3417317: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e506e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34e0587: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312947e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c3354c6a: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x56f7c33cd214: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x56f7c32f4e15: winter_verifier::perform_verification (verifier/src/lib.rs:320:5)",
"0x56f7c32b0982: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x56f7c32dcc39: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x56f7c34b5a51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x56f7c33556c9: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x56f7c325930d: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x56f7c35a800c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x56f7c3419911: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c3419911: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c3419911: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c3419911: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e4f1b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34e0516: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312a20b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c31b1bd7: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x56f7c351a02b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x56f7c3519681: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x56f7c332d12b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x56f7c33028bd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x56f7c31cbf89: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x56f7c33a7a00: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x56f7c35a895b: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x56f7c33af9cc: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x56f7c33afad6: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x56f7c3430107: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c3430107: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c3430107: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c3430107: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e54fe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34df4b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312c86e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c33f5d8f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x56f7c35202ef: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x56f7c35ca6eb: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x56f7c36ddec9: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:352:21)",
"0x56f7c36d8e53: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:174:32)",
"0x56f7c337d7ed: winter_prover::Prover::generate_proof (prover/src/lib.rs:439:13)",
"0x56f7c337ac77: winter_prover::Prover::generate_proof (prover/src/lib.rs:442:35)",
"0x56f7c32b7622: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x56f7c32dd839: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x56f7c34b6252: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x56f7c3527db8: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x56f7c35206ec: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x56f7c329b55c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56f7c34451c7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c34451c7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c34451c7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c34451c7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e406e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34d92c7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c327742e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c337979f: winter_prover::Prover::generate_proof (prover/src/lib.rs:243:41)",
"0x56f7c32a5a5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56f7c3459b46: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c3459b46: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c3459b46: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c31e5d3b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x56f7c3503c77: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x56f7c34fbc8c: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x56f7c35027bc: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x56f7c33a9151: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x56f7c33c0df3: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x56f7c34127e7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c34127e7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c34127e7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c34127e7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e673e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34dc7f7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312d32e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c334ed13: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:253:9)",
"0x56f7c33c0eb0: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x56f7c33798ba: winter_prover::Prover::generate_proof (prover/src/lib.rs:257:22)",
"0x56f7c32fd5a9: winter_verifier::verify (verifier/src/lib.rs:95:32)",
"0x56f7c319cc8d: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x56f7c31b17d0: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x56f7c31ce23f: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x56f7c354241a: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x56f7c36df187: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x56f7c36ddfed: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:357:24)",
"0x56f7c350126a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x56f7c34fe903: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x56f7c35c2c0e: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x56f7c35c0104: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x56f7c337c38b: winter_prover::Prover::generate_proof (prover/src/lib.rs:561:9)",
"0x56f7c31c7e22: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x56f7c325d5c4: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x56f7c357dd04: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x56f7c36f9b7b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x56f7c36f95f1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x56f7c36f5bbb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x56f7c36f287e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x56f7c36f3c4c: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x56f7c36f2d8a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x56f7c3575f6c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:148:31)",
"0x56f7c337d808: winter_prover::Prover::generate_proof (prover/src/lib.rs:440:13)",
"0x56f7c3354db1: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x56f7c31444aa: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x56f7c3584a05: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x56f7c350ebc2: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x56f7c33ac240: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x56f7c3522bb1: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x56f7c31e31f6: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x56f7c35b2c8f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x56f7c34f5848: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x56f7c329791c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56f7c3421dc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c3421dc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c3421dc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c3421dc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34c36b3: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x56f7c34d8bc9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312b01e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c3379f62: winter_prover::Prover::generate_proof (prover/src/lib.rs:291:36)",
"0x56f7c3299dbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56f7c343d127: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c343d127: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c343d127: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c343d127: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e401e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34da6b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312cfae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c34fae38: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x56f7c34297f7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c34297f7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c34297f7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c34297f7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e5b7e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34dff39: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312a0ee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c3379603: winter_prover::Prover::generate_proof (prover/src/lib.rs:217:20)",
"0x56f7c35ac35d: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x56f7c36ddd02: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:348:22)",
"0x56f7c35a4e2b: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x56f7c34fb76a: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x56f7c3142c7a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x56f7c3289d36: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x56f7c33f9d61: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x56f7c32f433e: winter_verifier::perform_verification (verifier/src/lib.rs:272:24)",
"0x56f7c3260499: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x56f7c352810a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x56f7c353aca7: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x56f7c31c677b: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x56f7c35b2caa: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x56f7c33cd1a5: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x56f7c31b223c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x56f7c34149a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c34149a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c34149a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c34149a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e671e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34d9517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312b37e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c33cdf51: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x56f7c3459466: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c3459466: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c3459466: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c337a051: winter_prover::Prover::generate_proof (prover/src/lib.rs:301:32)",
"0x56f7c359f450: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x56f7c3459cd6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c3459cd6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c3459cd6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c337a00d: winter_prover::Prover::generate_proof (prover/src/lib.rs:300:37)",
"0x56f7c328a04d: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x56f7c36f9d2b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x56f7c36f9751: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x56f7c36f5adb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x56f7c36ef6cd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x56f7c36ea84b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x56f7c36e8f13: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x56f7c36ef66d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x56f7c36ea538: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x56f7c36e8dd7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x56f7c34f4bd0: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x56f7c3265a1e: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x56f7c343f2f0: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c343f2f0: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c343f2f0: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c343f2f0: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x56f7c34e35bb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34deda6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312adbb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c3532075: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x56f7c32be7b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x56f7c32dcd89: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x56f7c34b2f32: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x56f7c32f548c: winter_verifier::perform_verification (verifier/src/lib.rs:182:9)",
"0x56f7c35bee9d: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x56f7c351a6eb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x56f7c3519891: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x56f7c332cf4b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x56f7c33029dd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x56f7c31cb83f: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x56f7c33a76c3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x56f7c3443ba1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c3443ba1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c3443ba1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c3443ba1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e6b3b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34de0b6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312a6cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c3379c5d: winter_prover::Prover::generate_proof (prover/src/lib.rs:266:43)",
"0x56f7c30c6149: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x56f7c30c4c19: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x56f7c30c3030: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x56f7c30c3298: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x56f7c30c2b5a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x56f7c30c2b5a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x56f7c2fb76a1: alloc::string::String::reserve (alloc/src/string.rs:1152:9)",
"0x56f7c2fb76a1: <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend (alloc/src/string.rs:2173:14)",
"0x56f7c2fb777c: <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter (alloc/src/string.rs:2093:9)",
"0x56f7c341a5b7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c341a5b7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c341a5b7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c341a5b7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e3b0e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34dba37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312b2be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c33b3c76: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x56f7c3445c51: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c3445c51: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c3445c51: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c3445c51: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e3f6b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34dea96: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312b53b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c31b1a47: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x56f7c36e3118: <winter_air::proof::context::Context as winter_utils::serde::Deserializable>::read_from (src/proof/context.rs:184:35)",
"0x56f7c36d8bf7: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:27)",
"0x56f7c33cdbf6: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x56f7c3355be1: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x56f7c3358211: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x56f7c3318d8f: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x56f7c3324711: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x56f7c331fcaa: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x56f7c34f4bf3: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x56f7c3195bb0: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:221:17)",
"0x56f7c3140922: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x56f7c356f4dd: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::SpecFold>::spec_fold (iter/adapters/zip.rs:685:25)",
"0x56f7c355bee7: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::fold (iter/adapters/zip.rs:249:9)",
"0x56f7c35469b7: <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/zip.rs:103:9)",
"0x56f7c359f184: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x56f7c353aa9a: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x56f7c31df598: winter_prover::trace::Trace::validate (src/trace/mod.rs:177:13)",
"0x56f7c3294fee: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x56f7c31b242b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x56f7c36f276e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x56f7c36f4220: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x56f7c36f3428: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x56f7c329f40c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56f7c342ebc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c342ebc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c342ebc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x56f7c342ebc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x56f7c34e4a9e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x56f7c34dfc79: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x56f7c312a94e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x56f7c327c77a: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:50:26)",
"0x56f7c36dd862: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:164:22)",
"0x56f7c329c51c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x56f7c350e2be: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x56f7c350e2be: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x56f7c350e2be: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x56f7c34c8b77: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x56f7c3265c58: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x56f7c35369fc: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x56f7c31b33ef: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x56f7c36e1012: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x56f7c36e21a9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x56f7c36e3878: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x56f7c36d9c1a: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:13)"
]
}