{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell do-work -n 6 -l 65536",
"pid": 22487,
"tg": 64227855,
"te": 78938166,
"pps": [
{
"tb": 768,
"tbk": 1,
"tl": 4015,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9
]
},
{
"tb": 64,
"tbk": 1,
"tl": 736036,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
15,
16
]
},
{
"tb": 6912,
"tbk": 36,
"tl": 14368,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
19,
20,
21,
22,
23
]
},
{
"tb": 576,
"tbk": 2,
"tl": 7401,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
24,
25,
26,
27,
28
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
29,
30,
31,
32,
33,
34,
35,
36,
37,
38
]
},
{
"tb": 96,
"tbk": 1,
"tl": 78770768,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
40,
41,
42,
43,
44,
45,
46,
47
]
},
{
"tb": 30720,
"tbk": 1,
"tl": 9730,
"mb": 30720,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
29,
30,
31,
32,
33,
34,
35,
48,
49,
50
]
},
{
"tb": 288,
"tbk": 2,
"tl": 92,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
51,
52,
53,
54,
55
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 340651,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
57,
58,
59,
60,
61,
62,
63
]
},
{
"tb": 6474,
"tbk": 42,
"tl": 7649278,
"mb": 3264,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
64,
65,
66,
67,
68
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1967,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
69,
70,
71,
72,
73,
74,
75,
76,
77,
78
]
},
{
"tb": 288,
"tbk": 2,
"tl": 94,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
51,
52,
53,
79,
55
]
},
{
"tb": 512,
"tbk": 1,
"tl": 30,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
57,
58,
59,
80,
81,
28,
82
]
},
{
"tb": 1000,
"tbk": 4,
"tl": 4339,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
83,
84,
85,
86,
87,
88,
89,
90,
91,
92
]
},
{
"tb": 16000,
"tbk": 125,
"tl": 108,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
93,
94,
95,
96,
97,
98,
99,
100
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 1852909,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
101,
102,
103,
104,
105,
106,
107,
108
]
},
{
"tb": 384,
"tbk": 2,
"tl": 4664,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
109,
110,
111,
112,
113
]
},
{
"tb": 96,
"tbk": 6,
"tl": 444,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
114,
115,
116,
117,
118,
119,
120
]
},
{
"tb": 288,
"tbk": 6,
"tl": 4039211,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
121,
122,
123,
124,
125,
126,
127
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 1772114,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
57,
58,
59,
60,
128,
129,
130
]
},
{
"tb": 192,
"tbk": 12,
"tl": 9391256,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
131,
132,
133,
134,
135,
136,
137,
138
]
},
{
"tb": 288,
"tbk": 12,
"tl": 73917795,
"mb": 288,
"mbk": 12,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
139,
140,
141,
142,
143,
144,
145,
146,
147,
148
]
},
{
"tb": 96,
"tbk": 6,
"tl": 43,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
150,
151,
152,
153,
154,
155
]
},
{
"tb": 419430400,
"tbk": 2621440,
"tl": 25576351,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
156,
157,
158,
159,
160,
161,
162,
163,
164
]
},
{
"tb": 1152,
"tbk": 2,
"tl": 9749,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
165,
166,
167,
168,
169
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4467,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
170,
171,
172,
173,
174,
175,
176,
177
]
},
{
"tb": 3072,
"tbk": 6,
"tl": 1258,
"mb": 3072,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
57,
58,
59,
178,
55,
28,
82
]
},
{
"tb": 30720,
"tbk": 6,
"tl": 61305,
"mb": 30720,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
29,
179,
180,
181,
182,
183,
184,
185
]
},
{
"tb": 4000,
"tbk": 4,
"tl": 24664,
"mb": 4000,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
101,
186,
187,
188,
189,
190,
191,
192
]
},
{
"tb": 288,
"tbk": 2,
"tl": 3968213,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
51,
52,
53,
193,
154
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1310836,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
156,
157,
158,
194,
195,
196,
197,
198,
199,
200,
201
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 210425,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
101,
102,
103,
104,
105,
202,
203,
204
]
},
{
"tb": 144,
"tbk": 1,
"tl": 1310848,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
205,
206,
207,
208,
199,
200,
201,
209,
210,
154
]
},
{
"tb": 72,
"tbk": 3,
"tl": 3932499,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
139,
140,
141,
142,
143,
144,
145,
146,
198,
199,
200,
201
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 136745,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
57,
58,
59,
60,
211,
212,
213
]
},
{
"tb": 1536,
"tbk": 2,
"tl": 2712482,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
214,
215,
216,
217,
154
]
},
{
"tb": 312,
"tbk": 7,
"tl": 23256530,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
218,
219,
220,
221,
222,
223,
224,
225,
226
]
},
{
"tb": 1920,
"tbk": 6,
"tl": 44176,
"mb": 1920,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
156,
157,
158,
194,
195,
196,
227,
228,
229
]
},
{
"tb": 9584640,
"tbk": 4,
"tl": 214402,
"mb": 9584640,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
57,
58,
59,
60,
230,
231,
204
]
},
{
"tb": 480,
"tbk": 2,
"tl": 7508,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
232,
233,
234,
235,
236
]
},
{
"tb": 576,
"tbk": 4,
"tl": 1702,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
121,
122,
123,
124,
237,
238,
92
]
},
{
"tb": 16000,
"tbk": 4,
"tl": 572,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
114,
115,
116,
117,
118,
119,
239
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4477,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
57,
58,
59,
240,
241,
28,
82
]
},
{
"tb": 48,
"tbk": 1,
"tl": 344,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
69,
70,
242,
243,
244,
245,
246,
247,
248,
249
]
},
{
"tb": 256,
"tbk": 1,
"tl": 8796,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
57,
58,
59,
250,
251,
252,
236
]
},
{
"tb": 64,
"tbk": 1,
"tl": 6542,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
15,
253
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 46,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
57,
58,
59,
60,
61,
62,
254
]
},
{
"tb": 13344,
"tbk": 32,
"tl": 106975,
"mb": 13344,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
101,
102,
103,
104,
255,
256,
257,
113
]
},
{
"tb": 256,
"tbk": 1,
"tl": 656,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
69,
70,
258,
259,
260,
261,
262,
263,
264
]
},
{
"tb": 102144,
"tbk": 224,
"tl": 63858,
"mb": 25992,
"mbk": 57,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
265,
266,
267,
268,
269,
270
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
29,
30,
31,
32,
33,
34,
35,
36,
37,
271
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 56638,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
156,
157,
158,
159,
160,
161,
272,
273,
154
]
},
{
"tb": 144,
"tbk": 1,
"tl": 14559103,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
274,
275,
276,
277,
278,
154,
155,
279
]
},
{
"tb": 1258291200,
"tbk": 2621440,
"tl": 13249368,
"mb": 800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
156,
157,
158,
194,
195,
196,
280,
281,
163
]
},
{
"tb": 3576,
"tbk": 18,
"tl": 84,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
69,
70,
282,
283,
284,
285,
286,
287,
288,
289,
184
]
},
{
"tb": 25166016,
"tbk": 18,
"tl": 469926,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
57,
58,
59,
60,
290,
291,
292
]
},
{
"tb": 2928,
"tbk": 12,
"tl": 1297,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
83,
293,
294,
295,
296,
297,
298,
299,
300
]
},
{
"tb": 13377,
"tbk": 1,
"tl": 9709,
"mb": 13377,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
29,
30,
31,
32,
33,
34,
35,
48,
301,
302
]
},
{
"tb": 576,
"tbk": 6,
"tl": 78,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
205,
303,
304,
305,
306,
307,
308,
309,
310
]
},
{
"tb": 96,
"tbk": 6,
"tl": 4039182,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
121,
122,
123,
124,
311,
126,
127
]
},
{
"tb": 40,
"tbk": 1,
"tl": 4840,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
312,
313,
314,
315,
316,
317,
318,
319,
320
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 295512,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
156,
157,
158,
194,
195,
196,
280,
321,
322
]
},
{
"tb": 6291456,
"tbk": 6,
"tl": 2455055,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
57,
58,
59,
60,
61,
62,
323
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 14698186,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
101,
102,
103,
104,
105,
324,
325,
326
]
},
{
"tb": 16000,
"tbk": 4,
"tl": 660,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
57,
58,
59,
60,
327,
328,
238
]
},
{
"tb": 48,
"tbk": 1,
"tl": 62471746,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
329,
330,
331,
332,
333,
334,
335,
336,
337
]
},
{
"tb": 6912,
"tbk": 24,
"tl": 895,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
338,
339,
340,
341,
342
]
},
{
"tb": 288,
"tbk": 2,
"tl": 736050,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
51,
52,
53,
343,
16
]
},
{
"tb": 23931,
"tbk": 4,
"tl": 38514,
"mb": 23931,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
29,
30,
31,
32,
33,
34,
35,
48,
344,
345
]
},
{
"tb": 512,
"tbk": 1,
"tl": 16,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
57,
58,
59,
60,
327,
346,
81
]
},
{
"tb": 96,
"tbk": 2,
"tl": 3966562,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
347,
348,
349,
350,
351,
352,
154
]
},
{
"tb": 288,
"tbk": 6,
"tl": 4028523,
"mb": 288,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
353,
354,
355,
356,
357,
358
]
},
{
"tb": 41943040,
"tbk": 524288,
"tl": 37969829,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
359,
360,
361,
362,
363,
364,
365,
366,
367
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 192919,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
101,
102,
103,
104,
105,
324,
325,
368
]
},
{
"tb": 62914560,
"tbk": 60,
"tl": 3801000006,
"mb": 62914560,
"mbk": 60,
"gb": 62914560,
"gbk": 60,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
156,
157,
158,
194,
195,
196,
369,
370,
371
]
},
{
"tb": 50331648,
"tbk": 24,
"tl": 145656492,
"mb": 50331648,
"mbk": 24,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
57,
58,
59,
60,
372,
373,
374
]
},
{
"tb": 6291456,
"tbk": 6,
"tl": 442762,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
57,
58,
59,
60,
61,
62,
375
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 341279,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
156,
157,
158,
159,
160,
161,
376,
377,
154
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1935,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
69,
70,
378,
379,
380,
381,
382,
383,
384,
385
]
},
{
"tb": 288,
"tbk": 12,
"tl": 440,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
386,
387,
388,
389,
390,
391
]
},
{
"tb": 288,
"tbk": 1,
"tl": 78775345,
"mb": 288,
"mbk": 1,
"gb": 288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
392,
393,
394,
395,
396,
397,
398,
154
]
},
{
"tb": 805306368,
"tbk": 6,
"tl": 386723900,
"mb": 805306368,
"mbk": 6,
"gb": 805306368,
"gbk": 6,
"eb": 0,
"ebk": 0,
"fs": [
1,
399,
400,
401,
402,
403,
404,
405,
406
]
},
{
"tb": 432,
"tbk": 1,
"tl": 14581279,
"mb": 432,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
407,
408,
409,
410,
411,
412,
413,
414,
415
]
},
{
"tb": 1296,
"tbk": 1,
"tl": 9513,
"mb": 1296,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
416,
417,
418,
419,
420,
421,
422,
423,
424
]
},
{
"tb": 1920,
"tbk": 12,
"tl": 4268570,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
114,
115,
116,
117,
118,
119,
425
]
},
{
"tb": 192,
"tbk": 6,
"tl": 9390542,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
426,
427,
428,
429,
430,
431,
432,
433,
434,
435
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 1310816,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
156,
157,
158,
194,
195,
196,
436,
437,
438,
439,
440
]
},
{
"tb": 16000,
"tbk": 4,
"tl": 38531,
"mb": 16000,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
29,
30,
31,
32,
33,
34,
35,
48,
441,
345
]
},
{
"tb": 2856,
"tbk": 4,
"tl": 24055,
"mb": 2856,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
442,
191,
192
]
},
{
"tb": 13800,
"tbk": 25,
"tl": 6437,
"mb": 3864,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
443,
444,
445,
446,
447,
448
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1771,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
51,
52,
53,
449,
273
]
},
{
"tb": 144,
"tbk": 6,
"tl": 537,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
450,
451,
434,
452,
453,
28
]
},
{
"tb": 1296,
"tbk": 1,
"tl": 78770984,
"mb": 1296,
"mbk": 1,
"gb": 1296,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
416,
454,
455,
456,
457,
458,
459,
460,
461
]
},
{
"tb": 6291456,
"tbk": 3,
"tl": 3934230,
"mb": 6291456,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
156,
157,
158,
194,
195,
196,
436,
437,
438,
439,
462
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 8022,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
29,
179,
180,
181,
463,
464,
273,
154
]
},
{
"tb": 480,
"tbk": 4,
"tl": 11426,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
347,
348,
349,
350,
351,
465,
466
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 535,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
347,
348,
349,
350,
351,
467,
468
]
},
{
"tb": 512,
"tbk": 1,
"tl": 18,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
57,
58,
59,
469,
81,
28,
82
]
},
{
"tb": 288,
"tbk": 6,
"tl": 44833,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
470,
322,
154,
155,
279
]
},
{
"tb": 96,
"tbk": 6,
"tl": 724,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
150,
151,
471,
472,
473,
474
]
},
{
"tb": 144,
"tbk": 6,
"tl": 36958999,
"mb": 144,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
139,
140,
141,
142,
143,
144,
145,
146,
475,
476
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1942,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
69,
70,
477,
478,
479,
480,
481,
482,
483,
484
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 78768674,
"mb": 2097152,
"mbk": 1,
"gb": 2097152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
57,
58,
59,
60,
61,
485,
486
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 768782,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
57,
58,
59,
60,
487,
488,
489
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3785,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
490,
491,
492,
493,
437,
438,
439,
494,
495,
184
]
},
{
"tb": 80,
"tbk": 1,
"tl": 6534,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
57,
58,
59,
496,
497,
28,
82
]
},
{
"tb": 1920,
"tbk": 8,
"tl": 9545,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
498,
499
]
},
{
"tb": 480,
"tbk": 4,
"tl": 223,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
347,
348,
349,
350,
351,
467,
500
]
},
{
"tb": 192,
"tbk": 6,
"tl": 58047,
"mb": 192,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
29,
30,
31,
32,
33,
34,
35,
48,
501,
502
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 3431,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
101,
503,
504,
505,
506,
507,
508,
509,
510
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 78770743,
"mb": 524288,
"mbk": 1,
"gb": 524288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
57,
58,
59,
60,
61,
511,
512
]
},
{
"tb": 96,
"tbk": 6,
"tl": 58547,
"mb": 96,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
29,
30,
31,
32,
33,
34,
35,
48,
513,
514
]
},
{
"tb": 2688,
"tbk": 18,
"tl": 39409,
"mb": 1536,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
515,
253
]
},
{
"tb": 1440,
"tbk": 6,
"tl": 82527165,
"mb": 1440,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
490,
491,
492,
493,
437,
438,
439,
516,
517,
518
]
},
{
"tb": 144,
"tbk": 1,
"tl": 35,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
490,
491,
492,
493,
437,
438,
439,
494,
519,
398
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2166,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
101,
186,
187,
188,
189,
520,
500,
273
]
},
{
"tb": 576,
"tbk": 6,
"tl": 180,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
521,
471,
472,
473,
474,
154
]
},
{
"tb": 48,
"tbk": 6,
"tl": 2455235,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
69,
70,
258,
259,
260,
522,
523,
476,
154
]
},
{
"tb": 12582912,
"tbk": 6,
"tl": 2432936,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
524,
525,
526,
527,
528,
529,
530,
531
]
},
{
"tb": 288,
"tbk": 1,
"tl": 32939,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
532,
533,
534,
535,
204
]
},
{
"tb": 960,
"tbk": 6,
"tl": 16734,
"mb": 960,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
121,
122,
123,
124,
536,
537,
538
]
},
{
"tb": 110208,
"tbk": 420,
"tl": 229056,
"mb": 16384,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
101,
539,
540,
541,
542,
543,
544,
545,
546
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 154947,
"mb": 1179648,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
57,
58,
59,
60,
547,
548,
204
]
},
{
"tb": 12582912,
"tbk": 6,
"tl": 5349345,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
57,
58,
59,
60,
211,
549,
550
]
},
{
"tb": 96,
"tbk": 2,
"tl": 3966564,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
347,
348,
349,
350,
351,
551,
154
]
},
{
"tb": 3840,
"tbk": 16,
"tl": 2553,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
552,
553
]
},
{
"tb": 48,
"tbk": 1,
"tl": 28,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
69,
70,
554,
555,
556,
557,
558,
559,
560,
561
]
},
{
"tb": 102400,
"tbk": 160,
"tl": 95343,
"mb": 31520,
"mbk": 33,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
562,
563,
564,
565,
566,
567,
568,
569
]
},
{
"tb": 144,
"tbk": 1,
"tl": 64202756,
"mb": 144,
"mbk": 1,
"gb": 144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
570,
571,
572,
573,
574,
575,
576,
577,
578
]
},
{
"tb": 192,
"tbk": 6,
"tl": 409,
"mb": 192,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
57,
58,
59,
250,
579,
580,
236
]
},
{
"tb": 2304,
"tbk": 12,
"tl": 4963,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
18,
19,
20,
581,
582,
583
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2983,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
156,
157,
158,
159,
160,
161,
584,
236,
82
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
585,
586,
38,
398,
154,
155
]
},
{
"tb": 5312,
"tbk": 38,
"tl": 23708,
"mb": 5120,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
156,
157,
158,
194,
195,
196,
436,
437,
438,
439,
494
]
},
{
"tb": 192,
"tbk": 6,
"tl": 36958834,
"mb": 192,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
347,
348,
349,
350,
351,
587,
588
]
},
{
"tb": 256,
"tbk": 1,
"tl": 9612,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
29,
30,
31,
32,
33,
34,
35,
48,
589,
590
]
},
{
"tb": 1440,
"tbk": 6,
"tl": 380866336,
"mb": 1440,
"mbk": 6,
"gb": 1440,
"gbk": 6,
"eb": 0,
"ebk": 0,
"fs": [
1,
490,
591,
592,
593,
594,
595,
596,
597,
598
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1949,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
69,
70,
599,
600,
601,
602,
603,
604,
605,
606
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2823489,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
490,
607,
608,
609,
610,
611,
612,
613,
614
]
},
{
"tb": 16000,
"tbk": 4,
"tl": 2517,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
399,
615,
616,
617,
618,
619,
620,
621,
622
]
},
{
"tb": 144,
"tbk": 1,
"tl": 14559098,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
490,
623,
624,
625,
626,
154,
155,
279
]
},
{
"tb": 48,
"tbk": 1,
"tl": 64181749,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
329,
627,
628,
629,
630,
631,
632,
633,
634
]
},
{
"tb": 96,
"tbk": 2,
"tl": 1818,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
347,
348,
349,
350,
351,
635,
183
]
},
{
"tb": 288,
"tbk": 12,
"tl": 658,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
636,
387,
388,
389,
390,
391
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1344,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
83,
84,
85,
86,
87,
88,
89,
637,
92,
638
]
},
{
"tb": 576,
"tbk": 6,
"tl": 90,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
521,
152,
153,
154,
155,
279
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
29,
30,
31,
32,
33,
34,
35,
36,
639,
271
]
},
{
"tb": 3145728,
"tbk": 6,
"tl": 1709876,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
57,
58,
59,
60,
61,
62,
640
]
},
{
"tb": 288,
"tbk": 1,
"tl": 2755,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
641,
642,
643,
644,
645,
646,
647,
648,
649
]
},
{
"tb": 192,
"tbk": 6,
"tl": 38820,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
650,
322,
154,
155,
279
]
},
{
"tb": 1920,
"tbk": 12,
"tl": 18779382,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
651,
652,
653,
654,
655
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 4377,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
656,
657,
658,
659,
660
]
},
{
"tb": 384,
"tbk": 6,
"tl": 1118,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
661,
662
]
},
{
"tb": 134217728,
"tbk": 1,
"tl": 40819460,
"mb": 134217728,
"mbk": 1,
"gb": 134217728,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
156,
157,
158,
194,
195,
196,
663,
664,
665
]
},
{
"tb": 96,
"tbk": 6,
"tl": 704,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
150,
666,
471,
472,
473,
474
]
},
{
"tb": 56,
"tbk": 1,
"tl": 3270,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
667,
668,
236,
82,
669
]
},
{
"tb": 512,
"tbk": 4,
"tl": 913,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
670,
671,
672,
673,
468
]
},
{
"tb": 6528,
"tbk": 12,
"tl": 155,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
674,
675,
676,
677,
678,
679
]
},
{
"tb": 480,
"tbk": 1,
"tl": 78928178,
"mb": 480,
"mbk": 1,
"gb": 480,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
680,
681,
682,
683,
684,
685,
686,
687,
688
]
},
{
"tb": 96,
"tbk": 6,
"tl": 9390493,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
156,
157,
158,
159,
160,
161,
689,
434,
435
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1310116,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
69,
70,
282,
283,
284,
285,
286,
287,
690,
210,
154
]
},
{
"tb": 3576,
"tbk": 18,
"tl": 532,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
69,
70,
282,
283,
284,
285,
286,
287,
691,
262,
263
]
},
{
"tb": 1440,
"tbk": 6,
"tl": 473178000,
"mb": 1440,
"mbk": 6,
"gb": 1440,
"gbk": 6,
"eb": 0,
"ebk": 0,
"fs": [
1,
490,
692,
693,
694,
695,
696,
697,
698,
699
]
},
{
"tb": 6888,
"tbk": 42,
"tl": 985,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
69,
70,
282,
283,
284,
285,
286,
287,
691,
262,
700
]
},
{
"tb": 6072,
"tbk": 11,
"tl": 4511,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
443,
444,
445,
701,
702,
703
]
},
{
"tb": 256,
"tbk": 1,
"tl": 11465,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
156,
157,
158,
159,
160,
161,
704,
705,
706
]
},
{
"tb": 512,
"tbk": 1,
"tl": 10,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
707,
708,
709,
710,
711,
712,
713,
714
]
},
{
"tb": 2097152,
"tbk": 2,
"tl": 5643428,
"mb": 2097152,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
156,
157,
158,
159,
160,
161,
715,
716,
717
]
},
{
"tb": 11808,
"tbk": 12,
"tl": 350,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
718,
719,
720,
721,
722,
723
]
},
{
"tb": 952,
"tbk": 4,
"tl": 1358,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
69,
70,
258,
259,
260,
261,
262,
700,
724
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1337,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
156,
157,
158,
159,
160,
161,
725,
92,
638
]
},
{
"tb": 16000,
"tbk": 4,
"tl": 1721,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
114,
115,
116,
117,
118,
119,
726
]
},
{
"tb": 288,
"tbk": 2,
"tl": 7456,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
727,
728,
729,
730,
28
]
},
{
"tb": 2880,
"tbk": 24,
"tl": 2487,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
347,
348,
349,
350,
351,
731,
262
]
},
{
"tb": 480,
"tbk": 2,
"tl": 7356,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
732,
733,
734,
735,
736,
737,
738,
739,
740
]
},
{
"tb": 96,
"tbk": 6,
"tl": 36958977,
"mb": 96,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
156,
157,
158,
194,
195,
196,
197,
475,
476
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 147066,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
156,
157,
158,
194,
195,
196,
280,
741,
154
]
},
{
"tb": 30720,
"tbk": 1,
"tl": 10279,
"mb": 30720,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
29,
179,
180,
181,
742,
183,
184,
185
]
},
{
"tb": 3576,
"tbk": 18,
"tl": 86,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
69,
70,
282,
283,
284,
285,
286,
287,
288,
500,
273
]
},
{
"tb": 432,
"tbk": 18,
"tl": 390,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
743,
744,
745,
746,
747,
748,
749,
750,
751
]
},
{
"tb": 13377,
"tbk": 1,
"tl": 9723,
"mb": 13377,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
29,
30,
31,
32,
33,
34,
35,
48,
752,
50
]
},
{
"tb": 288,
"tbk": 1,
"tl": 2818,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
753,
754,
755,
756,
757,
758,
759,
760,
761
]
},
{
"tb": 96,
"tbk": 1,
"tl": 1267427,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
762,
763,
764,
765,
766,
767,
768,
769,
770
]
},
{
"tb": 2856,
"tbk": 4,
"tl": 4037,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
771,
468,
772,
773
]
},
{
"tb": 160,
"tbk": 1,
"tl": 9389,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
101,
102,
103,
104,
255,
774,
775,
236
]
},
{
"tb": 288,
"tbk": 2,
"tl": 79183,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
51,
52,
53,
776,
322
]
},
{
"tb": 62914560,
"tbk": 60,
"tl": 825187684,
"mb": 62914560,
"mbk": 60,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
156,
157,
158,
194,
195,
196,
436,
437,
438,
439,
516
]
},
{
"tb": 16000,
"tbk": 4,
"tl": 27271,
"mb": 16000,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
57,
58,
59,
777,
191,
192,
236
]
},
{
"tb": 96,
"tbk": 6,
"tl": 481,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
156,
157,
158,
159,
160,
161,
689,
434,
452
]
},
{
"tb": 2000,
"tbk": 4,
"tl": 3168,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
778,
779,
780,
781,
782,
783,
784,
785
]
},
{
"tb": 144,
"tbk": 6,
"tl": 9390599,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
450,
451,
434,
435,
474,
154
]
},
{
"tb": 960,
"tbk": 6,
"tl": 16712,
"mb": 960,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
121,
122,
123,
124,
786,
537,
538
]
},
{
"tb": 192,
"tbk": 1,
"tl": 109,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
787,
788,
789,
790,
791,
792,
793,
794,
795
]
},
{
"tb": 384,
"tbk": 6,
"tl": 44518,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
661,
796
]
},
{
"tb": 6291456,
"tbk": 6,
"tl": 440238,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
114,
115,
116,
117,
118,
119,
797
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3422,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
257,
113,
668
]
},
{
"tb": 96,
"tbk": 6,
"tl": 472652707,
"mb": 96,
"mbk": 6,
"gb": 96,
"gbk": 6,
"eb": 0,
"ebk": 0,
"fs": [
10,
29,
30,
31,
32,
33,
34,
35,
798,
799,
800
]
},
{
"tb": 2400,
"tbk": 12,
"tl": 230,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
801,
802,
803,
804,
805,
806
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 6904,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
64,
65,
66,
807,
808
]
},
{
"tb": 96,
"tbk": 1,
"tl": 8485,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
51,
52,
53,
809,
192
]
},
{
"tb": 192,
"tbk": 6,
"tl": 618,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
156,
157,
158,
194,
195,
196,
810,
811,
812
]
},
{
"tb": 192,
"tbk": 1,
"tl": 9653,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
813,
814,
815,
816,
817,
818,
819,
590,
169
]
},
{
"tb": 192,
"tbk": 6,
"tl": 508,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
426,
427,
428,
429,
430,
431,
432,
433,
434,
452
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 4484,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
57,
58,
59,
250,
820,
821,
8
]
},
{
"tb": 3456,
"tbk": 12,
"tl": 4852,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
822,
823,
824,
825,
826,
827
]
},
{
"tb": 12582912,
"tbk": 786432,
"tl": 428715,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
156,
157,
158,
194,
195,
196,
828,
829,
830
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 1743284,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
101,
102,
103,
104,
105,
324,
325,
831
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4925,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
832,
833,
834,
835,
836,
837,
838,
839
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2212,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
101,
186,
187,
188,
189,
520,
289,
184
]
},
{
"tb": 2688,
"tbk": 18,
"tl": 4416369,
"mb": 1536,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
515,
16
]
},
{
"tb": 384,
"tbk": 6,
"tl": 44493,
"mb": 384,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
840,
796
]
},
{
"tb": 288,
"tbk": 2,
"tl": 3915,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
841,
842,
843,
844,
184
]
},
{
"tb": 30720,
"tbk": 192,
"tl": 797474,
"mb": 30720,
"mbk": 192,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
156,
157,
158,
159,
160,
161,
845,
846,
847
]
},
{
"tb": 96,
"tbk": 1,
"tl": 110,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
762,
848,
849,
850,
851,
852,
853,
854,
154,
155
]
},
{
"tb": 64,
"tbk": 1,
"tl": 3,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
855,
856,
857,
858,
859,
860,
861,
862,
863
]
},
{
"tb": 288,
"tbk": 2,
"tl": 10198,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
864,
865,
866,
867,
183
]
},
{
"tb": 144,
"tbk": 1,
"tl": 257,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
490,
868,
869,
870,
871,
872,
873,
874,
875
]
},
{
"tb": 1920,
"tbk": 12,
"tl": 4268622,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
114,
115,
116,
117,
118,
119,
876
]
},
{
"tb": 224,
"tbk": 1,
"tl": 8489,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
877,
878,
879,
880,
192
]
},
{
"tb": 576,
"tbk": 1,
"tl": 78775476,
"mb": 576,
"mbk": 1,
"gb": 576,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
881,
882,
883,
884,
885,
886,
887,
888,
889
]
},
{
"tb": 1248,
"tbk": 12,
"tl": 328,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
890,
891,
892,
893,
894,
895
]
},
{
"tb": 480,
"tbk": 4,
"tl": 224,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
347,
348,
349,
350,
351,
467,
289
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
585,
586,
271,
82,
669
]
},
{
"tb": 219421,
"tbk": 10,
"tl": 9886,
"mb": 124496,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
64,
65,
66,
67,
896
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2170,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
771,
500,
273,
154
]
},
{
"tb": 480,
"tbk": 4,
"tl": 6517,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
347,
348,
349,
350,
351,
465,
897
]
},
{
"tb": 192,
"tbk": 1,
"tl": 18788,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
813,
814,
815,
816,
817,
898,
773,
154,
155
]
},
{
"tb": 192,
"tbk": 6,
"tl": 58,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
347,
899,
900,
901,
902,
903,
904,
905,
906,
907,
908
]
},
{
"tb": 288,
"tbk": 2,
"tl": 6555,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
51,
52,
53,
343,
253
]
},
{
"tb": 192,
"tbk": 1,
"tl": 131,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
787,
909,
910,
911,
912,
913,
914,
915,
916
]
},
{
"tb": 6888,
"tbk": 42,
"tl": 143,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
69,
70,
282,
283,
284,
285,
286,
287,
288,
468,
772
]
},
{
"tb": 2304,
"tbk": 6,
"tl": 9389813,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
917,
918,
919,
920,
921,
922,
923,
924,
925
]
},
{
"tb": 6291456,
"tbk": 6,
"tl": 1578392,
"mb": 6291456,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
114,
115,
116,
117,
118,
119,
926
]
},
{
"tb": 192,
"tbk": 6,
"tl": 56916,
"mb": 192,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
927,
928,
929,
930,
931,
932
]
},
{
"tb": 96,
"tbk": 6,
"tl": 344,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
150,
151,
471,
933,
453,
28
]
},
{
"tb": 3072,
"tbk": 6,
"tl": 1295,
"mb": 3072,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
57,
58,
59,
934,
55,
28,
82
]
},
{
"tb": 288,
"tbk": 2,
"tl": 29,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
51,
52,
53,
935,
236
]
},
{
"tb": 384,
"tbk": 6,
"tl": 1076,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
840,
662
]
},
{
"tb": 1920,
"tbk": 6,
"tl": 71,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
57,
58,
59,
250,
936,
580,
236
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
29,
30,
31,
32,
33,
34,
35,
798,
937,
236
]
},
{
"tb": 480,
"tbk": 6,
"tl": 9388847,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
938,
939,
940,
941,
942,
943,
944,
945,
946
]
},
{
"tb": 12582912,
"tbk": 6,
"tl": 26706511,
"mb": 12582912,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
114,
115,
116,
117,
118,
119,
947
]
},
{
"tb": 192,
"tbk": 6,
"tl": 472625674,
"mb": 192,
"mbk": 6,
"gb": 192,
"gbk": 6,
"eb": 0,
"ebk": 0,
"fs": [
149,
927,
948,
949,
950,
951,
952
]
},
{
"tb": 1952,
"tbk": 13,
"tl": 8328838,
"mb": 1952,
"mbk": 13,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
953,
954,
955,
956,
957,
958,
959,
960
]
},
{
"tb": 144,
"tbk": 1,
"tl": 14559093,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
570,
961,
962,
963,
964,
154,
155,
279
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 55380457,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
101,
102,
103,
104,
105,
965,
164,
966
]
},
{
"tb": 24,
"tbk": 1,
"tl": 9718,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
967,
968,
50,
169
]
},
{
"tb": 144,
"tbk": 1,
"tl": 828505,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
969,
970,
971,
972,
973,
974,
975,
976,
977
]
},
{
"tb": 2304,
"tbk": 12,
"tl": 425,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
978,
979,
980,
981,
982,
983,
984,
985,
986
]
},
{
"tb": 1440,
"tbk": 12,
"tl": 36958877,
"mb": 1152,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
987,
476,
154,
155,
279
]
},
{
"tb": 96,
"tbk": 6,
"tl": 326,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
150,
666,
471,
933,
453,
28
]
},
{
"tb": 128000,
"tbk": 4,
"tl": 1737,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
114,
115,
116,
117,
118,
119,
988
]
},
{
"tb": 469762048,
"tbk": 7,
"tl": 13900029,
"mb": 67108864,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
114,
115,
116,
117,
118,
119,
989
]
},
{
"tb": 1926,
"tbk": 6,
"tl": 58070,
"mb": 1926,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
29,
30,
31,
32,
33,
34,
35,
48,
990,
502
]
},
{
"tb": 25600,
"tbk": 160,
"tl": 768,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
156,
157,
158,
194,
195,
196,
280,
991,
568
]
},
{
"tb": 256,
"tbk": 1,
"tl": 12,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
83,
84,
85,
86,
87,
88,
89,
992,
773,
154
]
},
{
"tb": 96,
"tbk": 6,
"tl": 641,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
156,
157,
158,
194,
195,
196,
993,
811,
812
]
},
{
"tb": 576,
"tbk": 6,
"tl": 90,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
521,
471,
933,
453,
28,
82
]
},
{
"tb": 512,
"tbk": 1,
"tl": 18,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
57,
58,
59,
60,
327,
994,
55
]
},
{
"tb": 512,
"tbk": 1,
"tl": 56,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
995,
996,
997,
998,
999,
1000,
1001,
1002
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2220,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
771,
289,
184,
185
]
},
{
"tb": 62914560,
"tbk": 60,
"tl": 4731768972,
"mb": 62914560,
"mbk": 60,
"gb": 62914560,
"gbk": 60,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
57,
58,
59,
60,
1003,
1004,
1005
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
29,
30,
31,
32,
33,
34,
35,
36,
639,
38
]
},
{
"tb": 288,
"tbk": 12,
"tl": 18779435,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
139,
140,
141,
142,
143,
144,
145,
146,
1006,
655
]
},
{
"tb": 50331648,
"tbk": 6,
"tl": 21651708,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
57,
58,
59,
60,
128,
129,
1007
]
},
{
"tb": 256,
"tbk": 1,
"tl": 673,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
69,
70,
258,
259,
260,
261,
262,
1008,
1009
]
},
{
"tb": 83886080,
"tbk": 524288,
"tl": 7028970,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
156,
157,
158,
159,
160,
161,
1010,
163,
164
]
},
{
"tb": 30720,
"tbk": 1,
"tl": 3610,
"mb": 30720,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
57,
58,
59,
250,
820,
1011,
113
]
},
{
"tb": 23808,
"tbk": 117,
"tl": 683846,
"mb": 23808,
"mbk": 117,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
101,
102,
103,
104,
255,
256,
442,
191
]
},
{
"tb": 1920,
"tbk": 6,
"tl": 45257,
"mb": 1920,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
156,
157,
158,
194,
195,
196,
280,
1012,
236
]
},
{
"tb": 1677721600,
"tbk": 2621440,
"tl": 31305791,
"mb": 1760,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
562,
563,
564,
565,
566,
1013,
163,
164
]
},
{
"tb": 30720,
"tbk": 6,
"tl": 28164,
"mb": 30720,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
57,
58,
59,
250,
820,
1014,
113
]
},
{
"tb": 402653184,
"tbk": 6,
"tl": 21505722,
"mb": 67108864,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
399,
400,
401,
402,
403,
1015,
1016,
1017
]
},
{
"tb": 40,
"tbk": 1,
"tl": 6,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
312,
313,
314,
315,
316,
317,
318,
319,
1018
]
},
{
"tb": 96,
"tbk": 6,
"tl": 229253,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
121,
122,
123,
124,
1019,
153,
154
]
},
{
"tb": 5760,
"tbk": 24,
"tl": 62,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
1020,
1021
]
},
{
"tb": 192,
"tbk": 6,
"tl": 1387,
"mb": 192,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
1022,
1023,
1024,
1025,
1026,
1027
]
},
{
"tb": 256,
"tbk": 4,
"tl": 133474,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
57,
58,
59,
60,
61,
62,
1028
]
},
{
"tb": 3456,
"tbk": 12,
"tl": 275,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1029,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1957,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
69,
70,
1038,
1039,
1040,
1041,
1042,
1043,
1044,
1045
]
},
{
"tb": 72,
"tbk": 1,
"tl": 1311621,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
490,
491,
492,
493,
437,
438,
439,
462,
210,
154
]
},
{
"tb": 224,
"tbk": 1,
"tl": 9739,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
29,
30,
31,
32,
33,
34,
35,
48,
1046,
1047
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 9714,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
29,
30,
31,
32,
33,
34,
35,
48,
1048,
302
]
},
{
"tb": 4000,
"tbk": 4,
"tl": 4021,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
101,
186,
187,
188,
189,
520,
468,
772
]
},
{
"tb": 1926,
"tbk": 6,
"tl": 81,
"mb": 321,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
347,
899,
900,
901,
902,
903,
904,
905,
1049,
907,
908
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 4014,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
101,
1050,
1051,
1052,
1053,
1054,
1055,
1056,
1057
]
},
{
"tb": 20971200,
"tbk": 80,
"tl": 77899,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
1058,
154
]
},
{
"tb": 16000,
"tbk": 4,
"tl": 3148,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
399,
400,
401,
402,
1059,
772,
773,
154
]
},
{
"tb": 3576,
"tbk": 18,
"tl": 538,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
69,
70,
282,
283,
284,
285,
286,
287,
691,
262,
1008
]
},
{
"tb": 256,
"tbk": 1,
"tl": 12,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
156,
157,
158,
194,
195,
196,
1060,
773,
154
]
},
{
"tb": 72,
"tbk": 1,
"tl": 13019,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
1061,
185,
154,
155,
279
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 7479,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
656,
657,
658,
659,
1062
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1310825,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
490,
491,
492,
493,
437,
438,
439,
440,
210,
154
]
},
{
"tb": 288,
"tbk": 1,
"tl": 13762993,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1063,
1064,
1065,
1066,
1067,
1068,
1069,
1070,
1071
]
},
{
"tb": 72,
"tbk": 1,
"tl": 9736,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
813,
1072,
1073,
1074,
1075,
1076,
169
]
},
{
"tb": 240,
"tbk": 1,
"tl": 62471830,
"mb": 240,
"mbk": 1,
"gb": 240,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
1077,
1078,
1079,
1080,
1081,
1082,
1083,
1084,
1085
]
},
{
"tb": 576,
"tbk": 12,
"tl": 73474454,
"mb": 576,
"mbk": 12,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
490,
1086,
1087,
1088,
1089,
1090,
1091,
1092,
1093
]
},
{
"tb": 48,
"tbk": 1,
"tl": 4636,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1094,
1095,
1096,
1097,
1098,
1099,
1100,
1101,
1102
]
},
{
"tb": 144,
"tbk": 1,
"tl": 14559109,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1103,
1104,
1105,
1106,
1107,
154,
155,
279
]
},
{
"tb": 576,
"tbk": 2,
"tl": 9662,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
1108,
1109,
1110,
1111,
169
]
},
{
"tb": 96,
"tbk": 6,
"tl": 18,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
150,
666,
152,
153,
154,
155
]
},
{
"tb": 73880,
"tbk": 39,
"tl": 60963,
"mb": 36992,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
64,
65,
66,
807,
1112
]
},
{
"tb": 84464,
"tbk": 1635,
"tl": 7708726,
"mb": 17120,
"mbk": 13,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
64,
1113,
1114,
1115,
1116,
1117,
1118
]
},
{
"tb": 512,
"tbk": 1,
"tl": 35,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
156,
157,
158,
194,
195,
196,
1119,
55,
28
]
},
{
"tb": 32,
"tbk": 1,
"tl": 9403,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
101,
102,
103,
104,
255,
1120,
775,
236
]
},
{
"tb": 3536,
"tbk": 34,
"tl": 502,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
17,
890,
891,
892,
1121,
1122,
1123
]
},
{
"tb": 25166016,
"tbk": 18,
"tl": 470173,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
57,
58,
59,
60,
327,
1124,
291
]
},
{
"tb": 768,
"tbk": 12,
"tl": 18777872,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
1125,
1126,
1127,
1128,
1129
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 9041,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
64,
65,
66,
807,
1130
]
},
{
"tb": 960,
"tbk": 6,
"tl": 154462,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
121,
122,
123,
124,
1131,
1132,
1133
]
},
{
"tb": 16000,
"tbk": 125,
"tl": 136,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
56,
57,
58,
59,
250,
1134,
191,
192
]
},
{
"tb": 2736,
"tbk": 6,
"tl": 2679,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
265,
266,
267,
1135,
1136,
1137
]
},
{
"tb": 4608,
"tbk": 6,
"tl": 25362,
"mb": 4608,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
490,
1138,
1139,
1140,
1141,
1142,
1143,
1144,
1145
]
},
{
"tb": 13344,
"tbk": 32,
"tl": 126059,
"mb": 13344,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
101,
102,
103,
104,
255,
256,
7,
8
]
},
{
"tb": 192,
"tbk": 6,
"tl": 4,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
149,
1022,
1146,
82,
669
]
}
],
"ftbl": [
"[root]",
"0x5fa3e964d4a9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5fa3e9714e8c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e98ce966: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98ce966: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98ce966: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e9753c9d: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x5fa3e99afca7: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x5fa3e963b77b: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x5fa3e962723c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x5fa3e9bb4b79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5fa3e9bb3319: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5fa3e9745122: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa3e97526b9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5fa3e9926d91: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5fa3e987508d: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:540:13)",
"0x5fa3e96d7428: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x5fa3e9b62739: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5fa3e9b6eb7b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5fa3e9b6e5f1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5fa3e9b6abbb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5fa3e9b6787e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5fa3e9b68c4c: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5fa3e9b67d8a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5fa3e97337b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa3e9751d89: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5fa3e9927f32: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5fa3e976a48c: winter_verifier::perform_verification (verifier/src/lib.rs:182:9)",
"0x5fa3e97729d2: winter_verifier::verify (verifier/src/lib.rs:110:21)",
"0x5fa3e9bb35ca: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e9bb4bbc: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e9bb4bbc: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e9bb4bbc: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5fa3e9bb57fc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5fa3e9bb57fc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5fa3e9bb57fc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5fa3e9824df4: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x5fa3e9824ad6: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x5fa3e96daa03: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x5fa3e971055c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e98ba1c7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98ba1c7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98ba1c7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e98ba1c7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e995906e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e994e2c7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e96ec42e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e97ee79f: winter_prover::Prover::generate_proof (prover/src/lib.rs:243:41)",
"0x5fa3e9bb2e2c: <winter_utils::serde::byte_reader::SliceReader as winter_utils::serde::byte_reader::ByteReader>::read_vec (src/serde/byte_reader.rs:151:22)",
"0x5fa3e9b52d02: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:348:22)",
"0x5fa3e9b4de53: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:174:32)",
"0x5fa3e973e972: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa3e9752a19: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5fa3e9928402: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5fa3e996a89e: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x5fa3e9769c0f: winter_verifier::perform_verification (verifier/src/lib.rs:308:25)",
"0x5fa3e97160ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e98ce736: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98ce736: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98ce736: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e965ae7b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5fa3e964f393: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x5fa3e981f018: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x5fa3e981e833: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x5fa3e9bb3ab0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa3e9bb3ce9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5fa3e9bb4f12: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5fa3e9bb3d49: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x5fa3e99816ed: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x5fa3e9b36899: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5fa3e9aa30aa: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e98c0451: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98c0451: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98c0451: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e98c0451: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e99597db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e994e136: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e959f65b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e962697f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x5fa3e996a848: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x5fa3e996d1a4: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x5fa3e9769cbe: winter_verifier::perform_verification (verifier/src/lib.rs:314:25)",
"0x5fa3e95d1d99: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:118:9)",
"0x5fa3e9b608ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e9b5cb6c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e9b5cb6c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e9b5cb6c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5fa3e9b5c62c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5fa3e9b5c62c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5fa3e9b5c62c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5fa3e9b5c6b6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x5fa3e9842b2b: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x5fa3e987273c: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x5fa3e98a5107: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98a5107: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98a5107: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e98a5107: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e995a4fe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e99544b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e95a186e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e986ad8f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x5fa3e9710a9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e98ce916: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98ce916: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98ce916: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e965afbb: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5fa3e99717a5: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x5fa3e980c8e7: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:706:26)",
"0x5fa3e97f0110: winter_prover::Prover::generate_proof (prover/src/lib.rs:472:37)",
"0x5fa3e974ef22: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa3e9751fc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5fa3e992baaf: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5fa3e99a75d9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x5fa3e9614583: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x5fa3e9bb26cc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x5fa3e9bb0d9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x5fa3e9bb1cf8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x5fa3e9bb1cf8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x5fa3e9bae964: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5fa3e9baec13: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x5fa3e99e77eb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:39:30)",
"0x5fa3e95f39f5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e95f39f5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e95f39f5: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5fa3e993dbf4: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5fa3e99eaf6c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:148:31)",
"0x5fa3e99ee9e0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:122:17)",
"0x5fa3e96ce436: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5fa3e99781ab: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x5fa3e9977696: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x5fa3e980c4e4: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:691:36)",
"0x5fa3e98b2ee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98b2ee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98b2ee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e98b2ee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e9958dde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e994fc57: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e95a247e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e99b7994: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x5fa3e9715e4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e95f32ec: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e95f32ec: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e95f32ec: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5fa3e993ff19: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5fa3e993ff19: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5fa3e993ff19: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5fa3e99b85d6: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x5fa3e96f0bd9: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:82:31)",
"0x5fa3e95c6553: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5fa3e964c937: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x5fa3e998be95: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x5fa3e97d30bd: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:61:13)",
"0x5fa3e96540ab: winter_prover::trace::Trace::validate (src/trace/mod.rs:122:26)",
"0x5fa3e97f2f21: winter_prover::Prover::generate_proof (prover/src/lib.rs:370:17)",
"0x5fa3e980fcd4: winter_prover::Prover::prove (prover/src/lib.rs:171:37)",
"0x5fa3e95d12b2: <examples::do_work::DoWorkExample<H> as examples::Example>::prove (src/do_work/mod.rs:108:9)",
"0x5fa3e95f341c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e95f341c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e95f341c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5fa3e95f393c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5fa3e95f393c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5fa3e95f393c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5fa3e99763df: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:226:50)",
"0x5fa3e9973903: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x5fa3e98043dd: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:659:26)",
"0x5fa3e9b56012: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa3e9b571a9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5fa3e9b58878: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5fa3e9b4ec1a: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:13)",
"0x5fa3e942a8fd: winterfell::main (examples/src/main.rs:80:24)",
"0x5fa3e9894777: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e9894777: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e9894777: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e9894777: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e99592de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e9955697: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e95a1b8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e9842131: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x5fa3e9969bf3: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x5fa3e98ce556: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98ce556: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98ce556: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e999cc60: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x5fa3e9828bd9: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x5fa3e9832cb4: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x5fa3e97f1ace: winter_prover::Prover::generate_proof (prover/src/lib.rs:593:29)",
"0x5fa3e9822f58: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e9822f58: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e9822f58: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5fa3e993dc17: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5fa3e96fed36: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x5fa3e970639c: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x5fa3e962760c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x5fa3e97f27ad: winter_prover::Prover::generate_proof (prover/src/lib.rs:438:13)",
"0x5fa3e993e939: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5fa3e993e939: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5fa3e993e939: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5fa3e99b85ed: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x5fa3e99b8440: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5fa3e993f039: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5fa3e993f039: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5fa3e993f039: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5fa3e96581f6: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x5fa3e9a27c8f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x5fa3e9a351b2: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x5fa3e9719a9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e99b80c6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e99b80c6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e99b80c6: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5fa3e97c7ca3: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x5fa3e97ef583: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:33)",
"0x5fa3e965047b: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x5fa3e99b242f: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x5fa3e99b2504: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x5fa3e9740c02: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa3e9751cc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5fa3e992bd48: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5fa3e97f2bf6: winter_prover::Prover::generate_proof (prover/src/lib.rs:408:17)",
"0x5fa3e970edbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e98b2127: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98b2127: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98b2127: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e98b2127: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e995901e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e994f6b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e95a1fae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e996fe38: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x5fa3e963ce22: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x5fa3e96d25c4: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x5fa3e99f2d04: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x5fa3e965b303: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x5fa3e9a27c25: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x5fa3e97415e2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa3e9752209: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5fa3e992c0e2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5fa3e962849b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x5fa3e9772907: winter_verifier::verify (verifier/src/lib.rs:108:19)",
"0x5fa3e9a14184: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x5fa3e9843010: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x5fa3e9a14450: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x5fa3e9966af6: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x5fa3e9769d3a: winter_verifier::perform_verification (verifier/src/lib.rs:316:28)",
"0x5fa3e988a6b1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e988a6b1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e988a6b1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e988a6b1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e995871b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e9951e16: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e95a123b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e9614409: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x5fa3e95f1909: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5fa3e9709fee: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x5fa3e962742b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x5fa3e976913b: winter_verifier::perform_verification (verifier/src/lib.rs:263:61)",
"0x5fa3e9a37ab6: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x5fa3e98227e9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5fa3e9753f24: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x5fa3e99a7152: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x5fa3e9a7e656: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e9a7e656: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e9a7e656: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e9757d1c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x5fa3e9964b5e: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x5fa3e9622d3c: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x5fa3e976998e: winter_verifier::perform_verification (verifier/src/lib.rs:303:42)",
"0x5fa3e998f6eb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5fa3e998e891: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5fa3e97a1f4b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5fa3e978dd8f: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5fa3e9799711: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5fa3e9794caa: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5fa3e97725a9: winter_verifier::verify (verifier/src/lib.rs:95:32)",
"0x5fa3e9a3f6d0: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x5fa3e97f1bc5: winter_prover::Prover::generate_proof (prover/src/lib.rs:598:34)",
"0x5fa3e971a7bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e98ce876: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98ce876: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98ce876: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e97eefc9: winter_prover::Prover::generate_proof (prover/src/lib.rs:299:44)",
"0x5fa3e9429d4d: winterfell::main (examples/src/main.rs:49:17)",
"0x5fa3e98cc097: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5fa3e9976476: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:228:38)",
"0x5fa3e9ab46ac: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e9ab46ac: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e9ab46ac: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5fa3e9a854a9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5fa3e9a854a9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5fa3e9a854a9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5fa3e9962a2c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x5fa3e9828b07: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x5fa3e97cabe1: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x5fa3e97c7fbc: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x5fa3e97cd211: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x5fa3e9b611a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e9b611a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e9b611a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e9b611a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5fa3e9b615ee: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e9b615b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e9b6284e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e9b60299: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x5fa3e9b52a1e: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:168:21)",
"0x5fa3e9b4de38: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:176:34)",
"0x5fa3e98b3111: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98b3111: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98b3111: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e98b3111: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e99589fb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e9951cc6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e95a086b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e96f0a5c: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:82:9)",
"0x5fa3e99eafd0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:149:33)",
"0x5fa3e9712f3a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e988415e: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e988415e: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e988415e: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e988415e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5fa3e995a21e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e994f957: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e99e676e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e9994f64: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:142:33)",
"0x5fa3e9994ea2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x5fa3e97f0868: winter_prover::Prover::generate_proof (prover/src/lib.rs:514:9)",
"0x5fa3e97ce83e: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x5fa3e9961e5d: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x5fa3e9965406: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x5fa3e9973940: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x5fa3e964ef42: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x5fa3e9a143fb: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x5fa3e971370a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e98a5781: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98a5781: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98a5781: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e98a5781: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e995adab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e994f306: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e959f09b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e9803c73: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:634:36)",
"0x5fa3e9733ca2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa3e9752539: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5fa3e992ab42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5fa3e995dffc: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x5fa3e987ed4a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x5fa3e9875239: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:536:13)",
"0x5fa3e9b53f46: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:365:21)",
"0x5fa3e9b533d6: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:146:27)",
"0x5fa3e996d3d9: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x5fa3e9b48799: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5fa3e9b43b39: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5fa3e9aa6830: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa3e9aa8899: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5fa3e9a83451: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5fa3e97f2808: winter_prover::Prover::generate_proof (prover/src/lib.rs:440:13)",
"0x5fa3e9834a92: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x5fa3e960b4c6: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:493:32)",
"0x5fa3e95c109a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5fa3e968e2a2: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5fa3e958cc9b: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5fa3e95a9906: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5fa3e97182fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e9895135: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e9895135: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e9895135: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e9895135: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5fa3e995910e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e994e737: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e959ecce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e99761b0: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:218:46)",
"0x5fa3e9a27caa: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x5fa3e97c4723: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:200:34)",
"0x5fa3e95b3b0a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5fa3e96871bf: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5fa3e97c9db1: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x5fa3e95b94aa: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5fa3e99f9a05: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5fa3e97ccf48: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x5fa3e981e81d: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x5fa3e97f0f26: winter_prover::Prover::generate_proof (prover/src/lib.rs:548:13)",
"0x5fa3e98ae9d1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98ae9d1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98ae9d1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e98ae9d1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e995acfb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e9953026: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e95a164b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e9626c9f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x5fa3e99b741a: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x5fa3e987f5ae: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x5fa3e963d89d: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x5fa3e987ecce: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x5fa3e98816c6: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x5fa3e98749ea: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:362:9)",
"0x5fa3e971151c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e99832be: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e99832be: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e99832be: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5fa3e993db77: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5fa3e96dac58: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x5fa3e97ee656: winter_prover::Prover::generate_proof (prover/src/lib.rs:228:27)",
"0x5fa3e971aa5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e98ceb46: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98ceb46: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98ceb46: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e965ad3b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5fa3e9978c77: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x5fa3e9970c8c: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x5fa3e99777bc: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x5fa3e97117bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e98beb27: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98beb27: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98beb27: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e98beb27: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e9937b76: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5fa3e9951ba7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e95a0d6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e982fd5b: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x5fa3e971001c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e98a2ee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98a2ee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98a2ee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e98a2ee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e9932bcf: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5fa3e9950849: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e959fe5e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e9772784: winter_verifier::verify (verifier/src/lib.rs:101:24)",
"0x5fa3e9a1d01d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x5fa3e970f2fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e9a16776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e9a16776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e9a16776: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5fa3e993f3b9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5fa3e993f3b9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5fa3e993f3b9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5fa3e9a3b846: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x5fa3e9874c22: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:348:9)",
"0x5fa3e99ed63b: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:50:13)",
"0x5fa3e98cdbc3: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5fa3e993f1f9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5fa3e993f1f9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5fa3e993f1f9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5fa3e97c7d29: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x5fa3e9b53dc4: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:361:22)",
"0x5fa3e96ff04d: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x5fa3e998eccb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5fa3e998e471: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5fa3e97a2f0b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5fa3e979b451: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x5fa3e97a177d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x5fa3e979510e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x5fa3e9a3f6eb: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x5fa3e99b79a3: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x5fa3e9a3b82c: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x5fa3e99e764a: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:25:25)",
"0x5fa3e976a247: winter_verifier::perform_verification (verifier/src/lib.rs:223:43)",
"0x5fa3e989e7f7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e989e7f7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e989e7f7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e989e7f7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e995ab7e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e9954f39: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e959f0ee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e97ee603: winter_prover::Prover::generate_proof (prover/src/lib.rs:217:20)",
"0x5fa3e97c7c8c: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x5fa3e99ab8e0: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x5fa3e9a3f65e: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x5fa3e98254f8: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x5fa3e96d5499: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x5fa3e9962f53: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x5fa3e9a21274: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x5fa3e996d1bf: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x5fa3e9995580: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x5fa3e9874985: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:364:13)",
"0x5fa3e96f1670: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:40:22)",
"0x5fa3e99ed6e7: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:13)",
"0x5fa3e97f2b32: winter_prover::Prover::generate_proof (prover/src/lib.rs:403:21)",
"0x5fa3e99ee58d: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:33)",
"0x5fa3e97f2bd3: winter_prover::Prover::generate_proof (prover/src/lib.rs:407:21)",
"0x5fa3e988e911: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e988e911: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e988e911: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e988e911: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e9959f1b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e9955516: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e959f20b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e9626bd7: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x5fa3e9835eb0: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x5fa3e97ee8ba: winter_prover::Prover::generate_proof (prover/src/lib.rs:257:22)",
"0x5fa3e9983bc2: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x5fa3e9821240: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x5fa3e9997bb1: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x5fa3e97129fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e98cd856: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98cd856: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98cd856: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5fa3e98cc067: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5fa3e9828a53: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x5fa3e986ed61: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x5fa3e976933e: winter_verifier::perform_verification (verifier/src/lib.rs:272:24)",
"0x5fa3e9a1d95b: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x5fa3e98249cc: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x5fa3e9a3f495: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x5fa3e9b57784: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:155:27)",
"0x5fa3e9b4e178: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:29)",
"0x5fa3e98b42f0: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98b42f0: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98b42f0: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e98b42f0: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5fa3e99585bb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e9953da6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e959fdbb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e99a7075: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x5fa3e981e151: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x5fa3e9835df3: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x5fa3e9b58118: <winter_air::proof::context::Context as winter_utils::serde::Deserializable>::read_from (src/proof/context.rs:184:35)",
"0x5fa3e9b4dbf7: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:27)",
"0x5fa3e98752c9: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:534:17)",
"0x5fa3e97c77be: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x5fa3e97c5f17: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5fa3e96055ac: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:293:57)",
"0x5fa3e96daa1e: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x5fa3e9962698: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x5fa3e97d308f: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:60:9)",
"0x5fa3e97ce7d0: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x5fa3e99ee819: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:129:9)",
"0x5fa3e9891727: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e9891727: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e9891727: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e9891727: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e995b5de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e9951507: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e95a1cfe: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e97cb277: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x5fa3e9749152: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa3e9752389: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5fa3e992aff2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5fa3e9a27f89: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x5fa3e9611c8d: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x5fa3e976f869: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:214:32)",
"0x5fa3e95b4603: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5fa3e989c666: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e989c666: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e989c666: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e989c666: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5fa3e9958b6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e99515dc: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e99609be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e9962edb: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x5fa3e99b25d7: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x5fa3e9a27e0b: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x5fa3e97ca8b6: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x5fa3e97ce76c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x5fa3e97f27ed: winter_prover::Prover::generate_proof (prover/src/lib.rs:439:13)",
"0x5fa3e9838a48: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x5fa3e9842dda: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x5fa3e98b9637: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98b9637: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98b9637: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e98b9637: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e995cade: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e99554b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e959fd0e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e97eee32: winter_prover::Prover::generate_proof (prover/src/lib.rs:286:23)",
"0x5fa3e993debb: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e993debb: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e993debb: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e993debb: <[V] as alloc::slice::Concat<T>>::concat (alloc/src/slice.rs:712:26)",
"0x5fa3e993dcab: alloc::slice::<impl [T]>::concat (alloc/src/slice.rs:561:9)",
"0x5fa3e982c199: winter_prover::trace::commitment::build_segment_queries::{{closure}}::{{closure}} (src/trace/commitment.rs:164:27)",
"0x5fa3e96aa019: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5fa3e982a736: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:159:13)",
"0x5fa3e971590c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e989df91: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e989df91: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e989df91: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e989df91: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e9958edb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e9952626: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e959e4ab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e9803ba6: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:630:42)",
"0x5fa3e99828ce: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x5fa3e9628185: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5fa3e9b6466d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5fa3e9b5f538: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5fa3e9b5ddd7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5fa3e9627cae: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x5fa3e9a1c82c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x5fa3e9824b58: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x5fa3e97d2b27: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x5fa3e97d08cd: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x5fa3e9b538d2: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:215:25)",
"0x5fa3e9b4e15d: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:188:24)",
"0x5fa3e98acf37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98acf37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98acf37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e98acf37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e995c2be: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e99552d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e959f4de: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e97c42c4: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:198:23)",
"0x5fa3e988c541: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e988c541: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e988c541: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e988c541: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e995a90b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e9950276: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e95a045b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e9626b0f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x5fa3e98c19a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98c19a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98c19a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e98c19a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e995c3de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e99534c9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e95a1ede: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e964e5e0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x5fa3e98899a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98899a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98899a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e98899a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e995b71e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e994e517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e95a037e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e9842f51: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x5fa3e98cecd6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98cecd6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98cecd6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e97ef00d: winter_prover::Prover::generate_proof (prover/src/lib.rs:300:37)",
"0x5fa3e98b8ba1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98b8ba1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98b8ba1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e98b8ba1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e995bb3b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e99530b6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e959f6cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e97eec5d: winter_prover::Prover::generate_proof (prover/src/lib.rs:266:43)",
"0x5fa3e999d10a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x5fa3e99b7299: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x5fa3e98421a5: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x5fa3e9769e15: winter_verifier::perform_verification (verifier/src/lib.rs:320:5)",
"0x5fa3e9824b12: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x5fa3e97c4210: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:197:28)",
"0x5fa3e9717dbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e98863c1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98863c1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98863c1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e98863c1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e995b9db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e994ed06: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e95a0eab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e9768d9f: winter_verifier::perform_verification (verifier/src/lib.rs:216:40)",
"0x5fa3e99956ec: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x5fa3e972a392: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa3e9751a59: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5fa3e9926b42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5fa3e96f40d9: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:174:17)",
"0x5fa3e96f1f30: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:54:17)",
"0x5fa3e9b60da0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa3e9b5c5f9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5fa3e9b5b5a1: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5fa3e9b5beb0: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x5fa3e9a33e9d: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x5fa3e987bc93: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:505:13)",
"0x5fa3e96d8484: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x5fa3e997a4a2: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x5fa3e9979147: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5fa3e9803df7: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:645:31)",
"0x5fa3e97d312c: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:62:13)",
"0x5fa3e96146f1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x5fa3e9626fa8: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x5fa3e942a9d5: winterfell::main (examples/src/main.rs:83:11)",
"0x5fa3e9736912: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa3e9752119: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5fa3e992794f: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5fa3e9962d8a: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x5fa3e998f02b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5fa3e998e681: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5fa3e97a212b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5fa3e97778bd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5fa3e9640f89: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5fa3e981ca00: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5fa3e971494c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e9888ae7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e9888ae7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e9888ae7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e9888ae7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e995a53e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e9954d37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e95a0d4e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e9810619: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces (src/do_work/prover.rs:30:9)",
"0x5fa3e9a3b983: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x5fa3e97c7d84: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x5fa3e9757f79: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x5fa3e98a2787: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98a2787: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98a2787: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e98a2787: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e995967e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e9950807: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e95a271e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e965233a: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:132:32)",
"0x5fa3e960e53c: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x5fa3e977cd31: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5fa3e9780477: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5fa3e97751bb: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5fa3e9a37c0e: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x5fa3e9a35104: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x5fa3e97f138b: winter_prover::Prover::generate_proof (prover/src/lib.rs:561:9)",
"0x5fa3e98a4877: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98a4877: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98a4877: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e98a4877: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e995970e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e9955317: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e95a1ace: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e996d532: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x5fa3e964e9cb: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x5fa3e95bb32c: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5fa3e9824954: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x5fa3e998fdab: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5fa3e998e7e1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5fa3e97a24eb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5fa3e977779d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5fa3e96400fc: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5fa3e963d911: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x5fa3e9842bf6: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x5fa3e9842214: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x5fa3e9a14103: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x5fa3e974a022: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa3e97529e9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5fa3e9929842: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5fa3e976a673: winter_verifier::perform_verification (verifier/src/lib.rs:177:9)",
"0x5fa3e9759191: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x5fa3e97102bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e98c8ffe: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98c8ffe: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98c8ffe: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e98c8ffe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5fa3e995a43b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e9951b76: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e99f310b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e962001c: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x5fa3e97efc77: winter_prover::Prover::generate_proof (prover/src/lib.rs:442:35)",
"0x5fa3e999c782: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x5fa3e970ce5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e98b8771: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98b8771: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98b8771: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e98b8771: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e99590cb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e99529c6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e959f0cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e97c9e5a: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x5fa3e9b52ec9: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:352:21)",
"0x5fa3e970cbbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e9895991: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e9895991: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e9895991: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e9895991: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e995b37b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e9950ed6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e959e78b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e9768cd2: winter_verifier::perform_verification (verifier/src/lib.rs:212:41)",
"0x5fa3e971566c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e9883c21: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e9883c21: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e9883c21: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e9883c21: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e995a3ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e994dac6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e95a201b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e97f06a3: winter_prover::Prover::generate_proof (prover/src/lib.rs:495:52)",
"0x5fa3e99626ff: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x5fa3e9a34152: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x5fa3e97f1a4f: winter_prover::Prover::generate_proof (prover/src/lib.rs:590:25)",
"0x5fa3e96ee9d0: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x5fa3e9626e38: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x5fa3e9995810: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x5fa3e96fed7b: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x5fa3e9893227: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e9893227: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e9893227: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e9893227: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e995923e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e9950d47: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e95a1bee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e984310f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x5fa3e9611cb0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x5fa3e971a51c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e98c6907: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98c6907: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98c6907: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e98c6907: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e9959fde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e9953627: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e959e93e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e95d1d54: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:112:30)",
"0x5fa3e97689d9: winter_verifier::perform_verification (verifier/src/lib.rs:183:13)",
"0x5fa3e9995312: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x5fa3e9baed9e: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x5fa3e982501f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x5fa3e96dcf5f: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x5fa3e9b6e81b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5fa3e9b6e541: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5fa3e9b6ad7b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5fa3e9b653a1: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5fa3e9b65b37: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5fa3e9b606db: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5fa3e9755564: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x5fa3e99ab9fc: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x5fa3e9706629: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x5fa3e964323f: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x5fa3e9643307: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5fa3e976a156: winter_verifier::perform_verification (verifier/src/lib.rs:225:13)",
"0x5fa3e9b54709: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5fa3e9b554bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e9b58776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e9b58776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e9b58776: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e9b532b9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5fa3e9b5370b: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:211:22)",
"0x5fa3e99b94cb: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x5fa3e99afa9a: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x5fa3e9b6e9cb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5fa3e9b6e6a1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5fa3e9b6ac9b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5fa3e9b65471: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5fa3e9b65af7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5fa3e9b6072b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5fa3e9a3acb7: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x5fa3e99eca27: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:272:18)",
"0x5fa3e99eb297: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:166:30)",
"0x5fa3e9971866: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x5fa3e988d197: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e988d197: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e988d197: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e988d197: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e995bf6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e994d599: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e95a0c6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e996ee47: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x5fa3e987bbb8: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:510:13)",
"0x5fa3e9740712: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa3e9752149: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5fa3e9929122: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5fa3e9828c91: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x5fa3e982b078: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x5fa3e95c461a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5fa3e967ce45: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5fa3e98cde1c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98cde1c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98cde1c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5fa3e993ee79: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5fa3e993ee79: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5fa3e993ee79: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5fa3e97f06be: winter_prover::Prover::generate_proof (prover/src/lib.rs:500:39)",
"0x5fa3e953b149: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5fa3e9539c19: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5fa3e9538030: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa3e9538298: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x5fa3e9537b5a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x5fa3e9537b5a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x5fa3e942c6a1: alloc::string::String::reserve (alloc/src/string.rs:1152:9)",
"0x5fa3e942c6a1: <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend (alloc/src/string.rs:2173:14)",
"0x5fa3e942c77c: <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter (alloc/src/string.rs:2093:9)",
"0x5fa3e972c622: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa3e9752839: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5fa3e992b252: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5fa3e999cdb8: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x5fa3e9889141: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e9889141: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e9889141: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e9889141: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e995bf9b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e9950346: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e959e88b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e97ee4e3: winter_prover::Prover::generate_proof (prover/src/lib.rs:209:39)",
"0x5fa3e9a1d00c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x5fa3e973f842: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa3e9752419: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5fa3e9927ba2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5fa3e970657e: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x5fa3e970bc0c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e98adb31: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98adb31: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98adb31: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e98adb31: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e995b0ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e994f5a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e95a0e5b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e96da967: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x5fa3e9b6ed2b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5fa3e9b6e751: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5fa3e9b6aadb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5fa3e9b646cd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5fa3e9b5f84b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5fa3e9b5df13: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5fa3e9b59d7a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x5fa3e97696c1: winter_verifier::perform_verification (verifier/src/lib.rs:295:27)",
"0x5fa3e9a33bcd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x5fa3e9b43e7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e9ab457c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e9ab457c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e9ab457c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5fa3e9a84cc9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5fa3e9a84cc9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5fa3e9a84cc9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5fa3e9873e3f: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x5fa3e99831f6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5fa3e9627c48: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5fa3e98c0f17: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98c0f17: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98c0f17: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e98c0f17: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e995ab2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e9950147: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e959fa9e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e97ee416: winter_prover::Prover::generate_proof (prover/src/lib.rs:205:38)",
"0x5fa3e971440c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e98a3bc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98a3bc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98a3bc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e98a3bc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e9959a9e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e9954c79: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e959f94e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e96f177a: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:50:26)",
"0x5fa3e99952ef: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x5fa3e97d2e42: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::new (src/do_work/air.rs:35:23)",
"0x5fa3e97738d1: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:101:85)",
"0x5fa3e95c4432: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5fa3e96e0c0a: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:107:27)",
"0x5fa3e95fdbff: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5fa3e96de9a4: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:113:9)",
"0x5fa3e99e7b4c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:63:9)",
"0x5fa3e9969bd0: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x5fa3e96283ef: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x5fa3e99826fb: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x5fa3e96267d0: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x5fa3e971a27c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e988b557: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e988b557: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e988b557: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e988b557: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e993979d: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5fa3e995521c: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e95a14ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e97d182a: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x5fa3e97ccca7: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x5fa3e960abb0: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:221:17)",
"0x5fa3e95b5922: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5fa3e99e44dd: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::SpecFold>::spec_fold (iter/adapters/zip.rs:685:25)",
"0x5fa3e99d0ee7: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::fold (iter/adapters/zip.rs:249:9)",
"0x5fa3e99bb9b7: <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/zip.rs:103:9)",
"0x5fa3e98877e7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98877e7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98877e7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e98877e7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e995b73e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e99517f7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e95a232e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e97c3d13: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:253:9)",
"0x5fa3e98ce466: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98ce466: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98ce466: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e97ef051: winter_prover::Prover::generate_proof (prover/src/lib.rs:301:32)",
"0x5fa3e9973872: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x5fa3e97eec88: winter_prover::Prover::generate_proof (prover/src/lib.rs:268:13)",
"0x5fa3e9b54187: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x5fa3e9b52fed: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:357:24)",
"0x5fa3e971b23c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e98b8977: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98b8977: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98b8977: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e98b8977: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e995965e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e994d517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e959e60e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e97f05d6: winter_prover::Prover::generate_proof (prover/src/lib.rs:491:51)",
"0x5fa3e97124bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e98c54c8: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98c54c8: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98c54c8: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e98c54c8: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5fa3e995c72e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e9953407: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e9a3c17e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e987fe5c: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x5fa3e99ee4c0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:28)",
"0x5fa3e9a1408f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x5fa3e9a19e40: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x5fa3e9b575bd: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:151:28)",
"0x5fa3e982c11b: winter_prover::trace::commitment::build_segment_queries::{{closure}}::{{closure}} (src/trace/commitment.rs:162:42)",
"0x5fa3e9a33c77: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x5fa3e964322a: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x5fa3e9969853: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x5fa3e989b187: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e989b187: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e989b187: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e989b187: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e995c29e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e9950e27: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e959e7ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e996995b: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x5fa3e9652511: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:132:51)",
"0x5fa3e95b4a1a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5fa3e99f7da5: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5fa3e96f3f72: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:169:36)",
"0x5fa3e960b8e9: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:641:17)",
"0x5fa3e96222ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x5fa3e9769810: winter_verifier::perform_verification (verifier/src/lib.rs:302:9)",
"0x5fa3e997626a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x5fa3e99a6d42: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x5fa3e962827d: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x5fa3e9976527: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:228:37)",
"0x5fa3e99a7524: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x5fa3e9a19e2b: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x5fa3e997076a: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x5fa3e95b7c7a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5fa3e9969755: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:144:35)",
"0x5fa3e9654598: winter_prover::trace::Trace::validate (src/trace/mod.rs:177:13)",
"0x5fa3e9981835: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x5fa3e96d71d0: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x5fa3e97d2d16: <examples::do_work::air::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (src/do_work/air.rs:13:9)",
"0x5fa3e9604b09: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:211:31)",
"0x5fa3e95bbd3a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5fa3e96ac0a8: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5fa3e95853ba: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5fa3e95a563a: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5fa3e99b251a: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x5fa3e9717b1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e98a07cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98a07cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98a07cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e98a07cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5fa3e995b86e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e994d947: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e959ee8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e987ebf6: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x5fa3e98bac51: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98bac51: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98bac51: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e98bac51: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e9958f6b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e9953a96: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e95a053b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e9626a47: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x5fa3e9b572bd: <winter_air::proof::commitments::Commitments as winter_utils::serde::Deserializable>::read_from (src/proof/commitments.rs:108:22)",
"0x5fa3e9b4dbdc: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:167:27)",
"0x5fa3e9b52862: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:164:22)",
"0x5fa3e9873e2a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x5fa3e98b7f40: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98b7f40: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98b7f40: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e98b7f40: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5fa3e995a14b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e99518a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e959e27b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e99afbca: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x5fa3e97f2665: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:17)",
"0x5fa3e9a2135d: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x5fa3e9a33c96: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x5fa3e9832c1d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x5fa3e9842a4e: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x5fa3e970c91c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e9896dc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e9896dc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e9896dc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e9896dc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e99386b3: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5fa3e994dbc9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e95a001e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e97eef62: winter_prover::Prover::generate_proof (prover/src/lib.rs:291:36)",
"0x5fa3e9b5575c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e9b58726: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e9b58726: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e9b58726: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e9b4dd52: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:172:33)",
"0x5fa3e971af9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e9898d37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e9898d37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e9898d37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e9898d37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e995a26e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e994d6a7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e959fdde: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e9803d43: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:638:34)",
"0x5fa3e988c317: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e988c317: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e988c317: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e988c317: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e995a06e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e9955587: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e959e47e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e97c9c6a: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x5fa3e970db7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e98aff11: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98aff11: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98aff11: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e98aff11: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e995a3db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e994fd46: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e959eacb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e9832c0e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x5fa3e970f83c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa3e98ce786: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e98ce786: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e98ce786: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e97eef85: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:39)",
"0x5fa3e9b56502: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa3e9b57179: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5fa3e9b58ae2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5fa3e9b4e916: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:13)",
"0x5fa3e96fa175: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x5fa3e9bb3d18: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x5fa3e9bb500a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x5fa3e9bb500a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x5fa3e9bb4dae: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x5fa3e9bb4dae: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x5fa3e9bb4e9d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x5fa3e9969693: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x5fa3e96ee7fb: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x5fa3e9b6776e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5fa3e9b69220: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5fa3e9b68428: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5fa3e97cad04: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x5fa3e9725982: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa3e9751c39: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5fa3e992aa51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5fa3e97ca6c9: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x5fa3e96ce30d: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5fa3e999ca51: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x5fa3e965187b: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:235:25)",
"0x5fa3e9a1ca62: examples::do_work::prover::build_do_work_trace (src/do_work/prover.rs:65:5)",
"0x5fa3e9810668: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces::{{closure}} (src/do_work/prover.rs:32:27)",
"0x5fa3e96fef3a: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x5fa3e97779dd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5fa3e964083f: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5fa3e981c6c3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5fa3e988f5b7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa3e988f5b7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa3e988f5b7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa3e988f5b7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa3e9958b0e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa3e9950a37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa3e95a02be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa3e9828c76: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x5fa3e9772718: winter_verifier::verify (verifier/src/lib.rs:97:38)"
]
}