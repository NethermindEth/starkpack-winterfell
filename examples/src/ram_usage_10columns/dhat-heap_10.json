{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell do-work -n 10 -l 65536",
"pid": 22613,
"tg": 130026416,
"te": 130883131,
"pps": [
{
"tb": 3200,
"tbk": 20,
"tl": 7010472,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7
]
},
{
"tb": 51200,
"tbk": 1,
"tl": 10644,
"mb": 51200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
16,
17,
18
]
},
{
"tb": 16000,
"tbk": 125,
"tl": 127,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
25,
26,
27
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 5272,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
28,
29,
30
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1037506,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
32,
33,
34,
35,
36
]
},
{
"tb": 672,
"tbk": 3,
"tl": 107,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
37,
38,
39,
40,
41
]
},
{
"tb": 4000,
"tbk": 4,
"tl": 27892,
"mb": 4000,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
42,
43,
44,
45,
46,
47,
26,
27
]
},
{
"tb": 480,
"tbk": 20,
"tl": 30890220,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57
]
},
{
"tb": 80,
"tbk": 1,
"tl": 2117,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
60,
61,
62,
63,
64,
65,
66,
67
]
},
{
"tb": 5120,
"tbk": 10,
"tl": 3326,
"mb": 5120,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
68,
41,
69,
70
]
},
{
"tb": 6528,
"tbk": 34,
"tl": 14033,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
71,
72,
73,
74,
75,
76,
77
]
},
{
"tb": 3200,
"tbk": 10,
"tl": 82713,
"mb": 3200,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
78,
79,
80,
81,
82,
83,
84,
85,
86
]
},
{
"tb": 16000,
"tbk": 4,
"tl": 2492,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
87,
88,
89,
90,
91,
92,
93,
94,
95
]
},
{
"tb": 160,
"tbk": 10,
"tl": 106802,
"mb": 160,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
16,
96,
97
]
},
{
"tb": 320,
"tbk": 1,
"tl": 187,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
98,
99,
100,
101,
102,
103,
104,
105,
106
]
},
{
"tb": 984,
"tbk": 4,
"tl": 1345,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
107,
108,
109,
110,
111,
112,
113
]
},
{
"tb": 400,
"tbk": 1,
"tl": 105252966,
"mb": 400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
114,
115,
116,
117,
118,
119,
120,
121,
122
]
},
{
"tb": 160,
"tbk": 10,
"tl": 95340309,
"mb": 160,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
78,
79,
80,
81,
82,
83,
123,
124,
125
]
},
{
"tb": 738197504,
"tbk": 11,
"tl": 21681235,
"mb": 67108864,
"mbk": 1,
"gb": 67108864,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
126
]
},
{
"tb": 480,
"tbk": 10,
"tl": 6635520,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
127,
128,
129,
130,
131,
132,
133
]
},
{
"tb": 2992,
"tbk": 12,
"tl": 1331,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
71,
134,
135,
136,
137,
138,
139,
140,
141,
142
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1343,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
71,
134,
143,
144,
145,
146,
147,
148,
149,
150,
151
]
},
{
"tb": 56,
"tbk": 1,
"tl": 3834,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
152,
153,
154,
86,
70,
155
]
},
{
"tb": 83886080,
"tbk": 40,
"tl": 377628978,
"mb": 83886080,
"mbk": 40,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
156,
157,
158,
159
]
},
{
"tb": 480,
"tbk": 10,
"tl": 75724,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
152,
160,
161,
162,
163,
164
]
},
{
"tb": 128,
"tbk": 1,
"tl": 249,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
165,
166,
167,
168,
169
]
},
{
"tb": 16000,
"tbk": 4,
"tl": 42137,
"mb": 16000,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
16,
170,
171
]
},
{
"tb": 256,
"tbk": 1,
"tl": 13,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
78,
79,
80,
81,
82,
83,
172,
173,
162
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 574,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
174,
175,
176,
177,
178,
179,
169
]
},
{
"tb": 160,
"tbk": 10,
"tl": 706,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
180
]
},
{
"tb": 80,
"tbk": 1,
"tl": 108221432,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
181,
182,
183,
184,
185,
186,
187,
188,
189
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4410,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
190,
191,
192,
193,
194,
195,
196,
197
]
},
{
"tb": 160,
"tbk": 1,
"tl": 10223,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
42,
198,
199,
200,
201,
202,
203,
86
]
},
{
"tb": 224,
"tbk": 1,
"tl": 10653,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
16,
204,
205
]
},
{
"tb": 800,
"tbk": 1,
"tl": 130872147,
"mb": 800,
"mbk": 1,
"gb": 800,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
206,
207,
208,
209,
210,
211,
212,
213,
214
]
},
{
"tb": 20971520,
"tbk": 10,
"tl": 56101837,
"mb": 20971520,
"mbk": 10,
"gb": 20971520,
"gbk": 10,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
215
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 10577,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
216,
217,
218,
219,
220
]
},
{
"tb": 960,
"tbk": 1,
"tl": 130599387,
"mb": 960,
"mbk": 1,
"gb": 960,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
221,
222,
223,
224,
225,
226,
227,
228,
229
]
},
{
"tb": 480,
"tbk": 1,
"tl": 130599218,
"mb": 480,
"mbk": 1,
"gb": 480,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
230,
231,
232,
233,
234,
235,
236,
162
]
},
{
"tb": 512,
"tbk": 1,
"tl": 11,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
237,
238,
239,
240,
241,
242,
243,
244
]
},
{
"tb": 672,
"tbk": 3,
"tl": 4709981,
"mb": 384,
"mbk": 1,
"gb": 384,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
37,
38,
39,
245,
162
]
},
{
"tb": 320,
"tbk": 10,
"tl": 972,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
78,
79,
80,
81,
82,
83,
246,
247,
248
]
},
{
"tb": 480,
"tbk": 20,
"tl": 1003,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
152,
249,
250,
251,
252,
253,
254
]
},
{
"tb": 224,
"tbk": 3,
"tl": 1893,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
174,
175,
176,
177,
178,
255,
256
]
},
{
"tb": 320,
"tbk": 10,
"tl": 1305932267,
"mb": 320,
"mbk": 10,
"gb": 320,
"gbk": 10,
"eb": 0,
"ebk": 0,
"fs": [
152,
257,
258,
259,
260,
261,
262
]
},
{
"tb": 768,
"tbk": 1,
"tl": 4946,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
263,
264,
265,
266,
267,
268,
269,
270,
271,
272
]
},
{
"tb": 160,
"tbk": 10,
"tl": 57,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
152,
273,
274,
275,
276,
162,
163
]
},
{
"tb": 672,
"tbk": 3,
"tl": 11706,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
277,
278,
279,
280,
256
]
},
{
"tb": 160,
"tbk": 10,
"tl": 516,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
152,
273,
281,
282,
283,
284,
69
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 22465454,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
42,
198,
199,
200,
285,
286,
287,
288
]
},
{
"tb": 2952,
"tbk": 4,
"tl": 4027,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
289,
290,
291,
292,
293,
169,
294,
173
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 8395,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
216,
217,
218,
219,
295
]
},
{
"tb": 512,
"tbk": 1,
"tl": 44,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
78,
79,
80,
81,
82,
83,
296,
41,
69
]
},
{
"tb": 3680,
"tbk": 18,
"tl": 87,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
297,
298,
299,
300,
301,
302,
303,
304,
305
]
},
{
"tb": 13793,
"tbk": 1,
"tl": 10623,
"mb": 13793,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
16,
306,
307
]
},
{
"tb": 256,
"tbk": 1,
"tl": 10521,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
16,
308,
309
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2204,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
42,
43,
44,
45,
46,
310,
304,
305
]
},
{
"tb": 32,
"tbk": 1,
"tl": 3719,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
78,
79,
80,
311,
312,
313,
314,
86,
70
]
},
{
"tb": 104857600,
"tbk": 100,
"tl": 2152243736,
"mb": 104857600,
"mbk": 100,
"gb": 104857600,
"gbk": 100,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
78,
79,
80,
81,
82,
83,
315,
267,
268,
269,
316
]
},
{
"tb": 240,
"tbk": 10,
"tl": 15446428,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
152,
317,
318,
319,
320,
321,
162
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
322,
323,
324
]
},
{
"tb": 960,
"tbk": 10,
"tl": 121,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
152,
325,
275,
276,
162,
163,
164
]
},
{
"tb": 512,
"tbk": 1,
"tl": 21,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
156,
326,
327,
41
]
},
{
"tb": 16000,
"tbk": 4,
"tl": 1698,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
328
]
},
{
"tb": 576,
"tbk": 4,
"tl": 1679,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
127,
128,
129,
130,
329,
330,
150
]
},
{
"tb": 75497472,
"tbk": 524288,
"tl": 65294355,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
331,
332,
333,
334,
335,
336,
337,
338,
339
]
},
{
"tb": 160,
"tbk": 10,
"tl": 761,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
78,
79,
80,
311,
312,
313,
340,
319,
341
]
},
{
"tb": 13800,
"tbk": 25,
"tl": 6483,
"mb": 3864,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
342,
343,
344,
345,
346,
347
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 2317873,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
78,
79,
80,
81,
82,
83,
315,
267,
268,
269,
348
]
},
{
"tb": 80,
"tbk": 1,
"tl": 436,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
349,
350,
351,
352,
353,
354,
355,
356
]
},
{
"tb": 960,
"tbk": 10,
"tl": 142,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
152,
325,
282,
283,
284,
69,
70
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1336,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
78,
79,
80,
311,
312,
313,
357,
150,
151
]
},
{
"tb": 2160,
"tbk": 1,
"tl": 130593278,
"mb": 2160,
"mbk": 1,
"gb": 2160,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
358,
359,
360,
361,
362,
363,
364,
365,
366
]
},
{
"tb": 672,
"tbk": 3,
"tl": 1037521,
"mb": 384,
"mbk": 1,
"gb": 384,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
37,
38,
39,
367,
36
]
},
{
"tb": 256,
"tbk": 1,
"tl": 670,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
107,
108,
109,
110,
111,
368,
369
]
},
{
"tb": 160,
"tbk": 10,
"tl": 374805,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
127,
128,
129,
130,
370,
276,
162
]
},
{
"tb": 134217728,
"tbk": 1,
"tl": 68507527,
"mb": 134217728,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
78,
79,
80,
81,
82,
83,
371,
372,
373
]
},
{
"tb": 144,
"tbk": 1,
"tl": 2318128,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
374,
375,
376,
377,
378,
379,
380,
381,
382,
162
]
},
{
"tb": 512,
"tbk": 1,
"tl": 33,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
383,
384,
69,
70
]
},
{
"tb": 512,
"tbk": 1,
"tl": 18,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
156,
326,
385,
384
]
},
{
"tb": 9584640,
"tbk": 4,
"tl": 218368,
"mb": 9584640,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
156,
386,
387,
388
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2209,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
289,
290,
291,
292,
293,
304,
305,
162
]
},
{
"tb": 80,
"tbk": 10,
"tl": 4058905,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
107,
108,
109,
389,
390,
125,
162
]
},
{
"tb": 672,
"tbk": 3,
"tl": 6719,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
37,
38,
39,
367,
391
]
},
{
"tb": 160,
"tbk": 10,
"tl": 15446285,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
78,
79,
80,
311,
312,
313,
340,
319,
320
]
},
{
"tb": 80,
"tbk": 1,
"tl": 2099,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
392,
393,
394,
395,
396,
397,
398,
399
]
},
{
"tb": 320,
"tbk": 10,
"tl": 94,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
174,
400,
401,
402,
403,
404,
405,
406,
407,
408,
409
]
},
{
"tb": 4480,
"tbk": 30,
"tl": 10375476,
"mb": 2560,
"mbk": 10,
"gb": 2560,
"gbk": 10,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
32,
33,
34,
410,
36
]
},
{
"tb": 1248,
"tbk": 12,
"tl": 324,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
71,
411,
412,
413,
414,
415,
416
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 9492,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
417,
418,
419,
420,
421,
305,
162
]
},
{
"tb": 160,
"tbk": 1,
"tl": 205,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
422,
423,
424,
425,
426,
427,
428,
429,
162,
163
]
},
{
"tb": 2400,
"tbk": 12,
"tl": 228,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
71,
430,
431,
432,
433,
434,
435
]
},
{
"tb": 160,
"tbk": 10,
"tl": 545,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
152,
273,
274,
282,
283,
284,
69
]
},
{
"tb": 896,
"tbk": 3,
"tl": 5468,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
436,
437,
438,
439,
440
]
},
{
"tb": 3680,
"tbk": 18,
"tl": 537,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
297,
298,
299,
300,
301,
302,
441,
111,
442
]
},
{
"tb": 6792,
"tbk": 42,
"tl": 953,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
297,
298,
299,
300,
301,
302,
441,
111,
112
]
},
{
"tb": 51200,
"tbk": 10,
"tl": 55210,
"mb": 51200,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
28,
443,
440
]
},
{
"tb": 240,
"tbk": 1,
"tl": 22328862,
"mb": 240,
"mbk": 1,
"gb": 240,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
444,
445,
446,
447,
448,
162,
163,
164
]
},
{
"tb": 85104,
"tbk": 1657,
"tl": 15868764,
"mb": 17248,
"mbk": 17,
"gb": 384,
"gbk": 11,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
216,
449,
450,
451,
452,
453,
454
]
},
{
"tb": 320,
"tbk": 10,
"tl": 5,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
152,
455,
456,
70,
155
]
},
{
"tb": 480,
"tbk": 20,
"tl": 657,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
152,
457,
250,
251,
252,
253,
254
]
},
{
"tb": 3680,
"tbk": 18,
"tl": 75,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
297,
298,
299,
300,
301,
302,
303,
458,
272
]
},
{
"tb": 3210,
"tbk": 10,
"tl": 130,
"mb": 321,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
174,
400,
401,
402,
403,
404,
405,
406,
459,
408,
409
]
},
{
"tb": 671088640,
"tbk": 10,
"tl": 36499020,
"mb": 67108864,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
87,
460,
461,
462,
463,
464,
465,
466
]
},
{
"tb": 480,
"tbk": 10,
"tl": 11011395,
"mb": 480,
"mbk": 10,
"gb": 480,
"gbk": 10,
"eb": 0,
"ebk": 0,
"fs": [
152,
467,
468,
469,
470,
471,
472
]
},
{
"tb": 480,
"tbk": 4,
"tl": 225,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
174,
175,
176,
177,
178,
179,
304
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2308,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
42,
43,
44,
45,
46,
310,
458,
272
]
},
{
"tb": 13760,
"tbk": 32,
"tl": 125053,
"mb": 13760,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
42,
198,
199,
200,
201,
473,
474,
440
]
},
{
"tb": 5440,
"tbk": 42,
"tl": 40443,
"mb": 5120,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
78,
79,
80,
81,
82,
83,
315,
267,
268,
269,
270
]
},
{
"tb": 2400,
"tbk": 10,
"tl": 215237496,
"mb": 2400,
"mbk": 10,
"gb": 2400,
"gbk": 10,
"eb": 0,
"ebk": 0,
"fs": [
19,
263,
264,
265,
266,
267,
268,
269,
316,
475,
476
]
},
{
"tb": 3232,
"tbk": 21,
"tl": 22460567,
"mb": 3232,
"mbk": 21,
"gb": 3232,
"gbk": 21,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
477,
478,
479,
480,
481,
482,
483,
484
]
},
{
"tb": 192,
"tbk": 1,
"tl": 10560,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
485,
486,
487,
488,
489,
490,
491,
309,
492
]
},
{
"tb": 224,
"tbk": 3,
"tl": 4709296,
"mb": 128,
"mbk": 1,
"gb": 128,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
174,
175,
176,
177,
178,
493,
162
]
},
{
"tb": 1120,
"tbk": 3,
"tl": 7988,
"mb": 640,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
494,
495,
496,
497,
498,
499,
500,
501,
502
]
},
{
"tb": 3840,
"tbk": 16,
"tl": 2532,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
32,
33,
34,
503,
504
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2314,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
289,
290,
291,
292,
293,
458,
272,
505
]
},
{
"tb": 240,
"tbk": 10,
"tl": 848,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
152,
317,
318,
319,
341,
284,
69
]
},
{
"tb": 16000,
"tbk": 4,
"tl": 554,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
506
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 2415123,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
42,
198,
199,
200,
285,
507,
508,
509
]
},
{
"tb": 3680,
"tbk": 18,
"tl": 536,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
297,
298,
299,
300,
301,
302,
441,
111,
368
]
},
{
"tb": 1342177280,
"tbk": 10,
"tl": 1075329434,
"mb": 1342177280,
"mbk": 10,
"gb": 1342177280,
"gbk": 10,
"eb": 0,
"ebk": 0,
"fs": [
19,
87,
460,
461,
462,
463,
510,
511,
512
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 46,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
156,
513,
514,
515
]
},
{
"tb": 3584,
"tbk": 3,
"tl": 3519226,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
516,
517,
518,
519,
162
]
},
{
"tb": 160,
"tbk": 1,
"tl": 130592997,
"mb": 160,
"mbk": 1,
"gb": 160,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
520,
521,
522,
523,
524,
525,
526,
527,
528
]
},
{
"tb": 480,
"tbk": 4,
"tl": 13224,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
174,
175,
176,
177,
178,
529,
530
]
},
{
"tb": 10485760,
"tbk": 10,
"tl": 4141857,
"mb": 10485760,
"mbk": 10,
"gb": 10485760,
"gbk": 10,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
531
]
},
{
"tb": 80,
"tbk": 1,
"tl": 2085,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
532,
533,
534,
535,
536,
537,
538,
539
]
},
{
"tb": 72,
"tbk": 3,
"tl": 6954334,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
48,
49,
50,
51,
52,
53,
54,
55,
540,
378,
379,
380
]
},
{
"tb": 288,
"tbk": 1,
"tl": 35079,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
541,
542,
543,
544,
388
]
},
{
"tb": 7680,
"tbk": 10,
"tl": 56378,
"mb": 7680,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
263,
545,
546,
547,
548,
549,
550,
551,
552
]
},
{
"tb": 240,
"tbk": 10,
"tl": 95340345,
"mb": 240,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
48,
49,
50,
51,
52,
53,
54,
55,
124,
125
]
},
{
"tb": 160,
"tbk": 10,
"tl": 1305993531,
"mb": 160,
"mbk": 10,
"gb": 160,
"gbk": 10,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
553,
554,
555
]
},
{
"tb": 640,
"tbk": 10,
"tl": 1707,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
32,
33,
34,
556,
557
]
},
{
"tb": 320,
"tbk": 10,
"tl": 105718,
"mb": 320,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
16,
558,
559
]
},
{
"tb": 960,
"tbk": 10,
"tl": 122,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
374,
560,
561,
562,
563,
564,
565,
566,
567
]
},
{
"tb": 256,
"tbk": 1,
"tl": 9533,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
568,
569,
86
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 4359,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
570,
571,
572,
573,
574
]
},
{
"tb": 504,
"tbk": 11,
"tl": 38250481,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
575,
576,
577,
578,
579,
580,
581,
582,
583
]
},
{
"tb": 320,
"tbk": 10,
"tl": 1084,
"mb": 320,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
584,
585,
86
]
},
{
"tb": 256,
"tbk": 1,
"tl": 13,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
71,
134,
143,
144,
145,
146,
147,
148,
586,
173,
162
]
},
{
"tb": 23551,
"tbk": 4,
"tl": 42121,
"mb": 23551,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
16,
587,
171
]
},
{
"tb": 1280,
"tbk": 20,
"tl": 30882721,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
588,
589,
590,
591,
592
]
},
{
"tb": 2160,
"tbk": 1,
"tl": 10381,
"mb": 2160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
358,
593,
594,
595,
596,
597,
598,
599,
600
]
},
{
"tb": 73880,
"tbk": 39,
"tl": 73513,
"mb": 36992,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
216,
217,
218,
219,
601
]
},
{
"tb": 754974720,
"tbk": 4718592,
"tl": 45399327,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
78,
79,
80,
311,
312,
313,
602,
603,
604
]
},
{
"tb": 800,
"tbk": 10,
"tl": 15441211,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
605,
606,
607,
608,
609,
610,
611,
612,
613
]
},
{
"tb": 128000,
"tbk": 4,
"tl": 1715,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
614
]
},
{
"tb": 672,
"tbk": 3,
"tl": 8139,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
615,
616,
617,
618,
69
]
},
{
"tb": 240,
"tbk": 1,
"tl": 22328845,
"mb": 240,
"mbk": 1,
"gb": 240,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
619,
620,
621,
622,
623,
162,
163,
164
]
},
{
"tb": 103056,
"tbk": 226,
"tl": 64046,
"mb": 26448,
"mbk": 58,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
624,
625,
626,
627,
628,
629
]
},
{
"tb": 512,
"tbk": 1,
"tl": 5097,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
630,
631,
632,
633,
634,
635,
636,
637
]
},
{
"tb": 480,
"tbk": 20,
"tl": 190680364,
"mb": 480,
"mbk": 20,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
48,
49,
50,
51,
52,
53,
54,
55,
638,
639
]
},
{
"tb": 1600,
"tbk": 10,
"tl": 34491,
"mb": 1600,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
127,
128,
129,
130,
640,
641,
642
]
},
{
"tb": 5120,
"tbk": 10,
"tl": 3250,
"mb": 5120,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
643,
41,
69,
70
]
},
{
"tb": 2304,
"tbk": 12,
"tl": 4964,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
71,
72,
73,
74,
644,
645,
646
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 773955,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
156,
647,
648,
649
]
},
{
"tb": 160,
"tbk": 1,
"tl": 1573334,
"mb": 160,
"mbk": 1,
"gb": 160,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
422,
650,
651,
652,
653,
654,
655,
656,
657
]
},
{
"tb": 2688,
"tbk": 3,
"tl": 10662,
"mb": 1536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
658,
659,
660,
661,
492
]
},
{
"tb": 768,
"tbk": 1,
"tl": 4581,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
289,
290,
291,
292,
662,
663,
30,
664
]
},
{
"tb": 240,
"tbk": 1,
"tl": 353,
"mb": 240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
263,
665,
666,
667,
668,
669,
670,
671,
672
]
},
{
"tb": 1920,
"tbk": 8,
"tl": 10427,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
32,
33,
34,
673,
674
]
},
{
"tb": 109952,
"tbk": 426,
"tl": 234032,
"mb": 16384,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
42,
675,
676,
677,
678,
679,
680,
681,
682
]
},
{
"tb": 256,
"tbk": 1,
"tl": 13288,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
78,
79,
80,
311,
312,
313,
683,
684,
685
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 339049,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
156,
513,
514,
686
]
},
{
"tb": 672,
"tbk": 3,
"tl": 29,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
37,
38,
39,
687,
86
]
},
{
"tb": 72,
"tbk": 1,
"tl": 2318959,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
263,
264,
265,
266,
267,
268,
269,
688,
382,
162
]
},
{
"tb": 3200,
"tbk": 10,
"tl": 108,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
689,
585,
86
]
},
{
"tb": 240,
"tbk": 1,
"tl": 53,
"mb": 240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
263,
264,
265,
266,
267,
268,
269,
270,
690,
236
]
},
{
"tb": 320,
"tbk": 1,
"tl": 150,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
98,
691,
692,
693,
694,
695,
696,
697,
698
]
},
{
"tb": 20971520,
"tbk": 10,
"tl": 4022157,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
699,
700,
701,
702,
703,
704,
705,
706
]
},
{
"tb": 32,
"tbk": 1,
"tl": 10240,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
42,
198,
199,
200,
201,
707,
203,
86
]
},
{
"tb": 2952,
"tbk": 4,
"tl": 27306,
"mb": 2952,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
289,
290,
291,
292,
662,
708,
26,
27
]
},
{
"tb": 51200,
"tbk": 1,
"tl": 11839,
"mb": 51200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
417,
418,
419,
709,
256,
272,
505
]
},
{
"tb": 160,
"tbk": 10,
"tl": 1009,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
78,
79,
80,
81,
82,
83,
710,
247,
248
]
},
{
"tb": 24,
"tbk": 1,
"tl": 10632,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
711,
712,
18,
492
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
152,
713,
714,
324,
70,
155
]
},
{
"tb": 320,
"tbk": 10,
"tl": 95340091,
"mb": 320,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
174,
175,
176,
177,
178,
715,
716
]
},
{
"tb": 10485760,
"tbk": 10,
"tl": 757713,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
156,
513,
514,
717
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 2313315,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
42,
198,
199,
200,
285,
286,
287,
718
]
},
{
"tb": 320,
"tbk": 10,
"tl": 15446360,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
719,
720,
721,
722,
723,
724,
725,
726,
319,
320
]
},
{
"tb": 3456,
"tbk": 12,
"tl": 4856,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
71,
727,
728,
729,
730,
731,
732
]
},
{
"tb": 72,
"tbk": 1,
"tl": 10651,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
485,
733,
734,
735,
736,
737,
492
]
},
{
"tb": 320,
"tbk": 10,
"tl": 103385,
"mb": 320,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
152,
257,
738,
739,
740,
741,
742
]
},
{
"tb": 960,
"tbk": 20,
"tl": 189921275,
"mb": 960,
"mbk": 20,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
263,
743,
744,
745,
746,
747,
748,
749,
750
]
},
{
"tb": 16000,
"tbk": 4,
"tl": 30478,
"mb": 16000,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
751,
26,
27,
86
]
},
{
"tb": 23424,
"tbk": 122,
"tl": 818137,
"mb": 23424,
"mbk": 122,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
42,
198,
199,
200,
201,
473,
708,
26
]
},
{
"tb": 16,
"tbk": 1,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
553,
752,
86
]
},
{
"tb": 4480,
"tbk": 30,
"tl": 67449,
"mb": 2560,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
32,
33,
34,
410,
391
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 10628,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
16,
753,
307
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
152,
713,
714,
754,
236,
162,
163
]
},
{
"tb": 320,
"tbk": 10,
"tl": 65654,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
152,
755,
161,
162,
163,
164
]
},
{
"tb": 2000,
"tbk": 4,
"tl": 3105,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
756,
757,
758,
759,
760,
761,
762,
763
]
},
{
"tb": 160,
"tbk": 10,
"tl": 19,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
152,
273,
281,
275,
276,
162,
163
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 303099,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
78,
79,
80,
81,
82,
83,
84,
764,
161
]
},
{
"tb": 240,
"tbk": 1,
"tl": 22328856,
"mb": 240,
"mbk": 1,
"gb": 240,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
765,
766,
767,
768,
769,
162,
163,
164
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 320137,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
78,
79,
80,
81,
82,
83,
84,
770,
162
]
},
{
"tb": 64,
"tbk": 1,
"tl": 4,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
771,
772,
773,
774,
775,
776,
777,
778,
779
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 130592969,
"mb": 524288,
"mbk": 1,
"gb": 524288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
156,
513,
780,
781
]
},
{
"tb": 640,
"tbk": 10,
"tl": 1640,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
32,
33,
34,
782,
557
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 339753,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
78,
79,
80,
311,
312,
313,
783,
784,
162
]
},
{
"tb": 6291456,
"tbk": 3,
"tl": 6956182,
"mb": 6291456,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
78,
79,
80,
81,
82,
83,
315,
267,
268,
269,
688
]
},
{
"tb": 37748160,
"tbk": 144,
"tl": 167761,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
32,
33,
34,
785,
162
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 140275,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
156,
786,
787,
788
]
},
{
"tb": 96,
"tbk": 1,
"tl": 9239,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
37,
38,
39,
789,
27
]
},
{
"tb": 6072,
"tbk": 11,
"tl": 4493,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
342,
343,
344,
790,
791,
792
]
},
{
"tb": 1600,
"tbk": 10,
"tl": 34450,
"mb": 1600,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
127,
128,
129,
130,
793,
641,
642
]
},
{
"tb": 20971520,
"tbk": 10,
"tl": 8803288,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
156,
786,
794,
795
]
},
{
"tb": 960,
"tbk": 10,
"tl": 311,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
152,
325,
282,
796,
797,
321,
162
]
},
{
"tb": 672,
"tbk": 3,
"tl": 5075,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
798,
799,
800,
801,
272
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 214443,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
42,
198,
199,
200,
285,
802,
803,
388
]
},
{
"tb": 320,
"tbk": 10,
"tl": 2961,
"mb": 320,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
152,
455,
804,
805,
806,
807,
808
]
},
{
"tb": 320,
"tbk": 20,
"tl": 15447463,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
809,
810,
811,
812,
813,
814,
815,
816
]
},
{
"tb": 11520,
"tbk": 40,
"tl": 1344,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
817,
818,
819,
820,
821
]
},
{
"tb": 672,
"tbk": 3,
"tl": 110,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
37,
38,
39,
822,
41
]
},
{
"tb": 24,
"tbk": 1,
"tl": 2318104,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
263,
264,
265,
266,
267,
268,
269,
348,
382,
162
]
},
{
"tb": 720,
"tbk": 1,
"tl": 22363466,
"mb": 720,
"mbk": 1,
"gb": 720,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
823,
824,
825,
826,
827,
828,
829,
830,
831
]
},
{
"tb": 276480,
"tbk": 288,
"tl": 116057,
"mb": 52640,
"mbk": 33,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
832,
833,
834,
835,
836,
837,
838,
839
]
},
{
"tb": 80,
"tbk": 1,
"tl": 2092,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
840,
841,
842,
843,
844,
845,
846,
847
]
},
{
"tb": 3840,
"tbk": 20,
"tl": 656,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
848,
849,
850,
851,
852,
853,
854,
855,
856
]
},
{
"tb": 256,
"tbk": 1,
"tl": 657,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
107,
108,
109,
110,
111,
442,
857
]
},
{
"tb": 4529848320,
"tbk": 4718592,
"tl": 61258775,
"mb": 3040,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
832,
833,
834,
835,
836,
858,
603,
604
]
},
{
"tb": 41943360,
"tbk": 30,
"tl": 804650,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
156,
326,
859,
860
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 196802,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
42,
198,
199,
200,
285,
286,
287,
861
]
},
{
"tb": 480,
"tbk": 1,
"tl": 21537810,
"mb": 480,
"mbk": 1,
"gb": 480,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
862,
863,
864,
865,
866,
867,
868,
869,
870
]
},
{
"tb": 640,
"tbk": 10,
"tl": 80801,
"mb": 640,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
32,
33,
34,
782,
871
]
},
{
"tb": 5242880,
"tbk": 10,
"tl": 2968293,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
156,
513,
514,
872
]
},
{
"tb": 80,
"tbk": 1,
"tl": 24,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
873,
874,
875,
876,
877,
878,
879,
880
]
},
{
"tb": 64,
"tbk": 1,
"tl": 6707,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
32,
33,
34,
35,
391
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 158886,
"mb": 1179648,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
156,
881,
882,
388
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1812,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
37,
38,
39,
883,
305
]
},
{
"tb": 480,
"tbk": 4,
"tl": 6685,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
174,
175,
176,
177,
178,
529,
884
]
},
{
"tb": 16000,
"tbk": 4,
"tl": 3082,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
87,
460,
461,
462,
885,
294,
173,
162
]
},
{
"tb": 72,
"tbk": 1,
"tl": 11,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
886,
887,
888,
889,
890,
891,
892,
893,
894
]
},
{
"tb": 83886080,
"tbk": 10,
"tl": 36744433,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
156,
895,
896,
897
]
},
{
"tb": 512,
"tbk": 1,
"tl": 67,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
898,
899,
900,
901,
902,
903,
904,
905
]
},
{
"tb": 51200,
"tbk": 10,
"tl": 117431,
"mb": 51200,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
417,
418,
419,
906,
256,
272,
505
]
},
{
"tb": 46080,
"tbk": 288,
"tl": 1368,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
78,
79,
80,
81,
82,
83,
84,
907,
838
]
},
{
"tb": 672,
"tbk": 3,
"tl": 84310,
"mb": 384,
"mbk": 1,
"gb": 384,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
37,
38,
39,
908,
161
]
},
{
"tb": 20971520,
"tbk": 1310720,
"tl": 785437,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
78,
79,
80,
81,
82,
83,
909,
910,
911
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2318114,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
78,
79,
80,
81,
82,
83,
123,
540,
378,
379,
380
]
},
{
"tb": 13760,
"tbk": 32,
"tl": 144152,
"mb": 13760,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
42,
198,
199,
200,
201,
473,
663,
30
]
},
{
"tb": 72,
"tbk": 1,
"tl": 8589,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
886,
887,
888,
889,
890,
891,
892,
893,
912
]
},
{
"tb": 80,
"tbk": 1,
"tl": 6321,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
913,
914,
915,
916,
917,
918,
919,
920,
921
]
},
{
"tb": 640,
"tbk": 10,
"tl": 80841,
"mb": 640,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
32,
33,
34,
556,
871
]
},
{
"tb": 9600,
"tbk": 40,
"tl": 123,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
32,
33,
34,
922,
923
]
},
{
"tb": 16000,
"tbk": 125,
"tl": 110,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
924,
925,
926,
927,
928,
929,
930,
931
]
},
{
"tb": 3840,
"tbk": 10,
"tl": 15445258,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
932,
933,
934,
935,
936,
937,
938,
939,
940
]
},
{
"tb": 72,
"tbk": 1,
"tl": 16159,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
152,
941,
505,
162,
163,
164
]
},
{
"tb": 3774873600,
"tbk": 4718592,
"tl": 24695024,
"mb": 1440,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
78,
79,
80,
81,
82,
83,
84,
942,
603
]
},
{
"tb": 19680,
"tbk": 20,
"tl": 511,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
943,
944,
945,
946,
947,
948
]
},
{
"tb": 240,
"tbk": 1,
"tl": 1386662,
"mb": 240,
"mbk": 1,
"gb": 240,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
949,
950,
951,
952,
953,
954,
955,
956,
957
]
},
{
"tb": 160,
"tbk": 10,
"tl": 6635470,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
127,
128,
129,
130,
958,
132,
133
]
},
{
"tb": 2097152,
"tbk": 2,
"tl": 6752338,
"mb": 2097152,
"mbk": 2,
"gb": 2097152,
"gbk": 2,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
78,
79,
80,
311,
312,
313,
959,
960,
961
]
},
{
"tb": 16000,
"tbk": 4,
"tl": 641,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
156,
326,
962,
330
]
},
{
"tb": 2400,
"tbk": 10,
"tl": 1068925296,
"mb": 2400,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
263,
963,
964,
965,
966,
967,
968,
969,
970
]
},
{
"tb": 480,
"tbk": 1,
"tl": 3498,
"mb": 480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
971,
972,
973,
974,
975,
976,
977,
978,
979
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2317712,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
297,
298,
299,
300,
301,
302,
980,
382,
162
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
322,
981,
754
]
},
{
"tb": 4000,
"tbk": 4,
"tl": 4010,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
42,
43,
44,
45,
46,
310,
169,
294
]
},
{
"tb": 51200,
"tbk": 1,
"tl": 4273,
"mb": 51200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
28,
982,
440
]
},
{
"tb": 1000,
"tbk": 4,
"tl": 4289,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
71,
134,
143,
144,
145,
146,
147,
148,
983,
984,
150
]
},
{
"tb": 10790,
"tbk": 70,
"tl": 15821180,
"mb": 5440,
"mbk": 10,
"gb": 5440,
"gbk": 10,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
216,
217,
218,
985,
986
]
},
{
"tb": 104857600,
"tbk": 100,
"tl": 13074628131,
"mb": 104857600,
"mbk": 100,
"gb": 104857600,
"gbk": 100,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
156,
987,
988,
989
]
},
{
"tb": 480,
"tbk": 1,
"tl": 3378,
"mb": 480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
990,
991,
992,
993,
994,
995,
996,
997,
998
]
},
{
"tb": 3200,
"tbk": 10,
"tl": 80024,
"mb": 3200,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
78,
79,
80,
81,
82,
83,
999,
1000,
1001
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 4579,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
42,
1002,
1003,
1004,
1005,
1006,
1007,
1008,
1009
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 4003,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
42,
1010,
1011,
1012,
1013,
1014,
1015,
1016,
1017
]
},
{
"tb": 480,
"tbk": 4,
"tl": 210,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
174,
175,
176,
177,
178,
179,
458
]
},
{
"tb": 192,
"tbk": 1,
"tl": 21888,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
485,
486,
487,
488,
489,
1018,
173,
162,
163
]
},
{
"tb": 10485760,
"tbk": 10,
"tl": 733970,
"mb": 1048576,
"mbk": 1,
"gb": 1048576,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
1019
]
},
{
"tb": 51200,
"tbk": 320,
"tl": 1781097,
"mb": 51200,
"mbk": 320,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
78,
79,
80,
311,
312,
313,
1020,
1021,
1022
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3984,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
289,
290,
291,
292,
662,
474,
440,
154
]
},
{
"tb": 1120,
"tbk": 3,
"tl": 8196,
"mb": 640,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
1023,
1024,
1025,
1026,
86
]
},
{
"tb": 3536,
"tbk": 34,
"tl": 495,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
71,
411,
412,
413,
1027,
1028,
1029
]
},
{
"tb": 2400,
"tbk": 10,
"tl": 1307464654,
"mb": 2400,
"mbk": 10,
"gb": 2400,
"gbk": 10,
"eb": 0,
"ebk": 0,
"fs": [
19,
263,
1030,
1031,
1032,
1033,
1034,
1035,
1036,
1037
]
},
{
"tb": 41943360,
"tbk": 30,
"tl": 808673,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
156,
1038,
860,
1039
]
},
{
"tb": 3210,
"tbk": 10,
"tl": 105758,
"mb": 3210,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
16,
1040,
559
]
},
{
"tb": 363497,
"tbk": 10,
"tl": 10845,
"mb": 206880,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
216,
217,
218,
985,
1041
]
},
{
"tb": 2400,
"tbk": 20,
"tl": 95340154,
"mb": 1920,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
152,
1042,
125,
162,
163,
164
]
},
{
"tb": 224,
"tbk": 1,
"tl": 9243,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
1043,
1044,
1045,
1046,
27
]
},
{
"tb": 104857600,
"tbk": 100,
"tl": 10675844827,
"mb": 104857600,
"mbk": 100,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
78,
79,
80,
81,
82,
83,
1047,
1048,
1049
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 7367,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
570,
571,
572,
573,
1050
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
322,
323,
754
]
},
{
"tb": 160,
"tbk": 10,
"tl": 1112,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
152,
273,
274,
282,
796,
797,
321
]
},
{
"tb": 240,
"tbk": 1,
"tl": 108254135,
"mb": 240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
619,
1051,
1052,
1053,
1054,
1055,
1056,
1057,
1058
]
},
{
"tb": 13793,
"tbk": 1,
"tl": 10635,
"mb": 13793,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
16,
1059,
18
]
},
{
"tb": 6792,
"tbk": 42,
"tl": 154,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
297,
298,
299,
300,
301,
302,
303,
169,
294
]
},
{
"tb": 1344,
"tbk": 3,
"tl": 8051,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
1060,
1061,
1062,
1063,
69
]
},
{
"tb": 80,
"tbk": 1,
"tl": 6702,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
1064,
1065,
69,
70
]
},
{
"tb": 2736,
"tbk": 6,
"tl": 2663,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
624,
625,
626,
1066,
1067,
1068
]
},
{
"tb": 80,
"tbk": 1,
"tl": 105252913,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
181,
1069,
1070,
1071,
1072,
1073,
1074,
1075,
1076
]
},
{
"tb": 2880,
"tbk": 24,
"tl": 2476,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
174,
175,
176,
177,
178,
1077,
111
]
},
{
"tb": 80,
"tbk": 1,
"tl": 2106,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
1078,
1079,
1080,
1081,
1082,
1083,
1084,
1085
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 90849783,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
42,
198,
199,
200,
285,
1086,
604,
1087
]
},
{
"tb": 1600,
"tbk": 10,
"tl": 274299,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
127,
128,
129,
130,
1088,
1089,
1090
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3378026,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
263,
1091,
1092,
1093,
1094,
1095,
1096,
1097,
1098
]
},
{
"tb": 3200,
"tbk": 20,
"tl": 7010553,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
1099
]
},
{
"tb": 5760,
"tbk": 20,
"tl": 439,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
1100,
1101,
1102,
1103,
1104,
1105,
1106,
1107,
1108
]
},
{
"tb": 83886080,
"tbk": 524288,
"tl": 6650657,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
78,
79,
80,
311,
312,
313,
1109,
603,
604
]
},
{
"tb": 320,
"tbk": 10,
"tl": 804,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
719,
720,
721,
722,
723,
724,
725,
726,
319,
341
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 1771675,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
156,
895,
896,
1110
]
},
{
"tb": 1344,
"tbk": 3,
"tl": 10544,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
1111,
1112,
1113,
1114,
492
]
},
{
"tb": 512,
"tbk": 1,
"tl": 18,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
1115,
384,
69,
70
]
},
{
"tb": 240,
"tbk": 1,
"tl": 22328850,
"mb": 240,
"mbk": 1,
"gb": 240,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
263,
1116,
1117,
1118,
1119,
162,
163,
164
]
},
{
"tb": 256,
"tbk": 4,
"tl": 137103,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
156,
513,
514,
1120
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 57966,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
78,
79,
80,
311,
312,
313,
1121,
305,
162
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4424,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
1122,
1123,
69,
70
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
322,
981,
324
]
},
{
"tb": 160,
"tbk": 10,
"tl": 1029,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
152,
273,
281,
282,
796,
797,
321
]
},
{
"tb": 10880,
"tbk": 20,
"tl": 221,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
1124,
1125,
1126,
1127,
1128,
1129
]
},
{
"tb": 224,
"tbk": 3,
"tl": 4709298,
"mb": 128,
"mbk": 1,
"gb": 128,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
174,
175,
176,
177,
178,
1130,
162
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 130590871,
"mb": 2097152,
"mbk": 1,
"gb": 2097152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
156,
513,
1131,
1132
]
},
{
"tb": 720,
"tbk": 30,
"tl": 668,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
1133,
1134,
1135,
1136,
1137,
1138,
1139,
1140,
1141
]
},
{
"tb": 10485760,
"tbk": 10,
"tl": 4058627,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
156,
513,
514,
1142
]
},
{
"tb": 3200,
"tbk": 20,
"tl": 30890136,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
31,
1143,
1144,
1145,
1146,
57
]
}
],
"ftbl": [
"[root]",
"0x5faa464356cc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x5faa46433d9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x5faa46434cf8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x5faa46434cf8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x5faa46431964: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5faa46431c13: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x5faa462a001d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x5faa46437b79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5faa464365ca: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa46437bbc: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa46437bbc: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa46437bbc: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5faa464387fc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5faa464387fc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5faa464387fc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5faa46435e2c: <winter_utils::serde::byte_reader::SliceReader as winter_utils::serde::byte_reader::ByteReader>::read_vec (src/serde/byte_reader.rs:151:22)",
"0x5faa463d5d02: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:348:22)",
"0x5faa463d0e53: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:174:32)",
"0x5faa45ed04a9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5faa45f990ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa46151736: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa46151736: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa46151736: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa45e74909: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5faa45f81f3a: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x5faa45f8939c: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x5faa45eaa60c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x5faa4623c4cb: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x5faa46232a9a: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x5faa45ebe77b: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x5faa46436319: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5faa45fc8122: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5faa45fd56b9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5faa461a9d91: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5faa460f808d: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:540:13)",
"0x5faa45f5a428: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x5faa45fc1972: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5faa45fd5a19: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5faa461ab402: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5faa461ed89e: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x5faa45fecc0f: winter_verifier::perform_verification (verifier/src/lib.rs:308:25)",
"0x5faa45f93a9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa460a5f58: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa460a5f58: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa460a5f58: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5faa461c0c17: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5faa45f81d36: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x5faa45f98e4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa45e762ec: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa45e762ec: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa45e762ec: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5faa461c2f19: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5faa461c2f19: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5faa461c2f19: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5faa4623b5d6: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x5faa45f76f72: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:169:36)",
"0x5faa45f74f30: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:54:17)",
"0x5faa463b9899: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5faa463260aa: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa46143451: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa46143451: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa46143451: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa46143451: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461dc7db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d1136: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e2265b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa45ea997f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x5faa461ecbd0: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x5faa45ff59d2: winter_verifier::verify (verifier/src/lib.rs:110:21)",
"0x5faa45e54d99: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:118:9)",
"0x5faa463e5739: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5faa463f1b7b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5faa463f15f1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5faa463edbbb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5faa463ea87e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5faa463ebc4c: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5faa463ead8a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5faa45e7641c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa45e7641c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa45e7641c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5faa461c1939: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5faa461c1939: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5faa461c1939: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5faa4614f097: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5faa45eab27d: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x5faa45ff5907: winter_verifier::verify (verifier/src/lib.rs:108:19)",
"0x5faa45f9da5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa4610c9a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa4610c9a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa4610c9a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa4610c9a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461de71e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d1517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e2337e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa460c5f51: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x5faa463db118: <winter_air::proof::context::Context as winter_utils::serde::Deserializable>::read_from (src/proof/context.rs:184:35)",
"0x5faa463d0bf7: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:27)",
"0x5faa45f9d51c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa46143f17: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa46143f17: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa46143f17: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa46143f17: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461ddb2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d3147: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e22a9e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa46071416: winter_prover::Prover::generate_proof (prover/src/lib.rs:205:38)",
"0x5faa46301656: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa46301656: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa46301656: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa45fdad1c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x5faa461e7b5e: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x5faa45e9153c: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x5faa460c5bf6: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x5faa45f9df9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa4611bd37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa4611bd37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa4611bd37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa4611bd37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461dd26e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d06a7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e22dde: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa46086d43: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:638:34)",
"0x5faa4623b5ed: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x5faa4627158d: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:33)",
"0x5faa46075bd3: winter_prover::Prover::generate_proof (prover/src/lib.rs:407:21)",
"0x5faa4629ce40: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x5faa45e769f5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa45e769f5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa45e769f5: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5faa461c0bf4: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5faa4626df6c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:148:31)",
"0x5faa462719e0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:122:17)",
"0x5faa45f51436: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5faa463e38ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa463e41a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa463e41a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa463e41a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa463e41a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5faa463e45ee: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa463e45b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa463e584e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa463e3299: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x5faa463dfb6c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa463dfb6c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa463dfb6c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5faa463df62c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5faa463df62c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5faa463df62c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5faa460c51a5: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x5faa460f573c: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x5faa45fece15: winter_verifier::perform_verification (verifier/src/lib.rs:320:5)",
"0x5faa45ecf937: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x5faa45e976f1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x5faa45ea9fa8: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x5faa45cad9d5: winterfell::main (examples/src/main.rs:83:11)",
"0x5faa45edde7b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5faa4604cdb1: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x5faa45e3c4aa: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5faa4627ca05: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5faa46218580: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x5faa46073868: winter_prover::Prover::generate_proof (prover/src/lib.rs:514:9)",
"0x5faa46092cd4: winter_prover::Prover::prove (prover/src/lib.rs:171:37)",
"0x5faa45e542b2: <examples::do_work::DoWorkExample<H> as examples::Example>::prove (src/do_work/mod.rs:108:9)",
"0x5faa45cacd4d: winterfell::main (examples/src/main.rs:49:17)",
"0x5faa45fb9912: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5faa45fd5119: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5faa461aa94f: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5faa461e5d8a: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x5faa462a4274: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x5faa463d6dc4: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:361:22)",
"0x5faa463d63d6: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:146:27)",
"0x5faa462b6c96: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x5faa46074a4f: winter_prover::Prover::generate_proof (prover/src/lib.rs:590:25)",
"0x5faa463cb799: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5faa463c6b39: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5faa46329830: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5faa4632b899: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5faa46306451: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5faa461e5f53: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x5faa4626a7eb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:39:30)",
"0x5faa45f9670a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa4613bba1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa4613bba1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa4613bba1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa4613bba1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461deb3b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d60b6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e226cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa46071c5d: winter_prover::Prover::generate_proof (prover/src/lib.rs:266:43)",
"0x5faa46117777: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa46117777: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa46117777: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa46117777: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461dc2de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d8697: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e24b8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa460c5131: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x5faa46151916: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa46151916: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa46151916: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa460a57e9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5faa45f719d0: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x5faa45ea9e38: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x5faa463da2bd: <winter_air::proof::commitments::Commitments as winter_utils::serde::Deserializable>::read_from (src/proof/commitments.rs:108:22)",
"0x5faa463d0bdc: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:167:27)",
"0x5faa45f9794c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa4610bae7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa4610bae7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa4610bae7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa4610bae7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461dd53e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d7d37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e23d4e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa46093619: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces (src/do_work/prover.rs:30:9)",
"0x5faa4604fca7: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x5faa46436ab0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5faa46436ce9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5faa46437f12: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5faa45fd8564: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x5faa4621fa51: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x5faa45f8ec0c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa46130b31: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa46130b31: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa46130b31: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa46130b31: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461de0ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d25a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e23e5b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa45f5d967: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x5faa45f9451c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa462062be: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa462062be: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa462062be: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5faa461c0b77: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5faa45f5dc58: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x5faa46071656: winter_prover::Prover::generate_proof (prover/src/lib.rs:228:27)",
"0x5faa46127877: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa46127877: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa46127877: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa46127877: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461dc70e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d8317: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e24ace: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa461f0532: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x5faa460757ad: winter_prover::Prover::generate_proof (prover/src/lib.rs:438:13)",
"0x5faa45ec623f: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x5faa45ec6307: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5faa45fed156: winter_verifier::perform_verification (verifier/src/lib.rs:225:13)",
"0x5faa4623a299: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x5faa461025ae: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x5faa45ec089d: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x5faa46101cce: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x5faa461046c6: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x5faa460f79ea: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:362:9)",
"0x5faa4622010a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x5faa460abbd9: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x5faa46055e42: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::new (src/do_work/air.rs:35:23)",
"0x5faa45e8dbb0: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:221:17)",
"0x5faa45e38922: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5faa462674dd: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::SpecFold>::spec_fold (iter/adapters/zip.rs:685:25)",
"0x5faa46253ee7: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::fold (iter/adapters/zip.rs:249:9)",
"0x5faa4623e9b7: <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/zip.rs:103:9)",
"0x5faa45f959fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa46150856: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa46150856: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa46150856: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5faa461c21f9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5faa461c21f9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5faa461c21f9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5faa4614f067: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5faa460aba53: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x5faa460b5cb4: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x5faa4620ee95: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x5faa460560bd: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:61:13)",
"0x5faa45ed70ab: winter_prover::trace::Trace::validate (src/trace/mod.rs:122:26)",
"0x5faa46075f21: winter_prover::Prover::generate_proof (prover/src/lib.rs:370:17)",
"0x5faa45faf622: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5faa45fd5839: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5faa461ae252: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5faa4621fdb8: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x5faa4605612c: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:62:13)",
"0x5faa460f7985: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:364:13)",
"0x5faa4626ab4c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:63:9)",
"0x5faa45fed247: winter_verifier::perform_verification (verifier/src/lib.rs:223:43)",
"0x5faa45eddfbb: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5faa461e4e5d: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x5faa461e8406: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x5faa461f6940: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x5faa45f97e8c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa46151966: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa46151966: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa46151966: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa461e56ff: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x5faa462b7152: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x5faa4622e9fc: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x5faa461ec693: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x5faa463376ac: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa463376ac: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa463376ac: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5faa463084a9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5faa463084a9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5faa463084a9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5faa461e5a2c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x5faa462c2495: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x5faa46074bc5: winter_prover::Prover::generate_proof (prover/src/lib.rs:598:34)",
"0x5faa463d5a1e: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:168:21)",
"0x5faa463d0e38: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:176:34)",
"0x5faa463d68d2: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:215:25)",
"0x5faa463d115d: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:188:24)",
"0x5faa461e5698: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x5faa45e7693c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5faa45e7693c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5faa45e7693c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5faa45eaacae: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x5faa46150bc3: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5faa4604a7be: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x5faa4623a9a3: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x5faa462be82c: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x5faa460f7c22: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:348:9)",
"0x5faa4627063b: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:50:13)",
"0x5faa46075b32: winter_prover::Prover::generate_proof (prover/src/lib.rs:403:21)",
"0x5faa460a7df4: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x5faa460a7ad6: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x5faa45ff55a9: winter_verifier::verify (verifier/src/lib.rs:95:32)",
"0x5faa4605608f: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:60:9)",
"0x5faa45ed1f42: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x5faa461ec853: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x5faa46297103: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x5faa46297184: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x5faa460c6010: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x5faa45f9b2fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa46118135: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa46118135: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa46118135: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa46118135: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5faa461dc10e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d1737: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e21cce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa461f91b0: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:218:46)",
"0x5faa462be983: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x5faa4626a64a: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:25:25)",
"0x5faa46211ccb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5faa46211471: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5faa46025f0b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5faa4601e451: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x5faa4602477d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x5faa4601810e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x5faa4604ad29: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x5faa4610d6b1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa4610d6b1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa4610d6b1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa4610d6b1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461db71b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d4e16: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e2423b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa45e97409: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x5faa460c5214: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x5faa45f9301c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa461217f7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa461217f7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa461217f7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa461217f7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461ddb7e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d7f39: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e220ee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa46071603: winter_prover::Prover::generate_proof (prover/src/lib.rs:217:20)",
"0x5faa460f8239: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:536:13)",
"0x5faa45ea52ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x5faa45fec810: winter_verifier::perform_verification (verifier/src/lib.rs:302:9)",
"0x5faa45ed7598: winter_prover::trace::Trace::validate (src/trace/mod.rs:177:13)",
"0x5faa461fd4a2: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x5faa461fc147: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5faa46086df7: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:645:31)",
"0x5faa45f9ca9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa4623b0c6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa4623b0c6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa4623b0c6: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5faa461c2039: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5faa461c2039: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5faa461c2039: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5faa4604aca3: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x5faa46072583: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:33)",
"0x5faa461f01a4: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x5faa45feccbe: winter_verifier::perform_verification (verifier/src/lib.rs:314:25)",
"0x5faa461f03d9: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x5faa45ede303: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x5faa462aac25: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x5faa462b81b2: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x5faa460517d0: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x5faa46271819: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:129:9)",
"0x5faa45fec13b: winter_verifier::perform_verification (verifier/src/lib.rs:263:61)",
"0x5faa4610f541: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa4610f541: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa4610f541: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa4610f541: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461dd90b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d3276: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e2345b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa45ea9b0f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x5faa463c6e7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa4633757c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa4633757c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa4633757c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5faa46307cc9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5faa46307cc9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5faa46307cc9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5faa460f6e3f: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x5faa462061f6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5faa45eaac48: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5faa460f82c9: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:534:17)",
"0x5faa463f1d2b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5faa463f1751: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5faa463edadb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5faa463e76cd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5faa463e284b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5faa463e0f13: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5faa46151556: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa46151556: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa46151556: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa4622e8e0: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x5faa462c265e: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x5faa45f9866c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa46150e1c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa46150e1c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa46150e1c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5faa461c1e79: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5faa461c1e79: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5faa461c1e79: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5faa460736be: winter_prover::Prover::generate_proof (prover/src/lib.rs:500:39)",
"0x5faa463f181b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5faa463f1541: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5faa463edd7b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5faa463e83a1: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5faa463e8b37: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5faa463e36db: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5faa45fd1f22: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5faa45fd4fc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5faa461aeaaf: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5faa4622a5d9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x5faa45e97583: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x5faa45fdaf79: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x5faa45ea5d3c: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x5faa4622a524: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x5faa45f9283c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa46151786: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa46151786: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa46151786: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa46071f85: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:39)",
"0x5faa46436d18: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x5faa4643800a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x5faa4643800a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x5faa46437dae: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x5faa46437dae: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x5faa46437e9d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x5faa46055d16: <examples::do_work::air::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (src/do_work/air.rs:13:9)",
"0x5faa45ff5718: winter_verifier::verify (verifier/src/lib.rs:97:38)",
"0x5faa4623a41a: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x5faa460abb07: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x5faa460f6e2a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x5faa46151b46: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa46151b46: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa46151b46: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa45eddd3b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5faa4629ce2b: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x5faa461f376a: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x5faa45e3ac7a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5faa460b7a92: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x5faa45e8e4c6: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:493:32)",
"0x5faa45e4409a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5faa45f112a2: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5faa45e0fc9b: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5faa45e2c906: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5faa45fd6f24: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x5faa4622a152: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x5faa46048f17: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5faa45e885ac: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:293:57)",
"0x5faa4610a7e7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa4610a7e7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa4610a7e7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa4610a7e7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461de73e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d47f7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e2532e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa46046d13: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:253:9)",
"0x5faa463d7709: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5faa463d84bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa463db776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa463db776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa463db776: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa463d62b9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5faa463d670b: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:211:22)",
"0x5faa45cad8fd: winterfell::main (examples/src/main.rs:80:24)",
"0x5faa46075808: winter_prover::Prover::generate_proof (prover/src/lib.rs:440:13)",
"0x5faa45f932bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa4614bffe: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa4614bffe: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa4614bffe: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa4614bffe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5faa461dd43b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d4b76: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa4627610b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa45ea301c: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x5faa460bba48: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x5faa460c5dda: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x5faa46074ace: winter_prover::Prover::generate_proof (prover/src/lib.rs:593:29)",
"0x5faa46297450: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x5faa461f47a5: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x5faa4608f8e7: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:706:26)",
"0x5faa46073110: winter_prover::Prover::generate_proof (prover/src/lib.rs:472:37)",
"0x5faa461fbc77: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x5faa461f3c8c: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x5faa461fa7bc: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x5faa45ed2393: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x5faa460a2018: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x5faa462baab6: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x5faa45fc3c02: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5faa45fd4cc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5faa461aed48: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5faa46075bf6: winter_prover::Prover::generate_proof (prover/src/lib.rs:408:17)",
"0x5faa45f9355c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa4613d1c7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa4613d1c7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa4613d1c7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa4613d1c7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461dc06e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d12c7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45f6f42e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa4607179f: winter_prover::Prover::generate_proof (prover/src/lib.rs:243:41)",
"0x5faa460a84f8: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x5faa45f58499: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x5faa462182ef: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x5faa461319d1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa461319d1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa461319d1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa461319d1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461ddcfb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d6026: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e2464b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa45ea9c9f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x5faa4623b440: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5faa45fcc152: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5faa45fd5389: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5faa461adff2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5faa462aaf89: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x5faa461125b7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa461125b7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa461125b7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa461125b7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461dbb0e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d3a37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e232be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa460abc76: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x5faa46431d9e: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x5faa460a801f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x5faa45f5ff5f: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x5faa460fec93: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:505:13)",
"0x5faa45f5b484: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x5faa463da784: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:155:27)",
"0x5faa463d1178: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:29)",
"0x5faa46136111: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa46136111: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa46136111: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa46136111: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461db9fb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d4cc6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e2386b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa45f73a5c: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:82:9)",
"0x5faa45f8cfee: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x5faa45eaa42b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x5faa463e3da0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5faa463df5f9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5faa463de5a1: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5faa463deeb0: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x5faa462b6e9d: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x5faa45f91dbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa46135127: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa46135127: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa46135127: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa46135127: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461dc01e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d26b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e24fae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa461f2e38: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x5faa462058ce: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x5faa45eab185: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5faa462b6c77: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x5faa463d6f46: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:365:21)",
"0x5faa45fa8982: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5faa45fd4c39: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5faa461ada51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5faa4604d6c9: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x5faa45f5130d: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5faa46125ee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa46125ee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa46125ee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa46125ee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461b5bcf: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5faa461d3849: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e22e5e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa45ff5784: winter_verifier::verify (verifier/src/lib.rs:101:24)",
"0x5faa45f7d175: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x5faa461f93df: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:226:50)",
"0x5faa461f6903: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x5faa460873dd: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:659:26)",
"0x5faa45f9d27c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa4610e557: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa4610e557: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa4610e557: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa4610e557: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461bc79d: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5faa461d821c: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e244ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa4605482a: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x5faa4629708f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x5faa45fcd022: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5faa45fd59e9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5faa461ac842: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5faa45fed673: winter_verifier::perform_verification (verifier/src/lib.rs:177:9)",
"0x5faa45f9890c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa46151466: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa46151466: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa46151466: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa46072051: winter_prover::Prover::generate_proof (prover/src/lib.rs:301:32)",
"0x5faa462126eb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5faa46211891: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5faa46024f4b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5faa46010d8f: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5faa4601c711: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5faa46017caa: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5faa46110197: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa46110197: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa46110197: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa46110197: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461def6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d0599: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e23c6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa461f1e47: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x5faa45f73bd9: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:82:31)",
"0x5faa45e49553: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5faa45e94c8d: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x5faa45ff2869: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:214:32)",
"0x5faa45e37603: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5faa461ecbf3: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x5faa463e766d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5faa463e2538: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5faa463e0dd7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5faa46206bc2: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x5faa460a4240: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x5faa4621abb1: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x5faa46106c21: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa46106c21: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa46106c21: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa46106c21: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461dd3ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d0ac6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e2501b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa460736a3: winter_prover::Prover::generate_proof (prover/src/lib.rs:495:52)",
"0x5faa463d9012: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5faa463da1a9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5faa463db878: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5faa463d1c1a: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:13)",
"0x5faa45fd6c9d: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x5faa46232ca7: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x5faa45eaa23c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x5faa4610c141: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa4610c141: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa4610c141: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa4610c141: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461def9b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d3346: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e2188b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa460714e3: winter_prover::Prover::generate_proof (prover/src/lib.rs:209:39)",
"0x5faa462a095b: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x5faa460a79cc: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x5faa4611f666: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa4611f666: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa4611f666: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa4611f666: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5faa461dbb6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d45dc: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa461e39be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa461e5edb: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x5faa462bac0e: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x5faa462b8104: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x5faa4607438b: winter_prover::Prover::generate_proof (prover/src/lib.rs:561:9)",
"0x5faa460a1833: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x5faa45eab3ef: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x5faa4604ac8c: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x5faa462056fb: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x5faa45f5da1e: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x5faa46149907: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa46149907: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa46149907: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa46149907: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461dcfde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d6627: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e2193e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa45e54d54: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:112:30)",
"0x5faa46114727: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa46114727: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa46114727: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa46114727: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461de5de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d4507: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e24cfe: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa4604e277: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x5faa45f717fb: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x5faa45f8204d: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x5faa4621f782: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x5faa45ec622a: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x5faa463d7187: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x5faa463d5fed: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:357:24)",
"0x5faa4629f82c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x5faa460a7b58: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x5faa46055b27: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x5faa460538cd: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x5faa4604ff48: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x5faa461f4866: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x5faa45f922fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa46299776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa46299776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa46299776: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5faa461c23b9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5faa461c23b9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5faa461c23b9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5faa462be846: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x5faa463f19cb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5faa463f16a1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5faa463edc9b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5faa463e8471: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5faa463e8af7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5faa463e372b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5faa463d875c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa463db726: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa463db726: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa463db726: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa463d0d52: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:172:33)",
"0x5faa45ff68d1: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:101:85)",
"0x5faa45e47432: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5faa45f63c0a: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:107:27)",
"0x5faa45e80bff: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5faa45f619a4: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:113:9)",
"0x5faa4610f317: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa4610f317: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa4610f317: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa4610f317: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461dd06e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d8587: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e2147e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa4604cc6a: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x5faa45f81d7b: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x5faa45ea97d0: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x5faa463d5862: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:164:22)",
"0x5faa45f5da03: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x5faa462186ec: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x5faa46116227: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa46116227: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa46116227: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa46116227: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461dc23e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d3d47: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e24bee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa460c610f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x5faa46217ea2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x5faa45f9d7bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa46151876: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa46151876: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa46151876: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa46071fc9: winter_prover::Prover::generate_proof (prover/src/lib.rs:299:44)",
"0x5faa46072c77: winter_prover::Prover::generate_proof (prover/src/lib.rs:442:35)",
"0x5faa45dbe149: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5faa45dbcc19: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5faa45dbb030: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5faa45dbb298: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x5faa45dbab5a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x5faa45dbab5a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x5faa45caf6a1: alloc::string::String::reserve (alloc/src/string.rs:1152:9)",
"0x5faa45caf6a1: <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend (alloc/src/string.rs:2173:14)",
"0x5faa45caf77c: <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter (alloc/src/string.rs:2093:9)",
"0x5faa460a1151: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x5faa460b8df3: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x5faa460febb8: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:510:13)",
"0x5faa460a181d: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x5faa46073f26: winter_prover::Prover::generate_proof (prover/src/lib.rs:548:13)",
"0x5faa46075665: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:17)",
"0x5faa45ed347b: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x5faa4623542f: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x5faa46235504: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x5faa45f89629: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x5faa45fffd31: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5faa46003477: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5faa45ff81bb: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5faa45e94cb0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x5faa4604d8b6: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x5faa4605176c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x5faa45f74670: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:40:22)",
"0x5faa462706e7: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:13)",
"0x5faa45fc3712: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5faa45fd5149: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5faa461ac122: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5faa460abc91: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x5faa45edb1f6: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x5faa462aac8f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x5faa45e87b09: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:211:31)",
"0x5faa45e3ed3a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5faa45f2f0a8: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5faa45e083ba: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5faa45e2863a: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5faa46135ee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa46135ee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa46135ee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa46135ee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461dbdde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d2c57: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e2547e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa4623a994: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x5faa45fb6ca2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5faa45fd5539: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5faa461adb42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5faa461e0ffc: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x5faa46101d4a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x5faa461ed848: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x5faa45f947bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa46141b27: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa46141b27: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa46141b27: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa46141b27: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461bab76: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5faa461d4ba7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e23d6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa460b2d5b: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x5faa461c0ebb: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa461c0ebb: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa461c0ebb: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa461c0ebb: <[V] as alloc::slice::Concat<T>>::concat (alloc/src/slice.rs:712:26)",
"0x5faa461c0cab: alloc::slice::<impl [T]>::concat (alloc/src/slice.rs:561:9)",
"0x5faa460af199: winter_prover::trace::commitment::build_segment_queries::{{closure}}::{{closure}} (src/trace/commitment.rs:164:27)",
"0x5faa45f2d019: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5faa460ad736: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:159:13)",
"0x5faa46111911: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa46111911: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa46111911: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa46111911: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461dcf1b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d8516: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e2220b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa45ea9bd7: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x5faa45f954bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa461484c8: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa461484c8: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa461484c8: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa461484c8: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5faa461df72e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d6407: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa462bf17e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa46102e5c: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x5faa45fec98e: winter_verifier::perform_verification (verifier/src/lib.rs:303:42)",
"0x5faa461f9527: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:228:37)",
"0x5faa4604dd04: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x5faa4604afbc: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x5faa462aacaa: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x5faa45f8f91c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa46119dc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa46119dc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa46119dc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa46119dc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461bb6b3: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5faa461d0bc9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e2301e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa46071f62: winter_prover::Prover::generate_proof (prover/src/lib.rs:291:36)",
"0x5faa45feb9d9: winter_verifier::perform_verification (verifier/src/lib.rs:183:13)",
"0x5faa46047210: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:197:28)",
"0x5faa4613c637: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa4613c637: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa4613c637: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa4613c637: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461dfade: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d84b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e22d0e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa46071e32: winter_prover::Prover::generate_proof (prover/src/lib.rs:286:23)",
"0x5faa462355d7: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x5faa462aae0b: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x5faa462c26eb: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x5faa45fec6c1: winter_verifier::perform_verification (verifier/src/lib.rs:295:27)",
"0x5faa462a435d: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x5faa45f95f3a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa4610715e: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa4610715e: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa4610715e: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa4610715e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5faa461dd21e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d2957: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa4626976e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa461ec755: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:144:35)",
"0x5faa461fb1ab: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x5faa461fa696: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x5faa45e8e8e9: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:641:17)",
"0x5faa4611e187: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa4611e187: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa4611e187: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa4611e187: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461df29e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d3e27: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e217ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa461ec95b: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x5faa4621fc60: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x5faa460af11b: winter_prover::trace::commitment::build_segment_queries::{{closure}}::{{closure}} (src/trace/commitment.rs:162:42)",
"0x5faa46218810: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x5faa462bdcb7: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x5faa4626fa27: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:272:18)",
"0x5faa4626e297: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:166:30)",
"0x5faa46217f64: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:142:33)",
"0x5faa45f90b7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa46132f11: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa46132f11: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa46132f11: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa46132f11: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461dd3db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d2d46: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e21acb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa460b5c0e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x5faa46204835: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x5faa45f5a1d0: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x5faa46128107: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa46128107: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa46128107: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa46128107: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461dd4fe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d74b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e2486e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa460edd8f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x5faa45f9740c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa46126bc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa46126bc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa46126bc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa46126bc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461dca9e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d7c79: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e2294e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa45f7477a: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:50:26)",
"0x5faa460b5c1d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x5faa461f9476: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:228:38)",
"0x5faa46212dab: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5faa462117e1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5faa460254eb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5faa45ffa79d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5faa45ec30fc: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5faa45ec0911: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x5faa45f9e23c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa4613b977: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa4613b977: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa4613b977: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa4613b977: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461dc65e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d0517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e2160e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa460735d6: winter_prover::Prover::generate_proof (prover/src/lib.rs:491:51)",
"0x5faa4626dfd0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:149:33)",
"0x5faa45ed19cb: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x5faa45e3e32c: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5faa460a7954: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x5faa462973fb: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x5faa4612ff37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa4612ff37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa4612ff37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa4612ff37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461df2be: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d82d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e224de: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa460472c4: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:198:23)",
"0x5faa45f8fbbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa46118991: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa46118991: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa46118991: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa46118991: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461de37b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d3ed6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e2178b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa45febcd2: winter_verifier::perform_verification (verifier/src/lib.rs:212:41)",
"0x5faa4604ad84: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x5faa460a7b12: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x5faa46229d42: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x5faa463df6b6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x5faa460c5b2b: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x5faa46436d49: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x5faa462046ed: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x5faa45ed5511: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:132:51)",
"0x5faa45e37a1a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5faa4627ada5: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5faa45f9adbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa461093c1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa461093c1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa461093c1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa461093c1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461de9db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d1d06: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e23eab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa45febd9f: winter_verifier::perform_verification (verifier/src/lib.rs:216:40)",
"0x5faa45ebfe22: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x5faa45f555c4: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x5faa46275d04: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x5faa4613af40: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa4613af40: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa4613af40: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa4613af40: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5faa461dd14b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d48a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e2127b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa46232bca: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x5faa461372f0: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa461372f0: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa461372f0: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa461372f0: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5faa461db5bb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d6da6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e22dbb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa4622a075: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x5faa462b6bcd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x5faa46218312: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x5faa460ae078: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x5faa45e4761a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5faa45effe45: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5faa45fc45e2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5faa45fd5209: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5faa461af0e2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5faa45eab49b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x5faa463ea76e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5faa463ec220: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5faa463eb428: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5faa46125787: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa46125787: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa46125787: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa46125787: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461dc67e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d3807: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e2571e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa45ed533a: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:132:32)",
"0x5faa4604dbe1: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x5faa46050211: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x5faa463da5bd: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:151:28)",
"0x5faa463dcd7a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x5faa462714c0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:28)",
"0x5faa45fc2842: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5faa45fd5419: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5faa461aaba2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5faa45f8957e: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x5faa46047723: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:200:34)",
"0x5faa45e36b0a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5faa45f0a1bf: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5faa460c5a4e: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x5faa46120f91: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa46120f91: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa46120f91: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa46120f91: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461dbedb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d5626: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e214ab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa46086ba6: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:630:42)",
"0x5faa463d5ec9: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:352:21)",
"0x5faa45fb67b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5faa45fd4d89: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5faa461aaf32: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5faa45fed48c: winter_verifier::perform_verification (verifier/src/lib.rs:182:9)",
"0x5faa460f1d61: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x5faa45fec33e: winter_verifier::perform_verification (verifier/src/lib.rs:272:24)",
"0x5faa45ffa9dd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5faa45ec383f: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5faa4609f6c3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5faa46128781: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa46128781: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa46128781: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa46128781: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461dddab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d2306: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e2209b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa46086c73: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:634:36)",
"0x5faa45fdc191: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x5faa4613dc51: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa4613dc51: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa4613dc51: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa4613dc51: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461dbf6b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d6a96: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e2353b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa45ea9a47: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x5faa461f6872: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x5faa46071c88: winter_prover::Prover::generate_proof (prover/src/lib.rs:268:13)",
"0x5faa45ed487b: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:235:25)",
"0x5faa4629fa62: examples::do_work::prover::build_do_work_trace (src/do_work/prover.rs:65:5)",
"0x5faa46093668: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces::{{closure}} (src/do_work/prover.rs:32:27)",
"0x5faa461449a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa461449a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa461449a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa461449a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461df3de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d64c9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e24ede: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa45ed15e0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x5faa462a000c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x5faa45f9ab1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa461237cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa461237cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa461237cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa461237cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5faa461de86e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d0947: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e21e8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa46101bf6: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x5faa461f926a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x5faa4608f4e4: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:691:36)",
"0x5faa463d9502: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5faa463da179: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5faa463dbae2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5faa463d1916: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:13)",
"0x5faa461f01bf: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x5faa46151cd6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa46151cd6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa46151cd6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa4607200d: winter_prover::Prover::generate_proof (prover/src/lib.rs:300:37)",
"0x5faa4623551a: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x5faa462c26d0: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x5faa461e9af6: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x5faa45fecd3a: winter_verifier::perform_verification (verifier/src/lib.rs:316:28)",
"0x5faa4621202b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5faa46211681: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5faa4602512b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5faa45ffa8bd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5faa45ec3f89: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5faa4609fa00: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5faa460757ed: winter_prover::Prover::generate_proof (prover/src/lib.rs:439:13)",
"0x5faa460b8eb0: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x5faa460718ba: winter_prover::Prover::generate_proof (prover/src/lib.rs:257:22)",
"0x5faa45f8fe5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5faa4613b771: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5faa4613b771: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5faa4613b771: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5faa4613b771: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5faa461dc0cb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5faa461d59c6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5faa45e220cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5faa4604ce5a: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x5faa4605183e: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x5faa45fad392: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5faa45fd4a59: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5faa461a9b42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5faa45f770d9: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:174:17)"
]
}