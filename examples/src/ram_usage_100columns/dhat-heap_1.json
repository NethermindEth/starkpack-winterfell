{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell do-work -n 1 -l 65536",
"pid": 24927,
"tg": 29931022,
"te": 35956238,
"pps": [
{
"tb": 51200,
"tbk": 1,
"tl": 11048,
"mb": 51200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9
]
},
{
"tb": 96,
"tbk": 1,
"tl": 3958737,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
13,
14,
15
]
},
{
"tb": 384,
"tbk": 2,
"tl": 81,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
17,
18,
19,
20,
21,
22,
23,
24,
25
]
},
{
"tb": 72,
"tbk": 1,
"tl": 11793,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
27,
9,
15,
28,
29
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 4297,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
30,
31,
32,
33,
34
]
},
{
"tb": 16,
"tbk": 1,
"tl": 35817882,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
16,
35,
36,
37,
38,
39,
40,
41,
42,
43
]
},
{
"tb": 16,
"tbk": 1,
"tl": 35825049,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
44,
45,
46,
47,
48,
49,
50,
51,
52
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1318,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
53,
54,
55,
56,
57,
58,
59,
60,
61,
62,
63
]
},
{
"tb": 3200,
"tbk": 1,
"tl": 6728,
"mb": 3200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
65,
66,
67,
68,
69,
70,
71,
72,
73
]
},
{
"tb": 144,
"tbk": 1,
"tl": 188718,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
74,
75,
76,
77,
78,
79,
80,
81,
82,
15
]
},
{
"tb": 24,
"tbk": 1,
"tl": 8803,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
83,
84,
85,
86
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4061,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
87,
88,
89,
90,
91
]
},
{
"tb": 4194336,
"tbk": 3,
"tl": 74859,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
92,
93,
94,
95,
96,
97,
98
]
},
{
"tb": 256,
"tbk": 1,
"tl": 13,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
65,
66,
67,
68,
69,
70,
99,
100,
15
]
},
{
"tb": 9584640,
"tbk": 4,
"tl": 206845,
"mb": 9584640,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
92,
93,
94,
95,
101,
102,
103
]
},
{
"tb": 24414,
"tbk": 4,
"tl": 35030,
"mb": 24414,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
44,
45,
46,
47,
48,
49,
104,
105,
106
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 71871,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
92,
93,
94,
95,
107,
108,
109
]
},
{
"tb": 216,
"tbk": 1,
"tl": 8679,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
110,
111,
112,
113,
114,
115,
116,
117,
118
]
},
{
"tb": 160,
"tbk": 1,
"tl": 6671,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
119,
120,
121,
122,
123,
124,
125,
126,
127
]
},
{
"tb": 1968,
"tbk": 2,
"tl": 61,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
128,
129,
130,
131,
132,
133
]
},
{
"tb": 896,
"tbk": 6,
"tl": 8705,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
134,
135,
136,
137,
138
]
},
{
"tb": 96,
"tbk": 1,
"tl": 6701,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
139,
140,
141,
142,
143
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1547221,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
65,
66,
67,
144,
145,
146,
147,
148,
149
]
},
{
"tb": 96,
"tbk": 1,
"tl": 28,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
13,
150,
151
]
},
{
"tb": 8,
"tbk": 1,
"tl": 22,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
152,
153,
154,
155,
156,
157,
158,
159,
160,
161
]
},
{
"tb": 72,
"tbk": 1,
"tl": 189758,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
162,
163,
164,
165,
166,
167,
168,
169,
82,
15
]
},
{
"tb": 16128,
"tbk": 4,
"tl": 1632,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
170,
171,
172,
173,
174,
175,
176
]
},
{
"tb": 48,
"tbk": 1,
"tl": 35824972,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
16,
177,
178,
179,
180,
181,
182,
183,
15
]
},
{
"tb": 16,
"tbk": 1,
"tl": 128,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
184,
185,
186,
187,
188,
189
]
},
{
"tb": 72,
"tbk": 1,
"tl": 8817,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
190,
191,
192,
193,
194,
195,
86
]
},
{
"tb": 480,
"tbk": 4,
"tl": 6410,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
196,
197,
198,
199,
200,
201,
202
]
},
{
"tb": 512,
"tbk": 1,
"tl": 23,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
65,
66,
67,
68,
69,
70,
203,
151,
143
]
},
{
"tb": 4032,
"tbk": 6,
"tl": 6449,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
134,
135,
136,
204,
205
]
},
{
"tb": 320,
"tbk": 2,
"tl": 3094167,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
206,
207,
208,
209,
210
]
},
{
"tb": 2097152,
"tbk": 131072,
"tl": 79495,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
65,
66,
67,
68,
69,
70,
211,
212,
213
]
},
{
"tb": 224,
"tbk": 1,
"tl": 8821,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
44,
45,
46,
47,
48,
49,
104,
214,
215
]
},
{
"tb": 24288,
"tbk": 122,
"tl": 628067,
"mb": 24288,
"mbk": 122,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
216,
217,
218,
219,
220,
221,
222,
223
]
},
{
"tb": 512,
"tbk": 1,
"tl": 411,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
92,
93,
94,
224,
151,
143,
225
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2336,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
162,
163,
164,
165,
166,
167,
168,
226,
227,
8
]
},
{
"tb": 192,
"tbk": 1,
"tl": 8781,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
190,
228,
229,
230,
231,
232,
233,
234,
86
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 649833,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
170,
171,
172,
173,
174,
175,
235
]
},
{
"tb": 16128,
"tbk": 4,
"tl": 24254,
"mb": 16128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
92,
93,
94,
236,
223,
237,
73
]
},
{
"tb": 64,
"tbk": 1,
"tl": 204,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
134,
135,
136,
238,
239
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 7944,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
240,
241,
242,
243,
244
]
},
{
"tb": 32,
"tbk": 1,
"tl": 3958726,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
196,
197,
198,
199,
200,
245,
15
]
},
{
"tb": 512,
"tbk": 1,
"tl": 15,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
92,
93,
94,
95,
246,
247,
248
]
},
{
"tb": 96,
"tbk": 1,
"tl": 22,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
249,
186,
250,
251,
143,
225
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 2829060,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
92,
93,
94,
95,
107,
108,
252
]
},
{
"tb": 576,
"tbk": 2,
"tl": 50,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
253,
254,
255,
256,
257,
258,
259,
260,
261
]
},
{
"tb": 16,
"tbk": 1,
"tl": 126,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
184,
262,
186,
187,
188,
189
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1920,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
152,
153,
263,
264,
265,
266,
267,
268,
269,
270
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 9005,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
271,
272,
273,
15
]
},
{
"tb": 384,
"tbk": 1,
"tl": 8825,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
274,
275,
276,
277,
86
]
},
{
"tb": 512,
"tbk": 1,
"tl": 9,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
278,
279,
280,
281,
282,
283,
284,
285
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 546,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
196,
197,
198,
199,
200,
286,
287
]
},
{
"tb": 8128,
"tbk": 7,
"tl": 30,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
134,
135,
136,
288,
289
]
},
{
"tb": 48,
"tbk": 1,
"tl": 3194800,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
162,
290,
291,
292,
293,
294,
295,
296,
297
]
},
{
"tb": 51200,
"tbk": 32,
"tl": 77116,
"mb": 51200,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
65,
66,
67,
144,
145,
146,
298,
299,
300
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1736492,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
301,
302,
303,
304,
305,
306,
307,
308,
309,
310
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 130720,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
92,
93,
94,
95,
311,
312,
313
]
},
{
"tb": 1008,
"tbk": 4,
"tl": 4180,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
53,
54,
55,
56,
57,
58,
59,
60,
314,
315,
62
]
},
{
"tb": 32,
"tbk": 1,
"tl": 133,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
316,
317,
318,
319,
320,
321
]
},
{
"tb": 2976,
"tbk": 12,
"tl": 1331,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
53,
54,
322,
323,
324,
325,
326,
327,
328,
329
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1936,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
152,
153,
330,
331,
332,
333,
334,
335,
336,
337
]
},
{
"tb": 80,
"tbk": 1,
"tl": 1546951,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
338,
339,
340,
341,
342,
343,
344,
345,
346
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2517,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
347,
348,
349,
350,
351,
352,
353,
354,
355
]
},
{
"tb": 3200,
"tbk": 1,
"tl": 6676,
"mb": 3200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
65,
66,
67,
68,
69,
70,
356,
357,
358
]
},
{
"tb": 104857600,
"tbk": 100,
"tl": 3594443751,
"mb": 104857600,
"mbk": 100,
"gb": 104857600,
"gbk": 100,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
92,
93,
94,
95,
359,
360,
361
]
},
{
"tb": 3232,
"tbk": 3,
"tl": 2895536,
"mb": 3232,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
362,
363,
364,
365,
366,
367,
368,
369
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1927,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
152,
153,
370,
371,
372,
373,
374,
375,
376,
377
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 185700,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
216,
217,
218,
219,
378,
379,
380,
381
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 203345,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
216,
217,
218,
219,
378,
382,
383,
103
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2319,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
384,
385,
386,
387,
388,
389,
390,
391,
392
]
},
{
"tb": 512,
"tbk": 1,
"tl": 189443,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
393,
394,
395,
396,
15
]
},
{
"tb": 51232,
"tbk": 33,
"tl": 72433,
"mb": 51200,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
65,
66,
67,
68,
69,
70,
397,
166,
167,
168,
226
]
},
{
"tb": 104857600,
"tbk": 100,
"tl": 2853612366,
"mb": 104857600,
"mbk": 100,
"gb": 104857600,
"gbk": 100,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
65,
66,
67,
68,
69,
70,
398,
399,
400
]
},
{
"tb": 5376,
"tbk": 28,
"tl": 11141,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
53,
401,
402,
403,
404,
405,
406
]
},
{
"tb": 32,
"tbk": 2,
"tl": 1547412,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
407,
408,
409,
410,
411,
412,
413,
414
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 404837,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
92,
93,
94,
95,
107,
108,
415
]
},
{
"tb": 480,
"tbk": 4,
"tl": 256,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
196,
197,
198,
199,
200,
286,
416
]
},
{
"tb": 24,
"tbk": 1,
"tl": 5877249,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
417,
418,
419,
420,
421,
15,
28,
29
]
},
{
"tb": 96,
"tbk": 1,
"tl": 6437,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
13,
422,
205
]
},
{
"tb": 24,
"tbk": 1,
"tl": 188695,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
162,
163,
164,
165,
166,
167,
168,
423,
82,
15
]
},
{
"tb": 3720,
"tbk": 18,
"tl": 81,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
152,
153,
424,
425,
426,
427,
428,
429,
430,
416,
8
]
},
{
"tb": 72,
"tbk": 3,
"tl": 63,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
431,
432,
433,
434,
435,
436,
437,
438,
439
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 323441,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
65,
66,
67,
144,
145,
146,
440,
441,
15
]
},
{
"tb": 64,
"tbk": 1,
"tl": 928219,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
134,
135,
136,
442,
443
]
},
{
"tb": 4194336,
"tbk": 3,
"tl": 75377,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
92,
93,
94,
95,
246,
444,
97
]
},
{
"tb": 480,
"tbk": 4,
"tl": 211,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
196,
197,
198,
199,
200,
286,
445
]
},
{
"tb": 51200,
"tbk": 1,
"tl": 8811,
"mb": 51200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
44,
45,
46,
47,
48,
49,
104,
446,
85
]
},
{
"tb": 32,
"tbk": 1,
"tl": 50,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
447,
448,
449,
450,
451,
452,
453,
454,
455
]
},
{
"tb": 51200,
"tbk": 1,
"tl": 4149,
"mb": 51200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
92,
93,
94,
456,
457,
458,
91
]
},
{
"tb": 256,
"tbk": 1,
"tl": 8742,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
44,
45,
46,
47,
48,
49,
104,
459,
234
]
},
{
"tb": 16128,
"tbk": 4,
"tl": 624,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
92,
93,
94,
95,
246,
460,
461
]
},
{
"tb": 72,
"tbk": 1,
"tl": 5915030,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
462,
463,
464,
465,
466,
467,
468,
469,
470
]
},
{
"tb": 16128,
"tbk": 126,
"tl": 120,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
471,
472,
473,
474,
475,
476,
477,
478
]
},
{
"tb": 384,
"tbk": 1,
"tl": 1547103,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
479,
480,
481,
482,
483,
484,
485,
486,
487
]
},
{
"tb": 872415232,
"tbk": 1,
"tl": 3413051,
"mb": 872415232,
"mbk": 1,
"gb": 872415232,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
65,
66,
67,
68,
69,
70,
488,
489,
490
]
},
{
"tb": 16,
"tbk": 1,
"tl": 102,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
170,
171,
172,
173,
174,
175,
491
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4296,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
492,
493,
494,
495,
496,
497,
498,
499
]
},
{
"tb": 16,
"tbk": 1,
"tl": 181697,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
500,
501,
502,
503,
504,
505,
15
]
},
{
"tb": 2928,
"tbk": 4,
"tl": 21057,
"mb": 2928,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
506,
507,
508,
509,
510,
222,
223,
237
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 7171,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
30,
31,
32,
33,
511
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 1712847,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
92,
93,
94,
95,
512,
513,
514
]
},
{
"tb": 56,
"tbk": 1,
"tl": 2621,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
515,
516,
73,
225,
517
]
},
{
"tb": 104857600,
"tbk": 100,
"tl": 511987832,
"mb": 104857600,
"mbk": 100,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
65,
66,
67,
68,
69,
70,
397,
166,
167,
168,
518
]
},
{
"tb": 13920,
"tbk": 32,
"tl": 86060,
"mb": 13920,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
216,
217,
218,
219,
220,
221,
519,
91
]
},
{
"tb": 3200,
"tbk": 2,
"tl": 860835,
"mb": 1600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
170,
171,
172,
173,
174,
175,
520
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 44,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
92,
93,
94,
95,
107,
108,
521
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 56213,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
65,
66,
67,
144,
145,
146,
522,
273,
15
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2132,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
216,
523,
524,
525,
526,
527,
416,
8
]
},
{
"tb": 3201,
"tbk": 1,
"tl": 18,
"mb": 3201,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
196,
528,
529,
530,
531,
532,
533,
534,
535,
536,
537
]
},
{
"tb": 24,
"tbk": 1,
"tl": 5877244,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
162,
538,
539,
540,
541,
15,
28,
29
]
},
{
"tb": 96,
"tbk": 2,
"tl": 3400994,
"mb": 96,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
162,
542,
543,
544,
545,
546,
547,
548,
549
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 3828,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
92,
93,
94,
456,
457,
550,
551
]
},
{
"tb": 7016,
"tbk": 42,
"tl": 149,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
152,
153,
424,
425,
426,
427,
428,
429,
430,
287,
552
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
44,
45,
46,
47,
48,
49,
553,
554,
555
]
},
{
"tb": 1600,
"tbk": 1,
"tl": 123605,
"mb": 1600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
500,
501,
502,
503,
556,
557,
558
]
},
{
"tb": 48,
"tbk": 1,
"tl": 5136946,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
559,
560,
561,
562,
563,
564,
565,
566,
567
]
},
{
"tb": 24,
"tbk": 1,
"tl": 29931579,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
16,
568,
569,
570,
571,
572,
573,
574,
575,
576
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 9911,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
240,
241,
242,
243,
577
]
},
{
"tb": 16,
"tbk": 1,
"tl": 6,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
184,
185,
578,
505,
15,
28
]
},
{
"tb": 361055,
"tbk": 8,
"tl": 8951,
"mb": 205836,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
240,
241,
242,
579,
580
]
},
{
"tb": 48,
"tbk": 2,
"tl": 117,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
581,
582,
583,
584,
585,
586
]
},
{
"tb": 24,
"tbk": 1,
"tl": 10,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
162,
163,
164,
165,
166,
167,
168,
226,
587,
183
]
},
{
"tb": 2400,
"tbk": 1,
"tl": 5136935,
"mb": 2400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
162,
163,
164,
165,
166,
167,
168,
518,
588,
589
]
},
{
"tb": 32,
"tbk": 1,
"tl": 6325,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
590,
591,
15,
28,
29
]
},
{
"tb": 6072,
"tbk": 11,
"tl": 4465,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
592,
593,
594,
595,
596,
597
]
},
{
"tb": 73880,
"tbk": 39,
"tl": 56360,
"mb": 36992,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
240,
241,
242,
243,
598
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 2141183,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
216,
217,
218,
219,
378,
379,
380,
599
]
},
{
"tb": 1248,
"tbk": 12,
"tl": 296,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
53,
600,
601,
602,
603,
604,
605
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 3302,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
216,
606,
607,
608,
609,
610,
611,
612,
613
]
},
{
"tb": 192,
"tbk": 1,
"tl": 6685,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
614,
615,
616,
617,
143
]
},
{
"tb": 2912,
"tbk": 28,
"tl": 393,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
53,
600,
601,
602,
618,
619,
620
]
},
{
"tb": 2400,
"tbk": 1,
"tl": 35947149,
"mb": 2400,
"mbk": 1,
"gb": 2400,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
16,
162,
621,
622,
623,
624,
625,
626,
627,
628
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1736465,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
196,
197,
198,
199,
200,
629,
630
]
},
{
"tb": 2097152,
"tbk": 2,
"tl": 6386190,
"mb": 2097152,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
65,
66,
67,
144,
145,
146,
631,
632,
633
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
316,
634,
225,
517
]
},
{
"tb": 13953,
"tbk": 1,
"tl": 8806,
"mb": 13953,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
44,
45,
46,
47,
48,
49,
104,
635,
85
]
},
{
"tb": 32,
"tbk": 1,
"tl": 3958720,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
196,
197,
198,
199,
200,
636,
15
]
},
{
"tb": 16,
"tbk": 1,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
184,
262,
578,
505,
15,
28
]
},
{
"tb": 512,
"tbk": 4,
"tl": 974,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
637,
638,
639,
640,
287
]
},
{
"tb": 51200,
"tbk": 1,
"tl": 3006,
"mb": 51200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
92,
93,
94,
456,
457,
641,
91
]
},
{
"tb": 8,
"tbk": 1,
"tl": 27065902,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
16,
642,
643,
644,
645,
646,
647,
648,
649,
650
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 147965,
"mb": 1179648,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
92,
93,
94,
95,
651,
652,
103
]
},
{
"tb": 16128,
"tbk": 4,
"tl": 35046,
"mb": 16128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
44,
45,
46,
47,
48,
49,
104,
653,
106
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2399,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
65,
66,
67,
144,
145,
146,
654,
73,
225
]
},
{
"tb": 16,
"tbk": 1,
"tl": 159,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
65,
66,
67,
68,
69,
70,
655,
656,
657
]
},
{
"tb": 32,
"tbk": 1,
"tl": 118,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
658,
659,
660,
661,
662,
663,
664,
665,
148,
666
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2136,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
506,
507,
508,
509,
667,
416,
8,
9
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 35815863,
"mb": 2097152,
"mbk": 1,
"gb": 2097152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
92,
93,
94,
95,
107,
668,
669
]
},
{
"tb": 4032,
"tbk": 4,
"tl": 21721,
"mb": 4032,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
216,
523,
524,
525,
526,
670,
223,
237
]
},
{
"tb": 72,
"tbk": 3,
"tl": 566114,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
301,
302,
303,
304,
305,
306,
307,
308,
671,
78,
79,
80
]
},
{
"tb": 96,
"tbk": 1,
"tl": 41,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
249,
186,
187,
188,
189,
15
]
},
{
"tb": 32,
"tbk": 1,
"tl": 19,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
92,
93,
94,
456,
672,
673,
73
]
},
{
"tb": 3720,
"tbk": 18,
"tl": 570,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
152,
153,
424,
425,
426,
427,
428,
429,
674,
675,
676
]
},
{
"tb": 134217728,
"tbk": 2,
"tl": 5886028,
"mb": 67108864,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
170,
171,
172,
173,
174,
175,
677
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
678,
679,
680,
225,
517
]
},
{
"tb": 838860800,
"tbk": 524288,
"tl": 1267759,
"mb": 1600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
65,
66,
67,
144,
145,
146,
681,
682,
683
]
},
{
"tb": 32,
"tbk": 1,
"tl": 155,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
65,
66,
67,
68,
69,
70,
684,
656,
657
]
},
{
"tb": 160,
"tbk": 1,
"tl": 6719,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
685,
686,
687,
688,
73
]
},
{
"tb": 256,
"tbk": 1,
"tl": 12,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
53,
54,
55,
56,
57,
58,
59,
60,
689,
100,
15
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2485,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
162,
690,
691,
692,
693,
694,
695,
696,
697
]
},
{
"tb": 976,
"tbk": 4,
"tl": 1306,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
152,
153,
698,
699,
700,
701,
675,
702,
703
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2137,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
506,
507,
508,
509,
667,
445,
273,
15
]
},
{
"tb": 103968,
"tbk": 228,
"tl": 64226,
"mb": 26448,
"mbk": 58,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
704,
705,
706,
707,
708,
709
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1736489,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
65,
66,
67,
68,
69,
70,
710,
309,
310
]
},
{
"tb": 16,
"tbk": 1,
"tl": 679120,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
500,
501,
502,
503,
711,
712,
713
]
},
{
"tb": 2736,
"tbk": 6,
"tl": 2660,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
704,
705,
706,
714,
715,
716
]
},
{
"tb": 80,
"tbk": 1,
"tl": 6427,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
92,
93,
94,
717,
718,
143,
225
]
},
{
"tb": 13800,
"tbk": 25,
"tl": 6482,
"mb": 3864,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
592,
593,
594,
719,
720,
721
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3304,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
506,
507,
508,
509,
510,
722,
551,
723
]
},
{
"tb": 512,
"tbk": 1,
"tl": 406,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
92,
93,
94,
724,
151,
143,
225
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 23652336,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
92,
93,
94,
95,
512,
513,
725
]
},
{
"tb": 8,
"tbk": 1,
"tl": 29895046,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
16,
642,
726,
727,
728,
729,
730,
731,
732,
733
]
},
{
"tb": 64,
"tbk": 1,
"tl": 198,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
134,
135,
136,
734,
239
]
},
{
"tb": 4032,
"tbk": 6,
"tl": 928238,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
134,
135,
136,
204,
443
]
},
{
"tb": 8695,
"tbk": 10,
"tl": 1441545,
"mb": 4352,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
240,
241,
242,
579,
735
]
},
{
"tb": 48,
"tbk": 2,
"tl": 77,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
736,
582,
583,
584,
585,
586
]
},
{
"tb": 3720,
"tbk": 18,
"tl": 80,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
152,
153,
424,
425,
426,
427,
428,
429,
430,
445,
273
]
},
{
"tb": 48,
"tbk": 2,
"tl": 3472952,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
301,
302,
303,
304,
305,
306,
307,
308,
737,
738
]
},
{
"tb": 872415232,
"tbk": 1,
"tl": 9584718,
"mb": 872415232,
"mbk": 1,
"gb": 872415232,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
16,
739,
740,
741,
742,
743,
744,
745,
746
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2764,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
506,
507,
508,
509,
510,
519,
91,
516
]
},
{
"tb": 48,
"tbk": 2,
"tl": 3094177,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
301,
302,
303,
304,
305,
306,
307,
308,
747,
210
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 401314,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
748,
749,
750,
751,
752,
753,
754,
755
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
44,
45,
46,
47,
48,
49,
553,
756,
680
]
},
{
"tb": 16128,
"tbk": 4,
"tl": 3069,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
739,
740,
741,
742,
757,
552,
100,
15
]
},
{
"tb": 3840,
"tbk": 16,
"tl": 2456,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
134,
135,
136,
758,
759
]
},
{
"tb": 128,
"tbk": 2,
"tl": 3093930,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
760,
761,
762,
763,
764
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1433180,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
765,
766,
767,
768,
769,
770,
771,
772,
773
]
},
{
"tb": 24,
"tbk": 1,
"tl": 144,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
162,
774,
775,
776,
777,
778,
779,
780,
781
]
},
{
"tb": 8,
"tbk": 1,
"tl": 404855,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
152,
153,
698,
699,
700,
782,
783,
310,
15
]
},
{
"tb": 16,
"tbk": 1,
"tl": 52,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
765,
784,
785,
786,
787,
788,
789,
790,
15,
28
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
44,
45,
46,
47,
48,
49,
553,
756,
555
]
},
{
"tb": 16,
"tbk": 1,
"tl": 8830,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
44,
45,
46,
47,
48,
49,
104,
791,
792
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1912,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
152,
153,
793,
794,
795,
796,
797,
798,
799,
800
]
},
{
"tb": 2880,
"tbk": 24,
"tl": 2470,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
196,
197,
198,
199,
200,
801,
675
]
},
{
"tb": 2016,
"tbk": 4,
"tl": 3020,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
802,
803,
804,
805,
806,
807,
808,
809
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1312,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
65,
66,
67,
144,
145,
146,
810,
62,
63
]
},
{
"tb": 96,
"tbk": 1,
"tl": 47,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
13,
811,
591
]
},
{
"tb": 336,
"tbk": 2,
"tl": 25317531,
"mb": 312,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
812,
813,
814,
815,
816,
817,
818,
819,
820
]
},
{
"tb": 512,
"tbk": 1,
"tl": 48,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
821,
822,
823,
824,
825,
826,
827,
828
]
},
{
"tb": 512,
"tbk": 1,
"tl": 29,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
92,
93,
94,
829,
248,
143,
225
]
},
{
"tb": 96,
"tbk": 1,
"tl": 14,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
249,
578,
505,
15,
28,
29
]
},
{
"tb": 96,
"tbk": 1,
"tl": 2345,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
830,
831,
832,
833,
8
]
},
{
"tb": 13920,
"tbk": 32,
"tl": 103375,
"mb": 13920,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
216,
217,
218,
219,
220,
221,
722,
551
]
},
{
"tb": 240,
"tbk": 2,
"tl": 1736472,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
834,
310,
15,
28,
29
]
},
{
"tb": 192,
"tbk": 1,
"tl": 17576,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
190,
228,
229,
230,
231,
835,
100,
15,
28
]
},
{
"tb": 24,
"tbk": 1,
"tl": 137,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
836,
837,
148,
666,
251,
143
]
},
{
"tb": 96,
"tbk": 1,
"tl": 10943,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
838,
839,
840,
841,
7
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2298,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
842,
843,
844,
845,
846,
847,
848,
849,
850
]
},
{
"tb": 32,
"tbk": 1,
"tl": 8610,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
216,
217,
218,
219,
220,
851,
852,
73
]
},
{
"tb": 16128,
"tbk": 4,
"tl": 2423,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
739,
853,
854,
855,
856,
857,
858,
859,
860
]
},
{
"tb": 40,
"tbk": 1,
"tl": 27065942,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
16,
861,
862,
863,
864,
865,
866,
867,
868,
869
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 2782,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
216,
870,
871,
872,
873,
874,
875,
876,
877
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 6011350,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
16,
216,
217,
218,
219,
378,
379,
380,
878
]
},
{
"tb": 129024,
"tbk": 4,
"tl": 1647,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
170,
171,
172,
173,
174,
175,
879
]
},
{
"tb": 256,
"tbk": 1,
"tl": 7972,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
92,
93,
94,
456,
880,
881,
73
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 733915,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
92,
93,
94,
95,
882,
883,
884
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 4146432,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
170,
171,
172,
173,
174,
175,
885
]
},
{
"tb": 160,
"tbk": 1,
"tl": 8601,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
216,
217,
218,
219,
220,
886,
852,
73
]
},
{
"tb": 32,
"tbk": 1,
"tl": 8672,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
887,
888,
889,
890,
891,
892
]
},
{
"tb": 8388608,
"tbk": 4,
"tl": 6595169,
"mb": 8388608,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
92,
93,
94,
95,
893,
894,
895
]
},
{
"tb": 96,
"tbk": 1,
"tl": 32,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
13,
896,
151
]
},
{
"tb": 16,
"tbk": 1,
"tl": 80,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
184,
185,
186,
250,
251,
143
]
},
{
"tb": 48,
"tbk": 1,
"tl": 679125,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
500,
501,
502,
503,
897,
712,
713
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 278289,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
65,
66,
67,
68,
69,
70,
71,
898,
591
]
},
{
"tb": 480,
"tbk": 4,
"tl": 9223,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
196,
197,
198,
199,
200,
201,
899
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1758,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
13,
900,
273
]
},
{
"tb": 3200,
"tbk": 2,
"tl": 860844,
"mb": 1600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
170,
171,
172,
173,
174,
175,
901
]
},
{
"tb": 224,
"tbk": 1,
"tl": 7649,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
902,
903,
904,
905,
237
]
},
{
"tb": 512,
"tbk": 1,
"tl": 17,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
92,
93,
94,
906,
248,
143,
225
]
},
{
"tb": 96,
"tbk": 1,
"tl": 928226,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
13,
422,
443
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1547230,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
658,
659,
660,
661,
662,
663,
664,
665,
148,
149
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 322818,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
92,
93,
94,
95,
107,
108,
907
]
},
{
"tb": 3200,
"tbk": 1,
"tl": 24,
"mb": 3200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
92,
93,
94,
456,
908,
673,
73
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 9197421,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
16,
216,
217,
218,
219,
378,
909,
683,
910
]
},
{
"tb": 3456,
"tbk": 12,
"tl": 4778,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
53,
911,
912,
913,
914,
915,
916
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
678,
679,
555,
183,
15,
28
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1752,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
196,
197,
198,
199,
200,
917,
7
]
},
{
"tb": 256,
"tbk": 1,
"tl": 9254,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
65,
66,
67,
144,
145,
146,
918,
919,
920
]
},
{
"tb": 6291456,
"tbk": 3,
"tl": 568664,
"mb": 6291456,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
65,
66,
67,
68,
69,
70,
397,
166,
167,
168,
169
]
},
{
"tb": 2304,
"tbk": 12,
"tl": 4882,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
53,
401,
402,
403,
921,
922,
923
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2133,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
216,
523,
524,
525,
526,
527,
445,
273
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 867779,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
92,
93,
94,
95,
311,
924,
925
]
},
{
"tb": 32,
"tbk": 1,
"tl": 64,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
447,
926,
927,
928,
929,
930,
931,
932,
933
]
},
{
"tb": 1152,
"tbk": 4,
"tl": 155,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
934,
935,
936,
937,
938
]
},
{
"tb": 3201,
"tbk": 1,
"tl": 8791,
"mb": 3201,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
44,
45,
46,
47,
48,
49,
104,
939,
940
]
},
{
"tb": 256,
"tbk": 1,
"tl": 658,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
152,
153,
698,
699,
700,
701,
675,
941,
942
]
},
{
"tb": 16128,
"tbk": 126,
"tl": 215,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
92,
93,
94,
456,
943,
223,
237
]
},
{
"tb": 64,
"tbk": 1,
"tl": 6690,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
134,
135,
136,
734,
944
]
},
{
"tb": 48,
"tbk": 1,
"tl": 7295,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
945,
591,
15,
28,
29
]
},
{
"tb": 4032,
"tbk": 4,
"tl": 3947,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
216,
523,
524,
525,
526,
527,
287,
552
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4805,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
946,
947,
948,
949,
950,
951,
952,
953
]
},
{
"tb": 16,
"tbk": 1,
"tl": 79,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
184,
262,
186,
250,
251,
143
]
},
{
"tb": 2400,
"tbk": 1,
"tl": 29929706,
"mb": 2400,
"mbk": 1,
"gb": 2400,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
16,
162,
954,
955,
956,
957,
958,
959,
960,
961
]
},
{
"tb": 96,
"tbk": 1,
"tl": 9,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
13,
962,
73
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 35817855,
"mb": 524288,
"mbk": 1,
"gb": 524288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
92,
93,
94,
95,
107,
963,
964
]
},
{
"tb": 64,
"tbk": 1,
"tl": 3,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
965,
966,
967,
968,
969,
970,
971,
972,
973
]
},
{
"tb": 805306368,
"tbk": 12,
"tl": 163902474,
"mb": 805306368,
"mbk": 12,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
739,
740,
741,
742,
743,
974,
975,
976
]
},
{
"tb": 256,
"tbk": 1,
"tl": 704,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
152,
153,
698,
699,
700,
701,
675,
676,
977
]
},
{
"tb": 64,
"tbk": 1,
"tl": 6432,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
134,
135,
136,
442,
205
]
},
{
"tb": 16128,
"tbk": 4,
"tl": 537,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
170,
171,
172,
173,
174,
175,
978
]
},
{
"tb": 8,
"tbk": 1,
"tl": 188071,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
152,
153,
424,
425,
426,
427,
428,
429,
979,
82,
15
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1547236,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
836,
837,
148,
149,
189,
15
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 311,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
65,
66,
67,
68,
69,
70,
71,
980,
15
]
},
{
"tb": 2400,
"tbk": 12,
"tl": 198,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
53,
981,
982,
983,
984,
985,
986
]
},
{
"tb": 96,
"tbk": 1,
"tl": 35825061,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
16,
987,
988,
989,
990,
991,
992,
993,
994,
995
]
},
{
"tb": 32,
"tbk": 1,
"tl": 8787,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
44,
45,
46,
47,
48,
49,
104,
996,
940
]
},
{
"tb": 576,
"tbk": 4,
"tl": 1614,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
500,
501,
502,
503,
997,
461,
62
]
},
{
"tb": 288,
"tbk": 1,
"tl": 29784,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
998,
999,
1000,
1001,
103
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 188687,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
65,
66,
67,
68,
69,
70,
397,
166,
167,
168,
423
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
44,
45,
46,
47,
48,
49,
553,
554,
680
]
},
{
"tb": 512,
"tbk": 1,
"tl": 17,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
92,
93,
94,
95,
246,
1002,
151
]
},
{
"tb": 24,
"tbk": 1,
"tl": 5877239,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
568,
1003,
1004,
1005,
1006,
15,
28,
29
]
},
{
"tb": 16,
"tbk": 1,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
44,
45,
46,
47,
48,
49,
50,
1007,
73
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 2245176,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
216,
217,
218,
219,
378,
1008,
1009,
1010
]
},
{
"tb": 8,
"tbk": 1,
"tl": 388,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
152,
153,
1011,
1012,
1013,
1014,
1015,
1016,
1017,
1018
]
},
{
"tb": 96,
"tbk": 1,
"tl": 7646,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
11,
12,
13,
1019,
237
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4304,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
92,
93,
94,
1020,
1021,
143,
225
]
},
{
"tb": 3720,
"tbk": 18,
"tl": 535,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
152,
153,
424,
425,
426,
427,
428,
429,
674,
675,
941
]
},
{
"tb": 7016,
"tbk": 42,
"tl": 945,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
152,
153,
424,
425,
426,
427,
428,
429,
674,
675,
702
]
},
{
"tb": 13953,
"tbk": 1,
"tl": 8795,
"mb": 13953,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
44,
45,
46,
47,
48,
49,
104,
1022,
1023
]
},
{
"tb": 16,
"tbk": 1,
"tl": 188707,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
65,
66,
67,
68,
69,
70,
710,
671,
78,
79,
80
]
},
{
"tb": 64,
"tbk": 1,
"tl": 6694,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
134,
135,
136,
238,
944
]
},
{
"tb": 1600,
"tbk": 1,
"tl": 2313,
"mb": 1600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
500,
501,
502,
503,
1024,
1025,
1026
]
},
{
"tb": 1088,
"tbk": 2,
"tl": 36,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
1027,
1028,
1029,
1030,
1031,
1032
]
},
{
"tb": 256,
"tbk": 4,
"tl": 127440,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
92,
93,
94,
95,
107,
108,
1033
]
},
{
"tb": 96,
"tbk": 1,
"tl": 13,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
74,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041
]
},
{
"tb": 192,
"tbk": 1,
"tl": 8782,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
1042,
1043,
1044,
1045,
86
]
},
{
"tb": 216,
"tbk": 1,
"tl": 35818014,
"mb": 216,
"mbk": 1,
"gb": 216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
16,
110,
1046,
1047,
1048,
1049,
1050,
1051,
1052,
1053
]
},
{
"tb": 109824,
"tbk": 424,
"tl": 223067,
"mb": 16384,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
216,
1054,
1055,
1056,
1057,
1058,
1059,
1060,
1061
]
},
{
"tb": 85856,
"tbk": 1676,
"tl": 1525879,
"mb": 16960,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
10,
240,
1062,
1063,
1064,
1065,
1066,
1067
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1269568,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
1068,
1069,
1070,
1071,
1072,
1073,
1074,
1075,
1076
]
},
{
"tb": 16,
"tbk": 1,
"tl": 113,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
65,
66,
67,
144,
145,
146,
147,
148,
666
]
},
{
"tb": 32,
"tbk": 1,
"tl": 35818001,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
26,
887,
1077,
1078,
1079,
1080,
1081
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1905,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
152,
153,
1082,
1083,
1084,
1085,
1086,
1087,
1088,
1089
]
},
{
"tb": 80,
"tbk": 1,
"tl": 35947162,
"mb": 80,
"mbk": 1,
"gb": 80,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
16,
1090,
1091,
1092,
1093,
1094,
1095,
1096,
1097,
1098
]
},
{
"tb": 2928,
"tbk": 4,
"tl": 3965,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
506,
507,
508,
509,
667,
287,
552,
100
]
},
{
"tb": 48,
"tbk": 1,
"tl": 1269556,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
26,
1099,
1100,
1101,
1102,
1103,
1104
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 8800,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
44,
45,
46,
47,
48,
49,
104,
1105,
1023
]
},
{
"tb": 24,
"tbk": 1,
"tl": 5877255,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
1106,
1107,
1108,
1109,
1110,
15,
28,
29
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 649949,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
170,
171,
172,
173,
174,
175,
1111
]
},
{
"tb": 1600,
"tbk": 1,
"tl": 2309,
"mb": 1600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
16,
64,
500,
501,
502,
503,
1112,
1025,
1026
]
},
{
"tb": 32,
"tbk": 1,
"tl": 14,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
196,
528,
529,
530,
531,
532,
533,
534,
1113,
536,
537
]
},
{
"tb": 51200,
"tbk": 1,
"tl": 10993,
"mb": 51200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
1114,
7,
8,
9
]
}
],
"ftbl": [
"[root]",
"0x5a14d48beb79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5a14d48bd5ca: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5a14d45d8556: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45d8556: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45d8556: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d46a6782: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x5a14d4532bd9: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x5a14d453ccb4: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x5a14d44fbace: winter_prover::Prover::generate_proof (prover/src/lib.rs:593:29)",
"0x5a14d48bd319: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5a14d4448972: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5a14d445ca19: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5a14d4632402: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5a14d44fc7ad: winter_prover::Prover::generate_proof (prover/src/lib.rs:438:13)",
"0x5a14d4519cd4: winter_prover::Prover::prove (prover/src/lib.rs:171:37)",
"0x5a14d43574a9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5a14d441c4bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5a14d45cf4c8: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45cf4c8: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45cf4c8: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d45cf4c8: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5a14d466672e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d465d407: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d474617e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d4589e5c: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x5a14d4356937: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x5a14d453cc1d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x5a14d42db2b2: <examples::do_work::DoWorkExample<H> as examples::Example>::prove (src/do_work/mod.rs:108:9)",
"0x5a14d4133d4d: winterfell::main (examples/src/main.rs:49:17)",
"0x5a14d486ada0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5a14d48665f9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5a14d48655a1: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5a14d4865eb0: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x5a14d473de9d: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x5a14d441a55c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5a14d45c41c7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45c41c7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45c41c7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d45c41c7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d466306e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d46582c7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d43f642e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d44f879f: winter_prover::Prover::generate_proof (prover/src/lib.rs:243:41)",
"0x5a14d48bebbc: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d48bebbc: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d48bebbc: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5a14d48bf7fc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5a14d48bf7fc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5a14d48bf7fc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5a14d48b8d9e: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x5a14d452f01f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x5a14d43e6f5f: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x5a14d486c739: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5a14d486a8ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5a14d4866b6c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d4866b6c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d4866b6c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5a14d486662c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5a14d486662c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5a14d486662c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5a14d454c1a5: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x5a14d457c73c: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x5a14d4473e15: winter_verifier::perform_verification (verifier/src/lib.rs:320:5)",
"0x5a14d44200ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5a14d42fd41c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d42fd41c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d42fd41c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5a14d4648939: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5a14d4648939: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5a14d4648939: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5a14d45d6097: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5a14d433227d: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x5a14d447c907: winter_verifier::verify (verifier/src/lib.rs:108:19)",
"0x5a14d4423a9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5a14d46c20c6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d46c20c6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d46c20c6: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5a14d4649039: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5a14d4649039: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5a14d4649039: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5a14d44d1ca3: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x5a14d44f9583: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:33)",
"0x5a14d485e187: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x5a14d485cfed: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:357:24)",
"0x5a14d4857e53: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:174:32)",
"0x5a14d41348fd: winterfell::main (examples/src/main.rs:80:24)",
"0x5a14d4458f22: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5a14d445bfc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5a14d4635aaf: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5a14d46b15d9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x5a14d431e583: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x5a14d45d8736: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45d8736: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45d8736: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d4364e7b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5a14d44d4be1: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x5a14d44d1fbc: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x5a14d44d7211: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x5a14d473dc96: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x5a14d44fba4f: winter_prover::Prover::generate_proof (prover/src/lib.rs:590:25)",
"0x5a14d4365303: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x5a14d4731c25: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x5a14d473f1b2: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x5a14d48bce2c: <winter_utils::serde::byte_reader::SliceReader as winter_utils::serde::byte_reader::ByteReader>::read_vec (src/serde/byte_reader.rs:151:22)",
"0x5a14d485df46: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:365:21)",
"0x5a14d485d3d6: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:146:27)",
"0x5a14d4359393: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x5a14d4529018: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x5a14d44d6f48: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x5a14d441a01c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5a14d45acee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45acee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45acee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d45acee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d463cbcf: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5a14d465a849: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42a9e5e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d447c784: winter_verifier::verify (verifier/src/lib.rs:101:24)",
"0x5a14d441a2bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5a14d45d2ffe: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45d2ffe: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45d2ffe: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d45d2ffe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5a14d466443b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d465bb76: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d46fd10b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d432a01c: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x5a14d4699dab: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5a14d46987e1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5a14d44ac4eb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5a14d448179d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5a14d434a0fc: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5a14d4347911: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x5a14d444f122: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5a14d445c6b9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5a14d4630d91: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5a14d472795b: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x5a14d452e9cc: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x5a14d4454022: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5a14d445c9e9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5a14d4633842: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5a14d4474673: winter_verifier::perform_verification (verifier/src/lib.rs:177:9)",
"0x5a14d447c9d2: winter_verifier::verify (verifier/src/lib.rs:110:21)",
"0x5a14d42fd93c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5a14d42fd93c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5a14d42fd93c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5a14d4745983: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x5a14d457ec22: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:348:9)",
"0x5a14d46f763b: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:50:13)",
"0x5a14d467489e: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x5a14d4473c0f: winter_verifier::perform_verification (verifier/src/lib.rs:308:25)",
"0x5a14d4840899: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5a14d47ad0aa: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5a14d45c3637: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45c3637: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45c3637: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d45c3637: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d4666ade: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d465f4b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42a9d0e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d44f8e32: winter_prover::Prover::generate_proof (prover/src/lib.rs:286:23)",
"0x5a14d441c9fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5a14d45d7856: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45d7856: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45d7856: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5a14d46491f9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5a14d46491f9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5a14d46491f9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5a14d44d1c8c: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x5a14d48bc6cc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x5a14d48bad9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x5a14d48bbcf8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x5a14d48bbcf8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x5a14d48b8964: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5a14d48b8c13: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x5a14d471e103: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x5a14d441b51c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5a14d468d2be: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d468d2be: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d468d2be: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5a14d4647b77: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5a14d43e4c58: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x5a14d44f8656: winter_prover::Prover::generate_proof (prover/src/lib.rs:228:27)",
"0x5a14d4695e95: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x5a14d44dd0bd: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:61:13)",
"0x5a14d457e985: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:364:13)",
"0x5a14d43fb670: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:40:22)",
"0x5a14d46f76e7: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:13)",
"0x5a14d44fcb32: winter_prover::Prover::generate_proof (prover/src/lib.rs:403:21)",
"0x5a14d485e709: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5a14d485f75c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5a14d4862726: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d4862726: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d4862726: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d4857d52: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:172:33)",
"0x5a14d4852799: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5a14d484db39: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5a14d47b0830: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5a14d47b2899: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5a14d478d451: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5a14d452f4f8: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x5a14d44736c1: winter_verifier::perform_verification (verifier/src/lib.rs:295:27)",
"0x5a14d4673693: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x5a14d457f2c9: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:534:17)",
"0x5a14d447313b: winter_verifier::perform_verification (verifier/src/lib.rs:263:61)",
"0x5a14d4434392: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5a14d445ba59: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5a14d4630b42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5a14d43fe0d9: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:174:17)",
"0x5a14d43fbf30: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:54:17)",
"0x5a14d4744cb7: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x5a14d46f6a27: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:272:18)",
"0x5a14d46f5297: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:166:30)",
"0x5a14d48612bd: <winter_air::proof::commitments::Commitments as winter_utils::serde::Deserializable>::read_from (src/proof/commitments.rs:108:22)",
"0x5a14d4857bdc: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:167:27)",
"0x5a14d441aa9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5a14d45d8916: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45d8916: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45d8916: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d452c7e9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5a14d445df24: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x5a14d440904d: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x5a14d441039c: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x5a14d4673bd0: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x5a14d42dbd99: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:118:9)",
"0x5a14d45d6067: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5a14d4532a53: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x5a14d485f4bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5a14d4862776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d4862776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d4862776: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d485d2b9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5a14d485d70b: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:211:22)",
"0x5a14d485815d: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:188:24)",
"0x5a14d469f312: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x5a14d4408d7b: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x5a14d433160c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x5a14d4585c93: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:505:13)",
"0x5a14d43e2484: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x5a14d48bdab0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5a14d48bdce9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5a14d48bef12: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5a14d445f564: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x5a14d46b59fc: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x5a14d44fc7ed: winter_prover::Prover::generate_proof (prover/src/lib.rs:439:13)",
"0x5a14d4358f42: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x5a14d46773d9: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x5a14d4473cbe: winter_verifier::perform_verification (verifier/src/lib.rs:314:25)",
"0x5a14d44dd08f: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:60:9)",
"0x5a14d46f1b4c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:63:9)",
"0x5a14d4474247: winter_verifier::perform_verification (verifier/src/lib.rs:223:43)",
"0x5a14d44ce210: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:197:28)",
"0x5a14d4421b1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5a14d45aa7cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45aa7cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45aa7cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d45aa7cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5a14d466586e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d4657947: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42a8e8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d4588bf6: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x5a14d44dd12c: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:62:13)",
"0x5a14d4596541: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d4596541: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d4596541: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d4596541: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d466490b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d465a276: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42aa45b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d4330b0f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x5a14d46b58e0: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x5a14d474965e: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x5a14d44fbbc5: winter_prover::Prover::generate_proof (prover/src/lib.rs:598:34)",
"0x5a14d4860012: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5a14d48611a9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5a14d4862878: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5a14d4858c1a: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:13)",
"0x5a14d45ae877: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45ae877: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45ae877: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d45ae877: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d466370e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d465f317: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42abace: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d4677532: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x5a14d466cf53: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x5a14d472b274: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x5a14d468b835: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x5a14d43e11d0: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x5a14d45cb9a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45cb9a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45cb9a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d45cb9a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d46663de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d465d4c9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42abede: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d43585e0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x5a14d4535078: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x5a14d42ce61a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5a14d4386e45: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5a14d441fe4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5a14d42fd2ec: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d42fd2ec: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d42fd2ec: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5a14d4649f19: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5a14d4649f19: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5a14d4649f19: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5a14d46c25d6: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x5a14d46f858d: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:33)",
"0x5a14d44fcbd3: winter_prover::Prover::generate_proof (prover/src/lib.rs:407:21)",
"0x5a14d435a47b: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x5a14d46bc42f: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x5a14d46bc504: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x5a14d48666b6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x5a14d454cb2b: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x5a14d44dcd16: <examples::do_work::air::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (src/do_work/air.rs:13:9)",
"0x5a14d430eb09: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:211:31)",
"0x5a14d42c5d3a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5a14d43b60a8: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5a14d428f3ba: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5a14d42af63a: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5a14d486b1a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d486b1a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d486b1a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d486b1a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5a14d486b5ee: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d486b5b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d486c84e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d486a299: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x5a14d45ca451: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45ca451: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45ca451: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d45ca451: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d46637db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d4658136: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42a965b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d433097f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x5a14d442427c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5a14d4595557: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d4595557: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d4595557: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d4595557: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d464379d: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5a14d465f21c: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42ab4ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d44db82a: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x5a14d4417b7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5a14d45b9f11: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45b9f11: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45b9f11: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d45b9f11: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d46643db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d4659d46: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42a8acb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d453cc0e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x5a14d4346e22: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x5a14d43dc5c4: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x5a14d46fcd04: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x5a14d435c511: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:132:51)",
"0x5a14d42bea1a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5a14d4701da5: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5a14d45917e7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45917e7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45917e7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d45917e7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d466573e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d465b7f7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42ac32e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d44cdd13: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:253:9)",
"0x5a14d45c4c51: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45c4c51: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45c4c51: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d45c4c51: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d4662f6b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d465da96: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42aa53b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d4330a47: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x5a14d4364fbb: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5a14d466be5d: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x5a14d466f406: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x5a14d4731caa: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x5a14d43621f6: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x5a14d4731c8f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x5a14d4416bbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5a14d459f991: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d459f991: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d459f991: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d459f991: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d466537b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d465aed6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42a878b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d4472cd2: winter_verifier::perform_verification (verifier/src/lib.rs:212:41)",
"0x5a14d444ac02: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5a14d445bcc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5a14d4635d48: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5a14d44fcbf6: winter_prover::Prover::generate_proof (prover/src/lib.rs:408:17)",
"0x5a14d45d7bc3: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5a14d44ce723: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:200:34)",
"0x5a14d42bdb0a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5a14d43911bf: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5a14d4878b7b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5a14d48785f1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5a14d4874bbb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5a14d487187e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5a14d4872c4c: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5a14d4871d8a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5a14d45bcee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45bcee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45bcee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d45bcee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d4662dde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d4659c57: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42ac47e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d46c1994: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x5a14d44d883e: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x5a14d4532b07: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x5a14d44247bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5a14d45d8876: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45d8876: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45d8876: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d44f8fc9: winter_prover::Prover::generate_proof (prover/src/lib.rs:299:44)",
"0x5a14d457f239: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:536:13)",
"0x5a14d44d1d29: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x5a14d47be6ac: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d47be6ac: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d47be6ac: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5a14d478f4a9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5a14d478f4a9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5a14d478f4a9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5a14d466ca2c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x5a14d4416e5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5a14d45c2771: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45c2771: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45c2771: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d45c2771: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d46630cb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d465c9c6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42a90cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d44d3e5a: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x5a14d452881d: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x5a14d44faf26: winter_prover::Prover::generate_proof (prover/src/lib.rs:548:13)",
"0x5a14d457f08d: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:540:13)",
"0x5a14d43e1428: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x5a14d44d4d04: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x5a14d4749495: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x5a14d485cd02: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:348:22)",
"0x5a14d442451c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5a14d45d0907: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45d0907: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45d0907: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d45d0907: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d4663fde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d465d627: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42a893e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d42dbd54: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:112:30)",
"0x5a14d42fb909: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5a14d46c34cb: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x5a14d46b1524: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x5a14d485d8d2: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:215:25)",
"0x5a14d471e3fb: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x5a14d454d010: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x5a14d441b7bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5a14d45c8b27: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45c8b27: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45c8b27: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d45c8b27: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d4641b76: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5a14d465bba7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42aad6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d4539d5b: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x5a14d45af107: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45af107: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45af107: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d45af107: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d46644fe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d465e4b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42ab86e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d4574d8f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x5a14d441e40c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5a14d45adbc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45adbc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45adbc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d45adbc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d4663a9e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d465ec79: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42a994e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d43fb77a: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:50:26)",
"0x5a14d46844a2: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x5a14d4683147: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5a14d450ddf7: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:645:31)",
"0x5a14d46f17eb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:39:30)",
"0x5a14d459e777: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d459e777: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d459e777: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d459e777: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d46632de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d465f697: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42abb8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d454c131: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x5a14d42fd9f5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d42fd9f5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d42fd9f5: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5a14d4647bf4: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5a14d435e598: winter_prover::trace::Trace::validate (src/trace/mod.rs:177:13)",
"0x5a14d44fcf21: winter_prover::Prover::generate_proof (prover/src/lib.rs:370:17)",
"0x5a14d441ee8c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5a14d45d8966: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45d8966: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45d8966: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d445dc9d: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x5a14d454ca4e: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x5a14d46821ab: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x5a14d4681696: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x5a14d45164e4: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:691:36)",
"0x5a14d431e6f1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x5a14d4330fa8: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x5a14d41349d5: winterfell::main (examples/src/main.rs:83:11)",
"0x5a14d44d17be: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x5a14d46b1152: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x5a14d472701d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x5a14d4741ab6: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x5a14d47496d0: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x5a14d452cf58: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d452cf58: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d452cf58: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5a14d4647c17: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5a14d466c698: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x5a14d484de7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5a14d47be57c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d47be57c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d47be57c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5a14d478ecc9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5a14d478ecc9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5a14d478ecc9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5a14d457de2a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x5a14d468d1f6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5a14d4331c48: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5a14d45d8cd6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45d8cd6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45d8cd6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d44f900d: winter_prover::Prover::generate_proof (prover/src/lib.rs:300:37)",
"0x5a14d4596317: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d4596317: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d4596317: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d4596317: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d466406e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d465f587: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42a847e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d44d3c6a: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x5a14d46b9a9a: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x5a14d434577b: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x5a14d473e152: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x5a14d452edf4: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x5a14d452ead6: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x5a14d43e4a03: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x5a14d435b87b: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:235:25)",
"0x5a14d4726a62: examples::do_work::prover::build_do_work_trace (src/do_work/prover.rs:65:5)",
"0x5a14d451a668: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces::{{closure}} (src/do_work/prover.rs:32:27)",
"0x5a14d441691c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5a14d45a0dc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45a0dc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45a0dc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d45a0dc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d46426b3: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5a14d4657bc9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42aa01e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d44f8f62: winter_prover::Prover::generate_proof (prover/src/lib.rs:291:36)",
"0x5a14d441f90c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5a14d45a7f91: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45a7f91: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45a7f91: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d45a7f91: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d4662edb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d465c626: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42a84ab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d450dba6: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:630:42)",
"0x5a14d46a6a51: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x5a14d435e0ab: winter_prover::trace::Trace::validate (src/trace/mod.rs:122:26)",
"0x5a14d48bdd49: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x5a14d4863d7a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x5a14d46c1299: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x5a14d45895ae: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x5a14d434789d: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x5a14d4588cce: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x5a14d458b6c6: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x5a14d457e9ea: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:362:9)",
"0x5a14d43e4a1e: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x5a14d44cff17: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5a14d430f5ac: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:293:57)",
"0x5a14d469f6ec: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x5a14d44fa868: winter_prover::Prover::generate_proof (prover/src/lib.rs:514:9)",
"0x5a14d4698ccb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5a14d4698471: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5a14d44acf0b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5a14d4486d31: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5a14d448a477: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5a14d447f1bb: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5a14d4404175: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x5a14d467b866: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x5a14d4878d2b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5a14d4878751: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5a14d4874adb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5a14d486e6cd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5a14d486984b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5a14d4867f13: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5a14d45c1f40: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45c1f40: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45c1f40: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d45c1f40: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5a14d466414b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d465b8a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42a827b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d46b9bca: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x5a14d443d7b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5a14d445bd89: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5a14d4631f32: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5a14d447448c: winter_verifier::perform_verification (verifier/src/lib.rs:182:9)",
"0x5a14d487176e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5a14d4873220: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5a14d4872428: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5a14d45ac787: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45ac787: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45ac787: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d45ac787: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d466367e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d465a807: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42ac71e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d435c33a: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:132:32)",
"0x5a14d44dcb27: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x5a14d44da8cd: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x5a14d43589cb: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x5a14d42c532c: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5a14d452e954: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x5a14d447c718: winter_verifier::verify (verifier/src/lib.rs:97:38)",
"0x5a14d485cec9: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:352:21)",
"0x5a14d44fc808: winter_prover::Prover::generate_proof (prover/src/lib.rs:440:13)",
"0x5a14d4440912: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5a14d445c119: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5a14d463194f: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5a14d466cd8a: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x5a14d46b0d42: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x5a14d441d70a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5a14d45af781: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45af781: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45af781: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d45af781: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d4664dab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d4659306: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42a909b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d450dc73: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:634:36)",
"0x5a14d46bc5d7: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x5a14d4731e0b: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x5a14d485ddc4: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:361:22)",
"0x5a14d4331cae: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x5a14d434d22a: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x5a14d434d307: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5a14d4474156: winter_verifier::perform_verification (verifier/src/lib.rs:225:13)",
"0x5a14d44192fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5a14d4720776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d4720776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d4720776: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5a14d46493b9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5a14d46493b9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5a14d46493b9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5a14d4745846: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x5a14d46f164a: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:25:25)",
"0x5a14d466c6ff: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x5a14d453feb0: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x5a14d44f88ba: winter_prover::Prover::generate_proof (prover/src/lib.rs:257:22)",
"0x5a14d4408d36: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x5a14d46c2440: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5a14d468c8ce: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x5a14d4332185: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5a14d4461f79: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x5a14d466eb5e: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x5a14d432c2ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x5a14d4723e40: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x5a14d472682c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x5a14d452eb58: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x5a14d447c5a9: winter_verifier::verify (verifier/src/lib.rs:95:32)",
"0x5a14d468026a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x5a14d467d903: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x5a14d450e3dd: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:659:26)",
"0x5a14d434d23f: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x5a14d444b5e2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5a14d445c209: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5a14d46360e2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5a14d433249b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x5a14d473dc77: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x5a14d45995b7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45995b7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45995b7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d45995b7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d4662b0e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d465aa37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42aa2be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d4532c76: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x5a14d4788656: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d4788656: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d4788656: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d4461d1c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x5a14d431853c: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x5a14d454cbf6: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x5a14d46996eb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5a14d4698891: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5a14d44abf4b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5a14d4497d8f: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5a14d44a3711: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5a14d449ecaa: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5a14d46c25ed: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x5a14d46f4fd0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:149:33)",
"0x5a14d46f89e0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:122:17)",
"0x5a14d43d8436: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5a14d44819dd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5a14d434a83f: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5a14d45266c3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5a14d4578d61: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x5a14d447333e: winter_verifier::perform_verification (verifier/src/lib.rs:272:24)",
"0x5a14d44a5451: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x5a14d44ab77d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x5a14d449f10e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x5a14d46b9ca7: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x5a14d433123c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x5a14d4673bf3: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x5a14d43158e9: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:641:17)",
"0x5a14d45c2ba1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45c2ba1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45c2ba1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d45c2ba1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d4665b3b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d465d0b6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42a96cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d44f8c5d: winter_prover::Prover::generate_proof (prover/src/lib.rs:266:43)",
"0x5a14d4585bb8: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:510:13)",
"0x5a14d468b6ed: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x5a14d46c141a: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x5a14d43fabd9: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:82:31)",
"0x5a14d42d0553: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5a14d4424a5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5a14d45d8b46: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45d8b46: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45d8b46: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d4364d3b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5a14d4682c77: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x5a14d467ac8c: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x5a14d46817bc: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x5a14d43fdf72: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:169:36)",
"0x5a14d459b727: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d459b727: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d459b727: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d459b727: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d46655de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d465b507: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42abcfe: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d44d5277: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x5a14d452eb12: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x5a14d472b35d: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x5a14d4542a48: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x5a14d454cdda: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x5a14d442f982: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5a14d445bc39: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5a14d4634a51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5a14d44d46c9: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x5a14d43d830d: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5a14d441f66c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5a14d458dc21: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d458dc21: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d458dc21: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d458dc21: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d46643ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d4657ac6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42ac01b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d44fa6a3: winter_prover::Prover::generate_proof (prover/src/lib.rs:495:52)",
"0x5a14d4593141: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d4593141: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d4593141: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d4593141: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d4665f9b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d465a346: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42a888b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d44f84e3: winter_prover::Prover::generate_proof (prover/src/lib.rs:209:39)",
"0x5a14d44d87d0: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x5a14d46f8819: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:129:9)",
"0x5a14d45d7e1c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45d7e1c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45d7e1c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5a14d4648e79: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5a14d4648e79: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5a14d4648e79: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5a14d44fa6be: winter_prover::Prover::generate_proof (prover/src/lib.rs:500:39)",
"0x5a14d4862118: <winter_air::proof::context::Context as winter_utils::serde::Deserializable>::read_from (src/proof/context.rs:184:35)",
"0x5a14d4857bf7: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:27)",
"0x5a14d4598911: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d4598911: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d4598911: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d4598911: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d4663f1b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d465f516: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42a920b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d4330bd7: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x5a14d4463191: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x5a14d459d227: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d459d227: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d459d227: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d459d227: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d466323e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d465ad47: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42abbee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d454d10f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x5a14d454c214: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x5a14d469f810: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x5a14d4418dbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5a14d45bc127: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45bc127: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45bc127: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d45bc127: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d466301e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d46596b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42abfae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d4679e38: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x5a14d45a5187: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45a5187: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45a5187: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d45a5187: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d466629e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d465ae27: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42a87ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d467395b: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x5a14d46771a4: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x5a14d444a712: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5a14d445c149: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5a14d4633122: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5a14d4532c91: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x5a14d46f84c0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:28)",
"0x5a14d473dbcd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x5a14d46c19a3: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x5a14d474582c: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x5a14d4436622: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5a14d445c839: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5a14d4635252: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5a14d46a6db8: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x5a14d4421dbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5a14d45903c1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45903c1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45903c1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d45903c1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d46659db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d4658d06: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42aaeab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d4472d9f: winter_verifier::perform_verification (verifier/src/lib.rs:216:40)",
"0x5a14d43f87fb: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x5a14d4330e38: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x5a14d45939a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45939a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45939a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d45939a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d466571e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d4658517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42aa37e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d454cf51: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x5a14d4424f9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5a14d45a2d37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45a2d37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45a2d37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d45a2d37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d466426e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d46576a7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42a9dde: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d450dd43: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:638:34)",
"0x5a14d45be2f0: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45be2f0: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45be2f0: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d45be2f0: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5a14d46625bb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d465dda6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42a9dbb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d46b1075: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x5a14d467d940: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x5a14d471e08f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x5a14d4413fee: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x5a14d433142b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x5a14d468dbc2: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x5a14d452b240: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x5a14d46a1bb1: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x5a14d44d6ca7: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x5a14d43f89d0: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x5a14d44dce42: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::new (src/do_work/air.rs:35:23)",
"0x5a14d447d8d1: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:101:85)",
"0x5a14d42ce432: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5a14d43eac0a: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:107:27)",
"0x5a14d4307bff: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5a14d43e89a4: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:113:9)",
"0x5a14d44d3db1: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x5a14d42c34aa: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5a14d4703a05: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5a14d4674848: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x5a14d46f4f6c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:148:31)",
"0x5a14d469eea2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x5a14d43df499: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x5a14d47496eb: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x5a14d472700c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x5a14d4449842: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5a14d445c419: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5a14d4631ba2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5a14d441057e: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x5a14d46771bf: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x5a14d4528833: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x5a14d468c6fb: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x5a14d467d872: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x5a14d44f8c88: winter_prover::Prover::generate_proof (prover/src/lib.rs:268:13)",
"0x5a14d48789cb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5a14d48786a1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5a14d4874c9b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5a14d486f471: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5a14d486faf7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5a14d486a72b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5a14d46a710a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x5a14d4741c0e: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x5a14d473f104: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x5a14d44fb38b: winter_prover::Prover::generate_proof (prover/src/lib.rs:561:9)",
"0x5a14d486e66d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5a14d4869538: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5a14d4867dd7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5a14d44d48b6: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x5a14d44d876c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x5a14d45caf17: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45caf17: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45caf17: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d45caf17: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d4664b2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d465a147: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42a9a9e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d44f8416: winter_prover::Prover::generate_proof (prover/src/lib.rs:205:38)",
"0x5a14d443dca2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5a14d445c539: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5a14d4634b42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5a14d4667ffc: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x5a14d4588d4a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x5a14d48615bd: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:151:28)",
"0x5a14d4858178: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:29)",
"0x5a14d432cd3c: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x5a14d447398e: winter_verifier::perform_verification (verifier/src/lib.rs:303:42)",
"0x5a14d4408f3a: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x5a14d44729d9: winter_verifier::perform_verification (verifier/src/lib.rs:183:13)",
"0x5a14d469f580: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x5a14d4597197: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d4597197: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d4597197: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d4597197: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d4665f6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d4657599: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42aac6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d4678e47: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x5a14d45b6f37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45b6f37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45b6f37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d45b6f37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d46662be: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d465f2d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42a94de: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d44ce2c4: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:198:23)",
"0x5a14d43323ef: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x5a14d4528151: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x5a14d453fdf3: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x5a14d4245149: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5a14d4243c19: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5a14d4242030: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5a14d4242298: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x5a14d4241b5a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x5a14d4241b5a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x5a14d41366a1: alloc::string::String::reserve (alloc/src/string.rs:1152:9)",
"0x5a14d41366a1: <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend (alloc/src/string.rs:2173:14)",
"0x5a14d413677c: <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter (alloc/src/string.rs:2093:9)",
"0x5a14d4723e2b: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x5a14d467a76a: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x5a14d42c1c7a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5a14d4473810: winter_verifier::perform_verification (verifier/src/lib.rs:302:9)",
"0x5a14d471e450: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x5a14d44d1d84: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x5a14d44f9c77: winter_prover::Prover::generate_proof (prover/src/lib.rs:442:35)",
"0x5a14d487881b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5a14d4878541: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5a14d4874d7b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5a14d486f3a1: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5a14d486fb37: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5a14d486a6db: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5a14d4415c0c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5a14d45b7b31: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45b7b31: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45b7b31: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d45b7b31: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d46650ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d46595a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42aae5b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d43e4967: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x5a14d4861784: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:155:27)",
"0x5a14d471e184: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x5a14d4453152: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5a14d445c389: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5a14d4634ff2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5a14d4731f89: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x5a14d4673853: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x5a14d45d8466: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45d8466: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45d8466: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d44f9051: winter_prover::Prover::generate_proof (prover/src/lib.rs:301:32)",
"0x5a14d43307d0: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x5a14d467b7a5: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x5a14d45168e7: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:706:26)",
"0x5a14d44fa110: winter_prover::Prover::generate_proof (prover/src/lib.rs:472:37)",
"0x5a14d45946b1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45946b1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45946b1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d45946b1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d466271b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d465be16: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42ab23b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d431e409: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x5a14d4410629: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x5a14d4670af6: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x5a14d4473d3a: winter_verifier::perform_verification (verifier/src/lib.rs:316:28)",
"0x5a14d485ca1e: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:168:21)",
"0x5a14d4857e38: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:176:34)",
"0x5a14d431bc8d: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x5a14d4479869: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:214:32)",
"0x5a14d42be603: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5a14d469902b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5a14d4698681: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5a14d44ac12b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5a14d44818bd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5a14d434af89: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5a14d4526a00: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5a14d46bc51a: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x5a14d45bd111: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45bd111: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45bd111: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d45bd111: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d46629fb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d465bcc6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42aa86b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d43faa5c: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:82:9)",
"0x5a14d4860502: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5a14d4861179: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5a14d4862ae2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5a14d4858916: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:13)",
"0x5a14d45a87f7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45a87f7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45a87f7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d45a87f7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d4664b7e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d465ef39: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42a90ee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d44f8603: winter_prover::Prover::generate_proof (prover/src/lib.rs:217:20)",
"0x5a14d45a6666: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45a6666: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45a6666: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d45a6666: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5a14d4662b6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d465b5dc: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d466a9be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d466cedb: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x5a14d48bdd18: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x5a14d48bf00a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x5a14d48bf00a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x5a14d48bedae: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x5a14d48bedae: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x5a14d48bee9d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x5a14d442523c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5a14d45c2977: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45c2977: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45c2977: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d45c2977: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d466365e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d4657517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42a860e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d44fa5d6: winter_prover::Prover::generate_proof (prover/src/lib.rs:491:51)",
"0x5a14d4314bb0: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:221:17)",
"0x5a14d42bf922: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5a14d46ee4dd: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::SpecFold>::spec_fold (iter/adapters/zip.rs:685:25)",
"0x5a14d46daee7: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::fold (iter/adapters/zip.rs:249:9)",
"0x5a14d46c59b7: <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/zip.rs:103:9)",
"0x5a14d45b89d1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45b89d1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45b89d1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d45b89d1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d4664cfb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d465d026: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42ab64b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d4330c9f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x5a14d441e94c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5a14d4592ae7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d4592ae7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d4592ae7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d4592ae7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5a14d466453e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5a14d465ed37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5a14d42aad4e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5a14d451a619: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces (src/do_work/prover.rs:30:9)",
"0x5a14d453ea92: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x5a14d43154c6: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:493:32)",
"0x5a14d42cb09a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5a14d43982a2: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5a14d4296c9b: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5a14d42b3906: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5a14d485c862: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:164:22)",
"0x5a14d441983c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5a14d45d8786: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5a14d45d8786: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5a14d45d8786: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5a14d44f8f85: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:39)",
"0x5a14d469f2ef: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x5a14d431bcb0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x5a14d457de3f: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x5a14d46a6c60: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)"
]
}