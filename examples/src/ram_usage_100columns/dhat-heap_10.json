{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell do-work -n 10 -l 65536",
"pid": 26174,
"tg": 328869514,
"te": 363594457,
"pps": [
{
"tb": 1248,
"tbk": 12,
"tl": 295,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7
]
},
{
"tb": 1120,
"tbk": 3,
"tl": 11330,
"mb": 640,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
16,
17
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 2181611,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29
]
},
{
"tb": 480,
"tbk": 10,
"tl": 6684242,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
30,
31,
32,
33,
34,
35,
36
]
},
{
"tb": 672,
"tbk": 3,
"tl": 5929,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
39,
40,
41,
42,
43
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2132,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
44,
45,
46,
47,
48,
49,
50,
51
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 279163,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
22,
23,
24,
52,
53,
54
]
},
{
"tb": 480,
"tbk": 20,
"tl": 647,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
56,
57,
58,
59,
60,
61
]
},
{
"tb": 10880,
"tbk": 20,
"tl": 225,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
62,
63,
64,
65,
66,
67
]
},
{
"tb": 32000,
"tbk": 10,
"tl": 118576,
"mb": 32000,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
22,
23,
24,
52,
68,
69
]
},
{
"tb": 32,
"tbk": 1,
"tl": 7353,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
70,
71,
72,
73,
69,
74
]
},
{
"tb": 512,
"tbk": 1,
"tl": 74,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
75,
76,
77,
78,
79,
80,
81,
82
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 13407845,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
44,
83,
84,
85,
86,
87,
88,
89
]
},
{
"tb": 512000,
"tbk": 320,
"tl": 2049039,
"mb": 512000,
"mbk": 320,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
70,
71,
72,
90,
91,
92
]
},
{
"tb": 3840,
"tbk": 16,
"tl": 2409,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
93,
94,
95,
96,
97
]
},
{
"tb": 480,
"tbk": 20,
"tl": 987,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
98,
57,
58,
59,
60,
61
]
},
{
"tb": 13800,
"tbk": 25,
"tl": 6555,
"mb": 3864,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
99,
100,
101,
102,
103,
104
]
},
{
"tb": 15232,
"tbk": 119,
"tl": 107,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
105,
106,
107,
108,
109,
110,
111,
112
]
},
{
"tb": 15232,
"tbk": 4,
"tl": 608,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
113,
114,
115,
116,
117,
118,
119
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 323475,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
70,
71,
72,
120,
121,
122
]
},
{
"tb": 15232,
"tbk": 4,
"tl": 45065,
"mb": 15232,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
113,
114,
115,
123,
124,
125,
69
]
},
{
"tb": 480,
"tbk": 10,
"tl": 97481251,
"mb": 480,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
126,
127,
128,
129,
130,
131
]
},
{
"tb": 400,
"tbk": 1,
"tl": 300464243,
"mb": 400,
"mbk": 1,
"gb": 400,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
132,
133,
134,
135,
136,
137,
138,
139,
140
]
},
{
"tb": 144,
"tbk": 1,
"tl": 2181638,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
141,
142,
143,
144,
145,
146,
147,
148,
149,
122
]
},
{
"tb": 480,
"tbk": 4,
"tl": 216,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
150,
151,
152,
153,
154,
155,
156
]
},
{
"tb": 160,
"tbk": 10,
"tl": 499,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
157,
158,
159,
160,
161,
162
]
},
{
"tb": 480,
"tbk": 1,
"tl": 33794498,
"mb": 480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
163,
164,
165,
166,
167,
168,
169,
170,
171
]
},
{
"tb": 672,
"tbk": 3,
"tl": 55622,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
172,
173,
174,
175,
176
]
},
{
"tb": 32000,
"tbk": 20,
"tl": 8486551,
"mb": 1600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
177,
178,
179,
180,
181,
182,
183
]
},
{
"tb": 640,
"tbk": 10,
"tl": 1532,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
93,
94,
95,
184,
185
]
},
{
"tb": 15232,
"tbk": 119,
"tl": 124,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
113,
114,
115,
186,
187,
124,
125
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 4447,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
44,
188,
189,
190,
191,
192,
193,
194,
195
]
},
{
"tb": 800,
"tbk": 10,
"tl": 15148084,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
196,
197,
198,
199,
200,
201,
202,
203,
204
]
},
{
"tb": 2160,
"tbk": 1,
"tl": 362304857,
"mb": 2160,
"mbk": 1,
"gb": 2160,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
205,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 5004,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
44,
214,
215,
216,
217,
218,
219,
220,
221
]
},
{
"tb": 480,
"tbk": 1,
"tl": 6783,
"mb": 480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
222,
223,
224,
225,
226,
227,
228,
229,
230
]
},
{
"tb": 960,
"tbk": 10,
"tl": 118,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
141,
231,
232,
233,
234,
235,
236,
237,
238
]
},
{
"tb": 20971520,
"tbk": 1310720,
"tl": 823911,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
22,
23,
24,
239,
240,
241
]
},
{
"tb": 32000,
"tbk": 10,
"tl": 154,
"mb": 3200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
113,
114,
115,
186,
242,
243,
69
]
},
{
"tb": 640,
"tbk": 10,
"tl": 116273,
"mb": 640,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
93,
94,
95,
184,
244
]
},
{
"tb": 10485760,
"tbk": 10,
"tl": 3906979,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
113,
114,
115,
116,
245,
246,
247
]
},
{
"tb": 23417,
"tbk": 4,
"tl": 62816,
"mb": 23417,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
248,
249,
250,
251,
252,
253,
254,
255,
256,
257
]
},
{
"tb": 480,
"tbk": 4,
"tl": 9814,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
150,
151,
152,
153,
154,
258,
259
]
},
{
"tb": 11520,
"tbk": 40,
"tl": 1317,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
260,
261,
262,
263,
264
]
},
{
"tb": 512,
"tbk": 1,
"tl": 18,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
113,
114,
115,
265,
266,
162,
74
]
},
{
"tb": 24000,
"tbk": 10,
"tl": 336454628,
"mb": 24000,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
267,
268,
269,
270,
26,
27,
28,
271,
272,
273
]
},
{
"tb": 480,
"tbk": 10,
"tl": 72687,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
274,
54,
122,
275,
276
]
},
{
"tb": 13568,
"tbk": 32,
"tl": 157871,
"mb": 13568,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
44,
83,
84,
85,
277,
278,
279,
280
]
},
{
"tb": 80,
"tbk": 1,
"tl": 3727,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
281,
282,
283,
284,
285,
286,
287,
288,
289,
290
]
},
{
"tb": 32,
"tbk": 1,
"tl": 15432,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
44,
83,
84,
85,
277,
291,
292,
69
]
},
{
"tb": 51520,
"tbk": 42,
"tl": 41714,
"mb": 51200,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
293
]
},
{
"tb": 240,
"tbk": 1,
"tl": 34235708,
"mb": 240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
294,
295,
296,
297,
298,
122,
275,
276
]
},
{
"tb": 32000,
"tbk": 20,
"tl": 8486474,
"mb": 1600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
177,
178,
179,
180,
181,
182,
299
]
},
{
"tb": 3840,
"tbk": 10,
"tl": 15149489,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
300,
301,
302,
303,
304,
305,
306,
307,
308
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 328663,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
22,
23,
24,
52,
309,
122
]
},
{
"tb": 256,
"tbk": 1,
"tl": 12,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
22,
23,
24,
310,
311,
122
]
},
{
"tb": 80,
"tbk": 1,
"tl": 300464192,
"mb": 80,
"mbk": 1,
"gb": 80,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
312,
313,
314,
315,
316,
317,
318,
319,
320
]
},
{
"tb": 160,
"tbk": 10,
"tl": 1802089,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
30,
31,
32,
33,
321,
322,
122
]
},
{
"tb": 1920,
"tbk": 8,
"tl": 15618,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
93,
94,
95,
323,
324
]
},
{
"tb": 15232,
"tbk": 4,
"tl": 62831,
"mb": 15232,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
248,
249,
250,
251,
252,
253,
254,
255,
325,
257
]
},
{
"tb": 160,
"tbk": 10,
"tl": 979,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
22,
23,
24,
326,
327,
328
]
},
{
"tb": 320,
"tbk": 10,
"tl": 3623048092,
"mb": 320,
"mbk": 10,
"gb": 320,
"gbk": 10,
"eb": 0,
"ebk": 0,
"fs": [
55,
329,
330,
331,
332,
333,
334
]
},
{
"tb": 108928,
"tbk": 417,
"tl": 251387,
"mb": 16384,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
44,
335,
336,
337,
338,
339,
340,
341,
342
]
},
{
"tb": 240,
"tbk": 1,
"tl": 317,
"mb": 240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
267,
343,
344,
345,
346,
347,
348,
349,
350
]
},
{
"tb": 2764800,
"tbk": 288,
"tl": 142094,
"mb": 526400,
"mbk": 33,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
351,
352,
353,
354,
355,
356,
357,
358
]
},
{
"tb": 512000,
"tbk": 1,
"tl": 56550,
"mb": 512000,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
248,
359,
360,
361,
362,
176,
43,
363
]
},
{
"tb": 2097152,
"tbk": 2,
"tl": 28674979,
"mb": 2097152,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
70,
71,
72,
364,
365,
366
]
},
{
"tb": 5242880,
"tbk": 10,
"tl": 27252926,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
113,
114,
115,
116,
245,
246,
367
]
},
{
"tb": 512000,
"tbk": 1,
"tl": 15858,
"mb": 512000,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
248,
249,
250,
251,
252,
253,
254,
255,
368,
369
]
},
{
"tb": 480,
"tbk": 1,
"tl": 362344896,
"mb": 480,
"mbk": 1,
"gb": 480,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
370,
371,
372,
373,
374,
375,
376,
122
]
},
{
"tb": 80,
"tbk": 1,
"tl": 3746,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
281,
282,
377,
378,
379,
380,
381,
382,
383,
384
]
},
{
"tb": 65176,
"tbk": 38,
"tl": 252262,
"mb": 32640,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
385,
386,
387,
388,
389
]
},
{
"tb": 240,
"tbk": 10,
"tl": 15150607,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
390,
391,
392,
393,
394,
122
]
},
{
"tb": 512,
"tbk": 1,
"tl": 10,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
395,
396,
397,
398,
399,
400,
401,
402
]
},
{
"tb": 160,
"tbk": 10,
"tl": 18,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
157,
158,
403,
322,
122,
275
]
},
{
"tb": 160,
"tbk": 10,
"tl": 1035,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
157,
158,
159,
404,
405,
394
]
},
{
"tb": 6712,
"tbk": 42,
"tl": 130,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
281,
282,
406,
407,
408,
409,
410,
411,
412,
413,
414
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 54473,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
385,
386,
387,
388,
415
]
},
{
"tb": 240,
"tbk": 1,
"tl": 328049578,
"mb": 240,
"mbk": 1,
"gb": 240,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
416,
417,
418,
419,
420,
421,
422,
423,
424
]
},
{
"tb": 738197504,
"tbk": 11,
"tl": 34301099,
"mb": 67108864,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
177,
178,
179,
180,
181,
182,
425
]
},
{
"tb": 672,
"tbk": 3,
"tl": 651195,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
426,
427,
428,
429,
54
]
},
{
"tb": 40320,
"tbk": 60,
"tl": 99811,
"mb": 20480,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
93,
94,
95,
430,
431
]
},
{
"tb": 15232,
"tbk": 4,
"tl": 1610,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
177,
178,
179,
180,
181,
182,
432
]
},
{
"tb": 41943360,
"tbk": 30,
"tl": 742747,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
113,
114,
115,
116,
117,
433,
434
]
},
{
"tb": 720,
"tbk": 1,
"tl": 34579726,
"mb": 720,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
435,
436,
437,
438,
439,
440,
441,
442,
443
]
},
{
"tb": 240,
"tbk": 1,
"tl": 34235692,
"mb": 240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
416,
444,
445,
446,
447,
122,
275,
276
]
},
{
"tb": 48,
"tbk": 1,
"tl": 14339157,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
267,
448,
449,
450,
451,
452,
453,
454,
455
]
},
{
"tb": 6144,
"tbk": 32,
"tl": 12890,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
456,
457,
458,
459,
460,
461
]
},
{
"tb": 1048576000,
"tbk": 1000,
"tl": 363003267929,
"mb": 1048576000,
"mbk": 1000,
"gb": 1048576000,
"gbk": 1000,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
113,
114,
115,
116,
462,
463,
464
]
},
{
"tb": 512000,
"tbk": 10,
"tl": 96795,
"mb": 512000,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
113,
114,
115,
186,
465,
466,
467
]
},
{
"tb": 768,
"tbk": 1,
"tl": 4364,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
468,
469,
470,
471,
472,
473,
467,
474
]
},
{
"tb": 1904,
"tbk": 4,
"tl": 2967,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
475,
476,
477,
478,
479,
480,
481,
482
]
},
{
"tb": 240,
"tbk": 1,
"tl": 47,
"mb": 240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
267,
268,
269,
270,
26,
27,
28,
293,
483,
376
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 7152,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
484,
485,
486,
487,
488
]
},
{
"tb": 960,
"tbk": 1,
"tl": 362345049,
"mb": 960,
"mbk": 1,
"gb": 960,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
489,
490,
491,
492,
493,
494,
495,
496,
497
]
},
{
"tb": 320,
"tbk": 1,
"tl": 146,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
498,
499,
500,
501,
502,
503,
504,
505,
506
]
},
{
"tb": 10485760,
"tbk": 10,
"tl": 35496537,
"mb": 10485760,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
177,
178,
179,
180,
181,
182,
507
]
},
{
"tb": 320,
"tbk": 10,
"tl": 139,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
150,
508,
509,
510,
511,
512,
513,
514,
515,
516,
517
]
},
{
"tb": 37748736000,
"tbk": 4718592,
"tl": 23070827,
"mb": 14400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
22,
23,
24,
52,
518,
519
]
},
{
"tb": 224,
"tbk": 3,
"tl": 15611656,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
150,
151,
152,
153,
154,
520,
122
]
},
{
"tb": 320,
"tbk": 1,
"tl": 172,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
498,
521,
522,
523,
524,
525,
526,
527,
528
]
},
{
"tb": 5760,
"tbk": 20,
"tl": 420,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
529,
530,
531,
532,
533,
534,
535,
536,
537
]
},
{
"tb": 20971520,
"tbk": 10,
"tl": 8463418,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
113,
114,
115,
116,
538,
539,
540
]
},
{
"tb": 256,
"tbk": 1,
"tl": 704,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
281,
282,
541,
542,
543,
544,
545,
546,
547
]
},
{
"tb": 160,
"tbk": 1,
"tl": 362304598,
"mb": 160,
"mbk": 1,
"gb": 160,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
548,
549,
550,
551,
552,
553,
554,
555,
556
]
},
{
"tb": 24,
"tbk": 1,
"tl": 2181618,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
267,
268,
269,
270,
26,
27,
28,
29,
149,
122
]
},
{
"tb": 45298483200,
"tbk": 4718592,
"tl": 60189233,
"mb": 30400,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
351,
352,
353,
354,
355,
557,
519,
558
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3112,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
468,
469,
470,
471,
559,
156,
43,
363
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
248,
249,
250,
251,
252,
253,
254,
560,
561,
562
]
},
{
"tb": 72,
"tbk": 1,
"tl": 60912,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
563,
363,
122,
275,
276
]
},
{
"tb": 256,
"tbk": 1,
"tl": 13065,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
113,
114,
115,
186,
564,
565,
69
]
},
{
"tb": 10485760,
"tbk": 10,
"tl": 715130,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
113,
114,
115,
116,
245,
246,
566
]
},
{
"tb": 3808,
"tbk": 4,
"tl": 42600,
"mb": 3808,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
44,
45,
46,
47,
48,
567,
124,
125
]
},
{
"tb": 1120,
"tbk": 3,
"tl": 11766,
"mb": 640,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
568,
569,
570,
571,
69
]
},
{
"tb": 20971520,
"tbk": 10,
"tl": 164449771,
"mb": 20971520,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
177,
178,
179,
180,
181,
182,
572
]
},
{
"tb": 101688,
"tbk": 223,
"tl": 64941,
"mb": 26448,
"mbk": 58,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
573,
574,
575,
576,
577,
578
]
},
{
"tb": 256,
"tbk": 1,
"tl": 642,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
281,
282,
541,
542,
543,
544,
545,
579,
580
]
},
{
"tb": 160,
"tbk": 1,
"tl": 7226104,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
581,
582,
583,
584,
585,
586,
587,
588,
589
]
},
{
"tb": 80,
"tbk": 1,
"tl": 9831,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
113,
114,
115,
590,
591,
162,
74
]
},
{
"tb": 512,
"tbk": 1,
"tl": 8204,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
592,
593,
594,
595,
596,
597,
598,
599
]
},
{
"tb": 64,
"tbk": 1,
"tl": 6716980,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
93,
94,
95,
600,
601
]
},
{
"tb": 24,
"tbk": 1,
"tl": 15818,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
602,
603,
369,
604
]
},
{
"tb": 240,
"tbk": 1,
"tl": 34235697,
"mb": 240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
267,
605,
606,
607,
608,
122,
275,
276
]
},
{
"tb": 160,
"tbk": 10,
"tl": 15150471,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
70,
71,
72,
609,
392,
393
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2181628,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
22,
23,
24,
610,
611,
145,
146,
147
]
},
{
"tb": 640,
"tbk": 10,
"tl": 1590,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
93,
94,
95,
612,
185
]
},
{
"tb": 37748160,
"tbk": 144,
"tl": 173907,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
93,
94,
95,
613,
122
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2137,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
468,
469,
470,
471,
559,
50,
51,
122
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1398,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
614,
615,
616,
617,
618,
619,
620,
621,
622,
623
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 34672831,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
44,
83,
84,
85,
86,
624,
625,
626
]
},
{
"tb": 80,
"tbk": 1,
"tl": 7153,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
627,
628,
629,
630,
631,
632,
633,
634,
635
]
},
{
"tb": 64,
"tbk": 1,
"tl": 9836,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
93,
94,
95,
600,
431
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 8875,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
113,
114,
115,
186,
465,
636,
280
]
},
{
"tb": 3632,
"tbk": 18,
"tl": 85,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
281,
282,
406,
407,
408,
409,
410,
411,
412,
50,
51
]
},
{
"tb": 672,
"tbk": 3,
"tl": 426,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
426,
427,
428,
637,
638
]
},
{
"tb": 80,
"tbk": 1,
"tl": 3720,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
281,
282,
639,
640,
641,
642,
643,
644,
645,
646
]
},
{
"tb": 5120,
"tbk": 10,
"tl": 20561,
"mb": 5120,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
113,
114,
115,
647,
638,
162,
74
]
},
{
"tb": 460800,
"tbk": 288,
"tl": 1415,
"mb": 1600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
22,
23,
24,
52,
648,
357
]
},
{
"tb": 960,
"tbk": 10,
"tl": 271,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
649,
159,
404,
405,
394,
122
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 13308868,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
44,
83,
84,
85,
86,
624,
625,
650
]
},
{
"tb": 512,
"tbk": 1,
"tl": 59,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
22,
23,
24,
651,
638,
162
]
},
{
"tb": 480,
"tbk": 20,
"tl": 187233515,
"mb": 480,
"mbk": 20,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
652,
653,
654,
655,
656,
657,
658,
659,
660,
661
]
},
{
"tb": 32032,
"tbk": 21,
"tl": 198427584,
"mb": 32032,
"mbk": 21,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
662,
663,
664,
665,
666,
667,
668,
669
]
},
{
"tb": 288,
"tbk": 1,
"tl": 34605,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
670,
671,
672,
673,
674
]
},
{
"tb": 1539017,
"tbk": 9,
"tl": 16208,
"mb": 1025040,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
385,
386,
387,
675,
676
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1391,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
70,
71,
72,
677,
622,
623
]
},
{
"tb": 256,
"tbk": 1,
"tl": 11,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
614,
615,
616,
617,
618,
619,
620,
678,
311,
122
]
},
{
"tb": 872415232,
"tbk": 1,
"tl": 67643448,
"mb": 872415232,
"mbk": 1,
"gb": 872415232,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
22,
23,
24,
679,
680,
681
]
},
{
"tb": 480,
"tbk": 4,
"tl": 13742,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
150,
151,
152,
153,
154,
258,
682
]
},
{
"tb": 672,
"tbk": 3,
"tl": 34,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
426,
427,
428,
683,
69
]
},
{
"tb": 1048576000,
"tbk": 1000,
"tl": 33630286000,
"mb": 1048576000,
"mbk": 1000,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
271
]
},
{
"tb": 20971520,
"tbk": 10,
"tl": 3871744,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
684,
685,
686,
687,
688,
689,
690,
691
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
248,
249,
250,
251,
252,
253,
254,
692,
693,
69
]
},
{
"tb": 64,
"tbk": 1,
"tl": 3,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
694,
695,
696,
697,
698,
699,
700,
701,
702
]
},
{
"tb": 32010,
"tbk": 10,
"tl": 178,
"mb": 3201,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
150,
508,
509,
510,
511,
512,
513,
514,
703,
516,
517
]
},
{
"tb": 3584,
"tbk": 3,
"tl": 3403404,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
704,
705,
706,
707,
122
]
},
{
"tb": 2400,
"tbk": 20,
"tl": 93616728,
"mb": 1920,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
708,
709,
122,
275,
276
]
},
{
"tb": 1344,
"tbk": 3,
"tl": 11622,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
710,
711,
712,
713,
162
]
},
{
"tb": 2688,
"tbk": 3,
"tl": 15891,
"mb": 1536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
714,
715,
716,
717,
604
]
},
{
"tb": 160,
"tbk": 10,
"tl": 159080,
"mb": 160,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
248,
249,
250,
251,
252,
253,
254,
255,
718,
719
]
},
{
"tb": 224,
"tbk": 1,
"tl": 15865,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
248,
249,
250,
251,
252,
253,
254,
255,
720,
721
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1722,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
426,
427,
428,
722,
51
]
},
{
"tb": 224,
"tbk": 3,
"tl": 15611654,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
150,
151,
152,
153,
154,
723,
122
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
248,
249,
250,
251,
252,
253,
254,
560,
724,
725
]
},
{
"tb": 13601,
"tbk": 1,
"tl": 15821,
"mb": 13601,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
248,
249,
250,
251,
252,
253,
254,
255,
726,
369
]
},
{
"tb": 13601,
"tbk": 1,
"tl": 15809,
"mb": 13601,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
248,
249,
250,
251,
252,
253,
254,
255,
727,
728
]
},
{
"tb": 512000,
"tbk": 1,
"tl": 6312,
"mb": 512000,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
113,
114,
115,
186,
465,
729,
467
]
},
{
"tb": 320,
"tbk": 10,
"tl": 5,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
730,
731,
74,
732
]
},
{
"tb": 16000,
"tbk": 10,
"tl": 68489,
"mb": 16000,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
30,
31,
32,
33,
733,
734,
735
]
},
{
"tb": 512,
"tbk": 1,
"tl": 32,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
113,
114,
115,
736,
266,
162,
74
]
},
{
"tb": 240,
"tbk": 1,
"tl": 12444600,
"mb": 240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
737,
738,
739,
740,
741,
742,
743,
744,
745
]
},
{
"tb": 75497472,
"tbk": 524288,
"tl": 62223868,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
746,
747,
748,
749,
750,
751,
752,
753,
754
]
},
{
"tb": 240,
"tbk": 10,
"tl": 823,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
390,
391,
392,
755,
161,
162
]
},
{
"tb": 5120,
"tbk": 10,
"tl": 20490,
"mb": 5120,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
113,
114,
115,
756,
638,
162,
74
]
},
{
"tb": 936,
"tbk": 4,
"tl": 1405,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
281,
282,
541,
542,
543,
544,
545,
757,
758
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
759,
760,
562,
74,
732
]
},
{
"tb": 6072,
"tbk": 11,
"tl": 4577,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
99,
100,
101,
761,
762,
763
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 185738,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
44,
83,
84,
85,
86,
624,
625,
764
]
},
{
"tb": 320,
"tbk": 10,
"tl": 15150543,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
765,
766,
767,
768,
769,
770,
771,
772,
392,
393
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 53396,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
248,
359,
360,
361,
773,
774,
51,
122
]
},
{
"tb": 15232,
"tbk": 4,
"tl": 525,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
177,
178,
179,
180,
181,
182,
775
]
},
{
"tb": 7680,
"tbk": 10,
"tl": 64740,
"mb": 7680,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
267,
776,
777,
778,
779,
780,
781,
782,
783
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 3106,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
44,
45,
46,
47,
48,
49,
156,
43
]
},
{
"tb": 192,
"tbk": 1,
"tl": 15727,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
784,
785,
786,
787,
788,
789,
790,
791,
604
]
},
{
"tb": 1280,
"tbk": 20,
"tl": 30296436,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
792,
793,
794,
795,
796
]
},
{
"tb": 320,
"tbk": 10,
"tl": 155336,
"mb": 320,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
329,
797,
798,
799,
800,
801
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 131330,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
113,
114,
115,
116,
538,
802,
803
]
},
{
"tb": 3200,
"tbk": 20,
"tl": 30298615,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
804,
805,
806,
807,
808
]
},
{
"tb": 160,
"tbk": 10,
"tl": 1066,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
157,
809,
159,
404,
405,
394
]
},
{
"tb": 768,
"tbk": 1,
"tl": 5008,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
468,
469,
470,
471,
472,
279,
280,
810
]
},
{
"tb": 160,
"tbk": 1,
"tl": 299,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
581,
811,
812,
813,
814,
815,
816,
817,
122,
275
]
},
{
"tb": 2400,
"tbk": 12,
"tl": 196,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
818,
819,
820,
821,
822,
823
]
},
{
"tb": 2808,
"tbk": 4,
"tl": 42059,
"mb": 2808,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
468,
469,
470,
471,
472,
824,
124,
125
]
},
{
"tb": 672,
"tbk": 3,
"tl": 15612488,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
426,
427,
428,
825,
122
]
},
{
"tb": 320,
"tbk": 10,
"tl": 1298,
"mb": 320,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
113,
114,
115,
186,
826,
243,
69
]
},
{
"tb": 23296,
"tbk": 117,
"tl": 1212404,
"mb": 23296,
"mbk": 117,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
44,
83,
84,
85,
277,
278,
824,
124
]
},
{
"tb": 256,
"tbk": 1,
"tl": 15689,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
248,
249,
250,
251,
252,
253,
254,
255,
827,
791
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 362302655,
"mb": 2097152,
"mbk": 1,
"gb": 2097152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
113,
114,
115,
116,
245,
828,
829
]
},
{
"tb": 160,
"tbk": 10,
"tl": 684,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
177,
178,
179,
180,
181,
182,
830
]
},
{
"tb": 3144,
"tbk": 11,
"tl": 234258133,
"mb": 312,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
831,
832,
833,
834,
835,
836,
837,
838,
839
]
},
{
"tb": 15232,
"tbk": 4,
"tl": 2984,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
840,
841,
842,
843,
844,
414,
311,
122
]
},
{
"tb": 512000,
"tbk": 10,
"tl": 558473,
"mb": 512000,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
248,
359,
360,
361,
845,
176,
43,
363
]
},
{
"tb": 84592,
"tbk": 1641,
"tl": 73108351,
"mb": 17248,
"mbk": 17,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
385,
846,
847,
848,
849,
850,
851
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 725256,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
113,
114,
115,
116,
852,
853,
854
]
},
{
"tb": 838860800,
"tbk": 524288,
"tl": 6454083,
"mb": 1600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
70,
71,
72,
855,
519,
558
]
},
{
"tb": 480,
"tbk": 1,
"tl": 6908,
"mb": 480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
856,
857,
858,
859,
860,
861,
862,
863,
864
]
},
{
"tb": 720,
"tbk": 30,
"tl": 581,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
865,
866,
867,
868,
869,
870,
871,
872,
873
]
},
{
"tb": 41943360,
"tbk": 30,
"tl": 743682,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
113,
114,
115,
116,
874,
434,
875
]
},
{
"tb": 24000,
"tbk": 10,
"tl": 3156122781,
"mb": 24000,
"mbk": 10,
"gb": 24000,
"gbk": 10,
"eb": 0,
"ebk": 0,
"fs": [
8,
267,
876,
877,
878,
879,
880,
881,
882,
883
]
},
{
"tb": 2912,
"tbk": 28,
"tl": 399,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
884,
885,
886
]
},
{
"tb": 80,
"tbk": 1,
"tl": 20,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
281,
282,
887,
888,
889,
890,
891,
892,
893,
894
]
},
{
"tb": 2160,
"tbk": 1,
"tl": 15576,
"mb": 2160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
205,
895,
896,
897,
898,
899,
900,
901,
902
]
},
{
"tb": 40320,
"tbk": 60,
"tl": 67171235,
"mb": 20480,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
93,
94,
95,
430,
601
]
},
{
"tb": 2808,
"tbk": 4,
"tl": 3895,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
468,
469,
470,
471,
559,
413,
414,
311
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
759,
760,
725,
376,
122,
275
]
},
{
"tb": 768,
"tbk": 1,
"tl": 5802,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
267,
268,
269,
270,
26,
27,
28,
293,
903,
43
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
248,
249,
250,
251,
252,
253,
254,
560,
724,
562
]
},
{
"tb": 160,
"tbk": 10,
"tl": 737,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
70,
71,
72,
609,
392,
755
]
},
{
"tb": 3632,
"tbk": 18,
"tl": 567,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
281,
282,
406,
407,
408,
409,
410,
411,
904,
545,
546
]
},
{
"tb": 512,
"tbk": 1,
"tl": 28,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
113,
114,
115,
116,
117,
905,
638
]
},
{
"tb": 6712,
"tbk": 42,
"tl": 1000,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
281,
282,
406,
407,
408,
409,
410,
411,
904,
545,
757
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 44,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
113,
114,
115,
116,
245,
246,
906
]
},
{
"tb": 32010,
"tbk": 10,
"tl": 157664,
"mb": 32010,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
248,
249,
250,
251,
252,
253,
254,
255,
907,
908
]
},
{
"tb": 960,
"tbk": 10,
"tl": 140,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
649,
159,
160,
161,
162,
74
]
},
{
"tb": 320,
"tbk": 10,
"tl": 2720,
"mb": 320,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
730,
909,
910,
911,
912,
913
]
},
{
"tb": 160,
"tbk": 10,
"tl": 54,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
157,
809,
403,
322,
122,
275
]
},
{
"tb": 672,
"tbk": 3,
"tl": 6717014,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
426,
427,
428,
914,
601
]
},
{
"tb": 3808,
"tbk": 4,
"tl": 3879,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
44,
45,
46,
47,
48,
49,
413,
414
]
},
{
"tb": 72,
"tbk": 1,
"tl": 15864,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
784,
915,
916,
917,
918,
919,
604
]
},
{
"tb": 80,
"tbk": 1,
"tl": 3737,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
281,
282,
920,
921,
922,
923,
924,
925,
926,
927
]
},
{
"tb": 2304,
"tbk": 12,
"tl": 4967,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
456,
457,
458,
928,
929,
930
]
},
{
"tb": 2896,
"tbk": 12,
"tl": 1344,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
614,
931,
932,
933,
934,
935,
936,
937,
938
]
},
{
"tb": 672,
"tbk": 3,
"tl": 11705,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
939,
940,
941,
942,
162
]
},
{
"tb": 640,
"tbk": 10,
"tl": 116310,
"mb": 640,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
93,
94,
95,
612,
244
]
},
{
"tb": 672,
"tbk": 3,
"tl": 430,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
426,
427,
428,
943,
638
]
},
{
"tb": 512,
"tbk": 1,
"tl": 17,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
113,
114,
115,
116,
117,
944,
266
]
},
{
"tb": 160,
"tbk": 10,
"tl": 93616878,
"mb": 160,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
22,
23,
24,
610,
945,
709
]
},
{
"tb": 2880,
"tbk": 24,
"tl": 2543,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
150,
151,
152,
153,
154,
946,
545
]
},
{
"tb": 480,
"tbk": 20,
"tl": 30298701,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
652,
653,
654,
655,
656,
657,
658,
659,
947,
808
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 202531,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
44,
83,
84,
85,
86,
948,
949,
674
]
},
{
"tb": 480,
"tbk": 4,
"tl": 222,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
150,
151,
152,
153,
154,
155,
50
]
},
{
"tb": 7549747200,
"tbk": 4718592,
"tl": 42990226,
"mb": 1600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
70,
71,
72,
950,
519,
558
]
},
{
"tb": 9584640,
"tbk": 4,
"tl": 205969,
"mb": 9584640,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
113,
114,
115,
116,
951,
952,
674
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 102096939,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
44,
83,
84,
85,
86,
953,
558,
954
]
},
{
"tb": 8,
"tbk": 1,
"tl": 2181002,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
281,
282,
406,
407,
408,
409,
410,
411,
955,
149,
122
]
},
{
"tb": 256,
"tbk": 4,
"tl": 128158,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
113,
114,
115,
116,
245,
246,
956
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 4216,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
484,
485,
486,
487,
957
]
},
{
"tb": 3632,
"tbk": 18,
"tl": 513,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
281,
282,
406,
407,
408,
409,
410,
411,
904,
545,
579
]
},
{
"tb": 32000,
"tbk": 10,
"tl": 113444,
"mb": 32000,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
22,
23,
24,
958,
959,
960
]
},
{
"tb": 1048576000,
"tbk": 1000,
"tl": 314261533699,
"mb": 1048576000,
"mbk": 1000,
"gb": 1048576000,
"gbk": 1000,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
22,
23,
24,
961,
962,
963
]
},
{
"tb": 896,
"tbk": 3,
"tl": 9288,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
964,
965,
966,
967,
467
]
},
{
"tb": 320,
"tbk": 10,
"tl": 93616662,
"mb": 320,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
150,
151,
152,
153,
154,
968,
969
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 55298,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
70,
71,
72,
970,
51,
122
]
},
{
"tb": 160,
"tbk": 10,
"tl": 527,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
157,
809,
159,
160,
161,
162
]
},
{
"tb": 8053063680,
"tbk": 120,
"tl": 1615938923,
"mb": 805306368,
"mbk": 12,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
840,
841,
842,
843,
971,
972,
973,
974
]
},
{
"tb": 80,
"tbk": 1,
"tl": 2094,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
281,
282,
975,
976,
977,
978,
979,
980,
981,
982
]
},
{
"tb": 160,
"tbk": 10,
"tl": 3623450162,
"mb": 160,
"mbk": 10,
"gb": 160,
"gbk": 10,
"eb": 0,
"ebk": 0,
"fs": [
37,
248,
249,
250,
251,
252,
253,
254,
692,
983,
984
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 52336,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
385,
386,
387,
388,
985
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 15814,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
248,
249,
250,
251,
252,
253,
254,
255,
986,
728
]
},
{
"tb": 240,
"tbk": 1,
"tl": 34235702,
"mb": 240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
987,
988,
989,
990,
991,
122,
275,
276
]
},
{
"tb": 83886080,
"tbk": 10,
"tl": 232820119,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
113,
114,
115,
116,
992,
993,
994
]
},
{
"tb": 320,
"tbk": 10,
"tl": 780,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
765,
766,
767,
768,
769,
770,
771,
772,
392,
755
]
},
{
"tb": 96,
"tbk": 1,
"tl": 12783,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
426,
427,
428,
995,
125
]
},
{
"tb": 960,
"tbk": 10,
"tl": 119,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
649,
403,
322,
122,
275,
276
]
},
{
"tb": 256,
"tbk": 2,
"tl": 462,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
996,
997,
998,
999,
413
]
},
{
"tb": 10485760,
"tbk": 10,
"tl": 6437403,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
177,
178,
179,
180,
181,
182,
1000
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4356,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
113,
114,
115,
1001,
1002,
162,
74
]
},
{
"tb": 960,
"tbk": 20,
"tl": 186517650,
"mb": 960,
"mbk": 20,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
267,
1003,
1004,
1005,
1006,
1007,
1008,
1009,
1010
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4344,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
1011,
1012,
1013,
1014,
1015,
1016,
1017,
1018
]
},
{
"tb": 56,
"tbk": 1,
"tl": 4214,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
1019,
474,
69,
74,
732
]
},
{
"tb": 224,
"tbk": 1,
"tl": 12787,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
1020,
1021,
1022,
1023,
125
]
},
{
"tb": 80,
"tbk": 1,
"tl": 3713,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
281,
282,
1024,
1025,
1026,
1027,
1028,
1029,
1030,
1031
]
},
{
"tb": 320,
"tbk": 10,
"tl": 157626,
"mb": 320,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
248,
249,
250,
251,
252,
253,
254,
255,
1032,
908
]
},
{
"tb": 16000,
"tbk": 10,
"tl": 68449,
"mb": 16000,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
30,
31,
32,
33,
1033,
734,
735
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 513,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
150,
151,
152,
153,
154,
155,
413
]
},
{
"tb": 6291456,
"tbk": 3,
"tl": 6546373,
"mb": 6291456,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
1034
]
},
{
"tb": 800,
"tbk": 1,
"tl": 363578038,
"mb": 800,
"mbk": 1,
"gb": 800,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
1035,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043
]
},
{
"tb": 24000,
"tbk": 10,
"tl": 3630054339,
"mb": 24000,
"mbk": 10,
"gb": 24000,
"gbk": 10,
"eb": 0,
"ebk": 0,
"fs": [
8,
267,
1044,
1045,
1046,
1047,
1048,
1049,
1050,
1051
]
},
{
"tb": 72,
"tbk": 1,
"tl": 2182268,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
267,
268,
269,
270,
26,
27,
28,
1034,
149,
122
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 148954,
"mb": 1179648,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
113,
114,
115,
116,
1052,
1053,
674
]
},
{
"tb": 83886080,
"tbk": 40,
"tl": 370973195,
"mb": 83886080,
"mbk": 40,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
113,
114,
115,
116,
1054,
1055,
1056
]
},
{
"tb": 3632,
"tbk": 18,
"tl": 80,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
281,
282,
406,
407,
408,
409,
410,
411,
412,
156,
43
]
},
{
"tb": 81280,
"tbk": 70,
"tl": 181,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
93,
94,
95,
1057,
1058
]
},
{
"tb": 160,
"tbk": 1,
"tl": 15415,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
44,
83,
84,
85,
277,
1059,
292,
69
]
},
{
"tb": 72,
"tbk": 1,
"tl": 8,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
1060,
1061,
1062,
1063,
1064,
1065,
1066,
1067,
1068
]
},
{
"tb": 1344,
"tbk": 3,
"tl": 15736,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
1069,
1070,
1071,
1072,
604
]
},
{
"tb": 80,
"tbk": 10,
"tl": 3907143,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
281,
282,
541,
542,
543,
1073,
1074,
709,
122
]
},
{
"tb": 320,
"tbk": 10,
"tl": 943,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
22,
23,
24,
1075,
327,
328
]
},
{
"tb": 576,
"tbk": 4,
"tl": 1591,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
30,
31,
32,
33,
1076,
119,
622
]
},
{
"tb": 224,
"tbk": 3,
"tl": 2683,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
150,
151,
152,
153,
154,
1077,
176
]
},
{
"tb": 192,
"tbk": 1,
"tl": 66419,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
784,
785,
786,
787,
788,
1078,
311,
122,
275
]
},
{
"tb": 72,
"tbk": 3,
"tl": 6544876,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
652,
653,
654,
655,
656,
657,
658,
659,
611,
145,
146,
147
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 1691024,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
113,
114,
115,
116,
992,
993,
1079
]
},
{
"tb": 80,
"tbk": 1,
"tl": 327717290,
"mb": 80,
"mbk": 1,
"gb": 80,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
312,
1080,
1081,
1082,
1083,
1084,
1085,
1086,
1087
]
},
{
"tb": 3840,
"tbk": 20,
"tl": 646,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
1088,
1089,
1090,
1091,
1092,
1093,
1094,
1095,
1096
]
},
{
"tb": 240,
"tbk": 10,
"tl": 93616912,
"mb": 240,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
652,
653,
654,
655,
656,
657,
658,
659,
945,
709
]
},
{
"tb": 160,
"tbk": 10,
"tl": 6684194,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
30,
31,
32,
33,
1097,
35,
36
]
},
{
"tb": 320,
"tbk": 10,
"tl": 63092,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
55,
1098,
54,
122,
275,
276
]
},
{
"tb": 72,
"tbk": 1,
"tl": 8284,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
1060,
1061,
1062,
1063,
1064,
1065,
1066,
1067,
1099
]
},
{
"tb": 15232,
"tbk": 4,
"tl": 2375,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
840,
1100,
1101,
1102,
1103,
1104,
1105,
1106,
1107
]
},
{
"tb": 16000,
"tbk": 10,
"tl": 1228470,
"mb": 1600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
30,
31,
32,
33,
1108,
1109,
1110
]
},
{
"tb": 320,
"tbk": 20,
"tl": 15151603,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
1111,
1112,
1113,
1114,
1115,
1116,
1117,
1118
]
},
{
"tb": 121856,
"tbk": 4,
"tl": 1626,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
177,
178,
179,
180,
181,
182,
1119
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 362304572,
"mb": 524288,
"mbk": 1,
"gb": 524288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
113,
114,
115,
116,
245,
1120,
1121
]
},
{
"tb": 952,
"tbk": 4,
"tl": 4213,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
614,
615,
616,
617,
618,
619,
620,
1122,
1123,
622
]
},
{
"tb": 256,
"tbk": 1,
"tl": 13798,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
70,
71,
72,
1124,
1125,
1126
]
},
{
"tb": 3456,
"tbk": 12,
"tl": 4861,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1127,
1128,
1129,
1130,
1131,
1132
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 322876,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
113,
114,
115,
116,
245,
246,
1133
]
},
{
"tb": 19680,
"tbk": 20,
"tl": 517,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
1134,
1135,
1136,
1137,
1138,
1139
]
},
{
"tb": 24,
"tbk": 2,
"tl": 2,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
248,
249,
250,
251,
252,
253,
254,
560,
561,
725
]
},
{
"tb": 13568,
"tbk": 32,
"tl": 137204,
"mb": 13568,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
44,
83,
84,
85,
277,
278,
473,
467
]
},
{
"tb": 8724152320,
"tbk": 10,
"tl": 2072306870,
"mb": 8724152320,
"mbk": 10,
"gb": 8724152320,
"gbk": 10,
"eb": 0,
"ebk": 0,
"fs": [
8,
840,
841,
842,
843,
971,
1140,
1141,
1142
]
},
{
"tb": 672,
"tbk": 3,
"tl": 9870,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
426,
427,
428,
914,
431
]
},
{
"tb": 86950,
"tbk": 100,
"tl": 72788959,
"mb": 43520,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
37,
38,
385,
386,
387,
675,
1143
]
},
{
"tb": 2736,
"tbk": 6,
"tl": 2741,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
573,
574,
575,
1144,
1145,
1146
]
}
],
"ftbl": [
"[root]",
"0x61d11e3e9739: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x61d11e3f5d2b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x61d11e3f5751: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x61d11e3f1adb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x61d11e3eb6cd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x61d11e3e684b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x61d11e3e4f13: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x61d11ded44a9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x61d11df972bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11e14fffe: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e14fffe: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e14fffe: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e14fffe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x61d11e1e143b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1d8b76: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11e27a10b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11dea701c: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x61d11df9d0ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11de7a41c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11de7a41c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11de7a41c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x61d11e1c5939: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x61d11e1c5939: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x61d11e1c5939: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x61d11e154bc3: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x61d11e1c61f9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x61d11e1c61f9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x61d11e1c61f9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x61d11e04ed29: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x61d11de7a9f5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11de7a9f5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11de7a9f5: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x61d11e1c4bf4: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x61d11e271f6c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:148:31)",
"0x61d11e2759e0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:122:17)",
"0x61d11df55436: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x61d11e43bb79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x61d11e43a319: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x61d11dfc7712: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61d11dfd9149: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61d11e1b0122: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61d11e0afc91: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x61d11e0b9cb4: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x61d11df97a9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11e0a9f58: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e0a9f58: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e0a9f58: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x61d11e1c4c17: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x61d11e1e9698: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x61d11e2c6495: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x61d11e078bc5: winter_prover::Prover::generate_proof (prover/src/lib.rs:598:34)",
"0x61d11e153097: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x61d11e21bea2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x61d11e077868: winter_prover::Prover::generate_proof (prover/src/lib.rs:514:9)",
"0x61d11ded3937: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x61d11e23e41a: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x61d11e1065ae: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x61d11dec489d: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x61d11e105cce: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x61d11e1086c6: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x61d11e0fb9ea: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:362:9)",
"0x61d11e21602b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x61d11e215681: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x61d11e02912b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x61d11dffe8bd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x61d11dec7f89: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x61d11e0a3a00: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x61d11deaf27d: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x61d11dff9907: winter_verifier::verify (verifier/src/lib.rs:108:19)",
"0x61d11de7a93c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x61d11de7a93c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x61d11de7a93c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x61d11deaecae: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x61d11de58d99: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:118:9)",
"0x61d11e122187: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e122187: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e122187: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e122187: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1e329e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1d7e27: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de257ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11e1f095b: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x61d11e155916: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e155916: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e155916: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11dee1fbb: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x61d11e1f87a5: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x61d11e0938e7: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:706:26)",
"0x61d11e077110: winter_prover::Prover::generate_proof (prover/src/lib.rs:472:37)",
"0x61d11e0b2078: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x61d11de4b61a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x61d11df03e45: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x61d11dfcc122: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61d11dfd96b9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61d11e1add91: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61d11e0bfa48: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x61d11e0c9dda: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x61d11e23e299: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x61d11e215ccb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x61d11e215471: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x61d11e029f0b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x61d11e022451: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x61d11e02877d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x61d11e01c10e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x61d11e12c107: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e12c107: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e12c107: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e12c107: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1e14fe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1db4b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de2886e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11e0f1d8f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x61d11e155736: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e155736: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e155736: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11dee1e7b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x61d11ded5f42: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x61d11e29b3fb: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x61d11e0ca010: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x61d11e0a581d: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x61d11e077f26: winter_prover::Prover::generate_proof (prover/src/lib.rs:548:13)",
"0x61d11e096cd4: winter_prover::Prover::prove (prover/src/lib.rs:171:37)",
"0x61d11df85d7b: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x61d11df8d39c: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x61d11deae60c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x61d11e0bba92: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x61d11de924c6: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:493:32)",
"0x61d11de4809a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x61d11df152a2: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x61d11de13c9b: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x61d11de30906: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x61d11dfa1f9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11e11fd37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e11fd37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e11fd37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e11fd37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1e126e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1d46a7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de26dde: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11e08ad43: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:638:34)",
"0x61d11dfa0a9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11e23f0c6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e23f0c6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e23f0c6: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x61d11e1c6039: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x61d11e1c6039: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x61d11e1c6039: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x61d11e04eca3: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x61d11e076583: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:33)",
"0x61d11e3cf799: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x61d11e3cab39: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x61d11e32d830: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61d11e32f899: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61d11e30a451: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61d11e1e9f53: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x61d11e0afb07: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x61d11e212e95: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x61d11e05a12c: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:62:13)",
"0x61d11e0fb985: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:364:13)",
"0x61d11e26eb4c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:63:9)",
"0x61d11dff1247: winter_verifier::perform_verification (verifier/src/lib.rs:223:43)",
"0x61d11dff99d2: winter_verifier::verify (verifier/src/lib.rs:110:21)",
"0x61d11df9391c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11e11ddc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e11ddc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e11ddc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e11ddc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1bf6b3: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x61d11e1d4bc9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de2701e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11e075f62: winter_prover::Prover::generate_proof (prover/src/lib.rs:291:36)",
"0x61d11dfb3622: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61d11dfd9839: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61d11e1b2252: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61d11e223db8: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x61d11e0afbd9: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x61d11e4396cc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x61d11e437d9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x61d11e438cf8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x61d11e438cf8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x61d11e435964: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x61d11e435c13: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x61d11e2a400c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x61d11e102bb8: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:510:13)",
"0x61d11df5f484: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x61d11de78909: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x61d11df85f3a: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x61d11e13b2f0: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e13b2f0: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e13b2f0: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e13b2f0: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x61d11e1df5bb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1dada6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de26dbb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11e22e075: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x61d11dfa127c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11e112557: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e112557: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e112557: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e112557: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1c079d: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x61d11e1dc21c: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de284ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11e05882a: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x61d11df9701c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11e1257f7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e1257f7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e1257f7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e1257f7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1e1b7e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1dbf39: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de260ee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11e075603: winter_prover::Prover::generate_proof (prover/src/lib.rs:217:20)",
"0x61d11e13ef40: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e13ef40: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e13ef40: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e13ef40: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x61d11e1e114b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1d88a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de2527b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11e236bca: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x61d11df9edbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11e10d3c1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e10d3c1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e10d3c1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e10d3c1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1e29db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1d5d06: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de27eab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11dfefd9f: winter_verifier::perform_verification (verifier/src/lib.rs:216:40)",
"0x61d11e13a111: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e13a111: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e13a111: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e13a111: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1df9fb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1d8cc6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de2786b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11df77a5c: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:82:9)",
"0x61d11e2c1cb7: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x61d11e273a27: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:272:18)",
"0x61d11e272297: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:166:30)",
"0x61d11e2096fb: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x61d11deaf185: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x61d11dfef9d9: winter_verifier::perform_verification (verifier/src/lib.rs:183:13)",
"0x61d11ded6393: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x61d11e0a6018: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x61d11e05583e: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x61d11e43a5ca: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11e43bbbc: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e43bbbc: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e43bbbc: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x61d11e43c7fc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x61d11e43c7fc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x61d11e43c7fc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x61d11e439e2c: <winter_utils::serde::byte_reader::SliceReader as winter_utils::serde::byte_reader::ByteReader>::read_vec (src/serde/byte_reader.rs:151:22)",
"0x61d11e3daf46: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:365:21)",
"0x61d11e3da3d6: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:146:27)",
"0x61d11e0ac4f8: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x61d11dff06c1: winter_verifier::perform_verification (verifier/src/lib.rs:295:27)",
"0x61d11dfbaca2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61d11dfd9539: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61d11e1b1b42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61d11e1e4ffc: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x61d11e105d4a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x61d11e1f41bf: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x61d11dff0cbe: winter_verifier::perform_verification (verifier/src/lib.rs:314:25)",
"0x61d11df999fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11e154856: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e154856: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e154856: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x61d11e04e7be: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x61d11e04cf17: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x61d11de8c5ac: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:293:57)",
"0x61d11e21c580: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x61d11de582b2: <examples::do_work::DoWorkExample<H> as examples::Example>::prove (src/do_work/mod.rs:108:9)",
"0x61d11dcb0d4d: winterfell::main (examples/src/main.rs:49:17)",
"0x61d11e0a97e9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x61d11dfdaf24: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x61d11e236ca7: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x61d11dec277b: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x61d11e3bd899: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x61d11e32a0aa: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11e113541: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e113541: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e113541: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e113541: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1e190b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1d7276: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de2745b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11deadb0f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x61d11df757fb: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x61d11deade38: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x61d11e153067: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x61d11df9683c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11e155786: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e155786: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e155786: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e075f85: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:39)",
"0x61d11e2a401d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x61d11df9b40c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11e12abc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e12abc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e12abc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e12abc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1e0a9e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1dbc79: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de2694e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11df7877a: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:50:26)",
"0x61d11e076c77: winter_prover::Prover::generate_proof (prover/src/lib.rs:442:35)",
"0x61d11e2bac96: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x61d11e078a4f: winter_prover::Prover::generate_proof (prover/src/lib.rs:590:25)",
"0x61d11df9a70a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11e12c781: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e12c781: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e12c781: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e12c781: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1e1dab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1d6306: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de2609b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11e08ac73: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:634:36)",
"0x61d11dedb598: winter_prover::trace::Trace::validate (src/trace/mod.rs:177:13)",
"0x61d11e079f21: winter_prover::Prover::generate_proof (prover/src/lib.rs:370:17)",
"0x61d11e2a495b: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x61d11e0ab9cc: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x61d11e3dadc4: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:361:22)",
"0x61d11deca22a: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x61d11deca307: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x61d11dff1156: winter_verifier::perform_verification (verifier/src/lib.rs:225:13)",
"0x61d11e059e42: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::new (src/do_work/air.rs:35:23)",
"0x61d11de91bb0: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:221:17)",
"0x61d11de3c922: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x61d11e26b4dd: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::SpecFold>::spec_fold (iter/adapters/zip.rs:685:25)",
"0x61d11e257ee7: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::fold (iter/adapters/zip.rs:249:9)",
"0x61d11e2429b7: <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/zip.rs:103:9)",
"0x61d11e123666: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e123666: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e123666: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e123666: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x61d11e1dfb6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1d85dc: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11e1e79be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11e1e9edb: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x61d11e110141: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e110141: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e110141: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e110141: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1e2f9b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1d7346: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de2588b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11e0754e3: winter_prover::Prover::generate_proof (prover/src/lib.rs:209:39)",
"0x61d11e1c4ebb: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e1c4ebb: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e1c4ebb: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e1c4ebb: <[V] as alloc::slice::Concat<T>>::concat (alloc/src/slice.rs:712:26)",
"0x61d11e1c4cab: alloc::slice::<impl [T]>::concat (alloc/src/slice.rs:561:9)",
"0x61d11e0b3199: winter_prover::trace::commitment::build_segment_queries::{{closure}}::{{closure}} (src/trace/commitment.rs:164:27)",
"0x61d11df31019: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x61d11e0b1736: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:159:13)",
"0x61d11e155556: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e155556: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e155556: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e223782: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x61d11e078ace: winter_prover::Prover::generate_proof (prover/src/lib.rs:593:29)",
"0x61d11ded59cb: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x61d11de4232c: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x61d11e0ab954: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x61d11e04b210: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:197:28)",
"0x61d11e3d9d02: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:348:22)",
"0x61d11e3d4e53: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:174:32)",
"0x61d11df9851c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11e20a2be: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e20a2be: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e20a2be: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x61d11e1c4b77: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x61d11df61c58: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x61d11e075656: winter_prover::Prover::generate_proof (prover/src/lib.rs:228:27)",
"0x61d11e147451: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e147451: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e147451: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e147451: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1e07db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1d5136: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de2665b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11dead97f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x61d11e43aab0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61d11e43ace9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61d11e43bf12: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61d11dfdc564: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x61d11df81175: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x61d11e23e9a3: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x61d11e2c282c: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x61d11e0fbc22: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:348:9)",
"0x61d11e27463b: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:50:13)",
"0x61d11e079b32: winter_prover::Prover::generate_proof (prover/src/lib.rs:403:21)",
"0x61d11e12b877: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e12b877: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e12b877: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e12b877: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1e070e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1dc317: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de28ace: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11e1f4532: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x61d11dedb0ab: winter_prover::trace::Trace::validate (src/trace/mod.rs:122:26)",
"0x61d11df78670: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:40:22)",
"0x61d11e2746e7: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:13)",
"0x61d11e33b6ac: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e33b6ac: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e33b6ac: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x61d11e30c4a9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x61d11e30c4a9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x61d11e30c4a9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x61d11e1e9a2c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x61d11e2a8274: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x61d11e2bb152: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x61d11e223a51: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x61d11df9c90c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11e124f91: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e124f91: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e124f91: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e124f91: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1dfedb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1d9626: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de254ab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11e08aba6: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:630:42)",
"0x61d11e2a0e40: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x61d11dfc5972: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61d11dfd9a19: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61d11e1af402: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61d11e21c810: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x61d11e0fc2c9: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:534:17)",
"0x61d11dff013b: winter_verifier::perform_verification (verifier/src/lib.rs:263:61)",
"0x61d11e29b103: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x61d11e051d04: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x61d11e04efbc: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x61d11df987bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11e145b27: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e145b27: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e145b27: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e145b27: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1beb76: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x61d11e1d8ba7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de27d6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11e0b6d5b: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x61d11e155466: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e155466: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e155466: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e076051: winter_prover::Prover::generate_proof (prover/src/lib.rs:301:32)",
"0x61d11e1489a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e1489a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e1489a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e1489a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1e33de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1da4c9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de28ede: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11ded55e0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x61d11e3f5b7b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x61d11e3f55f1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x61d11e3f1bbb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x61d11e3ee87e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x61d11e3efc4c: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x61d11e3eed8a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x61d11ded9511: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:132:51)",
"0x61d11de3ba1a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x61d11e27eda5: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x61d11e2404cb: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x61d11e22e524: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x61d11de9b583: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x61d11df9be8c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11e155966: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e155966: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e155966: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11dfdac9d: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x61d11e22e152: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x61d11deadfa8: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x61d11e11a227: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e11a227: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e11a227: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e11a227: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1e023e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1d7d47: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de28bee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11e0ca10f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x61d11df61a1e: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x61d11e3e7da0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61d11e3e35f9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61d11e3e25a1: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61d11e3e2eb0: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x61d11e0c9a4e: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x61d11df92c0c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11e134b31: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e134b31: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e134b31: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e134b31: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1e20ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1d65a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de27e5b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11df61967: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x61d11dfa151c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11e14d907: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e14d907: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e14d907: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e14d907: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1e0fde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1da627: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de2593e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11de58d54: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:112:30)",
"0x61d11e21c2ef: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x61d11e3cae7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11e33b57c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e33b57c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e33b57c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x61d11e30bcc9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x61d11e30bcc9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x61d11e30bcc9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x61d11e0fae3f: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x61d11e20a1f6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x61d11deaec48: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x61d11e1fd476: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:228:38)",
"0x61d11e1fa903: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x61d11e0797ed: winter_prover::Prover::generate_proof (prover/src/lib.rs:439:13)",
"0x61d11e147f17: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e147f17: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e147f17: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e147f17: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1e1b2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1d7147: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de26a9e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11e075416: winter_prover::Prover::generate_proof (prover/src/lib.rs:205:38)",
"0x61d11df9eb1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11e1277cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e1277cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e1277cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e1277cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x61d11e1e286e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1d4947: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de25e8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11e105bf6: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x61d11ded747b: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x61d11e0518b6: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x61d11e05576c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x61d11e305656: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e305656: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e305656: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11dfded1c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x61d11e1ebb5e: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x61d11dea9d3c: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x61d11dff098e: winter_verifier::perform_verification (verifier/src/lib.rs:303:42)",
"0x61d11df9755c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11e1411c7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e1411c7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e1411c7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e1411c7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1e006e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1d52c7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11df7342e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11e07579f: winter_prover::Prover::generate_proof (prover/src/lib.rs:243:41)",
"0x61d11e1fd527: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:228:37)",
"0x61d11e08b3dd: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:659:26)",
"0x61d11e1e96ff: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x61d11e0abdf4: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x61d11e0abad6: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x61d11dff95a9: winter_verifier::verify (verifier/src/lib.rs:95:32)",
"0x61d11e0b9c1d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x61d11df90fee: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x61d11deae42b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x61d11e053f48: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x61d11df85d36: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x61d11dfc85e2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61d11dfd9209: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61d11e1b30e2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61d11deaf49b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x61d11e053ca7: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x61d11e2166eb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x61d11e215891: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x61d11e028f4b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x61d11e014d8f: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x61d11e020711: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x61d11e01bcaa: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x61d11dea92ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x61d11dff0810: winter_verifier::perform_verification (verifier/src/lib.rs:302:9)",
"0x61d11df9c66c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11e10ac21: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e10ac21: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e10ac21: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e10ac21: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1e13ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1d4ac6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de2901b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11e0776a3: winter_prover::Prover::generate_proof (prover/src/lib.rs:495:52)",
"0x61d11e0f5d61: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x61d11dff033e: winter_verifier::perform_verification (verifier/src/lib.rs:272:24)",
"0x61d11e114197: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e114197: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e114197: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e114197: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1e2f6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1d4599: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de27c6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11e1f5e47: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x61d11e0fc08d: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:540:13)",
"0x61d11df5e428: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x61d11e3db187: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x61d11e3d9fed: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:357:24)",
"0x61d11dcb18fd: winterfell::main (examples/src/main.rs:80:24)",
"0x61d11e155cd6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e155cd6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e155cd6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e07600d: winter_prover::Prover::generate_proof (prover/src/lib.rs:300:37)",
"0x61d11e2c2983: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x61d11e23f5ed: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x61d11e23f440: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x61d11e102c93: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:505:13)",
"0x61d11e079665: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:17)",
"0x61d11e3e78ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11e3e3b6c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e3e3b6c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e3e3b6c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x61d11e3e362c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x61d11e3e362c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x61d11e3e362c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x61d11e0c91a5: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x61d11e0f973c: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x61d11dff0e15: winter_verifier::perform_verification (verifier/src/lib.rs:320:5)",
"0x61d11e1e8e5d: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x61d11e1ec406: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x61d11e1fa940: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x61d11df94b7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11e136f11: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e136f11: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e136f11: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e136f11: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1e13db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1d6d46: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de25acb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11e0b9c0e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x61d11e236a9a: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x61d11e1f189e: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x61d11dff0c0f: winter_verifier::perform_verification (verifier/src/lib.rs:308:25)",
"0x61d11e115911: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e115911: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e115911: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e115911: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1e0f1b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1dc516: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de2620b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11deadbd7: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x61d11e1f0bd0: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x61d11e0b311b: winter_prover::trace::commitment::build_segment_queries::{{closure}}::{{closure}} (src/trace/commitment.rs:162:42)",
"0x61d11e05a08f: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:60:9)",
"0x61d11e1f8866: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x61d11e1f0693: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x61d11df9ce4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11de7a2ec: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11de7a2ec: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11de7a2ec: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x61d11e1c6f19: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x61d11e1c6f19: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x61d11e1c6f19: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x61d11e23f5d6: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x61d11df77bd9: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:82:31)",
"0x61d11de4d553: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x61d11e10e7e7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e10e7e7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e10e7e7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e10e7e7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1e273e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1d87f7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de2932e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11e04ad13: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:253:9)",
"0x61d11dfd0152: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61d11dfd9389: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61d11e1b1ff2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61d11e2aef89: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x61d11e2bc1b2: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x61d11e43ad49: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x61d11e3e0d7a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x61d11e0c9214: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x61d11e2bac77: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x61d11e2014a2: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x61d11e200147: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x61d11e08adf7: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:645:31)",
"0x61d11df5c499: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x61d11deaf3ef: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x61d11e118727: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e118727: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e118727: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e118727: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1e25de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1d8507: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de28cfe: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11e052277: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x61d11e435d9e: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x61d11dead7d0: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x61d11ddc2149: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x61d11ddc0c19: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x61d11ddbf030: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61d11ddbf298: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x61d11ddbeb5a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x61d11ddbeb5a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x61d11dcb36a1: alloc::string::String::reserve (alloc/src/string.rs:1152:9)",
"0x61d11dcb36a1: <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend (alloc/src/string.rs:2173:14)",
"0x61d11dcb377c: <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter (alloc/src/string.rs:2093:9)",
"0x61d11e0fae2a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x61d11dfc7c02: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61d11dfd8cc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61d11e1b2d48: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61d11e079bf6: winter_prover::Prover::generate_proof (prover/src/lib.rs:408:17)",
"0x61d11e2754c0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:28)",
"0x61d11e079bd3: winter_prover::Prover::generate_proof (prover/src/lib.rs:407:21)",
"0x61d11dfba7b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61d11dfd8d89: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61d11e1aef32: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61d11dff148c: winter_verifier::perform_verification (verifier/src/lib.rs:182:9)",
"0x61d11e3dd012: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61d11e3de1a9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61d11e3df878: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61d11e3d5c1a: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:13)",
"0x61d11e3df118: <winter_air::proof::context::Context as winter_utils::serde::Deserializable>::read_from (src/proof/context.rs:184:35)",
"0x61d11e3d4bf7: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:27)",
"0x61d11e3de2bd: <winter_air::proof::commitments::Commitments as winter_utils::serde::Deserializable>::read_from (src/proof/commitments.rs:108:22)",
"0x61d11e3d4bdc: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:167:27)",
"0x61d11e2c66eb: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x61d11e079808: winter_prover::Prover::generate_proof (prover/src/lib.rs:440:13)",
"0x61d11e0abb12: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x61d11df61a03: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x61d11e3d9ec9: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:352:21)",
"0x61d11e3d9a1e: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:168:21)",
"0x61d11e3d4e38: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:176:34)",
"0x61d11e22dd42: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x61d11e059d16: <examples::do_work::air::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (src/do_work/air.rs:13:9)",
"0x61d11dff9718: winter_verifier::verify (verifier/src/lib.rs:97:38)",
"0x61d11dcb19d5: winterfell::main (examples/src/main.rs:83:11)",
"0x61d11de98c8d: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x61d11dff6869: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:214:32)",
"0x61d11de3b603: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x61d11e1f41a4: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x61d11dfa223c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11e13f977: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e13f977: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e13f977: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e13f977: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1e065e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1d4517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de2560e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11e0775d6: winter_prover::Prover::generate_proof (prover/src/lib.rs:491:51)",
"0x61d11df9f2fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11e11c135: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e11c135: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e11c135: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e11c135: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x61d11e1e010e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1d5737: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de25cce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11e1fd1b0: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:218:46)",
"0x61d11e26e64a: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:25:25)",
"0x61d11e1f0bf3: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x61d11de9553c: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x61d11e0c9bf6: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x61d11e2a382c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x61d11e0abb58: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x61d11e003d31: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x61d11e007477: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x61d11dffc1bb: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x61d11e2aecaa: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x61d11df962fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11e29d776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e29d776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e29d776: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x61d11e1c63b9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x61d11e1c63b9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x61d11e1c63b9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x61d11e2c2846: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x61d11e2328e0: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x61d11e2c665e: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x61d11e29b450: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x61d11e1165b7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e1165b7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e1165b7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e1165b7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1dfb0e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1d7a37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de272be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11e0afc76: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x61d11e3db709: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x61d11e3dc4bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11e3df776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e3df776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e3df776: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e3da2b9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x61d11e3da70b: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:211:22)",
"0x61d11e3d515d: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:188:24)",
"0x61d11dfac982: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61d11dfd8c39: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61d11e1b1a51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61d11e0516c9: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x61d11df5530d: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x61d11dffa8d1: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:101:85)",
"0x61d11de4b432: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x61d11df67c0a: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:107:27)",
"0x61d11de84bff: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x61d11df659a4: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:113:9)",
"0x61d11e23942f: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x61d11e239504: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x61d11dfb1392: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61d11dfd8a59: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61d11e1adb42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61d11df7b0d9: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:174:17)",
"0x61d11df78f30: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:54:17)",
"0x61d11e05a0bd: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:61:13)",
"0x61d11deae23c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x61d11e154e1c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e154e1c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e154e1c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x61d11e1c5e79: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x61d11e1c5e79: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x61d11e1c5e79: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x61d11e0776be: winter_prover::Prover::generate_proof (prover/src/lib.rs:500:39)",
"0x61d11e3f581b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x61d11e3f5541: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x61d11e3f1d7b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x61d11e3ec3a1: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x61d11e3ecb37: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x61d11e3e76db: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x61d11df8604d: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x61d11e0797ad: winter_prover::Prover::generate_proof (prover/src/lib.rs:438:13)",
"0x61d11e2098ce: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x61d11e3da8d2: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:215:25)",
"0x61d11e0bceb0: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x61d11e0758ba: winter_prover::Prover::generate_proof (prover/src/lib.rs:257:22)",
"0x61d11e26e7eb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:39:30)",
"0x61d11df95dbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11e139127: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e139127: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e139127: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e139127: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1e001e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1d66b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de28fae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11e1f6e38: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x61d11dfa1a5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11e155b46: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e155b46: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e155b46: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e2a835d: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x61d11e223c60: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x61d11e43ad18: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x61d11e43c00a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x61d11e43c00a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x61d11e43bdae: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x61d11e43bdae: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x61d11e43be9d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x61d11e20abc2: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x61d11e0a8240: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x61d11e21ebb1: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x61d11e1fd26a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x61d11df93bbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11e11c991: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e11c991: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e11c991: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e11c991: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1e237b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1d7ed6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de2578b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11dfefcd2: winter_verifier::perform_verification (verifier/src/lib.rs:212:41)",
"0x61d11df93e5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11e13f771: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e13f771: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e13f771: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e13f771: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1e00cb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1d99c6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de260cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11e050e5a: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x61d11e051be1: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x61d11e054211: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x61d11e133f37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e133f37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e133f37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e133f37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1e32be: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1dc2d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de264de: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11e04b2c4: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:198:23)",
"0x61d11e3ee76e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x61d11e3f0220: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x61d11e3ef428: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x61d11e140637: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e140637: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e140637: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e140637: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1e3ade: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1dc4b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de26d0e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11e075e32: winter_prover::Prover::generate_proof (prover/src/lib.rs:286:23)",
"0x61d11e129ee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e129ee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e129ee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e129ee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1b9bcf: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x61d11e1d7849: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de26e5e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11dff9784: winter_verifier::verify (verifier/src/lib.rs:101:24)",
"0x61d11e0afa53: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x61d11dfdef79: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x61d11e1f0853: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x61d11e2beab6: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x61d11e3de5bd: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:151:28)",
"0x61d11e3d5178: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:29)",
"0x61d11de8bb09: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:211:31)",
"0x61d11de42d3a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x61d11df330a8: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x61d11de0c3ba: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x61d11de2c63a: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x61d11e0fc239: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:536:13)",
"0x61d11e3dc75c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11e3df726: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e3df726: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e3df726: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e3d4d52: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:172:33)",
"0x61d11e141c51: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e141c51: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e141c51: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e141c51: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1dff6b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1daa96: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de2753b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11deada47: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x61d11e3eb66d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x61d11e3e6538: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x61d11e3e4dd7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x61d11e3e81a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e3e81a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e3e81a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e3e81a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x61d11e3e85ee: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e3e85b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11e3e984e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11e3e7299: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x61d11dfd1022: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61d11dfd99e9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61d11e1b0842: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61d11dff1673: winter_verifier::perform_verification (verifier/src/lib.rs:177:9)",
"0x61d11e1f1848: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x61d11e1f43d9: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x61d11e27558d: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:33)",
"0x61d11dfe0191: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x61d11df7af72: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:169:36)",
"0x61d11dedf1f6: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x61d11e2aec8f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x61d11e1fd3df: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:226:50)",
"0x61d11dee2303: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x61d11e2aec25: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x61d11e1fa872: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x61d11e075c88: winter_prover::Prover::generate_proof (prover/src/lib.rs:268:13)",
"0x61d11e04ed84: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x61d11e23951a: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x61d11e2bae9d: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x61d11dec3e22: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x61d11df595c4: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x61d11e279d04: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x61d11e04b723: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:200:34)",
"0x61d11de3ab0a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x61d11df0e1bf: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x61d11dfd5f22: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61d11dfd8fc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61d11e1b2aaf: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61d11e22e5d9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x61d11e059b27: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x61d11e0578cd: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x61d11e2c66d0: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x61d11dee1d3b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x61d11e2a0e2b: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x61d11e1f776a: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x61d11de3ec7a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x61d11e1116b1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e1116b1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e1116b1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e1116b1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1df71b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1d8e16: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de2823b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11de9b409: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x61d11e0ac01f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x61d11df63f5f: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x61d11e2329fc: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x61d11e3d9862: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:164:22)",
"0x61d11dfa17bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11e155876: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e155876: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e155876: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e075fc9: winter_prover::Prover::generate_proof (prover/src/lib.rs:299:44)",
"0x61d11e1ff1ab: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x61d11e1fe696: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x61d11de928e9: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:641:17)",
"0x61d11df8d629: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x61d11dfbd912: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61d11dfd9119: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61d11e1ae94f: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61d11e1e9d8a: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x61d11e21c312: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x61d11e1edaf6: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x61d11dff0d3a: winter_verifier::perform_verification (verifier/src/lib.rs:316:28)",
"0x61d11e113317: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e113317: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e113317: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e113317: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1e106e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1dc587: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de2547e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11e050c6a: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x61d11e11b777: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e11b777: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e11b777: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e11b777: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1e02de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1dc697: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de28b8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11e0c9131: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x61d11de9b6f1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x61d11dfc6842: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61d11dfd9419: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61d11e1aeba2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61d11df8d57e: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x61d11e1359d1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e1359d1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e1359d1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e1359d1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1e1cfb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1da026: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de2864b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11deadc9f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x61d11e3de784: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:155:27)",
"0x61d11de98cb0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x61d11e04ec8c: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x61d11df9b94c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11e10fae7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e10fae7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e10fae7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e10fae7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1e153e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1dbd37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de27d4e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11e097619: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces (src/do_work/prover.rs:30:9)",
"0x61d11e129787: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e129787: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e129787: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e129787: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1e067e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1d7807: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de2971e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11ded933a: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:132:32)",
"0x61d11e2395d7: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x61d11e2aee0b: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x61d11e050db1: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x61d11de404aa: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x61d11e280a05: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x61d11e208835: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x61d11df5e1d0: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x61d11df759d0: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x61d11df99f3a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11e10b15e: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e10b15e: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e10b15e: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e10b15e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x61d11e1e121e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1d6957: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11e26d76e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11e1f0755: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:144:35)",
"0x61d11e3dd502: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61d11e3de179: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61d11e3dfae2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61d11e3d5916: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:13)",
"0x61d11e0557d0: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x61d11e275819: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:129:9)",
"0x61d11deca23f: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x61d11e29b184: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x61d11e22410a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x61d11e2babcd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x61d11e0934e4: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:691:36)",
"0x61d11e13fba1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e13fba1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e13fba1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e13fba1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1e2b3b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1da0b6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de266cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11e075c5d: winter_prover::Prover::generate_proof (prover/src/lib.rs:266:43)",
"0x61d11df994bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61d11e14c4c8: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e14c4c8: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e14c4c8: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e14c4c8: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x61d11e1e372e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1da407: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11e2c317e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11e106e5c: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x61d11e271fd0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:149:33)",
"0x61d11e21c6ec: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x61d11e21bf64: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:142:33)",
"0x61d11e1109a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e1109a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e1109a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e1109a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1e271e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1d5517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de2737e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11e0c9f51: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x61d11ded887b: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:235:25)",
"0x61d11e2a3a62: examples::do_work::prover::build_do_work_trace (src/do_work/prover.rs:65:5)",
"0x61d11e097668: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces::{{closure}} (src/do_work/prover.rs:32:27)",
"0x61d11e139ee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61d11e139ee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61d11e139ee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61d11e139ee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61d11e1dfdde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61d11e1d6c57: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61d11de2947e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61d11e23e994: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x61d11e29b08f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x61d11e0a5151: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x61d11e0bcdf3: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x61d11e3e36b6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x61d11e0c9b2b: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x61d11e2bec0e: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x61d11e2bc104: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x61d11e07838b: winter_prover::Prover::generate_proof (prover/src/lib.rs:561:9)",
"0x61d11e3f59cb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x61d11e3f56a1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x61d11e3f1c9b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x61d11e3ec471: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x61d11e3ecaf7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x61d11e3e772b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x61d11e0a5833: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x61d11e216dab: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x61d11e2157e1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x61d11e0294eb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x61d11dffe79d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x61d11dec70fc: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x61d11dec4911: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x61d11e1ffc77: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x61d11e1f7c8c: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x61d11e1fe7bc: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x61d11e2086ed: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x61d11dffe9dd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x61d11dec783f: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x61d11e0a36c3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)"
]
}