{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell do-work -n 9 -l 65536",
"pid": 25963,
"tg": 296039972,
"te": 327620407,
"pps": [
{
"tb": 1920,
"tbk": 4,
"tl": 4169,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9,
10
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 184815,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
11,
12,
13,
14,
15,
16,
17
]
},
{
"tb": 460800,
"tbk": 9,
"tl": 449396,
"mb": 460800,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
20,
21,
22,
23,
24,
25,
26
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
29,
30,
31,
32
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2855,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
33,
34,
35,
36,
37,
38,
25,
26
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4161,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
40,
41,
42,
43,
44,
45,
46,
47
]
},
{
"tb": 21600,
"tbk": 9,
"tl": 274564350,
"mb": 21600,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
48,
49,
50,
51,
52,
53,
54,
55,
56,
57
]
},
{
"tb": 144,
"tbk": 9,
"tl": 1646741,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
58,
59,
60,
61,
62,
63,
64
]
},
{
"tb": 72,
"tbk": 1,
"tl": 3551,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
66,
67,
68,
69,
70,
71,
72,
73,
74
]
},
{
"tb": 432,
"tbk": 1,
"tl": 6264,
"mb": 432,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
75,
76,
77,
78,
79,
80,
81,
82,
83
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1942961,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
84,
85,
86,
87,
88,
89,
90,
91,
92,
93,
94
]
},
{
"tb": 512,
"tbk": 1,
"tl": 17,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
95,
96,
97,
98,
99,
100,
31
]
},
{
"tb": 15872,
"tbk": 124,
"tl": 107,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
101,
102,
103,
104,
105,
106,
107,
108
]
},
{
"tb": 9792,
"tbk": 18,
"tl": 186,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
109,
110,
111,
112,
113,
114
]
},
{
"tb": 28832,
"tbk": 19,
"tl": 160854242,
"mb": 28832,
"mbk": 19,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
115,
116,
117,
118,
119,
120,
121,
122
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 2852,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
123,
124,
125,
126,
127,
128,
129,
64
]
},
{
"tb": 480,
"tbk": 4,
"tl": 209,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
130,
131,
132,
133,
134,
135,
38
]
},
{
"tb": 943718400,
"tbk": 900,
"tl": 294371459232,
"mb": 943718400,
"mbk": 900,
"gb": 943718400,
"gbk": 900,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
95,
96,
97,
136,
137,
138,
139
]
},
{
"tb": 216,
"tbk": 1,
"tl": 31112632,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
48,
140,
141,
142,
143,
64,
144,
145
]
},
{
"tb": 288,
"tbk": 9,
"tl": 2457,
"mb": 288,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
146,
147,
148,
149,
150,
151
]
},
{
"tb": 216,
"tbk": 9,
"tl": 13687597,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
152,
153,
154,
155,
156,
64
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1942353,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
66,
157,
158,
159,
160,
161,
162,
163,
164,
64
]
},
{
"tb": 224,
"tbk": 1,
"tl": 11735,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
166,
167,
168,
169,
170
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1279,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
171,
172,
173,
174,
175,
176,
177,
178,
179,
180,
181
]
},
{
"tb": 1120,
"tbk": 3,
"tl": 10493,
"mb": 640,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
182,
183,
184,
185,
186,
187,
188,
189,
190
]
},
{
"tb": 3584,
"tbk": 18,
"tl": 513,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
66,
157,
158,
159,
160,
161,
162,
191,
192,
193
]
},
{
"tb": 72,
"tbk": 1,
"tl": 270427331,
"mb": 72,
"mbk": 1,
"gb": 72,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
194,
195,
196,
197,
198,
199,
200,
201,
202
]
},
{
"tb": 6710886400,
"tbk": 4194304,
"tl": 38487119,
"mb": 1600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
84,
85,
86,
203,
204,
205,
206,
207,
208
]
},
{
"tb": 672,
"tbk": 3,
"tl": 7399,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
209,
210,
211,
212,
213
]
},
{
"tb": 6616,
"tbk": 42,
"tl": 889,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
66,
157,
158,
159,
160,
161,
162,
191,
192,
214
]
},
{
"tb": 216,
"tbk": 1,
"tl": 295293252,
"mb": 216,
"mbk": 1,
"gb": 216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
215,
216,
217,
218,
219,
220,
221,
222,
223
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 322766,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
84,
85,
86,
203,
204,
205,
224,
225,
64
]
},
{
"tb": 107264,
"tbk": 413,
"tl": 238653,
"mb": 16384,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
226,
227,
228,
229,
230,
231,
232,
233
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 326424007,
"mb": 524288,
"mbk": 1,
"gb": 524288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
95,
96,
97,
136,
234,
235,
236
]
},
{
"tb": 51488,
"tbk": 41,
"tl": 36505,
"mb": 51200,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
84,
85,
86,
87,
88,
89,
237,
52,
53,
54,
238
]
},
{
"tb": 288,
"tbk": 9,
"tl": 128633,
"mb": 288,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
239,
240,
241,
242,
243,
244
]
},
{
"tb": 768,
"tbk": 1,
"tl": 4102,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
33,
34,
35,
36,
245,
246,
247,
248
]
},
{
"tb": 3456,
"tbk": 18,
"tl": 567,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
249,
250,
251,
252,
253,
254,
255,
256,
257
]
},
{
"tb": 6616,
"tbk": 42,
"tl": 128,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
66,
157,
158,
159,
160,
161,
162,
258,
259,
128
]
},
{
"tb": 512,
"tbk": 1,
"tl": 60,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
260,
261,
262,
263,
264,
265,
266,
267
]
},
{
"tb": 144,
"tbk": 9,
"tl": 131863,
"mb": 144,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
268,
269,
270,
271,
272,
273,
274,
275,
276
]
},
{
"tb": 2832,
"tbk": 10,
"tl": 210869706,
"mb": 312,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
277,
278,
279,
280,
281,
282,
283,
284,
285
]
},
{
"tb": 864,
"tbk": 9,
"tl": 220,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
286,
287,
288,
289,
156,
64
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 322136,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
95,
96,
97,
136,
234,
290,
291
]
},
{
"tb": 640,
"tbk": 4,
"tl": 1028,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
292,
293,
294,
295,
259
]
},
{
"tb": 216,
"tbk": 1,
"tl": 31112628,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
215,
296,
297,
298,
299,
64,
144,
145
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 1691650,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
95,
96,
97,
136,
300,
301,
302
]
},
{
"tb": 409600,
"tbk": 256,
"tl": 1254,
"mb": 1600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
84,
85,
86,
87,
88,
89,
303,
304,
305
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 4660,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
306,
307,
308,
309,
310,
311,
312,
313
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 2374,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
123,
314,
315,
316,
317,
318,
319,
320,
321
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 131086,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
95,
96,
97,
136,
322,
323,
324
]
},
{
"tb": 144,
"tbk": 9,
"tl": 2938140272,
"mb": 144,
"mbk": 9,
"gb": 144,
"gbk": 9,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
268,
269,
270,
271,
272,
273,
325,
326,
327
]
},
{
"tb": 21600,
"tbk": 9,
"tl": 2558083820,
"mb": 21600,
"mbk": 9,
"gb": 21600,
"gbk": 9,
"eb": 0,
"ebk": 0,
"fs": [
1,
48,
328,
329,
330,
331,
332,
333,
334,
335
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 628,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
95,
96,
97,
136,
336,
337,
338
]
},
{
"tb": 2097152,
"tbk": 2,
"tl": 26140351,
"mb": 2097152,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
84,
85,
86,
203,
204,
205,
339,
340,
341
]
},
{
"tb": 64,
"tbk": 1,
"tl": 3,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
342,
343,
344,
345,
346,
347,
348,
349,
350
]
},
{
"tb": 576,
"tbk": 9,
"tl": 95227,
"mb": 576,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
351,
352,
353,
354,
355
]
},
{
"tb": 36288,
"tbk": 54,
"tl": 54212269,
"mb": 18432,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
351,
352,
353,
356,
357
]
},
{
"tb": 16,
"tbk": 1,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
268,
269,
270,
271,
272,
273,
325,
358,
359
]
},
{
"tb": 17712,
"tbk": 18,
"tl": 438,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
360,
361,
362,
363,
364,
365
]
},
{
"tb": 943718400,
"tbk": 900,
"tl": 27442205033,
"mb": 943718400,
"mbk": 900,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
84,
85,
86,
87,
88,
89,
237,
52,
53,
54,
55
]
},
{
"tb": 2160,
"tbk": 18,
"tl": 76896256,
"mb": 1728,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
366,
367,
64,
144,
145
]
},
{
"tb": 37749024,
"tbk": 27,
"tl": 674795,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
95,
96,
97,
136,
336,
368,
369
]
},
{
"tb": 9437184,
"tbk": 9,
"tl": 649663,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
95,
96,
97,
136,
234,
290,
370
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 727625,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
95,
96,
97,
136,
371,
372,
373
]
},
{
"tb": 6912,
"tbk": 9,
"tl": 52382,
"mb": 6912,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
48,
374,
375,
376,
377,
378,
379,
380,
381
]
},
{
"tb": 28800,
"tbk": 9,
"tl": 94584,
"mb": 28800,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
84,
85,
86,
87,
88,
89,
382,
383,
384
]
},
{
"tb": 28809,
"tbk": 9,
"tl": 130621,
"mb": 28809,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
268,
269,
270,
271,
272,
273,
274,
385,
386
]
},
{
"tb": 288,
"tbk": 9,
"tl": 6,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
146,
387,
31,
32
]
},
{
"tb": 4608,
"tbk": 9,
"tl": 16265,
"mb": 4608,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
95,
96,
97,
388,
389,
100,
31
]
},
{
"tb": 5184,
"tbk": 18,
"tl": 372,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
390,
391,
392,
393,
394,
395,
396,
397,
398
]
},
{
"tb": 67108864,
"tbk": 524288,
"tl": 56146320,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
399,
400,
401,
402,
403,
404,
405,
406,
407
]
},
{
"tb": 460800,
"tbk": 9,
"tl": 79000,
"mb": 460800,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
95,
96,
97,
408,
409,
410,
247
]
},
{
"tb": 3968,
"tbk": 4,
"tl": 38368,
"mb": 3968,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
411,
412,
413,
414,
415,
416,
170
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 148586,
"mb": 1179648,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
95,
96,
97,
136,
417,
418,
419
]
},
{
"tb": 256,
"tbk": 1,
"tl": 11,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
84,
85,
86,
87,
88,
89,
420,
129,
64
]
},
{
"tb": 943718400,
"tbk": 900,
"tl": 254591824896,
"mb": 943718400,
"mbk": 900,
"gb": 943718400,
"gbk": 900,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
84,
85,
86,
87,
88,
89,
421,
422,
423
]
},
{
"tb": 288,
"tbk": 9,
"tl": 57350,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
424,
213,
64,
144,
145
]
},
{
"tb": 64,
"tbk": 1,
"tl": 6023453,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
351,
352,
353,
425,
357
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 43,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
95,
96,
97,
136,
234,
290,
426
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 546,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
427,
428,
429,
430,
431,
432,
433
]
},
{
"tb": 10368,
"tbk": 36,
"tl": 1141,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
434,
435,
436,
437,
438
]
},
{
"tb": 144,
"tbk": 9,
"tl": 13687478,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
84,
85,
86,
203,
204,
205,
439,
154,
155
]
},
{
"tb": 33553920,
"tbk": 128,
"tl": 137410,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
351,
352,
353,
440,
64
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
268,
269,
270,
271,
272,
273,
441,
442,
443
]
},
{
"tb": 672,
"tbk": 3,
"tl": 9065,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
209,
210,
211,
444,
445
]
},
{
"tb": 460800,
"tbk": 1,
"tl": 14602,
"mb": 460800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
268,
269,
270,
271,
272,
273,
274,
446,
447
]
},
{
"tb": 22876,
"tbk": 4,
"tl": 57821,
"mb": 22876,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
268,
269,
270,
271,
272,
273,
274,
448,
449
]
},
{
"tb": 1920,
"tbk": 8,
"tl": 14374,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
351,
352,
353,
450,
451
]
},
{
"tb": 288,
"tbk": 9,
"tl": 707,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
452,
453,
454,
455,
456,
457,
458,
459,
154,
460
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 12141186,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
11,
12,
13,
14,
461,
462,
463
]
},
{
"tb": 288,
"tbk": 9,
"tl": 13687538,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
452,
453,
454,
455,
456,
457,
458,
459,
154,
155
]
},
{
"tb": 460800,
"tbk": 288,
"tl": 1656429,
"mb": 460800,
"mbk": 288,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
84,
85,
86,
203,
204,
205,
464,
465,
466
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2102,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
33,
34,
35,
36,
37,
467,
468,
64
]
},
{
"tb": 13409,
"tbk": 1,
"tl": 14558,
"mb": 13409,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
268,
269,
270,
271,
272,
273,
274,
469,
470
]
},
{
"tb": 28800,
"tbk": 9,
"tl": 96952,
"mb": 28800,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
84,
85,
86,
87,
88,
89,
303,
471,
359
]
},
{
"tb": 6291456,
"tbk": 3,
"tl": 5830503,
"mb": 6291456,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
84,
85,
86,
87,
88,
89,
237,
52,
53,
54,
472
]
},
{
"tb": 13376,
"tbk": 32,
"tl": 146766,
"mb": 13376,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
11,
12,
13,
473,
474,
475,
476
]
},
{
"tb": 72,
"tbk": 9,
"tl": 3530507,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
66,
477,
478,
479,
480,
481,
367,
64
]
},
{
"tb": 72,
"tbk": 1,
"tl": 294981264,
"mb": 72,
"mbk": 1,
"gb": 72,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
194,
482,
483,
484,
485,
486,
487,
488,
489
]
},
{
"tb": 864,
"tbk": 9,
"tl": 114,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
286,
490,
63,
64,
144,
145
]
},
{
"tb": 75497472,
"tbk": 36,
"tl": 304417387,
"mb": 75497472,
"mbk": 36,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
95,
96,
97,
136,
491,
492,
493
]
},
{
"tb": 1152,
"tbk": 18,
"tl": 27371077,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
494,
495,
496,
497,
498
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 1942943,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
84,
85,
86,
87,
88,
89,
237,
52,
53,
54,
499
]
},
{
"tb": 73152,
"tbk": 63,
"tl": 167,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
351,
352,
353,
500,
501
]
},
{
"tb": 256,
"tbk": 4,
"tl": 127938,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
95,
96,
97,
136,
234,
290,
502
]
},
{
"tb": 432,
"tbk": 1,
"tl": 30649576,
"mb": 432,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
503,
504,
505,
506,
507,
508,
509,
510,
511
]
},
{
"tb": 2736,
"tbk": 6,
"tl": 2524,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
512,
513,
514,
515,
516,
517
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 4026,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
518,
519,
520,
521,
522
]
},
{
"tb": 864,
"tbk": 18,
"tl": 153142268,
"mb": 864,
"mbk": 18,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
48,
523,
524,
525,
526,
527,
528,
529,
530
]
},
{
"tb": 3584,
"tbk": 18,
"tl": 76,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
66,
157,
158,
159,
160,
161,
162,
258,
38,
25
]
},
{
"tb": 144,
"tbk": 9,
"tl": 898,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
531,
532,
287,
288,
289,
156
]
},
{
"tb": 72,
"tbk": 1,
"tl": 3582,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
66,
533,
534,
535,
536,
537,
538,
539,
540
]
},
{
"tb": 72,
"tbk": 1,
"tl": 3564,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
66,
541,
542,
543,
544,
545,
546,
547,
548
]
},
{
"tb": 75497472,
"tbk": 9,
"tl": 209408514,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
95,
96,
97,
136,
300,
301,
549
]
},
{
"tb": 7247757312,
"tbk": 108,
"tl": 1453540488,
"mb": 805306368,
"mbk": 12,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
123,
124,
125,
126,
550,
551,
552,
553
]
},
{
"tb": 256,
"tbk": 1,
"tl": 643,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
66,
477,
478,
479,
554,
192,
555,
556
]
},
{
"tb": 101688,
"tbk": 223,
"tl": 59888,
"mb": 26448,
"mbk": 58,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
512,
513,
514,
557,
558,
559
]
},
{
"tb": 864,
"tbk": 9,
"tl": 109,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
560,
561,
562,
563,
564,
565,
566,
567,
568
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 14562,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
268,
269,
270,
271,
272,
273,
274,
569,
470
]
},
{
"tb": 1248,
"tbk": 12,
"tl": 303,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
171,
570,
571,
572,
573,
574,
575
]
},
{
"tb": 144,
"tbk": 9,
"tl": 54,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
531,
532,
490,
63,
64,
144
]
},
{
"tb": 144,
"tbk": 9,
"tl": 76896391,
"mb": 144,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
84,
85,
86,
87,
88,
89,
90,
576,
367
]
},
{
"tb": 432,
"tbk": 18,
"tl": 856,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
577,
578,
579,
580,
581,
582
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 280265,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
84,
85,
86,
87,
88,
89,
303,
583,
213
]
},
{
"tb": 2400,
"tbk": 12,
"tl": 210,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
171,
584,
585,
586,
587,
588,
589
]
},
{
"tb": 72,
"tbk": 1,
"tl": 3557,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
66,
590,
591,
592,
593,
594,
595,
596,
597
]
},
{
"tb": 480,
"tbk": 4,
"tl": 215,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
130,
131,
132,
133,
134,
135,
467
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
268,
269,
270,
271,
272,
273,
441,
598,
443
]
},
{
"tb": 6144,
"tbk": 32,
"tl": 12652,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
171,
599,
600,
601,
602,
603,
604
]
},
{
"tb": 1344,
"tbk": 3,
"tl": 10548,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
605,
606,
607,
608,
100
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1273,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
84,
85,
86,
203,
204,
205,
609,
180,
181
]
},
{
"tb": 3456,
"tbk": 12,
"tl": 4554,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
171,
610,
611,
612,
613,
614,
615
]
},
{
"tb": 288,
"tbk": 9,
"tl": 1042,
"mb": 288,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
95,
96,
97,
408,
616,
617,
359
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 508,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
130,
131,
132,
133,
134,
135,
259
]
},
{
"tb": 24,
"tbk": 1,
"tl": 14565,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
618,
619,
447,
620
]
},
{
"tb": 288,
"tbk": 1,
"tl": 187,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
621,
622,
623,
624,
625,
626,
627,
628,
629
]
},
{
"tb": 432,
"tbk": 9,
"tl": 65966,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
630,
213,
64,
144,
145
]
},
{
"tb": 512,
"tbk": 1,
"tl": 10,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
631,
632,
633,
634,
635,
636,
637,
638
]
},
{
"tb": 432,
"tbk": 1,
"tl": 6153,
"mb": 432,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
639,
640,
641,
642,
643,
644,
645,
646,
647
]
},
{
"tb": 1944,
"tbk": 1,
"tl": 14330,
"mb": 1944,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
648,
649,
650,
651,
652,
653,
654,
655,
656
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 6946,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
518,
519,
520,
521,
657
]
},
{
"tb": 72,
"tbk": 1,
"tl": 1943693,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
48,
49,
50,
51,
52,
53,
54,
472,
164,
64
]
},
{
"tb": 21600,
"tbk": 9,
"tl": 2943733626,
"mb": 21600,
"mbk": 9,
"gb": 21600,
"gbk": 9,
"eb": 0,
"ebk": 0,
"fs": [
1,
48,
658,
659,
660,
661,
662,
663,
664,
665
]
},
{
"tb": 432,
"tbk": 18,
"tl": 557,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
666,
578,
579,
580,
581,
582
]
},
{
"tb": 288,
"tbk": 18,
"tl": 13688504,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
667,
668,
669,
670,
671,
672,
673,
674
]
},
{
"tb": 672,
"tbk": 3,
"tl": 10633,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
675,
676,
677,
678,
100
]
},
{
"tb": 144,
"tbk": 9,
"tl": 6013862,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
58,
59,
60,
61,
679,
680,
681
]
},
{
"tb": 720,
"tbk": 9,
"tl": 13685416,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
682,
683,
684,
685,
686,
687,
688,
689,
690
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 46570,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
691,
692,
693,
694,
695
]
},
{
"tb": 768,
"tbk": 1,
"tl": 5227,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
48,
49,
50,
51,
52,
53,
54,
238,
696,
25
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 40819,
"mb": 15872,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
95,
96,
97,
697,
416,
170,
359
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1942951,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
48,
49,
50,
51,
52,
53,
54,
499,
164,
64
]
},
{
"tb": 576,
"tbk": 9,
"tl": 1366,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
351,
352,
353,
698,
699
]
},
{
"tb": 648,
"tbk": 27,
"tl": 513,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
700,
701,
702,
703,
704,
705,
706,
707,
708
]
},
{
"tb": 224,
"tbk": 1,
"tl": 14609,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
268,
269,
270,
271,
272,
273,
274,
709,
710
]
},
{
"tb": 432,
"tbk": 1,
"tl": 326459910,
"mb": 432,
"mbk": 1,
"gb": 432,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
711,
712,
713,
714,
715,
716,
717,
64
]
},
{
"tb": 144,
"tbk": 9,
"tl": 869,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
531,
718,
287,
288,
289,
156
]
},
{
"tb": 288,
"tbk": 1,
"tl": 137,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
621,
719,
720,
721,
722,
723,
724,
725,
726
]
},
{
"tb": 672,
"tbk": 3,
"tl": 7,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
209,
210,
211,
727,
359
]
},
{
"tb": 144,
"tbk": 9,
"tl": 451,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
531,
718,
287,
728,
729,
100
]
},
{
"tb": 3584,
"tbk": 18,
"tl": 513,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
66,
157,
158,
159,
160,
161,
162,
191,
192,
555
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 47647,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
20,
21,
22,
730,
731,
468,
64
]
},
{
"tb": 96,
"tbk": 1,
"tl": 11731,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
209,
210,
211,
732,
170
]
},
{
"tb": 72,
"tbk": 1,
"tl": 34,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
66,
733,
734,
735,
736,
737,
738,
739,
740
]
},
{
"tb": 432,
"tbk": 9,
"tl": 78900043,
"mb": 432,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
741,
742,
743,
744,
745,
746
]
},
{
"tb": 216,
"tbk": 9,
"tl": 76896423,
"mb": 216,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
747,
748,
749,
750,
751,
752,
753,
754,
576,
367
]
},
{
"tb": 14400,
"tbk": 9,
"tl": 1141265,
"mb": 1600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
58,
59,
60,
61,
755,
756,
757
]
},
{
"tb": 56,
"tbk": 1,
"tl": 3944,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
758,
248,
359,
31,
32
]
},
{
"tb": 144,
"tbk": 9,
"tl": 892,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
84,
85,
86,
87,
88,
89,
759,
760,
761
]
},
{
"tb": 216,
"tbk": 1,
"tl": 46,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
48,
49,
50,
51,
52,
53,
54,
238,
762,
717
]
},
{
"tb": 432,
"tbk": 18,
"tl": 27373067,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
747,
748,
749,
750,
751,
752,
753,
754,
763,
764
]
},
{
"tb": 1120,
"tbk": 3,
"tl": 10668,
"mb": 640,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
765,
766,
767,
768,
359
]
},
{
"tb": 3584,
"tbk": 3,
"tl": 1682460,
"mb": 2048,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
769,
770,
771,
772,
64
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4172,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
95,
96,
97,
773,
774,
100,
31
]
},
{
"tb": 1385330,
"tbk": 9,
"tl": 14957,
"mb": 922582,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
691,
692,
693,
775,
776
]
},
{
"tb": 512,
"tbk": 1,
"tl": 30,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
95,
96,
97,
777,
99,
100,
31
]
},
{
"tb": 896,
"tbk": 3,
"tl": 8313,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
778,
779,
780,
781,
247
]
},
{
"tb": 9437184,
"tbk": 9,
"tl": 5742825,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
427,
428,
429,
430,
431,
432,
782
]
},
{
"tb": 224,
"tbk": 3,
"tl": 14094153,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
130,
131,
132,
133,
134,
783,
64
]
},
{
"tb": 64,
"tbk": 1,
"tl": 7313,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
784,
785,
786,
787,
788,
789,
790,
791,
792
]
},
{
"tb": 3584,
"tbk": 18,
"tl": 83,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
66,
157,
158,
159,
160,
161,
162,
258,
467,
468
]
},
{
"tb": 288,
"tbk": 1,
"tl": 33488,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
793,
794,
795,
796,
419
]
},
{
"tb": 864,
"tbk": 9,
"tl": 126,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
286,
287,
728,
729,
100,
31
]
},
{
"tb": 256,
"tbk": 1,
"tl": 632,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
66,
477,
478,
479,
554,
192,
193,
797
]
},
{
"tb": 80,
"tbk": 1,
"tl": 9053,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
95,
96,
97,
798,
799,
100,
31
]
},
{
"tb": 256,
"tbk": 1,
"tl": 12828,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
84,
85,
86,
203,
204,
205,
800,
801,
802
]
},
{
"tb": 36909875200,
"tbk": 4194304,
"tl": 53546353,
"mb": 27200,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
803,
804,
805,
806,
807,
808,
207,
208
]
},
{
"tb": 144,
"tbk": 1,
"tl": 6532234,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
809,
810,
811,
812,
813,
814,
815,
816,
817
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1721,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
209,
210,
211,
818,
468
]
},
{
"tb": 83616,
"tbk": 1610,
"tl": 59498580,
"mb": 17216,
"mbk": 16,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
691,
819,
820,
821,
822,
823,
824
]
},
{
"tb": 288,
"tbk": 9,
"tl": 130578,
"mb": 288,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
268,
269,
270,
271,
272,
273,
274,
825,
386
]
},
{
"tb": 30198988800,
"tbk": 4194304,
"tl": 20835988,
"mb": 12800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
84,
85,
86,
87,
88,
89,
303,
826,
207
]
},
{
"tb": 9437184,
"tbk": 9,
"tl": 28826134,
"mb": 9437184,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
427,
428,
429,
430,
431,
432,
827
]
},
{
"tb": 65176,
"tbk": 38,
"tl": 226084,
"mb": 32640,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
691,
692,
693,
694,
828
]
},
{
"tb": 216,
"tbk": 1,
"tl": 31112644,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
829,
830,
831,
832,
833,
64,
144,
145
]
},
{
"tb": 872415232,
"tbk": 1,
"tl": 61018144,
"mb": 872415232,
"mbk": 1,
"gb": 872415232,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
84,
85,
86,
87,
88,
89,
834,
835,
836
]
},
{
"tb": 1344,
"tbk": 3,
"tl": 14475,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
837,
838,
839,
840,
620
]
},
{
"tb": 992,
"tbk": 4,
"tl": 4050,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
171,
172,
173,
174,
175,
176,
177,
178,
841,
842,
180
]
},
{
"tb": 14400,
"tbk": 9,
"tl": 55871,
"mb": 14400,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
58,
59,
60,
61,
843,
844,
845
]
},
{
"tb": 216,
"tbk": 1,
"tl": 329,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
48,
846,
847,
848,
849,
850,
851,
852,
853
]
},
{
"tb": 216,
"tbk": 1,
"tl": 11174031,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
854,
855,
856,
857,
858,
859,
860,
861,
862
]
},
{
"tb": 2880,
"tbk": 4,
"tl": 3694,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
33,
34,
35,
36,
37,
259,
128,
129
]
},
{
"tb": 192,
"tbk": 1,
"tl": 14488,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
863,
864,
865,
866,
867,
868,
869,
870,
620
]
},
{
"tb": 72,
"tbk": 1,
"tl": 1913,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
66,
871,
872,
873,
874,
875,
876,
877,
878
]
},
{
"tb": 768,
"tbk": 1,
"tl": 4662,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
33,
34,
35,
36,
245,
475,
476,
879
]
},
{
"tb": 28809,
"tbk": 9,
"tl": 159,
"mb": 3201,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
130,
880,
881,
882,
883,
884,
885,
886,
887,
888,
889
]
},
{
"tb": 18874368,
"tbk": 9,
"tl": 135273525,
"mb": 18874368,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
427,
428,
429,
430,
431,
432,
890
]
},
{
"tb": 256,
"tbk": 1,
"tl": 36,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
171,
172,
173,
174,
175,
176,
177,
178,
891,
129,
64
]
},
{
"tb": 160,
"tbk": 1,
"tl": 14184,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
11,
12,
13,
473,
892,
893,
359
]
},
{
"tb": 72,
"tbk": 1,
"tl": 14607,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
863,
894,
895,
896,
897,
898,
620
]
},
{
"tb": 432,
"tbk": 18,
"tl": 153792564,
"mb": 432,
"mbk": 18,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
747,
748,
749,
750,
751,
752,
753,
754,
899,
900
]
},
{
"tb": 144,
"tbk": 9,
"tl": 669,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
84,
85,
86,
203,
204,
205,
439,
154,
460
]
},
{
"tb": 216,
"tbk": 1,
"tl": 31112637,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
901,
902,
903,
904,
905,
64,
144,
145
]
},
{
"tb": 2880,
"tbk": 24,
"tl": 2341,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
130,
131,
132,
133,
134,
906,
192
]
},
{
"tb": 512,
"tbk": 1,
"tl": 35,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
84,
85,
86,
87,
88,
89,
907,
389,
100
]
},
{
"tb": 3840,
"tbk": 16,
"tl": 2408,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
351,
352,
353,
908,
909
]
},
{
"tb": 480,
"tbk": 4,
"tl": 12785,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
130,
131,
132,
133,
134,
910,
911
]
},
{
"tb": 3456,
"tbk": 9,
"tl": 13686656,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
912,
913,
914,
915,
916,
917,
918,
919,
920
]
},
{
"tb": 126976,
"tbk": 4,
"tl": 1638,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
427,
428,
429,
430,
431,
432,
921
]
},
{
"tb": 576,
"tbk": 4,
"tl": 1605,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
58,
59,
60,
61,
922,
338,
180
]
},
{
"tb": 9437184,
"tbk": 9,
"tl": 3530348,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
95,
96,
97,
136,
234,
290,
923
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 261236,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
84,
85,
86,
87,
88,
89,
303,
924,
64
]
},
{
"tb": 13376,
"tbk": 32,
"tl": 128556,
"mb": 13376,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
11,
12,
13,
473,
474,
246,
247
]
},
{
"tb": 72,
"tbk": 3,
"tl": 5828878,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
747,
748,
749,
750,
751,
752,
753,
754,
91,
92,
93,
94
]
},
{
"tb": 288,
"tbk": 9,
"tl": 76896198,
"mb": 288,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
130,
131,
132,
133,
134,
925,
926
]
},
{
"tb": 512,
"tbk": 1,
"tl": 17,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
95,
96,
97,
136,
336,
927,
389
]
},
{
"tb": 1984,
"tbk": 4,
"tl": 2922,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
928,
929,
930,
931,
932,
933,
934,
935
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
28,
29,
443,
717,
64,
144
]
},
{
"tb": 14400,
"tbk": 9,
"tl": 55907,
"mb": 14400,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
58,
59,
60,
61,
936,
844,
845
]
},
{
"tb": 18874368,
"tbk": 1179648,
"tl": 699417,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
84,
85,
86,
87,
88,
89,
937,
938,
939
]
},
{
"tb": 36288,
"tbk": 54,
"tl": 82775,
"mb": 18432,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
351,
352,
353,
356,
445
]
},
{
"tb": 460800,
"tbk": 1,
"tl": 5859,
"mb": 460800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
95,
96,
97,
408,
409,
940,
247
]
},
{
"tb": 4718592,
"tbk": 9,
"tl": 24553778,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
95,
96,
97,
136,
234,
290,
941
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 202450,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
11,
12,
13,
14,
942,
943,
419
]
},
{
"tb": 192,
"tbk": 1,
"tl": 59747,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
863,
864,
865,
866,
867,
944,
129,
64,
144
]
},
{
"tb": 22752,
"tbk": 119,
"tl": 1108194,
"mb": 22752,
"mbk": 119,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
11,
12,
13,
473,
474,
945,
416
]
},
{
"tb": 288,
"tbk": 9,
"tl": 126,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
130,
880,
881,
882,
883,
884,
885,
886,
946,
888,
889
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 92326723,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
11,
12,
13,
14,
947,
208,
948
]
},
{
"tb": 4608,
"tbk": 9,
"tl": 16204,
"mb": 4608,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
95,
96,
97,
949,
389,
100,
31
]
},
{
"tb": 3328,
"tbk": 32,
"tl": 442,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
171,
570,
571,
572,
950,
951,
952
]
},
{
"tb": 2944,
"tbk": 12,
"tl": 1238,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
171,
172,
953,
954,
955,
956,
957,
958,
959,
960
]
},
{
"tb": 28800,
"tbk": 18,
"tl": 7660852,
"mb": 1600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
427,
428,
429,
430,
431,
432,
961
]
},
{
"tb": 7851737088,
"tbk": 9,
"tl": 1671689854,
"mb": 7851737088,
"mbk": 9,
"gb": 7851737088,
"gbk": 9,
"eb": 0,
"ebk": 0,
"fs": [
1,
123,
124,
125,
126,
550,
962,
963,
964
]
},
{
"tb": 9584640,
"tbk": 4,
"tl": 206198,
"mb": 9584640,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
95,
96,
97,
136,
965,
966,
419
]
},
{
"tb": 256,
"tbk": 1,
"tl": 12021,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
95,
96,
97,
408,
967,
968,
359
]
},
{
"tb": 144,
"tbk": 9,
"tl": 476,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
531,
532,
287,
728,
729,
100
]
},
{
"tb": 648,
"tbk": 1,
"tl": 31435094,
"mb": 648,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
969,
970,
971,
972,
973,
974,
975,
976,
977
]
},
{
"tb": 64,
"tbk": 1,
"tl": 9061,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
351,
352,
353,
425,
445
]
},
{
"tb": 720,
"tbk": 1,
"tl": 327605234,
"mb": 720,
"mbk": 1,
"gb": 720,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
978,
979,
980,
981,
982,
983,
984,
985,
986
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 57823,
"mb": 15872,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
268,
269,
270,
271,
272,
273,
274,
987,
449
]
},
{
"tb": 144,
"tbk": 1,
"tl": 326424038,
"mb": 144,
"mbk": 1,
"gb": 144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
988,
989,
990,
991,
992,
993,
994,
995,
996
]
},
{
"tb": 144,
"tbk": 1,
"tl": 268,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
809,
997,
998,
999,
1000,
1001,
1002,
1003,
64,
144
]
},
{
"tb": 78255,
"tbk": 90,
"tl": 59213678,
"mb": 39168,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
691,
692,
693,
775,
1004
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 31533803,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
11,
12,
13,
14,
15,
16,
1005
]
},
{
"tb": 672,
"tbk": 3,
"tl": 14094940,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
209,
210,
211,
1006,
64
]
},
{
"tb": 224,
"tbk": 3,
"tl": 14094151,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
130,
131,
132,
133,
134,
1007,
64
]
},
{
"tb": 838860800,
"tbk": 524288,
"tl": 6425709,
"mb": 1600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
84,
85,
86,
203,
204,
205,
1008,
207,
208
]
},
{
"tb": 28800,
"tbk": 18,
"tl": 7660781,
"mb": 1600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
427,
428,
429,
430,
431,
432,
1009
]
},
{
"tb": 144,
"tbk": 1,
"tl": 1942973,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
560,
1010,
1011,
1012,
92,
93,
94,
1013,
164,
64
]
},
{
"tb": 3968,
"tbk": 4,
"tl": 3677,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
411,
412,
413,
414,
1014,
259,
128
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2849,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
411,
412,
413,
414,
1014,
38,
25
]
},
{
"tb": 2688,
"tbk": 3,
"tl": 14614,
"mb": 1536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
1015,
1016,
1017,
1018,
620
]
},
{
"tb": 72,
"tbk": 1,
"tl": 3571,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
66,
1019,
1020,
1021,
1022,
1023,
1024,
1025,
1026
]
},
{
"tb": 216,
"tbk": 9,
"tl": 747,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
152,
153,
154,
460,
729,
100
]
},
{
"tb": 13248,
"tbk": 24,
"tl": 6032,
"mb": 3864,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1027,
1028,
1029,
1030,
1031,
1032
]
},
{
"tb": 512,
"tbk": 1,
"tl": 7502,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040
]
},
{
"tb": 512,
"tbk": 1,
"tl": 16,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
95,
96,
97,
136,
336,
1041,
99
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2097,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
411,
412,
413,
414,
1014,
467,
468
]
},
{
"tb": 256,
"tbk": 1,
"tl": 14450,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
268,
269,
270,
271,
272,
273,
274,
1042,
870
]
},
{
"tb": 432,
"tbk": 9,
"tl": 6013905,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
58,
59,
60,
61,
1043,
680,
681
]
},
{
"tb": 32,
"tbk": 1,
"tl": 14200,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
11,
12,
13,
473,
1044,
893,
359
]
},
{
"tb": 672,
"tbk": 3,
"tl": 49695,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
1045,
1046,
1047,
1048,
24
]
},
{
"tb": 360,
"tbk": 1,
"tl": 270427373,
"mb": 360,
"mbk": 1,
"gb": 360,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
1049,
1050,
1051,
1052,
1053,
1054,
1055,
1056,
1057
]
},
{
"tb": 224,
"tbk": 3,
"tl": 2452,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
130,
131,
132,
133,
134,
1058,
24
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 8012,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
95,
96,
97,
408,
409,
1059,
476
]
},
{
"tb": 37749024,
"tbk": 27,
"tl": 672301,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
95,
96,
97,
136,
1060,
369,
1061
]
},
{
"tb": 64,
"tbk": 1,
"tl": 7,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
784,
785,
786,
787,
788,
789,
790,
791,
1062
]
},
{
"tb": 576,
"tbk": 9,
"tl": 95262,
"mb": 576,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
351,
352,
353,
698,
355
]
},
{
"tb": 288,
"tbk": 9,
"tl": 859,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
84,
85,
86,
87,
88,
89,
1063,
760,
761
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 12043826,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
11,
12,
13,
14,
15,
16,
1064
]
},
{
"tb": 48,
"tbk": 1,
"tl": 13071898,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
48,
1065,
1066,
1067,
1068,
1069,
1070,
1071,
1072
]
},
{
"tb": 72,
"tbk": 1,
"tl": 54391,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
1073,
26,
64,
144,
145
]
},
{
"tb": 1944,
"tbk": 1,
"tl": 326424291,
"mb": 1944,
"mbk": 1,
"gb": 1944,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
648,
1074,
1075,
1076,
1077,
1078,
1079,
1080,
1081
]
},
{
"tb": 32,
"tbk": 1,
"tl": 6469,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
84,
85,
86,
203,
204,
205,
1082,
359,
31
]
},
{
"tb": 671088640,
"tbk": 10,
"tl": 31123328,
"mb": 67108864,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
427,
428,
429,
430,
431,
432,
1083
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
268,
269,
270,
271,
272,
273,
441,
598,
30
]
},
{
"tb": 15872,
"tbk": 4,
"tl": 1622,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
427,
428,
429,
430,
431,
432,
1084
]
},
{
"tb": 576,
"tbk": 9,
"tl": 1311,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
351,
352,
353,
354,
699
]
},
{
"tb": 2880,
"tbk": 18,
"tl": 27372993,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
1085,
1086,
1087,
1088,
764
]
},
{
"tb": 18874368,
"tbk": 9,
"tl": 3498438,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
1089,
1090,
1091,
1092,
1093,
1094,
1095,
1096
]
},
{
"tb": 144,
"tbk": 9,
"tl": 619,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
427,
428,
429,
430,
431,
432,
1097
]
},
{
"tb": 672,
"tbk": 3,
"tl": 45,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
209,
210,
211,
1098,
389
]
},
{
"tb": 2252800,
"tbk": 256,
"tl": 129003,
"mb": 473600,
"mbk": 33,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
803,
804,
805,
806,
807,
1099,
305,
1100
]
},
{
"tb": 2304,
"tbk": 12,
"tl": 4663,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
171,
599,
600,
601,
1101,
1102,
1103
]
},
{
"tb": 460800,
"tbk": 1,
"tl": 50528,
"mb": 460800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
20,
21,
22,
1104,
24,
25,
26
]
},
{
"tb": 288,
"tbk": 9,
"tl": 2937818187,
"mb": 288,
"mbk": 9,
"gb": 288,
"gbk": 9,
"eb": 0,
"ebk": 0,
"fs": [
27,
239,
1105,
1106,
1107,
1108,
1109
]
},
{
"tb": 2880,
"tbk": 4,
"tl": 37798,
"mb": 2880,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
33,
34,
35,
36,
245,
945,
416,
170
]
},
{
"tb": 18874368,
"tbk": 9,
"tl": 7671170,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
95,
96,
97,
136,
322,
1110,
1111
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
268,
269,
270,
271,
272,
273,
441,
442,
30
]
},
{
"tb": 28800,
"tbk": 9,
"tl": 140,
"mb": 3200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
95,
96,
97,
408,
1112,
617,
359
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 326421969,
"mb": 2097152,
"mbk": 1,
"gb": 2097152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
95,
96,
97,
136,
234,
1113,
1114
]
},
{
"tb": 672,
"tbk": 3,
"tl": 5223,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
1115,
1116,
1117,
1118,
25
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 48638,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
691,
692,
693,
694,
1119
]
},
{
"tb": 480,
"tbk": 4,
"tl": 9035,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
130,
131,
132,
133,
134,
910,
1120
]
},
{
"tb": 960,
"tbk": 4,
"tl": 1257,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
65,
66,
477,
478,
479,
554,
192,
214,
1121
]
},
{
"tb": 864,
"tbk": 1,
"tl": 326460060,
"mb": 864,
"mbk": 1,
"gb": 864,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
1122,
1123,
1124,
1125,
1126,
1127,
1128,
1129,
1130
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 55024,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
84,
85,
86,
203,
204,
205,
1131,
468,
64
]
},
{
"tb": 672,
"tbk": 3,
"tl": 42,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
209,
210,
211,
1132,
389
]
},
{
"tb": 6072,
"tbk": 11,
"tl": 4235,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1027,
1028,
1029,
1133,
1134,
1135
]
},
{
"tb": 672,
"tbk": 3,
"tl": 6023457,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
165,
209,
210,
211,
444,
357
]
},
{
"tb": 13409,
"tbk": 1,
"tl": 14569,
"mb": 13409,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
18,
19,
268,
269,
270,
271,
272,
273,
274,
1136,
447
]
},
{
"tb": 144,
"tbk": 9,
"tl": 19,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
27,
531,
718,
490,
63,
64,
144
]
},
{
"tb": 15872,
"tbk": 124,
"tl": 118,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
39,
95,
96,
97,
408,
1137,
416,
170
]
},
{
"tb": 72,
"tbk": 1,
"tl": 6411,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1138,
1139,
1140,
1141,
1142,
1143,
1144,
1145,
1146
]
}
],
"ftbl": [
"[root]",
"0x61260eaed4a9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x61260ebb0a9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260ed542f0: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed542f0: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed542f0: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed542f0: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x61260edf85bb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edf3da6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea3fdbb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260ee47075: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x61260ed6e916: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed6e916: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed6e916: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260eafafbb: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x61260ee01e5d: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x61260ee05406: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x61260eec7caa: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x61260f054b79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x61260f0535ca: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260ed6e556: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed6e556: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed6e556: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ee3cc60: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x61260ecc8bd9: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x61260ecd2cb4: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x61260ec91ace: winter_prover::Prover::generate_proof (prover/src/lib.rs:593:29)",
"0x61260eaec937: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x61260eebc82c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x61260ecc4b58: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x61260ec125a9: winter_verifier::verify (verifier/src/lib.rs:95:32)",
"0x61260ea71d99: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:118:9)",
"0x61260e8ca9d5: winterfell::main (examples/src/main.rs:83:11)",
"0x61260ebb4e8c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260ed6e966: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed6e966: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed6e966: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ee026ff: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x61260ecc8b07: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x61260ebb60ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260ed34777: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed34777: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed34777: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed34777: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edf92de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edf5697: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea41b8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260ece2131: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x61260ebb29fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260ed6d856: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed6d856: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed6d856: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x61260eddf1f9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x61260eddf1f9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x61260eddf1f9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x61260ec677be: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x61260ec65f17: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x61260eaa55ac: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:293:57)",
"0x61260ea939f5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ea939f5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ea939f5: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x61260edddbf4: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x61260eaf4598: winter_prover::trace::Trace::validate (src/trace/mod.rs:177:13)",
"0x61260ec92f21: winter_prover::Prover::generate_proof (prover/src/lib.rs:370:17)",
"0x61260ecafcd4: winter_prover::Prover::prove (prover/src/lib.rs:171:37)",
"0x61260efd6899: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x61260ef430aa: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260ed4e9d1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed4e9d1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed4e9d1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed4e9d1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edfacfb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edf3026: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea4164b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260eac6c9f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x61260ebacbbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260ed35991: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed35991: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed35991: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed35991: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edfb37b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edf0ed6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea3e78b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260ec08cd2: winter_verifier::perform_verification (verifier/src/lib.rs:212:41)",
"0x61260ea9341c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ea9341c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ea9341c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x61260edde939: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x61260edde939: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x61260edde939: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x61260ee585ed: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x61260ee58440: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x61260eddf039: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x61260eddf039: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x61260eddf039: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x61260ed6e736: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed6e736: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed6e736: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ee0d1bf: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x61260ec09cbe: winter_verifier::perform_verification (verifier/src/lib.rs:314:25)",
"0x61260ec129d2: winter_verifier::verify (verifier/src/lib.rs:110:21)",
"0x61260ed45107: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed45107: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed45107: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed45107: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edfa4fe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edf44b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea4186e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260ed0ad8f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x61260ee2f02b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x61260ee2e681: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x61260ec4212b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x61260ec178bd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x61260eae0f89: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x61260ecbca00: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x61260ed277e7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed277e7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed277e7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed277e7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edfb73e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edf17f7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea4232e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260ec63d13: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:253:9)",
"0x61260ebbaa5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260ed6eb46: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed6eb46: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed6eb46: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260eec135d: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x61260eed4152: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x61260ec91a4f: winter_prover::Prover::generate_proof (prover/src/lib.rs:590:25)",
"0x61260efe8799: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x61260efe3b39: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x61260ef46830: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61260ef48899: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61260ef23451: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61260ee02f53: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x61260eafae7b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x61260eaf2511: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:132:51)",
"0x61260ea54a1a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x61260ee97da5: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x61260ed6ecd6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed6ecd6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed6ecd6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ec8f00d: winter_prover::Prover::generate_proof (prover/src/lib.rs:300:37)",
"0x61260ea712b2: <examples::do_work::DoWorkExample<H> as examples::Example>::prove (src/do_work/mod.rs:108:9)",
"0x61260e8c9d4d: winterfell::main (examples/src/main.rs:49:17)",
"0x61260ec72d16: <examples::do_work::air::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (src/do_work/air.rs:13:9)",
"0x61260eaa4b09: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:211:31)",
"0x61260ea5bd3a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x61260eb4c0a8: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x61260ea253ba: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x61260ea4563a: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x61260ee579a3: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x61260eedb82c: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x61260ed14c22: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:348:9)",
"0x61260ee8d63b: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:50:13)",
"0x61260ec92b32: winter_prover::Prover::generate_proof (prover/src/lib.rs:403:21)",
"0x61260ef546ac: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ef546ac: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ef546ac: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x61260ef254a9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x61260ef254a9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x61260ef254a9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x61260ec67d84: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x61260ec8f583: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:33)",
"0x61260f053319: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x61260ebdf842: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61260ebf2419: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61260edc7ba2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61260eba657e: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x61260eac760c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x61260f002739: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x61260f0008ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260effcb6c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260effcb6c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260effcb6c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x61260effc62c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x61260effc62c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x61260effc62c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x61260ece21a5: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x61260ed1273c: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x61260ec09e15: winter_verifier::perform_verification (verifier/src/lib.rs:320:5)",
"0x61260ebb02bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260ed68ffe: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed68ffe: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed68ffe: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed68ffe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x61260edfa43b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edf1b76: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ee9310b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260eac001c: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x61260ebf7f79: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x61260ee04b5e: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x61260eac2d3c: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x61260ebb370a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260ed45781: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed45781: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed45781: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed45781: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edfadab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edef306: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea3f09b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260eca3c73: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:634:36)",
"0x61260ea9393c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x61260ea9393c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x61260ea9393c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x61260ee163df: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:226:50)",
"0x61260ee13903: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x61260eca43dd: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:659:26)",
"0x61260ebde972: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61260ebf2a19: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61260edc8402: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61260ee35810: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x61260ec90868: winter_prover::Prover::generate_proof (prover/src/lib.rs:514:9)",
"0x61260eaae53c: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x61260ebb590c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260ed3df91: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed3df91: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed3df91: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed3df91: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edf8edb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edf2626: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea3e4ab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260eca3ba6: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:630:42)",
"0x61260ecbe81d: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x61260ec90f26: winter_prover::Prover::generate_proof (prover/src/lib.rs:548:13)",
"0x61260ed3c666: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed3c666: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed3c666: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed3c666: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x61260edf8b6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edf15dc: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ee009be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260ee02edb: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x61260eaef393: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x61260ecbe151: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x61260ecd5df3: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x61260ed6dbc3: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x61260ed6c067: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x61260ec72e42: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::new (src/do_work/air.rs:35:23)",
"0x61260ec138d1: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:101:85)",
"0x61260ea64432: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x61260eb80c0a: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:107:27)",
"0x61260ea9dbff: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x61260eb7e9a4: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:113:9)",
"0x61260ebf3c9d: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x61260ee47152: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x61260eab4583: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x61260eac6fa8: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x61260ebb24bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260ed654c8: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed654c8: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed654c8: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed654c8: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x61260edfc72e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edf3407: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260eedc17e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260ed1fe5c: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x61260ee02a2c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x61260eec1274: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x61260ed3b187: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed3b187: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed3b187: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed3b187: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edfc29e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edf0e27: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea3e7ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260ee0995b: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x61260f054bbc: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260f054bbc: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260f054bbc: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x61260f0557fc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x61260f0557fc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x61260f0557fc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x61260f052e2c: <winter_utils::serde::byte_reader::SliceReader as winter_utils::serde::byte_reader::ByteReader>::read_vec (src/serde/byte_reader.rs:151:22)",
"0x61260eff8118: <winter_air::proof::context::Context as winter_utils::serde::Deserializable>::read_from (src/proof/context.rs:184:35)",
"0x61260efedbf7: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:27)",
"0x61260ebaedbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260ed52127: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed52127: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed52127: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed52127: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edf901e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edef6b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea41fae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260ee0fe38: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x61260ec7308f: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:60:9)",
"0x61260ed14985: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:364:13)",
"0x61260eb91670: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:40:22)",
"0x61260ee8d6e7: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:13)",
"0x61260ecbf018: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x61260ecbe833: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x61260ebd6912: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61260ebf2119: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61260edc794f: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61260ee02d8a: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x61260ed6e466: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed6e466: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed6e466: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ec8f051: winter_prover::Prover::generate_proof (prover/src/lib.rs:301:32)",
"0x61260ee181ab: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x61260ee17696: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x61260ecac4e4: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:691:36)",
"0x61260ed6c097: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x61260eccc11b: winter_prover::trace::commitment::build_segment_queries::{{closure}}::{{closure}} (src/trace/commitment.rs:162:42)",
"0x61260eb4a019: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x61260ed57f40: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed57f40: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed57f40: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed57f40: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x61260edfa14b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edf18a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea3e27b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260ee4fbca: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x61260ed299a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed299a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed299a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed299a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edfb71e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edee517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea4037e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260ece2f51: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x61260eaf047b: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x61260ee5242f: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x61260ee52504: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x61260f04ed9e: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x61260ecc501f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x61260eb7cf5f: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x61260ed4cf37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed4cf37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed4cf37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed4cf37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edfc2be: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edf52d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea3f4de: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260ec642c4: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:198:23)",
"0x61260eaeef42: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x61260eeb43fb: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x61260ece3010: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x61260eaee9cb: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x61260ea5b32c: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x61260ecc4954: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x61260e9db149: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x61260e9d9c19: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x61260e9d8030: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61260e9d8298: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x61260e9d7b5a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x61260e9d7b5a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x61260e8cc6a1: alloc::string::String::reserve (alloc/src/string.rs:1152:9)",
"0x61260e8cc6a1: <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend (alloc/src/string.rs:2173:14)",
"0x61260e8cc77c: <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter (alloc/src/string.rs:2093:9)",
"0x61260ebe5122: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61260ebf26b9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61260edc6d91: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61260ed1bbb8: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:510:13)",
"0x61260ec089d9: winter_verifier::perform_verification (verifier/src/lib.rs:183:13)",
"0x61260ed152c9: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:534:17)",
"0x61260eb77428: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x61260eac67d0: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x61260ec12907: winter_verifier::verify (verifier/src/lib.rs:108:19)",
"0x61260ee2fdab: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x61260ee2e7e1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x61260ec424eb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x61260ec1779d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x61260eae00fc: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x61260eadd911: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x61260ee8e4c0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:28)",
"0x61260ec92bd3: winter_prover::Prover::generate_proof (prover/src/lib.rs:407:21)",
"0x61260ec6ad04: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x61260ec67fbc: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x61260ec6cf48: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x61260ee23bc2: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x61260ecc1240: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x61260ee37bb1: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x61260ed2f5b7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed2f5b7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed2f5b7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed2f5b7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edf8b0e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edf0a37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea402be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260ecc8c76: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x61260eadce22: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x61260eb725c4: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x61260ee92d04: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x61260eff75bd: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:151:28)",
"0x61260efee178: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:29)",
"0x61260ec12718: winter_verifier::verify (verifier/src/lib.rs:97:38)",
"0x61260ee09bd0: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x61260ec09c0f: winter_verifier::perform_verification (verifier/src/lib.rs:308:25)",
"0x61260ebb7b1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260ed407cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed407cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed407cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed407cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x61260edfb86e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260eded947: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea3ee8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260ed1ebf6: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x61260ebb82fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260ed35135: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed35135: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed35135: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed35135: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x61260edf910e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edee737: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea3ecce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260ee161b0: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:218:46)",
"0x61260ea91909: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x61260ee594cb: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x61260ee47524: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x61260ecc2f58: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ecc2f58: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ecc2f58: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x61260edddc17: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x61260eb9ed36: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x61260eba639c: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x61260ee525d7: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x61260eec7e0b: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x61260eed51b2: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x61260eed3c96: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x61260ec64723: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:200:34)",
"0x61260ea53b0a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x61260eb271bf: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x61260ee356ec: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x61260ed1508d: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:540:13)",
"0x61260eed7ab6: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x61260f0526cc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x61260f050d9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x61260f051cf8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x61260f051cf8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x61260f04e964: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x61260f04ec13: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x61260eeb4450: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x61260ebd3ca2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61260ebf2539: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61260edcab42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61260edfdffc: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x61260ed1ed4a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x61260eedb983: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x61260ec92665: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:17)",
"0x61260ecc4df4: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x61260ecc4b12: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x61260eb7aa03: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x61260ed15239: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:536:13)",
"0x61260ec0913b: winter_verifier::perform_verification (verifier/src/lib.rs:263:61)",
"0x61260eff2d02: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:348:22)",
"0x61260efede53: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:174:32)",
"0x61260eff3f46: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:365:21)",
"0x61260eff33d6: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:146:27)",
"0x61260eebd95b: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x61260ecc49cc: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x61260ebaf2fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260eeb6776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260eeb6776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260eeb6776: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x61260eddf3b9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x61260eddf3b9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x61260eddf3b9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x61260eedb846: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x61260ee8764a: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:25:25)",
"0x61260ee117a5: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x61260ecac8e7: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:706:26)",
"0x61260ec90110: winter_prover::Prover::generate_proof (prover/src/lib.rs:472:37)",
"0x61260eccb078: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x61260ea6461a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x61260eb1ce45: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x61260eedf495: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x61260ec91bc5: winter_prover::Prover::generate_proof (prover/src/lib.rs:598:34)",
"0x61260eff2a1e: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:168:21)",
"0x61260efede38: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:176:34)",
"0x61260eac827d: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x61260ec67c8c: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x61260ecc27e9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x61260ebf3f24: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x61260ee4fca7: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x61260eadb77b: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x61260ef1e656: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ef1e656: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ef1e656: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ec6e7d0: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x61260ee8e819: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:129:9)",
"0x61260ed58ba1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed58ba1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed58ba1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed58ba1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edfbb3b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edf30b6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea3f6cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260ec8ec5d: winter_prover::Prover::generate_proof (prover/src/lib.rs:266:43)",
"0x61260eaf40ab: winter_prover::trace::Trace::validate (src/trace/mod.rs:122:26)",
"0x61260ec69db1: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x61260ea594aa: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x61260ee99a05: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x61260ebc5982: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61260ebf1c39: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61260edcaa51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61260ec6a6c9: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x61260eb6e30d: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x61260ec67d29: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x61260ee21835: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x61260eb771d0: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x61260ee5251a: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x61260ebac91c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260ed36dc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed36dc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed36dc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed36dc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edd86b3: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x61260ededbc9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea4001e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260ec8ef62: winter_prover::Prover::generate_proof (prover/src/lib.rs:291:36)",
"0x61260ee2f6eb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x61260ee2e891: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x61260ec41f4b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x61260ec179dd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x61260eae083f: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x61260ecbc6c3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x61260f000da0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61260effc5f9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61260effb5a1: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61260effbeb0: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x61260eed3e9d: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x61260ed2c317: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed2c317: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed2c317: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed2c317: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edfa06e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edf5587: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea3e47e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260ec69c6a: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x61260ee2be95: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x61260ec730bd: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:61:13)",
"0x61260ed60451: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed60451: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed60451: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed60451: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edf97db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edee136: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea3f65b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260eac697f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x61260ed2c541: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed2c541: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed2c541: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed2c541: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edfa90b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edf0276: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea4045b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260eac6b0f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x61260eaab8e9: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:641:17)",
"0x61260eafad3b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x61260eeb9e2b: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x61260ee1076a: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x61260ea57c7a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x61260ebf7d1c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x61260eac22ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x61260ec09810: winter_verifier::perform_verification (verifier/src/lib.rs:302:9)",
"0x61260ec2dd8f: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x61260ec39711: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x61260ec34caa: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x61260ebb9a9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260ed53111: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed53111: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed53111: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed53111: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edf89fb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edf1cc6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea4086b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260eb90a5c: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:82:9)",
"0x61260eff2862: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:164:22)",
"0x61260f00ed2b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x61260f00e751: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x61260f00aadb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x61260f0046cd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x61260efff84b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x61260effdf13: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x61260ee8e58d: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:33)",
"0x61260ee57299: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x61260ed1f5ae: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x61260eadd89d: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x61260ed1ecce: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x61260ed216c6: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x61260ed149ea: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:362:9)",
"0x61260ee34ea2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x61260f00e81b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x61260f00e541: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x61260f00ad7b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x61260f0053a1: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x61260f005b37: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x61260f0006db: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x61260ed2e911: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed2e911: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed2e911: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed2e911: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edf9f1b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edf5516: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea3f20b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260eac6bd7: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x61260ecc4ad6: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x61260f00eb7b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x61260f00e5f1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x61260f00abbb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x61260f00787e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x61260f008c4c: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x61260f007d8a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x61260ebd37b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61260ebf1d89: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61260edc7f32: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61260ec0a48c: winter_verifier::perform_verification (verifier/src/lib.rs:182:9)",
"0x61260ece2214: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x61260f00e9cb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x61260f00e6a1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x61260f00ac9b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x61260f005471: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x61260f005af7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x61260f00072b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x61260ee228ce: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x61260eac8185: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x61260eff4187: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x61260eff2fed: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:357:24)",
"0x61260e8ca8fd: winterfell::main (examples/src/main.rs:80:24)",
"0x61260ebba51c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260ed60f17: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed60f17: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed60f17: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed60f17: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edfab2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edf0147: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea3fa9e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260ec8e416: winter_prover::Prover::generate_proof (prover/src/lib.rs:205:38)",
"0x61260ee35580: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x61260ed44877: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed44877: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed44877: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed44877: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edf970e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edf5317: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea41ace: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260ee0d532: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x61260ebb7dbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260ed263c1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed263c1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed263c1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed263c1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edfb9db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edeed06: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea40eab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260ec08d9f: winter_verifier::perform_verification (verifier/src/lib.rs:216:40)",
"0x61260ebb001c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260ed42ee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed42ee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed42ee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed42ee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edd2bcf: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x61260edf0849: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea3fe5e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260ec12784: winter_verifier::verify (verifier/src/lib.rs:101:24)",
"0x61260ece2a4e: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x61260ed42787: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed42787: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed42787: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed42787: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edf967e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edf0807: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea4271e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260eaf233a: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:132:32)",
"0x61260ee5741a: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x61260ed52ee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed52ee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed52ee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed52ee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edf8dde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edefc57: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea4247e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260ee57994: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x61260ebea022: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61260ebf29e9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61260edc9842: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61260ec0a673: winter_verifier::perform_verification (verifier/src/lib.rs:177:9)",
"0x61260ee8afd0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:149:33)",
"0x61260ee8e9e0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:122:17)",
"0x61260eb6e436: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x61260ebba27c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260ed2b557: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed2b557: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed2b557: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed2b557: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edd979d: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x61260edf521c: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea414ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260ec7182a: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x61260f053ab0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61260f053ce9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61260f054f12: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61260ebf5564: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x61260ee4b9fc: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x61260ecc8a53: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x61260eb9ed7b: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x61260ed1bc93: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:505:13)",
"0x61260eb78484: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x61260ebace5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260ed58771: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed58771: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed58771: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed58771: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edf90cb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edf29c6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea3f0cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260ec69e5a: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x61260eff72bd: <winter_air::proof::commitments::Commitments as winter_utils::serde::Deserializable>::read_from (src/proof/commitments.rs:108:22)",
"0x61260efedbdc: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:167:27)",
"0x61260ebb151c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260ee232be: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ee232be: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ee232be: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x61260edddb77: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x61260eb7ac58: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x61260ec8e656: winter_prover::Prover::generate_proof (prover/src/lib.rs:228:27)",
"0x61260ec7312c: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:62:13)",
"0x61260ed66907: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed66907: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed66907: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed66907: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edf9fde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edf3627: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea3e93e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260ea71d54: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:112:30)",
"0x61260eac83ef: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x61260ee87b4c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:63:9)",
"0x61260ec0a247: winter_verifier::perform_verification (verifier/src/lib.rs:223:43)",
"0x61260ee4b8e0: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x61260eedf65e: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x61260eba6629: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x61260ed59637: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed59637: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed59637: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed59637: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edfcade: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edf54b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea3fd0e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260ec8ee32: winter_prover::Prover::generate_proof (prover/src/lib.rs:286:23)",
"0x61260ecd4a92: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x61260eaab4c6: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:493:32)",
"0x61260ea6109a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x61260eb2e2a2: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x61260ea2cc9b: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x61260ea49906: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x61260ebb5e4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260ea932ec: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ea932ec: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ea932ec: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x61260eddff19: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x61260eddff19: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x61260eddff19: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x61260ee585d6: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x61260eaf187b: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:235:25)",
"0x61260eebca62: examples::do_work::prover::build_do_work_trace (src/do_work/prover.rs:65:5)",
"0x61260ecb0668: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces::{{closure}} (src/do_work/prover.rs:32:27)",
"0x61260eab46f1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x61260eae322a: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x61260eae3307: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x61260ec0a156: winter_verifier::perform_verification (verifier/src/lib.rs:225:13)",
"0x61260eb7aa1e: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x61260eb93f72: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:169:36)",
"0x61260eb91f30: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:54:17)",
"0x61260ebe15e2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61260ebf2209: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61260edcc0e2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61260eac849b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x61260ebe0c02: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61260ebf1cc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61260edcbd48: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61260ec92bf6: winter_prover::Prover::generate_proof (prover/src/lib.rs:408:17)",
"0x61260ee06af6: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x61260ec09d3a: winter_verifier::perform_verification (verifier/src/lib.rs:316:28)",
"0x61260f053d49: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x61260eff9d7a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x61260ee0d1a4: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x61260ebeef22: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61260ebf1fc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61260edcbaaf: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61260ee475d9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x61260ee35312: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x61260ec927ed: winter_prover::Prover::generate_proof (prover/src/lib.rs:439:13)",
"0x61260ebb2f3a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260ed2415e: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed2415e: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed2415e: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed2415e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x61260edfa21e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edef957: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ee8676e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260ee34f64: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:142:33)",
"0x61260ebe9152: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61260ebf2389: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61260edcaff2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61260eec7f89: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x61260ec0998e: winter_verifier::perform_verification (verifier/src/lib.rs:303:42)",
"0x61260ed0ed61: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x61260ec0933e: winter_verifier::perform_verification (verifier/src/lib.rs:272:24)",
"0x61260eed7c0e: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x61260eed5104: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x61260ec9138b: winter_prover::Prover::generate_proof (prover/src/lib.rs:561:9)",
"0x61260edddebb: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260edddebb: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260edddebb: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260edddebb: <[V] as alloc::slice::Concat<T>>::concat (alloc/src/slice.rs:712:26)",
"0x61260edddcab: alloc::slice::<impl [T]>::concat (alloc/src/slice.rs:561:9)",
"0x61260ee16527: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:228:37)",
"0x61260ebb566c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260ed23c21: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed23c21: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed23c21: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed23c21: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edfa3ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260ededac6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea4201b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260ec906a3: winter_prover::Prover::generate_proof (prover/src/lib.rs:495:52)",
"0x61260eedf6eb: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x61260f053d18: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x61260f05500a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x61260f05500a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x61260f054dae: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x61260f054dae: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x61260f054e9d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x61260eff7784: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:155:27)",
"0x61260ee16476: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:228:38)",
"0x61260ee352ef: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x61260eb9a175: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x61260ebaf83c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260ed6e786: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed6e786: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed6e786: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ec8ef85: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:39)",
"0x61260ee1a4a2: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x61260ee19147: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x61260eca3df7: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:645:31)",
"0x61260eff6502: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61260eff7179: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61260eff8ae2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61260efee916: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:13)",
"0x61260effc6b6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x61260ece2b2b: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x61260eab1cb0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x61260ec0f869: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:214:32)",
"0x61260ea54603: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x61260ed29141: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed29141: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed29141: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed29141: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edfbf9b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edf0346: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea3e88b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260ec8e4e3: winter_prover::Prover::generate_proof (prover/src/lib.rs:209:39)",
"0x61260ebbb23c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260ed58977: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed58977: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed58977: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed58977: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edf965e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260eded517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea3e60e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260ec905d6: winter_prover::Prover::generate_proof (prover/src/lib.rs:491:51)",
"0x61260eff4709: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x61260eff54bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260eff8776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260eff8776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260eff8776: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260eff32b9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x61260eff370b: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:211:22)",
"0x61260efee15d: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:188:24)",
"0x61260ed2a6b1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed2a6b1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed2a6b1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed2a6b1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edf871b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edf1e16: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea4123b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260eab4409: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x61260eac723c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x61260efe3e7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260ef5457c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ef5457c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ef5457c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x61260ef24cc9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x61260ef24cc9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x61260ef24cc9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x61260ed13e2a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x61260ee231f6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x61260eac7c48: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x61260ec6cca7: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x61260eed3c77: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x61260eb8e9d0: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x61260eac6e38: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x61260eff575c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260eff8726: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260eff8726: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260eff8726: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260efedd52: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:172:33)",
"0x61260eb90bd9: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:82:31)",
"0x61260ea66553: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x61260ebba7bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260ed6e876: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed6e876: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed6e876: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ec8efc9: winter_prover::Prover::generate_proof (prover/src/lib.rs:299:44)",
"0x61260ebf9191: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x61260ee09693: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x61260ecd8a48: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x61260ece2dda: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x61260ecc54f8: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x61260eb75499: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x61260ebb440c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260ed43bc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed43bc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed43bc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed43bc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edf9a9e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edf4c79: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea3f94e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260eb9177a: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:50:26)",
"0x61260eeb408f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x61260eeb4184: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x61260ec6e83e: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x61260ec8fc77: winter_prover::Prover::generate_proof (prover/src/lib.rs:442:35)",
"0x61260ec72b27: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x61260ec708cd: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x61260ee09853: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x61260ed33227: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed33227: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed33227: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed33227: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edf923e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edf0d47: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea41bee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260ece310f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x61260eab1c8d: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x61260eedacb7: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x61260ee8ca27: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:272:18)",
"0x61260ee8b297: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:166:30)",
"0x61260ee46d42: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x61260ec64210: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:197:28)",
"0x61260eaf81f6: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x61260eec7c8f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x61260eed3bcd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x61260eb9f04d: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x61260ed13e3f: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x61260ee13872: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x61260ec8ec88: winter_prover::Prover::generate_proof (prover/src/lib.rs:268:13)",
"0x61260ee09bf3: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x61260f00776e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x61260f009220: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x61260f008428: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x61260f0011a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260f0011a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260f0011a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260f0011a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x61260f0015ee: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260f0015b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260f00284e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260f000299: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x61260eebd00c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x61260ee18c77: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x61260ee10c8c: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x61260ee177bc: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x61260eafb303: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x61260eec7c25: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x61260eba9fee: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x61260eac742b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x61260ebb17bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260ed5eb27: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed5eb27: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed5eb27: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed5eb27: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edd7b76: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x61260edf1ba7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea40d6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260eccfd5b: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x61260ebb494c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260ed28ae7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed28ae7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed28ae7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed28ae7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edfa53e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edf4d37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea40d4e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260ecb0619: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces (src/do_work/prover.rs:30:9)",
"0x61260eff3dc4: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:361:22)",
"0x61260ebb055c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260ed5a1c7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed5a1c7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed5a1c7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed5a1c7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edf906e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edee2c7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260eb8c42e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260ec8e79f: winter_prover::Prover::generate_proof (prover/src/lib.rs:243:41)",
"0x61260ed6de1c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed6de1c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed6de1c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x61260eddee79: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x61260eddee79: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x61260eddee79: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x61260ec906be: winter_prover::Prover::generate_proof (prover/src/lib.rs:500:39)",
"0x61260ee216ed: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x61260ee13940: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x61260ec927ad: winter_prover::Prover::generate_proof (prover/src/lib.rs:438:13)",
"0x61260ec92808: winter_prover::Prover::generate_proof (prover/src/lib.rs:440:13)",
"0x61260ee1626a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x61260eebd01d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x61260ee580c6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ee580c6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ee580c6: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x61260ec67ca3: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x61260ee02698: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x61260eff6012: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61260eff71a9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61260eff8878: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61260efeec1a: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:13)",
"0x61260ed5ac51: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed5ac51: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed5ac51: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed5ac51: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edf8f6b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edf3a96: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea4053b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260eac6a47: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x61260ee2eccb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x61260ee2e471: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x61260ec42f0b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x61260ec3b451: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x61260ec4177d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x61260ec3510e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x61260ed2d197: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed2d197: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed2d197: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed2d197: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edfbf6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260eded599: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea40c6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260ee0ee47: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x61260ee0d3d9: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x61260eff38d2: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:215:25)",
"0x61260ee8af6c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:148:31)",
"0x61260eb8e7fb: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x61260ebcc622: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61260ebf2839: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61260edcb252: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61260ee3cdb8: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x61260ebbaf9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260ed38d37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed38d37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed38d37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed38d37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edfa26e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260eded6a7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea3fdde: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260eca3d43: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:638:34)",
"0x61260ee3d10a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x61260ee4fa9a: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x61260ec6abe1: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x61260ec6d211: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x61260ee09755: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:144:35)",
"0x61260eae323f: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x61260ee11866: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x61260ed619a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed619a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed619a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed619a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edfc3de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edf34c9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea41ede: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260eaee5e0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x61260ecd2c1d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x61260ed3e7f7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed3e7f7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed3e7f7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed3e7f7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edfab7e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edf4f39: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea3f0ee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260ec8e603: winter_prover::Prover::generate_proof (prover/src/lib.rs:217:20)",
"0x61260eac7cae: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x61260eeb9e40: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x61260eeb4103: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x61260ebca392: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61260ebf1a59: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61260edc6b42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61260eb940d9: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:174:17)",
"0x61260ed31727: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed31727: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed31727: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed31727: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edfb5de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edf1507: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea41cfe: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260ec6b277: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x61260ee877eb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:39:30)",
"0x61260ee0a848: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x61260eccc199: winter_prover::trace::commitment::build_segment_queries::{{closure}}::{{closure}} (src/trace/commitment.rs:164:27)",
"0x61260ecca736: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:159:13)",
"0x61260f00466d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x61260efff538: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x61260effddd7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x61260ee3c782: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x61260eaaabb0: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:221:17)",
"0x61260ea55922: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x61260ee844dd: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::SpecFold>::spec_fold (iter/adapters/zip.rs:685:25)",
"0x61260ee70ee7: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::fold (iter/adapters/zip.rs:249:9)",
"0x61260ee5b9b7: <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/zip.rs:103:9)",
"0x61260ec6a8b6: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x61260ec6e76c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x61260ee226fb: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x61260ecd5eb0: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x61260ec8e8ba: winter_prover::Prover::generate_proof (prover/src/lib.rs:257:22)",
"0x61260ebe0712: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x61260ebf2149: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x61260edc9122: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x61260ecc8c91: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x61260ee3ca51: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x61260ec096c1: winter_verifier::perform_verification (verifier/src/lib.rs:295:27)",
"0x61260ece2bf6: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x61260ebabc0c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260ed4db31: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed4db31: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed4db31: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed4db31: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edfb0ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edef5a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea40e5b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260eb7a967: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x61260eedf6d0: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x61260ee0a89e: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x61260ec1cd31: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x61260ec20477: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x61260ec151bb: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x61260eff2ec9: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:352:21)",
"0x61260eb9ef3a: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x61260ebadb7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x61260ed4ff11: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x61260ed4ff11: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x61260ed4ff11: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x61260ed4ff11: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x61260edfa3db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x61260edefd46: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x61260ea3eacb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x61260ecd2c0e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)"
]
}