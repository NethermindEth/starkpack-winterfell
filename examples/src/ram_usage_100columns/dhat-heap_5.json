{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell do-work -n 5 -l 65536",
"pid": 25401,
"tg": 188805687,
"te": 207807995,
"pps": [
{
"tb": 2621440,
"tbk": 5,
"tl": 13912272,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 27805,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
15,
16,
17,
18
]
},
{
"tb": 40,
"tbk": 1,
"tl": 2786,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
25,
26,
27,
28
]
},
{
"tb": 3536,
"tbk": 18,
"tl": 80,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
29,
30,
31,
32,
33,
34,
35,
36,
17
]
},
{
"tb": 3536,
"tbk": 18,
"tl": 515,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
29,
30,
31,
32,
33,
34,
37,
38,
39
]
},
{
"tb": 20971680,
"tbk": 15,
"tl": 375558,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
40,
41,
42
]
},
{
"tb": 6856,
"tbk": 42,
"tl": 968,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
29,
30,
31,
32,
33,
34,
37,
38,
43
]
},
{
"tb": 256,
"tbk": 1,
"tl": 11723,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
44,
45,
46,
47,
48,
49,
50,
51,
52
]
},
{
"tb": 1968,
"tbk": 4,
"tl": 2931,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
53,
54,
55,
56,
57,
58,
59,
60
]
},
{
"tb": 3456,
"tbk": 12,
"tl": 4781,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
61,
62,
63,
64,
65,
66,
67
]
},
{
"tb": 120,
"tbk": 5,
"tl": 7699148,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
70,
71,
72,
73,
18
]
},
{
"tb": 120,
"tbk": 1,
"tl": 188437972,
"mb": 120,
"mbk": 1,
"gb": 120,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
74,
75,
76,
77,
78,
79,
80,
81,
82
]
},
{
"tb": 16000,
"tbk": 10,
"tl": 4326649,
"mb": 1600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
83,
84,
85,
86,
87,
88,
89
]
},
{
"tb": 6291456,
"tbk": 3,
"tl": 3150489,
"mb": 6291456,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99,
100
]
},
{
"tb": 256,
"tbk": 1,
"tl": 647,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
101,
102,
103,
104,
38,
105,
106
]
},
{
"tb": 125952,
"tbk": 4,
"tl": 1635,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
83,
84,
85,
86,
87,
88,
107
]
},
{
"tb": 512,
"tbk": 1,
"tl": 16,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
108,
109,
110
]
},
{
"tb": 524288000,
"tbk": 500,
"tl": 90722686994,
"mb": 524288000,
"mbk": 500,
"gb": 524288000,
"gbk": 500,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
90,
91,
92,
93,
94,
95,
111,
112,
113
]
},
{
"tb": 2400,
"tbk": 12,
"tl": 249,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
61,
114,
115,
116,
117,
118,
119
]
},
{
"tb": 256000,
"tbk": 1,
"tl": 11832,
"mb": 256000,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
44,
45,
46,
47,
48,
49,
50,
120,
121
]
},
{
"tb": 56,
"tbk": 1,
"tl": 3289,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
122,
123,
124,
125,
126
]
},
{
"tb": 1152,
"tbk": 2,
"tl": 11843,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
128,
129,
130,
131,
132
]
},
{
"tb": 160,
"tbk": 5,
"tl": 58037,
"mb": 160,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
133,
134,
135,
136,
137,
138
]
},
{
"tb": 512,
"tbk": 1,
"tl": 34,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
90,
91,
92,
93,
94,
95,
139,
140,
141
]
},
{
"tb": 64,
"tbk": 1,
"tl": 3557453,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
142,
143,
144,
145,
146
]
},
{
"tb": 160,
"tbk": 5,
"tl": 72,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
147,
148,
149,
150,
151,
152,
153,
154,
155,
156,
157
]
},
{
"tb": 200,
"tbk": 1,
"tl": 174353387,
"mb": 200,
"mbk": 1,
"gb": 200,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
158,
159,
160,
161,
162,
163,
164,
165,
166
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 57073,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
90,
91,
92,
167,
168,
169,
170,
17,
18
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 4009,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
171,
172,
173,
174,
175,
176,
177,
178,
179
]
},
{
"tb": 15744,
"tbk": 123,
"tl": 102,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
180,
181,
182,
183,
184,
185,
186,
187
]
},
{
"tb": 16000,
"tbk": 10,
"tl": 4326700,
"mb": 1600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
83,
84,
85,
86,
87,
88,
188
]
},
{
"tb": 288,
"tbk": 2,
"tl": 40,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
189,
190,
191,
192,
140
]
},
{
"tb": 1536,
"tbk": 2,
"tl": 938359,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
193,
194,
195,
196,
18
]
},
{
"tb": 256,
"tbk": 1,
"tl": 11358,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
90,
91,
92,
167,
168,
169,
197,
198,
199
]
},
{
"tb": 160,
"tbk": 5,
"tl": 338,
"mb": 160,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
200,
201,
202,
124
]
},
{
"tb": 16005,
"tbk": 5,
"tl": 58937,
"mb": 16005,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
44,
45,
46,
47,
48,
49,
50,
203,
204
]
},
{
"tb": 192,
"tbk": 1,
"tl": 38298,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
205,
206,
207,
208,
209,
210,
211,
18,
212
]
},
{
"tb": 84032,
"tbk": 1621,
"tl": 20656959,
"mb": 17088,
"mbk": 12,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
213,
214,
215,
216,
217,
218,
219
]
},
{
"tb": 80,
"tbk": 1,
"tl": 7786,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
220,
221,
141,
125
]
},
{
"tb": 5242880,
"tbk": 5,
"tl": 361842,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
222
]
},
{
"tb": 15744,
"tbk": 4,
"tl": 2376,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
223,
224,
225,
226,
227,
228,
229,
230,
231
]
},
{
"tb": 512,
"tbk": 1,
"tl": 18,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
108,
232,
140
]
},
{
"tb": 3536,
"tbk": 18,
"tl": 118,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
29,
30,
31,
32,
33,
34,
35,
233,
234
]
},
{
"tb": 120,
"tbk": 1,
"tl": 18699892,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
235,
236,
237,
238,
239,
18,
212,
240
]
},
{
"tb": 8,
"tbk": 1,
"tl": 1048978,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
29,
30,
31,
32,
33,
34,
241,
242,
18
]
},
{
"tb": 288,
"tbk": 2,
"tl": 3557458,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
189,
190,
191,
243,
146
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2167,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
244,
245,
246,
247,
248,
36,
17,
18
]
},
{
"tb": 5242880,
"tbk": 5,
"tl": 3275150,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
83,
84,
85,
86,
87,
88,
249
]
},
{
"tb": 480,
"tbk": 2,
"tl": 8770,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
250,
251,
252,
253,
124
]
},
{
"tb": 240,
"tbk": 1,
"tl": 4325,
"mb": 240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
254,
255,
256,
257,
258,
259,
260,
261,
262
]
},
{
"tb": 256000,
"tbk": 5,
"tl": 149637,
"mb": 256000,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
263,
264,
234,
265
]
},
{
"tb": 512,
"tbk": 1,
"tl": 6214,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
266,
267,
268,
269,
270,
271,
272,
273
]
},
{
"tb": 80,
"tbk": 5,
"tl": 525,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
274,
275,
276,
277,
278,
73
]
},
{
"tb": 15744,
"tbk": 4,
"tl": 3073,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
223,
279,
280,
281,
282,
283,
211,
18
]
},
{
"tb": 5760,
"tbk": 20,
"tl": 682,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
284,
285,
286,
287,
288
]
},
{
"tb": 16005,
"tbk": 5,
"tl": 91,
"mb": 3201,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
147,
148,
149,
150,
151,
152,
153,
154,
289,
156,
157
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2161,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
171,
290,
291,
292,
293,
294,
36,
17
]
},
{
"tb": 40,
"tbk": 1,
"tl": 2793,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
295,
296,
297,
298,
299,
300,
301,
302
]
},
{
"tb": 72,
"tbk": 1,
"tl": 1050371,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
303,
304,
305,
306,
97,
98,
99,
100,
242,
18
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 323667,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
307
]
},
{
"tb": 768,
"tbk": 1,
"tl": 4011,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
244,
245,
246,
247,
308,
309,
310,
311
]
},
{
"tb": 4026531840,
"tbk": 60,
"tl": 826294579,
"mb": 805306368,
"mbk": 12,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
223,
279,
280,
281,
312,
313,
314,
315
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 207151676,
"mb": 524288,
"mbk": 1,
"gb": 524288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
316,
317
]
},
{
"tb": 3840,
"tbk": 5,
"tl": 20612,
"mb": 3840,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
303,
318,
319,
320,
321,
322,
323,
324,
325
]
},
{
"tb": 2856,
"tbk": 4,
"tl": 29885,
"mb": 2856,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
244,
245,
246,
247,
308,
326,
327,
328
]
},
{
"tb": 2736,
"tbk": 6,
"tl": 2600,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
329,
330,
331,
332,
333,
334
]
},
{
"tb": 402653184,
"tbk": 6,
"tl": 18934904,
"mb": 67108864,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
83,
84,
85,
86,
87,
88,
335
]
},
{
"tb": 288,
"tbk": 2,
"tl": 8740,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
336,
337,
338,
339,
141
]
},
{
"tb": 80,
"tbk": 5,
"tl": 25919326,
"mb": 80,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
90,
91,
92,
93,
94,
95,
340,
341,
342
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
44,
45,
46,
47,
48,
49,
343,
344,
345
]
},
{
"tb": 13184,
"tbk": 32,
"tl": 125744,
"mb": 13184,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
171,
346,
347,
348,
349,
350,
309,
310
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 207149612,
"mb": 2097152,
"mbk": 1,
"gb": 2097152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
351,
352
]
},
{
"tb": 23867,
"tbk": 4,
"tl": 46955,
"mb": 23867,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
44,
45,
46,
47,
48,
49,
50,
353,
354
]
},
{
"tb": 23744,
"tbk": 119,
"tl": 872068,
"mb": 23744,
"mbk": 119,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
171,
346,
347,
348,
349,
350,
326,
327
]
},
{
"tb": 1080,
"tbk": 1,
"tl": 207151927,
"mb": 1080,
"mbk": 1,
"gb": 1080,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
355,
356,
357,
358,
359,
360,
361,
362,
363
]
},
{
"tb": 40,
"tbk": 1,
"tl": 22,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
364,
365,
366,
367,
368,
369,
370,
371
]
},
{
"tb": 43475,
"tbk": 50,
"tl": 20474152,
"mb": 21760,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
213,
372,
373,
374,
375
]
},
{
"tb": 1248,
"tbk": 12,
"tl": 347,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
61,
376,
377,
378,
379,
380,
381
]
},
{
"tb": 480,
"tbk": 4,
"tl": 251,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
147,
382,
383,
384,
385,
386,
233
]
},
{
"tb": 6072,
"tbk": 11,
"tl": 4369,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
387,
388,
389,
390,
391,
392
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 205974,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
171,
346,
347,
348,
393,
394,
395,
396
]
},
{
"tb": 240,
"tbk": 10,
"tl": 51838514,
"mb": 240,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
397,
398,
399,
400,
401,
402,
403,
404,
405,
406
]
},
{
"tb": 1200,
"tbk": 10,
"tl": 25919241,
"mb": 960,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
407,
342,
18,
212,
240
]
},
{
"tb": 240,
"tbk": 1,
"tl": 4256,
"mb": 240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
408,
409,
410,
411,
412,
413,
414,
415,
416
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1783,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
189,
190,
191,
417,
17
]
},
{
"tb": 80,
"tbk": 5,
"tl": 7699079,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
90,
91,
92,
167,
168,
169,
418,
71,
72
]
},
{
"tb": 80,
"tbk": 5,
"tl": 540,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
274,
419,
276,
277,
278,
73
]
},
{
"tb": 288,
"tbk": 2,
"tl": 7,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
189,
190,
191,
420,
124
]
},
{
"tb": 480,
"tbk": 2,
"tl": 8646,
"mb": 320,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
421,
422,
423,
424,
425,
426,
427,
428,
429
]
},
{
"tb": 400,
"tbk": 1,
"tl": 207795758,
"mb": 400,
"mbk": 1,
"gb": 400,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
430,
431,
432,
433,
434,
435,
436,
437,
438
]
},
{
"tb": 256000,
"tbk": 1,
"tl": 30263,
"mb": 256000,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
439,
264,
234,
265
]
},
{
"tb": 8388608000,
"tbk": 2097152,
"tl": 13558346,
"mb": 6400,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
90,
91,
92,
93,
94,
95,
440,
441,
442
]
},
{
"tb": 1920,
"tbk": 5,
"tl": 7698584,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
443,
444,
445,
446,
447,
448,
449,
450,
451
]
},
{
"tb": 10485760,
"tbk": 5,
"tl": 4289807,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
452,
453,
454
]
},
{
"tb": 16000,
"tbk": 5,
"tl": 44130,
"mb": 16000,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
90,
91,
92,
93,
94,
95,
440,
455,
124
]
},
{
"tb": 8000,
"tbk": 5,
"tl": 21468,
"mb": 8000,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
456,
457,
458,
459,
460,
461,
462
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 44,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
463
]
},
{
"tb": 576,
"tbk": 2,
"tl": 8682,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
464,
465,
466,
467,
141
]
},
{
"tb": 80,
"tbk": 5,
"tl": 11,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
274,
275,
468,
469,
18,
212
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1359,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
90,
91,
92,
167,
168,
169,
470,
471,
472
]
},
{
"tb": 512,
"tbk": 1,
"tl": 30,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
473,
110,
141,
125
]
},
{
"tb": 480,
"tbk": 4,
"tl": 11324,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
147,
382,
383,
384,
385,
474,
475
]
},
{
"tb": 13217,
"tbk": 1,
"tl": 11822,
"mb": 13217,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
44,
45,
46,
47,
48,
49,
50,
476,
121
]
},
{
"tb": 32,
"tbk": 1,
"tl": 4481,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
90,
91,
92,
167,
168,
169,
477,
124,
125
]
},
{
"tb": 101688,
"tbk": 223,
"tl": 61878,
"mb": 25536,
"mbk": 56,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
329,
330,
331,
478,
479,
480
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 74218438,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
171,
346,
347,
348,
393,
481,
482,
483
]
},
{
"tb": 64,
"tbk": 1,
"tl": 7794,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
142,
143,
144,
145,
484
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 282044,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
90,
91,
92,
93,
94,
95,
440,
485,
486
]
},
{
"tb": 288,
"tbk": 2,
"tl": 29780,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
487,
488,
489,
490,
264
]
},
{
"tb": 51360,
"tbk": 37,
"tl": 18969,
"mb": 51200,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99,
491
]
},
{
"tb": 640,
"tbk": 10,
"tl": 15395700,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
492,
493,
494,
495,
496
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 151365,
"mb": 1179648,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
497,
498,
396
]
},
{
"tb": 480,
"tbk": 5,
"tl": 141,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
499,
276,
277,
278,
73,
18
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 3494,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
171,
500,
501,
502,
503,
504,
505,
506,
507
]
},
{
"tb": 3536,
"tbk": 34,
"tl": 534,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
61,
376,
377,
378,
508,
509,
510
]
},
{
"tb": 6856,
"tbk": 42,
"tl": 159,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
29,
30,
31,
32,
33,
34,
35,
511,
283
]
},
{
"tb": 80,
"tbk": 5,
"tl": 59270,
"mb": 80,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
44,
45,
46,
47,
48,
49,
50,
512,
513
]
},
{
"tb": 9840,
"tbk": 10,
"tl": 267,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
514,
515,
516,
517,
518,
519
]
},
{
"tb": 524288000,
"tbk": 500,
"tl": 103767896926,
"mb": 524288000,
"mbk": 500,
"gb": 524288000,
"gbk": 500,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
520,
521,
522
]
},
{
"tb": 160,
"tbk": 5,
"tl": 3,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
523,
524,
125,
126
]
},
{
"tb": 40,
"tbk": 1,
"tl": 1180,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
525,
526,
527,
528,
529,
530,
531,
532
]
},
{
"tb": 160,
"tbk": 5,
"tl": 528,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
90,
91,
92,
93,
94,
95,
533,
534,
535
]
},
{
"tb": 512,
"tbk": 1,
"tl": 56,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
536,
537,
538,
539,
540,
541,
542,
543
]
},
{
"tb": 5242880,
"tbk": 5,
"tl": 1987275,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
544
]
},
{
"tb": 1584,
"tbk": 6,
"tl": 120450326,
"mb": 312,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
545,
546,
547,
548,
549,
550,
551,
552,
553
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3439,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
244,
245,
246,
247,
308,
554,
555,
123
]
},
{
"tb": 240,
"tbk": 1,
"tl": 18090602,
"mb": 240,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
556,
557,
558,
559,
560,
561,
562,
563,
564
]
},
{
"tb": 160,
"tbk": 10,
"tl": 7699701,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
565,
566,
567,
568,
569,
570,
571,
572
]
},
{
"tb": 20160,
"tbk": 30,
"tl": 17787665,
"mb": 10240,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
142,
143,
144,
573,
146
]
},
{
"tb": 3936,
"tbk": 4,
"tl": 30460,
"mb": 3936,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
171,
290,
291,
292,
293,
574,
327,
328
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 7213117,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
171,
346,
347,
348,
393,
575,
576,
577
]
},
{
"tb": 320,
"tbk": 5,
"tl": 43502,
"mb": 320,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
142,
143,
144,
578,
579
]
},
{
"tb": 1920,
"tbk": 8,
"tl": 11660,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
142,
143,
144,
580,
581
]
},
{
"tb": 480,
"tbk": 10,
"tl": 51476207,
"mb": 480,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
303,
582,
583,
584,
585,
586,
587,
588,
589
]
},
{
"tb": 120,
"tbk": 5,
"tl": 460,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
70,
71,
590,
591,
141
]
},
{
"tb": 256,
"tbk": 4,
"tl": 130325,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
592
]
},
{
"tb": 2560,
"tbk": 5,
"tl": 5618,
"mb": 2560,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
593,
140,
141,
125
]
},
{
"tb": 320,
"tbk": 5,
"tl": 813,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
142,
143,
144,
594,
595
]
},
{
"tb": 40,
"tbk": 5,
"tl": 1987383,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
101,
102,
103,
596,
597,
342,
18
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 112012,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
90,
91,
92,
93,
94,
95,
440,
598,
18
]
},
{
"tb": 480,
"tbk": 5,
"tl": 80,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
499,
276,
599,
591,
141,
125
]
},
{
"tb": 160,
"tbk": 5,
"tl": 25919211,
"mb": 160,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
147,
382,
383,
384,
385,
600,
601
]
},
{
"tb": 384,
"tbk": 2,
"tl": 6244,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
602,
603,
604,
605,
555
]
},
{
"tb": 20971680,
"tbk": 15,
"tl": 375778,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
108,
606,
41
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 11815,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
44,
45,
46,
47,
48,
49,
50,
607,
608
]
},
{
"tb": 1600,
"tbk": 10,
"tl": 15396981,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
609,
610,
611,
612,
613
]
},
{
"tb": 11744051200,
"tbk": 2097152,
"tl": 43462536,
"mb": 14400,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
614,
615,
616,
617,
618,
619,
442,
482
]
},
{
"tb": 256,
"tbk": 1,
"tl": 634,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
101,
102,
103,
104,
38,
39,
620
]
},
{
"tb": 288,
"tbk": 2,
"tl": 9142966,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
189,
190,
191,
621,
18
]
},
{
"tb": 240,
"tbk": 1,
"tl": 207172647,
"mb": 240,
"mbk": 1,
"gb": 240,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
622,
623,
624,
625,
626,
627,
628,
18
]
},
{
"tb": 2880,
"tbk": 10,
"tl": 222,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
629,
630,
631,
632,
633,
634,
635,
636,
637
]
},
{
"tb": 770591,
"tbk": 9,
"tl": 12065,
"mb": 512750,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
213,
372,
373,
374,
638
]
},
{
"tb": 16000,
"tbk": 5,
"tl": 84,
"mb": 3200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
200,
639,
202,
124
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4256,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
640,
641,
642,
643,
644,
645,
646,
647
]
},
{
"tb": 480,
"tbk": 1,
"tl": 207172767,
"mb": 480,
"mbk": 1,
"gb": 480,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
648,
649,
650,
651,
652,
653,
654,
655,
656
]
},
{
"tb": 120,
"tbk": 1,
"tl": 18699875,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
74,
657,
658,
659,
660,
18,
212,
240
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 133594,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
452,
661,
662
]
},
{
"tb": 8000,
"tbk": 5,
"tl": 21447,
"mb": 8000,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
456,
457,
458,
459,
663,
461,
462
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1049599,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
90,
91,
92,
93,
94,
95,
340,
664,
665,
666,
667
]
},
{
"tb": 41943040,
"tbk": 20,
"tl": 101910634,
"mb": 41943040,
"mbk": 20,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
668,
669,
670
]
},
{
"tb": 224,
"tbk": 1,
"tl": 11839,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
44,
45,
46,
47,
48,
49,
50,
671,
672
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
673,
674,
675,
628,
18,
212
]
},
{
"tb": 2304,
"tbk": 12,
"tl": 4886,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
61,
676,
677,
678,
679,
680,
681
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 26677,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
213,
372,
373,
682,
683
]
},
{
"tb": 288,
"tbk": 1,
"tl": 32401,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
684,
685,
686,
687,
396
]
},
{
"tb": 160,
"tbk": 1,
"tl": 141,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
688,
689,
690,
691,
692,
693,
694,
695,
696
]
},
{
"tb": 40,
"tbk": 1,
"tl": 2803,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
697,
698,
699,
700,
701,
702,
703,
704
]
},
{
"tb": 576,
"tbk": 4,
"tl": 1601,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
456,
457,
458,
459,
705,
706,
471
]
},
{
"tb": 13217,
"tbk": 1,
"tl": 11811,
"mb": 13217,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
44,
45,
46,
47,
48,
49,
50,
707,
608
]
},
{
"tb": 15744,
"tbk": 4,
"tl": 32922,
"mb": 15744,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
708,
327,
328,
124
]
},
{
"tb": 15744,
"tbk": 123,
"tl": 128,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
200,
709,
327,
328
]
},
{
"tb": 72,
"tbk": 1,
"tl": 11837,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
205,
710,
711,
712,
713,
714,
132
]
},
{
"tb": 2880,
"tbk": 24,
"tl": 2415,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
147,
382,
383,
384,
385,
715,
38
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 1049581,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99,
716
]
},
{
"tb": 40,
"tbk": 1,
"tl": 4457,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
717,
718,
719,
720,
721,
722,
723,
724,
725
]
},
{
"tb": 204800,
"tbk": 128,
"tl": 603,
"mb": 1600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
90,
91,
92,
93,
94,
95,
440,
726,
727
]
},
{
"tb": 256000,
"tbk": 1,
"tl": 4469,
"mb": 256000,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
200,
728,
729,
555
]
},
{
"tb": 360,
"tbk": 15,
"tl": 312,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
730,
731,
732,
733,
734,
735,
736,
737,
738
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 543,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
147,
382,
383,
384,
385,
386,
511
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2475,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
171,
290,
291,
292,
293,
294,
233,
234
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 736374,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
739,
740,
741
]
},
{
"tb": 5440,
"tbk": 10,
"tl": 118,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
742,
743,
744,
745,
746,
747
]
},
{
"tb": 9584640,
"tbk": 4,
"tl": 209637,
"mb": 9584640,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
748,
749,
396
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 324282,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
90,
91,
92,
167,
168,
169,
750,
751,
18
]
},
{
"tb": 256,
"tbk": 1,
"tl": 10058,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
200,
752,
753,
124
]
},
{
"tb": 984,
"tbk": 4,
"tl": 4140,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
61,
754,
755,
756,
757,
758,
759,
760,
761,
762,
471
]
},
{
"tb": 224,
"tbk": 1,
"tl": 9755,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
763,
764,
765,
766,
328
]
},
{
"tb": 80,
"tbk": 5,
"tl": 413,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
90,
91,
92,
167,
168,
169,
418,
71,
590
]
},
{
"tb": 512,
"tbk": 1,
"tl": 10,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
767,
768,
769,
770,
771,
772,
773,
774
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 7044,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
775,
776,
777,
778,
779
]
},
{
"tb": 160,
"tbk": 5,
"tl": 1035759330,
"mb": 160,
"mbk": 5,
"gb": 160,
"gbk": 5,
"eb": 0,
"ebk": 0,
"fs": [
68,
133,
780,
781,
782,
783,
784
]
},
{
"tb": 64,
"tbk": 1,
"tl": 3,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
785,
786,
787,
788,
789,
790,
791,
792,
793
]
},
{
"tb": 3536,
"tbk": 18,
"tl": 515,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
29,
30,
31,
32,
33,
34,
37,
38,
105
]
},
{
"tb": 80,
"tbk": 5,
"tl": 29,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
274,
419,
468,
469,
18,
212
]
},
{
"tb": 872415232,
"tbk": 1,
"tl": 55475084,
"mb": 872415232,
"mbk": 1,
"gb": 872415232,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
90,
91,
92,
93,
94,
95,
794,
795,
796
]
},
{
"tb": 240,
"tbk": 5,
"tl": 3407674,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
456,
457,
458,
459,
797,
798,
799
]
},
{
"tb": 72,
"tbk": 3,
"tl": 3148790,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
397,
398,
399,
400,
401,
402,
403,
404,
664,
665,
666,
667
]
},
{
"tb": 13184,
"tbk": 32,
"tl": 107574,
"mb": 13184,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
171,
346,
347,
348,
349,
350,
554,
555
]
},
{
"tb": 48,
"tbk": 1,
"tl": 8262205,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
303,
800,
801,
802,
803,
804,
805,
806,
807
]
},
{
"tb": 120,
"tbk": 1,
"tl": 29,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
303,
304,
305,
306,
97,
98,
99,
491,
808,
628
]
},
{
"tb": 256000,
"tbk": 160,
"tl": 648066,
"mb": 256000,
"mbk": 160,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
90,
91,
92,
167,
168,
169,
809,
810,
811
]
},
{
"tb": 16,
"tbk": 1,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
44,
45,
46,
47,
48,
49,
812,
813,
124
]
},
{
"tb": 512,
"tbk": 4,
"tl": 958,
"mb": 512,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
814,
815,
816,
817,
511
]
},
{
"tb": 80,
"tbk": 5,
"tl": 382,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
83,
84,
85,
86,
87,
88,
818
]
},
{
"tb": 96,
"tbk": 2,
"tl": 9142960,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
147,
382,
383,
384,
385,
819,
18
]
},
{
"tb": 80,
"tbk": 5,
"tl": 1035863724,
"mb": 80,
"mbk": 5,
"gb": 80,
"gbk": 5,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
44,
45,
46,
47,
48,
49,
812,
820,
821
]
},
{
"tb": 320,
"tbk": 5,
"tl": 43527,
"mb": 320,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
142,
143,
144,
594,
579
]
},
{
"tb": 10485760,
"tbk": 5,
"tl": 1969000,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
822,
823,
824,
825,
826,
827,
828,
829
]
},
{
"tb": 40640,
"tbk": 35,
"tl": 132,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
142,
143,
144,
830,
831
]
},
{
"tb": 256,
"tbk": 1,
"tl": 13,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
90,
91,
92,
93,
94,
95,
832,
211,
18
]
},
{
"tb": 16776960,
"tbk": 64,
"tl": 59704,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
142,
143,
144,
833,
18
]
},
{
"tb": 3840,
"tbk": 16,
"tl": 2412,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
142,
143,
144,
834,
835
]
},
{
"tb": 192,
"tbk": 1,
"tl": 11765,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
205,
206,
207,
208,
209,
836,
837,
52,
132
]
},
{
"tb": 72,
"tbk": 1,
"tl": 32585,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
838,
265,
18,
212,
240
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
44,
45,
46,
47,
48,
49,
343,
344,
675
]
},
{
"tb": 12000,
"tbk": 5,
"tl": 90105960,
"mb": 12000,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
303,
304,
305,
306,
97,
98,
99,
839,
840,
841
]
},
{
"tb": 10485760,
"tbk": 5,
"tl": 48524756,
"mb": 10485760,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
83,
84,
85,
86,
87,
88,
842
]
},
{
"tb": 480,
"tbk": 5,
"tl": 62,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
843,
844,
845,
846,
847,
848,
849,
850,
851
]
},
{
"tb": 480,
"tbk": 4,
"tl": 7762,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
147,
382,
383,
384,
385,
474,
852
]
},
{
"tb": 240,
"tbk": 5,
"tl": 36975,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
853,
486,
18,
212,
240
]
},
{
"tb": 41943040,
"tbk": 5,
"tl": 118877640,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
854,
855,
856
]
},
{
"tb": 1920,
"tbk": 10,
"tl": 342,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
857,
858,
859,
860,
861,
862,
863,
864,
865
]
},
{
"tb": 120,
"tbk": 1,
"tl": 6339091,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
866,
867,
868,
869,
870,
871,
872,
873,
874
]
},
{
"tb": 256,
"tbk": 1,
"tl": 12,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
61,
754,
755,
756,
757,
758,
759,
760,
875,
211,
18
]
},
{
"tb": 32,
"tbk": 1,
"tl": 11523,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
171,
346,
347,
348,
349,
876,
877,
124
]
},
{
"tb": 80,
"tbk": 5,
"tl": 547,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
90,
91,
92,
93,
94,
95,
878,
534,
535
]
},
{
"tb": 160,
"tbk": 1,
"tl": 104,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
688,
879,
880,
881,
882,
883,
884,
885,
886
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 5979,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
200,
728,
887,
310
]
},
{
"tb": 16000,
"tbk": 5,
"tl": 43277,
"mb": 16000,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
90,
91,
92,
93,
94,
95,
888,
889,
890
]
},
{
"tb": 480,
"tbk": 4,
"tl": 211,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
147,
382,
383,
384,
385,
386,
36
]
},
{
"tb": 12000,
"tbk": 5,
"tl": 1037689447,
"mb": 12000,
"mbk": 5,
"gb": 12000,
"gbk": 5,
"eb": 0,
"ebk": 0,
"fs": [
1,
303,
891,
892,
893,
894,
895,
896,
897,
898
]
},
{
"tb": 80,
"tbk": 5,
"tl": 283,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
274,
275,
276,
599,
591,
141
]
},
{
"tb": 32,
"tbk": 1,
"tl": 3982,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
899,
900,
901,
902,
903,
904,
905,
906,
907
]
},
{
"tb": 15744,
"tbk": 4,
"tl": 46971,
"mb": 15744,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
44,
45,
46,
47,
48,
49,
50,
908,
354
]
},
{
"tb": 13800,
"tbk": 25,
"tl": 6254,
"mb": 3864,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
387,
388,
389,
909,
910,
911
]
},
{
"tb": 2560,
"tbk": 5,
"tl": 5645,
"mb": 2560,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
912,
140,
141,
125
]
},
{
"tb": 400,
"tbk": 5,
"tl": 7697775,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
913,
914,
915,
916,
917,
918,
919,
920,
921
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
44,
45,
46,
47,
48,
49,
343,
922,
345
]
},
{
"tb": 24,
"tbk": 1,
"tl": 11819,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
923,
924,
121,
132
]
},
{
"tb": 3355443200,
"tbk": 2097152,
"tl": 38040828,
"mb": 1600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
90,
91,
92,
167,
168,
169,
925,
442,
482
]
},
{
"tb": 480,
"tbk": 5,
"tl": 62,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
499,
468,
469,
18,
212,
240
]
},
{
"tb": 716800,
"tbk": 128,
"tl": 98843,
"mb": 262400,
"mbk": 33,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
614,
615,
616,
617,
618,
926,
727,
927
]
},
{
"tb": 80,
"tbk": 1,
"tl": 4067829,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
928,
929,
930,
931,
932,
933,
934,
935,
936
]
},
{
"tb": 160,
"tbk": 5,
"tl": 58917,
"mb": 160,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
44,
45,
46,
47,
48,
49,
50,
937,
204
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4266,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
938,
939,
141,
125
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1365,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
61,
754,
755,
756,
757,
758,
759,
760,
940,
471,
472
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 4324,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
775,
776,
777,
778,
941
]
},
{
"tb": 40,
"tbk": 1,
"tl": 174353340,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
942,
943,
944,
945,
946,
947,
948,
949,
950
]
},
{
"tb": 288,
"tbk": 2,
"tl": 42,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
189,
190,
191,
951,
140
]
},
{
"tb": 160,
"tbk": 5,
"tl": 7699115,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
952,
953,
954,
955,
956,
957,
958,
959,
71,
72
]
},
{
"tb": 16032,
"tbk": 11,
"tl": 52967386,
"mb": 16032,
"mbk": 11,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
960,
961,
962,
963,
964,
965,
966,
967
]
},
{
"tb": 32,
"tbk": 1,
"tl": 6,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
899,
900,
901,
902,
903,
904,
905,
906,
968
]
},
{
"tb": 160,
"tbk": 5,
"tl": 436,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
952,
953,
954,
955,
956,
957,
958,
959,
71,
590
]
},
{
"tb": 15744,
"tbk": 4,
"tl": 610,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
108,
969,
706
]
},
{
"tb": 15744,
"tbk": 4,
"tl": 1619,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
83,
84,
85,
86,
87,
88,
970
]
},
{
"tb": 40,
"tbk": 1,
"tl": 2778,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
971,
972,
973,
974,
975,
976,
977,
978
]
},
{
"tb": 360,
"tbk": 1,
"tl": 18878186,
"mb": 360,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
979,
980,
981,
982,
983,
984,
985,
986,
987
]
},
{
"tb": 576,
"tbk": 2,
"tl": 11766,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
988,
989,
990,
991,
132
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 28724,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
213,
372,
373,
682,
992
]
},
{
"tb": 240,
"tbk": 5,
"tl": 25602090,
"mb": 240,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
993,
994,
995,
996,
997,
998
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3748,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
303,
304,
305,
306,
97,
98,
99,
491,
999,
234
]
},
{
"tb": 120,
"tbk": 5,
"tl": 25919343,
"mb": 120,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
397,
398,
399,
400,
401,
402,
403,
404,
341,
342
]
},
{
"tb": 73880,
"tbk": 39,
"tl": 139169,
"mb": 36992,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
213,
372,
373,
682,
1000
]
},
{
"tb": 256000,
"tbk": 5,
"tl": 32527,
"mb": 256000,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
200,
728,
1001,
555
]
},
{
"tb": 96,
"tbk": 2,
"tl": 2076,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
147,
382,
383,
384,
385,
1002,
264
]
},
{
"tb": 838860800,
"tbk": 524288,
"tl": 11816939,
"mb": 1600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
90,
91,
92,
167,
168,
169,
1003,
442,
482
]
},
{
"tb": 240,
"tbk": 10,
"tl": 15397024,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
397,
398,
399,
400,
401,
402,
403,
404,
1004,
613
]
},
{
"tb": 40,
"tbk": 1,
"tl": 2771,
"mb": 40,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
1005,
1006,
1007,
1008,
1009,
1010,
1011,
1012
]
},
{
"tb": 12000,
"tbk": 5,
"tl": 914117909,
"mb": 12000,
"mbk": 5,
"gb": 12000,
"gbk": 5,
"eb": 0,
"ebk": 0,
"fs": [
1,
303,
1013,
1014,
1015,
1016,
1017,
1018,
1019,
1020
]
},
{
"tb": 96,
"tbk": 2,
"tl": 9142958,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
147,
382,
383,
384,
385,
1021,
18
]
},
{
"tb": 80,
"tbk": 5,
"tl": 298,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
274,
419,
276,
599,
591,
141
]
},
{
"tb": 160,
"tbk": 5,
"tl": 32133,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
1022,
486,
18,
212,
240
]
},
{
"tb": 952,
"tbk": 4,
"tl": 1326,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
101,
102,
103,
104,
38,
43,
1023
]
},
{
"tb": 20160,
"tbk": 30,
"tl": 39456,
"mb": 10240,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
142,
143,
144,
573,
484
]
},
{
"tb": 2856,
"tbk": 4,
"tl": 3974,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
244,
245,
246,
247,
248,
511,
283,
211
]
},
{
"tb": 107392,
"tbk": 414,
"tl": 235238,
"mb": 16128,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
171,
1024,
1025,
1026,
1027,
1028,
1029,
1030,
1031
]
},
{
"tb": 288,
"tbk": 2,
"tl": 7819,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
189,
190,
191,
243,
484
]
},
{
"tb": 15744,
"tbk": 4,
"tl": 523,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
83,
84,
85,
86,
87,
88,
1032
]
},
{
"tb": 33554432,
"tbk": 524288,
"tl": 50911067,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1033,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041
]
},
{
"tb": 2097152,
"tbk": 2,
"tl": 16521161,
"mb": 2097152,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
90,
91,
92,
167,
168,
169,
1042,
1043,
1044
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 188717,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
171,
346,
347,
348,
393,
575,
576,
1045
]
},
{
"tb": 4362076160,
"tbk": 5,
"tl": 611353629,
"mb": 4362076160,
"mbk": 5,
"gb": 4362076160,
"gbk": 5,
"eb": 0,
"ebk": 0,
"fs": [
1,
223,
279,
280,
281,
312,
1046,
1047,
1048
]
},
{
"tb": 240,
"tbk": 10,
"tl": 514,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
1049,
1050,
1051,
1052,
1053,
1054
]
},
{
"tb": 120,
"tbk": 1,
"tl": 18699880,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
303,
1055,
1056,
1057,
1058,
18,
212,
240
]
},
{
"tb": 288,
"tbk": 2,
"tl": 3744,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
1059,
1060,
1061,
1062,
234
]
},
{
"tb": 144,
"tbk": 1,
"tl": 1049611,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
843,
1063,
1064,
1065,
665,
666,
667,
1066,
242,
18
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
673,
674,
345,
125,
126
]
},
{
"tb": 96,
"tbk": 1,
"tl": 9751,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
189,
190,
191,
1067,
328
]
},
{
"tb": 120,
"tbk": 1,
"tl": 255,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
303,
1068,
1069,
1070,
1071,
1072,
1073,
1074,
1075
]
},
{
"tb": 24,
"tbk": 2,
"tl": 2,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
44,
45,
46,
47,
48,
49,
343,
922,
675
]
},
{
"tb": 40,
"tbk": 1,
"tl": 188265736,
"mb": 40,
"mbk": 1,
"gb": 40,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
942,
1076,
1077,
1078,
1079,
1080,
1081,
1082,
1083
]
},
{
"tb": 10485760,
"tbk": 655360,
"tl": 382214,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
90,
91,
92,
93,
94,
95,
1084,
1085,
1086
]
},
{
"tb": 80,
"tbk": 5,
"tl": 3407650,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
456,
457,
458,
459,
1087,
798,
799
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 7315532,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
171,
346,
347,
348,
393,
1088,
1089,
1090
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 1715307,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
854,
855,
1091
]
},
{
"tb": 80,
"tbk": 5,
"tl": 918896,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
456,
457,
458,
459,
1092,
469,
18
]
},
{
"tb": 1080,
"tbk": 1,
"tl": 11632,
"mb": 1080,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
355,
1093,
1094,
1095,
1096,
1097,
1098,
1099,
1100
]
},
{
"tb": 8000,
"tbk": 5,
"tl": 622430,
"mb": 1600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
456,
457,
458,
459,
1101,
1102,
1103
]
},
{
"tb": 2928,
"tbk": 12,
"tl": 1265,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
61,
754,
1104,
1105,
1106,
1107,
1108,
1109,
1110,
1111
]
},
{
"tb": 120,
"tbk": 1,
"tl": 18699886,
"mb": 120,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1112,
1113,
1114,
1115,
1116,
18,
212,
240
]
},
{
"tb": 3936,
"tbk": 4,
"tl": 3957,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
171,
290,
291,
292,
293,
294,
511,
283
]
},
{
"tb": 80,
"tbk": 1,
"tl": 203,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
928,
1117,
1118,
1119,
1120,
1121,
1122,
1123,
18,
212
]
},
{
"tb": 524288000,
"tbk": 500,
"tl": 9002802501,
"mb": 524288000,
"mbk": 500,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99,
839
]
},
{
"tb": 160,
"tbk": 1,
"tl": 11511,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
171,
346,
347,
348,
349,
1124,
877,
124
]
},
{
"tb": 6528,
"tbk": 34,
"tl": 13844,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
61,
676,
677,
678,
1125,
1126,
1127
]
},
{
"tb": 24,
"tbk": 1,
"tl": 1049588,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
303,
304,
305,
306,
97,
98,
99,
716,
242,
18
]
},
{
"tb": 240,
"tbk": 10,
"tl": 335,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
1128,
1050,
1051,
1052,
1053,
1054
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 18972505,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
171,
346,
347,
348,
393,
575,
576,
1129
]
},
{
"tb": 320,
"tbk": 5,
"tl": 780,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
142,
143,
144,
578,
595
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2480,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
244,
245,
246,
247,
248,
233,
234,
265
]
},
{
"tb": 512,
"tbk": 1,
"tl": 18,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
1130,
110,
141,
125
]
},
{
"tb": 5242880,
"tbk": 5,
"tl": 9853704,
"mb": 5242880,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
83,
84,
85,
86,
87,
88,
1131
]
},
{
"tb": 80,
"tbk": 1,
"tl": 207151707,
"mb": 80,
"mbk": 1,
"gb": 80,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
1132,
1133,
1134,
1135,
1136,
1137,
1138,
1139,
1140
]
},
{
"tb": 160,
"tbk": 5,
"tl": 1158,
"mb": 160,
"mbk": 5,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
523,
1141,
1142,
1143,
1144,
1145
]
},
{
"tb": 288,
"tbk": 2,
"tl": 4073,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
127,
189,
190,
191,
1146,
486
]
}
],
"ftbl": [
"[root]",
"0x63bc9cbeb4a9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x63bc9ccb40ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9ce6c736: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce6c736: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce6c736: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9cbf8e7b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x63bc9cbed393: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x63bc9cdbd018: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x63bc9cd62210: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:197:28)",
"0x63bc9d152b79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x63bc9d1515ca: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9ce6c556: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce6c556: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce6c556: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9cf498e0: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x63bc9cfdd65e: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x63bc9cd8fbc5: winter_prover::Prover::generate_proof (prover/src/lib.rs:598:34)",
"0x63bc9cdadcd4: winter_prover::Prover::prove (prover/src/lib.rs:171:37)",
"0x63bc9d0d4899: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x63bc9d0410aa: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9ce2a541: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce2a541: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce2a541: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce2a541: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cef890b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9ceee276: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3e45b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cbc4b0f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x63bc9d0526ac: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9d0526ac: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9d0526ac: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x63bc9d0234a9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63bc9d0234a9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63bc9d0234a9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x63bc9cf00a2c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x63bc9cfdd495: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x63bc9ccf5f79: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x63bc9cf02b5e: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x63bc9cbc0d3c: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x63bc9cd68be1: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x63bc9cd65fbc: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x63bc9cd6b211: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x63bc9cbac53c: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x63bc9d152bbc: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9d152bbc: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9d152bbc: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x63bc9d1537fc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63bc9d1537fc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63bc9d1537fc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x63bc9d150e2c: <winter_utils::serde::byte_reader::SliceReader as winter_utils::serde::byte_reader::ByteReader>::read_vec (src/serde/byte_reader.rs:151:22)",
"0x63bc9d0f18d2: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:215:25)",
"0x63bc9d0ec15d: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:188:24)",
"0x63bc9ce31227: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce31227: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce31227: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce31227: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cef723e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9ceeed47: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3fbee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cde110f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x63bc9d100739: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x63bc9d10c9cb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x63bc9d10c6a1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x63bc9d108c9b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x63bc9d103471: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x63bc9d103af7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x63bc9d0fe72b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x63bc9cbea937: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x63bc9cf559a3: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x63bc9cfd982c: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x63bc9ce12c22: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:348:9)",
"0x63bc9cf8b63b: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:50:13)",
"0x63bc9cd90b32: winter_prover::Prover::generate_proof (prover/src/lib.rs:403:21)",
"0x63bc9ccb390c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9ce3bf91: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce3bf91: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce3bf91: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce3bf91: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cef6edb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9cef0626: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3c4ab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cda1ba6: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:630:42)",
"0x63bc9d1506cc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x63bc9d14ed9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x63bc9d14fcf8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x63bc9d14fcf8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x63bc9d14c964: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x63bc9d14cc13: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x63bc9cfbb01d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x63bc9cb9141c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9cb9141c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9cb9141c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x63bc9cedc939: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63bc9cedc939: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63bc9cedc939: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x63bc9ce6bbc3: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x63bc9cedd1f9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63bc9cedd1f9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63bc9cedd1f9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x63bc9cd65c8c: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x63bc9d01c656: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9d01c656: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9d01c656: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ccf5d1c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x63bc9cbc02ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x63bc9cd07810: winter_verifier::perform_verification (verifier/src/lib.rs:302:9)",
"0x63bc9cfb208f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x63bc9cbecf42: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x63bc9cf0b3d9: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x63bc9cd07cbe: winter_verifier::perform_verification (verifier/src/lib.rs:314:25)",
"0x63bc9cd62723: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:200:34)",
"0x63bc9cb51b0a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63bc9cc251bf: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x63bc9d10c81b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x63bc9d10c541: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x63bc9d108d7b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x63bc9d1033a1: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x63bc9d103b37: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x63bc9d0fe6db: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x63bc9d0f0d02: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:348:22)",
"0x63bc9d0ebe53: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:174:32)",
"0x63bc9cbb26f1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x63bc9cbc4fa8: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x63bc9cd10907: winter_verifier::verify (verifier/src/lib.rs:108:19)",
"0x63bc9cb6fd99: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:118:9)",
"0x63bc9c9c89d5: winterfell::main (examples/src/main.rs:83:11)",
"0x63bc9d151319: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x63bc9d0f4012: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63bc9d0f51a9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63bc9d0f6878: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63bc9d0ecc1a: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:13)",
"0x63bc9c9c88fd: winterfell::main (examples/src/main.rs:80:24)",
"0x63bc9cd70e42: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::new (src/do_work/air.rs:35:23)",
"0x63bc9cd118d1: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:101:85)",
"0x63bc9cb62432: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63bc9cc7ec0a: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:107:27)",
"0x63bc9cb9bbff: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x63bc9cc7c9a4: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:113:9)",
"0x63bc9cf07693: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x63bc9cd07c0f: winter_verifier::perform_verification (verifier/src/lib.rs:308:25)",
"0x63bc9cd109d2: winter_verifier::verify (verifier/src/lib.rs:110:21)",
"0x63bc9cce3122: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63bc9ccf06b9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63bc9cec4d91: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63bc9ce1308d: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:540:13)",
"0x63bc9cc75428: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x63bc9d0e6799: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x63bc9d0e1e7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9d05257c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9d05257c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9d05257c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x63bc9d022cc9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63bc9d022cc9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63bc9d022cc9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x63bc9ce11e3f: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x63bc9cf211f6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x63bc9cbc5c48: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x63bc9ccb8f9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9ce36d37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce36d37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce36d37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce36d37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cef826e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9ceeb6a7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3ddde: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cda1d43: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:638:34)",
"0x63bc9cb9193c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63bc9cb9193c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63bc9cb9193c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x63bc9cfdd6d0: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x63bc9ccaea9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9ce55f40: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce55f40: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce55f40: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce55f40: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x63bc9cef814b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9ceef8a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3c27b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cf4dbca: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x63bc9ce43107: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce43107: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce43107: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce43107: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cef84fe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9cef24b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3f86e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9ce08d8f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x63bc9cfbb00c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x63bc9ccdc972: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63bc9ccf0a19: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63bc9cec6402: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63bc9cf0889e: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x63bc9ccdec02: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63bc9ccefcc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63bc9cec9d48: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63bc9cd90bf6: winter_prover::Prover::generate_proof (prover/src/lib.rs:408:17)",
"0x63bc9cfd5c0e: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x63bc9cfd3104: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x63bc9cd8f38b: winter_prover::Prover::generate_proof (prover/src/lib.rs:561:9)",
"0x63bc9cb8f909: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x63bc9cf208ce: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x63bc9cbc6185: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x63bc9d0f55bd: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:151:28)",
"0x63bc9d0ec178: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:29)",
"0x63bc9d0f2709: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x63bc9d0f34bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9d0f6776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9d0f6776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9d0f6776: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9cfd1bcd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x63bc9cd8fa4f: winter_prover::Prover::generate_proof (prover/src/lib.rs:590:25)",
"0x63bc9cb6f2b2: <examples::do_work::DoWorkExample<H> as examples::Example>::prove (src/do_work/mod.rs:108:9)",
"0x63bc9d151ab0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63bc9d151d18: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x63bc9d15300a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x63bc9d15300a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x63bc9d152dae: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x63bc9d152dae: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x63bc9d152e9d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x63bc9ce0cd61: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x63bc9cd0733e: winter_verifier::perform_verification (verifier/src/lib.rs:272:24)",
"0x63bc9cd6af48: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x63bc9ccb8a5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9ce279a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce279a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce279a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce279a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cef971e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9ceec517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3e37e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cde0f51: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x63bc9cf07853: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x63bc9cdc6b07: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x63bc9cdd0cb4: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x63bc9ccad83c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9ce6c786: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce6c786: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce6c786: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9cd8cf85: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:39)",
"0x63bc9c9c7d4d: winterfell::main (examples/src/main.rs:49:17)",
"0x63bc9cd65d84: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x63bc9cd8d583: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:33)",
"0x63bc9ce13239: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:536:13)",
"0x63bc9ccb2e8c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9ce6c966: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce6c966: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce6c966: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9cf006ff: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x63bc9cf33312: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x63bc9ccdf5e2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63bc9ccf0209: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63bc9ceca0e2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63bc9cbc649b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x63bc9ccaabbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9ce33991: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce33991: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce33991: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce33991: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cef937b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9ceeeed6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3c78b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cd06cd2: winter_verifier::perform_verification (verifier/src/lib.rs:212:41)",
"0x63bc9cf3ac60: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x63bc9cdc6bd9: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x63bc9cd8face: winter_prover::Prover::generate_proof (prover/src/lib.rs:593:29)",
"0x63bc9ce2b197: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce2b197: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce2b197: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce2b197: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cef9f6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9ceeb599: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3ec6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cf0ce47: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x63bc9cf29e95: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x63bc9cd7112c: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:62:13)",
"0x63bc9ce12985: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:364:13)",
"0x63bc9cc8f670: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:40:22)",
"0x63bc9cf8b6e7: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:13)",
"0x63bc9ce6cb46: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce6cb46: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce6cb46: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9cfbf35d: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x63bc9cfd2152: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x63bc9ccd1ca2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63bc9ccf0539: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63bc9cec8b42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63bc9cefbffc: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x63bc9ce1cd4a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x63bc9ce11e2a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x63bc9cdc0f58: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9cdc0f58: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9cdc0f58: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x63bc9cedbc17: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x63bc9cf00698: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x63bc9ce58c51: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce58c51: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce58c51: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce58c51: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cef6f6b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9cef1a96: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3e53b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cbc4a47: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x63bc9ccb09fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9ce6b856: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce6b856: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce6b856: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x63bc9cdbc833: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x63bc9ccf1c9d: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x63bc9cf4dca7: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x63bc9cbd977b: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x63bc9cbc523c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x63bc9cbf8d3b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x63bc9cfb7e2b: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x63bc9cf0e76a: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x63bc9cb55c7a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63bc9cdbc151: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x63bc9cdd3df3: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x63bc9ce2d5b7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce2d5b7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce2d5b7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce2d5b7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cef6b0e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9ceeea37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3e2be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cdc6c76: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x63bc9cc9d04d: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x63bc9cca439c: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x63bc9cbc560c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x63bc9cf2d6eb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x63bc9cf2c891: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x63bc9cd3ff4b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x63bc9cd159dd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x63bc9cbde83f: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x63bc9cdba6c3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x63bc9cfb7e40: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x63bc9cce8022: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63bc9ccf09e9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63bc9cec7842: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63bc9cd08673: winter_verifier::perform_verification (verifier/src/lib.rs:177:9)",
"0x63bc9cf565ed: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x63bc9cf8c58d: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:33)",
"0x63bc9cd90bd3: winter_prover::Prover::generate_proof (prover/src/lib.rs:407:21)",
"0x63bc9cdc2df4: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x63bc9cdc2b12: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x63bc9cd105a9: winter_verifier::verify (verifier/src/lib.rs:95:32)",
"0x63bc9ce6c916: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce6c916: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce6c916: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9cdc07e9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x63bc9ccf1f24: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x63bc9cdd3eb0: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x63bc9cd8c8ba: winter_prover::Prover::generate_proof (prover/src/lib.rs:257:22)",
"0x63bc9d0f1f46: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:365:21)",
"0x63bc9d0f13d6: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:146:27)",
"0x63bc9ccae01c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9ce3c7f7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce3c7f7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce3c7f7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce3c7f7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cef8b7e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9cef2f39: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3d0ee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cd8c603: winter_prover::Prover::generate_proof (prover/src/lib.rs:217:20)",
"0x63bc9ce57637: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce57637: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce57637: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce57637: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cefaade: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9cef34b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3dd0e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cd8ce32: winter_prover::Prover::generate_proof (prover/src/lib.rs:286:23)",
"0x63bc9d151ce9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63bc9d152f12: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63bc9d151d49: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x63bc9cf1f6ed: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x63bc9d10cd2b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x63bc9d10c751: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x63bc9d108adb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x63bc9d1026cd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x63bc9d0fd84b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x63bc9d0fbf13: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x63bc9d0e1b39: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x63bc9d044830: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63bc9d046899: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63bc9d021451: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63bc9cf00f53: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x63bc9cf2cccb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x63bc9cf2c471: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x63bc9cd40f0b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x63bc9cd1ad31: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x63bc9cd1e477: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x63bc9cd131bb: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x63bc9cbf8fbb: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x63bc9cbf61f6: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x63bc9cfc5c8f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x63bc9cfd31b2: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x63bc9ccb3e4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9cb912ec: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9cb912ec: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9cb912ec: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x63bc9ceddf19: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63bc9ceddf19: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63bc9ceddf19: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x63bc9cf565d6: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x63bc9cc8ebd9: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:82:31)",
"0x63bc9cb64553: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63bc9cf8c4c0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:28)",
"0x63bc9ccb5dbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9ce243c1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce243c1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce243c1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce243c1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cef99db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9ceecd06: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3eeab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cd06d9f: winter_verifier::perform_verification (verifier/src/lib.rs:216:40)",
"0x63bc9cfdd6eb: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x63bc9cfd9983: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x63bc9cd710bd: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:61:13)",
"0x63bc9cbc63ef: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x63bc9ccae2bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9ce66ffe: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce66ffe: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce66ffe: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce66ffe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x63bc9cef843b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9ceefb76: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cf9110b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cbbe01c: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x63bc9ccb294c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9ce26ae7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce26ae7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce26ae7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce26ae7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cef853e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9cef2d37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3ed4e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cdae619: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces (src/do_work/prover.rs:30:9)",
"0x63bc9cf3a782: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x63bc9ce6a097: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x63bc9cf14476: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:228:38)",
"0x63bc9cf11903: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x63bc9ccb240c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9ce41bc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce41bc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce41bc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce41bc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cef7a9e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9cef2c79: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3d94e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cc8f77a: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:50:26)",
"0x63bc9cbee47b: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x63bc9cd688b6: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x63bc9cd6c76c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x63bc9cbc627d: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x63bc9cb919f5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9cb919f5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9cb919f5: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x63bc9cedbbf4: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x63bc9cbafc8d: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x63bc9cd0d869: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:214:32)",
"0x63bc9cb52603: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63bc9cfd5ab6: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x63bc9ccd17b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63bc9ccefd89: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63bc9cec5f32: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63bc9cd0848c: winter_verifier::perform_verification (verifier/src/lib.rs:182:9)",
"0x63bc9cbf20ab: winter_prover::trace::Trace::validate (src/trace/mod.rs:122:26)",
"0x63bc9cd90f21: winter_prover::Prover::generate_proof (prover/src/lib.rs:370:17)",
"0x63bc9cde0214: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x63bc9ce1073c: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x63bc9cd07e15: winter_verifier::perform_verification (verifier/src/lib.rs:320:5)",
"0x63bc9cf0b1a4: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x63bc9cdc34f8: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x63bc9cc73499: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x63bc9d0f0ec9: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:352:21)",
"0x63bc9cbc5cae: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x63bc9cd2bd8f: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x63bc9cd37711: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x63bc9cd32caa: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x63bc9cf11872: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x63bc9cda23dd: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:659:26)",
"0x63bc9cd8cc88: winter_prover::Prover::generate_proof (prover/src/lib.rs:268:13)",
"0x63bc9cd0713b: winter_verifier::perform_verification (verifier/src/lib.rs:263:61)",
"0x63bc9cf32ea2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x63bc9cd8e868: winter_prover::Prover::generate_proof (prover/src/lib.rs:514:9)",
"0x63bc9ccca622: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63bc9ccf0839: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63bc9cec9252: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63bc9cf3adb8: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x63bc9ce6a067: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x63bc9ccc3982: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63bc9ccefc39: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63bc9cec8a51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63bc9cd686c9: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x63bc9cc6c30d: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x63bc9cf505d7: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x63bc9cfc5e0b: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x63bc9cd7108f: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:60:9)",
"0x63bc9ce522f0: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce522f0: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce522f0: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce522f0: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x63bc9cef65bb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9cef1da6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3ddbb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cf45075: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x63bc9d10576e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x63bc9d107220: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x63bc9d106428: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x63bc9cfbf274: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x63bc9d0f6118: <winter_air::proof::context::Context as winter_utils::serde::Deserializable>::read_from (src/proof/context.rs:184:35)",
"0x63bc9d0ebbf7: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:27)",
"0x63bc9cf2ddab: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x63bc9cf2c7e1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x63bc9cd404eb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x63bc9cd1579d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x63bc9cbde0fc: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x63bc9cbdb911: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x63bc9cbf0511: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:132:51)",
"0x63bc9cb52a1a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63bc9cf95da5: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x63bc9cd70d16: <examples::do_work::air::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (src/do_work/air.rs:13:9)",
"0x63bc9cd10718: winter_verifier::verify (verifier/src/lib.rs:97:38)",
"0x63bc9ce286b1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce286b1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce286b1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce286b1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cef671b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9ceefe16: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3f23b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cbb2409: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x63bc9cbe123f: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x63bc9cbe1307: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x63bc9cd08156: winter_verifier::perform_verification (verifier/src/lib.rs:225:13)",
"0x63bc9ce39187: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce39187: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce39187: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce39187: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cefa29e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9ceeee27: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3c7ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cf0795b: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x63bc9cd6c83e: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x63bc9ccacdbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9ce50127: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce50127: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce50127: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce50127: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cef701e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9ceed6b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3ffae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cf0de38: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x63bc9cf45152: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x63bc9cbb2583: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x63bc9ccaa91c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9ce34dc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce34dc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce34dc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce34dc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9ced66b3: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x63bc9ceebbc9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3e01e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cd8cf62: winter_prover::Prover::generate_proof (prover/src/lib.rs:291:36)",
"0x63bc9ce50ee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce50ee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce50ee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce50ee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cef6dde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9ceedc57: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb4047e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cf55994: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x63bc9ce132c9: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:534:17)",
"0x63bc9cc9cd36: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x63bc9ceffe5d: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x63bc9cf03406: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x63bc9cf0f866: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x63bc9ce19bb8: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:510:13)",
"0x63bc9cd069d9: winter_verifier::perform_verification (verifier/src/lib.rs:183:13)",
"0x63bc9cfbb95b: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x63bc9cdc29cc: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x63bc9ce2a317: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce2a317: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce2a317: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce2a317: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cef806e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9cef3587: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3c47e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cd67c6a: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x63bc9cf8564a: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:25:25)",
"0x63bc9cd08247: winter_verifier::perform_verification (verifier/src/lib.rs:223:43)",
"0x63bc9cf5051a: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x63bc9cf07bf3: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x63bc9ce19c93: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:505:13)",
"0x63bc9cc76484: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x63bc9cd6c7d0: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x63bc9cf8c819: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:129:9)",
"0x63bc9cd8dc77: winter_prover::Prover::generate_proof (prover/src/lib.rs:442:35)",
"0x63bc9cf85b4c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:63:9)",
"0x63bc9cd70b27: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x63bc9cd6e8cd: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x63bc9ccecf22: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63bc9cceffc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63bc9cec9aaf: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63bc9cf455d9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x63bc9cd68d04: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x63bc9d0f0862: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:164:22)",
"0x63bc9d0ebe38: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:176:34)",
"0x63bc9ccc8392: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63bc9ccefa59: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63bc9cec4b42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63bc9cc920d9: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:174:17)",
"0x63bc9cc8ff30: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:54:17)",
"0x63bc9cedbebb: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9cedbebb: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9cedbebb: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9cedbebb: <[V] as alloc::slice::Concat<T>>::concat (alloc/src/slice.rs:712:26)",
"0x63bc9cedbcab: alloc::slice::<impl [T]>::concat (alloc/src/slice.rs:561:9)",
"0x63bc9cf14527: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:228:37)",
"0x63bc9cd0798e: winter_verifier::perform_verification (verifier/src/lib.rs:303:42)",
"0x63bc9cd907ad: winter_prover::Prover::generate_proof (prover/src/lib.rs:438:13)",
"0x63bc9ccaf51c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9cf212be: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9cf212be: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9cf212be: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x63bc9cedbb77: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x63bc9cc78c58: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x63bc9cd8c656: winter_prover::Prover::generate_proof (prover/src/lib.rs:228:27)",
"0x63bc9ccb5b1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9ce3e7cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce3e7cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce3e7cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce3e7cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x63bc9cef986e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9ceeb947: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3ce8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9ce1cbf6: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x63bc9d0f7d7a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x63bc9cf206fb: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x63bc9ce32777: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce32777: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce32777: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce32777: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cef72de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9cef3697: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3fb8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cde0131: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x63bc9cca9c0c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9ce4bb31: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce4bb31: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce4bb31: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce4bb31: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cef90ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9ceed5a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3ee5b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cc78967: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x63bc9ce6c466: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce6c466: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce6c466: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9cd8d051: winter_prover::Prover::generate_proof (prover/src/lib.rs:301:32)",
"0x63bc9cf5042f: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x63bc9cf50504: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x63bc9cbafcb0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x63bc9cf56440: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x63bc9cedd039: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63bc9cedd039: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63bc9cedd039: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x63bc9cd67db1: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x63bc9cb574aa: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63bc9cf97a05: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x63bc9d0f52bd: <winter_air::proof::commitments::Commitments as winter_utils::serde::Deserializable>::read_from (src/proof/commitments.rs:108:22)",
"0x63bc9d0ebbdc: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:167:27)",
"0x63bc9cfba82c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x63bc9cdc2b58: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x63bc9cc78a03: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x63bc9d10cb7b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x63bc9d10c5f1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x63bc9d108bbb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x63bc9d10266d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x63bc9d0fd538: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x63bc9d0fbdd7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x63bc9ccf3564: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x63bc9cf499fc: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x63bc9cce7152: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63bc9ccf0389: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63bc9cec8ff2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63bc9cfc5f89: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x63bc9ccb851c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9ce5ef17: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce5ef17: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce5ef17: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce5ef17: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cef8b2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9ceee147: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3da9e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cd8c416: winter_prover::Prover::generate_proof (prover/src/lib.rs:205:38)",
"0x63bc9ce5e451: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce5e451: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce5e451: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce5e451: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cef77db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9ceec136: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3d65b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cbc497f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x63bc9cfb2184: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x63bc9cde1010: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x63bc9d0f0a1e: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:168:21)",
"0x63bc9cc9cd7b: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x63bc9cc9cf3a: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x63bc9d0f375c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9d0f6726: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9d0f6726: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9d0f6726: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9d0ebd52: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:172:33)",
"0x63bc9ccf7191: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x63bc9cd65d29: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x63bc9ccabb7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9ce4df11: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce4df11: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce4df11: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce4df11: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cef83db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9ceedd46: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3cacb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cdd0c0e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x63bc9cdca11b: winter_prover::trace::commitment::build_segment_queries::{{closure}}::{{closure}} (src/trace/commitment.rs:162:42)",
"0x63bc9cc48019: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x63bc9cf574cb: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x63bc9cf44d42: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x63bc9ccaae5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9ce56771: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce56771: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce56771: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce56771: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cef70cb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9cef09c6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3d0cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cd67e5a: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x63bc9cf21bc2: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x63bc9cdbf240: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x63bc9cf35bb1: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x63bc9cf2d02b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x63bc9cf2c681: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x63bc9cd4012b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x63bc9cd158bd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x63bc9cbdef89: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x63bc9cdbaa00: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x63bc9cbf9303: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x63bc9cfc5c25: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x63bc9cdbc81d: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x63bc9cd8ef26: winter_prover::Prover::generate_proof (prover/src/lib.rs:548:13)",
"0x63bc9cca7fee: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x63bc9cbc542b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x63bc9d0fe8ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9d0fab6c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9d0fab6c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9d0fab6c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x63bc9d0fa62c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63bc9d0fa62c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63bc9d0fa62c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x63bc9d0fa6b6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x63bc9cde0b2b: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x63bc9ccdd842: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63bc9ccf0419: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63bc9cec5ba2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63bc9cca457e: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x63bc9ce42877: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce42877: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce42877: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce42877: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cef770e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9cef3317: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3face: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cf0b532: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x63bc9d0feda0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63bc9d0fa5f9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63bc9d0f95a1: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63bc9d0f9eb0: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x63bc9cde0a4e: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x63bc9cba8bb0: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:221:17)",
"0x63bc9cb53922: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63bc9cf824dd: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::SpecFold>::spec_fold (iter/adapters/zip.rs:685:25)",
"0x63bc9cf6eee7: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::fold (iter/adapters/zip.rs:249:9)",
"0x63bc9cf599b7: <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/zip.rs:103:9)",
"0x63bc9cad9149: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x63bc9cad7c19: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x63bc9cad6030: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63bc9cad6298: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x63bc9cad5b5a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x63bc9cad5b5a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x63bc9c9ca6a1: alloc::string::String::reserve (alloc/src/string.rs:1152:9)",
"0x63bc9c9ca6a1: <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend (alloc/src/string.rs:2173:14)",
"0x63bc9c9ca77c: <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter (alloc/src/string.rs:2093:9)",
"0x63bc9cf184a2: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x63bc9cf17147: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x63bc9cda1df7: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:645:31)",
"0x63bc9cf88f6c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:148:31)",
"0x63bc9cf8c9e0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:122:17)",
"0x63bc9cc6c436: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x63bc9ce5f9a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce5f9a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce5f9a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce5f9a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cefa3de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9cef14c9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3fede: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cbec5e0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x63bc9cc78a1e: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x63bc9cdc9078: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x63bc9cb6261a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63bc9cc1ae45: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x63bc9d14cd9e: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x63bc9cbc47d0: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x63bc9ccd4912: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63bc9ccf0119: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63bc9cec594f: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63bc9cf00d8a: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x63bc9cf857eb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:39:30)",
"0x63bc9cd907ed: winter_prover::Prover::generate_proof (prover/src/lib.rs:439:13)",
"0x63bc9cdc301f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x63bc9cc7af5f: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x63bc9ce2f727: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce2f727: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce2f727: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce2f727: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cef95de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9ceef507: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3fcfe: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cd69277: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x63bc9cf1f835: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x63bc9cc751d0: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x63bc9cfd1c96: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x63bc9cd90665: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:17)",
"0x63bc9cdd6a48: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x63bc9cde0dda: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x63bc9d0f12b9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x63bc9d0f170b: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:211:22)",
"0x63bc9cdd0c1d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x63bc9cd657be: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x63bc9cd63f17: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x63bc9cba35ac: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:293:57)",
"0x63bc9cd6aca7: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x63bc9ccb7a9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9ce51111: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce51111: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce51111: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce51111: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cef69fb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9ceefcc6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3e86b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cc8ea5c: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:82:9)",
"0x63bc9cd076c1: winter_verifier::perform_verification (verifier/src/lib.rs:295:27)",
"0x63bc9cf33580: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x63bc9cf161ab: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x63bc9cf15696: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x63bc9cba98e9: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:641:17)",
"0x63bc9ccb04bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9ce634c8: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce634c8: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce634c8: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce634c8: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x63bc9cefa72e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9cef1407: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cfda17e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9ce1de5c: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x63bc9ccb923c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9ce56977: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce56977: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce56977: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce56977: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cef765e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9ceeb517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3c60e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cd8e5d6: winter_prover::Prover::generate_proof (prover/src/lib.rs:491:51)",
"0x63bc9cfd1c77: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x63bc9cc8c7fb: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x63bc9cbc4e38: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x63bc9cbe122a: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x63bc9ce64907: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce64907: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce64907: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce64907: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cef7fde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9cef1627: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3c93e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cb6fd54: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:112:30)",
"0x63bc9cf4da9a: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x63bc9cbdae22: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x63bc9cc705c4: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x63bc9cf90d04: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x63bc9ce40787: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce40787: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce40787: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce40787: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cef767e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9ceee807: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb4071e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cbf033a: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:132:32)",
"0x63bc9ccb0f3a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9ce2215e: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce2215e: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce2215e: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce2215e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x63bc9cef821e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9ceed957: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cf8476e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cf32f64: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:142:33)",
"0x63bc9d0f1dc4: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:361:22)",
"0x63bc9cd39451: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x63bc9cd3f77d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x63bc9cd3310e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x63bc9cf07bd0: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x63bc9ccb827c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9ce29557: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce29557: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce29557: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce29557: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9ced779d: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x63bc9cef321c: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3f4ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cd6f82a: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x63bc9cdc2ad6: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x63bc9d0f2187: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x63bc9d0f0fed: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:357:24)",
"0x63bc9cf143df: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:226:50)",
"0x63bc9cdca199: winter_prover::trace::commitment::build_segment_queries::{{closure}}::{{closure}} (src/trace/commitment.rs:164:27)",
"0x63bc9cdc8736: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:159:13)",
"0x63bc9ccb366c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9ce21c21: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce21c21: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce21c21: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce21c21: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cef83ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9ceebac6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb4001b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cd8e6a3: winter_prover::Prover::generate_proof (prover/src/lib.rs:495:52)",
"0x63bc9d0f5784: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:155:27)",
"0x63bc9cf04af6: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x63bc9cd07d3a: winter_verifier::perform_verification (verifier/src/lib.rs:316:28)",
"0x63bc9cde01a5: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x63bc9cfd1e9d: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x63bc9ccb170a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9ce43781: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce43781: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce43781: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce43781: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cef8dab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9ceed306: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3d09b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cda1c73: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:634:36)",
"0x63bc9cf08848: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x63bc9ccad2fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9cfb4776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9cfb4776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9cfb4776: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x63bc9cedd3b9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63bc9cedd3b9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63bc9cedd3b9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x63bc9cfd9846: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x63bc9ce257e7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce257e7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce257e7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce257e7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cef973e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9ceef7f7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb4032e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cd61d13: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:253:9)",
"0x63bc9cf07755: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:144:35)",
"0x63bc9cfb23fb: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x63bc9cfb2103: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x63bc9ce2c911: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce2c911: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce2c911: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce2c911: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cef7f1b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9cef3516: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3d20b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cbc4bd7: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x63bc9ccaf7bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9ce5cb27: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce5cb27: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce5cb27: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce5cb27: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9ced5b76: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x63bc9ceefba7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3ed6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cdcdd5b: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x63bc9d0f4502: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63bc9d0f5179: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63bc9d0f6ae2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63bc9d0ec916: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:13)",
"0x63bc9cf3aa51: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x63bc9cdd2a92: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x63bc9cba94c6: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:493:32)",
"0x63bc9cb5f09a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63bc9cc2c2a2: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x63bc9cb2ac9b: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x63bc9cb47906: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x63bc9cdc6a53: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x63bc9cc98175: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x63bc9cf45524: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x63bc9cf3b10a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x63bc9cf1426a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x63bc9cc91f72: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:169:36)",
"0x63bc9ce4c9d1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce4c9d1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce4c9d1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce4c9d1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cef8cfb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9cef1026: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3f64b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cbc4c9f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x63bc9ce4af37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce4af37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce4af37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce4af37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cefa2be: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9cef32d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3d4de: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cd622c4: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:198:23)",
"0x63bc9cd90808: winter_prover::Prover::generate_proof (prover/src/lib.rs:440:13)",
"0x63bc9cf336ec: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x63bc9cde0bf6: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x63bc9ce3a666: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce3a666: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce3a666: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce3a666: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x63bc9cef6b6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9ceef5dc: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cefe9be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cf00edb: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x63bc9cfb2450: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x63bc9ccb62fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9ce33135: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce33135: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce33135: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce33135: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x63bc9cef710e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9ceec737: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3ccce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cf141b0: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:218:46)",
"0x63bc9cbec9cb: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x63bc9cb5932c: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63bc9cdc2954: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x63bc9cfc5caa: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x63bc9cf16c77: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x63bc9cf0ec8c: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x63bc9cf157bc: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x63bc9cf55299: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x63bc9ce1d5ae: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x63bc9cbdb89d: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x63bc9ce1ccce: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x63bc9ce1f6c6: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x63bc9ce129ea: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:362:9)",
"0x63bc9ce6ccd6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce6ccd6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce6ccd6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9cd8d00d: winter_prover::Prover::generate_proof (prover/src/lib.rs:300:37)",
"0x63bc9ccde712: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x63bc9ccf0149: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x63bc9cec7122: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x63bc9cdc6c91: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x63bc9cf560c6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9cf560c6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9cf560c6: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x63bc9cd65ca3: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x63bc9cca4629: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x63bc9ce27141: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce27141: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce27141: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce27141: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cef9f9b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9ceee346: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3c88b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cd8c4e3: winter_prover::Prover::generate_proof (prover/src/lib.rs:209:39)",
"0x63bc9ce56ba1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce56ba1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce56ba1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce56ba1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cef9b3b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9cef10b6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3d6cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cd8cc5d: winter_prover::Prover::generate_proof (prover/src/lib.rs:266:43)",
"0x63bc9cfd8cb7: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x63bc9cf8aa27: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:272:18)",
"0x63bc9cf89297: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:166:30)",
"0x63bc9cf88fd0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:149:33)",
"0x63bc9cf0f7a5: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x63bc9cdaa8e7: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:706:26)",
"0x63bc9cd8e110: winter_prover::Prover::generate_proof (prover/src/lib.rs:472:37)",
"0x63bc9cdaa4e4: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:691:36)",
"0x63bc9cbf2598: winter_prover::trace::Trace::validate (src/trace/mod.rs:177:13)",
"0x63bc9ce40ee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce40ee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce40ee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce40ee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9ced0bcf: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x63bc9ceee849: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cb3de5e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cd10784: winter_verifier::verify (verifier/src/lib.rs:101:24)",
"0x63bc9cbef87b: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:235:25)",
"0x63bc9cfbaa62: examples::do_work::prover::build_do_work_trace (src/do_work/prover.rs:65:5)",
"0x63bc9cdae668: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces::{{closure}} (src/do_work/prover.rs:32:27)",
"0x63bc9d0ff1a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9d0ff1a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9d0ff1a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9d0ff1a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x63bc9d0ff5ee: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9d0ff5b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9d10084e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9d0fe299: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x63bc9ccb87bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9ce6c876: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce6c876: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce6c876: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9cd8cfc9: winter_prover::Prover::generate_proof (prover/src/lib.rs:299:44)",
"0x63bc9ce6be1c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce6be1c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce6be1c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x63bc9cedce79: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x63bc9cedce79: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x63bc9cedce79: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x63bc9cd8e6be: winter_prover::Prover::generate_proof (prover/src/lib.rs:500:39)",
"0x63bc9cc8c9d0: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x63bc9d10587e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x63bc9d106c4c: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x63bc9d105d8a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x63bc9cf5541a: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x63bc9cf11940: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x63bc9cf0b1bf: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x63bc9cf332ef: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x63bc9ccae55c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x63bc9ce581c7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x63bc9ce581c7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x63bc9ce581c7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x63bc9ce581c7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x63bc9cef706e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x63bc9ceec2c7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x63bc9cc8a42e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x63bc9cd8c79f: winter_prover::Prover::generate_proof (prover/src/lib.rs:243:41)",
"0x63bc9cba2b09: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:211:31)",
"0x63bc9cb59d3a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x63bc9cc4a0a8: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x63bc9cb233ba: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x63bc9cb4363a: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x63bc9cf33810: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)"
]
}