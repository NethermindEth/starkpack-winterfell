{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell do-work -n 3 -l 65536",
"pid": 25207,
"tg": 99687439,
"te": 112463793,
"pps": [
{
"tb": 3145728,
"tbk": 3,
"tl": 1255525,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
9
]
},
{
"tb": 128,
"tbk": 1,
"tl": 5120,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
12,
13,
14,
15,
16
]
},
{
"tb": 8388480,
"tbk": 32,
"tl": 24811,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
17,
18,
19,
20,
21
]
},
{
"tb": 48,
"tbk": 3,
"tl": 173,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
23,
24,
25,
26,
27,
28
]
},
{
"tb": 24,
"tbk": 1,
"tl": 99400875,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
29,
30,
31,
32,
33,
34,
35,
36,
37
]
},
{
"tb": 48,
"tbk": 3,
"tl": 571209,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
38,
39,
40,
41,
42,
43,
21
]
},
{
"tb": 6291456,
"tbk": 3,
"tl": 2662193,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
44,
45,
46
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 1733105,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
47,
48,
49
]
},
{
"tb": 153600,
"tbk": 1,
"tl": 10155,
"mb": 153600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
50,
51,
52,
53,
54,
55,
56,
57,
58,
59
]
},
{
"tb": 4800,
"tbk": 3,
"tl": 9514,
"mb": 4800,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
38,
39,
40,
41,
60,
61,
62
]
},
{
"tb": 256,
"tbk": 1,
"tl": 623,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
70,
71
]
},
{
"tb": 256,
"tbk": 4,
"tl": 130795,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
72
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 619285,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
76,
77,
78,
79,
80,
81,
82,
83
]
},
{
"tb": 160,
"tbk": 1,
"tl": 7530,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
84,
85,
86,
87,
88,
89,
90,
91,
92
]
},
{
"tb": 1000,
"tbk": 4,
"tl": 4152,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
93,
94,
95,
96,
97,
98,
99,
100,
101,
102,
103
]
},
{
"tb": 72,
"tbk": 1,
"tl": 3873105,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
104,
105,
106,
107,
108,
109,
110,
111,
112
]
},
{
"tb": 48,
"tbk": 3,
"tl": 2097677,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
38,
39,
40,
41,
113,
114,
115
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
50,
51,
52,
53,
54,
55,
56,
116,
117,
118
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 278161,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
76,
77,
78,
119,
120,
121
]
},
{
"tb": 512,
"tbk": 1,
"tl": 51,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
122,
123,
124,
125,
126,
127,
128,
129
]
},
{
"tb": 268435456,
"tbk": 4,
"tl": 12440527,
"mb": 67108864,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
130,
131,
132,
133,
134,
135,
136
]
},
{
"tb": 16000,
"tbk": 4,
"tl": 1654,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
130,
131,
132,
133,
134,
135,
137
]
},
{
"tb": 3264,
"tbk": 6,
"tl": 95,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
138,
139,
140,
141,
142,
143
]
},
{
"tb": 144,
"tbk": 6,
"tl": 214,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
144,
145,
146,
147,
148,
149
]
},
{
"tb": 96,
"tbk": 3,
"tl": 30333,
"mb": 96,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
50,
51,
52,
53,
54,
55,
56,
57,
150,
151
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
50,
51,
52,
53,
54,
55,
56,
116,
117,
152
]
},
{
"tb": 56,
"tbk": 1,
"tl": 2804,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
153,
154,
155,
156,
157
]
},
{
"tb": 64,
"tbk": 1,
"tl": 7015,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
17,
18,
19,
158,
159
]
},
{
"tb": 96,
"tbk": 3,
"tl": 4760862,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
160,
161,
162,
163,
164,
165,
166,
167,
168,
169
]
},
{
"tb": 96,
"tbk": 3,
"tl": 2,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
170,
171,
156,
157
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 44,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
172
]
},
{
"tb": 512,
"tbk": 1,
"tl": 15,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
173,
174,
175
]
},
{
"tb": 2000,
"tbk": 4,
"tl": 3033,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
176,
177,
178,
179,
180,
181,
182,
183
]
},
{
"tb": 96,
"tbk": 1,
"tl": 7581,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
184,
185,
186,
187,
28
]
},
{
"tb": 6072,
"tbk": 11,
"tl": 4258,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
188,
189,
190,
191,
192,
193
]
},
{
"tb": 216,
"tbk": 9,
"tl": 198,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
194,
195,
196,
197,
198,
199,
200,
201,
202
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2072,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
203,
204,
205,
206,
207,
208,
209,
210
]
},
{
"tb": 96,
"tbk": 1,
"tl": 7023479,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
211,
212,
213,
214,
21
]
},
{
"tb": 144,
"tbk": 3,
"tl": 9728352,
"mb": 144,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
215,
216,
217,
218,
219,
220
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2977,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
221,
222,
223,
224,
80,
81,
82,
225,
226,
227
]
},
{
"tb": 96,
"tbk": 1,
"tl": 753,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
211,
212,
213,
228,
229
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 54562,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
230,
231,
232,
233,
210,
21
]
},
{
"tb": 9600,
"tbk": 6,
"tl": 2668959,
"mb": 1600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
130,
131,
132,
133,
134,
135,
234
]
},
{
"tb": 16000,
"tbk": 4,
"tl": 40326,
"mb": 16000,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
50,
51,
52,
53,
54,
55,
56,
57,
235,
236
]
},
{
"tb": 6291456,
"tbk": 3,
"tl": 1859564,
"mb": 6291456,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
76,
77,
78,
79,
80,
81,
82,
237
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 151696,
"mb": 1179648,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
238,
239,
240
]
},
{
"tb": 240,
"tbk": 3,
"tl": 4760026,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
241,
242,
243,
244,
245,
246,
247,
248,
249
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 7158,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
250,
251,
252,
253,
254
]
},
{
"tb": 12096,
"tbk": 18,
"tl": 6780842,
"mb": 6144,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
17,
18,
19,
255,
256
]
},
{
"tb": 96,
"tbk": 1,
"tl": 8545,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
211,
212,
213,
257,
258
]
},
{
"tb": 153600,
"tbk": 1,
"tl": 3578,
"mb": 153600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
259,
260,
261,
16
]
},
{
"tb": 96,
"tbk": 1,
"tl": 98,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
262,
263,
264,
265,
266,
267,
268,
269,
270
]
},
{
"tb": 992,
"tbk": 4,
"tl": 1280,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
271,
272
]
},
{
"tb": 9600,
"tbk": 6,
"tl": 2668985,
"mb": 1600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
130,
131,
132,
133,
134,
135,
273
]
},
{
"tb": 102400,
"tbk": 64,
"tl": 303,
"mb": 1600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
76,
77,
78,
119,
274,
275
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
276,
277,
118,
156,
157
]
},
{
"tb": 12096,
"tbk": 18,
"tl": 21170,
"mb": 6144,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
17,
18,
19,
255,
159
]
},
{
"tb": 72,
"tbk": 3,
"tl": 1857903,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
278,
279,
280,
281,
282,
283,
284,
285,
286,
287,
288,
289
]
},
{
"tb": 24,
"tbk": 2,
"tl": 2,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
50,
51,
52,
53,
54,
55,
56,
116,
290,
152
]
},
{
"tb": 144,
"tbk": 1,
"tl": 112081378,
"mb": 144,
"mbk": 1,
"gb": 144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
291,
292,
293,
294,
295,
296,
297,
21
]
},
{
"tb": 1536,
"tbk": 3,
"tl": 2219,
"mb": 1536,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
298,
229,
28,
156
]
},
{
"tb": 16000,
"tbk": 125,
"tl": 121,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
259,
299,
300,
258
]
},
{
"tb": 3632,
"tbk": 18,
"tl": 76,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
301,
302,
303,
304,
305,
306,
307,
308,
227
]
},
{
"tb": 896,
"tbk": 6,
"tl": 10013,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
17,
18,
19,
309,
310
]
},
{
"tb": 960,
"tbk": 4,
"tl": 72468540,
"mb": 312,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
311,
312,
313,
314,
315,
316,
317,
318,
319
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 12755081,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
203,
320,
321,
322,
323,
324,
325,
326
]
},
{
"tb": 9600,
"tbk": 3,
"tl": 52,
"mb": 3200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
259,
327,
328,
155
]
},
{
"tb": 72,
"tbk": 1,
"tl": 12550867,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
221,
329,
330,
331,
332,
21,
333,
334
]
},
{
"tb": 48,
"tbk": 3,
"tl": 21,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
23,
335,
336,
43,
21,
333
]
},
{
"tb": 96,
"tbk": 3,
"tl": 336203734,
"mb": 96,
"mbk": 3,
"gb": 96,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
22,
337,
338,
339,
340,
341,
342
]
},
{
"tb": 3632,
"tbk": 18,
"tl": 507,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
301,
302,
303,
304,
305,
306,
343,
69,
70
]
},
{
"tb": 72,
"tbk": 1,
"tl": 199,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
221,
344,
345,
346,
347,
348,
349,
350,
351
]
},
{
"tb": 6888,
"tbk": 42,
"tl": 917,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
301,
302,
303,
304,
305,
306,
343,
69,
271
]
},
{
"tb": 288,
"tbk": 3,
"tl": 49,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
352,
25,
26,
27,
28,
156
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 112067744,
"mb": 524288,
"mbk": 1,
"gb": 524288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
353,
354
]
},
{
"tb": 72,
"tbk": 1,
"tl": 620050,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
221,
222,
223,
224,
80,
81,
82,
237,
355,
21
]
},
{
"tb": 51296,
"tbk": 35,
"tl": 10552,
"mb": 51200,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
76,
77,
78,
79,
80,
81,
82,
225
]
},
{
"tb": 64,
"tbk": 1,
"tl": 1,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
276,
277,
152,
297,
21,
333
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 4185,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
250,
251,
252,
253,
356
]
},
{
"tb": 24,
"tbk": 1,
"tl": 3419,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
357,
358,
359,
360,
361,
362,
363,
364,
365
]
},
{
"tb": 384,
"tbk": 1,
"tl": 10176,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
366,
367,
368,
369,
370
]
},
{
"tb": 6888,
"tbk": 42,
"tl": 124,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
301,
302,
303,
304,
305,
306,
307,
371,
372
]
},
{
"tb": 288,
"tbk": 6,
"tl": 21167662,
"mb": 288,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
221,
373,
374,
375,
376,
377,
378,
379,
380
]
},
{
"tb": 462859,
"tbk": 8,
"tl": 10369,
"mb": 307834,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
381,
382,
383,
384,
385
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1275,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
93,
94,
95,
96,
97,
98,
99,
100,
386,
103,
387
]
},
{
"tb": 16000,
"tbk": 4,
"tl": 2431,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
388,
389,
390,
391,
392,
393,
394,
395,
396
]
},
{
"tb": 288,
"tbk": 3,
"tl": 95,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
352,
25,
397,
398,
399,
21
]
},
{
"tb": 4800,
"tbk": 3,
"tl": 372289,
"mb": 1600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
38,
39,
40,
41,
400,
401,
402
]
},
{
"tb": 13601,
"tbk": 1,
"tl": 10129,
"mb": 13601,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
50,
51,
52,
53,
54,
55,
56,
57,
403,
404
]
},
{
"tb": 192,
"tbk": 1,
"tl": 7564,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
405,
406,
407,
408,
28
]
},
{
"tb": 13568,
"tbk": 32,
"tl": 109981,
"mb": 13568,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
203,
320,
321,
322,
409,
410,
411,
412
]
},
{
"tb": 32,
"tbk": 1,
"tl": 9884,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
203,
320,
321,
322,
409,
413,
414,
155
]
},
{
"tb": 9600,
"tbk": 3,
"tl": 22903,
"mb": 9600,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
76,
77,
78,
119,
415,
155
]
},
{
"tb": 96,
"tbk": 1,
"tl": 7077,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
211,
212,
213,
416,
159
]
},
{
"tb": 2976,
"tbk": 4,
"tl": 3863,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
417,
418,
419,
420,
421,
371,
372,
422
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 4729,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
259,
260,
423,
412
]
},
{
"tb": 96,
"tbk": 1,
"tl": 3235,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
424,
425,
426,
427,
227
]
},
{
"tb": 153600,
"tbk": 3,
"tl": 92626,
"mb": 153600,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
50,
428,
429,
430,
431,
432,
227,
433
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2954,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
417,
418,
419,
420,
434,
435,
16,
154
]
},
{
"tb": 3145728,
"tbk": 3,
"tl": 221297,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
436
]
},
{
"tb": 224,
"tbk": 1,
"tl": 10162,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
50,
51,
52,
53,
54,
55,
56,
57,
437,
438
]
},
{
"tb": 192,
"tbk": 3,
"tl": 541,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
17,
18,
19,
439,
440
]
},
{
"tb": 9632,
"tbk": 7,
"tl": 20512035,
"mb": 9632,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
441,
442,
443,
444,
445,
446,
447,
448
]
},
{
"tb": 24,
"tbk": 1,
"tl": 773,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
449,
450,
451,
452,
453,
454,
455,
456
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 32762337,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
203,
320,
321,
322,
323,
457,
458,
459
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1921,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
460,
461,
462,
463,
464,
465,
432
]
},
{
"tb": 9584640,
"tbk": 4,
"tl": 209149,
"mb": 9584640,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
466,
467,
240
]
},
{
"tb": 24,
"tbk": 1,
"tl": 2302,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
468,
469,
470,
471,
472,
473,
474,
475
]
},
{
"tb": 192,
"tbk": 3,
"tl": 22681,
"mb": 192,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
17,
18,
19,
439,
476
]
},
{
"tb": 72,
"tbk": 3,
"tl": 4760882,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
477,
478,
168,
169,
399,
21
]
},
{
"tb": 48,
"tbk": 3,
"tl": 4760840,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
230,
231,
232,
479,
168,
169
]
},
{
"tb": 48,
"tbk": 3,
"tl": 30531,
"mb": 48,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
50,
51,
52,
53,
54,
55,
56,
57,
480,
481
]
},
{
"tb": 256,
"tbk": 1,
"tl": 10048,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
230,
231,
232,
482,
483,
484
]
},
{
"tb": 153600,
"tbk": 1,
"tl": 31069,
"mb": 153600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
50,
428,
429,
430,
485,
432,
227,
433
]
},
{
"tb": 192,
"tbk": 1,
"tl": 10100,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
486,
487,
488,
489,
490,
491,
492,
493,
370
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 188463,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
203,
320,
321,
322,
323,
324,
325,
494
]
},
{
"tb": 72,
"tbk": 1,
"tl": 10160,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
486,
495,
496,
497,
498,
499,
370
]
},
{
"tb": 288,
"tbk": 3,
"tl": 40,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
500,
501,
502,
503,
504,
505,
506,
507,
508
]
},
{
"tb": 288,
"tbk": 1,
"tl": 112081482,
"mb": 288,
"mbk": 1,
"gb": 288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
509,
510,
511,
512,
513,
514,
515,
516,
517
]
},
{
"tb": 48,
"tbk": 1,
"tl": 112067771,
"mb": 48,
"mbk": 1,
"gb": 48,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
518,
519,
520,
521,
522,
523,
524,
525,
526
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 529,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
460,
461,
462,
463,
464,
527,
371
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1269,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
230,
231,
232,
528,
103,
387
]
},
{
"tb": 96,
"tbk": 1,
"tl": 30878,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
529,
530,
531,
532,
432
]
},
{
"tb": 25165824,
"tbk": 12,
"tl": 41697716,
"mb": 25165824,
"mbk": 12,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
533,
534,
535
]
},
{
"tb": 2617245696,
"tbk": 3,
"tl": 170370433,
"mb": 2617245696,
"mbk": 3,
"gb": 2617245696,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
1,
388,
536,
537,
538,
539,
540,
541,
542
]
},
{
"tb": 72,
"tbk": 3,
"tl": 10694666,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
278,
279,
280,
281,
282,
283,
284,
285,
543,
544
]
},
{
"tb": 48,
"tbk": 1,
"tl": 5823665,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
221,
545,
546,
547,
548,
549,
550,
551,
552
]
},
{
"tb": 48,
"tbk": 3,
"tl": 10694654,
"mb": 48,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
76,
77,
78,
553,
543,
544
]
},
{
"tb": 16,
"tbk": 1,
"tl": 619304,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
76,
77,
78,
553,
286,
287,
288,
289
]
},
{
"tb": 3145728,
"tbk": 3,
"tl": 1981882,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
130,
131,
132,
133,
134,
135,
554
]
},
{
"tb": 2097152,
"tbk": 2,
"tl": 11643983,
"mb": 2097152,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
230,
231,
232,
555,
556,
557
]
},
{
"tb": 2304,
"tbk": 3,
"tl": 9687,
"mb": 2304,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
221,
558,
559,
560,
561,
562,
563,
564,
565
]
},
{
"tb": 144,
"tbk": 3,
"tl": 22358,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
566,
121,
21,
333,
334
]
},
{
"tb": 4000,
"tbk": 4,
"tl": 25314,
"mb": 4000,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
203,
204,
205,
206,
207,
567,
300,
258
]
},
{
"tb": 838860800,
"tbk": 524288,
"tl": 6830989,
"mb": 1600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
230,
231,
232,
568,
569,
458
]
},
{
"tb": 23936,
"tbk": 4,
"tl": 40310,
"mb": 23936,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
50,
51,
52,
53,
54,
55,
56,
57,
570,
236
]
},
{
"tb": 153600,
"tbk": 96,
"tl": 303072,
"mb": 153600,
"mbk": 96,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
230,
231,
232,
571,
572,
573
]
},
{
"tb": 1572864,
"tbk": 3,
"tl": 8334037,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
574
]
},
{
"tb": 2516582400,
"tbk": 1048576,
"tl": 5505581,
"mb": 3200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
76,
77,
78,
119,
575,
569
]
},
{
"tb": 384,
"tbk": 6,
"tl": 9520142,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
576,
577,
578,
579,
580
]
},
{
"tb": 4800,
"tbk": 3,
"tl": 9527,
"mb": 4800,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
38,
39,
40,
41,
581,
61,
62
]
},
{
"tb": 32,
"tbk": 1,
"tl": 4,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
582,
583,
584,
585,
586,
587,
588,
589,
590
]
},
{
"tb": 6291456,
"tbk": 3,
"tl": 1243766,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
591,
592,
593,
594,
595,
596,
597,
598
]
},
{
"tb": 512,
"tbk": 1,
"tl": 32,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
76,
77,
78,
599,
229,
28
]
},
{
"tb": 96,
"tbk": 3,
"tl": 537,
"mb": 96,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
170,
600,
601,
602,
603,
604
]
},
{
"tb": 7200,
"tbk": 3,
"tl": 336975435,
"mb": 7200,
"mbk": 3,
"gb": 7200,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
1,
221,
605,
606,
607,
608,
609,
610,
611,
612
]
},
{
"tb": 1152,
"tbk": 3,
"tl": 4760501,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
613,
614,
615,
616,
617,
618,
619,
620,
621
]
},
{
"tb": 96,
"tbk": 1,
"tl": 1317818,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
211,
212,
213,
622,
121
]
},
{
"tb": 7200,
"tbk": 3,
"tl": 35499454,
"mb": 7200,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
221,
222,
223,
224,
80,
81,
82,
623,
624,
625
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 321564,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
8,
626
]
},
{
"tb": 256000,
"tbk": 64,
"tl": 82654,
"mb": 156800,
"mbk": 33,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
627,
628,
629,
630,
631,
632,
275,
633
]
},
{
"tb": 24,
"tbk": 1,
"tl": 28,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
634,
635,
636,
637,
638,
639,
640,
641
]
},
{
"tb": 96,
"tbk": 3,
"tl": 19389,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
642,
121,
21,
333,
334
]
},
{
"tb": 23808,
"tbk": 124,
"tl": 754637,
"mb": 23808,
"mbk": 124,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
203,
320,
321,
322,
409,
410,
643,
300
]
},
{
"tb": 512,
"tbk": 1,
"tl": 17,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
173,
644,
229
]
},
{
"tb": 160,
"tbk": 1,
"tl": 7658,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
645,
646,
647,
648,
155
]
},
{
"tb": 16000,
"tbk": 4,
"tl": 630,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
173,
649,
650
]
},
{
"tb": 16000,
"tbk": 4,
"tl": 27829,
"mb": 16000,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
651,
300,
258,
155
]
},
{
"tb": 4194304000,
"tbk": 1048576,
"tl": 10082859,
"mb": 8000,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
627,
628,
629,
630,
631,
652,
569,
458
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 27730,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
381,
382,
383,
653,
654
]
},
{
"tb": 256,
"tbk": 1,
"tl": 11,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
93,
94,
95,
96,
97,
98,
99,
100,
655,
422,
21
]
},
{
"tb": 24,
"tbk": 1,
"tl": 91066729,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
29,
656,
657,
658,
659,
660,
661,
662,
663
]
},
{
"tb": 32,
"tbk": 1,
"tl": 7012489,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
460,
461,
462,
463,
464,
664,
21
]
},
{
"tb": 256,
"tbk": 1,
"tl": 10062,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
50,
51,
52,
53,
54,
55,
56,
57,
665,
493
]
},
{
"tb": 9603,
"tbk": 3,
"tl": 30345,
"mb": 9603,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
50,
51,
52,
53,
54,
55,
56,
57,
666,
151
]
},
{
"tb": 480,
"tbk": 4,
"tl": 10016,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
460,
461,
462,
463,
464,
667,
668
]
},
{
"tb": 3456,
"tbk": 12,
"tl": 435,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
669,
670,
671,
672,
673
]
},
{
"tb": 153600,
"tbk": 3,
"tl": 15350,
"mb": 153600,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
259,
260,
674,
16
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 29726,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
381,
382,
383,
653,
675
]
},
{
"tb": 960,
"tbk": 6,
"tl": 9520883,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
676,
677,
678,
679,
680
]
},
{
"tb": 2400,
"tbk": 12,
"tl": 232,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
93,
681,
682,
683,
684,
685,
686
]
},
{
"tb": 144,
"tbk": 1,
"tl": 3149,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
687,
688,
689,
690,
691,
692,
693,
694,
695
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 4854181,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
203,
320,
321,
322,
323,
696,
697,
698
]
},
{
"tb": 288,
"tbk": 1,
"tl": 30953,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
699,
700,
701,
702,
240
]
},
{
"tb": 3632,
"tbk": 18,
"tl": 71,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
301,
302,
303,
304,
305,
306,
307,
209,
210
]
},
{
"tb": 48,
"tbk": 3,
"tl": 233,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
130,
131,
132,
133,
134,
135,
703
]
},
{
"tb": 24384,
"tbk": 21,
"tl": 77,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
17,
18,
19,
704,
705
]
},
{
"tb": 96,
"tbk": 3,
"tl": 29878,
"mb": 96,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
337,
706,
707,
708,
709,
710
]
},
{
"tb": 32,
"tbk": 1,
"tl": 3309,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
230,
231,
232,
711,
155,
156
]
},
{
"tb": 480,
"tbk": 4,
"tl": 6990,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
460,
461,
462,
463,
464,
667,
712
]
},
{
"tb": 192,
"tbk": 1,
"tl": 38077,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
486,
487,
488,
489,
490,
713,
422,
21,
333
]
},
{
"tb": 33554432,
"tbk": 524288,
"tl": 16564274,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
714,
715,
716,
717,
718,
719,
720,
721,
722
]
},
{
"tb": 84768,
"tbk": 1643,
"tl": 8581354,
"mb": 17024,
"mbk": 10,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
381,
723,
724,
725,
726,
727,
728
]
},
{
"tb": 512,
"tbk": 1,
"tl": 5472,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
729,
730,
731,
732,
733,
734,
735,
736
]
},
{
"tb": 314572800,
"tbk": 300,
"tl": 3545264247,
"mb": 314572800,
"mbk": 300,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
76,
77,
78,
79,
80,
81,
82,
623
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2076,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
417,
418,
419,
420,
421,
209,
210,
21
]
},
{
"tb": 3840,
"tbk": 16,
"tl": 2464,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
17,
18,
19,
737,
738
]
},
{
"tb": 720,
"tbk": 6,
"tl": 10694604,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
739,
544,
21,
333,
334
]
},
{
"tb": 96,
"tbk": 1,
"tl": 62,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
211,
212,
213,
740,
155
]
},
{
"tb": 103056,
"tbk": 226,
"tl": 60443,
"mb": 26448,
"mbk": 58,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
741,
742,
743,
744,
745,
746
]
},
{
"tb": 160,
"tbk": 1,
"tl": 9873,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
203,
320,
321,
322,
409,
747,
414,
155
]
},
{
"tb": 3008,
"tbk": 12,
"tl": 1272,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
93,
94,
748,
749,
750,
751,
752,
753,
754,
755
]
},
{
"tb": 24,
"tbk": 3,
"tl": 1255595,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
756,
757,
544,
21
]
},
{
"tb": 72,
"tbk": 1,
"tl": 99505556,
"mb": 72,
"mbk": 1,
"gb": 72,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
758,
759,
760,
761,
762,
763,
764,
765,
766
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 46391,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
76,
77,
78,
119,
767,
21
]
},
{
"tb": 16,
"tbk": 1,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
50,
51,
52,
53,
54,
55,
56,
768,
769,
155
]
},
{
"tb": 24,
"tbk": 1,
"tl": 619292,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
221,
222,
223,
224,
80,
81,
82,
83,
355,
21
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 10134,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
50,
51,
52,
53,
54,
55,
56,
57,
770,
404
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4267,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
771,
772,
773,
774,
775,
776,
777,
778
]
},
{
"tb": 3632,
"tbk": 18,
"tl": 507,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
301,
302,
303,
304,
305,
306,
343,
69,
779
]
},
{
"tb": 72,
"tbk": 1,
"tl": 32526,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
780,
433,
21,
333,
334
]
},
{
"tb": 314572800,
"tbk": 300,
"tl": 28597950682,
"mb": 314572800,
"mbk": 300,
"gb": 314572800,
"gbk": 300,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
76,
77,
78,
781,
782,
783
]
},
{
"tb": 192,
"tbk": 1,
"tl": 10119,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
784,
785,
786,
787,
370
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 2983,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
203,
788,
789,
790,
791,
792,
793,
794,
795
]
},
{
"tb": 192,
"tbk": 3,
"tl": 523,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
17,
18,
19,
796,
440
]
},
{
"tb": 144,
"tbk": 6,
"tl": 21389228,
"mb": 144,
"mbk": 6,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
278,
279,
280,
281,
282,
283,
284,
285,
797,
798
]
},
{
"tb": 96,
"tbk": 1,
"tl": 80,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
262,
799,
800,
801,
802,
803,
804,
805,
806
]
},
{
"tb": 314572800,
"tbk": 300,
"tl": 33696905648,
"mb": 314572800,
"mbk": 300,
"gb": 314572800,
"gbk": 300,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
807,
808,
809
]
},
{
"tb": 48,
"tbk": 3,
"tl": 336244394,
"mb": 48,
"mbk": 3,
"gb": 48,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
10,
50,
51,
52,
53,
54,
55,
56,
768,
810,
811
]
},
{
"tb": 3744,
"tbk": 36,
"tl": 518,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
93,
812,
813,
814,
815,
816,
817
]
},
{
"tb": 144,
"tbk": 6,
"tl": 325,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
818,
145,
146,
147,
148,
149
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3510,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
417,
418,
419,
420,
434,
411,
412,
819
]
},
{
"tb": 9600,
"tbk": 3,
"tl": 22581,
"mb": 9600,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
76,
77,
78,
820,
821,
822
]
},
{
"tb": 2880,
"tbk": 24,
"tl": 2353,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
460,
461,
462,
463,
464,
823,
69
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
50,
51,
52,
53,
54,
55,
56,
116,
290,
118
]
},
{
"tb": 16000,
"tbk": 125,
"tl": 107,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
824,
825,
826,
827,
828,
829,
830,
831
]
},
{
"tb": 12583008,
"tbk": 9,
"tl": 229085,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
832,
833,
834
]
},
{
"tb": 48,
"tbk": 3,
"tl": 9,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
23,
24,
336,
43,
21,
333
]
},
{
"tb": 48,
"tbk": 3,
"tl": 256,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
230,
231,
232,
479,
168,
835
]
},
{
"tb": 256,
"tbk": 1,
"tl": 637,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
65,
66,
67,
68,
69,
779,
836
]
},
{
"tb": 144,
"tbk": 6,
"tl": 9520910,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
278,
279,
280,
281,
282,
283,
284,
285,
837,
680
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 205601,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
203,
320,
321,
322,
323,
838,
839,
240
]
},
{
"tb": 48,
"tbk": 3,
"tl": 366,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
23,
335,
25,
397,
398,
399
]
},
{
"tb": 512,
"tbk": 1,
"tl": 29,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
840,
175,
28,
156
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1867,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
582,
583,
584,
585,
586,
587,
588,
589,
841
]
},
{
"tb": 72,
"tbk": 1,
"tl": 12550880,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
842,
843,
844,
845,
846,
21,
333,
334
]
},
{
"tb": 128,
"tbk": 1,
"tl": 249,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
847,
848,
849,
850,
371
]
},
{
"tb": 72,
"tbk": 1,
"tl": 12550861,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
758,
851,
852,
853,
854,
21,
333,
334
]
},
{
"tb": 3456,
"tbk": 12,
"tl": 4625,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
93,
855,
856,
857,
858,
859,
860
]
},
{
"tb": 16000,
"tbk": 4,
"tl": 542,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
130,
131,
132,
133,
134,
135,
861
]
},
{
"tb": 24,
"tbk": 1,
"tl": 2317,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
862,
863,
864,
865,
866,
867,
868,
869
]
},
{
"tb": 72,
"tbk": 3,
"tl": 283,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
477,
478,
168,
835,
27,
28
]
},
{
"tb": 512,
"tbk": 1,
"tl": 17,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
870,
175,
28,
156
]
},
{
"tb": 480,
"tbk": 4,
"tl": 206,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
460,
461,
462,
463,
464,
527,
308
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1706,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
211,
212,
213,
871,
210
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4277,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
872,
873,
28,
156
]
},
{
"tb": 240,
"tbk": 1,
"tl": 112453289,
"mb": 240,
"mbk": 1,
"gb": 240,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
874,
875,
876,
877,
878,
879,
880,
881,
882
]
},
{
"tb": 256,
"tbk": 1,
"tl": 8845,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
259,
883,
884,
155
]
},
{
"tb": 288,
"tbk": 3,
"tl": 42,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
352,
336,
43,
21,
333,
334
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 732795,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
885,
886,
887
]
},
{
"tb": 512,
"tbk": 1,
"tl": 3767548,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
888,
889,
890,
891,
21
]
},
{
"tb": 96,
"tbk": 1,
"tl": 2260308,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
211,
212,
213,
416,
256
]
},
{
"tb": 6912,
"tbk": 36,
"tl": 13698,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
93,
892,
893,
894,
895,
896,
897
]
},
{
"tb": 512,
"tbk": 1,
"tl": 9,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
898,
899,
900,
901,
902,
903,
904,
905
]
},
{
"tb": 110208,
"tbk": 428,
"tl": 225778,
"mb": 16384,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
203,
906,
907,
908,
909,
910,
911,
912,
913
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 112065703,
"mb": 2097152,
"mbk": 1,
"gb": 2097152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7,
914,
915
]
},
{
"tb": 144,
"tbk": 1,
"tl": 619315,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
500,
916,
917,
918,
287,
288,
289,
919,
355,
21
]
},
{
"tb": 24,
"tbk": 1,
"tl": 10138,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
920,
921,
59,
370
]
},
{
"tb": 24,
"tbk": 1,
"tl": 2328,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
922,
923,
924,
925,
926,
927,
928,
929
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2260224,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
17,
18,
19,
158,
256
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 3509,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
203,
930,
931,
932,
933,
934,
935,
936,
937
]
},
{
"tb": 96,
"tbk": 3,
"tl": 115,
"mb": 96,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
259,
938,
328,
155
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 28778,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
50,
428,
429,
430,
939,
940,
210,
21
]
},
{
"tb": 48,
"tbk": 3,
"tl": 357,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
23,
24,
25,
397,
398,
399
]
},
{
"tb": 96,
"tbk": 1,
"tl": 748,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
211,
212,
213,
941,
229
]
},
{
"tb": 648,
"tbk": 1,
"tl": 9977,
"mb": 648,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
942,
943,
944,
945,
946,
947,
948,
949,
950
]
},
{
"tb": 26085,
"tbk": 30,
"tl": 8387425,
"mb": 13056,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
381,
382,
383,
384,
951
]
},
{
"tb": 25165824,
"tbk": 3,
"tl": 70829039,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
47,
48,
952
]
},
{
"tb": 256,
"tbk": 1,
"tl": 12,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
76,
77,
78,
953,
422,
21
]
},
{
"tb": 13568,
"tbk": 32,
"tl": 92085,
"mb": 13568,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
203,
320,
321,
322,
409,
410,
435,
16
]
},
{
"tb": 80,
"tbk": 1,
"tl": 7007,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
954,
955,
28,
156
]
},
{
"tb": 128000,
"tbk": 4,
"tl": 1669,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
130,
131,
132,
133,
134,
135,
956
]
},
{
"tb": 13601,
"tbk": 1,
"tl": 10141,
"mb": 13601,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
50,
51,
52,
53,
54,
55,
56,
57,
957,
59
]
},
{
"tb": 8,
"tbk": 1,
"tl": 618676,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
301,
302,
303,
304,
305,
306,
958,
355,
21
]
},
{
"tb": 576,
"tbk": 4,
"tl": 1636,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
38,
39,
40,
41,
959,
650,
103
]
},
{
"tb": 6291456,
"tbk": 3,
"tl": 21052187,
"mb": 6291456,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
130,
131,
132,
133,
134,
135,
960
]
},
{
"tb": 2415919104,
"tbk": 36,
"tl": 491667700,
"mb": 805306368,
"mbk": 12,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
388,
536,
537,
538,
539,
961,
962,
963
]
},
{
"tb": 48,
"tbk": 1,
"tl": 2767730,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
964,
965,
966,
967,
968,
969,
970,
971,
972
]
},
{
"tb": 24,
"tbk": 1,
"tl": 2310,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
973,
974,
975,
976,
977,
978,
979,
980
]
},
{
"tb": 13800,
"tbk": 25,
"tl": 6093,
"mb": 3864,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
188,
189,
190,
981,
982,
983
]
},
{
"tb": 48,
"tbk": 1,
"tl": 126,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
964,
984,
985,
986,
987,
988,
989,
990,
21,
333
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 322340,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
230,
231,
232,
991,
992,
21
]
},
{
"tb": 16000,
"tbk": 4,
"tl": 2987,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
388,
536,
537,
538,
993,
372,
422,
21
]
},
{
"tb": 2736,
"tbk": 6,
"tl": 2534,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
741,
742,
743,
994,
995,
996
]
},
{
"tb": 2304,
"tbk": 12,
"tl": 4727,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
93,
892,
893,
894,
997,
998,
999
]
},
{
"tb": 73880,
"tbk": 39,
"tl": 138775,
"mb": 36992,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
381,
382,
383,
653,
1000
]
},
{
"tb": 32,
"tbk": 1,
"tl": 7012495,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
460,
461,
462,
463,
464,
1001,
21
]
},
{
"tb": 3145728,
"tbk": 3,
"tl": 3965378,
"mb": 3145728,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
130,
131,
132,
133,
134,
135,
1002
]
},
{
"tb": 872415232,
"tbk": 1,
"tl": 20236970,
"mb": 872415232,
"mbk": 1,
"gb": 872415232,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
76,
77,
78,
1003,
1004,
1005
]
},
{
"tb": 144,
"tbk": 1,
"tl": 11867845,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1006,
1007,
1008,
1009,
1010,
1011,
1012,
1013,
1014
]
},
{
"tb": 2976,
"tbk": 4,
"tl": 24739,
"mb": 2976,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
417,
418,
419,
420,
434,
643,
300,
258
]
},
{
"tb": 9603,
"tbk": 3,
"tl": 53,
"mb": 3201,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
460,
1015,
1016,
1017,
1018,
1019,
1020,
1021,
1022,
1023,
1024
]
},
{
"tb": 48,
"tbk": 3,
"tl": 334,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
76,
77,
78,
1025,
1026,
1027
]
},
{
"tb": 1536,
"tbk": 3,
"tl": 2235,
"mb": 1536,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
1028,
229,
28,
156
]
},
{
"tb": 5904,
"tbk": 6,
"tl": 169,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1029,
1030,
1031,
1032,
1033,
1034
]
},
{
"tb": 480,
"tbk": 4,
"tl": 202,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
460,
461,
462,
463,
464,
527,
209
]
},
{
"tb": 96,
"tbk": 3,
"tl": 10694583,
"mb": 96,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
460,
461,
462,
463,
464,
1035,
1036
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 134002,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
44,
1037,
1038
]
},
{
"tb": 96,
"tbk": 3,
"tl": 42,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
460,
1015,
1016,
1017,
1018,
1019,
1020,
1021,
1039,
1023,
1024
]
},
{
"tb": 24,
"tbk": 1,
"tl": 2294,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
63,
64,
1040,
1041,
1042,
1043,
1044,
1045,
1046,
1047
]
},
{
"tb": 216,
"tbk": 1,
"tl": 12659068,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1048,
1049,
1050,
1051,
1052,
1053,
1054,
1055,
1056
]
},
{
"tb": 1248,
"tbk": 12,
"tl": 323,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
93,
812,
813,
814,
1057,
1058,
1059
]
},
{
"tb": 192,
"tbk": 3,
"tl": 22670,
"mb": 192,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
17,
18,
19,
796,
476
]
},
{
"tb": 144,
"tbk": 3,
"tl": 2097691,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
38,
39,
40,
41,
1060,
114,
115
]
},
{
"tb": 6291456,
"tbk": 393216,
"tl": 228140,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
76,
77,
78,
1061,
1062,
1063
]
},
{
"tb": 120,
"tbk": 1,
"tl": 91066783,
"mb": 120,
"mbk": 1,
"gb": 120,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
1064,
1065,
1066,
1067,
1068,
1069,
1070,
1071,
1072
]
},
{
"tb": 1152,
"tbk": 6,
"tl": 212,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1073,
1074,
1075,
1076,
1077,
1078,
1079,
1080,
1081
]
},
{
"tb": 4000,
"tbk": 4,
"tl": 3847,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
203,
204,
205,
206,
207,
208,
371,
372
]
},
{
"tb": 64,
"tbk": 1,
"tl": 3,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1082,
1083,
1084,
1085,
1086,
1087,
1088,
1089,
1090
]
},
{
"tb": 12583008,
"tbk": 9,
"tl": 229454,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
173,
1091,
833
]
},
{
"tb": 96,
"tbk": 3,
"tl": 269,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
160,
161,
162,
163,
164,
165,
166,
167,
168,
835
]
},
{
"tb": 1728,
"tbk": 6,
"tl": 142,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1092,
1093,
1094,
1095,
1096,
1097,
1098,
1099,
1100
]
},
{
"tb": 96,
"tbk": 6,
"tl": 4761223,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1101,
1102,
1103,
1104,
1105,
1106,
1107,
1108
]
},
{
"tb": 1677721600,
"tbk": 1048576,
"tl": 10433834,
"mb": 1600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
230,
231,
232,
1109,
569,
458
]
},
{
"tb": 648,
"tbk": 1,
"tl": 112067943,
"mb": 648,
"mbk": 1,
"gb": 648,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
942,
1110,
1111,
1112,
1113,
1114,
1115,
1116,
1117
]
},
{
"tb": 7200,
"tbk": 3,
"tl": 290102090,
"mb": 7200,
"mbk": 3,
"gb": 7200,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
1,
221,
1118,
1119,
1120,
1121,
1122,
1123,
1124,
1125
]
},
{
"tb": 224,
"tbk": 1,
"tl": 8550,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
10,
11,
1126,
1127,
1128,
1129,
258
]
},
{
"tb": 96,
"tbk": 3,
"tl": 323,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
73,
74,
75,
76,
77,
78,
1130,
1026,
1027
]
},
{
"tb": 48,
"tbk": 3,
"tl": 181,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
22,
23,
335,
25,
26,
27,
28
]
},
{
"tb": 72,
"tbk": 1,
"tl": 12550874,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1131,
1132,
1133,
1134,
1135,
21,
333,
334
]
},
{
"tb": 72,
"tbk": 1,
"tl": 24,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
221,
222,
223,
224,
80,
81,
82,
225,
1136,
297
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2261,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
417,
418,
419,
420,
421,
308,
227,
433
]
},
{
"tb": 144,
"tbk": 1,
"tl": 3194,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
1137,
1138,
1139,
1140,
1141,
1142,
1143,
1144,
1145
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2256,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
203,
204,
205,
206,
207,
208,
308,
227
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 4747485,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
203,
320,
321,
322,
323,
324,
325,
1146
]
}
],
"ftbl": [
"[root]",
"0x5fa53369b4a9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5fa5337640ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa53391c736: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa53391c736: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa53391c736: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5336a8e7b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5fa53369d393: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x5fa53386d018: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x5fa53381c83e: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x5fa533c02b79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5fa533c01319: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5fa53379cf22: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa53379ffc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5fa533979aaf: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5fa5339f55d9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x5fa533662583: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x5fa533793122: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa5337a06b9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5fa533974d91: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5fa533840665: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:17)",
"0x5fa53385dcd4: winter_prover::Prover::prove (prover/src/lib.rs:171:37)",
"0x5fa53369a937: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x5fa5339d9e95: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x5fa53382112c: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:62:13)",
"0x5fa5338c2985: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:364:13)",
"0x5fa533a35b4c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:63:9)",
"0x5fa5337b8247: winter_verifier::perform_verification (verifier/src/lib.rs:223:43)",
"0x5fa5337c09d2: winter_verifier::verify (verifier/src/lib.rs:110:21)",
"0x5fa53376170a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa533906ba1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa533906ba1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa533906ba1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa533906ba1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339a9b3b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa5339a10b6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335ed6cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa53383cc5d: winter_prover::Prover::generate_proof (prover/src/lib.rs:266:43)",
"0x5fa5336419f5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5336419f5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5336419f5: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5fa53398bbf4: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5fa5336a2598: winter_prover::trace::Trace::validate (src/trace/mod.rs:177:13)",
"0x5fa533840f21: winter_prover::Prover::generate_proof (prover/src/lib.rs:370:17)",
"0x5fa53369e47b: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x5fa5338188b6: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x5fa53381c76c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x5fa5339c61ab: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x5fa5339c5696: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x5fa53385a4e4: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:691:36)",
"0x5fa533c015ca: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa533c02bbc: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa533c02bbc: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa533c02bbc: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5fa533c037fc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5fa533c037fc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5fa533c037fc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5fa533c00e2c: <winter_utils::serde::byte_reader::SliceReader as winter_utils::serde::byte_reader::ByteReader>::read_vec (src/serde/byte_reader.rs:151:22)",
"0x5fa533ba0d02: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:348:22)",
"0x5fa533b9be53: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:174:32)",
"0x5fa53365fcb0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x5fa5337bd869: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:214:32)",
"0x5fa533602603: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5fa533b84899: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5fa533af10aa: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa533acc656: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa533acc656: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa533acc656: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5337a5d1c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x5fa5339b2b5e: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x5fa533670d3c: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x5fa5337b798e: winter_verifier::perform_verification (verifier/src/lib.rs:303:42)",
"0x5fa533a0051a: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x5fa53364141c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa53364141c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa53364141c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5fa53398c939: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5fa53398c939: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5fa53398c939: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5fa53391bbc3: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5fa53398d1f9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5fa53398d1f9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5fa53398d1f9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5fa533815d29: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x5fa53375e2bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa533916ffe: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa533916ffe: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa533916ffe: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa533916ffe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5fa5339a843b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa53399fb76: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa533a4110b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa53366e01c: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x5fa533bb0739: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5fa533bae8ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa533baab6c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa533baab6c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa533baab6c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5fa533baa62c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5fa533baa62c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5fa533baa62c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5fa533baa6b6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x5fa533890b2b: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x5fa5338c073c: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x5fa53376923c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa533906977: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa533906977: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa533906977: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa533906977: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339a765e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa53399b517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335ec60e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa53383e5d6: winter_prover::Prover::generate_proof (prover/src/lib.rs:491:51)",
"0x5fa533a38fd0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:149:33)",
"0x5fa533a3c9e0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:122:17)",
"0x5fa53371c436: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5fa533872df4: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x5fa533872b12: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x5fa5337c05a9: winter_verifier::verify (verifier/src/lib.rs:95:32)",
"0x5fa53391a097: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5fa5339e2ea2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x5fa53383e868: winter_prover::Prover::generate_proof (prover/src/lib.rs:514:9)",
"0x5fa5338e9187: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5338e9187: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5338e9187: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5338e9187: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339aa29e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa53399ee27: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335ec7ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa5339b795b: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x5fa533c006cc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x5fa533bfed9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x5fa533bffcf8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x5fa533bffcf8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x5fa533bfc964: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5fa533bfcc13: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x5fa533a67e40: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x5fa533a62103: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x5fa5339dd02b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5fa5339dc681: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5fa5337f012b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5fa5337c58bd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5fa53368ef89: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5fa53386aa00: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5fa533a0541a: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x5fa5338cd5ae: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x5fa53368b89d: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x5fa5338cccce: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x5fa5338cf6c6: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x5fa5338c29ea: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:362:9)",
"0x5fa533ba5784: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:155:27)",
"0x5fa533b9c178: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:29)",
"0x5fa533728a03: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x5fa5336626f1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x5fa533674fa8: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x5fa5337c0907: winter_verifier::verify (verifier/src/lib.rs:108:19)",
"0x5fa53361fd99: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:118:9)",
"0x5fa5334789d5: winterfell::main (examples/src/main.rs:83:11)",
"0x5fa5338c308d: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:540:13)",
"0x5fa5337b713b: winter_verifier::perform_verification (verifier/src/lib.rs:263:61)",
"0x5fa53375d2fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa533a64776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa533a64776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa533a64776: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5fa53398d3b9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5fa53398d3b9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5fa53398d3b9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5fa533a89846: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x5fa5338c2c22: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:348:9)",
"0x5fa533a3b63b: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:50:13)",
"0x5fa533820d16: <examples::do_work::air::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (src/do_work/air.rs:13:9)",
"0x5fa5337c0718: winter_verifier::verify (verifier/src/lib.rs:97:38)",
"0x5fa533a85ab6: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x5fa53369cf42: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x5fa5339bb3d9: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x5fa5337b7cbe: winter_verifier::perform_verification (verifier/src/lib.rs:314:25)",
"0x5fa5338e1227: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5338e1227: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5338e1227: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5338e1227: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339a723e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa53399ed47: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335efbee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa53389110f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x5fa533798022: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa5337a09e9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5fa533977842: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5fa5337b8673: winter_verifier::perform_verification (verifier/src/lib.rs:177:9)",
"0x5fa5339dcccb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5fa5339dc471: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5fa5337f0f0b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5fa5337cad31: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5fa5337ce477: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5fa5337c31bb: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5fa53375ae5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa533906771: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa533906771: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa533906771: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa533906771: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339a70cb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa5339a09c6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335ed0cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa533817e5a: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x5fa53375ea9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa533870f58: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa533870f58: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa533870f58: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5fa53398bc17: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5fa5339b0698: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x5fa533a8d495: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x5fa53383fbc5: winter_prover::Prover::generate_proof (prover/src/lib.rs:598:34)",
"0x5fa53378c972: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa5337a0a19: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5fa533976402: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5fa5338407ad: winter_prover::Prover::generate_proof (prover/src/lib.rs:438:13)",
"0x5fa533882a92: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x5fa5336594c6: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:493:32)",
"0x5fa53360f09a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5fa5336dc2a2: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5fa5335dac9b: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5fa5335f7906: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5fa5337609fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa53391b856: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa53391b856: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa53391b856: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5fa53391a067: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5fa533876a53: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x5fa533880cb4: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x5fa5339b8848: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x5fa5337b7c0f: winter_verifier::perform_verification (verifier/src/lib.rs:308:25)",
"0x5fa53364193c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5fa53364193c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5fa53364193c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5fa533a8d6d0: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x5fa533a6b01d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x5fa533ba1dc4: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:361:22)",
"0x5fa533ba13d6: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:146:27)",
"0x5fa533815c8c: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x5fa533a005d7: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x5fa533a75e0b: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x5fa533a831b2: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x5fa53376827c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa5338d9557: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5338d9557: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5338d9557: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5338d9557: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa53398779d: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5fa5339a321c: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335ef4ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa53381f82a: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x5fa533baeda0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa533baa5f9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5fa533ba95a1: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5fa533ba9eb0: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x5fa533890a4e: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x5fa5338c32c9: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:534:17)",
"0x5fa533725428: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x5fa533754629: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x5fa53367560c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x5fa53363f909: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5fa533a074cb: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x5fa5339f4d42: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x5fa53376851c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa53390ef17: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa53390ef17: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa53390ef17: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa53390ef17: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339a8b2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa53399e147: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335eda9e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa53383c416: winter_prover::Prover::generate_proof (prover/src/lib.rs:205:38)",
"0x5fa53365c53c: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x5fa533890bf6: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x5fa533a6b00c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x5fa53387a11b: winter_prover::trace::commitment::build_segment_queries::{{closure}}::{{closure}} (src/trace/commitment.rs:162:42)",
"0x5fa5336f8019: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5fa533a6a82c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x5fa533872b58: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x5fa533763e4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa5336412ec: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5336412ec: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5336412ec: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5fa53398df19: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5fa53398df19: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5fa53398df19: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5fa533a065d6: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x5fa533a06440: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5fa53398d039: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5fa53398d039: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5fa53398d039: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5fa533872ad6: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x5fa53375f51c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa5339d12be: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5339d12be: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5339d12be: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5fa53398bb77: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5fa533728c58: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x5fa53383c656: winter_prover::Prover::generate_proof (prover/src/lib.rs:228:27)",
"0x5fa5339b7bf3: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x5fa53374cf3a: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x5fa53375439c: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x5fa533b026ac: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa533b026ac: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa533b026ac: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5fa533ad34a9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5fa533ad34a9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5fa533ad34a9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5fa5339b0a2c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x5fa533876b07: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x5fa533a6b95b: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x5fa5338729cc: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x5fa53375cdbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa533900127: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa533900127: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa533900127: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa533900127: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339a701e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa53399d6b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335effae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa5339bde38: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x5fa53391c916: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa53391c916: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa53391c916: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5336a8fbb: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5fa5339afe5d: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x5fa5339b3406: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x5fa5339c1940: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x5fa5339d06fb: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x5fa533676185: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5fa53391ccd6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa53391ccd6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa53391ccd6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa53383d00d: winter_prover::Prover::generate_proof (prover/src/lib.rs:300:37)",
"0x5fa53361f2b2: <examples::do_work::DoWorkExample<H> as examples::Example>::prove (src/do_work/mod.rs:108:9)",
"0x5fa533477d4d: winterfell::main (examples/src/main.rs:49:17)",
"0x5fa5338210bd: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:61:13)",
"0x5fa5336a20ab: winter_prover::trace::Trace::validate (src/trace/mod.rs:122:26)",
"0x5fa533820e42: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::new (src/do_work/air.rs:35:23)",
"0x5fa533658bb0: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:221:17)",
"0x5fa533603922: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5fa533a324dd: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::SpecFold>::spec_fold (iter/adapters/zip.rs:685:25)",
"0x5fa533a1eee7: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::fold (iter/adapters/zip.rs:249:9)",
"0x5fa533a099b7: <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/zip.rs:103:9)",
"0x5fa5337a5f79: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x5fa5338d7141: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5338d7141: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5338d7141: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5338d7141: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339a9f9b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa53399e346: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335ec88b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa53383c4e3: winter_prover::Prover::generate_proof (prover/src/lib.rs:209:39)",
"0x5fa53382108f: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:60:9)",
"0x5fa53386c151: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x5fa533883df3: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x5fa53383d583: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:33)",
"0x5fa533a81e9d: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x5fa53375bb7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa5338fdf11: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5338fdf11: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5338fdf11: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5338fdf11: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339a83db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa53399dd46: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335ecacb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa533880c0e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x5fa533ba4012: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa533ba51a9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5fa533ba6878: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5fa533b9cc1a: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:13)",
"0x5fa5334788fd: winterfell::main (examples/src/main.rs:80:24)",
"0x5fa533a6f274: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x5fa533a82152: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x5fa5338da317: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5338da317: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5338da317: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5338da317: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339a806e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa5339a3587: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335ec47e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa533817c6a: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x5fa533c01ab0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa533c01ce9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5fa533c02f12: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5fa533c01d49: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x5fa533ba7d7a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x5fa5338901a5: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x5fa5337b7e15: winter_verifier::perform_verification (verifier/src/lib.rs:320:5)",
"0x5fa533768a5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa5338d79a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5338d79a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5338d79a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5338d79a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339a971e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa53399c517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335ee37e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa533890f51: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x5fa53373f670: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:40:22)",
"0x5fa533a3b6e7: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:13)",
"0x5fa533840b32: winter_prover::Prover::generate_proof (prover/src/lib.rs:403:21)",
"0x5fa53369f87b: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:235:25)",
"0x5fa533a6aa62: examples::do_work::prover::build_do_work_trace (src/do_work/prover.rs:65:5)",
"0x5fa53385e668: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces::{{closure}} (src/do_work/prover.rs:32:27)",
"0x5fa533ba0a1e: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:168:21)",
"0x5fa533b9be38: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:176:34)",
"0x5fa5337817b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa53379fd89: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5fa533975f32: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5fa5337b848c: winter_verifier::perform_verification (verifier/src/lib.rs:182:9)",
"0x5fa5338707e9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5fa5337a1f24: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x5fa5339fdca7: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x5fa53368977b: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x5fa53373c7fb: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x5fa533674e38: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x5fa53367627d: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x5fa5338c3239: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:536:13)",
"0x5fa533762e8c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa53391c966: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa53391c966: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa53391c966: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5339b06ff: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x5fa53383fa4f: winter_prover::Prover::generate_proof (prover/src/lib.rs:590:25)",
"0x5fa5339fda9a: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x5fa53378e712: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa5337a0149: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5fa533977122: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5fa533876c91: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x5fa53391c556: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa53391c556: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa53391c556: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5339eac60: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x5fa533876bd9: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x5fa53383face: winter_prover::Prover::generate_proof (prover/src/lib.rs:593:29)",
"0x5fa5337a1c9d: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x5fa5339f5152: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x5fa53381af48: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x5fa533ba52bd: <winter_air::proof::commitments::Commitments as winter_utils::serde::Deserializable>::read_from (src/proof/commitments.rs:108:22)",
"0x5fa533b9bbdc: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:167:27)",
"0x5fa5338c9c93: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:505:13)",
"0x5fa533726484: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x5fa5338d57e7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5338d57e7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5338d57e7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5338d57e7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339a973e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa53399f7f7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335f032e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa533811d13: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:253:9)",
"0x5fa5338d86b1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5338d86b1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5338d86b1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5338d86b1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339a671b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa53399fe16: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335ef23b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa533662409: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x5fa5339c1872: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x5fa5338523dd: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:659:26)",
"0x5fa53383cc88: winter_prover::Prover::generate_proof (prover/src/lib.rs:268:13)",
"0x5fa533b96799: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5fa533b91b39: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5fa533af4830: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa533af6899: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5fa533ad1451: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5fa5339eb10a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x5fa5336a9303: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x5fa533a75c25: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x5fa5338dc911: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5338dc911: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5338dc911: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5338dc911: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339a7f1b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa5339a3516: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335ed20b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa533674bd7: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x5fa5337b69d9: winter_verifier::perform_verification (verifier/src/lib.rs:183:13)",
"0x5fa533a059a3: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x5fa533a8982c: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x5fa533a89983: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x5fa533ba6118: <winter_air::proof::context::Context as winter_utils::serde::Deserializable>::read_from (src/proof/context.rs:184:35)",
"0x5fa533b9bbf7: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:27)",
"0x5fa533a85c0e: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x5fa533a83104: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x5fa53383f38b: winter_prover::Prover::generate_proof (prover/src/lib.rs:561:9)",
"0x5fa5339ea782: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x5fa533ba2709: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5fa533ba34bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa533ba6776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa533ba6776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa533ba6776: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa533ba12b9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5fa533ba170b: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:211:22)",
"0x5fa533b9c15d: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:188:24)",
"0x5fa533a75caa: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x5fa533ba375c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa533ba6726: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa533ba6726: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa533ba6726: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa533b9bd52: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:172:33)",
"0x5fa533767a9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa533901111: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa533901111: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa533901111: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa533901111: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339a69fb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa53399fcc6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335ee86b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa53373ea5c: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:82:9)",
"0x5fa533759c0c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa5338fbb31: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5338fbb31: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5338fbb31: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5338fbb31: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339a90ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa53399d5a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335eee5b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa533728967: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x5fa53375e55c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa5339081c7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5339081c7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5339081c7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5339081c7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339a706e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa53399c2c7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa53373a42e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa53383c79f: winter_prover::Prover::generate_proof (prover/src/lib.rs:243:41)",
"0x5fa5339b0f53: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x5fa533890214: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x5fa53377a622: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa5337a0839: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5fa533979252: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5fa5339eadb8: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x5fa533817db1: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x5fa5336074aa: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5fa533a47a05: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5fa53391cb46: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa53391cb46: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa53391cb46: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5336a8d3b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5fa5339c6c77: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x5fa5339bec8c: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x5fa5339c57bc: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x5fa533a3c58d: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:33)",
"0x5fa533840bd3: winter_prover::Prover::generate_proof (prover/src/lib.rs:407:21)",
"0x5fa53390f9a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa53390f9a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa53390f9a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa53390f9a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339aa3de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa5339a14c9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335efede: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa53369c5e0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x5fa533a065ed: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x5fa5339e3312: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x5fa53369c9cb: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x5fa53360932c: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5fa533872954: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x5fa5338dd5b7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5338dd5b7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5338dd5b7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5338dd5b7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339a6b0e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa53399ea37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335ee2be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa533876c76: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x5fa5339e3580: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x5fa53374cd36: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x5fa5339c426a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x5fa5339c1903: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x5fa533ba1f46: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:365:21)",
"0x5fa533879078: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x5fa53361261a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5fa5336cae45: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5fa533812210: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:197:28)",
"0x5fa5339c4476: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:228:38)",
"0x5fa533773982: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa53379fc39: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5fa533978a51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5fa5338186c9: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x5fa53371c30d: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5fa53365fc8d: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x5fa533760f3a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa5338d215e: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5338d215e: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5338d215e: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5338d215e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5fa5339a821e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa53399d957: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa533a3476e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa5339b7755: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:144:35)",
"0x5fa5338df727: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5338df727: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5338df727: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5338df727: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339a95de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa53399f507: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335efcfe: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa533819277: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x5fa5339b7693: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x5fa533652b09: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:211:31)",
"0x5fa533609d3a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5fa5336fa0a8: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5fa5335d33ba: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5fa5335f363a: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5fa5338f0787: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5338f0787: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5338f0787: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5338f0787: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339a767e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa53399e807: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335f071e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa5336a033a: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:132:32)",
"0x5fa53376240c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa5338f1bc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5338f1bc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5338f1bc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5338f1bc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339a7a9e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa5339a2c79: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335ed94e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa53373f77a: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:50:26)",
"0x5fa5339e3810: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x5fa5338157be: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x5fa533813f17: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5fa5336535ac: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:293:57)",
"0x5fa53386c833: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x5fa53398bebb: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa53398bebb: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa53398bebb: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa53398bebb: <[V] as alloc::slice::Concat<T>>::concat (alloc/src/slice.rs:712:26)",
"0x5fa53398bcab: alloc::slice::<impl [T]>::concat (alloc/src/slice.rs:561:9)",
"0x5fa53387a199: winter_prover::trace::commitment::build_segment_queries::{{closure}}::{{closure}} (src/trace/commitment.rs:164:27)",
"0x5fa533878736: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:159:13)",
"0x5fa533907637: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa533907637: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa533907637: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa533907637: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339aaade: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa5339a34b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335edd0e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa53383ce32: winter_prover::Prover::generate_proof (prover/src/lib.rs:286:23)",
"0x5fa5339e36ec: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x5fa53374d04d: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x5fa5339b7853: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x5fa53378f5e2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa5337a0209: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5fa53397a0e2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5fa53367649b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x5fa533a623fb: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x5fa533891010: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x5fa53374cd7b: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x5fa5339c4527: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:228:37)",
"0x5fa5337a3564: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x5fa5339f99fc: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x5fa533a81c77: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x5fa5338f3781: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5338f3781: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5338f3781: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5338f3781: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339a8dab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa53399d306: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335ed09b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa533851c73: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:634:36)",
"0x5fa533840808: winter_prover::Prover::generate_proof (prover/src/lib.rs:440:13)",
"0x5fa533ba18d2: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:215:25)",
"0x5fa533ba55bd: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:151:28)",
"0x5fa5338734f8: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x5fa533723499: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x5fa533781ca2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa5337a0539: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5fa533978b42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5fa5339abffc: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x5fa5338ccd4a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x5fa5339f5524: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x5fa5339eaa51: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x5fa533778392: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa53379fa59: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5fa533974b42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5fa5337420d9: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:174:17)",
"0x5fa53373ff30: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:54:17)",
"0x5fa533bbc81b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5fa533bbc541: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5fa533bb8d7b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5fa533bb33a1: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5fa533bb3b37: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5fa533bae6db: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5fa533765dbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa5338d43c1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5338d43c1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5338d43c1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5338d43c1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339a99db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa53399cd06: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335eeeab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa5337b6d9f: winter_verifier::perform_verification (verifier/src/lib.rs:216:40)",
"0x5fa5339bf7a5: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x5fa53385a8e7: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:706:26)",
"0x5fa53383e110: winter_prover::Prover::generate_proof (prover/src/lib.rs:472:37)",
"0x5fa533797152: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa5337a0389: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5fa533978ff2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5fa533a75f89: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x5fa533a357eb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:39:30)",
"0x5fa5339cf835: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x5fa5337251d0: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x5fa5337c18d1: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:101:85)",
"0x5fa533612432: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5fa53372ec0a: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:107:27)",
"0x5fa53364bbff: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5fa53372c9a4: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:113:9)",
"0x5fa533675cae: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x5fa5337b76c1: winter_verifier::perform_verification (verifier/src/lib.rs:295:27)",
"0x5fa533a81bcd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x5fa5337662fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa5338e3135: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5338e3135: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5338e3135: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5338e3135: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5fa5339a710e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa53399c737: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335eccce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa5339c41b0: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:218:46)",
"0x5fa533c01d18: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x5fa533c0300a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x5fa533c0300a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x5fa533c02dae: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x5fa533c02dae: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x5fa533c02e9d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x5fa5338db197: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5338db197: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5338db197: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5338db197: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339a9f6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa53399b599: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335eec6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa5339bce47: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x5fa533886a48: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x5fa533890dda: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x5fa533a3c4c0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:28)",
"0x5fa5336763ef: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x5fa5339dd6eb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5fa5339dc891: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5fa5337eff4b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5fa5337dbd8f: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5fa5337e7711: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5fa5337e2caa: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5fa53373c9d0: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x5fa533baf1a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa533baf1a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa533baf1a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa533baf1a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5fa533baf5ee: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa533baf5b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa533bb084e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa533bae299: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x5fa53381c7d0: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x5fa533a3c819: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:129:9)",
"0x5fa53376390c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa5338ebf91: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5338ebf91: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5338ebf91: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5338ebf91: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339a6edb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa5339a0626: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335ec4ab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa533851ba6: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:630:42)",
"0x5fa53383dc77: winter_prover::Prover::generate_proof (prover/src/lib.rs:442:35)",
"0x5fa533bfcd9e: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x5fa5336747d0: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x5fa533ba0862: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:164:22)",
"0x5fa5338e2777: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5338e2777: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5338e2777: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5338e2777: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339a72de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa5339a3697: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335efb8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa533890131: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x5fa5336702ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x5fa533880c1d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x5fa533812723: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:200:34)",
"0x5fa533601b0a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5fa5336d51bf: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5fa533ba4502: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa533ba5179: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5fa533ba6ae2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5fa533b9c916: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:13)",
"0x5fa5339022f0: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5339022f0: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5339022f0: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5339022f0: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5fa5339a65bb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa5339a1da6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335eddbb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa5339f5075: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x5fa5338c9bb8: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:510:13)",
"0x5fa53373ebd9: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:82:31)",
"0x5fa533614553: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5fa533914907: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa533914907: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa533914907: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa533914907: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339a7fde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa5339a1627: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335ec93e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa53361fd54: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:112:30)",
"0x5fa5336a0511: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:132:51)",
"0x5fa533602a1a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5fa533a45da5: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5fa53387301f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x5fa53372af5f: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x5fa533bbcd2b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5fa533bbc751: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5fa533bb8adb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5fa533bb576e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5fa533bb7220: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5fa533bb6428: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5fa533a05299: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x5fa53367523c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x5fa53368ae22: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x5fa5337205c4: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x5fa533a40d04: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x5fa5337a7191: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x5fa5338f3107: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5338f3107: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5338f3107: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5338f3107: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339a84fe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa5339a24b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335ef86e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa5338b8d8f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x5fa533818be1: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x5fa533815fbc: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x5fa53381b211: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x5fa533a3564a: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:25:25)",
"0x5fa5337b7810: winter_verifier::perform_verification (verifier/src/lib.rs:302:9)",
"0x5fa533741f72: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:169:36)",
"0x5fa5336a61f6: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x5fa533a75c8f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x5fa5339bb1a4: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x5fa5339e2f64: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:142:33)",
"0x5fa53375d83c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa53391c786: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa53391c786: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa53391c786: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa53383cf85: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:39)",
"0x5fa533784912: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa5337a0119: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5fa53397594f: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5fa5339b0d8a: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x5fa53391c466: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa53391c466: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa53391c466: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa53383d051: winter_prover::Prover::generate_proof (prover/src/lib.rs:301:32)",
"0x5fa533bbc9cb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5fa533bbc6a1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5fa533bb8c9b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5fa533bb3471: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5fa533bb3af7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5fa533bae72b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5fa533a62450: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x5fa533908c51: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa533908c51: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa533908c51: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa533908c51: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339a6f6b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa5339a1a96: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335ee53b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa533674a47: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x5fa5339bb1bf: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x5fa533a8d6eb: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x5fa5339b4af6: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x5fa5337b7d3a: winter_verifier::perform_verification (verifier/src/lib.rs:316:28)",
"0x5fa53376294c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa5338d6ae7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5338d6ae7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5338d6ae7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5338d6ae7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339a853e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa5339a2d37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335eed4e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa53385e619: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces (src/do_work/prover.rs:30:9)",
"0x5fa533757fee: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x5fa53367542b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x5fa5339d1bc2: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x5fa53386f240: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x5fa5339e5bb1: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x5fa53378ec02: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa53379fcc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5fa533979d48: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5fa533840bf6: winter_prover::Prover::generate_proof (prover/src/lib.rs:408:17)",
"0x5fa533bbcb7b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5fa533bbc5f1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5fa533bb8bbb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5fa533bb587e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5fa533bb6c4c: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5fa533bb5d8a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5fa5338f2877: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5338f2877: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5338f2877: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5338f2877: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339a770e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa5339a3317: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335eface: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa5339bb532: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x5fa5338ea666: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5338ea666: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5338ea666: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5338ea666: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5fa5339a6b6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa53399f5dc: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5339ae9be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa5339b0edb: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x5fa533883eb0: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x5fa53383c8ba: winter_prover::Prover::generate_proof (prover/src/lib.rs:257:22)",
"0x5fa533a060c6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa533a060c6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa533a060c6: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5fa533815ca3: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x5fa533ba2187: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x5fa533ba0fed: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:357:24)",
"0x5fa53390e451: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa53390e451: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa53390e451: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa53390e451: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339a77db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa53399c136: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335ed65b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa53367497f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x5fa533905f40: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa533905f40: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa533905f40: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa533905f40: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5fa5339a814b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa53399f8a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335ec27b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa5339fdbca: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x5fa5339d08ce: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x5fa5339f98e0: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x5fa533a8d65e: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x5fa5339b889e: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x5fa53375e01c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa5338f0ee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5338f0ee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5338f0ee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5338f0ee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa533980bcf: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5fa53399e849: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335ede5e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa5337c0784: winter_verifier::verify (verifier/src/lib.rs:101:24)",
"0x5fa5339cf6ed: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x5fa5336598e9: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:641:17)",
"0x5fa533a81c96: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x5fa5338bcd61: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x5fa5337b733e: winter_verifier::perform_verification (verifier/src/lib.rs:272:24)",
"0x5fa533a6208f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x5fa533ba0ec9: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:352:21)",
"0x5fa533815d84: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x5fa533a62184: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x5fa53381aca7: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x5fa533a67e2b: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x5fa5339be76a: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x5fa533605c7a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5fa53376366c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa5338d1c21: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5338d1c21: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5338d1c21: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5338d1c21: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339a83ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa53399bac6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335f001b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa53383e6a3: winter_prover::Prover::generate_proof (prover/src/lib.rs:495:52)",
"0x5fa5338da541: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5338da541: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5338da541: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5338da541: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339a890b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa53399e276: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335ee45b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa533674b0f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x5fa5337e9451: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x5fa5337ef77d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x5fa5337e310e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x5fa53391be1c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa53391be1c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa53391be1c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5fa53398ce79: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5fa53398ce79: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5fa53398ce79: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5fa53383e6be: winter_prover::Prover::generate_proof (prover/src/lib.rs:500:39)",
"0x5fa53386c81d: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x5fa53383ef26: winter_prover::Prover::generate_proof (prover/src/lib.rs:548:13)",
"0x5fa533a6f35d: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x5fa5337c59dd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5fa53368e83f: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5fa53386a6c3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5fa533bb266d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5fa533bad538: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5fa533babdd7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5fa533748175: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x5fa5338407ed: winter_prover::Prover::generate_proof (prover/src/lib.rs:439:13)",
"0x5fa5339e32ef: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x5fa5339c84a2: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x5fa5339c7147: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5fa533851df7: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:645:31)",
"0x5fa53375a91c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa5338e4dc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5338e4dc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5338e4dc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5338e4dc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339866b3: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5fa53399bbc9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335ee01e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa53383cf62: winter_prover::Prover::generate_proof (prover/src/lib.rs:291:36)",
"0x5fa533b91e7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa533b0257c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa533b0257c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa533b0257c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5fa533ad2cc9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5fa533ad2cc9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5fa533ad2cc9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5fa5338c1e2a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x5fa5339d11f6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5fa533675c48: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5fa53369122a: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x5fa533691307: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5fa5337b8156: winter_verifier::perform_verification (verifier/src/lib.rs:225:13)",
"0x5fa5339b7bd0: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x5fa5339dddab: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5fa5339dc7e1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5fa5337f04eb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5fa5337c579d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5fa53368e0fc: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5fa53368b911: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x5fa533820b27: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x5fa53381e8cd: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x5fa533a0042f: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x5fa533a00504: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x5fa5338c1e3f: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x5fa5338fc9d1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5338fc9d1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5338fc9d1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5338fc9d1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339a8cfb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa5339a1026: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335ef64b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa533674c9f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x5fa53375f7bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa53390cb27: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa53390cb27: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa53390cb27: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa53390cb27: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa533985b76: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5fa53399fba7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335eed6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa53387dd5b: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x5fa533bb26cd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5fa533bad84b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5fa533babf13: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5fa533a38f6c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:148:31)",
"0x5fa533a88cb7: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x5fa533a3aa27: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:272:18)",
"0x5fa533a39297: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:166:30)",
"0x5fa533768f9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa5338e6d37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5338e6d37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5338e6d37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5338e6d37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339a826e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa53399b6a7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335eddde: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa533851d43: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:638:34)",
"0x5fa5337604bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa5339134c8: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5339134c8: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5339134c8: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5339134c8: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5fa5339aa72e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa5339a1407: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa533a8a17e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa5338cde5c: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x5fa533589149: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5fa533587c19: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5fa533586030: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa533586298: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x5fa533585b5a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x5fa533585b5a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x5fa53347a6a1: alloc::string::String::reserve (alloc/src/string.rs:1152:9)",
"0x5fa53347a6a1: <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend (alloc/src/string.rs:2173:14)",
"0x5fa53347a77c: <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter (alloc/src/string.rs:2093:9)",
"0x5fa533818d04: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x5fa533765b1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa5338ee7cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5338ee7cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5338ee7cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5338ee7cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5fa5339a986e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa53399b947: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335ece8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa5338ccbf6: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x5fa533900ee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa533900ee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa533900ee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa533900ee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339a6dde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa53399dc57: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335f047e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa533a05994: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x5fa5339c43df: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:226:50)",
"0x5fa5338ec7f7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5338ec7f7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5338ec7f7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5338ec7f7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339a8b7e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa5339a2f39: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335ed0ee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa53383c603: winter_prover::Prover::generate_proof (prover/src/lib.rs:217:20)",
"0x5fa5338faf37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5338faf37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5338faf37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5338faf37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339aa2be: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa5339a32d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335ed4de: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa5338122c4: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:198:23)",
"0x5fa53378d842: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5fa5337a0419: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5fa533975ba2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5fa53375457e: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x5fa53369123f: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x5fa5337687bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa53391c876: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa53391c876: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa53391c876: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa53383cfc9: winter_prover::Prover::generate_proof (prover/src/lib.rs:299:44)",
"0x5fa533728a1e: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x5fa53375abbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5fa5338e3991: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5fa5338e3991: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5fa5338e3991: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5fa5338e3991: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5fa5339a937b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5fa53399eed6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5fa5335ec78b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5fa5337b6cd2: winter_verifier::perform_verification (verifier/src/lib.rs:212:41)",
"0x5fa5339bf866: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)"
]
}