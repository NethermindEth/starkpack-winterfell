{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/StarkPack/starkpack-winterfell/target/debug/winterfell do-work -n 4 -l 65536",
"pid": 25290,
"tg": 138083285,
"te": 153772397,
"pps": [
{
"tb": 480,
"tbk": 4,
"tl": 10392,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7
]
},
{
"tb": 192,
"tbk": 1,
"tl": 3927,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
16,
17
]
},
{
"tb": 12800,
"tbk": 4,
"tl": 71,
"mb": 3200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
22,
23,
24,
25
]
},
{
"tb": 128,
"tbk": 4,
"tl": 6132255,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
26,
27,
28,
29,
30,
31,
32,
33,
34,
35
]
},
{
"tb": 8388608,
"tbk": 4,
"tl": 3415644,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
36,
37,
38,
39
]
},
{
"tb": 16777344,
"tbk": 12,
"tl": 300076,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
36,
40,
41,
42
]
},
{
"tb": 6400,
"tbk": 4,
"tl": 494765,
"mb": 1600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
43,
44,
45,
46,
47,
48,
49
]
},
{
"tb": 128,
"tbk": 4,
"tl": 366,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
26,
27,
28,
29,
30,
31,
32,
33,
34,
50
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2839,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
51,
52,
53,
54,
55,
56,
57,
58,
59
]
},
{
"tb": 24,
"tbk": 1,
"tl": 830314,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
60,
61,
62,
63,
64,
65,
66,
67,
68,
69
]
},
{
"tb": 320,
"tbk": 4,
"tl": 6131182,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
70,
71,
72,
73,
74,
75,
76,
77,
78
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 830306,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
79,
80,
81,
82,
83,
84,
85,
64,
65,
66,
67
]
},
{
"tb": 12800,
"tbk": 4,
"tl": 33634,
"mb": 12800,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
79,
80,
81,
82,
83,
84,
86,
87,
88
]
},
{
"tb": 524288,
"tbk": 1,
"tl": 153248040,
"mb": 524288,
"mbk": 1,
"gb": 524288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
36,
89,
90,
91
]
},
{
"tb": 32,
"tbk": 1,
"tl": 3941,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
92,
93,
94,
95,
96,
97,
98,
99,
100
]
},
{
"tb": 192,
"tbk": 1,
"tl": 33594,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
102,
103,
104,
105,
106,
107,
69,
108
]
},
{
"tb": 2048,
"tbk": 4,
"tl": 3848,
"mb": 2048,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
109,
110,
111,
112
]
},
{
"tb": 96,
"tbk": 1,
"tl": 15417208,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
60,
113,
114,
115,
116,
69,
108,
117
]
},
{
"tb": 153600,
"tbk": 96,
"tl": 458,
"mb": 1600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
79,
80,
81,
82,
83,
84,
118,
119,
120
]
},
{
"tb": 204800,
"tbk": 128,
"tl": 463229,
"mb": 204800,
"mbk": 128,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
79,
80,
81,
121,
122,
123,
124,
125,
126
]
},
{
"tb": 96,
"tbk": 1,
"tl": 5036276,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
127,
128,
129,
130,
131,
132,
133,
134,
135
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 203422,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
136,
137,
138,
139,
140,
141,
142,
143
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 3318,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
136,
144,
145,
146,
147,
148,
149,
150,
151
]
},
{
"tb": 13248,
"tbk": 24,
"tl": 6377,
"mb": 3864,
"mbk": 7,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
152,
153,
154,
155,
156,
157
]
},
{
"tb": 2856,
"tbk": 4,
"tl": 3735,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
158,
159,
160,
161,
162,
163,
164,
107
]
},
{
"tb": 192,
"tbk": 1,
"tl": 153265690,
"mb": 192,
"mbk": 1,
"gb": 192,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
165,
166,
167,
168,
169,
170,
171,
69
]
},
{
"tb": 15360,
"tbk": 4,
"tl": 540,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
172,
173,
174,
175,
176,
177,
178
]
},
{
"tb": 192,
"tbk": 4,
"tl": 16482349,
"mb": 192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
180,
181,
182,
183,
184,
185
]
},
{
"tb": 384,
"tbk": 4,
"tl": 50,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
186,
187,
188,
69,
108,
117
]
},
{
"tb": 256,
"tbk": 1,
"tl": 12,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
79,
80,
81,
82,
83,
84,
189,
107,
69
]
},
{
"tb": 192,
"tbk": 1,
"tl": 11311,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
102,
103,
104,
105,
190,
191,
192,
193
]
},
{
"tb": 4608,
"tbk": 16,
"tl": 553,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
196,
197,
198,
199,
200
]
},
{
"tb": 65176,
"tbk": 38,
"tl": 121256,
"mb": 32640,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
201,
202,
203,
204,
205
]
},
{
"tb": 384,
"tbk": 8,
"tl": 33993900,
"mb": 384,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
60,
206,
207,
208,
209,
210,
211,
212,
213
]
},
{
"tb": 512,
"tbk": 1,
"tl": 1358,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
79,
80,
81,
121,
122,
123,
214,
215,
216
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
217,
218,
219,
171,
69,
108
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 24827,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
201,
202,
203,
204,
220
]
},
{
"tb": 576,
"tbk": 4,
"tl": 1707,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
43,
44,
45,
46,
221,
222,
215
]
},
{
"tb": 128,
"tbk": 1,
"tl": 137,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
223,
224,
225,
226,
227,
228,
229,
230,
231
]
},
{
"tb": 72,
"tbk": 1,
"tl": 831133,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
60,
61,
62,
63,
64,
65,
66,
232,
68,
69
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2031,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
233,
234
]
},
{
"tb": 192,
"tbk": 1,
"tl": 8461,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
235,
236,
237,
238,
111
]
},
{
"tb": 96,
"tbk": 1,
"tl": 2871248,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
239,
240,
241,
242,
243
]
},
{
"tb": 512,
"tbk": 1,
"tl": 55,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
244,
245,
246,
247,
248,
249,
250,
251
]
},
{
"tb": 64,
"tbk": 1,
"tl": 7705,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
252,
253,
254,
255,
256
]
},
{
"tb": 419430400,
"tbk": 400,
"tl": 5883190792,
"mb": 419430400,
"mbk": 400,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
79,
80,
81,
82,
83,
84,
85,
64,
65,
66,
257
]
},
{
"tb": 256,
"tbk": 1,
"tl": 9783,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
22,
258,
259,
25
]
},
{
"tb": 64,
"tbk": 4,
"tl": 236,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
260,
261,
262,
263,
264,
111
]
},
{
"tb": 56,
"tbk": 1,
"tl": 3121,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
265,
266,
25,
112,
267
]
},
{
"tb": 256,
"tbk": 1,
"tl": 669,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
268,
269,
270,
271,
272,
273,
274,
275,
276
]
},
{
"tb": 2097152,
"tbk": 2,
"tl": 13895867,
"mb": 2097152,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
79,
80,
81,
121,
122,
123,
277,
278,
279
]
},
{
"tb": 96,
"tbk": 4,
"tl": 17142694,
"mb": 96,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
280,
281,
282,
283,
284,
285,
286,
287,
288,
289
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2871136,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
252,
253,
254,
255,
243
]
},
{
"tb": 12800,
"tbk": 8,
"tl": 3451055,
"mb": 1600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
172,
173,
174,
175,
176,
177,
290
]
},
{
"tb": 2856,
"tbk": 4,
"tl": 28318,
"mb": 2856,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
158,
159,
160,
161,
291,
292,
293,
294
]
},
{
"tb": 224,
"tbk": 1,
"tl": 9472,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
295,
296,
297,
298,
294
]
},
{
"tb": 96,
"tbk": 1,
"tl": 137818570,
"mb": 96,
"mbk": 1,
"gb": 96,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
299,
300,
301,
302,
303,
304,
305,
306,
307
]
},
{
"tb": 33554432,
"tbk": 524288,
"tl": 26984276,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
308,
309,
310,
311,
312,
313,
314,
315,
316
]
},
{
"tb": 8388608,
"tbk": 4,
"tl": 1560591,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
317,
318,
319,
320,
321,
322,
323,
324
]
},
{
"tb": 12800,
"tbk": 4,
"tl": 34187,
"mb": 12800,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
79,
80,
81,
82,
83,
84,
118,
325,
25
]
},
{
"tb": 6291456,
"tbk": 3,
"tl": 2492730,
"mb": 6291456,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
79,
80,
81,
82,
83,
84,
85,
64,
65,
66,
232
]
},
{
"tb": 9600,
"tbk": 4,
"tl": 614274991,
"mb": 9600,
"mbk": 4,
"gb": 9600,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
8,
60,
326,
327,
328,
329,
330,
331,
332,
333
]
},
{
"tb": 64,
"tbk": 4,
"tl": 24,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
260,
334,
187,
188,
69,
108
]
},
{
"tb": 64,
"tbk": 1,
"tl": 2,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
217,
218,
335,
112,
267
]
},
{
"tb": 256,
"tbk": 4,
"tl": 620,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
252,
253,
254,
336,
337
]
},
{
"tb": 2304,
"tbk": 12,
"tl": 4891,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
338,
339,
340,
341,
342,
343,
344
]
},
{
"tb": 2097152,
"tbk": 4,
"tl": 11316042,
"mb": 524288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
36,
89,
345,
346
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2594,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
268,
269,
347,
348,
349,
350,
351,
352,
353,
354
]
},
{
"tb": 192,
"tbk": 8,
"tl": 34285260,
"mb": 192,
"mbk": 8,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
280,
281,
282,
283,
284,
285,
286,
287,
355,
356
]
},
{
"tb": 384,
"tbk": 1,
"tl": 11411,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
357,
358,
359,
360,
193
]
},
{
"tb": 13633,
"tbk": 1,
"tl": 11351,
"mb": 13633,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
361,
362,
363,
364,
365,
366,
367,
368,
369,
370
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2611,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
268,
269,
371,
372,
373,
374,
375,
376,
377,
378
]
},
{
"tb": 144,
"tbk": 1,
"tl": 830335,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
379,
380,
381,
382,
383,
384,
385,
386,
68,
69
]
},
{
"tb": 33554432,
"tbk": 4,
"tl": 95345757,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
36,
387,
388,
389
]
},
{
"tb": 288,
"tbk": 1,
"tl": 15563010,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
390,
391,
392,
393,
394,
395,
396,
397,
398
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 153246112,
"mb": 2097152,
"mbk": 1,
"gb": 2097152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
36,
89,
399,
400
]
},
{
"tb": 192,
"tbk": 4,
"tl": 30058,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
401,
402,
69,
108,
117
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2373,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
136,
403,
404,
405,
406,
407,
408,
409
]
},
{
"tb": 616159,
"tbk": 8,
"tl": 11593,
"mb": 410292,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
201,
202,
203,
410,
411
]
},
{
"tb": 64,
"tbk": 4,
"tl": 415,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
260,
261,
262,
412,
413,
414
]
},
{
"tb": 952,
"tbk": 4,
"tl": 1329,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
268,
269,
270,
271,
272,
273,
274,
415,
416
]
},
{
"tb": 128,
"tbk": 4,
"tl": 17142561,
"mb": 128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
417,
418
]
},
{
"tb": 288,
"tbk": 1,
"tl": 31311,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
419,
420,
421,
422,
143
]
},
{
"tb": 128,
"tbk": 4,
"tl": 45304,
"mb": 128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
361,
362,
363,
364,
365,
366,
367,
368,
423,
424
]
},
{
"tb": 384,
"tbk": 4,
"tl": 67,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
186,
262,
263,
264,
111,
112
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 3085,
"mb": 1024,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
425,
426,
427,
428,
429,
430,
431,
432
]
},
{
"tb": 192,
"tbk": 4,
"tl": 2715287,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
43,
44,
45,
46,
433,
434,
435
]
},
{
"tb": 12804,
"tbk": 4,
"tl": 45321,
"mb": 12804,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
361,
362,
363,
364,
365,
366,
367,
368,
436,
424
]
},
{
"tb": 15360,
"tbk": 4,
"tl": 45164,
"mb": 15360,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
361,
362,
363,
364,
365,
366,
367,
368,
437,
438
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 15662928,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
136,
137,
138,
139,
140,
439,
440,
441
]
},
{
"tb": 32,
"tbk": 1,
"tl": 1006,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
268,
269,
442,
443,
444,
445,
446,
447,
448,
449
]
},
{
"tb": 384,
"tbk": 4,
"tl": 54,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
379,
450,
451,
452,
453,
454,
455,
456,
457
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3881,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
158,
159,
160,
161,
291,
458,
459,
460
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 46445079,
"mb": 16777216,
"mbk": 1,
"gb": 16777216,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
136,
137,
138,
139,
140,
461,
462,
463
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 6010942,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
136,
137,
138,
139,
140,
464,
465,
466
]
},
{
"tb": 128,
"tbk": 4,
"tl": 218,
"mb": 128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
22,
467,
24,
25
]
},
{
"tb": 15360,
"tbk": 4,
"tl": 2512,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
468,
469,
470,
471,
472,
473,
474,
475,
476
]
},
{
"tb": 83888,
"tbk": 1616,
"tl": 13788111,
"mb": 17056,
"mbk": 11,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
201,
477,
478,
479,
480,
481,
482
]
},
{
"tb": 512,
"tbk": 1,
"tl": 30,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
483,
484,
111,
112
]
},
{
"tb": 24,
"tbk": 2,
"tl": 2,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
361,
362,
363,
364,
365,
366,
367,
485,
486,
219
]
},
{
"tb": 16,
"tbk": 1,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
361,
362,
363,
364,
365,
366,
367,
487,
488,
25
]
},
{
"tb": 1536,
"tbk": 8,
"tl": 274,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
489,
490,
491,
492,
493,
494,
495,
496,
497
]
},
{
"tb": 320,
"tbk": 1,
"tl": 153760672,
"mb": 320,
"mbk": 1,
"gb": 320,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
498,
499,
500,
501,
502,
503,
504,
505,
506
]
},
{
"tb": 838860800,
"tbk": 524288,
"tl": 7736463,
"mb": 1600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
79,
80,
81,
121,
122,
123,
507,
508,
462
]
},
{
"tb": 224,
"tbk": 1,
"tl": 11390,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
361,
362,
363,
364,
365,
366,
367,
368,
509,
510
]
},
{
"tb": 192,
"tbk": 8,
"tl": 271,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
511,
512,
513,
514,
515,
516
]
},
{
"tb": 9584640,
"tbk": 4,
"tl": 207053,
"mb": 9584640,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
36,
517,
518,
143
]
},
{
"tb": 32,
"tbk": 1,
"tl": 4061,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
79,
80,
81,
121,
122,
123,
519,
25,
112
]
},
{
"tb": 512,
"tbk": 1,
"tl": 35,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
79,
80,
81,
82,
83,
84,
520,
110,
111
]
},
{
"tb": 512,
"tbk": 1,
"tl": 6052,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
521,
522,
523,
524,
525,
526,
527,
528
]
},
{
"tb": 72,
"tbk": 3,
"tl": 2490965,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
280,
281,
282,
283,
284,
285,
286,
287,
529,
383,
384,
385
]
},
{
"tb": 864,
"tbk": 1,
"tl": 11173,
"mb": 864,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
530,
531,
532,
533,
534,
535,
536,
537,
538
]
},
{
"tb": 32,
"tbk": 1,
"tl": 25,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
268,
269,
539,
540,
541,
542,
543,
544,
545,
546
]
},
{
"tb": 128,
"tbk": 8,
"tl": 6132740,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
547,
548,
549,
550,
551,
552,
553,
554
]
},
{
"tb": 16777216,
"tbk": 1,
"tl": 5909104,
"mb": 16777216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
136,
137,
138,
139,
140,
439,
440,
555
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 1705649,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
36,
387,
388,
556
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 132147,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
36,
37,
557,
558
]
},
{
"tb": 204800,
"tbk": 4,
"tl": 24041,
"mb": 204800,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
22,
559,
560,
561
]
},
{
"tb": 204800,
"tbk": 1,
"tl": 26272,
"mb": 204800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
361,
562,
563,
564,
565,
234,
409,
566
]
},
{
"tb": 3640,
"tbk": 18,
"tl": 545,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
268,
269,
567,
568,
569,
570,
571,
572,
573,
274,
275
]
},
{
"tb": 96,
"tbk": 1,
"tl": 15417219,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
574,
575,
576,
577,
578,
69,
108,
117
]
},
{
"tb": 128,
"tbk": 4,
"tl": 44610,
"mb": 128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
579,
580,
581,
582,
583,
584
]
},
{
"tb": 13600,
"tbk": 32,
"tl": 102327,
"mb": 13600,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
136,
137,
138,
139,
585,
586,
587,
561
]
},
{
"tb": 204800,
"tbk": 4,
"tl": 103972,
"mb": 204800,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
361,
562,
563,
564,
588,
234,
409,
566
]
},
{
"tb": 3456,
"tbk": 12,
"tl": 4774,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
338,
589,
590,
591,
592,
593,
594
]
},
{
"tb": 34780,
"tbk": 40,
"tl": 13626349,
"mb": 17408,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
201,
202,
203,
410,
595
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2378,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
158,
159,
160,
161,
162,
408,
409,
566
]
},
{
"tb": 64,
"tbk": 1,
"tl": 143,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
596,
597,
598,
599,
600,
601,
602,
603,
69,
108
]
},
{
"tb": 512,
"tbk": 8,
"tl": 12262475,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
604,
605,
606,
607,
608
]
},
{
"tb": 480,
"tbk": 4,
"tl": 207,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
609,
610
]
},
{
"tb": 6400,
"tbk": 4,
"tl": 15603,
"mb": 6400,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
43,
44,
45,
46,
611,
612,
613
]
},
{
"tb": 4352,
"tbk": 8,
"tl": 98,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
614,
615,
616,
617,
618,
619
]
},
{
"tb": 15360,
"tbk": 4,
"tl": 2866,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
468,
620,
621,
622,
623,
164,
107,
69
]
},
{
"tb": 13633,
"tbk": 1,
"tl": 11363,
"mb": 13633,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
361,
362,
363,
364,
365,
366,
367,
368,
624,
625
]
},
{
"tb": 480,
"tbk": 4,
"tl": 206,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
609,
408
]
},
{
"tb": 128,
"tbk": 4,
"tl": 442,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
79,
80,
81,
82,
83,
84,
626,
627,
628
]
},
{
"tb": 96,
"tbk": 4,
"tl": 385,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
629,
630,
34,
50,
264,
111
]
},
{
"tb": 96,
"tbk": 1,
"tl": 3771,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
631,
632,
633,
634,
409
]
},
{
"tb": 64,
"tbk": 4,
"tl": 248,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
260,
334,
262,
263,
264,
111
]
},
{
"tb": 2048,
"tbk": 4,
"tl": 3874,
"mb": 2048,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
635,
110,
111,
112
]
},
{
"tb": 6600,
"tbk": 42,
"tl": 950,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
268,
269,
567,
568,
569,
570,
571,
572,
573,
274,
415
]
},
{
"tb": 6400,
"tbk": 4,
"tl": 15586,
"mb": 6400,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
43,
44,
45,
46,
636,
612,
613
]
},
{
"tb": 4194304,
"tbk": 4,
"tl": 290985,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
36,
89,
345,
637
]
},
{
"tb": 419430400,
"tbk": 400,
"tl": 52853684705,
"mb": 419430400,
"mbk": 400,
"gb": 419430400,
"gbk": 400,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
79,
80,
81,
82,
83,
84,
638,
639,
640
]
},
{
"tb": 16128,
"tbk": 24,
"tl": 11484821,
"mb": 8192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
252,
253,
254,
641,
243
]
},
{
"tb": 1198080,
"tbk": 4,
"tl": 149864,
"mb": 1179648,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
36,
642,
643,
143
]
},
{
"tb": 96,
"tbk": 1,
"tl": 1161,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
239,
240,
241,
644,
110
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2582,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
268,
269,
645,
646,
647,
648,
649,
650,
651,
652
]
},
{
"tb": 8388608,
"tbk": 4,
"tl": 33061496,
"mb": 8388608,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
172,
173,
174,
175,
176,
177,
653
]
},
{
"tb": 2097152,
"tbk": 1,
"tl": 78213,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
79,
80,
81,
82,
83,
84,
118,
654,
69
]
},
{
"tb": 3328,
"tbk": 32,
"tl": 485,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
338,
655,
656,
657,
658,
659,
660
]
},
{
"tb": 128,
"tbk": 1,
"tl": 6061,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
661,
662,
663,
664,
561
]
},
{
"tb": 256,
"tbk": 1,
"tl": 678,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
268,
269,
270,
271,
272,
273,
274,
665,
666
]
},
{
"tb": 512,
"tbk": 1,
"tl": 16,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
36,
40,
667,
484
]
},
{
"tb": 96,
"tbk": 4,
"tl": 6132280,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
629,
630,
34,
35,
414,
69
]
},
{
"tb": 128,
"tbk": 1,
"tl": 99,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
223,
668,
669,
670,
671,
672,
673,
674,
675
]
},
{
"tb": 80,
"tbk": 1,
"tl": 7699,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
676,
677,
111,
112
]
},
{
"tb": 2304,
"tbk": 8,
"tl": 176,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
678,
679,
680,
681,
682,
683,
684,
685,
686
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3371,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
60,
61,
62,
63,
64,
65,
66,
687,
688,
409
]
},
{
"tb": 51328,
"tbk": 36,
"tl": 14899,
"mb": 51200,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
79,
80,
81,
82,
83,
84,
85,
64,
65,
66,
687
]
},
{
"tb": 3640,
"tbk": 18,
"tl": 77,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
268,
269,
567,
568,
569,
570,
571,
572,
689,
408,
409
]
},
{
"tb": 15360,
"tbk": 4,
"tl": 31500,
"mb": 15360,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
690,
293,
294,
25
]
},
{
"tb": 2928,
"tbk": 12,
"tl": 1264,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
338,
691,
692,
693,
694,
695,
696,
697,
698,
699
]
},
{
"tb": 3221225472,
"tbk": 48,
"tl": 661772016,
"mb": 805306368,
"mbk": 12,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
468,
620,
621,
622,
700,
701,
702,
703
]
},
{
"tb": 24,
"tbk": 1,
"tl": 11360,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
704,
705,
625,
193
]
},
{
"tb": 96,
"tbk": 1,
"tl": 251,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
60,
706,
707,
708,
709,
710,
711,
712,
713
]
},
{
"tb": 96,
"tbk": 1,
"tl": 28,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
60,
61,
62,
63,
64,
65,
66,
687,
714,
171
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 2064,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
136,
403,
404,
405,
406,
407,
610,
715
]
},
{
"tb": 128,
"tbk": 4,
"tl": 844,
"mb": 128,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
716,
717,
718,
719,
720,
721
]
},
{
"tb": 384,
"tbk": 4,
"tl": 110,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
186,
262,
412,
413,
414,
69
]
},
{
"tb": 4194304,
"tbk": 4,
"tl": 6489068,
"mb": 4194304,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
172,
173,
174,
175,
176,
177,
722
]
},
{
"tb": 256,
"tbk": 1,
"tl": 11,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
338,
691,
723,
724,
725,
726,
727,
728,
729,
107,
69
]
},
{
"tb": 64,
"tbk": 4,
"tl": 45612,
"mb": 64,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
361,
362,
363,
364,
365,
366,
367,
368,
730,
731
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 11356,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
361,
362,
363,
364,
365,
366,
367,
368,
732,
370
]
},
{
"tb": 22816,
"tbk": 119,
"tl": 824746,
"mb": 22816,
"mbk": 119,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
136,
137,
138,
139,
585,
586,
292,
293
]
},
{
"tb": 768,
"tbk": 1,
"tl": 3280,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
158,
159,
160,
161,
291,
587,
561,
266
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 507,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
609,
163
]
},
{
"tb": 512,
"tbk": 1,
"tl": 18,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
733,
484,
111,
112
]
},
{
"tb": 72,
"tbk": 1,
"tl": 28135,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
734,
566,
69,
108,
117
]
},
{
"tb": 1536,
"tbk": 4,
"tl": 6131830,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
735,
736,
737,
738,
739,
740,
741,
742,
743
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
361,
362,
363,
364,
365,
366,
367,
485,
486,
335
]
},
{
"tb": 96,
"tbk": 1,
"tl": 9468,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
239,
240,
241,
744,
294
]
},
{
"tb": 9600,
"tbk": 4,
"tl": 534142734,
"mb": 9600,
"mbk": 4,
"gb": 9600,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
8,
60,
745,
746,
747,
748,
749,
750,
751,
752
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 43,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
36,
89,
345,
753
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
361,
362,
363,
364,
365,
366,
367,
485,
754,
219
]
},
{
"tb": 204800,
"tbk": 1,
"tl": 4127,
"mb": 204800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
22,
559,
755,
561
]
},
{
"tb": 768,
"tbk": 1,
"tl": 2069,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
158,
159,
160,
161,
162,
610,
715,
69
]
},
{
"tb": 960,
"tbk": 8,
"tl": 17142615,
"mb": 768,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
756,
289,
69,
108,
117
]
},
{
"tb": 192,
"tbk": 1,
"tl": 14777321,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
757,
758,
759,
760,
761,
762,
763,
764,
765
]
},
{
"tb": 32,
"tbk": 4,
"tl": 1575033,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
268,
269,
270,
271,
272,
766,
767,
289,
69
]
},
{
"tb": 64,
"tbk": 4,
"tl": 613063136,
"mb": 64,
"mbk": 4,
"gb": 64,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
194,
361,
362,
363,
364,
365,
366,
367,
487,
768,
769
]
},
{
"tb": 107520,
"tbk": 417,
"tl": 224451,
"mb": 16384,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
136,
770,
771,
772,
773,
774,
775,
776,
777
]
},
{
"tb": 6072,
"tbk": 11,
"tl": 4487,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
152,
153,
154,
778,
779,
780
]
},
{
"tb": 6528,
"tbk": 34,
"tl": 13593,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
338,
339,
340,
341,
781,
782,
783
]
},
{
"tb": 32,
"tbk": 1,
"tl": 137677418,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
784,
785,
786,
787,
788,
789,
790,
791,
792
]
},
{
"tb": 12582720,
"tbk": 48,
"tl": 41591,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
252,
253,
254,
793,
69
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1696,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
239,
240,
241,
794,
715
]
},
{
"tb": 128,
"tbk": 4,
"tl": 60,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
795,
796,
797,
798,
799,
800,
801,
802,
803,
804
]
},
{
"tb": 2396160,
"tbk": 4,
"tl": 186018,
"mb": 2396160,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
136,
137,
138,
139,
140,
439,
440,
805
]
},
{
"tb": 64,
"tbk": 1,
"tl": 3383334,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
596,
806,
807,
808,
809,
810,
811,
812,
813
]
},
{
"tb": 480,
"tbk": 4,
"tl": 7680,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
814
]
},
{
"tb": 3840,
"tbk": 4,
"tl": 3723,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
136,
403,
404,
405,
406,
407,
163,
164
]
},
{
"tb": 512,
"tbk": 1,
"tl": 5330005,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
815,
816,
817,
818,
69
]
},
{
"tb": 15360,
"tbk": 120,
"tl": 111,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
819,
820,
821,
822,
823,
824,
825,
826
]
},
{
"tb": 256,
"tbk": 4,
"tl": 647,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
252,
253,
254,
827,
337
]
},
{
"tb": 64,
"tbk": 4,
"tl": 347,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
79,
80,
81,
121,
122,
123,
828,
34,
50
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 735844,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
36,
829,
830,
831
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2603,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
268,
269,
832,
833,
834,
835,
836,
837,
838,
839
]
},
{
"tb": 64,
"tbk": 1,
"tl": 4,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
840,
841,
842,
843,
844,
845,
846,
847,
848
]
},
{
"tb": 512,
"tbk": 1,
"tl": 10,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
849,
850,
851,
852,
853,
854,
855,
856
]
},
{
"tb": 192,
"tbk": 1,
"tl": 11339,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
857,
858,
859,
860,
193
]
},
{
"tb": 288,
"tbk": 12,
"tl": 252,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
861,
862,
863,
864,
865,
866,
867,
868,
869
]
},
{
"tb": 3840,
"tbk": 16,
"tl": 2547,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
252,
253,
254,
870,
871
]
},
{
"tb": 872415232,
"tbk": 1,
"tl": 31014691,
"mb": 872415232,
"mbk": 1,
"gb": 872415232,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
79,
80,
81,
82,
83,
84,
872,
873,
874
]
},
{
"tb": 13600,
"tbk": 32,
"tl": 121620,
"mb": 13600,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
136,
137,
138,
139,
585,
586,
458,
459
]
},
{
"tb": 160,
"tbk": 1,
"tl": 126361314,
"mb": 160,
"mbk": 1,
"gb": 160,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
875,
876,
877,
878,
879,
880,
881,
882,
883
]
},
{
"tb": 2400,
"tbk": 12,
"tl": 234,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
338,
884,
885,
886,
887,
888,
889
]
},
{
"tb": 15360,
"tbk": 120,
"tl": 127,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
22,
890,
293,
294
]
},
{
"tb": 1024,
"tbk": 32,
"tl": 54253,
"mb": 1024,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
79,
80,
81,
121,
122,
123,
891,
715,
69
]
},
{
"tb": 160,
"tbk": 1,
"tl": 8587,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
892,
893,
894,
895,
25
]
},
{
"tb": 32,
"tbk": 1,
"tl": 126361263,
"mb": 32,
"mbk": 1,
"gb": 32,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
784,
896,
897,
898,
899,
900,
901,
902,
903
]
},
{
"tb": 64,
"tbk": 4,
"tl": 2715268,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
43,
44,
45,
46,
904,
434,
435
]
},
{
"tb": 2516582400,
"tbk": 1572864,
"tl": 18664224,
"mb": 1600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
79,
80,
81,
121,
122,
123,
905,
508,
462
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 277490,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
79,
80,
81,
82,
83,
84,
118,
906,
402
]
},
{
"tb": 419430400,
"tbk": 400,
"tl": 61426634323,
"mb": 419430400,
"mbk": 400,
"gb": 419430400,
"gbk": 400,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
36,
907,
908,
909
]
},
{
"tb": 864,
"tbk": 1,
"tl": 153248261,
"mb": 864,
"mbk": 1,
"gb": 864,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
530,
910,
911,
912,
913,
914,
915,
916,
917
]
},
{
"tb": 128,
"tbk": 4,
"tl": 612992919,
"mb": 128,
"mbk": 4,
"gb": 128,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
179,
579,
918,
919,
920,
921,
922
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 23889,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
361,
562,
563,
564,
923,
924,
715,
69
]
},
{
"tb": 256,
"tbk": 4,
"tl": 33806,
"mb": 256,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
252,
253,
254,
827,
925
]
},
{
"tb": 1280,
"tbk": 8,
"tl": 12263515,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
926,
927,
928,
929,
930
]
},
{
"tb": 160,
"tbk": 1,
"tl": 8415,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
931,
932,
933,
934,
935,
936,
937,
938,
939
]
},
{
"tb": 1248,
"tbk": 12,
"tl": 332,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
338,
655,
656,
657,
940,
941,
942
]
},
{
"tb": 15360,
"tbk": 4,
"tl": 1727,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
172,
173,
174,
175,
176,
177,
943
]
},
{
"tb": 335544320,
"tbk": 5,
"tl": 15565478,
"mb": 67108864,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
172,
173,
174,
175,
176,
177,
944
]
},
{
"tb": 12832,
"tbk": 9,
"tl": 34361562,
"mb": 12832,
"mbk": 9,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
945,
946,
947,
948,
949,
950,
951,
952
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 5538,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
22,
559,
953,
459
]
},
{
"tb": 16128,
"tbk": 24,
"tl": 31069,
"mb": 8192,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
252,
253,
254,
641,
256
]
},
{
"tb": 64,
"tbk": 4,
"tl": 6132225,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
79,
80,
81,
121,
122,
123,
828,
34,
35
]
},
{
"tb": 64,
"tbk": 4,
"tl": 17142681,
"mb": 64,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
79,
80,
81,
82,
83,
84,
954,
288,
289
]
},
{
"tb": 16,
"tbk": 1,
"tl": 830324,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
79,
80,
81,
82,
83,
84,
954,
529,
383,
384,
385
]
},
{
"tb": 3489660928,
"tbk": 4,
"tl": 330172087,
"mb": 3489660928,
"mbk": 4,
"gb": 3489660928,
"gbk": 4,
"eb": 0,
"ebk": 0,
"fs": [
8,
468,
620,
621,
622,
700,
955,
956,
957
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
361,
362,
363,
364,
365,
366,
367,
485,
754,
335
]
},
{
"tb": 96,
"tbk": 1,
"tl": 95,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
239,
240,
241,
958,
25
]
},
{
"tb": 8388608,
"tbk": 524288,
"tl": 337120,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
79,
80,
81,
82,
83,
84,
959,
960,
961
]
},
{
"tb": 3640,
"tbk": 18,
"tl": 76,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
268,
269,
567,
568,
569,
570,
571,
572,
689,
610,
715
]
},
{
"tb": 128,
"tbk": 4,
"tl": 3,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
716,
962,
112,
267
]
},
{
"tb": 32,
"tbk": 1,
"tl": 8357947,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
963,
69
]
},
{
"tb": 6600,
"tbk": 42,
"tl": 129,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
268,
269,
567,
568,
569,
570,
571,
572,
689,
163,
164
]
},
{
"tb": 512,
"tbk": 1,
"tl": 4420,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
964,
965,
111,
112
]
},
{
"tb": 64,
"tbk": 1,
"tl": 153248073,
"mb": 64,
"mbk": 1,
"gb": 64,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
966,
967,
968,
969,
970,
971,
972,
973,
974
]
},
{
"tb": 128,
"tbk": 4,
"tl": 26083,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
975,
402,
69,
108,
117
]
},
{
"tb": 4194304,
"tbk": 4,
"tl": 2593438,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
172,
173,
174,
175,
176,
177,
976
]
},
{
"tb": 8388608,
"tbk": 1,
"tl": 328615,
"mb": 8388608,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
79,
80,
81,
121,
122,
123,
977,
978,
69
]
},
{
"tb": 204800,
"tbk": 1,
"tl": 11383,
"mb": 204800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
361,
362,
363,
364,
365,
366,
367,
368,
979,
625
]
},
{
"tb": 256,
"tbk": 1,
"tl": 11271,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
361,
362,
363,
364,
365,
366,
367,
368,
980,
192
]
},
{
"tb": 96,
"tbk": 1,
"tl": 8479,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
981,
982,
983,
984,
111
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 4070,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
985,
986,
987,
988,
989
]
},
{
"tb": 2736,
"tbk": 6,
"tl": 2669,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
990,
991,
992,
993,
994,
995
]
},
{
"tb": 3640,
"tbk": 18,
"tl": 537,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
268,
269,
567,
568,
569,
570,
571,
572,
573,
274,
665
]
},
{
"tb": 8,
"tbk": 1,
"tl": 829702,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
268,
269,
567,
568,
569,
570,
571,
572,
996,
68,
69
]
},
{
"tb": 96,
"tbk": 1,
"tl": 26023,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
997,
998,
999,
1000,
234
]
},
{
"tb": 32,
"tbk": 1,
"tl": 2621,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
268,
269,
1001,
1002,
1003,
1004,
1005,
1006,
1007,
1008
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 3879,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
136,
1009,
1010,
1011,
1012,
1013,
1014,
1015,
1016
]
},
{
"tb": 122880,
"tbk": 4,
"tl": 1742,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
172,
173,
174,
175,
176,
177,
1017
]
},
{
"tb": 12800,
"tbk": 8,
"tl": 3451025,
"mb": 1600,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
172,
173,
174,
175,
176,
177,
1018
]
},
{
"tb": 256,
"tbk": 4,
"tl": 33790,
"mb": 256,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
252,
253,
254,
336,
925
]
},
{
"tb": 192,
"tbk": 1,
"tl": 3867,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
1019,
1020,
1021,
1022,
1023,
1024,
1025,
1026,
1027
]
},
{
"tb": 15360,
"tbk": 4,
"tl": 625,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
36,
40,
1028,
222
]
},
{
"tb": 192,
"tbk": 8,
"tl": 12263548,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
280,
281,
282,
283,
284,
285,
286,
287,
1029,
930
]
},
{
"tb": 16777344,
"tbk": 12,
"tl": 301254,
"mb": 2097152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
36,
1030,
42,
1031
]
},
{
"tb": 160,
"tbk": 1,
"tl": 11056,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
136,
137,
138,
139,
585,
1032,
1033,
25
]
},
{
"tb": 64,
"tbk": 4,
"tl": 320,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
172,
173,
174,
175,
176,
177,
1034
]
},
{
"tb": 4194304,
"tbk": 1,
"tl": 327995,
"mb": 4194304,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
36,
89,
345,
1035
]
},
{
"tb": 48,
"tbk": 1,
"tl": 6949582,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
60,
1036,
1037,
1038,
1039,
1040,
1041,
1042,
1043
]
},
{
"tb": 460800,
"tbk": 96,
"tl": 90941,
"mb": 209600,
"mbk": 33,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
1044,
1045,
1046,
1047,
1048,
1049,
120,
1050
]
},
{
"tb": 960,
"tbk": 4,
"tl": 4296,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
338,
691,
723,
724,
725,
726,
727,
728,
1051,
1052,
215
]
},
{
"tb": 96,
"tbk": 1,
"tl": 1155,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
239,
240,
241,
1053,
110
]
},
{
"tb": 64,
"tbk": 4,
"tl": 457,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
79,
80,
81,
82,
83,
84,
1054,
627,
628
]
},
{
"tb": 22939,
"tbk": 4,
"tl": 45148,
"mb": 22939,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
361,
362,
363,
364,
365,
366,
367,
368,
1055,
438
]
},
{
"tb": 96,
"tbk": 1,
"tl": 15417202,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
299,
1056,
1057,
1058,
1059,
69,
108,
117
]
},
{
"tb": 9600,
"tbk": 4,
"tl": 58895451,
"mb": 9600,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
60,
61,
62,
63,
64,
65,
66,
257,
1060,
1061
]
},
{
"tb": 3840,
"tbk": 4,
"tl": 28901,
"mb": 3840,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
136,
403,
404,
405,
406,
1062,
293,
294
]
},
{
"tb": 256,
"tbk": 1,
"tl": 10423,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
79,
80,
81,
121,
122,
123,
1063,
1064,
1065
]
},
{
"tb": 5033164800,
"tbk": 1572864,
"tl": 10818155,
"mb": 4800,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
79,
80,
81,
82,
83,
84,
118,
1066,
508
]
},
{
"tb": 96,
"tbk": 1,
"tl": 7806,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
239,
240,
241,
242,
256
]
},
{
"tb": 96,
"tbk": 1,
"tl": 1943937,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
239,
240,
241,
1067,
402
]
},
{
"tb": 384,
"tbk": 1,
"tl": 153265805,
"mb": 384,
"mbk": 1,
"gb": 384,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
1068,
1069,
1070,
1071,
1072,
1073,
1074,
1075,
1076
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 7355,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
985,
986,
987,
988,
1077
]
},
{
"tb": 1272,
"tbk": 5,
"tl": 96932957,
"mb": 312,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
1078,
1079,
1080,
1081,
1082,
1083,
1084,
1085,
1086
]
},
{
"tb": 64,
"tbk": 4,
"tl": 426,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
260,
334,
262,
412,
413,
414
]
},
{
"tb": 3072,
"tbk": 4,
"tl": 14760,
"mb": 3072,
"mbk": 4,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
60,
1087,
1088,
1089,
1090,
1091,
1092,
1093,
1094
]
},
{
"tb": 192,
"tbk": 8,
"tl": 415,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
1095,
512,
513,
514,
515,
516
]
},
{
"tb": 64,
"tbk": 4,
"tl": 9,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
179,
260,
261,
187,
188,
69,
108
]
},
{
"tb": 33554432,
"tbk": 16,
"tl": 67150514,
"mb": 33554432,
"mbk": 16,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
36,
1096,
1097,
1098
]
},
{
"tb": 256,
"tbk": 1,
"tl": 1365,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
338,
691,
723,
724,
725,
726,
727,
728,
1099,
215,
216
]
},
{
"tb": 7549747200,
"tbk": 1572864,
"tl": 21381433,
"mb": 11200,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
1044,
1045,
1046,
1047,
1048,
1100,
508,
462
]
},
{
"tb": 32512,
"tbk": 28,
"tl": 87,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
252,
253,
254,
1101,
1102
]
},
{
"tb": 896,
"tbk": 6,
"tl": 11215,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
252,
253,
254,
1103,
1104
]
},
{
"tb": 96,
"tbk": 1,
"tl": 8358953,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
239,
240,
241,
1105,
69
]
},
{
"tb": 32,
"tbk": 1,
"tl": 8357953,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
1106,
69
]
},
{
"tb": 128,
"tbk": 1,
"tl": 4412,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
1107,
1108,
1109,
1110,
1111,
1112,
1113,
1114
]
},
{
"tb": 72,
"tbk": 1,
"tl": 11388,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
101,
1115,
1116,
1117,
1118,
1119,
193
]
},
{
"tb": 32,
"tbk": 1,
"tl": 11068,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
136,
137,
138,
139,
585,
1120,
1033,
25
]
},
{
"tb": 2880,
"tbk": 24,
"tl": 2475,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
1121,
274
]
},
{
"tb": 34790,
"tbk": 11,
"tl": 22843,
"mb": 17408,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
201,
202,
203,
204,
1122
]
},
{
"tb": 32,
"tbk": 1,
"tl": 5,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
51,
52,
53,
54,
55,
56,
57,
58,
1123
]
},
{
"tb": 4194304,
"tbk": 4,
"tl": 1574902,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
36,
89,
345,
1124
]
},
{
"tb": 12804,
"tbk": 4,
"tl": 76,
"mb": 3201,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
795,
796,
797,
798,
799,
800,
801,
1125,
803,
804
]
},
{
"tb": 512,
"tbk": 1,
"tl": 18,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
36,
40,
1126,
110
]
},
{
"tb": 128,
"tbk": 1,
"tl": 237,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
194,
195,
1127,
1128,
1129,
1130,
163
]
},
{
"tb": 64,
"tbk": 4,
"tl": 735668,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
43,
44,
45,
46,
1131,
188,
69
]
},
{
"tb": 96,
"tbk": 1,
"tl": 15417213,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
1132,
1133,
1134,
1135,
1136,
69,
108,
117
]
},
{
"tb": 7872,
"tbk": 8,
"tl": 218,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
1137,
1138,
1139,
1140,
1141,
1142
]
},
{
"tb": 100776,
"tbk": 221,
"tl": 63373,
"mb": 25992,
"mbk": 57,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
990,
991,
992,
1143,
1144,
1145
]
},
{
"tb": 256,
"tbk": 4,
"tl": 128981,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
18,
19,
20,
21,
36,
89,
345,
1146
]
}
],
"ftbl": [
"[root]",
"0x5b5bd9195799: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5b5bd9190b39: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5b5bd90f3830: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b5bd90f5899: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b5bd90d0451: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b5bd8e724f8: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x5b5bd8d22499: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x5b5bd8c9a4a9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5b5bd8d59bbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd8ee2991: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8ee2991: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8ee2991: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8ee2991: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa837b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8f9ded6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8beb78b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8db5cd2: winter_verifier::perform_verification (verifier/src/lib.rs:212:41)",
"0x5b5bd8d630ec: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd8f1b736: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8f1b736: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8f1b736: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8c3e909: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5b5bd8fcf6fb: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x5b5bd8c75185: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5b5bd8dbf907: winter_verifier::verify (verifier/src/lib.rs:108:19)",
"0x5b5bd8d5c2fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd9063776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd9063776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd9063776: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5b5bd8f8c3b9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5b5bd8f8c3b9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5b5bd8f8c3b9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5b5bd9088846: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x5b5bd8ec1c22: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:348:9)",
"0x5b5bd903a63b: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:50:13)",
"0x5b5bd8ca7e7b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5b5bd8c9d47b: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x5b5bd8e178b6: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x5b5bd8e1b76c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x5b5bd8c9bf42: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x5b5bd8e17d04: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x5b5bd8e14fbc: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x5b5bd8c409f5: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8c409f5: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8c409f5: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5b5bd8f8abf4: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5b5bd8c9e87b: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:235:25)",
"0x5b5bd9069a62: examples::do_work::prover::build_do_work_trace (src/do_work/prover.rs:65:5)",
"0x5b5bd8e5d668: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces::{{closure}} (src/do_work/prover.rs:32:27)",
"0x5b5bd903464a: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:25:25)",
"0x5b5bd8d5ff3a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd8ed115e: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8ed115e: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8ed115e: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8ed115e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5b5bd8fa721e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8f9c957: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd903376e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8fe1f64: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:142:33)",
"0x5b5bd8d5f9fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd8f1a856: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8f1a856: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8f1a856: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5b5bd8f8c1f9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5b5bd8f8c1f9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5b5bd8f8c1f9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5b5bd8e14d29: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x5b5bd8e3c583: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:33)",
"0x5b5bd8e5ccd4: winter_prover::Prover::prove (prover/src/lib.rs:171:37)",
"0x5b5bd8d6727c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd8ed8557: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8ed8557: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8ed8557: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8ed8557: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8f8679d: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5b5bd8fa221c: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8bee4ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8e1e82a: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x5b5bd8c4041c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8c4041c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8c4041c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5b5bd8f8b939: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5b5bd8f8b939: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5b5bd8f8b939: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5b5bd8f1abc3: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5b5bd8c89e22: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x5b5bd8d1f5c4: core::option::Option<&T>::cloned (core/src/option.rs:1887:29)",
"0x5b5bd903fd04: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x5b5bd8c9c393: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x5b5bd8e6b151: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x5b5bd8e82df3: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x5b5bd8d5ab7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd8efcf11: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8efcf11: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8efcf11: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8efcf11: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa73db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8f9cd46: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8bebacb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8e7fc0e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x5b5bd91a1709: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5b5bd91a24bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd91a5776: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd91a5776: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd91a5776: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd9080bcd: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x5b5bd8e3ea4f: winter_prover::Prover::generate_proof (prover/src/lib.rs:590:25)",
"0x5b5bd8c1e2b2: <examples::do_work::DoWorkExample<H> as examples::Example>::prove (src/do_work/mod.rs:108:9)",
"0x5b5bd8fb6bf3: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x5b5bd8db6c0f: winter_verifier::perform_verification (verifier/src/lib.rs:308:25)",
"0x5b5bd8dbf9d2: winter_verifier::verify (verifier/src/lib.rs:110:21)",
"0x5b5bd8c1ed99: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:118:9)",
"0x5b5bd8f1bcd6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8f1bcd6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8f1bcd6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8e3c00d: winter_prover::Prover::generate_proof (prover/src/lib.rs:300:37)",
"0x5b5bd8a76d4d: winterfell::main (examples/src/main.rs:49:17)",
"0x5b5bd8f19097: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5b5bd8e7911b: winter_prover::trace::commitment::build_segment_queries::{{closure}}::{{closure}} (src/trace/commitment.rs:162:42)",
"0x5b5bd8cf7019: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5b5bd8c4093c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5b5bd8c4093c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5b5bd8c4093c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5b5bd8e78078: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x5b5bd8c1161a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5b5bd8cc9e45: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5b5bd8d6823c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd8f05977: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8f05977: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8f05977: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8f05977: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa665e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8f9a517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8beb60e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8e3d5d6: winter_prover::Prover::generate_proof (prover/src/lib.rs:491:51)",
"0x5b5bd8d5da9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd8f1b916: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8f1b916: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8f1b916: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8ca7fbb: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5b5bd8ca51f6: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x5b5bd9074c8f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x5b5bd90821b2: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x5b5bd8f012f0: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8f012f0: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8f012f0: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8f012f0: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5b5bd8fa55bb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8fa0da6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8becdbb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8ff4075: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x5b5bd8fdbccb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5b5bd8fdb471: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5b5bd8deff0b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5b5bd8de8451: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x5b5bd8dee77d: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x5b5bd8de210e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x5b5bd8d61e8c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd8f1b966: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8f1b966: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8f1b966: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8faf6ff: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x5b5bd906e274: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x5b5bd9081152: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x5b5bd8d5e51c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd8fd02be: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8fd02be: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8fd02be: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5b5bd8f8ab77: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5b5bd8d27c58: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x5b5bd8e3b656: winter_prover::Prover::generate_proof (prover/src/lib.rs:228:27)",
"0x5b5bd91ff6cc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:246:9)",
"0x5b5bd91fdd9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:200:38)",
"0x5b5bd91fecf8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:153:9)",
"0x5b5bd91fecf8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x5b5bd91fb964: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5b5bd91fbc13: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x5b5bd9061450: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x5b5bd8c99937: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x5b5bd8e81a92: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x5b5bd8c584c6: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:493:32)",
"0x5b5bd8c0e09a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5b5bd8cdb2a2: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5b5bd8bd9c9b: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5b5bd8bf6906: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5b5bd8e2008f: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:60:9)",
"0x5b5bd8ca10ab: winter_prover::trace::Trace::validate (src/trace/mod.rs:122:26)",
"0x5b5bd8e3ff21: winter_prover::Prover::generate_proof (prover/src/lib.rs:370:17)",
"0x5b5bd9080c96: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x5b5bd91a02b9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5b5bd91a070b: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:211:22)",
"0x5b5bd919b15d: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:188:24)",
"0x5b5bd8a778fd: winterfell::main (examples/src/main.rs:80:24)",
"0x5b5bd9201b79: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5b5bd9200319: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5b5bd8d80ca2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b5bd8d9f539: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b5bd8f77b42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b5bd8faaffc: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x5b5bd8ecbd4a: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x5b5bd9200ab0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b5bd9200ce9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b5bd9201f12: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b5bd8da2564: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x5b5bd8d47175: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x5b5bd8ed9317: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8ed9317: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8ed9317: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8ed9317: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa706e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8fa2587: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8beb47e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8e16c6a: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x5b5bd8e8f214: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x5b5bd8ebf73c: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x5b5bd8db6e15: winter_verifier::perform_verification (verifier/src/lib.rs:320:5)",
"0x5b5bd906982c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x5b5bd8e71b58: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x5b5bd8d27a03: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x5b5bd8fe9a51: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x5b5bd9061184: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x5b5bd8e90010: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x5b5bd8d6751c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd8f0df17: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8f0df17: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8f0df17: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8f0df17: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa7b2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8f9d147: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8beca9e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8e3b416: winter_prover::Prover::generate_proof (prover/src/lib.rs:205:38)",
"0x5b5bd8e14c8c: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x5b5bd8fea10a: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x5b5bd8e75bd9: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x5b5bd8d807b2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b5bd8d9ed89: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b5bd8f74f32: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b5bd8db748c: winter_verifier::perform_verification (verifier/src/lib.rs:182:9)",
"0x5b5bd8d8b972: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b5bd8d9fa19: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b5bd8f75402: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b5bd8ec2239: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:536:13)",
"0x5b5bd8d24428: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x5b5bd8ee8187: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8ee8187: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8ee8187: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8ee8187: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa929e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8f9de27: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8beb7ae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8fb695b: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x5b5bd8d92122: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b5bd8d9f6b9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b5bd8f73d91: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b5bd8ec208d: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:540:13)",
"0x5b5bd8db613b: winter_verifier::perform_verification (verifier/src/lib.rs:263:61)",
"0x5b5bd8e147be: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x5b5bd8d56fee: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x5b5bd8c7442b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x5b5bd8fd8e95: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x5b5bd8e2012c: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:62:13)",
"0x5b5bd8ec1985: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:364:13)",
"0x5b5bd9034b4c: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:63:9)",
"0x5b5bd8db7247: winter_verifier::perform_verification (verifier/src/lib.rs:223:43)",
"0x5b5bd8c616f1: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x5b5bd8c73fa8: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x5b5bd8a779d5: winterfell::main (examples/src/main.rs:83:11)",
"0x5b5bd9183899: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5b5bd90f00aa: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd90cb656: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd90cb656: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd90cb656: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8da4d1c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x5b5bd8fb1b5e: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x5b5bd8c6fd3c: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x5b5bd8db698e: winter_verifier::perform_verification (verifier/src/lib.rs:303:42)",
"0x5b5bd8c9b9cb: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x5b5bd8c0832c: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5b5bd8e71954: <core::iter::adapters::take::Take<I> as core::iter::adapters::take::SpecTake>::spec_fold (iter/adapters/take.rs:307:19)",
"0x5b5bd8d62e4c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd8c402ec: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8c402ec: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8c402ec: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5b5bd8f8cf19: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5b5bd8f8cf19: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5b5bd8f8cf19: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5b5bd90055d6: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x5b5bd903b58d: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:33)",
"0x5b5bd8e3fbd3: winter_prover::Prover::generate_proof (prover/src/lib.rs:407:21)",
"0x5b5bd906a00c: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x5b5bd8da0c9d: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x5b5bd8d4c04d: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x5b5bd8d5339c: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x5b5bd8c7460c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x5b5bd8d8c842: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b5bd8d9f419: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b5bd8f74ba2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b5bd8d5357e: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x5b5bd8d6290c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd8eeaf91: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8eeaf91: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8eeaf91: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8eeaf91: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa5edb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8f9f626: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8beb4ab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8e50ba6: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:630:42)",
"0x5b5bd8d652fc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd8ee2135: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8ee2135: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8ee2135: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8ee2135: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5b5bd8fa610e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8f9b737: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8bebcce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8fc31b0: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:218:46)",
"0x5b5bd8ede727: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8ede727: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8ede727: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8ede727: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa85de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8f9e507: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8beecfe: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8e18277: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x5b5bd8c7527d: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x5b5bd8eef787: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8eef787: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8eef787: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8eef787: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa667e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8f9d807: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8bef71e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8c9f33a: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:132:32)",
"0x5b5bd8e200bd: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:61:13)",
"0x5b5bd8dbf5a9: winter_verifier::verify (verifier/src/lib.rs:95:32)",
"0x5b5bd8ec8bb8: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:510:13)",
"0x5b5bd8d25484: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x5b5bd91af739: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5b5bd91bbb7b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5b5bd91bb5f1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5b5bd91b7bbb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5b5bd91b166d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5b5bd91ac538: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5b5bd91aadd7: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5b5bd8e6c018: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x5b5bd8e11210: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:197:28)",
"0x5b5bd8edb911: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8edb911: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8edb911: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8edb911: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa6f1b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8fa2516: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8bec20b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8c73bd7: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x5b5bd8d3dbd9: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:82:31)",
"0x5b5bd8c13553: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5b5bd91a3012: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b5bd91a41a9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b5bd91a5878: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b5bd919bc1a: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:13)",
"0x5b5bd92005ca: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd9201bbc: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd9201bbc: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd9201bbc: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5b5bd92027fc: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5b5bd92027fc: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5b5bd92027fc: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5b5bd91ffe2c: <winter_utils::serde::byte_reader::SliceReader as winter_utils::serde::byte_reader::ByteReader>::read_vec (src/serde/byte_reader.rs:151:22)",
"0x5b5bd919fa1e: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:168:21)",
"0x5b5bd919ae38: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:176:34)",
"0x5b5bd8f07c51: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8f07c51: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8f07c51: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8f07c51: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa5f6b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8fa0a96: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8bed53b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8c73a47: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x5b5bd8d66a9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd90050c6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd90050c6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd90050c6: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x5b5bd8f8c039: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5b5bd8f8c039: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5b5bd8f8c039: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5b5bd8e14ca3: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x5b5bd8fc51ab: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x5b5bd8fc4696: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x5b5bd8c588e9: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:641:17)",
"0x5b5bd8d5e7bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd8f0bb27: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8f0bb27: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8f0bb27: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8f0bb27: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8f84b76: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5b5bd8f9eba7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8bedd6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8e7cd5b: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x5b5bd8e82eb0: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x5b5bd8e3b8ba: winter_prover::Prover::generate_proof (prover/src/lib.rs:257:22)",
"0x5b5bd8fe2580: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x5b5bd8e3d868: winter_prover::Prover::generate_proof (prover/src/lib.rs:514:9)",
"0x5b5bd8e6ff58: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8e6ff58: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8e6ff58: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x5b5bd8f8ac17: alloc::vec::from_elem (src/vec/mod.rs:2627:5)",
"0x5b5bd8faf698: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x5b5bd8e75b07: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x5b5bd8e7fcb4: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x5b5bd9200d49: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x5b5bd91a6d7a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x5b5bd8d3e670: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:40:22)",
"0x5b5bd903a6e7: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:13)",
"0x5b5bd8e3fb32: winter_prover::Prover::generate_proof (prover/src/lib.rs:403:21)",
"0x5b5bd8c5b53c: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x5b5bd8e8fbf6: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x5b5bd8e1fb27: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x5b5bd8e1d8cd: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x5b5bd8d96152: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b5bd8d9f389: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b5bd8f77ff2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b5bd9074f89: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x5b5bd91a4784: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:155:27)",
"0x5b5bd919b178: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:29)",
"0x5b5bd8ee0227: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8ee0227: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8ee0227: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8ee0227: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa623e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8f9dd47: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8beebee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8e9010f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x5b5bd9037f6c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:148:31)",
"0x5b5bd903b9e0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:122:17)",
"0x5b5bd8d1b436: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5b5bd91a45bd: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:151:28)",
"0x5b5bd91a0dc4: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:361:22)",
"0x5b5bd91a03d6: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:146:27)",
"0x5b5bd8faee5d: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x5b5bd8fb2406: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x5b5bd8fc0940: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x5b5bd8ed76b1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8ed76b1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8ed76b1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8ed76b1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa571b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8f9ee16: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8bee23b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8c61409: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x5b5bd8f00111: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8f00111: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8f00111: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8f00111: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa59fb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8f9ecc6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8bed86b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8d3da5c: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:82:9)",
"0x5b5bd8ffcca7: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x5b5bd8c8877b: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x5b5bd8c7423c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x5b5bd8fc0872: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x5b5bd8e513dd: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:659:26)",
"0x5b5bd8e3bc88: winter_prover::Prover::generate_proof (prover/src/lib.rs:268:13)",
"0x5b5bd8fbe7a5: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x5b5bd8e598e7: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:706:26)",
"0x5b5bd8e3d110: winter_prover::Prover::generate_proof (prover/src/lib.rs:472:37)",
"0x5b5bd8fcf8ce: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x5b5bd8d67a5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd8ed69a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8ed69a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8ed69a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8ed69a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa871e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8f9b517: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8bed37e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8e8ff51: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x5b5bd9200d18: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x5b5bd920200a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x5b5bd920200a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x5b5bd9201dae: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:2032:9)",
"0x5b5bd9201dae: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x5b5bd9201e9d: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2479:9)",
"0x5b5bd8fba1a4: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x5b5bd8db6cbe: winter_verifier::perform_verification (verifier/src/lib.rs:314:25)",
"0x5b5bd8e71df4: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x5b5bd8e71ad6: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x5b5bd91fbd9e: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x5b5bd8c737d0: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x5b5bd8d5f4bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd8f124c8: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8f124c8: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8f124c8: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8f124c8: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5b5bd8fa972e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8fa0407: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd908917e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8ecce5c: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x5b5bd8d6194c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd8ed5ae7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8ed5ae7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8ed5ae7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8ed5ae7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa753e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8fa1d37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8bedd4e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8e5d619: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces (src/do_work/prover.rs:30:9)",
"0x5b5bd8fc326a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x5b5bd8fc0903: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x5b5bd91a42bd: <winter_air::proof::commitments::Commitments as winter_utils::serde::Deserializable>::read_from (src/proof/commitments.rs:108:22)",
"0x5b5bd919abdc: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:167:27)",
"0x5b5bd900441a: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x5b5bd8ecc5ae: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x5b5bd8c8a89d: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x5b5bd8ecbcce: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x5b5bd8ece6c6: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x5b5bd8ec19ea: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:362:9)",
"0x5b5bd8ca8303: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x5b5bd9074c25: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x5b5bd8c74cae: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x5b5bd8fb6693: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x5b5bd8eda197: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8eda197: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8eda197: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8eda197: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa8f6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8f9a599: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8bedc6e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8fbbe47: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x5b5bd9005440: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x5b5bd8d5d01c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd8eefee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8eefee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8eefee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8eefee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8f7fbcf: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5b5bd8f9d849: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8bece5e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8dbf784: winter_verifier::verify (verifier/src/lib.rs:101:24)",
"0x5b5bd8f06637: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8f06637: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8f06637: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8f06637: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa9ade: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8fa24b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8becd0e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8e3be32: winter_prover::Prover::generate_proof (prover/src/lib.rs:286:23)",
"0x5b5bd8effee7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8effee7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8effee7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8effee7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa5dde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8f9cc57: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8bef47e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd9004994: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x5b5bd8fbe866: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x5b5bd8e594e4: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:691:36)",
"0x5b5bd8fff42f: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x5b5bd8fff504: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x5b5bd90064cb: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x5b5bd8ff4524: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x5b5bd8c61583: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x5b5bd8f1b556: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8f1b556: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8f1b556: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8fe9782: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x5b5bd8e3eace: winter_prover::Prover::generate_proof (prover/src/lib.rs:593:29)",
"0x5b5bd91016ac: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd91016ac: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd91016ac: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5b5bd90d24a9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5b5bd90d24a9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5b5bd90d24a9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5b5bd8da4f79: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x5b5bd8d5c83c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd8f1b786: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8f1b786: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8f1b786: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8e3bf85: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:39)",
"0x5b5bd8e1fe42: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::new (src/do_work/air.rs:35:23)",
"0x5b5bd8dc08d1: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:101:85)",
"0x5b5bd8c11432: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5b5bd8d2dc0a: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:107:27)",
"0x5b5bd8c4abff: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5b5bd8d2b9a4: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:113:9)",
"0x5b5bd8e6f7e9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x5b5bd8da0f24: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x5b5bd8ff4152: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x5b5bd8fe9c60: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x5b5bd91bb9cb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5b5bd91bb6a1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5b5bd91b7c9b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5b5bd91b2471: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5b5bd91b2af7: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5b5bd91ad72b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5b5bd8fce6ed: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x5b5bd8d6266c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd8f1ae1c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8f1ae1c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8f1ae1c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5b5bd8f8be79: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5b5bd8f8be79: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5b5bd8f8be79: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5b5bd8e3d6be: winter_prover::Prover::generate_proof (prover/src/lib.rs:500:39)",
"0x5b5bd8d72982: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b5bd8d9ec39: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b5bd8f77a51: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b5bd8e176c9: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x5b5bd8d1b30d: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:254:21)",
"0x5b5bd8faff53: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x5b5bd908c495: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x5b5bd8c5ec8d: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x5b5bd8dbc869: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:214:32)",
"0x5b5bd8c01603: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5b5bd8fdc02b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5b5bd8fdb681: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5b5bd8def12b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5b5bd8dc48bd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5b5bd8c8df89: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5b5bd8e69a00: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5b5bd8f1bb46: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8f1bb46: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8f1bb46: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd906e35d: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x5b5bd919fec9: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:352:21)",
"0x5b5bd919ae53: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:174:32)",
"0x5b5bd8c9023f: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x5b5bd8c90307: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5b5bd8db7156: winter_verifier::perform_verification (verifier/src/lib.rs:225:13)",
"0x5b5bd90049a3: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x5b5bd908882c: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x5b5bd8d8d712: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b5bd8d9f149: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b5bd8f76122: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b5bd8e75c91: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x5b5bd8fb6bd0: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x5b5bd8c5ecb0: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x5b5bd8e19f48: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x5b5bd8e11723: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:200:34)",
"0x5b5bd8c00b0a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5b5bd8cd41bf: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5b5bd8ec22c9: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:534:17)",
"0x5b5bd8fff5d7: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x5b5bd9074e0b: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x5b5bd8fb7848: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x5b5bd8efb9d1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8efb9d1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8efb9d1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8efb9d1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa7cfb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8fa0026: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8bee64b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8c73c9f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x5b5bd8e19ca7: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x5b5bd8e3cc77: winter_prover::Prover::generate_proof (prover/src/lib.rs:442:35)",
"0x5b5bd91bbd2b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5b5bd91bb751: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5b5bd91b7adb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5b5bd91b476e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5b5bd91b6220: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5b5bd91b5428: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5b5bd8d9bf22: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b5bd8d9efc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b5bd8f78aaf: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b5bd8ff45d9: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x5b5bd8c6f2ac: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x5b5bd8db6810: winter_verifier::perform_verification (verifier/src/lib.rs:302:9)",
"0x5b5bd8fba3d9: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x5b5bd8f13907: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8f13907: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8f13907: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8f13907: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa6fde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8fa0627: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8beb93e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8c1ed54: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:112:30)",
"0x5b5bd8ebbd61: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x5b5bd8db633e: winter_verifier::perform_verification (verifier/src/lib.rs:272:24)",
"0x5b5bd8d64b1c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd8eed7cf: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8eed7cf: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8eed7cf: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8eed7cf: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5b5bd8fa886e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8f9a947: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8bebe8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8ecbbf6: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x5b5bd8f19067: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5b5bd8e75a53: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x5b5bd8fafa2c: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x5b5bd8d4bd7b: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x5b5bd91ad8ba: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd91ae1a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd91ae1a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd91ae1a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd91ae1a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5b5bd91ae5ee: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd91ae5b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd91af84e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd91ad299: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x5b5bd8ca7d3b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x5b5bd9066e2b: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:67:22)",
"0x5b5bd8fbd76a: winter_prover::matrix::row_matrix::build_segments::{{closure}} (src/matrix/row_matrix.rs:307:18)",
"0x5b5bd8c04c7a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5b5bd91a1187: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:330:18)",
"0x5b5bd919ffed: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:357:24)",
"0x5b5bd8ed6141: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8ed6141: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8ed6141: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8ed6141: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa8f9b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8f9d346: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8beb88b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8e3b4e3: winter_prover::Prover::generate_proof (prover/src/lib.rs:209:39)",
"0x5b5bd8d27a1e: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x5b5bd8e3ebc5: winter_prover::Prover::generate_proof (prover/src/lib.rs:598:34)",
"0x5b5bd8e1fd16: <examples::do_work::air::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (src/do_work/air.rs:13:9)",
"0x5b5bd8c51b09: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:211:31)",
"0x5b5bd8c08d3a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5b5bd8cf90a8: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:232:27)",
"0x5b5bd8bd23ba: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:125:9)",
"0x5b5bd8bf263a: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:858:9)",
"0x5b5bd8fe22ef: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x5b5bd91a9b6c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd91a9b6c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd91a9b6c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5b5bd91a962c: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5b5bd91a962c: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5b5bd91a962c: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x5b5bd9080c77: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x5b5bd91a5118: <winter_air::proof::context::Context as winter_utils::serde::Deserializable>::read_from (src/proof/context.rs:184:35)",
"0x5b5bd919abf7: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:27)",
"0x5b5bd919f862: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:164:22)",
"0x5b5bd8fba1bf: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x5b5bd8e7fc1d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x5b5bd8d6140c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd8ef0bc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8ef0bc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8ef0bc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8ef0bc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa6a9e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8fa1c79: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8bec94e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8d3e77a: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:50:26)",
"0x5b5bd8d53629: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x5b5bd8ef9f37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8ef9f37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8ef9f37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8ef9f37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa92be: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8fa22d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8bec4de: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8e112c4: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:198:23)",
"0x5b5bd9084ab6: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x5b5bd8e71b12: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x5b5bd8ff3d42: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x5b5bd903b4c0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:28)",
"0x5b5bd8d5991c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd8ee3dc7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8ee3dc7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8ee3dc7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8ee3dc7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8f856b3: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:237:20)",
"0x5b5bd8f9abc9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8bed01e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8e3bf62: winter_prover::Prover::generate_proof (prover/src/lib.rs:291:36)",
"0x5b5bd8e1b7d0: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x5b5bd903b819: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:129:9)",
"0x5b5bd8e7201f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x5b5bd8d29f5f: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x5b5bd8ee9666: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8ee9666: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8ee9666: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8ee9666: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5b5bd8fa5b6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8f9e5dc: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8fad9be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8fafedb: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x5b5bd8dc9d31: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5b5bd8dcd477: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5b5bd8dc21bb: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5b5bd91b487e: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5b5bd91b5c4c: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5b5bd91b4d8a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5b5bd8d6070a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd8f05ba1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8f05ba1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8f05ba1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8f05ba1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa8b3b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8fa00b6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8bec6cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8e3bc5d: winter_prover::Prover::generate_proof (prover/src/lib.rs:266:43)",
"0x5b5bd8e3f665: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:17)",
"0x5b5bd908c6eb: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x5b5bd9190e7a: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd910157c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd910157c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd910157c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x5b5bd90d1cc9: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x5b5bd90d1cc9: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x5b5bd90d1cc9: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2723:9)",
"0x5b5bd8ec0e3f: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x5b5bd8fd01f6: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5b5bd8c74c48: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x5b5bd9074caa: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x5b5bd8ed0c21: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8ed0c21: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8ed0c21: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8ed0c21: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa73ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8f9aac6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8bef01b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8e3d6a3: winter_prover::Prover::generate_proof (prover/src/lib.rs:495:52)",
"0x5b5bd8db66c1: winter_verifier::perform_verification (verifier/src/lib.rs:295:27)",
"0x5b5bd8d8dc02: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b5bd8d9ecc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b5bd8f78d48: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b5bd8e3fbf6: winter_prover::Prover::generate_proof (prover/src/lib.rs:408:17)",
"0x5b5bd8ef2107: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8ef2107: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8ef2107: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8ef2107: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa74fe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8fa14b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8bee86e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8eb7d8f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x5b5bd8ec8c93: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:505:13)",
"0x5b5bd9088983: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x5b5bd8fd0bc2: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x5b5bd8e6e240: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x5b5bd8fe4bb1: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x5b5bd8ed9541: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8ed9541: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8ed9541: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8ed9541: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa790b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8f9d276: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8bed45b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8c73b0f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x5b5bd8b88149: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:241:9)",
"0x5b5bd8b86c19: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:521:9)",
"0x5b5bd8b85030: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b5bd8b85298: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:305:28)",
"0x5b5bd8b84b5a: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:309:13)",
"0x5b5bd8b84b5a: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:911:18)",
"0x5b5bd8a796a1: alloc::string::String::reserve (alloc/src/string.rs:1152:9)",
"0x5b5bd8a796a1: <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend (alloc/src/string.rs:2173:14)",
"0x5b5bd8a7977c: <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter (alloc/src/string.rs:2093:9)",
"0x5b5bd8ef1877: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8ef1877: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8ef1877: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8ef1877: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa670e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8fa2317: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8beeace: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8fba532: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x5b5bd91a3502: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b5bd91a4179: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b5bd91a5ae2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b5bd919b916: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:13)",
"0x5b5bd8d59e5c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd8f05771: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8f05771: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8f05771: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8f05771: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa60cb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8f9f9c6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8bec0cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8e16e5a: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x5b5bd8e85a48: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x5b5bd8e8fdda: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x5b5bd8fc74a2: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x5b5bd8fc6147: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5b5bd8e50df7: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:645:31)",
"0x5b5bd8d67f9c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd8ee5d37: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8ee5d37: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8ee5d37: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8ee5d37: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa726e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8f9a6a7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8becdde: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8e50d43: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:638:34)",
"0x5b5bd91bb81b: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5b5bd91bb541: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5b5bd91b7d7b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x5b5bd91b23a1: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x5b5bd91b2b37: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x5b5bd91ad6db: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x5b5bd8d4bf3a: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x5b5bd908c6d0: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x5b5bd8d8e5e2: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b5bd8d9f209: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b5bd8f790e2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b5bd8c7549b: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x5b5bd8ef2781: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8ef2781: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8ef2781: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8ef2781: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa7dab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8f9c306: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8bec09b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8e50c73: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:634:36)",
"0x5b5bd9037fd0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:149:33)",
"0x5b5bd8fc33df: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:226:50)",
"0x5b5bd8fe1ea2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x5b5bd8c9f511: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:132:51)",
"0x5b5bd8c01a1a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5b5bd9044da5: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5b5bd8eeb7f7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8eeb7f7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8eeb7f7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8eeb7f7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa7b7e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8fa1f39: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8bec0ee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8e3b603: winter_prover::Prover::generate_proof (prover/src/lib.rs:217:20)",
"0x5b5bd8c57bb0: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:221:17)",
"0x5b5bd8c02922: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5b5bd90314dd: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::SpecFold>::spec_fold (iter/adapters/zip.rs:685:25)",
"0x5b5bd901dee7: <core::iter::adapters::zip::Zip<A,B> as core::iter::adapters::zip::ZipImpl<A,B>>::fold (iter/adapters/zip.rs:249:9)",
"0x5b5bd90089b7: <core::iter::adapters::zip::Zip<A,B> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/zip.rs:103:9)",
"0x5b5bd8ff88e0: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x5b5bd908c65e: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x5b5bd8db59d9: winter_verifier::perform_verification (verifier/src/lib.rs:183:13)",
"0x5b5bd8d77392: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b5bd8d9ea59: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b5bd8f73b42: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b5bd8d410d9: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:174:17)",
"0x5b5bd8d3ef30: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:54:17)",
"0x5b5bd8d5d2bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd8f15ffe: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8f15ffe: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8f15ffe: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8f15ffe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5b5bd8fa743b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8f9eb76: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd904010b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8c6d01c: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x5b5bd91b16cd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5b5bd91ac84b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5b5bd91aaf13: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5b5bd9061103: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x5b5bd9066e40: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x5b5bd8ed47e7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8ed47e7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8ed47e7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8ed47e7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa873e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8f9e7f7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8bef32e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8e10d13: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:253:9)",
"0x5b5bd8ffca9a: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x5b5bd90055ed: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x5b5bd8fc5c77: winter_prover::matrix::row_matrix::transpose (src/matrix/row_matrix.rs:327:31)",
"0x5b5bd8fbdc8c: winter_prover::matrix::row_matrix::RowMatrix<E>::from_segments (src/matrix/row_matrix.rs:125:22)",
"0x5b5bd8fc47bc: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:97:9)",
"0x5b5bd8c753ef: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x5b5bd9087cb7: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x5b5bd9039a27: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:272:18)",
"0x5b5bd9038297: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:166:30)",
"0x5b5bd8dbf718: winter_verifier::verify (verifier/src/lib.rs:97:38)",
"0x5b5bd8e3f808: winter_prover::Prover::generate_proof (prover/src/lib.rs:440:13)",
"0x5b5bd8fb3af6: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x5b5bd8db6d3a: winter_verifier::perform_verification (verifier/src/lib.rs:316:28)",
"0x5b5bd8d5d55c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd8f071c7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8f071c7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8f071c7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8f071c7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa606e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8f9b2c7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8d3942e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8e3b79f: winter_prover::Prover::generate_proof (prover/src/lib.rs:243:41)",
"0x5b5bd8fe26ec: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x5b5bd8fe2312: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x5b5bd8e6b81d: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x5b5bd8e3df26: winter_prover::Prover::generate_proof (prover/src/lib.rs:548:13)",
"0x5b5bd919fd02: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:348:22)",
"0x5b5bd91a08d2: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:215:25)",
"0x5b5bd8d97022: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b5bd8d9f9e9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b5bd8f76842: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b5bd8db7673: winter_verifier::perform_verification (verifier/src/lib.rs:177:9)",
"0x5b5bd91adda0: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b5bd91a95f9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b5bd91a85a1: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b5bd91a8eb0: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x5b5bd9080e9d: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x5b5bd8fdc6eb: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5b5bd8fdb891: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5b5bd8deef4b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5b5bd8dc49dd: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5b5bd8c8d83f: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5b5bd8e696c3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:988:17)",
"0x5b5bd8e14d84: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x5b5bd8d79622: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b5bd8d9f839: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b5bd8f78252: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b5bd8fe9db8: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x5b5bd8f0d451: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8f0d451: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8f0d451: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8f0d451: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa67db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8f9b136: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8bec65b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8c7397f: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x5b5bd8f04f40: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8f04f40: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8f04f40: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8f04f40: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x5b5bd8fa714b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8f9e8a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8beb27b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8ffcbca: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x5b5bd906108f: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x5b5bd906a01d: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x5b5bd8d64dbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd8ed33c1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8ed33c1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8ed33c1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8ed33c1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa89db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8f9bd06: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8bedeab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8db5d9f: winter_verifier::perform_verification (verifier/src/lib.rs:216:40)",
"0x5b5bd90613fb: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x5b5bd8d40f72: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:169:36)",
"0x5b5bd8e17be1: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x5b5bd8e1a211: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x5b5bd8d3b9d0: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x5b5bd8c73e38: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x5b5bd90347eb: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:39:30)",
"0x5b5bd8e6b833: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x5b5bd8f0e9a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8f0e9a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8f0e9a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8f0e9a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa93de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8fa04c9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8beeede: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8c9b5e0: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x5b5bd8f8aebb: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8f8aebb: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8f8aebb: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8f8aebb: <[V] as alloc::slice::Concat<T>>::concat (alloc/src/slice.rs:712:26)",
"0x5b5bd8f8acab: alloc::slice::<impl [T]>::concat (alloc/src/slice.rs:561:9)",
"0x5b5bd8e79199: winter_prover::trace::commitment::build_segment_queries::{{closure}}::{{closure}} (src/trace/commitment.rs:164:27)",
"0x5b5bd8e77736: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:159:13)",
"0x5b5bd91a96b6: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x5b5bd8e8fb2b: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x5b5bd8fb789e: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x5b5bd8c9022a: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x5b5bd91a0f46: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:365:21)",
"0x5b5bd8f1b466: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8f1b466: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8f1b466: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8e3c051: winter_prover::Prover::generate_proof (prover/src/lib.rs:301:32)",
"0x5b5bd8e12f17: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:89:9)",
"0x5b5bd8c525ac: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:293:57)",
"0x5b5bd8d4bd36: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x5b5bd9084c0e: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x5b5bd9082104: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x5b5bd8e3e38b: winter_prover::Prover::generate_proof (prover/src/lib.rs:561:9)",
"0x5b5bd8fc3476: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:228:38)",
"0x5b5bd8fe2810: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x5b5bd8d58c0c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd8efab31: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8efab31: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8efab31: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8efab31: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa80ab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8f9c5a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8bede5b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8d27967: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x5b5bd8e8fa4e: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x5b5bd8d5bdbc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd8eff127: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8eff127: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8eff127: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8eff127: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa601e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8f9c6b7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8beefae: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8fbce38: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x5b5bd8edc5b7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8edc5b7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8edc5b7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8edc5b7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa5b0e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8f9da37: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8bed2be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8e75c76: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x5b5bd9004299: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x5b5bd8e16db1: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x5b5bd8c064aa: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:85:28)",
"0x5b5bd9046a05: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2640:21)",
"0x5b5bd8e8f1a5: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x5b5bd8fc3527: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:228:37)",
"0x5b5bd8fce835: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x5b5bd8d241d0: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x5b5bd906a95b: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x5b5bd8e719cc: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x5b5bd8e3f7ad: winter_prover::Prover::generate_proof (prover/src/lib.rs:438:13)",
"0x5b5bd8e3f7ed: winter_prover::Prover::generate_proof (prover/src/lib.rs:439:13)",
"0x5b5bd8ee1777: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8ee1777: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8ee1777: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8ee1777: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x5b5bd8fa62de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x5b5bd8fa2697: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2791:9)",
"0x5b5bd8beeb8e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:2054:9)",
"0x5b5bd8e8f131: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x5b5bd91a275c: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd91a5726: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd91a5726: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd91a5726: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd919ad52: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:172:33)",
"0x5b5bd8d3b7fb: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x5b5bd8da6191: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x5b5bd8ff89fc: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x5b5bd8fb6755: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:144:35)",
"0x5b5bd8e1b83e: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x5b5bd8ec0e2a: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x5b5bd8fb6853: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x5b5bd8d83912: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:433:19)",
"0x5b5bd8d9f119: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:318:24)",
"0x5b5bd8f7494f: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1919:13)",
"0x5b5bd8fafd8a: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x5b5bd8ca1598: winter_prover::trace::Trace::validate (src/trace/mod.rs:177:13)",
"0x5b5bd8d677bc: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:199:45)",
"0x5b5bd8f1b876: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:145:9)",
"0x5b5bd8f1b876: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:672:20)",
"0x5b5bd8f1b876: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:481:9)",
"0x5b5bd8e3bfc9: winter_prover::Prover::generate_proof (prover/src/lib.rs:299:44)",
"0x5b5bd8fdcdab: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:486:13)",
"0x5b5bd8fdb7e1: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x5b5bd8def4eb: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x5b5bd8dc479d: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x5b5bd8c8d0fc: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x5b5bd8c8a911: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x5b5bd8ddad8f: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x5b5bd8de6711: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x5b5bd8de1caa: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x5b5bd8fff51a: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)"
]
}